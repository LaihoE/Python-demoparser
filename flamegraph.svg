<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1398" onload="init(evt)" viewBox="0 0 1200 1398" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1398" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1381.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1381.00"> </text><svg id="frames" x="10" width="1180" total_samples="934"><g><title>[[stack]] (3 samples, 0.32%)</title><rect x="0.0000%" y="1317" width="0.3212%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1327.50"></text></g><g><title>[libc.so.6] (3 samples, 0.32%)</title><rect x="0.0000%" y="1301" width="0.3212%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1311.50"></text></g><g><title>[unknown] (3 samples, 0.32%)</title><rect x="0.0000%" y="1285" width="0.3212%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1295.50"></text></g><g><title>[unknown] (5 samples, 0.54%)</title><rect x="0.3212%" y="1301" width="0.5353%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="5"/><text x="0.5712%" y="1311.50"></text></g><g><title>[unknown] (5 samples, 0.54%)</title><rect x="0.3212%" y="1285" width="0.5353%" height="15" fill="rgb(208,68,35)" fg:x="3" fg:w="5"/><text x="0.5712%" y="1295.50"></text></g><g><title>[unknown] (5 samples, 0.54%)</title><rect x="0.3212%" y="1269" width="0.5353%" height="15" fill="rgb(232,128,0)" fg:x="3" fg:w="5"/><text x="0.5712%" y="1279.50"></text></g><g><title>[unknown] (5 samples, 0.54%)</title><rect x="0.3212%" y="1253" width="0.5353%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="5"/><text x="0.5712%" y="1263.50"></text></g><g><title>[unknown] (5 samples, 0.54%)</title><rect x="0.3212%" y="1237" width="0.5353%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="5"/><text x="0.5712%" y="1247.50"></text></g><g><title>[unknown] (5 samples, 0.54%)</title><rect x="0.3212%" y="1221" width="0.5353%" height="15" fill="rgb(218,30,26)" fg:x="3" fg:w="5"/><text x="0.5712%" y="1231.50"></text></g><g><title>[unknown] (5 samples, 0.54%)</title><rect x="0.3212%" y="1205" width="0.5353%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="5"/><text x="0.5712%" y="1215.50"></text></g><g><title>[unknown] (5 samples, 0.54%)</title><rect x="0.3212%" y="1189" width="0.5353%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="5"/><text x="0.5712%" y="1199.50"></text></g><g><title>[unknown] (5 samples, 0.54%)</title><rect x="0.3212%" y="1173" width="0.5353%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="5"/><text x="0.5712%" y="1183.50"></text></g><g><title>[unknown] (5 samples, 0.54%)</title><rect x="0.3212%" y="1157" width="0.5353%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="5"/><text x="0.5712%" y="1167.50"></text></g><g><title>[unknown] (5 samples, 0.54%)</title><rect x="0.3212%" y="1141" width="0.5353%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="5"/><text x="0.5712%" y="1151.50"></text></g><g><title>[unknown] (4 samples, 0.43%)</title><rect x="0.4283%" y="1125" width="0.4283%" height="15" fill="rgb(217,207,13)" fg:x="4" fg:w="4"/><text x="0.6783%" y="1135.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="0.6424%" y="1109" width="0.2141%" height="15" fill="rgb(231,73,38)" fg:x="6" fg:w="2"/><text x="0.8924%" y="1119.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="0.6424%" y="1093" width="0.2141%" height="15" fill="rgb(225,20,46)" fg:x="6" fg:w="2"/><text x="0.8924%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="0.7495%" y="1077" width="0.1071%" height="15" fill="rgb(210,31,41)" fg:x="7" fg:w="1"/><text x="0.9995%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="0.7495%" y="1061" width="0.1071%" height="15" fill="rgb(221,200,47)" fg:x="7" fg:w="1"/><text x="0.9995%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="0.7495%" y="1045" width="0.1071%" height="15" fill="rgb(226,26,5)" fg:x="7" fg:w="1"/><text x="0.9995%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="0.7495%" y="1029" width="0.1071%" height="15" fill="rgb(249,33,26)" fg:x="7" fg:w="1"/><text x="0.9995%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="0.7495%" y="1013" width="0.1071%" height="15" fill="rgb(235,183,28)" fg:x="7" fg:w="1"/><text x="0.9995%" y="1023.50"></text></g><g><title>[unknown] (6 samples, 0.64%)</title><rect x="0.3212%" y="1317" width="0.6424%" height="15" fill="rgb(221,5,38)" fg:x="3" fg:w="6"/><text x="0.5712%" y="1327.50"></text></g><g><title>mi_page_free_list_extend (1 samples, 0.11%)</title><rect x="0.8565%" y="1301" width="0.1071%" height="15" fill="rgb(247,18,42)" fg:x="8" fg:w="1"/><text x="1.1065%" y="1311.50"></text></g><g><title>mi_block_set_next (1 samples, 0.11%)</title><rect x="0.8565%" y="1285" width="0.1071%" height="15" fill="rgb(241,131,45)" fg:x="8" fg:w="1"/><text x="1.1065%" y="1295.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.11%)</title><rect x="0.8565%" y="1269" width="0.1071%" height="15" fill="rgb(249,31,29)" fg:x="8" fg:w="1"/><text x="1.1065%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="0.8565%" y="1253" width="0.1071%" height="15" fill="rgb(225,111,53)" fg:x="8" fg:w="1"/><text x="1.1065%" y="1263.50"></text></g><g><title>__GI_exit (40 samples, 4.28%)</title><rect x="0.9636%" y="1269" width="4.2827%" height="15" fill="rgb(238,160,17)" fg:x="9" fg:w="40"/><text x="1.2136%" y="1279.50">__GI_..</text></g><g><title>__run_exit_handlers (40 samples, 4.28%)</title><rect x="0.9636%" y="1253" width="4.2827%" height="15" fill="rgb(214,148,48)" fg:x="9" fg:w="40"/><text x="1.2136%" y="1263.50">__run..</text></g><g><title>mi_process_done (40 samples, 4.28%)</title><rect x="0.9636%" y="1237" width="4.2827%" height="15" fill="rgb(232,36,49)" fg:x="9" fg:w="40"/><text x="1.2136%" y="1247.50">mi_pr..</text></g><g><title>mi_process_done (40 samples, 4.28%)</title><rect x="0.9636%" y="1221" width="4.2827%" height="15" fill="rgb(209,103,24)" fg:x="9" fg:w="40"/><text x="1.2136%" y="1231.50">mi_pr..</text></g><g><title>mi_heap_collect_ex (40 samples, 4.28%)</title><rect x="0.9636%" y="1205" width="4.2827%" height="15" fill="rgb(229,88,8)" fg:x="9" fg:w="40"/><text x="1.2136%" y="1215.50">mi_he..</text></g><g><title>mi_segment_cache_purge (40 samples, 4.28%)</title><rect x="0.9636%" y="1189" width="4.2827%" height="15" fill="rgb(213,181,19)" fg:x="9" fg:w="40"/><text x="1.2136%" y="1199.50">mi_se..</text></g><g><title>mi_commit_mask_decommit (40 samples, 4.28%)</title><rect x="0.9636%" y="1173" width="4.2827%" height="15" fill="rgb(254,191,54)" fg:x="9" fg:w="40"/><text x="1.2136%" y="1183.50">mi_co..</text></g><g><title>_mi_os_decommit (40 samples, 4.28%)</title><rect x="0.9636%" y="1157" width="4.2827%" height="15" fill="rgb(241,83,37)" fg:x="9" fg:w="40"/><text x="1.2136%" y="1167.50">_mi_o..</text></g><g><title>mi_os_commitx (40 samples, 4.28%)</title><rect x="0.9636%" y="1141" width="4.2827%" height="15" fill="rgb(233,36,39)" fg:x="9" fg:w="40"/><text x="1.2136%" y="1151.50">mi_os..</text></g><g><title>__GI_madvise (40 samples, 4.28%)</title><rect x="0.9636%" y="1125" width="4.2827%" height="15" fill="rgb(226,3,54)" fg:x="9" fg:w="40"/><text x="1.2136%" y="1135.50">__GI_..</text></g><g><title>[unknown] (40 samples, 4.28%)</title><rect x="0.9636%" y="1109" width="4.2827%" height="15" fill="rgb(245,192,40)" fg:x="9" fg:w="40"/><text x="1.2136%" y="1119.50">[unkn..</text></g><g><title>[unknown] (40 samples, 4.28%)</title><rect x="0.9636%" y="1093" width="4.2827%" height="15" fill="rgb(238,167,29)" fg:x="9" fg:w="40"/><text x="1.2136%" y="1103.50">[unkn..</text></g><g><title>[unknown] (40 samples, 4.28%)</title><rect x="0.9636%" y="1077" width="4.2827%" height="15" fill="rgb(232,182,51)" fg:x="9" fg:w="40"/><text x="1.2136%" y="1087.50">[unkn..</text></g><g><title>[unknown] (40 samples, 4.28%)</title><rect x="0.9636%" y="1061" width="4.2827%" height="15" fill="rgb(231,60,39)" fg:x="9" fg:w="40"/><text x="1.2136%" y="1071.50">[unkn..</text></g><g><title>[unknown] (40 samples, 4.28%)</title><rect x="0.9636%" y="1045" width="4.2827%" height="15" fill="rgb(208,69,12)" fg:x="9" fg:w="40"/><text x="1.2136%" y="1055.50">[unkn..</text></g><g><title>[unknown] (40 samples, 4.28%)</title><rect x="0.9636%" y="1029" width="4.2827%" height="15" fill="rgb(235,93,37)" fg:x="9" fg:w="40"/><text x="1.2136%" y="1039.50">[unkn..</text></g><g><title>[unknown] (40 samples, 4.28%)</title><rect x="0.9636%" y="1013" width="4.2827%" height="15" fill="rgb(213,116,39)" fg:x="9" fg:w="40"/><text x="1.2136%" y="1023.50">[unkn..</text></g><g><title>[unknown] (40 samples, 4.28%)</title><rect x="0.9636%" y="997" width="4.2827%" height="15" fill="rgb(222,207,29)" fg:x="9" fg:w="40"/><text x="1.2136%" y="1007.50">[unkn..</text></g><g><title>[unknown] (40 samples, 4.28%)</title><rect x="0.9636%" y="981" width="4.2827%" height="15" fill="rgb(206,96,30)" fg:x="9" fg:w="40"/><text x="1.2136%" y="991.50">[unkn..</text></g><g><title>[unknown] (21 samples, 2.25%)</title><rect x="2.9979%" y="965" width="2.2484%" height="15" fill="rgb(218,138,4)" fg:x="28" fg:w="21"/><text x="3.2479%" y="975.50">[..</text></g><g><title>[unknown] (20 samples, 2.14%)</title><rect x="3.1049%" y="949" width="2.1413%" height="15" fill="rgb(250,191,14)" fg:x="29" fg:w="20"/><text x="3.3549%" y="959.50">[..</text></g><g><title>[unknown] (18 samples, 1.93%)</title><rect x="3.3191%" y="933" width="1.9272%" height="15" fill="rgb(239,60,40)" fg:x="31" fg:w="18"/><text x="3.5691%" y="943.50">[..</text></g><g><title>[unknown] (15 samples, 1.61%)</title><rect x="3.6403%" y="917" width="1.6060%" height="15" fill="rgb(206,27,48)" fg:x="34" fg:w="15"/><text x="3.8903%" y="927.50"></text></g><g><title>[unknown] (12 samples, 1.28%)</title><rect x="3.9615%" y="901" width="1.2848%" height="15" fill="rgb(225,35,8)" fg:x="37" fg:w="12"/><text x="4.2115%" y="911.50"></text></g><g><title>[unknown] (11 samples, 1.18%)</title><rect x="4.0685%" y="885" width="1.1777%" height="15" fill="rgb(250,213,24)" fg:x="38" fg:w="11"/><text x="4.3185%" y="895.50"></text></g><g><title>[unknown] (10 samples, 1.07%)</title><rect x="4.1756%" y="869" width="1.0707%" height="15" fill="rgb(247,123,22)" fg:x="39" fg:w="10"/><text x="4.4256%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser::Parser&gt; (1 samples, 0.11%)</title><rect x="5.2463%" y="869" width="0.1071%" height="15" fill="rgb(231,138,38)" fg:x="49" fg:w="1"/><text x="5.4963%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;memmap2::Mmap&gt;&gt; (1 samples, 0.11%)</title><rect x="5.2463%" y="853" width="0.1071%" height="15" fill="rgb(231,145,46)" fg:x="49" fg:w="1"/><text x="5.4963%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="5.2463%" y="837" width="0.1071%" height="15" fill="rgb(251,118,11)" fg:x="49" fg:w="1"/><text x="5.4963%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.11%)</title><rect x="5.2463%" y="821" width="0.1071%" height="15" fill="rgb(217,147,25)" fg:x="49" fg:w="1"/><text x="5.4963%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;memmap2::Mmap&gt; (1 samples, 0.11%)</title><rect x="5.2463%" y="805" width="0.1071%" height="15" fill="rgb(247,81,37)" fg:x="49" fg:w="1"/><text x="5.4963%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;memmap2::os::MmapInner&gt; (1 samples, 0.11%)</title><rect x="5.2463%" y="789" width="0.1071%" height="15" fill="rgb(209,12,38)" fg:x="49" fg:w="1"/><text x="5.4963%" y="799.50"></text></g><g><title>__GI___munmap (1 samples, 0.11%)</title><rect x="5.2463%" y="773" width="0.1071%" height="15" fill="rgb(227,1,9)" fg:x="49" fg:w="1"/><text x="5.4963%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="5.2463%" y="757" width="0.1071%" height="15" fill="rgb(248,47,43)" fg:x="49" fg:w="1"/><text x="5.4963%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="5.2463%" y="741" width="0.1071%" height="15" fill="rgb(221,10,30)" fg:x="49" fg:w="1"/><text x="5.4963%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="5.2463%" y="725" width="0.1071%" height="15" fill="rgb(210,229,1)" fg:x="49" fg:w="1"/><text x="5.4963%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="5.2463%" y="709" width="0.1071%" height="15" fill="rgb(222,148,37)" fg:x="49" fg:w="1"/><text x="5.4963%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="5.2463%" y="693" width="0.1071%" height="15" fill="rgb(234,67,33)" fg:x="49" fg:w="1"/><text x="5.4963%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="5.2463%" y="677" width="0.1071%" height="15" fill="rgb(247,98,35)" fg:x="49" fg:w="1"/><text x="5.4963%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="5.2463%" y="661" width="0.1071%" height="15" fill="rgb(247,138,52)" fg:x="49" fg:w="1"/><text x="5.4963%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="5.2463%" y="645" width="0.1071%" height="15" fill="rgb(213,79,30)" fg:x="49" fg:w="1"/><text x="5.4963%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="5.2463%" y="629" width="0.1071%" height="15" fill="rgb(246,177,23)" fg:x="49" fg:w="1"/><text x="5.4963%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser::ParsingOutPut&gt; (1 samples, 0.11%)</title><rect x="5.3533%" y="869" width="0.1071%" height="15" fill="rgb(230,62,27)" fg:x="50" fg:w="1"/><text x="5.6033%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;polars_core::series::Series&gt;&gt; (1 samples, 0.11%)</title><rect x="5.3533%" y="853" width="0.1071%" height="15" fill="rgb(216,154,8)" fg:x="50" fg:w="1"/><text x="5.6033%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="5.3533%" y="837" width="0.1071%" height="15" fill="rgb(244,35,45)" fg:x="50" fg:w="1"/><text x="5.6033%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;[polars_core::series::Series]&gt; (1 samples, 0.11%)</title><rect x="5.3533%" y="821" width="0.1071%" height="15" fill="rgb(251,115,12)" fg:x="50" fg:w="1"/><text x="5.6033%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_core::series::Series&gt; (1 samples, 0.11%)</title><rect x="5.3533%" y="805" width="0.1071%" height="15" fill="rgb(240,54,50)" fg:x="50" fg:w="1"/><text x="5.6033%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn polars_core::series::series_trait::SeriesTrait&gt;&gt; (1 samples, 0.11%)</title><rect x="5.3533%" y="789" width="0.1071%" height="15" fill="rgb(233,84,52)" fg:x="50" fg:w="1"/><text x="5.6033%" y="799.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="5.3533%" y="773" width="0.1071%" height="15" fill="rgb(207,117,47)" fg:x="50" fg:w="1"/><text x="5.6033%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.11%)</title><rect x="5.3533%" y="757" width="0.1071%" height="15" fill="rgb(249,43,39)" fg:x="50" fg:w="1"/><text x="5.6033%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;dyn polars_core::series::series_trait::SeriesTrait&gt; (1 samples, 0.11%)</title><rect x="5.3533%" y="741" width="0.1071%" height="15" fill="rgb(209,38,44)" fg:x="50" fg:w="1"/><text x="5.6033%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_core::chunked_array::ChunkedArray&lt;polars_core::datatypes::Int8Type&gt;&gt; (1 samples, 0.11%)</title><rect x="5.3533%" y="725" width="0.1071%" height="15" fill="rgb(236,212,23)" fg:x="50" fg:w="1"/><text x="5.6033%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::boxed::Box&lt;dyn arrow2::array::Array&gt;&gt;&gt; (1 samples, 0.11%)</title><rect x="5.3533%" y="709" width="0.1071%" height="15" fill="rgb(242,79,21)" fg:x="50" fg:w="1"/><text x="5.6033%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.11%)</title><rect x="5.3533%" y="693" width="0.1071%" height="15" fill="rgb(211,96,35)" fg:x="50" fg:w="1"/><text x="5.6033%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::get_mut_unchecked (1 samples, 0.11%)</title><rect x="5.3533%" y="677" width="0.1071%" height="15" fill="rgb(253,215,40)" fg:x="50" fg:w="1"/><text x="5.6033%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="5.3533%" y="661" width="0.1071%" height="15" fill="rgb(211,81,21)" fg:x="50" fg:w="1"/><text x="5.6033%" y="671.50"></text></g><g><title>demoparser::parsing::cache::cache_reader::ReadCache::get_player_messages (1 samples, 0.11%)</title><rect x="5.4604%" y="853" width="0.1071%" height="15" fill="rgb(208,190,38)" fg:x="51" fg:w="1"/><text x="5.7104%" y="863.50"></text></g><g><title>demoparser::parsing::cache::cache_reader::ReadCache::read_game_events (1 samples, 0.11%)</title><rect x="5.4604%" y="837" width="0.1071%" height="15" fill="rgb(235,213,38)" fg:x="51" fg:w="1"/><text x="5.7104%" y="847.50"></text></g><g><title>std::io::Read::read_to_end (1 samples, 0.11%)</title><rect x="5.4604%" y="821" width="0.1071%" height="15" fill="rgb(237,122,38)" fg:x="51" fg:w="1"/><text x="5.7104%" y="831.50"></text></g><g><title>std::io::default_read_to_end (1 samples, 0.11%)</title><rect x="5.4604%" y="805" width="0.1071%" height="15" fill="rgb(244,218,35)" fg:x="51" fg:w="1"/><text x="5.7104%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="5.4604%" y="789" width="0.1071%" height="15" fill="rgb(240,68,47)" fg:x="51" fg:w="1"/><text x="5.7104%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="5.4604%" y="773" width="0.1071%" height="15" fill="rgb(210,16,53)" fg:x="51" fg:w="1"/><text x="5.7104%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.11%)</title><rect x="5.4604%" y="757" width="0.1071%" height="15" fill="rgb(235,124,12)" fg:x="51" fg:w="1"/><text x="5.7104%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.11%)</title><rect x="5.4604%" y="741" width="0.1071%" height="15" fill="rgb(224,169,11)" fg:x="51" fg:w="1"/><text x="5.7104%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.11%)</title><rect x="5.4604%" y="725" width="0.1071%" height="15" fill="rgb(250,166,2)" fg:x="51" fg:w="1"/><text x="5.7104%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.11%)</title><rect x="5.4604%" y="709" width="0.1071%" height="15" fill="rgb(242,216,29)" fg:x="51" fg:w="1"/><text x="5.7104%" y="719.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.11%)</title><rect x="5.4604%" y="693" width="0.1071%" height="15" fill="rgb(230,116,27)" fg:x="51" fg:w="1"/><text x="5.7104%" y="703.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.11%)</title><rect x="5.4604%" y="677" width="0.1071%" height="15" fill="rgb(228,99,48)" fg:x="51" fg:w="1"/><text x="5.7104%" y="687.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.11%)</title><rect x="5.4604%" y="661" width="0.1071%" height="15" fill="rgb(253,11,6)" fg:x="51" fg:w="1"/><text x="5.7104%" y="671.50"></text></g><g><title>_mi_memcpy_aligned (1 samples, 0.11%)</title><rect x="5.4604%" y="645" width="0.1071%" height="15" fill="rgb(247,143,39)" fg:x="51" fg:w="1"/><text x="5.7104%" y="655.50"></text></g><g><title>_mi_memcpy (1 samples, 0.11%)</title><rect x="5.4604%" y="629" width="0.1071%" height="15" fill="rgb(236,97,10)" fg:x="51" fg:w="1"/><text x="5.7104%" y="639.50"></text></g><g><title>memcpy (1 samples, 0.11%)</title><rect x="5.4604%" y="613" width="0.1071%" height="15" fill="rgb(233,208,19)" fg:x="51" fg:w="1"/><text x="5.7104%" y="623.50"></text></g><g><title>[libc.so.6] (1 samples, 0.11%)</title><rect x="5.4604%" y="597" width="0.1071%" height="15" fill="rgb(216,164,2)" fg:x="51" fg:w="1"/><text x="5.7104%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="5.4604%" y="581" width="0.1071%" height="15" fill="rgb(220,129,5)" fg:x="51" fg:w="1"/><text x="5.7104%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="5.4604%" y="565" width="0.1071%" height="15" fill="rgb(242,17,10)" fg:x="51" fg:w="1"/><text x="5.7104%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="5.4604%" y="549" width="0.1071%" height="15" fill="rgb(242,107,0)" fg:x="51" fg:w="1"/><text x="5.7104%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="5.4604%" y="533" width="0.1071%" height="15" fill="rgb(251,28,31)" fg:x="51" fg:w="1"/><text x="5.7104%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="5.4604%" y="517" width="0.1071%" height="15" fill="rgb(233,223,10)" fg:x="51" fg:w="1"/><text x="5.7104%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="5.4604%" y="501" width="0.1071%" height="15" fill="rgb(215,21,27)" fg:x="51" fg:w="1"/><text x="5.7104%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="5.4604%" y="485" width="0.1071%" height="15" fill="rgb(232,23,21)" fg:x="51" fg:w="1"/><text x="5.7104%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="5.4604%" y="469" width="0.1071%" height="15" fill="rgb(244,5,23)" fg:x="51" fg:w="1"/><text x="5.7104%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="5.4604%" y="453" width="0.1071%" height="15" fill="rgb(226,81,46)" fg:x="51" fg:w="1"/><text x="5.7104%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="5.4604%" y="437" width="0.1071%" height="15" fill="rgb(247,70,30)" fg:x="51" fg:w="1"/><text x="5.7104%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="5.4604%" y="421" width="0.1071%" height="15" fill="rgb(212,68,19)" fg:x="51" fg:w="1"/><text x="5.7104%" y="431.50"></text></g><g><title>_mi_clock_now (1 samples, 0.11%)</title><rect x="5.5675%" y="709" width="0.1071%" height="15" fill="rgb(240,187,13)" fg:x="52" fg:w="1"/><text x="5.8175%" y="719.50"></text></g><g><title>__GI___clock_gettime (1 samples, 0.11%)</title><rect x="5.5675%" y="693" width="0.1071%" height="15" fill="rgb(223,113,26)" fg:x="52" fg:w="1"/><text x="5.8175%" y="703.50"></text></g><g><title>[[vdso]] (1 samples, 0.11%)</title><rect x="5.5675%" y="677" width="0.1071%" height="15" fill="rgb(206,192,2)" fg:x="52" fg:w="1"/><text x="5.8175%" y="687.50"></text></g><g><title>[[vdso]] (1 samples, 0.11%)</title><rect x="5.5675%" y="661" width="0.1071%" height="15" fill="rgb(241,108,4)" fg:x="52" fg:w="1"/><text x="5.8175%" y="671.50"></text></g><g><title>_mi_segment_page_free (2 samples, 0.21%)</title><rect x="5.5675%" y="789" width="0.2141%" height="15" fill="rgb(247,173,49)" fg:x="52" fg:w="2"/><text x="5.8175%" y="799.50"></text></g><g><title>mi_segment_page_clear (2 samples, 0.21%)</title><rect x="5.5675%" y="773" width="0.2141%" height="15" fill="rgb(224,114,35)" fg:x="52" fg:w="2"/><text x="5.8175%" y="783.50"></text></g><g><title>mi_segment_span_free_coalesce (2 samples, 0.21%)</title><rect x="5.5675%" y="757" width="0.2141%" height="15" fill="rgb(245,159,27)" fg:x="52" fg:w="2"/><text x="5.8175%" y="767.50"></text></g><g><title>mi_segment_span_free (2 samples, 0.21%)</title><rect x="5.5675%" y="741" width="0.2141%" height="15" fill="rgb(245,172,44)" fg:x="52" fg:w="2"/><text x="5.8175%" y="751.50"></text></g><g><title>mi_segment_perhaps_decommit (2 samples, 0.21%)</title><rect x="5.5675%" y="725" width="0.2141%" height="15" fill="rgb(236,23,11)" fg:x="52" fg:w="2"/><text x="5.8175%" y="735.50"></text></g><g><title>mi_commit_mask_is_empty (1 samples, 0.11%)</title><rect x="5.6745%" y="709" width="0.1071%" height="15" fill="rgb(205,117,38)" fg:x="53" fg:w="1"/><text x="5.9245%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.21%)</title><rect x="5.7816%" y="709" width="0.2141%" height="15" fill="rgb(237,72,25)" fg:x="54" fg:w="2"/><text x="6.0316%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.21%)</title><rect x="5.7816%" y="693" width="0.2141%" height="15" fill="rgb(244,70,9)" fg:x="54" fg:w="2"/><text x="6.0316%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.21%)</title><rect x="5.7816%" y="677" width="0.2141%" height="15" fill="rgb(217,125,39)" fg:x="54" fg:w="2"/><text x="6.0316%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.21%)</title><rect x="5.7816%" y="661" width="0.2141%" height="15" fill="rgb(235,36,10)" fg:x="54" fg:w="2"/><text x="6.0316%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.21%)</title><rect x="5.7816%" y="645" width="0.2141%" height="15" fill="rgb(251,123,47)" fg:x="54" fg:w="2"/><text x="6.0316%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.32%)</title><rect x="5.7816%" y="757" width="0.3212%" height="15" fill="rgb(221,13,13)" fg:x="54" fg:w="3"/><text x="6.0316%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::demo_parsing::game_events::GameEvent]&gt; (3 samples, 0.32%)</title><rect x="5.7816%" y="741" width="0.3212%" height="15" fill="rgb(238,131,9)" fg:x="54" fg:w="3"/><text x="6.0316%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::game_events::GameEvent&gt; (3 samples, 0.32%)</title><rect x="5.7816%" y="725" width="0.3212%" height="15" fill="rgb(211,50,8)" fg:x="54" fg:w="3"/><text x="6.0316%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::demo_parsing::game_events::NameDataPair&gt;&gt; (1 samples, 0.11%)</title><rect x="5.9957%" y="709" width="0.1071%" height="15" fill="rgb(245,182,24)" fg:x="56" fg:w="1"/><text x="6.2457%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="5.9957%" y="693" width="0.1071%" height="15" fill="rgb(242,14,37)" fg:x="56" fg:w="1"/><text x="6.2457%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::demo_parsing::game_events::NameDataPair]&gt; (1 samples, 0.11%)</title><rect x="5.9957%" y="677" width="0.1071%" height="15" fill="rgb(246,228,12)" fg:x="56" fg:w="1"/><text x="6.2457%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::game_events::NameDataPair&gt; (1 samples, 0.11%)</title><rect x="5.9957%" y="661" width="0.1071%" height="15" fill="rgb(213,55,15)" fg:x="56" fg:w="1"/><text x="6.2457%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.11%)</title><rect x="5.9957%" y="645" width="0.1071%" height="15" fill="rgb(209,9,3)" fg:x="56" fg:w="1"/><text x="6.2457%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.11%)</title><rect x="5.9957%" y="629" width="0.1071%" height="15" fill="rgb(230,59,30)" fg:x="56" fg:w="1"/><text x="6.2457%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.11%)</title><rect x="5.9957%" y="613" width="0.1071%" height="15" fill="rgb(209,121,21)" fg:x="56" fg:w="1"/><text x="6.2457%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="5.9957%" y="597" width="0.1071%" height="15" fill="rgb(220,109,13)" fg:x="56" fg:w="1"/><text x="6.2457%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.11%)</title><rect x="5.9957%" y="581" width="0.1071%" height="15" fill="rgb(232,18,1)" fg:x="56" fg:w="1"/><text x="6.2457%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.11%)</title><rect x="5.9957%" y="565" width="0.1071%" height="15" fill="rgb(215,41,42)" fg:x="56" fg:w="1"/><text x="6.2457%" y="575.50"></text></g><g><title>mi_free (1 samples, 0.11%)</title><rect x="5.9957%" y="549" width="0.1071%" height="15" fill="rgb(224,123,36)" fg:x="56" fg:w="1"/><text x="6.2457%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::demo_parsing::game_events::GameEvent&gt;&gt; (4 samples, 0.43%)</title><rect x="5.7816%" y="773" width="0.4283%" height="15" fill="rgb(240,125,3)" fg:x="54" fg:w="4"/><text x="6.0316%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;demoparser::parsing::demo_parsing::game_events::GameEvent&gt;&gt; (1 samples, 0.11%)</title><rect x="6.1028%" y="757" width="0.1071%" height="15" fill="rgb(205,98,50)" fg:x="57" fg:w="1"/><text x="6.3528%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="6.1028%" y="741" width="0.1071%" height="15" fill="rgb(205,185,37)" fg:x="57" fg:w="1"/><text x="6.3528%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.11%)</title><rect x="6.1028%" y="725" width="0.1071%" height="15" fill="rgb(238,207,15)" fg:x="57" fg:w="1"/><text x="6.3528%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::parser::JobResult&gt;&gt; (24 samples, 2.57%)</title><rect x="5.5675%" y="837" width="2.5696%" height="15" fill="rgb(213,199,42)" fg:x="52" fg:w="24"/><text x="5.8175%" y="847.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 2.57%)</title><rect x="5.5675%" y="821" width="2.5696%" height="15" fill="rgb(235,201,11)" fg:x="52" fg:w="24"/><text x="5.8175%" y="831.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::parser::JobResult]&gt; (24 samples, 2.57%)</title><rect x="5.5675%" y="805" width="2.5696%" height="15" fill="rgb(207,46,11)" fg:x="52" fg:w="24"/><text x="5.8175%" y="815.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser::JobResult&gt; (22 samples, 2.36%)</title><rect x="5.7816%" y="789" width="2.3555%" height="15" fill="rgb(241,35,35)" fg:x="54" fg:w="22"/><text x="6.0316%" y="799.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::entities::PacketEntsOutput&gt; (18 samples, 1.93%)</title><rect x="6.2099%" y="773" width="1.9272%" height="15" fill="rgb(243,32,47)" fg:x="58" fg:w="18"/><text x="6.4599%" y="783.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::demo_parsing::entities::SingleEntOutput&gt;&gt; (18 samples, 1.93%)</title><rect x="6.2099%" y="757" width="1.9272%" height="15" fill="rgb(247,202,23)" fg:x="58" fg:w="18"/><text x="6.4599%" y="767.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 1.93%)</title><rect x="6.2099%" y="741" width="1.9272%" height="15" fill="rgb(219,102,11)" fg:x="58" fg:w="18"/><text x="6.4599%" y="751.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::demo_parsing::entities::SingleEntOutput]&gt; (18 samples, 1.93%)</title><rect x="6.2099%" y="725" width="1.9272%" height="15" fill="rgb(243,110,44)" fg:x="58" fg:w="18"/><text x="6.4599%" y="735.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::entities::SingleEntOutput&gt; (18 samples, 1.93%)</title><rect x="6.2099%" y="709" width="1.9272%" height="15" fill="rgb(222,74,54)" fg:x="58" fg:w="18"/><text x="6.4599%" y="719.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::variants::PropData&gt; (18 samples, 1.93%)</title><rect x="6.2099%" y="693" width="1.9272%" height="15" fill="rgb(216,99,12)" fg:x="58" fg:w="18"/><text x="6.4599%" y="703.50">c..</text></g><g><title>_mi_segment_page_free (1 samples, 0.11%)</title><rect x="8.1370%" y="773" width="0.1071%" height="15" fill="rgb(226,22,26)" fg:x="76" fg:w="1"/><text x="8.3870%" y="783.50"></text></g><g><title>mi_segment_page_clear (1 samples, 0.11%)</title><rect x="8.1370%" y="757" width="0.1071%" height="15" fill="rgb(217,163,10)" fg:x="76" fg:w="1"/><text x="8.3870%" y="767.50"></text></g><g><title>mi_segment_span_free_coalesce (1 samples, 0.11%)</title><rect x="8.1370%" y="741" width="0.1071%" height="15" fill="rgb(213,25,53)" fg:x="76" fg:w="1"/><text x="8.3870%" y="751.50"></text></g><g><title>mi_segment_span_free (1 samples, 0.11%)</title><rect x="8.1370%" y="725" width="0.1071%" height="15" fill="rgb(252,105,26)" fg:x="76" fg:w="1"/><text x="8.3870%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.21%)</title><rect x="8.2441%" y="693" width="0.2141%" height="15" fill="rgb(220,39,43)" fg:x="77" fg:w="2"/><text x="8.4941%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.21%)</title><rect x="8.2441%" y="677" width="0.2141%" height="15" fill="rgb(229,68,48)" fg:x="77" fg:w="2"/><text x="8.4941%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.21%)</title><rect x="8.2441%" y="661" width="0.2141%" height="15" fill="rgb(252,8,32)" fg:x="77" fg:w="2"/><text x="8.4941%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.21%)</title><rect x="8.2441%" y="645" width="0.2141%" height="15" fill="rgb(223,20,43)" fg:x="77" fg:w="2"/><text x="8.4941%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.21%)</title><rect x="8.2441%" y="629" width="0.2141%" height="15" fill="rgb(229,81,49)" fg:x="77" fg:w="2"/><text x="8.4941%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.11%)</title><rect x="8.4582%" y="565" width="0.1071%" height="15" fill="rgb(236,28,36)" fg:x="79" fg:w="1"/><text x="8.7082%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.11%)</title><rect x="8.4582%" y="549" width="0.1071%" height="15" fill="rgb(249,185,26)" fg:x="79" fg:w="1"/><text x="8.7082%" y="559.50"></text></g><g><title>mi_free (1 samples, 0.11%)</title><rect x="8.4582%" y="533" width="0.1071%" height="15" fill="rgb(249,174,33)" fg:x="79" fg:w="1"/><text x="8.7082%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.64%)</title><rect x="8.4582%" y="677" width="0.6424%" height="15" fill="rgb(233,201,37)" fg:x="79" fg:w="6"/><text x="8.7082%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::demo_parsing::game_events::NameDataPair]&gt; (6 samples, 0.64%)</title><rect x="8.4582%" y="661" width="0.6424%" height="15" fill="rgb(221,78,26)" fg:x="79" fg:w="6"/><text x="8.7082%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::game_events::NameDataPair&gt; (6 samples, 0.64%)</title><rect x="8.4582%" y="645" width="0.6424%" height="15" fill="rgb(250,127,30)" fg:x="79" fg:w="6"/><text x="8.7082%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (6 samples, 0.64%)</title><rect x="8.4582%" y="629" width="0.6424%" height="15" fill="rgb(230,49,44)" fg:x="79" fg:w="6"/><text x="8.7082%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6 samples, 0.64%)</title><rect x="8.4582%" y="613" width="0.6424%" height="15" fill="rgb(229,67,23)" fg:x="79" fg:w="6"/><text x="8.7082%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6 samples, 0.64%)</title><rect x="8.4582%" y="597" width="0.6424%" height="15" fill="rgb(249,83,47)" fg:x="79" fg:w="6"/><text x="8.7082%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.64%)</title><rect x="8.4582%" y="581" width="0.6424%" height="15" fill="rgb(215,43,3)" fg:x="79" fg:w="6"/><text x="8.7082%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (5 samples, 0.54%)</title><rect x="8.5653%" y="565" width="0.5353%" height="15" fill="rgb(238,154,13)" fg:x="80" fg:w="5"/><text x="8.8153%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::demo_parsing::game_events::GameEvent&gt;&gt; (9 samples, 0.96%)</title><rect x="8.2441%" y="757" width="0.9636%" height="15" fill="rgb(219,56,2)" fg:x="77" fg:w="9"/><text x="8.4941%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.96%)</title><rect x="8.2441%" y="741" width="0.9636%" height="15" fill="rgb(233,0,4)" fg:x="77" fg:w="9"/><text x="8.4941%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::demo_parsing::game_events::GameEvent]&gt; (9 samples, 0.96%)</title><rect x="8.2441%" y="725" width="0.9636%" height="15" fill="rgb(235,30,7)" fg:x="77" fg:w="9"/><text x="8.4941%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::game_events::GameEvent&gt; (9 samples, 0.96%)</title><rect x="8.2441%" y="709" width="0.9636%" height="15" fill="rgb(250,79,13)" fg:x="77" fg:w="9"/><text x="8.4941%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::demo_parsing::game_events::NameDataPair&gt;&gt; (7 samples, 0.75%)</title><rect x="8.4582%" y="693" width="0.7495%" height="15" fill="rgb(211,146,34)" fg:x="79" fg:w="7"/><text x="8.7082%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;demoparser::parsing::demo_parsing::game_events::NameDataPair&gt;&gt; (1 samples, 0.11%)</title><rect x="9.1006%" y="677" width="0.1071%" height="15" fill="rgb(228,22,38)" fg:x="85" fg:w="1"/><text x="9.3506%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="9.1006%" y="661" width="0.1071%" height="15" fill="rgb(235,168,5)" fg:x="85" fg:w="1"/><text x="9.3506%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.11%)</title><rect x="9.1006%" y="645" width="0.1071%" height="15" fill="rgb(221,155,16)" fg:x="85" fg:w="1"/><text x="9.3506%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.11%)</title><rect x="9.1006%" y="629" width="0.1071%" height="15" fill="rgb(215,215,53)" fg:x="85" fg:w="1"/><text x="9.3506%" y="639.50"></text></g><g><title>mi_free (1 samples, 0.11%)</title><rect x="9.1006%" y="613" width="0.1071%" height="15" fill="rgb(223,4,10)" fg:x="85" fg:w="1"/><text x="9.3506%" y="623.50"></text></g><g><title>_mi_thread_id (1 samples, 0.11%)</title><rect x="9.1006%" y="597" width="0.1071%" height="15" fill="rgb(234,103,6)" fg:x="85" fg:w="1"/><text x="9.3506%" y="607.50"></text></g><g><title>mi_tls_slot (1 samples, 0.11%)</title><rect x="9.1006%" y="581" width="0.1071%" height="15" fill="rgb(227,97,0)" fg:x="85" fg:w="1"/><text x="9.3506%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser::JobResult&gt; (22 samples, 2.36%)</title><rect x="8.2441%" y="773" width="2.3555%" height="15" fill="rgb(234,150,53)" fg:x="77" fg:w="22"/><text x="8.4941%" y="783.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::entities::PacketEntsOutput&gt; (13 samples, 1.39%)</title><rect x="9.2077%" y="757" width="1.3919%" height="15" fill="rgb(228,201,54)" fg:x="86" fg:w="13"/><text x="9.4577%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::demo_parsing::entities::SingleEntOutput&gt;&gt; (13 samples, 1.39%)</title><rect x="9.2077%" y="741" width="1.3919%" height="15" fill="rgb(222,22,37)" fg:x="86" fg:w="13"/><text x="9.4577%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.39%)</title><rect x="9.2077%" y="725" width="1.3919%" height="15" fill="rgb(237,53,32)" fg:x="86" fg:w="13"/><text x="9.4577%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::demo_parsing::entities::SingleEntOutput]&gt; (13 samples, 1.39%)</title><rect x="9.2077%" y="709" width="1.3919%" height="15" fill="rgb(233,25,53)" fg:x="86" fg:w="13"/><text x="9.4577%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::entities::SingleEntOutput&gt; (13 samples, 1.39%)</title><rect x="9.2077%" y="693" width="1.3919%" height="15" fill="rgb(210,40,34)" fg:x="86" fg:w="13"/><text x="9.4577%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::variants::PropData&gt; (13 samples, 1.39%)</title><rect x="9.2077%" y="677" width="1.3919%" height="15" fill="rgb(241,220,44)" fg:x="86" fg:w="13"/><text x="9.4577%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::parser::JobResult&gt;&gt; (24 samples, 2.57%)</title><rect x="8.1370%" y="821" width="2.5696%" height="15" fill="rgb(235,28,35)" fg:x="76" fg:w="24"/><text x="8.3870%" y="831.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 2.57%)</title><rect x="8.1370%" y="805" width="2.5696%" height="15" fill="rgb(210,56,17)" fg:x="76" fg:w="24"/><text x="8.3870%" y="815.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::parser::JobResult]&gt; (24 samples, 2.57%)</title><rect x="8.1370%" y="789" width="2.5696%" height="15" fill="rgb(224,130,29)" fg:x="76" fg:w="24"/><text x="8.3870%" y="799.50">co..</text></g><g><title>mi_free_generic (1 samples, 0.11%)</title><rect x="10.5996%" y="773" width="0.1071%" height="15" fill="rgb(235,212,8)" fg:x="99" fg:w="1"/><text x="10.8496%" y="783.50"></text></g><g><title>_mi_segment_page_of (1 samples, 0.11%)</title><rect x="10.5996%" y="757" width="0.1071%" height="15" fill="rgb(223,33,50)" fg:x="99" fg:w="1"/><text x="10.8496%" y="767.50"></text></g><g><title>mi_slice_first (1 samples, 0.11%)</title><rect x="10.5996%" y="741" width="0.1071%" height="15" fill="rgb(219,149,13)" fg:x="99" fg:w="1"/><text x="10.8496%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::ops::arith::Add&lt;&amp;str&gt;&gt;::add (1 samples, 0.11%)</title><rect x="10.7066%" y="805" width="0.1071%" height="15" fill="rgb(250,156,29)" fg:x="100" fg:w="1"/><text x="10.9566%" y="815.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.11%)</title><rect x="10.7066%" y="789" width="0.1071%" height="15" fill="rgb(216,193,19)" fg:x="100" fg:w="1"/><text x="10.9566%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.11%)</title><rect x="10.7066%" y="773" width="0.1071%" height="15" fill="rgb(216,135,14)" fg:x="100" fg:w="1"/><text x="10.9566%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="10.7066%" y="757" width="0.1071%" height="15" fill="rgb(241,47,5)" fg:x="100" fg:w="1"/><text x="10.9566%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.11%)</title><rect x="10.7066%" y="741" width="0.1071%" height="15" fill="rgb(233,42,35)" fg:x="100" fg:w="1"/><text x="10.9566%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="10.7066%" y="725" width="0.1071%" height="15" fill="rgb(231,13,6)" fg:x="100" fg:w="1"/><text x="10.9566%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="10.7066%" y="709" width="0.1071%" height="15" fill="rgb(207,181,40)" fg:x="100" fg:w="1"/><text x="10.9566%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.11%)</title><rect x="10.7066%" y="693" width="0.1071%" height="15" fill="rgb(254,173,49)" fg:x="100" fg:w="1"/><text x="10.9566%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.11%)</title><rect x="10.7066%" y="677" width="0.1071%" height="15" fill="rgb(221,1,38)" fg:x="100" fg:w="1"/><text x="10.9566%" y="687.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.11%)</title><rect x="10.7066%" y="661" width="0.1071%" height="15" fill="rgb(206,124,46)" fg:x="100" fg:w="1"/><text x="10.9566%" y="671.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.11%)</title><rect x="10.7066%" y="645" width="0.1071%" height="15" fill="rgb(249,21,11)" fg:x="100" fg:w="1"/><text x="10.9566%" y="655.50"></text></g><g><title>demoparser::parsing::cache::cache_reader::ReadCache::read_other_deltas_by_name (3 samples, 0.32%)</title><rect x="10.7066%" y="821" width="0.3212%" height="15" fill="rgb(222,201,40)" fg:x="100" fg:w="3"/><text x="10.9566%" y="831.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (2 samples, 0.21%)</title><rect x="10.8137%" y="805" width="0.2141%" height="15" fill="rgb(235,61,29)" fg:x="101" fg:w="2"/><text x="11.0637%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.21%)</title><rect x="10.8137%" y="789" width="0.2141%" height="15" fill="rgb(219,207,3)" fg:x="101" fg:w="2"/><text x="11.0637%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.21%)</title><rect x="10.8137%" y="773" width="0.2141%" height="15" fill="rgb(222,56,46)" fg:x="101" fg:w="2"/><text x="11.0637%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.21%)</title><rect x="10.8137%" y="757" width="0.2141%" height="15" fill="rgb(239,76,54)" fg:x="101" fg:w="2"/><text x="11.0637%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.21%)</title><rect x="10.8137%" y="741" width="0.2141%" height="15" fill="rgb(231,124,27)" fg:x="101" fg:w="2"/><text x="11.0637%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.21%)</title><rect x="10.8137%" y="725" width="0.2141%" height="15" fill="rgb(249,195,6)" fg:x="101" fg:w="2"/><text x="11.0637%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.21%)</title><rect x="10.8137%" y="709" width="0.2141%" height="15" fill="rgb(237,174,47)" fg:x="101" fg:w="2"/><text x="11.0637%" y="719.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.21%)</title><rect x="10.8137%" y="693" width="0.2141%" height="15" fill="rgb(206,201,31)" fg:x="101" fg:w="2"/><text x="11.0637%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (2 samples, 0.21%)</title><rect x="10.8137%" y="677" width="0.2141%" height="15" fill="rgb(231,57,52)" fg:x="101" fg:w="2"/><text x="11.0637%" y="687.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.21%)</title><rect x="10.8137%" y="661" width="0.2141%" height="15" fill="rgb(248,177,22)" fg:x="101" fg:w="2"/><text x="11.0637%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.21%)</title><rect x="10.8137%" y="645" width="0.2141%" height="15" fill="rgb(215,211,37)" fg:x="101" fg:w="2"/><text x="11.0637%" y="655.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.21%)</title><rect x="10.8137%" y="629" width="0.2141%" height="15" fill="rgb(241,128,51)" fg:x="101" fg:w="2"/><text x="11.0637%" y="639.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.21%)</title><rect x="10.8137%" y="613" width="0.2141%" height="15" fill="rgb(227,165,31)" fg:x="101" fg:w="2"/><text x="11.0637%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.11%)</title><rect x="11.7773%" y="773" width="0.1071%" height="15" fill="rgb(228,167,24)" fg:x="110" fg:w="1"/><text x="12.0273%" y="783.50"></text></g><g><title>demoparser::parsing::create_output::&lt;impl demoparser::parsing::parser::Parser&gt;::match_int_other (200 samples, 21.41%)</title><rect x="11.8844%" y="773" width="21.4133%" height="15" fill="rgb(228,143,12)" fg:x="111" fg:w="200"/><text x="12.1344%" y="783.50">demoparser::parsing::create_output..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.21%)</title><rect x="33.0835%" y="757" width="0.2141%" height="15" fill="rgb(249,149,8)" fg:x="309" fg:w="2"/><text x="33.3335%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Windows&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="33.4047%" y="757" width="0.1071%" height="15" fill="rgb(243,35,44)" fg:x="312" fg:w="1"/><text x="33.6547%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.11%)</title><rect x="33.5118%" y="709" width="0.1071%" height="15" fill="rgb(246,89,9)" fg:x="313" fg:w="1"/><text x="33.7618%" y="719.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::hash_one (1 samples, 0.11%)</title><rect x="33.5118%" y="693" width="0.1071%" height="15" fill="rgb(233,213,13)" fg:x="313" fg:w="1"/><text x="33.7618%" y="703.50"></text></g><g><title>ahash::random_state::RandomState::hash_one (1 samples, 0.11%)</title><rect x="33.5118%" y="677" width="0.1071%" height="15" fill="rgb(233,141,41)" fg:x="313" fg:w="1"/><text x="33.7618%" y="687.50"></text></g><g><title>&lt;T as ahash::specialize::CallHasher&gt;::get_hash (1 samples, 0.11%)</title><rect x="33.5118%" y="661" width="0.1071%" height="15" fill="rgb(239,167,4)" fg:x="313" fg:w="1"/><text x="33.7618%" y="671.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.11%)</title><rect x="33.5118%" y="645" width="0.1071%" height="15" fill="rgb(209,217,16)" fg:x="313" fg:w="1"/><text x="33.7618%" y="655.50"></text></g><g><title>demoparser::parsing::create_output::&lt;impl demoparser::parsing::parser::Parser&gt;::create_series_others (212 samples, 22.70%)</title><rect x="11.0278%" y="821" width="22.6981%" height="15" fill="rgb(219,88,35)" fg:x="103" fg:w="212"/><text x="11.2778%" y="831.50">demoparser::parsing::create_output::..</text></g><g><title>demoparser::parsing::create_output::&lt;impl demoparser::parsing::parser::Parser&gt;::find_other_values (212 samples, 22.70%)</title><rect x="11.0278%" y="805" width="22.6981%" height="15" fill="rgb(220,193,23)" fg:x="103" fg:w="212"/><text x="11.2778%" y="815.50">demoparser::parsing::create_output::..</text></g><g><title>demoparser::parsing::create_output::&lt;impl demoparser::parsing::parser::Parser&gt;::filter_jobs_by_pidx_other (212 samples, 22.70%)</title><rect x="11.0278%" y="789" width="22.6981%" height="15" fill="rgb(230,90,52)" fg:x="103" fg:w="212"/><text x="11.2778%" y="799.50">demoparser::parsing::create_output::..</text></g><g><title>demoparser::parsing::players::Players::sid_to_entid (4 samples, 0.43%)</title><rect x="33.2976%" y="773" width="0.4283%" height="15" fill="rgb(252,106,19)" fg:x="311" fg:w="4"/><text x="33.5476%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.21%)</title><rect x="33.5118%" y="757" width="0.2141%" height="15" fill="rgb(206,74,20)" fg:x="313" fg:w="2"/><text x="33.7618%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.21%)</title><rect x="33.5118%" y="741" width="0.2141%" height="15" fill="rgb(230,138,44)" fg:x="313" fg:w="2"/><text x="33.7618%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.21%)</title><rect x="33.5118%" y="725" width="0.2141%" height="15" fill="rgb(235,182,43)" fg:x="313" fg:w="2"/><text x="33.7618%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.11%)</title><rect x="33.6188%" y="709" width="0.1071%" height="15" fill="rgb(242,16,51)" fg:x="314" fg:w="1"/><text x="33.8688%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.11%)</title><rect x="33.6188%" y="693" width="0.1071%" height="15" fill="rgb(248,9,4)" fg:x="314" fg:w="1"/><text x="33.8688%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.11%)</title><rect x="33.6188%" y="677" width="0.1071%" height="15" fill="rgb(210,31,22)" fg:x="314" fg:w="1"/><text x="33.8688%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.21%)</title><rect x="33.7259%" y="661" width="0.2141%" height="15" fill="rgb(239,54,39)" fg:x="315" fg:w="2"/><text x="33.9759%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (2 samples, 0.21%)</title><rect x="33.7259%" y="645" width="0.2141%" height="15" fill="rgb(230,99,41)" fg:x="315" fg:w="2"/><text x="33.9759%" y="655.50"></text></g><g><title>core::ptr::write (2 samples, 0.21%)</title><rect x="33.7259%" y="629" width="0.2141%" height="15" fill="rgb(253,106,12)" fg:x="315" fg:w="2"/><text x="33.9759%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="33.7259%" y="613" width="0.2141%" height="15" fill="rgb(213,46,41)" fg:x="315" fg:w="2"/><text x="33.9759%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="33.7259%" y="597" width="0.2141%" height="15" fill="rgb(215,133,35)" fg:x="315" fg:w="2"/><text x="33.9759%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="33.7259%" y="581" width="0.2141%" height="15" fill="rgb(213,28,5)" fg:x="315" fg:w="2"/><text x="33.9759%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="33.7259%" y="565" width="0.2141%" height="15" fill="rgb(215,77,49)" fg:x="315" fg:w="2"/><text x="33.9759%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="33.7259%" y="549" width="0.2141%" height="15" fill="rgb(248,100,22)" fg:x="315" fg:w="2"/><text x="33.9759%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="33.7259%" y="533" width="0.2141%" height="15" fill="rgb(208,67,9)" fg:x="315" fg:w="2"/><text x="33.9759%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="33.7259%" y="517" width="0.2141%" height="15" fill="rgb(219,133,21)" fg:x="315" fg:w="2"/><text x="33.9759%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="33.7259%" y="501" width="0.2141%" height="15" fill="rgb(246,46,29)" fg:x="315" fg:w="2"/><text x="33.9759%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="33.7259%" y="485" width="0.2141%" height="15" fill="rgb(246,185,52)" fg:x="315" fg:w="2"/><text x="33.9759%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="33.7259%" y="469" width="0.2141%" height="15" fill="rgb(252,136,11)" fg:x="315" fg:w="2"/><text x="33.9759%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="33.7259%" y="453" width="0.2141%" height="15" fill="rgb(219,138,53)" fg:x="315" fg:w="2"/><text x="33.9759%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="33.8330%" y="437" width="0.1071%" height="15" fill="rgb(211,51,23)" fg:x="316" fg:w="1"/><text x="34.0830%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="33.8330%" y="421" width="0.1071%" height="15" fill="rgb(247,221,28)" fg:x="316" fg:w="1"/><text x="34.0830%" y="431.50"></text></g><g><title>[libc.so.6] (2 samples, 0.21%)</title><rect x="34.2612%" y="517" width="0.2141%" height="15" fill="rgb(251,222,45)" fg:x="320" fg:w="2"/><text x="34.5112%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="34.2612%" y="501" width="0.2141%" height="15" fill="rgb(217,162,53)" fg:x="320" fg:w="2"/><text x="34.5112%" y="511.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.11%)</title><rect x="34.5824%" y="485" width="0.1071%" height="15" fill="rgb(229,93,14)" fg:x="323" fg:w="1"/><text x="34.8324%" y="495.50"></text></g><g><title>[libc.so.6] (29 samples, 3.10%)</title><rect x="34.6895%" y="357" width="3.1049%" height="15" fill="rgb(209,67,49)" fg:x="324" fg:w="29"/><text x="34.9395%" y="367.50">[li..</text></g><g><title>[unknown] (22 samples, 2.36%)</title><rect x="35.4390%" y="341" width="2.3555%" height="15" fill="rgb(213,87,29)" fg:x="331" fg:w="22"/><text x="35.6890%" y="351.50">[..</text></g><g><title>[unknown] (20 samples, 2.14%)</title><rect x="35.6531%" y="325" width="2.1413%" height="15" fill="rgb(205,151,52)" fg:x="333" fg:w="20"/><text x="35.9031%" y="335.50">[..</text></g><g><title>[unknown] (20 samples, 2.14%)</title><rect x="35.6531%" y="309" width="2.1413%" height="15" fill="rgb(253,215,39)" fg:x="333" fg:w="20"/><text x="35.9031%" y="319.50">[..</text></g><g><title>[unknown] (20 samples, 2.14%)</title><rect x="35.6531%" y="293" width="2.1413%" height="15" fill="rgb(221,220,41)" fg:x="333" fg:w="20"/><text x="35.9031%" y="303.50">[..</text></g><g><title>[unknown] (18 samples, 1.93%)</title><rect x="35.8672%" y="277" width="1.9272%" height="15" fill="rgb(218,133,21)" fg:x="335" fg:w="18"/><text x="36.1172%" y="287.50">[..</text></g><g><title>[unknown] (17 samples, 1.82%)</title><rect x="35.9743%" y="261" width="1.8201%" height="15" fill="rgb(221,193,43)" fg:x="336" fg:w="17"/><text x="36.2243%" y="271.50">[..</text></g><g><title>[unknown] (17 samples, 1.82%)</title><rect x="35.9743%" y="245" width="1.8201%" height="15" fill="rgb(240,128,52)" fg:x="336" fg:w="17"/><text x="36.2243%" y="255.50">[..</text></g><g><title>[unknown] (16 samples, 1.71%)</title><rect x="36.0814%" y="229" width="1.7131%" height="15" fill="rgb(253,114,12)" fg:x="337" fg:w="16"/><text x="36.3314%" y="239.50"></text></g><g><title>[unknown] (14 samples, 1.50%)</title><rect x="36.2955%" y="213" width="1.4989%" height="15" fill="rgb(215,223,47)" fg:x="339" fg:w="14"/><text x="36.5455%" y="223.50"></text></g><g><title>[unknown] (13 samples, 1.39%)</title><rect x="36.4026%" y="197" width="1.3919%" height="15" fill="rgb(248,225,23)" fg:x="340" fg:w="13"/><text x="36.6526%" y="207.50"></text></g><g><title>[unknown] (13 samples, 1.39%)</title><rect x="36.4026%" y="181" width="1.3919%" height="15" fill="rgb(250,108,0)" fg:x="340" fg:w="13"/><text x="36.6526%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="37.6874%" y="165" width="0.1071%" height="15" fill="rgb(228,208,7)" fg:x="352" fg:w="1"/><text x="37.9374%" y="175.50"></text></g><g><title>_mi_memcpy_aligned (31 samples, 3.32%)</title><rect x="34.6895%" y="405" width="3.3191%" height="15" fill="rgb(244,45,10)" fg:x="324" fg:w="31"/><text x="34.9395%" y="415.50">_mi..</text></g><g><title>_mi_memcpy (31 samples, 3.32%)</title><rect x="34.6895%" y="389" width="3.3191%" height="15" fill="rgb(207,125,25)" fg:x="324" fg:w="31"/><text x="34.9395%" y="399.50">_mi..</text></g><g><title>memcpy (31 samples, 3.32%)</title><rect x="34.6895%" y="373" width="3.3191%" height="15" fill="rgb(210,195,18)" fg:x="324" fg:w="31"/><text x="34.9395%" y="383.50">mem..</text></g><g><title>_mi_malloc_generic (2 samples, 0.21%)</title><rect x="37.7944%" y="357" width="0.2141%" height="15" fill="rgb(249,80,12)" fg:x="353" fg:w="2"/><text x="38.0444%" y="367.50"></text></g><g><title>mi_find_page (2 samples, 0.21%)</title><rect x="37.7944%" y="341" width="0.2141%" height="15" fill="rgb(221,65,9)" fg:x="353" fg:w="2"/><text x="38.0444%" y="351.50"></text></g><g><title>mi_find_free_page (2 samples, 0.21%)</title><rect x="37.7944%" y="325" width="0.2141%" height="15" fill="rgb(235,49,36)" fg:x="353" fg:w="2"/><text x="38.0444%" y="335.50"></text></g><g><title>mi_page_queue_find_free_ex (2 samples, 0.21%)</title><rect x="37.7944%" y="309" width="0.2141%" height="15" fill="rgb(225,32,20)" fg:x="353" fg:w="2"/><text x="38.0444%" y="319.50"></text></g><g><title>mi_page_fresh (2 samples, 0.21%)</title><rect x="37.7944%" y="293" width="0.2141%" height="15" fill="rgb(215,141,46)" fg:x="353" fg:w="2"/><text x="38.0444%" y="303.50"></text></g><g><title>mi_page_fresh_alloc (2 samples, 0.21%)</title><rect x="37.7944%" y="277" width="0.2141%" height="15" fill="rgb(250,160,47)" fg:x="353" fg:w="2"/><text x="38.0444%" y="287.50"></text></g><g><title>mi_page_init (2 samples, 0.21%)</title><rect x="37.7944%" y="261" width="0.2141%" height="15" fill="rgb(216,222,40)" fg:x="353" fg:w="2"/><text x="38.0444%" y="271.50"></text></g><g><title>mi_page_extend_free (2 samples, 0.21%)</title><rect x="37.7944%" y="245" width="0.2141%" height="15" fill="rgb(234,217,39)" fg:x="353" fg:w="2"/><text x="38.0444%" y="255.50"></text></g><g><title>mi_page_extend_free (2 samples, 0.21%)</title><rect x="37.7944%" y="229" width="0.2141%" height="15" fill="rgb(207,178,40)" fg:x="353" fg:w="2"/><text x="38.0444%" y="239.50"></text></g><g><title>mi_page_free_list_extend (2 samples, 0.21%)</title><rect x="37.7944%" y="213" width="0.2141%" height="15" fill="rgb(221,136,13)" fg:x="353" fg:w="2"/><text x="38.0444%" y="223.50"></text></g><g><title>mi_block_set_next (2 samples, 0.21%)</title><rect x="37.7944%" y="197" width="0.2141%" height="15" fill="rgb(249,199,10)" fg:x="353" fg:w="2"/><text x="38.0444%" y="207.50"></text></g><g><title>mi_block_set_nextx (2 samples, 0.21%)</title><rect x="37.7944%" y="181" width="0.2141%" height="15" fill="rgb(249,222,13)" fg:x="353" fg:w="2"/><text x="38.0444%" y="191.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="37.7944%" y="165" width="0.2141%" height="15" fill="rgb(244,185,38)" fg:x="353" fg:w="2"/><text x="38.0444%" y="175.50"></text></g><g><title>_mi_usable_size (1 samples, 0.11%)</title><rect x="38.0086%" y="405" width="0.1071%" height="15" fill="rgb(236,202,9)" fg:x="355" fg:w="1"/><text x="38.2586%" y="415.50"></text></g><g><title>mi_free (1 samples, 0.11%)</title><rect x="38.1156%" y="405" width="0.1071%" height="15" fill="rgb(250,229,37)" fg:x="356" fg:w="1"/><text x="38.3656%" y="415.50"></text></g><g><title>[libc.so.6] (5 samples, 0.54%)</title><rect x="38.2227%" y="389" width="0.5353%" height="15" fill="rgb(206,174,23)" fg:x="357" fg:w="5"/><text x="38.4727%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.54%)</title><rect x="38.2227%" y="373" width="0.5353%" height="15" fill="rgb(211,33,43)" fg:x="357" fg:w="5"/><text x="38.4727%" y="383.50"></text></g><g><title>_mi_deferred_free (1 samples, 0.11%)</title><rect x="38.7580%" y="373" width="0.1071%" height="15" fill="rgb(245,58,50)" fg:x="362" fg:w="1"/><text x="39.0080%" y="383.50"></text></g><g><title>_mi_heap_delayed_free (1 samples, 0.11%)</title><rect x="38.8651%" y="373" width="0.1071%" height="15" fill="rgb(244,68,36)" fg:x="363" fg:w="1"/><text x="39.1151%" y="383.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.11%)</title><rect x="38.9722%" y="373" width="0.1071%" height="15" fill="rgb(232,229,15)" fg:x="364" fg:w="1"/><text x="39.2222%" y="383.50"></text></g><g><title>mi_page_extend_free (19 samples, 2.03%)</title><rect x="39.2934%" y="325" width="2.0343%" height="15" fill="rgb(254,30,23)" fg:x="367" fg:w="19"/><text x="39.5434%" y="335.50">m..</text></g><g><title>mi_page_extend_free (19 samples, 2.03%)</title><rect x="39.2934%" y="309" width="2.0343%" height="15" fill="rgb(235,160,14)" fg:x="367" fg:w="19"/><text x="39.5434%" y="319.50">m..</text></g><g><title>mi_page_free_list_extend (19 samples, 2.03%)</title><rect x="39.2934%" y="293" width="2.0343%" height="15" fill="rgb(212,155,44)" fg:x="367" fg:w="19"/><text x="39.5434%" y="303.50">m..</text></g><g><title>mi_block_set_next (19 samples, 2.03%)</title><rect x="39.2934%" y="277" width="2.0343%" height="15" fill="rgb(226,2,50)" fg:x="367" fg:w="19"/><text x="39.5434%" y="287.50">m..</text></g><g><title>mi_block_set_nextx (19 samples, 2.03%)</title><rect x="39.2934%" y="261" width="2.0343%" height="15" fill="rgb(234,177,6)" fg:x="367" fg:w="19"/><text x="39.5434%" y="271.50">m..</text></g><g><title>[unknown] (19 samples, 2.03%)</title><rect x="39.2934%" y="245" width="2.0343%" height="15" fill="rgb(217,24,9)" fg:x="367" fg:w="19"/><text x="39.5434%" y="255.50">[..</text></g><g><title>[unknown] (14 samples, 1.50%)</title><rect x="39.8287%" y="229" width="1.4989%" height="15" fill="rgb(220,13,46)" fg:x="372" fg:w="14"/><text x="40.0787%" y="239.50"></text></g><g><title>[unknown] (13 samples, 1.39%)</title><rect x="39.9358%" y="213" width="1.3919%" height="15" fill="rgb(239,221,27)" fg:x="373" fg:w="13"/><text x="40.1858%" y="223.50"></text></g><g><title>[unknown] (13 samples, 1.39%)</title><rect x="39.9358%" y="197" width="1.3919%" height="15" fill="rgb(222,198,25)" fg:x="373" fg:w="13"/><text x="40.1858%" y="207.50"></text></g><g><title>[unknown] (11 samples, 1.18%)</title><rect x="40.1499%" y="181" width="1.1777%" height="15" fill="rgb(211,99,13)" fg:x="375" fg:w="11"/><text x="40.3999%" y="191.50"></text></g><g><title>[unknown] (9 samples, 0.96%)</title><rect x="40.3640%" y="165" width="0.9636%" height="15" fill="rgb(232,111,31)" fg:x="377" fg:w="9"/><text x="40.6140%" y="175.50"></text></g><g><title>[unknown] (9 samples, 0.96%)</title><rect x="40.3640%" y="149" width="0.9636%" height="15" fill="rgb(245,82,37)" fg:x="377" fg:w="9"/><text x="40.6140%" y="159.50"></text></g><g><title>[unknown] (9 samples, 0.96%)</title><rect x="40.3640%" y="133" width="0.9636%" height="15" fill="rgb(227,149,46)" fg:x="377" fg:w="9"/><text x="40.6140%" y="143.50"></text></g><g><title>[unknown] (8 samples, 0.86%)</title><rect x="40.4711%" y="117" width="0.8565%" height="15" fill="rgb(218,36,50)" fg:x="378" fg:w="8"/><text x="40.7211%" y="127.50"></text></g><g><title>[unknown] (8 samples, 0.86%)</title><rect x="40.4711%" y="101" width="0.8565%" height="15" fill="rgb(226,80,48)" fg:x="378" fg:w="8"/><text x="40.7211%" y="111.50"></text></g><g><title>[unknown] (8 samples, 0.86%)</title><rect x="40.4711%" y="85" width="0.8565%" height="15" fill="rgb(238,224,15)" fg:x="378" fg:w="8"/><text x="40.7211%" y="95.50"></text></g><g><title>mi_page_init (6 samples, 0.64%)</title><rect x="41.3276%" y="293" width="0.6424%" height="15" fill="rgb(241,136,10)" fg:x="386" fg:w="6"/><text x="41.5776%" y="303.50"></text></g><g><title>mi_page_extend_free (6 samples, 0.64%)</title><rect x="41.3276%" y="277" width="0.6424%" height="15" fill="rgb(208,32,45)" fg:x="386" fg:w="6"/><text x="41.5776%" y="287.50"></text></g><g><title>mi_page_extend_free (6 samples, 0.64%)</title><rect x="41.3276%" y="261" width="0.6424%" height="15" fill="rgb(207,135,9)" fg:x="386" fg:w="6"/><text x="41.5776%" y="271.50"></text></g><g><title>mi_page_free_list_extend (6 samples, 0.64%)</title><rect x="41.3276%" y="245" width="0.6424%" height="15" fill="rgb(206,86,44)" fg:x="386" fg:w="6"/><text x="41.5776%" y="255.50"></text></g><g><title>mi_block_set_next (6 samples, 0.64%)</title><rect x="41.3276%" y="229" width="0.6424%" height="15" fill="rgb(245,177,15)" fg:x="386" fg:w="6"/><text x="41.5776%" y="239.50"></text></g><g><title>mi_block_set_nextx (6 samples, 0.64%)</title><rect x="41.3276%" y="213" width="0.6424%" height="15" fill="rgb(206,64,50)" fg:x="386" fg:w="6"/><text x="41.5776%" y="223.50"></text></g><g><title>[unknown] (4 samples, 0.43%)</title><rect x="41.5418%" y="197" width="0.4283%" height="15" fill="rgb(234,36,40)" fg:x="388" fg:w="4"/><text x="41.7918%" y="207.50"></text></g><g><title>[unknown] (4 samples, 0.43%)</title><rect x="41.5418%" y="181" width="0.4283%" height="15" fill="rgb(213,64,8)" fg:x="388" fg:w="4"/><text x="41.7918%" y="191.50"></text></g><g><title>[unknown] (4 samples, 0.43%)</title><rect x="41.5418%" y="165" width="0.4283%" height="15" fill="rgb(210,75,36)" fg:x="388" fg:w="4"/><text x="41.7918%" y="175.50"></text></g><g><title>[unknown] (4 samples, 0.43%)</title><rect x="41.5418%" y="149" width="0.4283%" height="15" fill="rgb(229,88,21)" fg:x="388" fg:w="4"/><text x="41.7918%" y="159.50"></text></g><g><title>[unknown] (3 samples, 0.32%)</title><rect x="41.6488%" y="133" width="0.3212%" height="15" fill="rgb(252,204,47)" fg:x="389" fg:w="3"/><text x="41.8988%" y="143.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="41.7559%" y="117" width="0.2141%" height="15" fill="rgb(208,77,27)" fg:x="390" fg:w="2"/><text x="42.0059%" y="127.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="41.7559%" y="101" width="0.2141%" height="15" fill="rgb(221,76,26)" fg:x="390" fg:w="2"/><text x="42.0059%" y="111.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="41.7559%" y="85" width="0.2141%" height="15" fill="rgb(225,139,18)" fg:x="390" fg:w="2"/><text x="42.0059%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="41.8630%" y="69" width="0.1071%" height="15" fill="rgb(230,137,11)" fg:x="391" fg:w="1"/><text x="42.1130%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="41.8630%" y="53" width="0.1071%" height="15" fill="rgb(212,28,1)" fg:x="391" fg:w="1"/><text x="42.1130%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="41.8630%" y="37" width="0.1071%" height="15" fill="rgb(248,164,17)" fg:x="391" fg:w="1"/><text x="42.1130%" y="47.50"></text></g><g><title>_mi_malloc_generic (32 samples, 3.43%)</title><rect x="38.7580%" y="389" width="3.4261%" height="15" fill="rgb(222,171,42)" fg:x="362" fg:w="32"/><text x="39.0080%" y="399.50">_mi..</text></g><g><title>mi_find_page (29 samples, 3.10%)</title><rect x="39.0792%" y="373" width="3.1049%" height="15" fill="rgb(243,84,45)" fg:x="365" fg:w="29"/><text x="39.3292%" y="383.50">mi_..</text></g><g><title>mi_find_free_page (29 samples, 3.10%)</title><rect x="39.0792%" y="357" width="3.1049%" height="15" fill="rgb(252,49,23)" fg:x="365" fg:w="29"/><text x="39.3292%" y="367.50">mi_..</text></g><g><title>mi_page_queue_find_free_ex (27 samples, 2.89%)</title><rect x="39.2934%" y="341" width="2.8908%" height="15" fill="rgb(215,19,7)" fg:x="367" fg:w="27"/><text x="39.5434%" y="351.50">mi..</text></g><g><title>mi_page_fresh (8 samples, 0.86%)</title><rect x="41.3276%" y="325" width="0.8565%" height="15" fill="rgb(238,81,41)" fg:x="386" fg:w="8"/><text x="41.5776%" y="335.50"></text></g><g><title>mi_page_fresh_alloc (8 samples, 0.86%)</title><rect x="41.3276%" y="309" width="0.8565%" height="15" fill="rgb(210,199,37)" fg:x="386" fg:w="8"/><text x="41.5776%" y="319.50"></text></g><g><title>mi_segments_page_alloc (2 samples, 0.21%)</title><rect x="41.9700%" y="293" width="0.2141%" height="15" fill="rgb(244,192,49)" fg:x="392" fg:w="2"/><text x="42.2200%" y="303.50"></text></g><g><title>mi_segments_page_find_and_allocate (2 samples, 0.21%)</title><rect x="41.9700%" y="277" width="0.2141%" height="15" fill="rgb(226,211,11)" fg:x="392" fg:w="2"/><text x="42.2200%" y="287.50"></text></g><g><title>mi_segment_slice_split (2 samples, 0.21%)</title><rect x="41.9700%" y="261" width="0.2141%" height="15" fill="rgb(236,162,54)" fg:x="392" fg:w="2"/><text x="42.2200%" y="271.50"></text></g><g><title>mi_segment_span_free (2 samples, 0.21%)</title><rect x="41.9700%" y="245" width="0.2141%" height="15" fill="rgb(220,229,9)" fg:x="392" fg:w="2"/><text x="42.2200%" y="255.50"></text></g><g><title>mi_segment_perhaps_decommit (1 samples, 0.11%)</title><rect x="42.0771%" y="229" width="0.1071%" height="15" fill="rgb(250,87,22)" fg:x="393" fg:w="1"/><text x="42.3271%" y="239.50"></text></g><g><title>_mi_clock_now (1 samples, 0.11%)</title><rect x="42.0771%" y="213" width="0.1071%" height="15" fill="rgb(239,43,17)" fg:x="393" fg:w="1"/><text x="42.3271%" y="223.50"></text></g><g><title>__GI___clock_gettime (1 samples, 0.11%)</title><rect x="42.0771%" y="197" width="0.1071%" height="15" fill="rgb(231,177,25)" fg:x="393" fg:w="1"/><text x="42.3271%" y="207.50"></text></g><g><title>[[vdso]] (1 samples, 0.11%)</title><rect x="42.0771%" y="181" width="0.1071%" height="15" fill="rgb(219,179,1)" fg:x="393" fg:w="1"/><text x="42.3271%" y="191.50"></text></g><g><title>[[vdso]] (1 samples, 0.11%)</title><rect x="42.0771%" y="165" width="0.1071%" height="15" fill="rgb(238,219,53)" fg:x="393" fg:w="1"/><text x="42.3271%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (71 samples, 7.60%)</title><rect x="34.6895%" y="485" width="7.6017%" height="15" fill="rgb(232,167,36)" fg:x="324" fg:w="71"/><text x="34.9395%" y="495.50">alloc::raw..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (71 samples, 7.60%)</title><rect x="34.6895%" y="469" width="7.6017%" height="15" fill="rgb(244,19,51)" fg:x="324" fg:w="71"/><text x="34.9395%" y="479.50">&lt;alloc::al..</text></g><g><title>alloc::alloc::Global::grow_impl (71 samples, 7.60%)</title><rect x="34.6895%" y="453" width="7.6017%" height="15" fill="rgb(224,6,22)" fg:x="324" fg:w="71"/><text x="34.9395%" y="463.50">alloc::all..</text></g><g><title>alloc::alloc::realloc (71 samples, 7.60%)</title><rect x="34.6895%" y="437" width="7.6017%" height="15" fill="rgb(224,145,5)" fg:x="324" fg:w="71"/><text x="34.9395%" y="447.50">alloc::all..</text></g><g><title>_mi_heap_realloc_zero (71 samples, 7.60%)</title><rect x="34.6895%" y="421" width="7.6017%" height="15" fill="rgb(234,130,49)" fg:x="324" fg:w="71"/><text x="34.9395%" y="431.50">_mi_heap_r..</text></g><g><title>mi_heap_malloc (38 samples, 4.07%)</title><rect x="38.2227%" y="405" width="4.0685%" height="15" fill="rgb(254,6,2)" fg:x="357" fg:w="38"/><text x="38.4727%" y="415.50">mi_h..</text></g><g><title>mi_heap_malloc_small (1 samples, 0.11%)</title><rect x="42.1842%" y="389" width="0.1071%" height="15" fill="rgb(208,96,46)" fg:x="394" fg:w="1"/><text x="42.4342%" y="399.50"></text></g><g><title>_mi_heap_get_free_small_page (1 samples, 0.11%)</title><rect x="42.1842%" y="373" width="0.1071%" height="15" fill="rgb(239,3,39)" fg:x="394" fg:w="1"/><text x="42.4342%" y="383.50"></text></g><g><title>_mi_wsize_from_size (1 samples, 0.11%)</title><rect x="42.1842%" y="357" width="0.1071%" height="15" fill="rgb(233,210,1)" fg:x="394" fg:w="1"/><text x="42.4342%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (76 samples, 8.14%)</title><rect x="34.2612%" y="581" width="8.1370%" height="15" fill="rgb(244,137,37)" fg:x="320" fg:w="76"/><text x="34.5112%" y="591.50">&lt;alloc::vec..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (76 samples, 8.14%)</title><rect x="34.2612%" y="565" width="8.1370%" height="15" fill="rgb(240,136,2)" fg:x="320" fg:w="76"/><text x="34.5112%" y="575.50">alloc::vec:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (76 samples, 8.14%)</title><rect x="34.2612%" y="549" width="8.1370%" height="15" fill="rgb(239,18,37)" fg:x="320" fg:w="76"/><text x="34.5112%" y="559.50">alloc::vec:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (76 samples, 8.14%)</title><rect x="34.2612%" y="533" width="8.1370%" height="15" fill="rgb(218,185,22)" fg:x="320" fg:w="76"/><text x="34.5112%" y="543.50">alloc::raw_..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (74 samples, 7.92%)</title><rect x="34.4754%" y="517" width="7.9229%" height="15" fill="rgb(225,218,4)" fg:x="322" fg:w="74"/><text x="34.7254%" y="527.50">alloc::raw_..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (74 samples, 7.92%)</title><rect x="34.4754%" y="501" width="7.9229%" height="15" fill="rgb(230,182,32)" fg:x="322" fg:w="74"/><text x="34.7254%" y="511.50">alloc::raw_..</text></g><g><title>core::cmp::max (1 samples, 0.11%)</title><rect x="42.2912%" y="485" width="0.1071%" height="15" fill="rgb(242,56,43)" fg:x="395" fg:w="1"/><text x="42.5412%" y="495.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.11%)</title><rect x="42.2912%" y="469" width="0.1071%" height="15" fill="rgb(233,99,24)" fg:x="395" fg:w="1"/><text x="42.5412%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (77 samples, 8.24%)</title><rect x="34.2612%" y="597" width="8.2441%" height="15" fill="rgb(234,209,42)" fg:x="320" fg:w="77"/><text x="34.5112%" y="607.50">&lt;alloc::vec..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.11%)</title><rect x="42.3983%" y="581" width="0.1071%" height="15" fill="rgb(227,7,12)" fg:x="396" fg:w="1"/><text x="42.6483%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.11%)</title><rect x="42.3983%" y="565" width="0.1071%" height="15" fill="rgb(245,203,43)" fg:x="396" fg:w="1"/><text x="42.6483%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.11%)</title><rect x="42.3983%" y="549" width="0.1071%" height="15" fill="rgb(238,205,33)" fg:x="396" fg:w="1"/><text x="42.6483%" y="559.50"></text></g><g><title>[libc.so.6] (25 samples, 2.68%)</title><rect x="42.5054%" y="597" width="2.6767%" height="15" fill="rgb(231,56,7)" fg:x="397" fg:w="25"/><text x="42.7554%" y="607.50">[l..</text></g><g><title>[unknown] (12 samples, 1.28%)</title><rect x="43.8972%" y="581" width="1.2848%" height="15" fill="rgb(244,186,29)" fg:x="410" fg:w="12"/><text x="44.1472%" y="591.50"></text></g><g><title>[unknown] (12 samples, 1.28%)</title><rect x="43.8972%" y="565" width="1.2848%" height="15" fill="rgb(234,111,31)" fg:x="410" fg:w="12"/><text x="44.1472%" y="575.50"></text></g><g><title>[unknown] (11 samples, 1.18%)</title><rect x="44.0043%" y="549" width="1.1777%" height="15" fill="rgb(241,149,10)" fg:x="411" fg:w="11"/><text x="44.2543%" y="559.50"></text></g><g><title>[unknown] (10 samples, 1.07%)</title><rect x="44.1113%" y="533" width="1.0707%" height="15" fill="rgb(249,206,44)" fg:x="412" fg:w="10"/><text x="44.3613%" y="543.50"></text></g><g><title>[unknown] (10 samples, 1.07%)</title><rect x="44.1113%" y="517" width="1.0707%" height="15" fill="rgb(251,153,30)" fg:x="412" fg:w="10"/><text x="44.3613%" y="527.50"></text></g><g><title>[unknown] (8 samples, 0.86%)</title><rect x="44.3255%" y="501" width="0.8565%" height="15" fill="rgb(239,152,38)" fg:x="414" fg:w="8"/><text x="44.5755%" y="511.50"></text></g><g><title>[unknown] (8 samples, 0.86%)</title><rect x="44.3255%" y="485" width="0.8565%" height="15" fill="rgb(249,139,47)" fg:x="414" fg:w="8"/><text x="44.5755%" y="495.50"></text></g><g><title>[unknown] (8 samples, 0.86%)</title><rect x="44.3255%" y="469" width="0.8565%" height="15" fill="rgb(244,64,35)" fg:x="414" fg:w="8"/><text x="44.5755%" y="479.50"></text></g><g><title>[unknown] (7 samples, 0.75%)</title><rect x="44.4325%" y="453" width="0.7495%" height="15" fill="rgb(216,46,15)" fg:x="415" fg:w="7"/><text x="44.6825%" y="463.50"></text></g><g><title>[unknown] (7 samples, 0.75%)</title><rect x="44.4325%" y="437" width="0.7495%" height="15" fill="rgb(250,74,19)" fg:x="415" fg:w="7"/><text x="44.6825%" y="447.50"></text></g><g><title>[unknown] (7 samples, 0.75%)</title><rect x="44.4325%" y="421" width="0.7495%" height="15" fill="rgb(249,42,33)" fg:x="415" fg:w="7"/><text x="44.6825%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="45.0749%" y="405" width="0.1071%" height="15" fill="rgb(242,149,17)" fg:x="421" fg:w="1"/><text x="45.3249%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.43%)</title><rect x="45.1820%" y="597" width="0.4283%" height="15" fill="rgb(244,29,21)" fg:x="422" fg:w="4"/><text x="45.4320%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.43%)</title><rect x="45.1820%" y="581" width="0.4283%" height="15" fill="rgb(220,130,37)" fg:x="422" fg:w="4"/><text x="45.4320%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.43%)</title><rect x="45.1820%" y="565" width="0.4283%" height="15" fill="rgb(211,67,2)" fg:x="422" fg:w="4"/><text x="45.4320%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.43%)</title><rect x="45.1820%" y="549" width="0.4283%" height="15" fill="rgb(235,68,52)" fg:x="422" fg:w="4"/><text x="45.4320%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.43%)</title><rect x="45.1820%" y="533" width="0.4283%" height="15" fill="rgb(246,142,3)" fg:x="422" fg:w="4"/><text x="45.4320%" y="543.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.43%)</title><rect x="45.1820%" y="517" width="0.4283%" height="15" fill="rgb(241,25,7)" fg:x="422" fg:w="4"/><text x="45.4320%" y="527.50"></text></g><g><title>_mi_heap_realloc_zero (4 samples, 0.43%)</title><rect x="45.1820%" y="501" width="0.4283%" height="15" fill="rgb(242,119,39)" fg:x="422" fg:w="4"/><text x="45.4320%" y="511.50"></text></g><g><title>_mi_malloc_generic (4 samples, 0.43%)</title><rect x="45.1820%" y="485" width="0.4283%" height="15" fill="rgb(241,98,45)" fg:x="422" fg:w="4"/><text x="45.4320%" y="495.50"></text></g><g><title>mi_find_page (4 samples, 0.43%)</title><rect x="45.1820%" y="469" width="0.4283%" height="15" fill="rgb(254,28,30)" fg:x="422" fg:w="4"/><text x="45.4320%" y="479.50"></text></g><g><title>mi_find_free_page (4 samples, 0.43%)</title><rect x="45.1820%" y="453" width="0.4283%" height="15" fill="rgb(241,142,54)" fg:x="422" fg:w="4"/><text x="45.4320%" y="463.50"></text></g><g><title>mi_page_queue_find_free_ex (4 samples, 0.43%)</title><rect x="45.1820%" y="437" width="0.4283%" height="15" fill="rgb(222,85,15)" fg:x="422" fg:w="4"/><text x="45.4320%" y="447.50"></text></g><g><title>mi_page_extend_free (4 samples, 0.43%)</title><rect x="45.1820%" y="421" width="0.4283%" height="15" fill="rgb(210,85,47)" fg:x="422" fg:w="4"/><text x="45.4320%" y="431.50"></text></g><g><title>mi_page_extend_free (4 samples, 0.43%)</title><rect x="45.1820%" y="405" width="0.4283%" height="15" fill="rgb(224,206,25)" fg:x="422" fg:w="4"/><text x="45.4320%" y="415.50"></text></g><g><title>mi_page_free_list_extend (4 samples, 0.43%)</title><rect x="45.1820%" y="389" width="0.4283%" height="15" fill="rgb(243,201,19)" fg:x="422" fg:w="4"/><text x="45.4320%" y="399.50"></text></g><g><title>mi_block_set_next (4 samples, 0.43%)</title><rect x="45.1820%" y="373" width="0.4283%" height="15" fill="rgb(236,59,4)" fg:x="422" fg:w="4"/><text x="45.4320%" y="383.50"></text></g><g><title>mi_block_set_nextx (4 samples, 0.43%)</title><rect x="45.1820%" y="357" width="0.4283%" height="15" fill="rgb(254,179,45)" fg:x="422" fg:w="4"/><text x="45.4320%" y="367.50"></text></g><g><title>[unknown] (4 samples, 0.43%)</title><rect x="45.1820%" y="341" width="0.4283%" height="15" fill="rgb(226,14,10)" fg:x="422" fg:w="4"/><text x="45.4320%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.11%)</title><rect x="45.6103%" y="597" width="0.1071%" height="15" fill="rgb(244,27,41)" fg:x="426" fg:w="1"/><text x="45.8603%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.11%)</title><rect x="45.6103%" y="581" width="0.1071%" height="15" fill="rgb(235,35,32)" fg:x="426" fg:w="1"/><text x="45.8603%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.11%)</title><rect x="45.6103%" y="565" width="0.1071%" height="15" fill="rgb(218,68,31)" fg:x="426" fg:w="1"/><text x="45.8603%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.11%)</title><rect x="45.6103%" y="549" width="0.1071%" height="15" fill="rgb(207,120,37)" fg:x="426" fg:w="1"/><text x="45.8603%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.11%)</title><rect x="45.6103%" y="533" width="0.1071%" height="15" fill="rgb(227,98,0)" fg:x="426" fg:w="1"/><text x="45.8603%" y="543.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.11%)</title><rect x="45.6103%" y="517" width="0.1071%" height="15" fill="rgb(207,7,3)" fg:x="426" fg:w="1"/><text x="45.8603%" y="527.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.11%)</title><rect x="45.6103%" y="501" width="0.1071%" height="15" fill="rgb(206,98,19)" fg:x="426" fg:w="1"/><text x="45.8603%" y="511.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.11%)</title><rect x="45.6103%" y="485" width="0.1071%" height="15" fill="rgb(217,5,26)" fg:x="426" fg:w="1"/><text x="45.8603%" y="495.50"></text></g><g><title>mi_find_page (1 samples, 0.11%)</title><rect x="45.6103%" y="469" width="0.1071%" height="15" fill="rgb(235,190,38)" fg:x="426" fg:w="1"/><text x="45.8603%" y="479.50"></text></g><g><title>mi_find_free_page (1 samples, 0.11%)</title><rect x="45.6103%" y="453" width="0.1071%" height="15" fill="rgb(247,86,24)" fg:x="426" fg:w="1"/><text x="45.8603%" y="463.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.11%)</title><rect x="45.6103%" y="437" width="0.1071%" height="15" fill="rgb(205,101,16)" fg:x="426" fg:w="1"/><text x="45.8603%" y="447.50"></text></g><g><title>mi_page_fresh (1 samples, 0.11%)</title><rect x="45.6103%" y="421" width="0.1071%" height="15" fill="rgb(246,168,33)" fg:x="426" fg:w="1"/><text x="45.8603%" y="431.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.11%)</title><rect x="45.6103%" y="405" width="0.1071%" height="15" fill="rgb(231,114,1)" fg:x="426" fg:w="1"/><text x="45.8603%" y="415.50"></text></g><g><title>mi_page_init (1 samples, 0.11%)</title><rect x="45.6103%" y="389" width="0.1071%" height="15" fill="rgb(207,184,53)" fg:x="426" fg:w="1"/><text x="45.8603%" y="399.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.11%)</title><rect x="45.6103%" y="373" width="0.1071%" height="15" fill="rgb(224,95,51)" fg:x="426" fg:w="1"/><text x="45.8603%" y="383.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.11%)</title><rect x="45.6103%" y="357" width="0.1071%" height="15" fill="rgb(212,188,45)" fg:x="426" fg:w="1"/><text x="45.8603%" y="367.50"></text></g><g><title>mi_page_free_list_extend (1 samples, 0.11%)</title><rect x="45.6103%" y="341" width="0.1071%" height="15" fill="rgb(223,154,38)" fg:x="426" fg:w="1"/><text x="45.8603%" y="351.50"></text></g><g><title>mi_block_set_next (1 samples, 0.11%)</title><rect x="45.6103%" y="325" width="0.1071%" height="15" fill="rgb(251,22,52)" fg:x="426" fg:w="1"/><text x="45.8603%" y="335.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.11%)</title><rect x="45.6103%" y="309" width="0.1071%" height="15" fill="rgb(229,209,22)" fg:x="426" fg:w="1"/><text x="45.8603%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="45.6103%" y="293" width="0.1071%" height="15" fill="rgb(234,138,34)" fg:x="426" fg:w="1"/><text x="45.8603%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.11%)</title><rect x="46.6809%" y="581" width="0.1071%" height="15" fill="rgb(212,95,11)" fg:x="436" fg:w="1"/><text x="46.9309%" y="591.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.11%)</title><rect x="46.6809%" y="565" width="0.1071%" height="15" fill="rgb(240,179,47)" fg:x="436" fg:w="1"/><text x="46.9309%" y="575.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.11%)</title><rect x="46.6809%" y="549" width="0.1071%" height="15" fill="rgb(240,163,11)" fg:x="436" fg:w="1"/><text x="46.9309%" y="559.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="46.7880%" y="581" width="0.1071%" height="15" fill="rgb(236,37,12)" fg:x="437" fg:w="1"/><text x="47.0380%" y="591.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.11%)</title><rect x="46.8951%" y="581" width="0.1071%" height="15" fill="rgb(232,164,16)" fg:x="438" fg:w="1"/><text x="47.1451%" y="591.50"></text></g><g><title>_mi_memcpy_aligned (3 samples, 0.32%)</title><rect x="47.4304%" y="453" width="0.3212%" height="15" fill="rgb(244,205,15)" fg:x="443" fg:w="3"/><text x="47.6804%" y="463.50"></text></g><g><title>_mi_memcpy (3 samples, 0.32%)</title><rect x="47.4304%" y="437" width="0.3212%" height="15" fill="rgb(223,117,47)" fg:x="443" fg:w="3"/><text x="47.6804%" y="447.50"></text></g><g><title>memcpy (3 samples, 0.32%)</title><rect x="47.4304%" y="421" width="0.3212%" height="15" fill="rgb(244,107,35)" fg:x="443" fg:w="3"/><text x="47.6804%" y="431.50"></text></g><g><title>[libc.so.6] (3 samples, 0.32%)</title><rect x="47.4304%" y="405" width="0.3212%" height="15" fill="rgb(205,140,8)" fg:x="443" fg:w="3"/><text x="47.6804%" y="415.50"></text></g><g><title>mi_free (2 samples, 0.21%)</title><rect x="47.7516%" y="453" width="0.2141%" height="15" fill="rgb(228,84,46)" fg:x="446" fg:w="2"/><text x="48.0016%" y="463.50"></text></g><g><title>mi_checked_ptr_segment (1 samples, 0.11%)</title><rect x="47.8587%" y="437" width="0.1071%" height="15" fill="rgb(254,188,9)" fg:x="447" fg:w="1"/><text x="48.1087%" y="447.50"></text></g><g><title>_mi_page_free_collect (2 samples, 0.21%)</title><rect x="48.0728%" y="389" width="0.2141%" height="15" fill="rgb(206,112,54)" fg:x="449" fg:w="2"/><text x="48.3228%" y="399.50"></text></g><g><title>_mi_malloc_generic (4 samples, 0.43%)</title><rect x="47.9657%" y="437" width="0.4283%" height="15" fill="rgb(216,84,49)" fg:x="448" fg:w="4"/><text x="48.2157%" y="447.50"></text></g><g><title>mi_find_page (4 samples, 0.43%)</title><rect x="47.9657%" y="421" width="0.4283%" height="15" fill="rgb(214,194,35)" fg:x="448" fg:w="4"/><text x="48.2157%" y="431.50"></text></g><g><title>mi_find_free_page (4 samples, 0.43%)</title><rect x="47.9657%" y="405" width="0.4283%" height="15" fill="rgb(249,28,3)" fg:x="448" fg:w="4"/><text x="48.2157%" y="415.50"></text></g><g><title>mi_page_queue (1 samples, 0.11%)</title><rect x="48.2869%" y="389" width="0.1071%" height="15" fill="rgb(222,56,52)" fg:x="451" fg:w="1"/><text x="48.5369%" y="399.50"></text></g><g><title>_mi_bin (1 samples, 0.11%)</title><rect x="48.2869%" y="373" width="0.1071%" height="15" fill="rgb(245,217,50)" fg:x="451" fg:w="1"/><text x="48.5369%" y="383.50"></text></g><g><title>mi_bin (1 samples, 0.11%)</title><rect x="48.2869%" y="357" width="0.1071%" height="15" fill="rgb(213,201,24)" fg:x="451" fg:w="1"/><text x="48.5369%" y="367.50"></text></g><g><title>mi_bsr (1 samples, 0.11%)</title><rect x="48.2869%" y="341" width="0.1071%" height="15" fill="rgb(248,116,28)" fg:x="451" fg:w="1"/><text x="48.5369%" y="351.50"></text></g><g><title>mi_clz (1 samples, 0.11%)</title><rect x="48.2869%" y="325" width="0.1071%" height="15" fill="rgb(219,72,43)" fg:x="451" fg:w="1"/><text x="48.5369%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (11 samples, 1.18%)</title><rect x="47.3233%" y="517" width="1.1777%" height="15" fill="rgb(209,138,14)" fg:x="442" fg:w="11"/><text x="47.5733%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (11 samples, 1.18%)</title><rect x="47.3233%" y="501" width="1.1777%" height="15" fill="rgb(222,18,33)" fg:x="442" fg:w="11"/><text x="47.5733%" y="511.50"></text></g><g><title>alloc::alloc::realloc (11 samples, 1.18%)</title><rect x="47.3233%" y="485" width="1.1777%" height="15" fill="rgb(213,199,7)" fg:x="442" fg:w="11"/><text x="47.5733%" y="495.50"></text></g><g><title>_mi_heap_realloc_zero (11 samples, 1.18%)</title><rect x="47.3233%" y="469" width="1.1777%" height="15" fill="rgb(250,110,10)" fg:x="442" fg:w="11"/><text x="47.5733%" y="479.50"></text></g><g><title>mi_heap_malloc (5 samples, 0.54%)</title><rect x="47.9657%" y="453" width="0.5353%" height="15" fill="rgb(248,123,6)" fg:x="448" fg:w="5"/><text x="48.2157%" y="463.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.11%)</title><rect x="48.3940%" y="437" width="0.1071%" height="15" fill="rgb(206,91,31)" fg:x="452" fg:w="1"/><text x="48.6440%" y="447.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.11%)</title><rect x="48.3940%" y="421" width="0.1071%" height="15" fill="rgb(211,154,13)" fg:x="452" fg:w="1"/><text x="48.6440%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.11%)</title><rect x="48.5011%" y="517" width="0.1071%" height="15" fill="rgb(225,148,7)" fg:x="453" fg:w="1"/><text x="48.7511%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (18 samples, 1.93%)</title><rect x="47.1092%" y="565" width="1.9272%" height="15" fill="rgb(220,160,43)" fg:x="440" fg:w="18"/><text x="47.3592%" y="575.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (18 samples, 1.93%)</title><rect x="47.1092%" y="549" width="1.9272%" height="15" fill="rgb(213,52,39)" fg:x="440" fg:w="18"/><text x="47.3592%" y="559.50">a..</text></g><g><title>alloc::raw_vec::finish_grow (18 samples, 1.93%)</title><rect x="47.1092%" y="533" width="1.9272%" height="15" fill="rgb(243,137,7)" fg:x="440" fg:w="18"/><text x="47.3592%" y="543.50">a..</text></g><g><title>mi_malloc (4 samples, 0.43%)</title><rect x="48.6081%" y="517" width="0.4283%" height="15" fill="rgb(230,79,13)" fg:x="454" fg:w="4"/><text x="48.8581%" y="527.50"></text></g><g><title>mi_heap_malloc (4 samples, 0.43%)</title><rect x="48.6081%" y="501" width="0.4283%" height="15" fill="rgb(247,105,23)" fg:x="454" fg:w="4"/><text x="48.8581%" y="511.50"></text></g><g><title>mi_heap_malloc_small (4 samples, 0.43%)</title><rect x="48.6081%" y="485" width="0.4283%" height="15" fill="rgb(223,179,41)" fg:x="454" fg:w="4"/><text x="48.8581%" y="495.50"></text></g><g><title>_mi_page_malloc (4 samples, 0.43%)</title><rect x="48.6081%" y="469" width="0.4283%" height="15" fill="rgb(218,9,34)" fg:x="454" fg:w="4"/><text x="48.8581%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (30 samples, 3.21%)</title><rect x="49.0364%" y="565" width="3.2120%" height="15" fill="rgb(222,106,8)" fg:x="458" fg:w="30"/><text x="49.2864%" y="575.50">cor..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (30 samples, 3.21%)</title><rect x="49.0364%" y="549" width="3.2120%" height="15" fill="rgb(211,220,0)" fg:x="458" fg:w="30"/><text x="49.2864%" y="559.50">cor..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (54 samples, 5.78%)</title><rect x="47.0021%" y="581" width="5.7816%" height="15" fill="rgb(229,52,16)" fg:x="439" fg:w="54"/><text x="47.2521%" y="591.50">alloc::..</text></g><g><title>core::ptr::write (5 samples, 0.54%)</title><rect x="52.2484%" y="565" width="0.5353%" height="15" fill="rgb(212,155,18)" fg:x="488" fg:w="5"/><text x="52.4984%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (3 samples, 0.32%)</title><rect x="52.7837%" y="581" width="0.3212%" height="15" fill="rgb(242,21,14)" fg:x="493" fg:w="3"/><text x="53.0337%" y="591.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_boolie (6 samples, 0.64%)</title><rect x="54.1756%" y="549" width="0.6424%" height="15" fill="rgb(222,19,48)" fg:x="506" fg:w="6"/><text x="54.4256%" y="559.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bit (6 samples, 0.64%)</title><rect x="54.1756%" y="533" width="0.6424%" height="15" fill="rgb(232,45,27)" fg:x="506" fg:w="6"/><text x="54.4256%" y="543.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (6 samples, 0.64%)</title><rect x="54.1756%" y="517" width="0.6424%" height="15" fill="rgb(249,103,42)" fg:x="506" fg:w="6"/><text x="54.4256%" y="527.50"></text></g><g><title>bitter::LittleEndianReader::refill (1 samples, 0.11%)</title><rect x="54.7109%" y="501" width="0.1071%" height="15" fill="rgb(246,81,33)" fg:x="511" fg:w="1"/><text x="54.9609%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.11%)</title><rect x="54.7109%" y="485" width="0.1071%" height="15" fill="rgb(252,33,42)" fg:x="511" fg:w="1"/><text x="54.9609%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.11%)</title><rect x="54.7109%" y="469" width="0.1071%" height="15" fill="rgb(209,212,41)" fg:x="511" fg:w="1"/><text x="54.9609%" y="479.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_inx (25 samples, 2.68%)</title><rect x="53.2120%" y="565" width="2.6767%" height="15" fill="rgb(207,154,6)" fg:x="497" fg:w="25"/><text x="53.4620%" y="575.50">de..</text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (10 samples, 1.07%)</title><rect x="54.8180%" y="549" width="1.0707%" height="15" fill="rgb(223,64,47)" fg:x="512" fg:w="10"/><text x="55.0680%" y="559.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (10 samples, 1.07%)</title><rect x="54.8180%" y="533" width="1.0707%" height="15" fill="rgb(211,161,38)" fg:x="512" fg:w="10"/><text x="55.0680%" y="543.50"></text></g><g><title>bitter::LittleEndianReader::refill (2 samples, 0.21%)</title><rect x="55.6745%" y="517" width="0.2141%" height="15" fill="rgb(219,138,40)" fg:x="520" fg:w="2"/><text x="55.9245%" y="527.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::parse_indicies (32 samples, 3.43%)</title><rect x="53.1049%" y="581" width="3.4261%" height="15" fill="rgb(241,228,46)" fg:x="496" fg:w="32"/><text x="53.3549%" y="591.50">dem..</text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (6 samples, 0.64%)</title><rect x="55.8887%" y="565" width="0.6424%" height="15" fill="rgb(223,209,38)" fg:x="522" fg:w="6"/><text x="56.1387%" y="575.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (2 samples, 0.21%)</title><rect x="56.3169%" y="549" width="0.2141%" height="15" fill="rgb(236,164,45)" fg:x="526" fg:w="2"/><text x="56.5669%" y="559.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (2 samples, 0.21%)</title><rect x="56.3169%" y="533" width="0.2141%" height="15" fill="rgb(231,15,5)" fg:x="526" fg:w="2"/><text x="56.5669%" y="543.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_array (1 samples, 0.11%)</title><rect x="57.2805%" y="565" width="0.1071%" height="15" fill="rgb(252,35,15)" fg:x="535" fg:w="1"/><text x="57.5305%" y="575.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1 samples, 0.11%)</title><rect x="57.2805%" y="549" width="0.1071%" height="15" fill="rgb(248,181,18)" fg:x="535" fg:w="1"/><text x="57.5305%" y="559.50"></text></g><g><title>protobuf::text_format::print::fmt (1 samples, 0.11%)</title><rect x="57.2805%" y="533" width="0.1071%" height="15" fill="rgb(233,39,42)" fg:x="535" fg:w="1"/><text x="57.5305%" y="543.50"></text></g><g><title>protobuf::text_format::print::print_to_string_internal (1 samples, 0.11%)</title><rect x="57.2805%" y="517" width="0.1071%" height="15" fill="rgb(238,110,33)" fg:x="535" fg:w="1"/><text x="57.5305%" y="527.50"></text></g><g><title>protobuf::text_format::print::print_to_internal (1 samples, 0.11%)</title><rect x="57.2805%" y="501" width="0.1071%" height="15" fill="rgb(233,195,10)" fg:x="535" fg:w="1"/><text x="57.5305%" y="511.50"></text></g><g><title>protobuf::reflect::field::FieldDescriptor::get_reflect (1 samples, 0.11%)</title><rect x="57.2805%" y="485" width="0.1071%" height="15" fill="rgb(254,105,3)" fg:x="535" fg:w="1"/><text x="57.5305%" y="495.50"></text></g><g><title>protobuf::reflect::acc::GeneratedFieldAccessor::get_reflect (1 samples, 0.11%)</title><rect x="57.2805%" y="469" width="0.1071%" height="15" fill="rgb(221,225,9)" fg:x="535" fg:w="1"/><text x="57.5305%" y="479.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_special_float (3 samples, 0.32%)</title><rect x="57.8158%" y="549" width="0.3212%" height="15" fill="rgb(224,227,45)" fg:x="540" fg:w="3"/><text x="58.0658%" y="559.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_float (9 samples, 0.96%)</title><rect x="57.3876%" y="565" width="0.9636%" height="15" fill="rgb(229,198,43)" fg:x="536" fg:w="9"/><text x="57.6376%" y="575.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (2 samples, 0.21%)</title><rect x="58.1370%" y="549" width="0.2141%" height="15" fill="rgb(206,209,35)" fg:x="543" fg:w="2"/><text x="58.3870%" y="559.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (1 samples, 0.11%)</title><rect x="58.3512%" y="549" width="0.1071%" height="15" fill="rgb(245,195,53)" fg:x="545" fg:w="1"/><text x="58.6012%" y="559.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.11%)</title><rect x="58.3512%" y="533" width="0.1071%" height="15" fill="rgb(240,92,26)" fg:x="545" fg:w="1"/><text x="58.6012%" y="543.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_int (2 samples, 0.21%)</title><rect x="58.3512%" y="565" width="0.2141%" height="15" fill="rgb(207,40,23)" fg:x="545" fg:w="2"/><text x="58.6012%" y="575.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_sbit_long (1 samples, 0.11%)</title><rect x="58.4582%" y="549" width="0.1071%" height="15" fill="rgb(223,111,35)" fg:x="546" fg:w="1"/><text x="58.7082%" y="559.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (1 samples, 0.11%)</title><rect x="58.4582%" y="533" width="0.1071%" height="15" fill="rgb(229,147,28)" fg:x="546" fg:w="1"/><text x="58.7082%" y="543.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.11%)</title><rect x="58.4582%" y="517" width="0.1071%" height="15" fill="rgb(211,29,28)" fg:x="546" fg:w="1"/><text x="58.7082%" y="527.50"></text></g><g><title>bitter::LittleEndianReader::refill (1 samples, 0.11%)</title><rect x="58.4582%" y="501" width="0.1071%" height="15" fill="rgb(228,72,33)" fg:x="546" fg:w="1"/><text x="58.7082%" y="511.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_vec (1 samples, 0.11%)</title><rect x="58.5653%" y="565" width="0.1071%" height="15" fill="rgb(205,214,31)" fg:x="547" fg:w="1"/><text x="58.8153%" y="575.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_float (1 samples, 0.11%)</title><rect x="58.5653%" y="549" width="0.1071%" height="15" fill="rgb(224,111,15)" fg:x="547" fg:w="1"/><text x="58.8153%" y="559.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_special_float (1 samples, 0.11%)</title><rect x="58.5653%" y="533" width="0.1071%" height="15" fill="rgb(253,21,26)" fg:x="547" fg:w="1"/><text x="58.8153%" y="543.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_bit_coord (1 samples, 0.11%)</title><rect x="58.5653%" y="517" width="0.1071%" height="15" fill="rgb(245,139,43)" fg:x="547" fg:w="1"/><text x="58.8153%" y="527.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode (21 samples, 2.25%)</title><rect x="56.5310%" y="581" width="2.2484%" height="15" fill="rgb(252,170,7)" fg:x="528" fg:w="21"/><text x="56.7810%" y="591.50">d..</text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_vec_xy (1 samples, 0.11%)</title><rect x="58.6724%" y="565" width="0.1071%" height="15" fill="rgb(231,118,14)" fg:x="548" fg:w="1"/><text x="58.9224%" y="575.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_float (1 samples, 0.11%)</title><rect x="58.6724%" y="549" width="0.1071%" height="15" fill="rgb(238,83,0)" fg:x="548" fg:w="1"/><text x="58.9224%" y="559.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_special_float (1 samples, 0.11%)</title><rect x="58.6724%" y="533" width="0.1071%" height="15" fill="rgb(221,39,39)" fg:x="548" fg:w="1"/><text x="58.9224%" y="543.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_f32 (1 samples, 0.11%)</title><rect x="58.6724%" y="517" width="0.1071%" height="15" fill="rgb(222,119,46)" fg:x="548" fg:w="1"/><text x="58.9224%" y="527.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_u32 (1 samples, 0.11%)</title><rect x="58.6724%" y="501" width="0.1071%" height="15" fill="rgb(222,165,49)" fg:x="548" fg:w="1"/><text x="58.9224%" y="511.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.11%)</title><rect x="58.6724%" y="485" width="0.1071%" height="15" fill="rgb(219,113,52)" fg:x="548" fg:w="1"/><text x="58.9224%" y="495.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.11%)</title><rect x="58.9936%" y="533" width="0.1071%" height="15" fill="rgb(214,7,15)" fg:x="551" fg:w="1"/><text x="59.2436%" y="543.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::hash_one (1 samples, 0.11%)</title><rect x="58.9936%" y="517" width="0.1071%" height="15" fill="rgb(235,32,4)" fg:x="551" fg:w="1"/><text x="59.2436%" y="527.50"></text></g><g><title>ahash::random_state::RandomState::hash_one (1 samples, 0.11%)</title><rect x="58.9936%" y="501" width="0.1071%" height="15" fill="rgb(238,90,54)" fg:x="551" fg:w="1"/><text x="59.2436%" y="511.50"></text></g><g><title>&lt;T as ahash::specialize::CallHasher&gt;::get_hash (1 samples, 0.11%)</title><rect x="58.9936%" y="485" width="0.1071%" height="15" fill="rgb(213,208,19)" fg:x="551" fg:w="1"/><text x="59.2436%" y="495.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.11%)</title><rect x="58.9936%" y="469" width="0.1071%" height="15" fill="rgb(233,156,4)" fg:x="551" fg:w="1"/><text x="59.2436%" y="479.50"></text></g><g><title>ahash::operations::aesenc (1 samples, 0.11%)</title><rect x="58.9936%" y="453" width="0.1071%" height="15" fill="rgb(207,194,5)" fg:x="551" fg:w="1"/><text x="59.2436%" y="463.50"></text></g><g><title>core::core_arch::x86::aes::_mm_aesenc_si128 (1 samples, 0.11%)</title><rect x="58.9936%" y="437" width="0.1071%" height="15" fill="rgb(206,111,30)" fg:x="551" fg:w="1"/><text x="59.2436%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.11%)</title><rect x="59.3148%" y="485" width="0.1071%" height="15" fill="rgb(243,70,54)" fg:x="554" fg:w="1"/><text x="59.5648%" y="495.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.11%)</title><rect x="59.3148%" y="469" width="0.1071%" height="15" fill="rgb(242,28,8)" fg:x="554" fg:w="1"/><text x="59.5648%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u16&gt;::eq (1 samples, 0.11%)</title><rect x="59.3148%" y="453" width="0.1071%" height="15" fill="rgb(219,106,18)" fg:x="554" fg:w="1"/><text x="59.5648%" y="463.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::parse_ent_props (130 samples, 13.92%)</title><rect x="45.7173%" y="597" width="13.9186%" height="15" fill="rgb(244,222,10)" fg:x="427" fg:w="130"/><text x="45.9673%" y="607.50">demoparser::parsing::..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.86%)</title><rect x="58.7794%" y="581" width="0.8565%" height="15" fill="rgb(236,179,52)" fg:x="549" fg:w="8"/><text x="59.0294%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (8 samples, 0.86%)</title><rect x="58.7794%" y="565" width="0.8565%" height="15" fill="rgb(213,23,39)" fg:x="549" fg:w="8"/><text x="59.0294%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 0.86%)</title><rect x="58.7794%" y="549" width="0.8565%" height="15" fill="rgb(238,48,10)" fg:x="549" fg:w="8"/><text x="59.0294%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.54%)</title><rect x="59.1006%" y="533" width="0.5353%" height="15" fill="rgb(251,196,23)" fg:x="552" fg:w="5"/><text x="59.3506%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.54%)</title><rect x="59.1006%" y="517" width="0.5353%" height="15" fill="rgb(250,152,24)" fg:x="552" fg:w="5"/><text x="59.3506%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (5 samples, 0.54%)</title><rect x="59.1006%" y="501" width="0.5353%" height="15" fill="rgb(209,150,17)" fg:x="552" fg:w="5"/><text x="59.3506%" y="511.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.21%)</title><rect x="59.4218%" y="485" width="0.2141%" height="15" fill="rgb(234,202,34)" fg:x="555" fg:w="2"/><text x="59.6718%" y="495.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::_parse_packet_entities (239 samples, 25.59%)</title><rect x="34.1542%" y="613" width="25.5889%" height="15" fill="rgb(253,148,53)" fg:x="319" fg:w="239"/><text x="34.4042%" y="623.50">demoparser::parsing::demo_parsing::entiti..</text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_boolie (1 samples, 0.11%)</title><rect x="59.6360%" y="597" width="0.1071%" height="15" fill="rgb(218,129,16)" fg:x="557" fg:w="1"/><text x="59.8860%" y="607.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bit (1 samples, 0.11%)</title><rect x="59.6360%" y="581" width="0.1071%" height="15" fill="rgb(216,85,19)" fg:x="557" fg:w="1"/><text x="59.8860%" y="591.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.11%)</title><rect x="59.6360%" y="565" width="0.1071%" height="15" fill="rgb(235,228,7)" fg:x="557" fg:w="1"/><text x="59.8860%" y="575.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes (10 samples, 1.07%)</title><rect x="59.9572%" y="565" width="1.0707%" height="15" fill="rgb(245,175,0)" fg:x="560" fg:w="10"/><text x="60.2072%" y="575.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (10 samples, 1.07%)</title><rect x="59.9572%" y="549" width="1.0707%" height="15" fill="rgb(208,168,36)" fg:x="560" fg:w="10"/><text x="60.2072%" y="559.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (10 samples, 1.07%)</title><rect x="59.9572%" y="533" width="1.0707%" height="15" fill="rgb(246,171,24)" fg:x="560" fg:w="10"/><text x="60.2072%" y="543.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (10 samples, 1.07%)</title><rect x="59.9572%" y="517" width="1.0707%" height="15" fill="rgb(215,142,24)" fg:x="560" fg:w="10"/><text x="60.2072%" y="527.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact (9 samples, 0.96%)</title><rect x="60.0642%" y="501" width="0.9636%" height="15" fill="rgb(250,187,7)" fg:x="561" fg:w="9"/><text x="60.3142%" y="511.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::read_bytes (9 samples, 0.96%)</title><rect x="60.0642%" y="485" width="0.9636%" height="15" fill="rgb(228,66,33)" fg:x="561" fg:w="9"/><text x="60.3142%" y="495.50"></text></g><g><title>protobuf::misc::maybe_uninit_write_slice (9 samples, 0.96%)</title><rect x="60.0642%" y="469" width="0.9636%" height="15" fill="rgb(234,215,21)" fg:x="561" fg:w="9"/><text x="60.3142%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (9 samples, 0.96%)</title><rect x="60.0642%" y="453" width="0.9636%" height="15" fill="rgb(222,191,20)" fg:x="561" fg:w="9"/><text x="60.3142%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.96%)</title><rect x="60.0642%" y="437" width="0.9636%" height="15" fill="rgb(245,79,54)" fg:x="561" fg:w="9"/><text x="60.3142%" y="447.50"></text></g><g><title>[libc.so.6] (9 samples, 0.96%)</title><rect x="60.0642%" y="421" width="0.9636%" height="15" fill="rgb(240,10,37)" fg:x="561" fg:w="9"/><text x="60.3142%" y="431.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_packet_entities (252 samples, 26.98%)</title><rect x="34.1542%" y="629" width="26.9807%" height="15" fill="rgb(214,192,32)" fg:x="319" fg:w="252"/><text x="34.4042%" y="639.50">demoparser::parsing::demo_parsing::entities..</text></g><g><title>protobuf::message::Message::parse_from_bytes (13 samples, 1.39%)</title><rect x="59.7430%" y="613" width="1.3919%" height="15" fill="rgb(209,36,54)" fg:x="558" fg:w="13"/><text x="59.9930%" y="623.50"></text></g><g><title>protobuf::message::Message::parse_from (12 samples, 1.28%)</title><rect x="59.8501%" y="597" width="1.2848%" height="15" fill="rgb(220,10,11)" fg:x="559" fg:w="12"/><text x="60.1001%" y="607.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_PacketEntities as protobuf::message::Message&gt;::merge_from (12 samples, 1.28%)</title><rect x="59.8501%" y="581" width="1.2848%" height="15" fill="rgb(221,106,17)" fg:x="559" fg:w="12"/><text x="60.1001%" y="591.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (1 samples, 0.11%)</title><rect x="61.0278%" y="565" width="0.1071%" height="15" fill="rgb(251,142,44)" fg:x="570" fg:w="1"/><text x="61.2778%" y="575.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (1 samples, 0.11%)</title><rect x="61.0278%" y="549" width="0.1071%" height="15" fill="rgb(238,13,15)" fg:x="570" fg:w="1"/><text x="61.2778%" y="559.50"></text></g><g><title>protobuf::varint::decode::decode_varint32 (1 samples, 0.11%)</title><rect x="61.0278%" y="533" width="0.1071%" height="15" fill="rgb(208,107,27)" fg:x="570" fg:w="1"/><text x="61.2778%" y="543.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (1 samples, 0.11%)</title><rect x="61.0278%" y="517" width="0.1071%" height="15" fill="rgb(205,136,37)" fg:x="570" fg:w="1"/><text x="61.2778%" y="527.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.11%)</title><rect x="61.3490%" y="357" width="0.1071%" height="15" fill="rgb(250,205,27)" fg:x="573" fg:w="1"/><text x="61.5990%" y="367.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.11%)</title><rect x="61.3490%" y="341" width="0.1071%" height="15" fill="rgb(210,80,43)" fg:x="573" fg:w="1"/><text x="61.5990%" y="351.50"></text></g><g><title>mi_page_free_list_extend (1 samples, 0.11%)</title><rect x="61.3490%" y="325" width="0.1071%" height="15" fill="rgb(247,160,36)" fg:x="573" fg:w="1"/><text x="61.5990%" y="335.50"></text></g><g><title>mi_block_set_next (1 samples, 0.11%)</title><rect x="61.3490%" y="309" width="0.1071%" height="15" fill="rgb(234,13,49)" fg:x="573" fg:w="1"/><text x="61.5990%" y="319.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.11%)</title><rect x="61.3490%" y="293" width="0.1071%" height="15" fill="rgb(234,122,0)" fg:x="573" fg:w="1"/><text x="61.5990%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.3490%" y="277" width="0.1071%" height="15" fill="rgb(207,146,38)" fg:x="573" fg:w="1"/><text x="61.5990%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.3490%" y="261" width="0.1071%" height="15" fill="rgb(207,177,25)" fg:x="573" fg:w="1"/><text x="61.5990%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.3490%" y="245" width="0.1071%" height="15" fill="rgb(211,178,42)" fg:x="573" fg:w="1"/><text x="61.5990%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.3490%" y="229" width="0.1071%" height="15" fill="rgb(230,69,54)" fg:x="573" fg:w="1"/><text x="61.5990%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.3490%" y="213" width="0.1071%" height="15" fill="rgb(214,135,41)" fg:x="573" fg:w="1"/><text x="61.5990%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.3490%" y="197" width="0.1071%" height="15" fill="rgb(237,67,25)" fg:x="573" fg:w="1"/><text x="61.5990%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.3490%" y="181" width="0.1071%" height="15" fill="rgb(222,189,50)" fg:x="573" fg:w="1"/><text x="61.5990%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.3490%" y="165" width="0.1071%" height="15" fill="rgb(245,148,34)" fg:x="573" fg:w="1"/><text x="61.5990%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.3490%" y="149" width="0.1071%" height="15" fill="rgb(222,29,6)" fg:x="573" fg:w="1"/><text x="61.5990%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.3490%" y="133" width="0.1071%" height="15" fill="rgb(221,189,43)" fg:x="573" fg:w="1"/><text x="61.5990%" y="143.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2 samples, 0.21%)</title><rect x="61.3490%" y="613" width="0.2141%" height="15" fill="rgb(207,36,27)" fg:x="573" fg:w="2"/><text x="61.5990%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2 samples, 0.21%)</title><rect x="61.3490%" y="597" width="0.2141%" height="15" fill="rgb(217,90,24)" fg:x="573" fg:w="2"/><text x="61.5990%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.21%)</title><rect x="61.3490%" y="581" width="0.2141%" height="15" fill="rgb(224,66,35)" fg:x="573" fg:w="2"/><text x="61.5990%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.21%)</title><rect x="61.3490%" y="565" width="0.2141%" height="15" fill="rgb(221,13,50)" fg:x="573" fg:w="2"/><text x="61.5990%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.21%)</title><rect x="61.3490%" y="549" width="0.2141%" height="15" fill="rgb(236,68,49)" fg:x="573" fg:w="2"/><text x="61.5990%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.21%)</title><rect x="61.3490%" y="533" width="0.2141%" height="15" fill="rgb(229,146,28)" fg:x="573" fg:w="2"/><text x="61.5990%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.21%)</title><rect x="61.3490%" y="517" width="0.2141%" height="15" fill="rgb(225,31,38)" fg:x="573" fg:w="2"/><text x="61.5990%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.21%)</title><rect x="61.3490%" y="501" width="0.2141%" height="15" fill="rgb(250,208,3)" fg:x="573" fg:w="2"/><text x="61.5990%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.21%)</title><rect x="61.3490%" y="485" width="0.2141%" height="15" fill="rgb(246,54,23)" fg:x="573" fg:w="2"/><text x="61.5990%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.21%)</title><rect x="61.3490%" y="469" width="0.2141%" height="15" fill="rgb(243,76,11)" fg:x="573" fg:w="2"/><text x="61.5990%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.21%)</title><rect x="61.3490%" y="453" width="0.2141%" height="15" fill="rgb(245,21,50)" fg:x="573" fg:w="2"/><text x="61.5990%" y="463.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.21%)</title><rect x="61.3490%" y="437" width="0.2141%" height="15" fill="rgb(228,9,43)" fg:x="573" fg:w="2"/><text x="61.5990%" y="447.50"></text></g><g><title>_mi_malloc_generic (2 samples, 0.21%)</title><rect x="61.3490%" y="421" width="0.2141%" height="15" fill="rgb(208,100,47)" fg:x="573" fg:w="2"/><text x="61.5990%" y="431.50"></text></g><g><title>mi_find_page (2 samples, 0.21%)</title><rect x="61.3490%" y="405" width="0.2141%" height="15" fill="rgb(232,26,8)" fg:x="573" fg:w="2"/><text x="61.5990%" y="415.50"></text></g><g><title>mi_find_free_page (2 samples, 0.21%)</title><rect x="61.3490%" y="389" width="0.2141%" height="15" fill="rgb(216,166,38)" fg:x="573" fg:w="2"/><text x="61.5990%" y="399.50"></text></g><g><title>mi_page_queue_find_free_ex (2 samples, 0.21%)</title><rect x="61.3490%" y="373" width="0.2141%" height="15" fill="rgb(251,202,51)" fg:x="573" fg:w="2"/><text x="61.5990%" y="383.50"></text></g><g><title>mi_page_fresh (1 samples, 0.11%)</title><rect x="61.4561%" y="357" width="0.1071%" height="15" fill="rgb(254,216,34)" fg:x="574" fg:w="1"/><text x="61.7061%" y="367.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.11%)</title><rect x="61.4561%" y="341" width="0.1071%" height="15" fill="rgb(251,32,27)" fg:x="574" fg:w="1"/><text x="61.7061%" y="351.50"></text></g><g><title>mi_segments_page_alloc (1 samples, 0.11%)</title><rect x="61.4561%" y="325" width="0.1071%" height="15" fill="rgb(208,127,28)" fg:x="574" fg:w="1"/><text x="61.7061%" y="335.50"></text></g><g><title>mi_segment_delayed_decommit (1 samples, 0.11%)</title><rect x="61.4561%" y="309" width="0.1071%" height="15" fill="rgb(224,137,22)" fg:x="574" fg:w="1"/><text x="61.7061%" y="319.50"></text></g><g><title>_mi_clock_now (1 samples, 0.11%)</title><rect x="61.4561%" y="293" width="0.1071%" height="15" fill="rgb(254,70,32)" fg:x="574" fg:w="1"/><text x="61.7061%" y="303.50"></text></g><g><title>__GI___clock_gettime (1 samples, 0.11%)</title><rect x="61.4561%" y="277" width="0.1071%" height="15" fill="rgb(229,75,37)" fg:x="574" fg:w="1"/><text x="61.7061%" y="287.50"></text></g><g><title>[[vdso]] (1 samples, 0.11%)</title><rect x="61.4561%" y="261" width="0.1071%" height="15" fill="rgb(252,64,23)" fg:x="574" fg:w="1"/><text x="61.7061%" y="271.50"></text></g><g><title>[[vdso]] (1 samples, 0.11%)</title><rect x="61.4561%" y="245" width="0.1071%" height="15" fill="rgb(232,162,48)" fg:x="574" fg:w="1"/><text x="61.7061%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.11%)</title><rect x="61.5632%" y="613" width="0.1071%" height="15" fill="rgb(246,160,12)" fg:x="575" fg:w="1"/><text x="61.8132%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.11%)</title><rect x="61.5632%" y="597" width="0.1071%" height="15" fill="rgb(247,166,0)" fg:x="575" fg:w="1"/><text x="61.8132%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.11%)</title><rect x="61.5632%" y="581" width="0.1071%" height="15" fill="rgb(249,219,21)" fg:x="575" fg:w="1"/><text x="61.8132%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.11%)</title><rect x="61.5632%" y="565" width="0.1071%" height="15" fill="rgb(205,209,3)" fg:x="575" fg:w="1"/><text x="61.8132%" y="575.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.11%)</title><rect x="61.5632%" y="549" width="0.1071%" height="15" fill="rgb(243,44,1)" fg:x="575" fg:w="1"/><text x="61.8132%" y="559.50"></text></g><g><title>mi_find_page (1 samples, 0.11%)</title><rect x="61.5632%" y="533" width="0.1071%" height="15" fill="rgb(206,159,16)" fg:x="575" fg:w="1"/><text x="61.8132%" y="543.50"></text></g><g><title>mi_find_free_page (1 samples, 0.11%)</title><rect x="61.5632%" y="517" width="0.1071%" height="15" fill="rgb(244,77,30)" fg:x="575" fg:w="1"/><text x="61.8132%" y="527.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.11%)</title><rect x="61.5632%" y="501" width="0.1071%" height="15" fill="rgb(218,69,12)" fg:x="575" fg:w="1"/><text x="61.8132%" y="511.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.11%)</title><rect x="61.5632%" y="485" width="0.1071%" height="15" fill="rgb(212,87,7)" fg:x="575" fg:w="1"/><text x="61.8132%" y="495.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.11%)</title><rect x="61.5632%" y="469" width="0.1071%" height="15" fill="rgb(245,114,25)" fg:x="575" fg:w="1"/><text x="61.8132%" y="479.50"></text></g><g><title>mi_page_free_list_extend (1 samples, 0.11%)</title><rect x="61.5632%" y="453" width="0.1071%" height="15" fill="rgb(210,61,42)" fg:x="575" fg:w="1"/><text x="61.8132%" y="463.50"></text></g><g><title>mi_block_set_next (1 samples, 0.11%)</title><rect x="61.5632%" y="437" width="0.1071%" height="15" fill="rgb(211,52,33)" fg:x="575" fg:w="1"/><text x="61.8132%" y="447.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.11%)</title><rect x="61.5632%" y="421" width="0.1071%" height="15" fill="rgb(234,58,33)" fg:x="575" fg:w="1"/><text x="61.8132%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.5632%" y="405" width="0.1071%" height="15" fill="rgb(220,115,36)" fg:x="575" fg:w="1"/><text x="61.8132%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.5632%" y="389" width="0.1071%" height="15" fill="rgb(243,153,54)" fg:x="575" fg:w="1"/><text x="61.8132%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.5632%" y="373" width="0.1071%" height="15" fill="rgb(251,47,18)" fg:x="575" fg:w="1"/><text x="61.8132%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.5632%" y="357" width="0.1071%" height="15" fill="rgb(242,102,42)" fg:x="575" fg:w="1"/><text x="61.8132%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.5632%" y="341" width="0.1071%" height="15" fill="rgb(234,31,38)" fg:x="575" fg:w="1"/><text x="61.8132%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.5632%" y="325" width="0.1071%" height="15" fill="rgb(221,117,51)" fg:x="575" fg:w="1"/><text x="61.8132%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.5632%" y="309" width="0.1071%" height="15" fill="rgb(212,20,18)" fg:x="575" fg:w="1"/><text x="61.8132%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.5632%" y="293" width="0.1071%" height="15" fill="rgb(245,133,36)" fg:x="575" fg:w="1"/><text x="61.8132%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.5632%" y="277" width="0.1071%" height="15" fill="rgb(212,6,19)" fg:x="575" fg:w="1"/><text x="61.8132%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.11%)</title><rect x="61.6702%" y="549" width="0.1071%" height="15" fill="rgb(218,1,36)" fg:x="576" fg:w="1"/><text x="61.9202%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.11%)</title><rect x="61.8844%" y="533" width="0.1071%" height="15" fill="rgb(246,84,54)" fg:x="578" fg:w="1"/><text x="62.1344%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.11%)</title><rect x="61.8844%" y="517" width="0.1071%" height="15" fill="rgb(242,110,6)" fg:x="578" fg:w="1"/><text x="62.1344%" y="527.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.11%)</title><rect x="61.8844%" y="501" width="0.1071%" height="15" fill="rgb(214,47,5)" fg:x="578" fg:w="1"/><text x="62.1344%" y="511.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.11%)</title><rect x="61.8844%" y="485" width="0.1071%" height="15" fill="rgb(218,159,25)" fg:x="578" fg:w="1"/><text x="62.1344%" y="495.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.11%)</title><rect x="61.8844%" y="469" width="0.1071%" height="15" fill="rgb(215,211,28)" fg:x="578" fg:w="1"/><text x="62.1344%" y="479.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.11%)</title><rect x="61.8844%" y="453" width="0.1071%" height="15" fill="rgb(238,59,32)" fg:x="578" fg:w="1"/><text x="62.1344%" y="463.50"></text></g><g><title>mi_find_page (1 samples, 0.11%)</title><rect x="61.8844%" y="437" width="0.1071%" height="15" fill="rgb(226,82,3)" fg:x="578" fg:w="1"/><text x="62.1344%" y="447.50"></text></g><g><title>mi_find_free_page (1 samples, 0.11%)</title><rect x="61.8844%" y="421" width="0.1071%" height="15" fill="rgb(240,164,32)" fg:x="578" fg:w="1"/><text x="62.1344%" y="431.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.11%)</title><rect x="61.8844%" y="405" width="0.1071%" height="15" fill="rgb(232,46,7)" fg:x="578" fg:w="1"/><text x="62.1344%" y="415.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.11%)</title><rect x="61.8844%" y="389" width="0.1071%" height="15" fill="rgb(229,129,53)" fg:x="578" fg:w="1"/><text x="62.1344%" y="399.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.11%)</title><rect x="61.8844%" y="373" width="0.1071%" height="15" fill="rgb(234,188,29)" fg:x="578" fg:w="1"/><text x="62.1344%" y="383.50"></text></g><g><title>mi_page_free_list_extend (1 samples, 0.11%)</title><rect x="61.8844%" y="357" width="0.1071%" height="15" fill="rgb(246,141,4)" fg:x="578" fg:w="1"/><text x="62.1344%" y="367.50"></text></g><g><title>mi_block_set_next (1 samples, 0.11%)</title><rect x="61.8844%" y="341" width="0.1071%" height="15" fill="rgb(229,23,39)" fg:x="578" fg:w="1"/><text x="62.1344%" y="351.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.11%)</title><rect x="61.8844%" y="325" width="0.1071%" height="15" fill="rgb(206,12,3)" fg:x="578" fg:w="1"/><text x="62.1344%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.8844%" y="309" width="0.1071%" height="15" fill="rgb(252,226,20)" fg:x="578" fg:w="1"/><text x="62.1344%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.8844%" y="293" width="0.1071%" height="15" fill="rgb(216,123,35)" fg:x="578" fg:w="1"/><text x="62.1344%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.8844%" y="277" width="0.1071%" height="15" fill="rgb(212,68,40)" fg:x="578" fg:w="1"/><text x="62.1344%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.8844%" y="261" width="0.1071%" height="15" fill="rgb(254,125,32)" fg:x="578" fg:w="1"/><text x="62.1344%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.8844%" y="245" width="0.1071%" height="15" fill="rgb(253,97,22)" fg:x="578" fg:w="1"/><text x="62.1344%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.8844%" y="229" width="0.1071%" height="15" fill="rgb(241,101,14)" fg:x="578" fg:w="1"/><text x="62.1344%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.8844%" y="213" width="0.1071%" height="15" fill="rgb(238,103,29)" fg:x="578" fg:w="1"/><text x="62.1344%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.8844%" y="197" width="0.1071%" height="15" fill="rgb(233,195,47)" fg:x="578" fg:w="1"/><text x="62.1344%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.8844%" y="181" width="0.1071%" height="15" fill="rgb(246,218,30)" fg:x="578" fg:w="1"/><text x="62.1344%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.8844%" y="165" width="0.1071%" height="15" fill="rgb(219,145,47)" fg:x="578" fg:w="1"/><text x="62.1344%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.8844%" y="149" width="0.1071%" height="15" fill="rgb(243,12,26)" fg:x="578" fg:w="1"/><text x="62.1344%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.43%)</title><rect x="61.6702%" y="581" width="0.4283%" height="15" fill="rgb(214,87,16)" fg:x="576" fg:w="4"/><text x="61.9202%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.43%)</title><rect x="61.6702%" y="565" width="0.4283%" height="15" fill="rgb(208,99,42)" fg:x="576" fg:w="4"/><text x="61.9202%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.32%)</title><rect x="61.7773%" y="549" width="0.3212%" height="15" fill="rgb(253,99,2)" fg:x="577" fg:w="3"/><text x="62.0273%" y="559.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.11%)</title><rect x="61.9914%" y="533" width="0.1071%" height="15" fill="rgb(220,168,23)" fg:x="579" fg:w="1"/><text x="62.2414%" y="543.50"></text></g><g><title>mi_find_page (1 samples, 0.11%)</title><rect x="61.9914%" y="517" width="0.1071%" height="15" fill="rgb(242,38,24)" fg:x="579" fg:w="1"/><text x="62.2414%" y="527.50"></text></g><g><title>mi_find_free_page (1 samples, 0.11%)</title><rect x="61.9914%" y="501" width="0.1071%" height="15" fill="rgb(225,182,9)" fg:x="579" fg:w="1"/><text x="62.2414%" y="511.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.11%)</title><rect x="61.9914%" y="485" width="0.1071%" height="15" fill="rgb(243,178,37)" fg:x="579" fg:w="1"/><text x="62.2414%" y="495.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.11%)</title><rect x="61.9914%" y="469" width="0.1071%" height="15" fill="rgb(232,139,19)" fg:x="579" fg:w="1"/><text x="62.2414%" y="479.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.11%)</title><rect x="61.9914%" y="453" width="0.1071%" height="15" fill="rgb(225,201,24)" fg:x="579" fg:w="1"/><text x="62.2414%" y="463.50"></text></g><g><title>mi_page_free_list_extend (1 samples, 0.11%)</title><rect x="61.9914%" y="437" width="0.1071%" height="15" fill="rgb(221,47,46)" fg:x="579" fg:w="1"/><text x="62.2414%" y="447.50"></text></g><g><title>mi_block_set_next (1 samples, 0.11%)</title><rect x="61.9914%" y="421" width="0.1071%" height="15" fill="rgb(249,23,13)" fg:x="579" fg:w="1"/><text x="62.2414%" y="431.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.11%)</title><rect x="61.9914%" y="405" width="0.1071%" height="15" fill="rgb(219,9,5)" fg:x="579" fg:w="1"/><text x="62.2414%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.9914%" y="389" width="0.1071%" height="15" fill="rgb(254,171,16)" fg:x="579" fg:w="1"/><text x="62.2414%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.9914%" y="373" width="0.1071%" height="15" fill="rgb(230,171,20)" fg:x="579" fg:w="1"/><text x="62.2414%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.9914%" y="357" width="0.1071%" height="15" fill="rgb(210,71,41)" fg:x="579" fg:w="1"/><text x="62.2414%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.9914%" y="341" width="0.1071%" height="15" fill="rgb(206,173,20)" fg:x="579" fg:w="1"/><text x="62.2414%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.9914%" y="325" width="0.1071%" height="15" fill="rgb(233,88,34)" fg:x="579" fg:w="1"/><text x="62.2414%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.9914%" y="309" width="0.1071%" height="15" fill="rgb(223,209,46)" fg:x="579" fg:w="1"/><text x="62.2414%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.9914%" y="293" width="0.1071%" height="15" fill="rgb(250,43,18)" fg:x="579" fg:w="1"/><text x="62.2414%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.9914%" y="277" width="0.1071%" height="15" fill="rgb(208,13,10)" fg:x="579" fg:w="1"/><text x="62.2414%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.9914%" y="261" width="0.1071%" height="15" fill="rgb(212,200,36)" fg:x="579" fg:w="1"/><text x="62.2414%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.9914%" y="245" width="0.1071%" height="15" fill="rgb(225,90,30)" fg:x="579" fg:w="1"/><text x="62.2414%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="61.9914%" y="229" width="0.1071%" height="15" fill="rgb(236,182,39)" fg:x="579" fg:w="1"/><text x="62.2414%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.11%)</title><rect x="62.0985%" y="581" width="0.1071%" height="15" fill="rgb(212,144,35)" fg:x="580" fg:w="1"/><text x="62.3485%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.11%)</title><rect x="62.0985%" y="565" width="0.1071%" height="15" fill="rgb(228,63,44)" fg:x="580" fg:w="1"/><text x="62.3485%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.75%)</title><rect x="61.6702%" y="597" width="0.7495%" height="15" fill="rgb(228,109,6)" fg:x="576" fg:w="7"/><text x="61.9202%" y="607.50"></text></g><g><title>core::ptr::write (2 samples, 0.21%)</title><rect x="62.2056%" y="581" width="0.2141%" height="15" fill="rgb(238,117,24)" fg:x="581" fg:w="2"/><text x="62.4556%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="62.3126%" y="565" width="0.1071%" height="15" fill="rgb(242,26,26)" fg:x="582" fg:w="1"/><text x="62.5626%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="62.3126%" y="549" width="0.1071%" height="15" fill="rgb(221,92,48)" fg:x="582" fg:w="1"/><text x="62.5626%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="62.3126%" y="533" width="0.1071%" height="15" fill="rgb(209,209,32)" fg:x="582" fg:w="1"/><text x="62.5626%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="62.3126%" y="517" width="0.1071%" height="15" fill="rgb(221,70,22)" fg:x="582" fg:w="1"/><text x="62.5626%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="62.3126%" y="501" width="0.1071%" height="15" fill="rgb(248,145,5)" fg:x="582" fg:w="1"/><text x="62.5626%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="62.3126%" y="485" width="0.1071%" height="15" fill="rgb(226,116,26)" fg:x="582" fg:w="1"/><text x="62.5626%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="62.3126%" y="469" width="0.1071%" height="15" fill="rgb(244,5,17)" fg:x="582" fg:w="1"/><text x="62.5626%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="62.3126%" y="453" width="0.1071%" height="15" fill="rgb(252,159,33)" fg:x="582" fg:w="1"/><text x="62.5626%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="62.3126%" y="437" width="0.1071%" height="15" fill="rgb(206,71,0)" fg:x="582" fg:w="1"/><text x="62.5626%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="62.3126%" y="421" width="0.1071%" height="15" fill="rgb(233,118,54)" fg:x="582" fg:w="1"/><text x="62.5626%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="62.3126%" y="405" width="0.1071%" height="15" fill="rgb(234,83,48)" fg:x="582" fg:w="1"/><text x="62.5626%" y="415.50"></text></g><g><title>demoparser::parsing::demo_parsing::game_events::gen_name_val_pairs (9 samples, 0.96%)</title><rect x="61.6702%" y="613" width="0.9636%" height="15" fill="rgb(228,3,54)" fg:x="576" fg:w="9"/><text x="61.9202%" y="623.50"></text></g><g><title>demoparser::parsing::demo_parsing::game_events::parse_key (2 samples, 0.21%)</title><rect x="62.4197%" y="597" width="0.2141%" height="15" fill="rgb(226,155,13)" fg:x="583" fg:w="2"/><text x="62.6697%" y="607.50"></text></g><g><title>csgoproto::netmessages::csvcmsg_game_event::Key_t::type_ (1 samples, 0.11%)</title><rect x="62.5268%" y="581" width="0.1071%" height="15" fill="rgb(241,28,37)" fg:x="584" fg:w="1"/><text x="62.7768%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.11%)</title><rect x="62.5268%" y="565" width="0.1071%" height="15" fill="rgb(233,93,10)" fg:x="584" fg:w="1"/><text x="62.7768%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.11%)</title><rect x="62.7409%" y="565" width="0.1071%" height="15" fill="rgb(225,113,19)" fg:x="586" fg:w="1"/><text x="62.9909%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.11%)</title><rect x="62.7409%" y="549" width="0.1071%" height="15" fill="rgb(241,2,18)" fg:x="586" fg:w="1"/><text x="62.9909%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.11%)</title><rect x="62.7409%" y="533" width="0.1071%" height="15" fill="rgb(228,207,21)" fg:x="586" fg:w="1"/><text x="62.9909%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.11%)</title><rect x="62.7409%" y="517" width="0.1071%" height="15" fill="rgb(213,211,35)" fg:x="586" fg:w="1"/><text x="62.9909%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.11%)</title><rect x="62.7409%" y="501" width="0.1071%" height="15" fill="rgb(209,83,10)" fg:x="586" fg:w="1"/><text x="62.9909%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.11%)</title><rect x="62.7409%" y="485" width="0.1071%" height="15" fill="rgb(209,164,1)" fg:x="586" fg:w="1"/><text x="62.9909%" y="495.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.11%)</title><rect x="62.7409%" y="469" width="0.1071%" height="15" fill="rgb(213,184,43)" fg:x="586" fg:w="1"/><text x="62.9909%" y="479.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.11%)</title><rect x="62.7409%" y="453" width="0.1071%" height="15" fill="rgb(231,61,34)" fg:x="586" fg:w="1"/><text x="62.9909%" y="463.50"></text></g><g><title>_mi_memcpy_aligned (1 samples, 0.11%)</title><rect x="62.7409%" y="437" width="0.1071%" height="15" fill="rgb(235,75,3)" fg:x="586" fg:w="1"/><text x="62.9909%" y="447.50"></text></g><g><title>_mi_memcpy (1 samples, 0.11%)</title><rect x="62.7409%" y="421" width="0.1071%" height="15" fill="rgb(220,106,47)" fg:x="586" fg:w="1"/><text x="62.9909%" y="431.50"></text></g><g><title>memcpy (1 samples, 0.11%)</title><rect x="62.7409%" y="405" width="0.1071%" height="15" fill="rgb(210,196,33)" fg:x="586" fg:w="1"/><text x="62.9909%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.11%)</title><rect x="62.7409%" y="389" width="0.1071%" height="15" fill="rgb(229,154,42)" fg:x="586" fg:w="1"/><text x="62.9909%" y="399.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::eof (1 samples, 0.11%)</title><rect x="63.0621%" y="485" width="0.1071%" height="15" fill="rgb(228,114,26)" fg:x="589" fg:w="1"/><text x="63.3121%" y="495.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::eof (1 samples, 0.11%)</title><rect x="63.0621%" y="469" width="0.1071%" height="15" fill="rgb(208,144,1)" fg:x="589" fg:w="1"/><text x="63.3121%" y="479.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::fill_buf (1 samples, 0.11%)</title><rect x="63.0621%" y="453" width="0.1071%" height="15" fill="rgb(239,112,37)" fg:x="589" fg:w="1"/><text x="63.3121%" y="463.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::pos (1 samples, 0.11%)</title><rect x="63.0621%" y="437" width="0.1071%" height="15" fill="rgb(210,96,50)" fg:x="589" fg:w="1"/><text x="63.3121%" y="447.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_message (4 samples, 0.43%)</title><rect x="62.8480%" y="565" width="0.4283%" height="15" fill="rgb(222,178,2)" fg:x="587" fg:w="4"/><text x="63.0980%" y="575.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::merge_message (4 samples, 0.43%)</title><rect x="62.8480%" y="549" width="0.4283%" height="15" fill="rgb(226,74,18)" fg:x="587" fg:w="4"/><text x="63.0980%" y="559.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_game_event::Key_t as protobuf::message::Message&gt;::merge_from (4 samples, 0.43%)</title><rect x="62.8480%" y="533" width="0.4283%" height="15" fill="rgb(225,67,54)" fg:x="587" fg:w="4"/><text x="63.0980%" y="543.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (2 samples, 0.21%)</title><rect x="63.0621%" y="517" width="0.2141%" height="15" fill="rgb(251,92,32)" fg:x="589" fg:w="2"/><text x="63.3121%" y="527.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (2 samples, 0.21%)</title><rect x="63.0621%" y="501" width="0.2141%" height="15" fill="rgb(228,149,22)" fg:x="589" fg:w="2"/><text x="63.3121%" y="511.50"></text></g><g><title>protobuf::varint::decode::decode_varint32 (1 samples, 0.11%)</title><rect x="63.1692%" y="485" width="0.1071%" height="15" fill="rgb(243,54,13)" fg:x="590" fg:w="1"/><text x="63.4192%" y="495.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (1 samples, 0.11%)</title><rect x="63.1692%" y="469" width="0.1071%" height="15" fill="rgb(243,180,28)" fg:x="590" fg:w="1"/><text x="63.4192%" y="479.50"></text></g><g><title>demoparser::parsing::demo_parsing::game_events::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_game_events (21 samples, 2.25%)</title><rect x="61.1349%" y="629" width="2.2484%" height="15" fill="rgb(208,167,24)" fg:x="571" fg:w="21"/><text x="61.3849%" y="639.50">d..</text></g><g><title>protobuf::message::Message::parse_from_bytes (7 samples, 0.75%)</title><rect x="62.6338%" y="613" width="0.7495%" height="15" fill="rgb(245,73,45)" fg:x="585" fg:w="7"/><text x="62.8838%" y="623.50"></text></g><g><title>protobuf::message::Message::parse_from (7 samples, 0.75%)</title><rect x="62.6338%" y="597" width="0.7495%" height="15" fill="rgb(237,203,48)" fg:x="585" fg:w="7"/><text x="62.8838%" y="607.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_GameEvent as protobuf::message::Message&gt;::merge_from (7 samples, 0.75%)</title><rect x="62.6338%" y="581" width="0.7495%" height="15" fill="rgb(211,197,16)" fg:x="585" fg:w="7"/><text x="62.8838%" y="591.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (1 samples, 0.11%)</title><rect x="63.2762%" y="565" width="0.1071%" height="15" fill="rgb(243,99,51)" fg:x="591" fg:w="1"/><text x="63.5262%" y="575.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (1 samples, 0.11%)</title><rect x="63.2762%" y="549" width="0.1071%" height="15" fill="rgb(215,123,29)" fg:x="591" fg:w="1"/><text x="63.5262%" y="559.50"></text></g><g><title>protobuf::varint::decode::decode_varint32 (1 samples, 0.11%)</title><rect x="63.2762%" y="533" width="0.1071%" height="15" fill="rgb(239,186,37)" fg:x="591" fg:w="1"/><text x="63.5262%" y="543.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (1 samples, 0.11%)</title><rect x="63.2762%" y="517" width="0.1071%" height="15" fill="rgb(252,136,39)" fg:x="591" fg:w="1"/><text x="63.5262%" y="527.50"></text></g><g><title>_mi_memcpy_aligned (1 samples, 0.11%)</title><rect x="63.3833%" y="485" width="0.1071%" height="15" fill="rgb(223,213,32)" fg:x="592" fg:w="1"/><text x="63.6333%" y="495.50"></text></g><g><title>_mi_memcpy (1 samples, 0.11%)</title><rect x="63.3833%" y="469" width="0.1071%" height="15" fill="rgb(233,115,5)" fg:x="592" fg:w="1"/><text x="63.6333%" y="479.50"></text></g><g><title>memcpy (1 samples, 0.11%)</title><rect x="63.3833%" y="453" width="0.1071%" height="15" fill="rgb(207,226,44)" fg:x="592" fg:w="1"/><text x="63.6333%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.11%)</title><rect x="63.3833%" y="437" width="0.1071%" height="15" fill="rgb(208,126,0)" fg:x="592" fg:w="1"/><text x="63.6333%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.21%)</title><rect x="63.3833%" y="613" width="0.2141%" height="15" fill="rgb(244,66,21)" fg:x="592" fg:w="2"/><text x="63.6333%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.21%)</title><rect x="63.3833%" y="597" width="0.2141%" height="15" fill="rgb(222,97,12)" fg:x="592" fg:w="2"/><text x="63.6333%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.21%)</title><rect x="63.3833%" y="581" width="0.2141%" height="15" fill="rgb(219,213,19)" fg:x="592" fg:w="2"/><text x="63.6333%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.21%)</title><rect x="63.3833%" y="565" width="0.2141%" height="15" fill="rgb(252,169,30)" fg:x="592" fg:w="2"/><text x="63.6333%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.21%)</title><rect x="63.3833%" y="549" width="0.2141%" height="15" fill="rgb(206,32,51)" fg:x="592" fg:w="2"/><text x="63.6333%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.21%)</title><rect x="63.3833%" y="533" width="0.2141%" height="15" fill="rgb(250,172,42)" fg:x="592" fg:w="2"/><text x="63.6333%" y="543.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.21%)</title><rect x="63.3833%" y="517" width="0.2141%" height="15" fill="rgb(209,34,43)" fg:x="592" fg:w="2"/><text x="63.6333%" y="527.50"></text></g><g><title>_mi_heap_realloc_zero (2 samples, 0.21%)</title><rect x="63.3833%" y="501" width="0.2141%" height="15" fill="rgb(223,11,35)" fg:x="592" fg:w="2"/><text x="63.6333%" y="511.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.11%)</title><rect x="63.4904%" y="485" width="0.1071%" height="15" fill="rgb(251,219,26)" fg:x="593" fg:w="1"/><text x="63.7404%" y="495.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.11%)</title><rect x="63.4904%" y="469" width="0.1071%" height="15" fill="rgb(231,119,3)" fg:x="593" fg:w="1"/><text x="63.7404%" y="479.50"></text></g><g><title>demoparser::parsing::demo_parsing::stringtables::&lt;impl demoparser::parsing::parser::Parser&gt;::create_string_table (3 samples, 0.32%)</title><rect x="63.3833%" y="629" width="0.3212%" height="15" fill="rgb(216,97,11)" fg:x="592" fg:w="3"/><text x="63.6333%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::stringtables::StringTable&gt; (1 samples, 0.11%)</title><rect x="63.5974%" y="613" width="0.1071%" height="15" fill="rgb(223,59,9)" fg:x="594" fg:w="1"/><text x="63.8474%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::demo_parsing::stringtables::StField&gt;&gt; (1 samples, 0.11%)</title><rect x="63.5974%" y="597" width="0.1071%" height="15" fill="rgb(233,93,31)" fg:x="594" fg:w="1"/><text x="63.8474%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="63.5974%" y="581" width="0.1071%" height="15" fill="rgb(239,81,33)" fg:x="594" fg:w="1"/><text x="63.8474%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::demo_parsing::stringtables::StField]&gt; (1 samples, 0.11%)</title><rect x="63.5974%" y="565" width="0.1071%" height="15" fill="rgb(213,120,34)" fg:x="594" fg:w="1"/><text x="63.8474%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::stringtables::StField&gt; (1 samples, 0.11%)</title><rect x="63.5974%" y="549" width="0.1071%" height="15" fill="rgb(243,49,53)" fg:x="594" fg:w="1"/><text x="63.8474%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.11%)</title><rect x="63.5974%" y="533" width="0.1071%" height="15" fill="rgb(247,216,33)" fg:x="594" fg:w="1"/><text x="63.8474%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.11%)</title><rect x="63.5974%" y="517" width="0.1071%" height="15" fill="rgb(226,26,14)" fg:x="594" fg:w="1"/><text x="63.8474%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.11%)</title><rect x="63.5974%" y="501" width="0.1071%" height="15" fill="rgb(215,49,53)" fg:x="594" fg:w="1"/><text x="63.8474%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="63.5974%" y="485" width="0.1071%" height="15" fill="rgb(245,162,40)" fg:x="594" fg:w="1"/><text x="63.8474%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.11%)</title><rect x="63.5974%" y="469" width="0.1071%" height="15" fill="rgb(229,68,17)" fg:x="594" fg:w="1"/><text x="63.8474%" y="479.50"></text></g><g><title>csgoproto::netmessages::CCLCMsg_Move::num_backup_commands (1 samples, 0.11%)</title><rect x="63.7045%" y="613" width="0.1071%" height="15" fill="rgb(213,182,10)" fg:x="595" fg:w="1"/><text x="63.9545%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.11%)</title><rect x="63.7045%" y="597" width="0.1071%" height="15" fill="rgb(245,125,30)" fg:x="595" fg:w="1"/><text x="63.9545%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (3 samples, 0.32%)</title><rect x="63.8116%" y="501" width="0.3212%" height="15" fill="rgb(232,202,2)" fg:x="596" fg:w="3"/><text x="64.0616%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (3 samples, 0.32%)</title><rect x="63.8116%" y="485" width="0.3212%" height="15" fill="rgb(237,140,51)" fg:x="596" fg:w="3"/><text x="64.0616%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (3 samples, 0.32%)</title><rect x="63.8116%" y="469" width="0.3212%" height="15" fill="rgb(236,157,25)" fg:x="596" fg:w="3"/><text x="64.0616%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (3 samples, 0.32%)</title><rect x="63.8116%" y="453" width="0.3212%" height="15" fill="rgb(219,209,0)" fg:x="596" fg:w="3"/><text x="64.0616%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.32%)</title><rect x="63.8116%" y="437" width="0.3212%" height="15" fill="rgb(240,116,54)" fg:x="596" fg:w="3"/><text x="64.0616%" y="447.50"></text></g><g><title>mi_malloc (3 samples, 0.32%)</title><rect x="63.8116%" y="421" width="0.3212%" height="15" fill="rgb(216,10,36)" fg:x="596" fg:w="3"/><text x="64.0616%" y="431.50"></text></g><g><title>mi_heap_malloc (3 samples, 0.32%)</title><rect x="63.8116%" y="405" width="0.3212%" height="15" fill="rgb(222,72,44)" fg:x="596" fg:w="3"/><text x="64.0616%" y="415.50"></text></g><g><title>mi_heap_malloc_small (3 samples, 0.32%)</title><rect x="63.8116%" y="389" width="0.3212%" height="15" fill="rgb(232,159,9)" fg:x="596" fg:w="3"/><text x="64.0616%" y="399.50"></text></g><g><title>_mi_page_malloc (3 samples, 0.32%)</title><rect x="63.8116%" y="373" width="0.3212%" height="15" fill="rgb(210,39,32)" fg:x="596" fg:w="3"/><text x="64.0616%" y="383.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (4 samples, 0.43%)</title><rect x="63.8116%" y="533" width="0.4283%" height="15" fill="rgb(216,194,45)" fg:x="596" fg:w="4"/><text x="64.0616%" y="543.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (4 samples, 0.43%)</title><rect x="63.8116%" y="517" width="0.4283%" height="15" fill="rgb(218,18,35)" fg:x="596" fg:w="4"/><text x="64.0616%" y="527.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact (1 samples, 0.11%)</title><rect x="64.1328%" y="501" width="0.1071%" height="15" fill="rgb(207,83,51)" fg:x="599" fg:w="1"/><text x="64.3828%" y="511.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::read_bytes (1 samples, 0.11%)</title><rect x="64.1328%" y="485" width="0.1071%" height="15" fill="rgb(225,63,43)" fg:x="599" fg:w="1"/><text x="64.3828%" y="495.50"></text></g><g><title>protobuf::misc::maybe_uninit_write_slice (1 samples, 0.11%)</title><rect x="64.1328%" y="469" width="0.1071%" height="15" fill="rgb(207,57,36)" fg:x="599" fg:w="1"/><text x="64.3828%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.11%)</title><rect x="64.1328%" y="453" width="0.1071%" height="15" fill="rgb(216,99,33)" fg:x="599" fg:w="1"/><text x="64.3828%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="64.1328%" y="437" width="0.1071%" height="15" fill="rgb(225,42,16)" fg:x="599" fg:w="1"/><text x="64.3828%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.11%)</title><rect x="64.1328%" y="421" width="0.1071%" height="15" fill="rgb(220,201,45)" fg:x="599" fg:w="1"/><text x="64.3828%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (286 samples, 30.62%)</title><rect x="33.7259%" y="805" width="30.6210%" height="15" fill="rgb(225,33,4)" fg:x="315" fg:w="286"/><text x="33.9759%" y="815.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (286 samples, 30.62%)</title><rect x="33.7259%" y="789" width="30.6210%" height="15" fill="rgb(224,33,50)" fg:x="315" fg:w="286"/><text x="33.9759%" y="799.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collec..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (286 samples, 30.62%)</title><rect x="33.7259%" y="773" width="30.6210%" height="15" fill="rgb(246,198,51)" fg:x="315" fg:w="286"/><text x="33.9759%" y="783.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (286 samples, 30.62%)</title><rect x="33.7259%" y="757" width="30.6210%" height="15" fill="rgb(205,22,4)" fg:x="315" fg:w="286"/><text x="33.9759%" y="767.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (286 samples, 30.62%)</title><rect x="33.7259%" y="741" width="30.6210%" height="15" fill="rgb(206,3,8)" fg:x="315" fg:w="286"/><text x="33.9759%" y="751.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (286 samples, 30.62%)</title><rect x="33.7259%" y="725" width="30.6210%" height="15" fill="rgb(251,23,15)" fg:x="315" fg:w="286"/><text x="33.9759%" y="735.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (286 samples, 30.62%)</title><rect x="33.7259%" y="709" width="30.6210%" height="15" fill="rgb(252,88,28)" fg:x="315" fg:w="286"/><text x="33.9759%" y="719.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (286 samples, 30.62%)</title><rect x="33.7259%" y="693" width="30.6210%" height="15" fill="rgb(212,127,14)" fg:x="315" fg:w="286"/><text x="33.9759%" y="703.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (286 samples, 30.62%)</title><rect x="33.7259%" y="677" width="30.6210%" height="15" fill="rgb(247,145,37)" fg:x="315" fg:w="286"/><text x="33.9759%" y="687.50">core::iter::adapters::map::map_fold::{{closure}}</text></g><g><title>demoparser::parsing::parser::Parser::parse_blueprints::{{closure}} (284 samples, 30.41%)</title><rect x="33.9400%" y="661" width="30.4069%" height="15" fill="rgb(209,117,53)" fg:x="317" fg:w="284"/><text x="34.1900%" y="671.50">demoparser::parsing::parser::Parser::parse_bluepr..</text></g><g><title>demoparser::parsing::parser::Parser::msg_handler (284 samples, 30.41%)</title><rect x="33.9400%" y="645" width="30.4069%" height="15" fill="rgb(212,90,42)" fg:x="317" fg:w="284"/><text x="34.1900%" y="655.50">demoparser::parsing::parser::Parser::msg_handler</text></g><g><title>demoparser::parsing::demo_parsing::stringtables::&lt;impl demoparser::parsing::parser::Parser&gt;::update_string_table_msg (6 samples, 0.64%)</title><rect x="63.7045%" y="629" width="0.6424%" height="15" fill="rgb(218,164,37)" fg:x="595" fg:w="6"/><text x="63.9545%" y="639.50"></text></g><g><title>protobuf::message::Message::parse_from_bytes (5 samples, 0.54%)</title><rect x="63.8116%" y="613" width="0.5353%" height="15" fill="rgb(246,65,34)" fg:x="596" fg:w="5"/><text x="64.0616%" y="623.50"></text></g><g><title>protobuf::message::Message::parse_from (5 samples, 0.54%)</title><rect x="63.8116%" y="597" width="0.5353%" height="15" fill="rgb(231,100,33)" fg:x="596" fg:w="5"/><text x="64.0616%" y="607.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_EntityMsg as protobuf::message::Message&gt;::merge_from (5 samples, 0.54%)</title><rect x="63.8116%" y="581" width="0.5353%" height="15" fill="rgb(228,126,14)" fg:x="596" fg:w="5"/><text x="64.0616%" y="591.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes (5 samples, 0.54%)</title><rect x="63.8116%" y="565" width="0.5353%" height="15" fill="rgb(215,173,21)" fg:x="596" fg:w="5"/><text x="64.0616%" y="575.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (5 samples, 0.54%)</title><rect x="63.8116%" y="549" width="0.5353%" height="15" fill="rgb(210,6,40)" fg:x="596" fg:w="5"/><text x="64.0616%" y="559.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32 (1 samples, 0.11%)</title><rect x="64.2398%" y="533" width="0.1071%" height="15" fill="rgb(212,48,18)" fg:x="600" fg:w="1"/><text x="64.4898%" y="543.50"></text></g><g><title>protobuf::varint::decode::decode_varint32 (1 samples, 0.11%)</title><rect x="64.2398%" y="517" width="0.1071%" height="15" fill="rgb(230,214,11)" fg:x="600" fg:w="1"/><text x="64.4898%" y="527.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (1 samples, 0.11%)</title><rect x="64.2398%" y="501" width="0.1071%" height="15" fill="rgb(254,105,39)" fg:x="600" fg:w="1"/><text x="64.4898%" y="511.50"></text></g><g><title>demoparser::parsing::create_output::&lt;impl demoparser::parsing::parser::Parser&gt;::other_outputs (526 samples, 56.32%)</title><rect x="8.1370%" y="837" width="56.3169%" height="15" fill="rgb(245,158,5)" fg:x="76" fg:w="526"/><text x="8.3870%" y="847.50">demoparser::parsing::create_output::&lt;impl demoparser::parsing::parser::Parser&gt;::other_outputs</text></g><g><title>demoparser::parsing::parser::Parser::parse_blueprints (287 samples, 30.73%)</title><rect x="33.7259%" y="821" width="30.7281%" height="15" fill="rgb(249,208,11)" fg:x="315" fg:w="287"/><text x="33.9759%" y="831.50">demoparser::parsing::parser::Parser::parse_bluepri..</text></g><g><title>demoparser::parsing::demo_parsing::game_events::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_game_event_map (1 samples, 0.11%)</title><rect x="64.3469%" y="805" width="0.1071%" height="15" fill="rgb(210,39,28)" fg:x="601" fg:w="1"/><text x="64.5969%" y="815.50"></text></g><g><title>protobuf::message::Message::parse_from_bytes (1 samples, 0.11%)</title><rect x="64.3469%" y="789" width="0.1071%" height="15" fill="rgb(211,56,53)" fg:x="601" fg:w="1"/><text x="64.5969%" y="799.50"></text></g><g><title>protobuf::message::Message::parse_from (1 samples, 0.11%)</title><rect x="64.3469%" y="773" width="0.1071%" height="15" fill="rgb(226,201,30)" fg:x="601" fg:w="1"/><text x="64.5969%" y="783.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_GameEventList as protobuf::message::Message&gt;::merge_from (1 samples, 0.11%)</title><rect x="64.3469%" y="757" width="0.1071%" height="15" fill="rgb(239,101,34)" fg:x="601" fg:w="1"/><text x="64.5969%" y="767.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_message (1 samples, 0.11%)</title><rect x="64.3469%" y="741" width="0.1071%" height="15" fill="rgb(226,209,5)" fg:x="601" fg:w="1"/><text x="64.5969%" y="751.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::merge_message (1 samples, 0.11%)</title><rect x="64.3469%" y="725" width="0.1071%" height="15" fill="rgb(250,105,47)" fg:x="601" fg:w="1"/><text x="64.5969%" y="735.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_game_event_list::Descriptor_t as protobuf::message::Message&gt;::merge_from (1 samples, 0.11%)</title><rect x="64.3469%" y="709" width="0.1071%" height="15" fill="rgb(230,72,3)" fg:x="601" fg:w="1"/><text x="64.5969%" y="719.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_message (1 samples, 0.11%)</title><rect x="64.3469%" y="693" width="0.1071%" height="15" fill="rgb(232,218,39)" fg:x="601" fg:w="1"/><text x="64.5969%" y="703.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::merge_message (1 samples, 0.11%)</title><rect x="64.3469%" y="677" width="0.1071%" height="15" fill="rgb(248,166,6)" fg:x="601" fg:w="1"/><text x="64.5969%" y="687.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_game_event_list::Key_t as protobuf::message::Message&gt;::merge_from (1 samples, 0.11%)</title><rect x="64.3469%" y="661" width="0.1071%" height="15" fill="rgb(247,89,20)" fg:x="601" fg:w="1"/><text x="64.5969%" y="671.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string (1 samples, 0.11%)</title><rect x="64.3469%" y="645" width="0.1071%" height="15" fill="rgb(248,130,54)" fg:x="601" fg:w="1"/><text x="64.5969%" y="655.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string_into (1 samples, 0.11%)</title><rect x="64.3469%" y="629" width="0.1071%" height="15" fill="rgb(234,196,4)" fg:x="601" fg:w="1"/><text x="64.5969%" y="639.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (1 samples, 0.11%)</title><rect x="64.3469%" y="613" width="0.1071%" height="15" fill="rgb(250,143,31)" fg:x="601" fg:w="1"/><text x="64.5969%" y="623.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (1 samples, 0.11%)</title><rect x="64.3469%" y="597" width="0.1071%" height="15" fill="rgb(211,110,34)" fg:x="601" fg:w="1"/><text x="64.5969%" y="607.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (1 samples, 0.11%)</title><rect x="64.3469%" y="581" width="0.1071%" height="15" fill="rgb(215,124,48)" fg:x="601" fg:w="1"/><text x="64.5969%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (1 samples, 0.11%)</title><rect x="64.3469%" y="565" width="0.1071%" height="15" fill="rgb(216,46,13)" fg:x="601" fg:w="1"/><text x="64.5969%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (1 samples, 0.11%)</title><rect x="64.3469%" y="549" width="0.1071%" height="15" fill="rgb(205,184,25)" fg:x="601" fg:w="1"/><text x="64.5969%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (1 samples, 0.11%)</title><rect x="64.3469%" y="533" width="0.1071%" height="15" fill="rgb(228,1,10)" fg:x="601" fg:w="1"/><text x="64.5969%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (1 samples, 0.11%)</title><rect x="64.3469%" y="517" width="0.1071%" height="15" fill="rgb(213,116,27)" fg:x="601" fg:w="1"/><text x="64.5969%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.11%)</title><rect x="64.3469%" y="501" width="0.1071%" height="15" fill="rgb(241,95,50)" fg:x="601" fg:w="1"/><text x="64.5969%" y="511.50"></text></g><g><title>mi_malloc (1 samples, 0.11%)</title><rect x="64.3469%" y="485" width="0.1071%" height="15" fill="rgb(238,48,32)" fg:x="601" fg:w="1"/><text x="64.5969%" y="495.50"></text></g><g><title>mi_get_default_heap (1 samples, 0.11%)</title><rect x="64.3469%" y="469" width="0.1071%" height="15" fill="rgb(235,113,49)" fg:x="601" fg:w="1"/><text x="64.5969%" y="479.50"></text></g><g><title>[libc.so.6] (5 samples, 0.54%)</title><rect x="64.7752%" y="533" width="0.5353%" height="15" fill="rgb(205,127,43)" fg:x="605" fg:w="5"/><text x="65.0252%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.54%)</title><rect x="64.7752%" y="517" width="0.5353%" height="15" fill="rgb(250,162,2)" fg:x="605" fg:w="5"/><text x="65.0252%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.11%)</title><rect x="65.3105%" y="501" width="0.1071%" height="15" fill="rgb(220,13,41)" fg:x="610" fg:w="1"/><text x="65.5605%" y="511.50"></text></g><g><title>[libc.so.6] (28 samples, 3.00%)</title><rect x="65.4176%" y="373" width="2.9979%" height="15" fill="rgb(249,221,25)" fg:x="611" fg:w="28"/><text x="65.6676%" y="383.50">[li..</text></g><g><title>[unknown] (21 samples, 2.25%)</title><rect x="66.1670%" y="357" width="2.2484%" height="15" fill="rgb(215,208,19)" fg:x="618" fg:w="21"/><text x="66.4170%" y="367.50">[..</text></g><g><title>[unknown] (18 samples, 1.93%)</title><rect x="66.4882%" y="341" width="1.9272%" height="15" fill="rgb(236,175,2)" fg:x="621" fg:w="18"/><text x="66.7382%" y="351.50">[..</text></g><g><title>[unknown] (18 samples, 1.93%)</title><rect x="66.4882%" y="325" width="1.9272%" height="15" fill="rgb(241,52,2)" fg:x="621" fg:w="18"/><text x="66.7382%" y="335.50">[..</text></g><g><title>[unknown] (17 samples, 1.82%)</title><rect x="66.5953%" y="309" width="1.8201%" height="15" fill="rgb(248,140,14)" fg:x="622" fg:w="17"/><text x="66.8453%" y="319.50">[..</text></g><g><title>[unknown] (17 samples, 1.82%)</title><rect x="66.5953%" y="293" width="1.8201%" height="15" fill="rgb(253,22,42)" fg:x="622" fg:w="17"/><text x="66.8453%" y="303.50">[..</text></g><g><title>[unknown] (17 samples, 1.82%)</title><rect x="66.5953%" y="277" width="1.8201%" height="15" fill="rgb(234,61,47)" fg:x="622" fg:w="17"/><text x="66.8453%" y="287.50">[..</text></g><g><title>[unknown] (17 samples, 1.82%)</title><rect x="66.5953%" y="261" width="1.8201%" height="15" fill="rgb(208,226,15)" fg:x="622" fg:w="17"/><text x="66.8453%" y="271.50">[..</text></g><g><title>[unknown] (17 samples, 1.82%)</title><rect x="66.5953%" y="245" width="1.8201%" height="15" fill="rgb(217,221,4)" fg:x="622" fg:w="17"/><text x="66.8453%" y="255.50">[..</text></g><g><title>[unknown] (16 samples, 1.71%)</title><rect x="66.7024%" y="229" width="1.7131%" height="15" fill="rgb(212,174,34)" fg:x="623" fg:w="16"/><text x="66.9524%" y="239.50"></text></g><g><title>[unknown] (15 samples, 1.61%)</title><rect x="66.8094%" y="213" width="1.6060%" height="15" fill="rgb(253,83,4)" fg:x="624" fg:w="15"/><text x="67.0594%" y="223.50"></text></g><g><title>[unknown] (14 samples, 1.50%)</title><rect x="66.9165%" y="197" width="1.4989%" height="15" fill="rgb(250,195,49)" fg:x="625" fg:w="14"/><text x="67.1665%" y="207.50"></text></g><g><title>[unknown] (3 samples, 0.32%)</title><rect x="68.0942%" y="181" width="0.3212%" height="15" fill="rgb(241,192,25)" fg:x="636" fg:w="3"/><text x="68.3442%" y="191.50"></text></g><g><title>_mi_memcpy_aligned (36 samples, 3.85%)</title><rect x="65.4176%" y="421" width="3.8544%" height="15" fill="rgb(208,124,10)" fg:x="611" fg:w="36"/><text x="65.6676%" y="431.50">_mi_..</text></g><g><title>_mi_memcpy (36 samples, 3.85%)</title><rect x="65.4176%" y="405" width="3.8544%" height="15" fill="rgb(222,33,0)" fg:x="611" fg:w="36"/><text x="65.6676%" y="415.50">_mi_..</text></g><g><title>memcpy (36 samples, 3.85%)</title><rect x="65.4176%" y="389" width="3.8544%" height="15" fill="rgb(234,209,28)" fg:x="611" fg:w="36"/><text x="65.6676%" y="399.50">memc..</text></g><g><title>_mi_malloc_generic (8 samples, 0.86%)</title><rect x="68.4154%" y="373" width="0.8565%" height="15" fill="rgb(224,11,23)" fg:x="639" fg:w="8"/><text x="68.6654%" y="383.50"></text></g><g><title>mi_find_page (8 samples, 0.86%)</title><rect x="68.4154%" y="357" width="0.8565%" height="15" fill="rgb(232,99,1)" fg:x="639" fg:w="8"/><text x="68.6654%" y="367.50"></text></g><g><title>mi_find_free_page (8 samples, 0.86%)</title><rect x="68.4154%" y="341" width="0.8565%" height="15" fill="rgb(237,95,45)" fg:x="639" fg:w="8"/><text x="68.6654%" y="351.50"></text></g><g><title>mi_page_queue_find_free_ex (8 samples, 0.86%)</title><rect x="68.4154%" y="325" width="0.8565%" height="15" fill="rgb(208,109,11)" fg:x="639" fg:w="8"/><text x="68.6654%" y="335.50"></text></g><g><title>mi_page_extend_free (8 samples, 0.86%)</title><rect x="68.4154%" y="309" width="0.8565%" height="15" fill="rgb(216,190,48)" fg:x="639" fg:w="8"/><text x="68.6654%" y="319.50"></text></g><g><title>mi_page_extend_free (8 samples, 0.86%)</title><rect x="68.4154%" y="293" width="0.8565%" height="15" fill="rgb(251,171,36)" fg:x="639" fg:w="8"/><text x="68.6654%" y="303.50"></text></g><g><title>mi_page_free_list_extend (8 samples, 0.86%)</title><rect x="68.4154%" y="277" width="0.8565%" height="15" fill="rgb(230,62,22)" fg:x="639" fg:w="8"/><text x="68.6654%" y="287.50"></text></g><g><title>mi_block_set_next (8 samples, 0.86%)</title><rect x="68.4154%" y="261" width="0.8565%" height="15" fill="rgb(225,114,35)" fg:x="639" fg:w="8"/><text x="68.6654%" y="271.50"></text></g><g><title>mi_block_set_nextx (8 samples, 0.86%)</title><rect x="68.4154%" y="245" width="0.8565%" height="15" fill="rgb(215,118,42)" fg:x="639" fg:w="8"/><text x="68.6654%" y="255.50"></text></g><g><title>[unknown] (8 samples, 0.86%)</title><rect x="68.4154%" y="229" width="0.8565%" height="15" fill="rgb(243,119,21)" fg:x="639" fg:w="8"/><text x="68.6654%" y="239.50"></text></g><g><title>_mi_usable_size (1 samples, 0.11%)</title><rect x="69.2719%" y="421" width="0.1071%" height="15" fill="rgb(252,177,53)" fg:x="647" fg:w="1"/><text x="69.5219%" y="431.50"></text></g><g><title>_mi_segment_page_of (1 samples, 0.11%)</title><rect x="69.2719%" y="405" width="0.1071%" height="15" fill="rgb(237,209,29)" fg:x="647" fg:w="1"/><text x="69.5219%" y="415.50"></text></g><g><title>mi_slice_first (1 samples, 0.11%)</title><rect x="69.2719%" y="389" width="0.1071%" height="15" fill="rgb(212,65,23)" fg:x="647" fg:w="1"/><text x="69.5219%" y="399.50"></text></g><g><title>[libc.so.6] (3 samples, 0.32%)</title><rect x="69.3790%" y="405" width="0.3212%" height="15" fill="rgb(230,222,46)" fg:x="648" fg:w="3"/><text x="69.6290%" y="415.50"></text></g><g><title>[unknown] (3 samples, 0.32%)</title><rect x="69.3790%" y="389" width="0.3212%" height="15" fill="rgb(215,135,32)" fg:x="648" fg:w="3"/><text x="69.6290%" y="399.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.11%)</title><rect x="69.7002%" y="389" width="0.1071%" height="15" fill="rgb(246,101,22)" fg:x="651" fg:w="1"/><text x="69.9502%" y="399.50"></text></g><g><title>_mi_page_free_collect (1 samples, 0.11%)</title><rect x="69.8073%" y="357" width="0.1071%" height="15" fill="rgb(206,107,13)" fg:x="652" fg:w="1"/><text x="70.0573%" y="367.50"></text></g><g><title>mi_page_queue (1 samples, 0.11%)</title><rect x="69.9143%" y="357" width="0.1071%" height="15" fill="rgb(250,100,44)" fg:x="653" fg:w="1"/><text x="70.1643%" y="367.50"></text></g><g><title>_mi_bin (1 samples, 0.11%)</title><rect x="69.9143%" y="341" width="0.1071%" height="15" fill="rgb(231,147,38)" fg:x="653" fg:w="1"/><text x="70.1643%" y="351.50"></text></g><g><title>mi_bin (1 samples, 0.11%)</title><rect x="69.9143%" y="325" width="0.1071%" height="15" fill="rgb(229,8,40)" fg:x="653" fg:w="1"/><text x="70.1643%" y="335.50"></text></g><g><title>mi_bsr (1 samples, 0.11%)</title><rect x="69.9143%" y="309" width="0.1071%" height="15" fill="rgb(221,135,30)" fg:x="653" fg:w="1"/><text x="70.1643%" y="319.50"></text></g><g><title>mi_page_extend_free (19 samples, 2.03%)</title><rect x="70.0214%" y="341" width="2.0343%" height="15" fill="rgb(249,193,18)" fg:x="654" fg:w="19"/><text x="70.2714%" y="351.50">m..</text></g><g><title>mi_page_extend_free (19 samples, 2.03%)</title><rect x="70.0214%" y="325" width="2.0343%" height="15" fill="rgb(209,133,39)" fg:x="654" fg:w="19"/><text x="70.2714%" y="335.50">m..</text></g><g><title>mi_page_free_list_extend (19 samples, 2.03%)</title><rect x="70.0214%" y="309" width="2.0343%" height="15" fill="rgb(232,100,14)" fg:x="654" fg:w="19"/><text x="70.2714%" y="319.50">m..</text></g><g><title>mi_block_set_next (18 samples, 1.93%)</title><rect x="70.1285%" y="293" width="1.9272%" height="15" fill="rgb(224,185,1)" fg:x="655" fg:w="18"/><text x="70.3785%" y="303.50">m..</text></g><g><title>mi_block_set_nextx (18 samples, 1.93%)</title><rect x="70.1285%" y="277" width="1.9272%" height="15" fill="rgb(223,139,8)" fg:x="655" fg:w="18"/><text x="70.3785%" y="287.50">m..</text></g><g><title>[unknown] (18 samples, 1.93%)</title><rect x="70.1285%" y="261" width="1.9272%" height="15" fill="rgb(232,213,38)" fg:x="655" fg:w="18"/><text x="70.3785%" y="271.50">[..</text></g><g><title>[unknown] (18 samples, 1.93%)</title><rect x="70.1285%" y="245" width="1.9272%" height="15" fill="rgb(207,94,22)" fg:x="655" fg:w="18"/><text x="70.3785%" y="255.50">[..</text></g><g><title>[unknown] (18 samples, 1.93%)</title><rect x="70.1285%" y="229" width="1.9272%" height="15" fill="rgb(219,183,54)" fg:x="655" fg:w="18"/><text x="70.3785%" y="239.50">[..</text></g><g><title>[unknown] (18 samples, 1.93%)</title><rect x="70.1285%" y="213" width="1.9272%" height="15" fill="rgb(216,185,54)" fg:x="655" fg:w="18"/><text x="70.3785%" y="223.50">[..</text></g><g><title>[unknown] (17 samples, 1.82%)</title><rect x="70.2355%" y="197" width="1.8201%" height="15" fill="rgb(254,217,39)" fg:x="656" fg:w="17"/><text x="70.4855%" y="207.50">[..</text></g><g><title>[unknown] (15 samples, 1.61%)</title><rect x="70.4497%" y="181" width="1.6060%" height="15" fill="rgb(240,178,23)" fg:x="658" fg:w="15"/><text x="70.6997%" y="191.50"></text></g><g><title>[unknown] (15 samples, 1.61%)</title><rect x="70.4497%" y="165" width="1.6060%" height="15" fill="rgb(218,11,47)" fg:x="658" fg:w="15"/><text x="70.6997%" y="175.50"></text></g><g><title>[unknown] (14 samples, 1.50%)</title><rect x="70.5567%" y="149" width="1.4989%" height="15" fill="rgb(218,51,51)" fg:x="659" fg:w="14"/><text x="70.8067%" y="159.50"></text></g><g><title>[unknown] (12 samples, 1.28%)</title><rect x="70.7709%" y="133" width="1.2848%" height="15" fill="rgb(238,126,27)" fg:x="661" fg:w="12"/><text x="71.0209%" y="143.50"></text></g><g><title>[unknown] (12 samples, 1.28%)</title><rect x="70.7709%" y="117" width="1.2848%" height="15" fill="rgb(249,202,22)" fg:x="661" fg:w="12"/><text x="71.0209%" y="127.50"></text></g><g><title>[unknown] (11 samples, 1.18%)</title><rect x="70.8779%" y="101" width="1.1777%" height="15" fill="rgb(254,195,49)" fg:x="662" fg:w="11"/><text x="71.1279%" y="111.50"></text></g><g><title>[unknown] (6 samples, 0.64%)</title><rect x="71.4133%" y="85" width="0.6424%" height="15" fill="rgb(208,123,14)" fg:x="667" fg:w="6"/><text x="71.6633%" y="95.50"></text></g><g><title>mi_page_init (3 samples, 0.32%)</title><rect x="72.0557%" y="309" width="0.3212%" height="15" fill="rgb(224,200,8)" fg:x="673" fg:w="3"/><text x="72.3057%" y="319.50"></text></g><g><title>mi_page_extend_free (3 samples, 0.32%)</title><rect x="72.0557%" y="293" width="0.3212%" height="15" fill="rgb(217,61,36)" fg:x="673" fg:w="3"/><text x="72.3057%" y="303.50"></text></g><g><title>mi_page_extend_free (3 samples, 0.32%)</title><rect x="72.0557%" y="277" width="0.3212%" height="15" fill="rgb(206,35,45)" fg:x="673" fg:w="3"/><text x="72.3057%" y="287.50"></text></g><g><title>mi_page_free_list_extend (3 samples, 0.32%)</title><rect x="72.0557%" y="261" width="0.3212%" height="15" fill="rgb(217,65,33)" fg:x="673" fg:w="3"/><text x="72.3057%" y="271.50"></text></g><g><title>mi_block_set_next (3 samples, 0.32%)</title><rect x="72.0557%" y="245" width="0.3212%" height="15" fill="rgb(222,158,48)" fg:x="673" fg:w="3"/><text x="72.3057%" y="255.50"></text></g><g><title>mi_block_set_nextx (3 samples, 0.32%)</title><rect x="72.0557%" y="229" width="0.3212%" height="15" fill="rgb(254,2,54)" fg:x="673" fg:w="3"/><text x="72.3057%" y="239.50"></text></g><g><title>[unknown] (3 samples, 0.32%)</title><rect x="72.0557%" y="213" width="0.3212%" height="15" fill="rgb(250,143,38)" fg:x="673" fg:w="3"/><text x="72.3057%" y="223.50"></text></g><g><title>[unknown] (3 samples, 0.32%)</title><rect x="72.0557%" y="197" width="0.3212%" height="15" fill="rgb(248,25,0)" fg:x="673" fg:w="3"/><text x="72.3057%" y="207.50"></text></g><g><title>[unknown] (3 samples, 0.32%)</title><rect x="72.0557%" y="181" width="0.3212%" height="15" fill="rgb(206,152,27)" fg:x="673" fg:w="3"/><text x="72.3057%" y="191.50"></text></g><g><title>[unknown] (3 samples, 0.32%)</title><rect x="72.0557%" y="165" width="0.3212%" height="15" fill="rgb(240,77,30)" fg:x="673" fg:w="3"/><text x="72.3057%" y="175.50"></text></g><g><title>[unknown] (3 samples, 0.32%)</title><rect x="72.0557%" y="149" width="0.3212%" height="15" fill="rgb(231,5,3)" fg:x="673" fg:w="3"/><text x="72.3057%" y="159.50"></text></g><g><title>[unknown] (3 samples, 0.32%)</title><rect x="72.0557%" y="133" width="0.3212%" height="15" fill="rgb(207,226,32)" fg:x="673" fg:w="3"/><text x="72.3057%" y="143.50"></text></g><g><title>[unknown] (3 samples, 0.32%)</title><rect x="72.0557%" y="117" width="0.3212%" height="15" fill="rgb(222,207,47)" fg:x="673" fg:w="3"/><text x="72.3057%" y="127.50"></text></g><g><title>[unknown] (3 samples, 0.32%)</title><rect x="72.0557%" y="101" width="0.3212%" height="15" fill="rgb(229,115,45)" fg:x="673" fg:w="3"/><text x="72.3057%" y="111.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="72.1627%" y="85" width="0.2141%" height="15" fill="rgb(224,191,6)" fg:x="674" fg:w="2"/><text x="72.4127%" y="95.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="72.1627%" y="69" width="0.2141%" height="15" fill="rgb(230,227,24)" fg:x="674" fg:w="2"/><text x="72.4127%" y="79.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="72.1627%" y="53" width="0.2141%" height="15" fill="rgb(228,80,19)" fg:x="674" fg:w="2"/><text x="72.4127%" y="63.50"></text></g><g><title>mi_segment_delayed_decommit (1 samples, 0.11%)</title><rect x="72.3769%" y="293" width="0.1071%" height="15" fill="rgb(247,229,0)" fg:x="676" fg:w="1"/><text x="72.6269%" y="303.50"></text></g><g><title>_mi_clock_now (1 samples, 0.11%)</title><rect x="72.3769%" y="277" width="0.1071%" height="15" fill="rgb(237,194,15)" fg:x="676" fg:w="1"/><text x="72.6269%" y="287.50"></text></g><g><title>__GI___clock_gettime (1 samples, 0.11%)</title><rect x="72.3769%" y="261" width="0.1071%" height="15" fill="rgb(219,203,20)" fg:x="676" fg:w="1"/><text x="72.6269%" y="271.50"></text></g><g><title>[[vdso]] (1 samples, 0.11%)</title><rect x="72.3769%" y="245" width="0.1071%" height="15" fill="rgb(234,128,8)" fg:x="676" fg:w="1"/><text x="72.6269%" y="255.50"></text></g><g><title>[[vdso]] (1 samples, 0.11%)</title><rect x="72.3769%" y="229" width="0.1071%" height="15" fill="rgb(248,202,8)" fg:x="676" fg:w="1"/><text x="72.6269%" y="239.50"></text></g><g><title>mi_segment_slice_split (1 samples, 0.11%)</title><rect x="72.4839%" y="277" width="0.1071%" height="15" fill="rgb(206,104,37)" fg:x="677" fg:w="1"/><text x="72.7339%" y="287.50"></text></g><g><title>mi_segment_span_free (1 samples, 0.11%)</title><rect x="72.4839%" y="261" width="0.1071%" height="15" fill="rgb(223,8,27)" fg:x="677" fg:w="1"/><text x="72.7339%" y="271.50"></text></g><g><title>mi_segment_perhaps_decommit (1 samples, 0.11%)</title><rect x="72.4839%" y="245" width="0.1071%" height="15" fill="rgb(216,217,28)" fg:x="677" fg:w="1"/><text x="72.7339%" y="255.50"></text></g><g><title>mi_segment_commit_mask (1 samples, 0.11%)</title><rect x="72.4839%" y="229" width="0.1071%" height="15" fill="rgb(249,199,1)" fg:x="677" fg:w="1"/><text x="72.7339%" y="239.50"></text></g><g><title>mi_segment_commit_mask (1 samples, 0.11%)</title><rect x="72.4839%" y="213" width="0.1071%" height="15" fill="rgb(240,85,17)" fg:x="677" fg:w="1"/><text x="72.7339%" y="223.50"></text></g><g><title>mi_commit_mask_create (1 samples, 0.11%)</title><rect x="72.4839%" y="197" width="0.1071%" height="15" fill="rgb(206,108,45)" fg:x="677" fg:w="1"/><text x="72.7339%" y="207.50"></text></g><g><title>mi_commit_mask_create (1 samples, 0.11%)</title><rect x="72.4839%" y="181" width="0.1071%" height="15" fill="rgb(245,210,41)" fg:x="677" fg:w="1"/><text x="72.7339%" y="191.50"></text></g><g><title>_mi_malloc_generic (29 samples, 3.10%)</title><rect x="69.7002%" y="405" width="3.1049%" height="15" fill="rgb(206,13,37)" fg:x="651" fg:w="29"/><text x="69.9502%" y="415.50">_mi..</text></g><g><title>mi_find_page (28 samples, 3.00%)</title><rect x="69.8073%" y="389" width="2.9979%" height="15" fill="rgb(250,61,18)" fg:x="652" fg:w="28"/><text x="70.0573%" y="399.50">mi_..</text></g><g><title>mi_find_free_page (28 samples, 3.00%)</title><rect x="69.8073%" y="373" width="2.9979%" height="15" fill="rgb(235,172,48)" fg:x="652" fg:w="28"/><text x="70.0573%" y="383.50">mi_..</text></g><g><title>mi_page_queue_find_free_ex (26 samples, 2.78%)</title><rect x="70.0214%" y="357" width="2.7837%" height="15" fill="rgb(249,201,17)" fg:x="654" fg:w="26"/><text x="70.2714%" y="367.50">mi..</text></g><g><title>mi_page_fresh (7 samples, 0.75%)</title><rect x="72.0557%" y="341" width="0.7495%" height="15" fill="rgb(219,208,6)" fg:x="673" fg:w="7"/><text x="72.3057%" y="351.50"></text></g><g><title>mi_page_fresh_alloc (7 samples, 0.75%)</title><rect x="72.0557%" y="325" width="0.7495%" height="15" fill="rgb(248,31,23)" fg:x="673" fg:w="7"/><text x="72.3057%" y="335.50"></text></g><g><title>mi_segments_page_alloc (4 samples, 0.43%)</title><rect x="72.3769%" y="309" width="0.4283%" height="15" fill="rgb(245,15,42)" fg:x="676" fg:w="4"/><text x="72.6269%" y="319.50"></text></g><g><title>mi_segments_page_find_and_allocate (3 samples, 0.32%)</title><rect x="72.4839%" y="293" width="0.3212%" height="15" fill="rgb(222,217,39)" fg:x="677" fg:w="3"/><text x="72.7339%" y="303.50"></text></g><g><title>mi_segment_span_allocate (2 samples, 0.21%)</title><rect x="72.5910%" y="277" width="0.2141%" height="15" fill="rgb(210,219,27)" fg:x="678" fg:w="2"/><text x="72.8410%" y="287.50"></text></g><g><title>mi_segment_ensure_committed (2 samples, 0.21%)</title><rect x="72.5910%" y="261" width="0.2141%" height="15" fill="rgb(252,166,36)" fg:x="678" fg:w="2"/><text x="72.8410%" y="271.50"></text></g><g><title>mi_segment_commitx (2 samples, 0.21%)</title><rect x="72.5910%" y="245" width="0.2141%" height="15" fill="rgb(245,132,34)" fg:x="678" fg:w="2"/><text x="72.8410%" y="255.50"></text></g><g><title>_mi_clock_now (2 samples, 0.21%)</title><rect x="72.5910%" y="229" width="0.2141%" height="15" fill="rgb(236,54,3)" fg:x="678" fg:w="2"/><text x="72.8410%" y="239.50"></text></g><g><title>__GI___clock_gettime (1 samples, 0.11%)</title><rect x="72.6981%" y="213" width="0.1071%" height="15" fill="rgb(241,173,43)" fg:x="679" fg:w="1"/><text x="72.9481%" y="223.50"></text></g><g><title>[[vdso]] (1 samples, 0.11%)</title><rect x="72.6981%" y="197" width="0.1071%" height="15" fill="rgb(215,190,9)" fg:x="679" fg:w="1"/><text x="72.9481%" y="207.50"></text></g><g><title>[[vdso]] (1 samples, 0.11%)</title><rect x="72.6981%" y="181" width="0.1071%" height="15" fill="rgb(242,101,16)" fg:x="679" fg:w="1"/><text x="72.9481%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (70 samples, 7.49%)</title><rect x="65.4176%" y="485" width="7.4946%" height="15" fill="rgb(223,190,21)" fg:x="611" fg:w="70"/><text x="65.6676%" y="495.50">&lt;alloc::al..</text></g><g><title>alloc::alloc::Global::grow_impl (70 samples, 7.49%)</title><rect x="65.4176%" y="469" width="7.4946%" height="15" fill="rgb(215,228,25)" fg:x="611" fg:w="70"/><text x="65.6676%" y="479.50">alloc::all..</text></g><g><title>alloc::alloc::realloc (70 samples, 7.49%)</title><rect x="65.4176%" y="453" width="7.4946%" height="15" fill="rgb(225,36,22)" fg:x="611" fg:w="70"/><text x="65.6676%" y="463.50">alloc::all..</text></g><g><title>_mi_heap_realloc_zero (70 samples, 7.49%)</title><rect x="65.4176%" y="437" width="7.4946%" height="15" fill="rgb(251,106,46)" fg:x="611" fg:w="70"/><text x="65.6676%" y="447.50">_mi_heap_r..</text></g><g><title>mi_heap_malloc (33 samples, 3.53%)</title><rect x="69.3790%" y="421" width="3.5332%" height="15" fill="rgb(208,90,1)" fg:x="648" fg:w="33"/><text x="69.6290%" y="431.50">mi_..</text></g><g><title>mi_heap_malloc_small (1 samples, 0.11%)</title><rect x="72.8051%" y="405" width="0.1071%" height="15" fill="rgb(243,10,4)" fg:x="680" fg:w="1"/><text x="73.0551%" y="415.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.11%)</title><rect x="72.8051%" y="389" width="0.1071%" height="15" fill="rgb(212,137,27)" fg:x="680" fg:w="1"/><text x="73.0551%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (77 samples, 8.24%)</title><rect x="64.7752%" y="613" width="8.2441%" height="15" fill="rgb(231,220,49)" fg:x="605" fg:w="77"/><text x="65.0252%" y="623.50">&lt;alloc::vec..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (77 samples, 8.24%)</title><rect x="64.7752%" y="597" width="8.2441%" height="15" fill="rgb(237,96,20)" fg:x="605" fg:w="77"/><text x="65.0252%" y="607.50">&lt;alloc::vec..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (77 samples, 8.24%)</title><rect x="64.7752%" y="581" width="8.2441%" height="15" fill="rgb(239,229,30)" fg:x="605" fg:w="77"/><text x="65.0252%" y="591.50">alloc::vec:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (77 samples, 8.24%)</title><rect x="64.7752%" y="565" width="8.2441%" height="15" fill="rgb(219,65,33)" fg:x="605" fg:w="77"/><text x="65.0252%" y="575.50">alloc::vec:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (77 samples, 8.24%)</title><rect x="64.7752%" y="549" width="8.2441%" height="15" fill="rgb(243,134,7)" fg:x="605" fg:w="77"/><text x="65.0252%" y="559.50">alloc::raw_..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (72 samples, 7.71%)</title><rect x="65.3105%" y="533" width="7.7088%" height="15" fill="rgb(216,177,54)" fg:x="610" fg:w="72"/><text x="65.5605%" y="543.50">alloc::raw_..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (72 samples, 7.71%)</title><rect x="65.3105%" y="517" width="7.7088%" height="15" fill="rgb(211,160,20)" fg:x="610" fg:w="72"/><text x="65.5605%" y="527.50">alloc::raw_..</text></g><g><title>alloc::raw_vec::finish_grow (71 samples, 7.60%)</title><rect x="65.4176%" y="501" width="7.6017%" height="15" fill="rgb(239,85,39)" fg:x="611" fg:w="71"/><text x="65.6676%" y="511.50">alloc::raw..</text></g><g><title>mi_malloc (1 samples, 0.11%)</title><rect x="72.9122%" y="485" width="0.1071%" height="15" fill="rgb(232,125,22)" fg:x="681" fg:w="1"/><text x="73.1622%" y="495.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.11%)</title><rect x="72.9122%" y="469" width="0.1071%" height="15" fill="rgb(244,57,34)" fg:x="681" fg:w="1"/><text x="73.1622%" y="479.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.11%)</title><rect x="72.9122%" y="453" width="0.1071%" height="15" fill="rgb(214,203,32)" fg:x="681" fg:w="1"/><text x="73.1622%" y="463.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.11%)</title><rect x="72.9122%" y="437" width="0.1071%" height="15" fill="rgb(207,58,43)" fg:x="681" fg:w="1"/><text x="73.1622%" y="447.50"></text></g><g><title>[libc.so.6] (18 samples, 1.93%)</title><rect x="73.0193%" y="613" width="1.9272%" height="15" fill="rgb(215,193,15)" fg:x="682" fg:w="18"/><text x="73.2693%" y="623.50">[..</text></g><g><title>[unknown] (10 samples, 1.07%)</title><rect x="73.8758%" y="597" width="1.0707%" height="15" fill="rgb(232,15,44)" fg:x="690" fg:w="10"/><text x="74.1258%" y="607.50"></text></g><g><title>[unknown] (10 samples, 1.07%)</title><rect x="73.8758%" y="581" width="1.0707%" height="15" fill="rgb(212,3,48)" fg:x="690" fg:w="10"/><text x="74.1258%" y="591.50"></text></g><g><title>[unknown] (10 samples, 1.07%)</title><rect x="73.8758%" y="565" width="1.0707%" height="15" fill="rgb(218,128,7)" fg:x="690" fg:w="10"/><text x="74.1258%" y="575.50"></text></g><g><title>[unknown] (10 samples, 1.07%)</title><rect x="73.8758%" y="549" width="1.0707%" height="15" fill="rgb(226,216,39)" fg:x="690" fg:w="10"/><text x="74.1258%" y="559.50"></text></g><g><title>[unknown] (10 samples, 1.07%)</title><rect x="73.8758%" y="533" width="1.0707%" height="15" fill="rgb(243,47,51)" fg:x="690" fg:w="10"/><text x="74.1258%" y="543.50"></text></g><g><title>[unknown] (10 samples, 1.07%)</title><rect x="73.8758%" y="517" width="1.0707%" height="15" fill="rgb(241,183,40)" fg:x="690" fg:w="10"/><text x="74.1258%" y="527.50"></text></g><g><title>[unknown] (10 samples, 1.07%)</title><rect x="73.8758%" y="501" width="1.0707%" height="15" fill="rgb(231,217,32)" fg:x="690" fg:w="10"/><text x="74.1258%" y="511.50"></text></g><g><title>[unknown] (10 samples, 1.07%)</title><rect x="73.8758%" y="485" width="1.0707%" height="15" fill="rgb(229,61,38)" fg:x="690" fg:w="10"/><text x="74.1258%" y="495.50"></text></g><g><title>[unknown] (7 samples, 0.75%)</title><rect x="74.1970%" y="469" width="0.7495%" height="15" fill="rgb(225,210,5)" fg:x="693" fg:w="7"/><text x="74.4470%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.64%)</title><rect x="74.3041%" y="453" width="0.6424%" height="15" fill="rgb(231,79,45)" fg:x="694" fg:w="6"/><text x="74.5541%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.64%)</title><rect x="74.3041%" y="437" width="0.6424%" height="15" fill="rgb(224,100,7)" fg:x="694" fg:w="6"/><text x="74.5541%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="74.8394%" y="421" width="0.1071%" height="15" fill="rgb(241,198,18)" fg:x="699" fg:w="1"/><text x="75.0894%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.11%)</title><rect x="74.9465%" y="613" width="0.1071%" height="15" fill="rgb(252,97,53)" fg:x="700" fg:w="1"/><text x="75.1965%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.11%)</title><rect x="74.9465%" y="597" width="0.1071%" height="15" fill="rgb(220,88,7)" fg:x="700" fg:w="1"/><text x="75.1965%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.11%)</title><rect x="74.9465%" y="581" width="0.1071%" height="15" fill="rgb(213,176,14)" fg:x="700" fg:w="1"/><text x="75.1965%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.11%)</title><rect x="74.9465%" y="565" width="0.1071%" height="15" fill="rgb(246,73,7)" fg:x="700" fg:w="1"/><text x="75.1965%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.11%)</title><rect x="74.9465%" y="549" width="0.1071%" height="15" fill="rgb(245,64,36)" fg:x="700" fg:w="1"/><text x="75.1965%" y="559.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.11%)</title><rect x="74.9465%" y="533" width="0.1071%" height="15" fill="rgb(245,80,10)" fg:x="700" fg:w="1"/><text x="75.1965%" y="543.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.11%)</title><rect x="74.9465%" y="517" width="0.1071%" height="15" fill="rgb(232,107,50)" fg:x="700" fg:w="1"/><text x="75.1965%" y="527.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.11%)</title><rect x="74.9465%" y="501" width="0.1071%" height="15" fill="rgb(253,3,0)" fg:x="700" fg:w="1"/><text x="75.1965%" y="511.50"></text></g><g><title>mi_find_page (1 samples, 0.11%)</title><rect x="74.9465%" y="485" width="0.1071%" height="15" fill="rgb(212,99,53)" fg:x="700" fg:w="1"/><text x="75.1965%" y="495.50"></text></g><g><title>mi_find_free_page (1 samples, 0.11%)</title><rect x="74.9465%" y="469" width="0.1071%" height="15" fill="rgb(249,111,54)" fg:x="700" fg:w="1"/><text x="75.1965%" y="479.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.11%)</title><rect x="74.9465%" y="453" width="0.1071%" height="15" fill="rgb(249,55,30)" fg:x="700" fg:w="1"/><text x="75.1965%" y="463.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.11%)</title><rect x="74.9465%" y="437" width="0.1071%" height="15" fill="rgb(237,47,42)" fg:x="700" fg:w="1"/><text x="75.1965%" y="447.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.11%)</title><rect x="74.9465%" y="421" width="0.1071%" height="15" fill="rgb(211,20,18)" fg:x="700" fg:w="1"/><text x="75.1965%" y="431.50"></text></g><g><title>mi_page_free_list_extend (1 samples, 0.11%)</title><rect x="74.9465%" y="405" width="0.1071%" height="15" fill="rgb(231,203,46)" fg:x="700" fg:w="1"/><text x="75.1965%" y="415.50"></text></g><g><title>mi_block_set_next (1 samples, 0.11%)</title><rect x="74.9465%" y="389" width="0.1071%" height="15" fill="rgb(237,142,3)" fg:x="700" fg:w="1"/><text x="75.1965%" y="399.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.11%)</title><rect x="74.9465%" y="373" width="0.1071%" height="15" fill="rgb(241,107,1)" fg:x="700" fg:w="1"/><text x="75.1965%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="74.9465%" y="357" width="0.1071%" height="15" fill="rgb(229,83,13)" fg:x="700" fg:w="1"/><text x="75.1965%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.21%)</title><rect x="75.0535%" y="613" width="0.2141%" height="15" fill="rgb(241,91,40)" fg:x="701" fg:w="2"/><text x="75.3035%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.21%)</title><rect x="75.0535%" y="597" width="0.2141%" height="15" fill="rgb(225,3,45)" fg:x="701" fg:w="2"/><text x="75.3035%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.21%)</title><rect x="75.0535%" y="581" width="0.2141%" height="15" fill="rgb(244,223,14)" fg:x="701" fg:w="2"/><text x="75.3035%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.21%)</title><rect x="75.0535%" y="565" width="0.2141%" height="15" fill="rgb(224,124,37)" fg:x="701" fg:w="2"/><text x="75.3035%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.21%)</title><rect x="75.0535%" y="549" width="0.2141%" height="15" fill="rgb(251,171,30)" fg:x="701" fg:w="2"/><text x="75.3035%" y="559.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.21%)</title><rect x="75.0535%" y="533" width="0.2141%" height="15" fill="rgb(236,46,54)" fg:x="701" fg:w="2"/><text x="75.3035%" y="543.50"></text></g><g><title>_mi_heap_realloc_zero (2 samples, 0.21%)</title><rect x="75.0535%" y="517" width="0.2141%" height="15" fill="rgb(245,213,5)" fg:x="701" fg:w="2"/><text x="75.3035%" y="527.50"></text></g><g><title>_mi_malloc_generic (2 samples, 0.21%)</title><rect x="75.0535%" y="501" width="0.2141%" height="15" fill="rgb(230,144,27)" fg:x="701" fg:w="2"/><text x="75.3035%" y="511.50"></text></g><g><title>mi_find_page (2 samples, 0.21%)</title><rect x="75.0535%" y="485" width="0.2141%" height="15" fill="rgb(220,86,6)" fg:x="701" fg:w="2"/><text x="75.3035%" y="495.50"></text></g><g><title>mi_find_free_page (2 samples, 0.21%)</title><rect x="75.0535%" y="469" width="0.2141%" height="15" fill="rgb(240,20,13)" fg:x="701" fg:w="2"/><text x="75.3035%" y="479.50"></text></g><g><title>mi_page_queue_find_free_ex (2 samples, 0.21%)</title><rect x="75.0535%" y="453" width="0.2141%" height="15" fill="rgb(217,89,34)" fg:x="701" fg:w="2"/><text x="75.3035%" y="463.50"></text></g><g><title>mi_page_fresh (2 samples, 0.21%)</title><rect x="75.0535%" y="437" width="0.2141%" height="15" fill="rgb(229,13,5)" fg:x="701" fg:w="2"/><text x="75.3035%" y="447.50"></text></g><g><title>mi_page_fresh_alloc (2 samples, 0.21%)</title><rect x="75.0535%" y="421" width="0.2141%" height="15" fill="rgb(244,67,35)" fg:x="701" fg:w="2"/><text x="75.3035%" y="431.50"></text></g><g><title>mi_page_init (2 samples, 0.21%)</title><rect x="75.0535%" y="405" width="0.2141%" height="15" fill="rgb(221,40,2)" fg:x="701" fg:w="2"/><text x="75.3035%" y="415.50"></text></g><g><title>mi_page_extend_free (2 samples, 0.21%)</title><rect x="75.0535%" y="389" width="0.2141%" height="15" fill="rgb(237,157,21)" fg:x="701" fg:w="2"/><text x="75.3035%" y="399.50"></text></g><g><title>mi_page_extend_free (2 samples, 0.21%)</title><rect x="75.0535%" y="373" width="0.2141%" height="15" fill="rgb(222,94,11)" fg:x="701" fg:w="2"/><text x="75.3035%" y="383.50"></text></g><g><title>mi_page_free_list_extend (2 samples, 0.21%)</title><rect x="75.0535%" y="357" width="0.2141%" height="15" fill="rgb(249,113,6)" fg:x="701" fg:w="2"/><text x="75.3035%" y="367.50"></text></g><g><title>mi_block_set_next (2 samples, 0.21%)</title><rect x="75.0535%" y="341" width="0.2141%" height="15" fill="rgb(238,137,36)" fg:x="701" fg:w="2"/><text x="75.3035%" y="351.50"></text></g><g><title>mi_block_set_nextx (2 samples, 0.21%)</title><rect x="75.0535%" y="325" width="0.2141%" height="15" fill="rgb(210,102,26)" fg:x="701" fg:w="2"/><text x="75.3035%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="75.0535%" y="309" width="0.2141%" height="15" fill="rgb(218,30,30)" fg:x="701" fg:w="2"/><text x="75.3035%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;csgoproto::netmessages::CSVCMsg_PacketEntities&gt; (2 samples, 0.21%)</title><rect x="75.2677%" y="613" width="0.2141%" height="15" fill="rgb(214,67,26)" fg:x="703" fg:w="2"/><text x="75.5177%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (1 samples, 0.11%)</title><rect x="75.3747%" y="597" width="0.1071%" height="15" fill="rgb(251,9,53)" fg:x="704" fg:w="1"/><text x="75.6247%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.11%)</title><rect x="75.3747%" y="581" width="0.1071%" height="15" fill="rgb(228,204,25)" fg:x="704" fg:w="1"/><text x="75.6247%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.11%)</title><rect x="75.3747%" y="565" width="0.1071%" height="15" fill="rgb(207,153,8)" fg:x="704" fg:w="1"/><text x="75.6247%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="75.3747%" y="549" width="0.1071%" height="15" fill="rgb(242,9,16)" fg:x="704" fg:w="1"/><text x="75.6247%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.11%)</title><rect x="75.3747%" y="533" width="0.1071%" height="15" fill="rgb(217,211,10)" fg:x="704" fg:w="1"/><text x="75.6247%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.11%)</title><rect x="75.3747%" y="517" width="0.1071%" height="15" fill="rgb(219,228,52)" fg:x="704" fg:w="1"/><text x="75.6247%" y="527.50"></text></g><g><title>mi_free (1 samples, 0.11%)</title><rect x="75.3747%" y="501" width="0.1071%" height="15" fill="rgb(231,92,29)" fg:x="704" fg:w="1"/><text x="75.6247%" y="511.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.32%)</title><rect x="76.8737%" y="597" width="0.3212%" height="15" fill="rgb(232,8,23)" fg:x="718" fg:w="3"/><text x="77.1237%" y="607.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.11%)</title><rect x="77.1949%" y="597" width="0.1071%" height="15" fill="rgb(216,211,34)" fg:x="721" fg:w="1"/><text x="77.4449%" y="607.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::len (1 samples, 0.11%)</title><rect x="77.1949%" y="581" width="0.1071%" height="15" fill="rgb(236,151,0)" fg:x="721" fg:w="1"/><text x="77.4449%" y="591.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (1 samples, 0.11%)</title><rect x="77.1949%" y="565" width="0.1071%" height="15" fill="rgb(209,168,3)" fg:x="721" fg:w="1"/><text x="77.4449%" y="575.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.11%)</title><rect x="77.4090%" y="549" width="0.1071%" height="15" fill="rgb(208,129,28)" fg:x="723" fg:w="1"/><text x="77.6590%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.11%)</title><rect x="77.5161%" y="549" width="0.1071%" height="15" fill="rgb(229,78,22)" fg:x="724" fg:w="1"/><text x="77.7661%" y="559.50"></text></g><g><title>__rust_realloc (1 samples, 0.11%)</title><rect x="77.7302%" y="485" width="0.1071%" height="15" fill="rgb(228,187,13)" fg:x="726" fg:w="1"/><text x="77.9802%" y="495.50"></text></g><g><title>_mi_memcpy_aligned (4 samples, 0.43%)</title><rect x="77.9443%" y="469" width="0.4283%" height="15" fill="rgb(240,119,24)" fg:x="728" fg:w="4"/><text x="78.1943%" y="479.50"></text></g><g><title>_mi_memcpy (4 samples, 0.43%)</title><rect x="77.9443%" y="453" width="0.4283%" height="15" fill="rgb(209,194,42)" fg:x="728" fg:w="4"/><text x="78.1943%" y="463.50"></text></g><g><title>memcpy (4 samples, 0.43%)</title><rect x="77.9443%" y="437" width="0.4283%" height="15" fill="rgb(247,200,46)" fg:x="728" fg:w="4"/><text x="78.1943%" y="447.50"></text></g><g><title>[libc.so.6] (4 samples, 0.43%)</title><rect x="77.9443%" y="421" width="0.4283%" height="15" fill="rgb(218,76,16)" fg:x="728" fg:w="4"/><text x="78.1943%" y="431.50"></text></g><g><title>_mi_usable_size (1 samples, 0.11%)</title><rect x="78.3726%" y="469" width="0.1071%" height="15" fill="rgb(225,21,48)" fg:x="732" fg:w="1"/><text x="78.6226%" y="479.50"></text></g><g><title>_mi_segment_page_of (1 samples, 0.11%)</title><rect x="78.3726%" y="453" width="0.1071%" height="15" fill="rgb(239,223,50)" fg:x="732" fg:w="1"/><text x="78.6226%" y="463.50"></text></g><g><title>mi_free (1 samples, 0.11%)</title><rect x="78.4797%" y="469" width="0.1071%" height="15" fill="rgb(244,45,21)" fg:x="733" fg:w="1"/><text x="78.7297%" y="479.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.11%)</title><rect x="78.5867%" y="437" width="0.1071%" height="15" fill="rgb(232,33,43)" fg:x="734" fg:w="1"/><text x="78.8367%" y="447.50"></text></g><g><title>_mi_page_free_collect (3 samples, 0.32%)</title><rect x="78.6938%" y="405" width="0.3212%" height="15" fill="rgb(209,8,3)" fg:x="735" fg:w="3"/><text x="78.9438%" y="415.50"></text></g><g><title>_mi_malloc_generic (5 samples, 0.54%)</title><rect x="78.5867%" y="453" width="0.5353%" height="15" fill="rgb(214,25,53)" fg:x="734" fg:w="5"/><text x="78.8367%" y="463.50"></text></g><g><title>mi_find_page (4 samples, 0.43%)</title><rect x="78.6938%" y="437" width="0.4283%" height="15" fill="rgb(254,186,54)" fg:x="735" fg:w="4"/><text x="78.9438%" y="447.50"></text></g><g><title>mi_find_free_page (4 samples, 0.43%)</title><rect x="78.6938%" y="421" width="0.4283%" height="15" fill="rgb(208,174,49)" fg:x="735" fg:w="4"/><text x="78.9438%" y="431.50"></text></g><g><title>mi_page_queue (1 samples, 0.11%)</title><rect x="79.0150%" y="405" width="0.1071%" height="15" fill="rgb(233,191,51)" fg:x="738" fg:w="1"/><text x="79.2650%" y="415.50"></text></g><g><title>_mi_bin (1 samples, 0.11%)</title><rect x="79.0150%" y="389" width="0.1071%" height="15" fill="rgb(222,134,10)" fg:x="738" fg:w="1"/><text x="79.2650%" y="399.50"></text></g><g><title>mi_bin (1 samples, 0.11%)</title><rect x="79.0150%" y="373" width="0.1071%" height="15" fill="rgb(230,226,20)" fg:x="738" fg:w="1"/><text x="79.2650%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (14 samples, 1.50%)</title><rect x="77.7302%" y="533" width="1.4989%" height="15" fill="rgb(251,111,25)" fg:x="726" fg:w="14"/><text x="77.9802%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (14 samples, 1.50%)</title><rect x="77.7302%" y="517" width="1.4989%" height="15" fill="rgb(224,40,46)" fg:x="726" fg:w="14"/><text x="77.9802%" y="527.50"></text></g><g><title>alloc::alloc::realloc (14 samples, 1.50%)</title><rect x="77.7302%" y="501" width="1.4989%" height="15" fill="rgb(236,108,47)" fg:x="726" fg:w="14"/><text x="77.9802%" y="511.50"></text></g><g><title>_mi_heap_realloc_zero (13 samples, 1.39%)</title><rect x="77.8373%" y="485" width="1.3919%" height="15" fill="rgb(234,93,0)" fg:x="727" fg:w="13"/><text x="78.0873%" y="495.50"></text></g><g><title>mi_heap_malloc (6 samples, 0.64%)</title><rect x="78.5867%" y="469" width="0.6424%" height="15" fill="rgb(224,213,32)" fg:x="734" fg:w="6"/><text x="78.8367%" y="479.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.11%)</title><rect x="79.1221%" y="453" width="0.1071%" height="15" fill="rgb(251,11,48)" fg:x="739" fg:w="1"/><text x="79.3721%" y="463.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.11%)</title><rect x="79.1221%" y="437" width="0.1071%" height="15" fill="rgb(236,173,5)" fg:x="739" fg:w="1"/><text x="79.3721%" y="447.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.11%)</title><rect x="79.2291%" y="533" width="0.1071%" height="15" fill="rgb(230,95,12)" fg:x="740" fg:w="1"/><text x="79.4791%" y="543.50"></text></g><g><title>mi_find_page (1 samples, 0.11%)</title><rect x="79.2291%" y="517" width="0.1071%" height="15" fill="rgb(232,209,1)" fg:x="740" fg:w="1"/><text x="79.4791%" y="527.50"></text></g><g><title>mi_find_free_page (1 samples, 0.11%)</title><rect x="79.2291%" y="501" width="0.1071%" height="15" fill="rgb(232,6,1)" fg:x="740" fg:w="1"/><text x="79.4791%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.11%)</title><rect x="79.3362%" y="533" width="0.1071%" height="15" fill="rgb(210,224,50)" fg:x="741" fg:w="1"/><text x="79.5862%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (24 samples, 2.57%)</title><rect x="77.3019%" y="581" width="2.5696%" height="15" fill="rgb(228,127,35)" fg:x="722" fg:w="24"/><text x="77.5519%" y="591.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (24 samples, 2.57%)</title><rect x="77.3019%" y="565" width="2.5696%" height="15" fill="rgb(245,102,45)" fg:x="722" fg:w="24"/><text x="77.5519%" y="575.50">al..</text></g><g><title>alloc::raw_vec::finish_grow (21 samples, 2.25%)</title><rect x="77.6231%" y="549" width="2.2484%" height="15" fill="rgb(214,1,49)" fg:x="725" fg:w="21"/><text x="77.8731%" y="559.50">a..</text></g><g><title>mi_malloc (4 samples, 0.43%)</title><rect x="79.4433%" y="533" width="0.4283%" height="15" fill="rgb(226,163,40)" fg:x="742" fg:w="4"/><text x="79.6933%" y="543.50"></text></g><g><title>mi_heap_malloc (3 samples, 0.32%)</title><rect x="79.5503%" y="517" width="0.3212%" height="15" fill="rgb(239,212,28)" fg:x="743" fg:w="3"/><text x="79.8003%" y="527.50"></text></g><g><title>mi_heap_malloc_small (3 samples, 0.32%)</title><rect x="79.5503%" y="501" width="0.3212%" height="15" fill="rgb(220,20,13)" fg:x="743" fg:w="3"/><text x="79.8003%" y="511.50"></text></g><g><title>_mi_page_malloc (3 samples, 0.32%)</title><rect x="79.5503%" y="485" width="0.3212%" height="15" fill="rgb(210,164,35)" fg:x="743" fg:w="3"/><text x="79.8003%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (28 samples, 3.00%)</title><rect x="79.8715%" y="581" width="2.9979%" height="15" fill="rgb(248,109,41)" fg:x="746" fg:w="28"/><text x="80.1215%" y="591.50">cor..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (28 samples, 3.00%)</title><rect x="79.8715%" y="565" width="2.9979%" height="15" fill="rgb(238,23,50)" fg:x="746" fg:w="28"/><text x="80.1215%" y="575.50">cor..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (63 samples, 6.75%)</title><rect x="77.3019%" y="597" width="6.7452%" height="15" fill="rgb(211,48,49)" fg:x="722" fg:w="63"/><text x="77.5519%" y="607.50">alloc::ve..</text></g><g><title>core::ptr::write (11 samples, 1.18%)</title><rect x="82.8694%" y="581" width="1.1777%" height="15" fill="rgb(223,36,21)" fg:x="774" fg:w="11"/><text x="83.1194%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (3 samples, 0.32%)</title><rect x="84.0471%" y="597" width="0.3212%" height="15" fill="rgb(207,123,46)" fg:x="785" fg:w="3"/><text x="84.2971%" y="607.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_boolie (1 samples, 0.11%)</title><rect x="84.7966%" y="581" width="0.1071%" height="15" fill="rgb(240,218,32)" fg:x="792" fg:w="1"/><text x="85.0466%" y="591.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bit (1 samples, 0.11%)</title><rect x="84.7966%" y="565" width="0.1071%" height="15" fill="rgb(252,5,43)" fg:x="792" fg:w="1"/><text x="85.0466%" y="575.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.11%)</title><rect x="84.7966%" y="549" width="0.1071%" height="15" fill="rgb(252,84,19)" fg:x="792" fg:w="1"/><text x="85.0466%" y="559.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_boolie (5 samples, 0.54%)</title><rect x="85.4390%" y="565" width="0.5353%" height="15" fill="rgb(243,152,39)" fg:x="798" fg:w="5"/><text x="85.6890%" y="575.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bit (5 samples, 0.54%)</title><rect x="85.4390%" y="549" width="0.5353%" height="15" fill="rgb(234,160,15)" fg:x="798" fg:w="5"/><text x="85.6890%" y="559.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (5 samples, 0.54%)</title><rect x="85.4390%" y="533" width="0.5353%" height="15" fill="rgb(237,34,20)" fg:x="798" fg:w="5"/><text x="85.6890%" y="543.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::peek (3 samples, 0.32%)</title><rect x="87.4732%" y="533" width="0.3212%" height="15" fill="rgb(229,97,13)" fg:x="817" fg:w="3"/><text x="87.7232%" y="543.50"></text></g><g><title>bitter::LittleEndianReader::peek_ (3 samples, 0.32%)</title><rect x="87.4732%" y="517" width="0.3212%" height="15" fill="rgb(234,71,50)" fg:x="817" fg:w="3"/><text x="87.7232%" y="527.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_inx (29 samples, 3.10%)</title><rect x="84.9036%" y="581" width="3.1049%" height="15" fill="rgb(253,155,4)" fg:x="793" fg:w="29"/><text x="85.1536%" y="591.50">dem..</text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (19 samples, 2.03%)</title><rect x="85.9743%" y="565" width="2.0343%" height="15" fill="rgb(222,185,37)" fg:x="803" fg:w="19"/><text x="86.2243%" y="575.50">d..</text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (19 samples, 2.03%)</title><rect x="85.9743%" y="549" width="2.0343%" height="15" fill="rgb(251,177,13)" fg:x="803" fg:w="19"/><text x="86.2243%" y="559.50">&lt;..</text></g><g><title>bitter::LittleEndianReader::refill (2 samples, 0.21%)</title><rect x="87.7944%" y="533" width="0.2141%" height="15" fill="rgb(250,179,40)" fg:x="820" fg:w="2"/><text x="88.0444%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.21%)</title><rect x="87.7944%" y="517" width="0.2141%" height="15" fill="rgb(242,44,2)" fg:x="820" fg:w="2"/><text x="88.0444%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.21%)</title><rect x="87.7944%" y="501" width="0.2141%" height="15" fill="rgb(216,177,13)" fg:x="820" fg:w="2"/><text x="88.0444%" y="511.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::parse_indicies (46 samples, 4.93%)</title><rect x="84.3683%" y="597" width="4.9251%" height="15" fill="rgb(216,106,43)" fg:x="788" fg:w="46"/><text x="84.6183%" y="607.50">demopa..</text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (12 samples, 1.28%)</title><rect x="88.0086%" y="581" width="1.2848%" height="15" fill="rgb(216,183,2)" fg:x="822" fg:w="12"/><text x="88.2586%" y="591.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (7 samples, 0.75%)</title><rect x="88.5439%" y="565" width="0.7495%" height="15" fill="rgb(249,75,3)" fg:x="827" fg:w="7"/><text x="88.7939%" y="575.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (6 samples, 0.64%)</title><rect x="88.6510%" y="549" width="0.6424%" height="15" fill="rgb(219,67,39)" fg:x="828" fg:w="6"/><text x="88.9010%" y="559.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_special_float (4 samples, 0.43%)</title><rect x="91.1135%" y="565" width="0.4283%" height="15" fill="rgb(253,228,2)" fg:x="851" fg:w="4"/><text x="91.3635%" y="575.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_f32 (2 samples, 0.21%)</title><rect x="91.3276%" y="549" width="0.2141%" height="15" fill="rgb(235,138,27)" fg:x="853" fg:w="2"/><text x="91.5776%" y="559.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_u32 (2 samples, 0.21%)</title><rect x="91.3276%" y="533" width="0.2141%" height="15" fill="rgb(236,97,51)" fg:x="853" fg:w="2"/><text x="91.5776%" y="543.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (2 samples, 0.21%)</title><rect x="91.3276%" y="517" width="0.2141%" height="15" fill="rgb(240,80,30)" fg:x="853" fg:w="2"/><text x="91.5776%" y="527.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_float (9 samples, 0.96%)</title><rect x="90.7923%" y="581" width="0.9636%" height="15" fill="rgb(230,178,19)" fg:x="848" fg:w="9"/><text x="91.0423%" y="591.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (2 samples, 0.21%)</title><rect x="91.5418%" y="565" width="0.2141%" height="15" fill="rgb(210,190,27)" fg:x="855" fg:w="2"/><text x="91.7918%" y="575.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.11%)</title><rect x="91.6488%" y="549" width="0.1071%" height="15" fill="rgb(222,107,31)" fg:x="856" fg:w="1"/><text x="91.8988%" y="559.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_int (3 samples, 0.32%)</title><rect x="91.7559%" y="581" width="0.3212%" height="15" fill="rgb(216,127,34)" fg:x="857" fg:w="3"/><text x="92.0059%" y="591.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_sbit_long (2 samples, 0.21%)</title><rect x="91.8630%" y="565" width="0.2141%" height="15" fill="rgb(234,116,52)" fg:x="858" fg:w="2"/><text x="92.1130%" y="575.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (1 samples, 0.11%)</title><rect x="91.9700%" y="549" width="0.1071%" height="15" fill="rgb(222,124,15)" fg:x="859" fg:w="1"/><text x="92.2200%" y="559.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.11%)</title><rect x="91.9700%" y="533" width="0.1071%" height="15" fill="rgb(231,179,28)" fg:x="859" fg:w="1"/><text x="92.2200%" y="543.50"></text></g><g><title>bitter::LittleEndianReader::has_data_for_unaligned_loads (1 samples, 0.11%)</title><rect x="91.9700%" y="517" width="0.1071%" height="15" fill="rgb(226,93,45)" fg:x="859" fg:w="1"/><text x="92.2200%" y="527.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_vec (2 samples, 0.21%)</title><rect x="92.0771%" y="581" width="0.2141%" height="15" fill="rgb(215,8,51)" fg:x="860" fg:w="2"/><text x="92.3271%" y="591.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_float (2 samples, 0.21%)</title><rect x="92.0771%" y="565" width="0.2141%" height="15" fill="rgb(223,106,5)" fg:x="860" fg:w="2"/><text x="92.3271%" y="575.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_special_float (1 samples, 0.11%)</title><rect x="92.1842%" y="549" width="0.1071%" height="15" fill="rgb(250,191,5)" fg:x="861" fg:w="1"/><text x="92.4342%" y="559.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_bit_coord (1 samples, 0.11%)</title><rect x="92.1842%" y="533" width="0.1071%" height="15" fill="rgb(242,132,44)" fg:x="861" fg:w="1"/><text x="92.4342%" y="543.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bit (1 samples, 0.11%)</title><rect x="92.1842%" y="517" width="0.1071%" height="15" fill="rgb(251,152,29)" fg:x="861" fg:w="1"/><text x="92.4342%" y="527.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.11%)</title><rect x="92.1842%" y="501" width="0.1071%" height="15" fill="rgb(218,179,5)" fg:x="861" fg:w="1"/><text x="92.4342%" y="511.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode (29 samples, 3.10%)</title><rect x="89.2934%" y="597" width="3.1049%" height="15" fill="rgb(227,67,19)" fg:x="834" fg:w="29"/><text x="89.5434%" y="607.50">dem..</text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_vec_xy (1 samples, 0.11%)</title><rect x="92.2912%" y="581" width="0.1071%" height="15" fill="rgb(233,119,31)" fg:x="862" fg:w="1"/><text x="92.5412%" y="591.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_float (1 samples, 0.11%)</title><rect x="92.2912%" y="565" width="0.1071%" height="15" fill="rgb(241,120,22)" fg:x="862" fg:w="1"/><text x="92.5412%" y="575.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_special_float (1 samples, 0.11%)</title><rect x="92.2912%" y="549" width="0.1071%" height="15" fill="rgb(224,102,30)" fg:x="862" fg:w="1"/><text x="92.5412%" y="559.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_f32 (1 samples, 0.11%)</title><rect x="92.2912%" y="533" width="0.1071%" height="15" fill="rgb(210,164,37)" fg:x="862" fg:w="1"/><text x="92.5412%" y="543.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_u32 (1 samples, 0.11%)</title><rect x="92.2912%" y="517" width="0.1071%" height="15" fill="rgb(226,191,16)" fg:x="862" fg:w="1"/><text x="92.5412%" y="527.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.11%)</title><rect x="92.2912%" y="501" width="0.1071%" height="15" fill="rgb(214,40,45)" fg:x="862" fg:w="1"/><text x="92.5412%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.32%)</title><rect x="92.5054%" y="549" width="0.3212%" height="15" fill="rgb(244,29,26)" fg:x="864" fg:w="3"/><text x="92.7554%" y="559.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::hash_one (3 samples, 0.32%)</title><rect x="92.5054%" y="533" width="0.3212%" height="15" fill="rgb(216,16,5)" fg:x="864" fg:w="3"/><text x="92.7554%" y="543.50"></text></g><g><title>ahash::random_state::RandomState::hash_one (3 samples, 0.32%)</title><rect x="92.5054%" y="517" width="0.3212%" height="15" fill="rgb(249,76,35)" fg:x="864" fg:w="3"/><text x="92.7554%" y="527.50"></text></g><g><title>&lt;T as ahash::specialize::CallHasher&gt;::get_hash (3 samples, 0.32%)</title><rect x="92.5054%" y="501" width="0.3212%" height="15" fill="rgb(207,11,44)" fg:x="864" fg:w="3"/><text x="92.7554%" y="511.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::finish (3 samples, 0.32%)</title><rect x="92.5054%" y="485" width="0.3212%" height="15" fill="rgb(228,190,49)" fg:x="864" fg:w="3"/><text x="92.7554%" y="495.50"></text></g><g><title>&lt;u128 as ahash::convert::Convert&lt;[u64: 2]&gt;&gt;::convert (3 samples, 0.32%)</title><rect x="92.5054%" y="469" width="0.3212%" height="15" fill="rgb(214,173,12)" fg:x="864" fg:w="3"/><text x="92.7554%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.11%)</title><rect x="93.1478%" y="501" width="0.1071%" height="15" fill="rgb(218,26,35)" fg:x="870" fg:w="1"/><text x="93.3978%" y="511.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.11%)</title><rect x="93.1478%" y="485" width="0.1071%" height="15" fill="rgb(220,200,19)" fg:x="870" fg:w="1"/><text x="93.3978%" y="495.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.11%)</title><rect x="93.1478%" y="469" width="0.1071%" height="15" fill="rgb(239,95,49)" fg:x="870" fg:w="1"/><text x="93.3978%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.11%)</title><rect x="93.1478%" y="453" width="0.1071%" height="15" fill="rgb(235,85,53)" fg:x="870" fg:w="1"/><text x="93.3978%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.11%)</title><rect x="93.1478%" y="437" width="0.1071%" height="15" fill="rgb(233,133,31)" fg:x="870" fg:w="1"/><text x="93.3978%" y="447.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::parse_ent_props (167 samples, 17.88%)</title><rect x="75.4818%" y="613" width="17.8801%" height="15" fill="rgb(218,25,20)" fg:x="705" fg:w="167"/><text x="75.7318%" y="623.50">demoparser::parsing::demo_pa..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.96%)</title><rect x="92.3983%" y="597" width="0.9636%" height="15" fill="rgb(252,210,38)" fg:x="863" fg:w="9"/><text x="92.6483%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9 samples, 0.96%)</title><rect x="92.3983%" y="581" width="0.9636%" height="15" fill="rgb(242,134,21)" fg:x="863" fg:w="9"/><text x="92.6483%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.96%)</title><rect x="92.3983%" y="565" width="0.9636%" height="15" fill="rgb(213,28,48)" fg:x="863" fg:w="9"/><text x="92.6483%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.54%)</title><rect x="92.8266%" y="549" width="0.5353%" height="15" fill="rgb(250,196,2)" fg:x="867" fg:w="5"/><text x="93.0766%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.54%)</title><rect x="92.8266%" y="533" width="0.5353%" height="15" fill="rgb(227,5,17)" fg:x="867" fg:w="5"/><text x="93.0766%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (5 samples, 0.54%)</title><rect x="92.8266%" y="517" width="0.5353%" height="15" fill="rgb(221,226,24)" fg:x="867" fg:w="5"/><text x="93.0766%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.11%)</title><rect x="93.2548%" y="501" width="0.1071%" height="15" fill="rgb(211,5,48)" fg:x="871" fg:w="1"/><text x="93.5048%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.11%)</title><rect x="93.2548%" y="485" width="0.1071%" height="15" fill="rgb(219,150,6)" fg:x="871" fg:w="1"/><text x="93.5048%" y="495.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_u_bit_var (1 samples, 0.11%)</title><rect x="93.3619%" y="613" width="0.1071%" height="15" fill="rgb(251,46,16)" fg:x="872" fg:w="1"/><text x="93.6119%" y="623.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::_parse_packet_entities (269 samples, 28.80%)</title><rect x="64.7752%" y="629" width="28.8009%" height="15" fill="rgb(220,204,40)" fg:x="605" fg:w="269"/><text x="65.0252%" y="639.50">demoparser::parsing::demo_parsing::entities::&lt;..</text></g><g><title>mi_free (1 samples, 0.11%)</title><rect x="93.4690%" y="613" width="0.1071%" height="15" fill="rgb(211,85,2)" fg:x="873" fg:w="1"/><text x="93.7190%" y="623.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (4 samples, 0.43%)</title><rect x="93.7901%" y="549" width="0.4283%" height="15" fill="rgb(229,17,7)" fg:x="876" fg:w="4"/><text x="94.0401%" y="559.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (4 samples, 0.43%)</title><rect x="93.7901%" y="533" width="0.4283%" height="15" fill="rgb(239,72,28)" fg:x="876" fg:w="4"/><text x="94.0401%" y="543.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact (4 samples, 0.43%)</title><rect x="93.7901%" y="517" width="0.4283%" height="15" fill="rgb(230,47,54)" fg:x="876" fg:w="4"/><text x="94.0401%" y="527.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::read_bytes (4 samples, 0.43%)</title><rect x="93.7901%" y="501" width="0.4283%" height="15" fill="rgb(214,50,8)" fg:x="876" fg:w="4"/><text x="94.0401%" y="511.50"></text></g><g><title>protobuf::misc::maybe_uninit_write_slice (4 samples, 0.43%)</title><rect x="93.7901%" y="485" width="0.4283%" height="15" fill="rgb(216,198,43)" fg:x="876" fg:w="4"/><text x="94.0401%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (4 samples, 0.43%)</title><rect x="93.7901%" y="469" width="0.4283%" height="15" fill="rgb(234,20,35)" fg:x="876" fg:w="4"/><text x="94.0401%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.43%)</title><rect x="93.7901%" y="453" width="0.4283%" height="15" fill="rgb(254,45,19)" fg:x="876" fg:w="4"/><text x="94.0401%" y="463.50"></text></g><g><title>[libc.so.6] (4 samples, 0.43%)</title><rect x="93.7901%" y="437" width="0.4283%" height="15" fill="rgb(219,14,44)" fg:x="876" fg:w="4"/><text x="94.0401%" y="447.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes (5 samples, 0.54%)</title><rect x="93.7901%" y="581" width="0.5353%" height="15" fill="rgb(217,220,26)" fg:x="876" fg:w="5"/><text x="94.0401%" y="591.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (5 samples, 0.54%)</title><rect x="93.7901%" y="565" width="0.5353%" height="15" fill="rgb(213,158,28)" fg:x="876" fg:w="5"/><text x="94.0401%" y="575.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32 (1 samples, 0.11%)</title><rect x="94.2184%" y="549" width="0.1071%" height="15" fill="rgb(252,51,52)" fg:x="880" fg:w="1"/><text x="94.4684%" y="559.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::remaining_in_buf (1 samples, 0.11%)</title><rect x="94.2184%" y="533" width="0.1071%" height="15" fill="rgb(246,89,16)" fg:x="880" fg:w="1"/><text x="94.4684%" y="543.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::remaining_in_buf (1 samples, 0.11%)</title><rect x="94.2184%" y="517" width="0.1071%" height="15" fill="rgb(216,158,49)" fg:x="880" fg:w="1"/><text x="94.4684%" y="527.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_packet_entities (278 samples, 29.76%)</title><rect x="64.6681%" y="645" width="29.7645%" height="15" fill="rgb(236,107,19)" fg:x="604" fg:w="278"/><text x="64.9181%" y="655.50">demoparser::parsing::demo_parsing::entities::&lt;im..</text></g><g><title>protobuf::message::Message::parse_from_bytes (8 samples, 0.86%)</title><rect x="93.5760%" y="629" width="0.8565%" height="15" fill="rgb(228,185,30)" fg:x="874" fg:w="8"/><text x="93.8260%" y="639.50"></text></g><g><title>protobuf::message::Message::parse_from (8 samples, 0.86%)</title><rect x="93.5760%" y="613" width="0.8565%" height="15" fill="rgb(246,134,8)" fg:x="874" fg:w="8"/><text x="93.8260%" y="623.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_PacketEntities as protobuf::message::Message&gt;::merge_from (8 samples, 0.86%)</title><rect x="93.5760%" y="597" width="0.8565%" height="15" fill="rgb(214,143,50)" fg:x="874" fg:w="8"/><text x="93.8260%" y="607.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (1 samples, 0.11%)</title><rect x="94.3255%" y="581" width="0.1071%" height="15" fill="rgb(228,75,8)" fg:x="881" fg:w="1"/><text x="94.5755%" y="591.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (1 samples, 0.11%)</title><rect x="94.3255%" y="565" width="0.1071%" height="15" fill="rgb(207,175,4)" fg:x="881" fg:w="1"/><text x="94.5755%" y="575.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::consume (1 samples, 0.11%)</title><rect x="94.3255%" y="549" width="0.1071%" height="15" fill="rgb(205,108,24)" fg:x="881" fg:w="1"/><text x="94.5755%" y="559.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::consume (1 samples, 0.11%)</title><rect x="94.3255%" y="533" width="0.1071%" height="15" fill="rgb(244,120,49)" fg:x="881" fg:w="1"/><text x="94.5755%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (2 samples, 0.21%)</title><rect x="94.4325%" y="629" width="0.2141%" height="15" fill="rgb(223,47,38)" fg:x="882" fg:w="2"/><text x="94.6825%" y="639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.21%)</title><rect x="94.4325%" y="613" width="0.2141%" height="15" fill="rgb(229,179,11)" fg:x="882" fg:w="2"/><text x="94.6825%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.21%)</title><rect x="94.4325%" y="597" width="0.2141%" height="15" fill="rgb(231,122,1)" fg:x="882" fg:w="2"/><text x="94.6825%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.21%)</title><rect x="94.4325%" y="581" width="0.2141%" height="15" fill="rgb(245,119,9)" fg:x="882" fg:w="2"/><text x="94.6825%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.21%)</title><rect x="94.4325%" y="565" width="0.2141%" height="15" fill="rgb(241,163,25)" fg:x="882" fg:w="2"/><text x="94.6825%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.21%)</title><rect x="94.4325%" y="549" width="0.2141%" height="15" fill="rgb(217,214,3)" fg:x="882" fg:w="2"/><text x="94.6825%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.21%)</title><rect x="94.4325%" y="533" width="0.2141%" height="15" fill="rgb(240,86,28)" fg:x="882" fg:w="2"/><text x="94.6825%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.11%)</title><rect x="94.5396%" y="517" width="0.1071%" height="15" fill="rgb(215,47,9)" fg:x="883" fg:w="1"/><text x="94.7896%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.11%)</title><rect x="94.5396%" y="501" width="0.1071%" height="15" fill="rgb(252,25,45)" fg:x="883" fg:w="1"/><text x="94.7896%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;csgoproto::netmessages::csvcmsg_game_event::Key_t&gt;&gt; (1 samples, 0.11%)</title><rect x="94.6467%" y="613" width="0.1071%" height="15" fill="rgb(251,164,9)" fg:x="884" fg:w="1"/><text x="94.8967%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="94.6467%" y="597" width="0.1071%" height="15" fill="rgb(233,194,0)" fg:x="884" fg:w="1"/><text x="94.8967%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[csgoproto::netmessages::csvcmsg_game_event::Key_t]&gt; (1 samples, 0.11%)</title><rect x="94.6467%" y="581" width="0.1071%" height="15" fill="rgb(249,111,24)" fg:x="884" fg:w="1"/><text x="94.8967%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;csgoproto::netmessages::csvcmsg_game_event::Key_t&gt; (1 samples, 0.11%)</title><rect x="94.6467%" y="565" width="0.1071%" height="15" fill="rgb(250,223,3)" fg:x="884" fg:w="1"/><text x="94.8967%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1 samples, 0.11%)</title><rect x="94.6467%" y="549" width="0.1071%" height="15" fill="rgb(236,178,37)" fg:x="884" fg:w="1"/><text x="94.8967%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;csgoproto::netmessages::CSVCMsg_GameEvent&gt; (2 samples, 0.21%)</title><rect x="94.6467%" y="629" width="0.2141%" height="15" fill="rgb(241,158,50)" fg:x="884" fg:w="2"/><text x="94.8967%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;protobuf::special::SpecialFields&gt; (1 samples, 0.11%)</title><rect x="94.7537%" y="613" width="0.1071%" height="15" fill="rgb(213,121,41)" fg:x="885" fg:w="1"/><text x="95.0037%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;protobuf::unknown::UnknownFields&gt; (1 samples, 0.11%)</title><rect x="94.7537%" y="597" width="0.1071%" height="15" fill="rgb(240,92,3)" fg:x="885" fg:w="1"/><text x="95.0037%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;std::collections::hash::map::HashMap&lt;u32,protobuf::unknown::UnknownValues,core::hash::BuildHasherDefault&lt;std::collections::hash::map::DefaultHasher&gt;&gt;&gt;&gt;&gt; (1 samples, 0.11%)</title><rect x="94.7537%" y="581" width="0.1071%" height="15" fill="rgb(205,123,3)" fg:x="885" fg:w="1"/><text x="95.0037%" y="591.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.11%)</title><rect x="94.9679%" y="613" width="0.1071%" height="15" fill="rgb(205,97,47)" fg:x="887" fg:w="1"/><text x="95.2179%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.11%)</title><rect x="94.9679%" y="597" width="0.1071%" height="15" fill="rgb(247,152,14)" fg:x="887" fg:w="1"/><text x="95.2179%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="94.9679%" y="581" width="0.1071%" height="15" fill="rgb(248,195,53)" fg:x="887" fg:w="1"/><text x="95.2179%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.11%)</title><rect x="94.9679%" y="565" width="0.1071%" height="15" fill="rgb(226,201,16)" fg:x="887" fg:w="1"/><text x="95.2179%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="94.9679%" y="549" width="0.1071%" height="15" fill="rgb(205,98,0)" fg:x="887" fg:w="1"/><text x="95.2179%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.11%)</title><rect x="94.9679%" y="533" width="0.1071%" height="15" fill="rgb(214,191,48)" fg:x="887" fg:w="1"/><text x="95.2179%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="94.9679%" y="517" width="0.1071%" height="15" fill="rgb(237,112,39)" fg:x="887" fg:w="1"/><text x="95.2179%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="94.9679%" y="501" width="0.1071%" height="15" fill="rgb(247,203,27)" fg:x="887" fg:w="1"/><text x="95.2179%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="94.9679%" y="485" width="0.1071%" height="15" fill="rgb(235,124,28)" fg:x="887" fg:w="1"/><text x="95.2179%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="94.9679%" y="469" width="0.1071%" height="15" fill="rgb(208,207,46)" fg:x="887" fg:w="1"/><text x="95.2179%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="94.9679%" y="453" width="0.1071%" height="15" fill="rgb(234,176,4)" fg:x="887" fg:w="1"/><text x="95.2179%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="94.9679%" y="437" width="0.1071%" height="15" fill="rgb(230,133,28)" fg:x="887" fg:w="1"/><text x="95.2179%" y="447.50"></text></g><g><title>mi_malloc (1 samples, 0.11%)</title><rect x="94.9679%" y="421" width="0.1071%" height="15" fill="rgb(211,137,40)" fg:x="887" fg:w="1"/><text x="95.2179%" y="431.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.11%)</title><rect x="94.9679%" y="405" width="0.1071%" height="15" fill="rgb(254,35,13)" fg:x="887" fg:w="1"/><text x="95.2179%" y="415.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.11%)</title><rect x="94.9679%" y="389" width="0.1071%" height="15" fill="rgb(225,49,51)" fg:x="887" fg:w="1"/><text x="95.2179%" y="399.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.11%)</title><rect x="94.9679%" y="373" width="0.1071%" height="15" fill="rgb(251,10,15)" fg:x="887" fg:w="1"/><text x="95.2179%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.32%)</title><rect x="95.0749%" y="613" width="0.3212%" height="15" fill="rgb(228,207,15)" fg:x="888" fg:w="3"/><text x="95.3249%" y="623.50"></text></g><g><title>core::ptr::write (3 samples, 0.32%)</title><rect x="95.0749%" y="597" width="0.3212%" height="15" fill="rgb(241,99,19)" fg:x="888" fg:w="3"/><text x="95.3249%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="95.1820%" y="581" width="0.2141%" height="15" fill="rgb(207,104,49)" fg:x="889" fg:w="2"/><text x="95.4320%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="95.1820%" y="565" width="0.2141%" height="15" fill="rgb(234,99,18)" fg:x="889" fg:w="2"/><text x="95.4320%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="95.1820%" y="549" width="0.2141%" height="15" fill="rgb(213,191,49)" fg:x="889" fg:w="2"/><text x="95.4320%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="95.1820%" y="533" width="0.2141%" height="15" fill="rgb(210,226,19)" fg:x="889" fg:w="2"/><text x="95.4320%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="95.1820%" y="517" width="0.2141%" height="15" fill="rgb(229,97,18)" fg:x="889" fg:w="2"/><text x="95.4320%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="95.1820%" y="501" width="0.2141%" height="15" fill="rgb(211,167,15)" fg:x="889" fg:w="2"/><text x="95.4320%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="95.1820%" y="485" width="0.2141%" height="15" fill="rgb(210,169,34)" fg:x="889" fg:w="2"/><text x="95.4320%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="95.1820%" y="469" width="0.2141%" height="15" fill="rgb(241,121,31)" fg:x="889" fg:w="2"/><text x="95.4320%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="95.1820%" y="453" width="0.2141%" height="15" fill="rgb(232,40,11)" fg:x="889" fg:w="2"/><text x="95.4320%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.2891%" y="437" width="0.1071%" height="15" fill="rgb(205,86,26)" fg:x="890" fg:w="1"/><text x="95.5391%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.2891%" y="421" width="0.1071%" height="15" fill="rgb(231,126,28)" fg:x="890" fg:w="1"/><text x="95.5391%" y="431.50"></text></g><g><title>demoparser::parsing::demo_parsing::game_events::gen_name_val_pairs (6 samples, 0.64%)</title><rect x="94.8608%" y="629" width="0.6424%" height="15" fill="rgb(219,221,18)" fg:x="886" fg:w="6"/><text x="95.1108%" y="639.50"></text></g><g><title>demoparser::parsing::demo_parsing::game_events::parse_key (1 samples, 0.11%)</title><rect x="95.3961%" y="613" width="0.1071%" height="15" fill="rgb(211,40,0)" fg:x="891" fg:w="1"/><text x="95.6461%" y="623.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.11%)</title><rect x="95.5032%" y="373" width="0.1071%" height="15" fill="rgb(239,85,43)" fg:x="892" fg:w="1"/><text x="95.7532%" y="383.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.11%)</title><rect x="95.5032%" y="357" width="0.1071%" height="15" fill="rgb(231,55,21)" fg:x="892" fg:w="1"/><text x="95.7532%" y="367.50"></text></g><g><title>mi_page_free_list_extend (1 samples, 0.11%)</title><rect x="95.5032%" y="341" width="0.1071%" height="15" fill="rgb(225,184,43)" fg:x="892" fg:w="1"/><text x="95.7532%" y="351.50"></text></g><g><title>mi_block_set_next (1 samples, 0.11%)</title><rect x="95.5032%" y="325" width="0.1071%" height="15" fill="rgb(251,158,41)" fg:x="892" fg:w="1"/><text x="95.7532%" y="335.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.11%)</title><rect x="95.5032%" y="309" width="0.1071%" height="15" fill="rgb(234,159,37)" fg:x="892" fg:w="1"/><text x="95.7532%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.5032%" y="293" width="0.1071%" height="15" fill="rgb(216,204,22)" fg:x="892" fg:w="1"/><text x="95.7532%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.5032%" y="277" width="0.1071%" height="15" fill="rgb(214,17,3)" fg:x="892" fg:w="1"/><text x="95.7532%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.5032%" y="261" width="0.1071%" height="15" fill="rgb(212,111,17)" fg:x="892" fg:w="1"/><text x="95.7532%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.5032%" y="245" width="0.1071%" height="15" fill="rgb(221,157,24)" fg:x="892" fg:w="1"/><text x="95.7532%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.5032%" y="229" width="0.1071%" height="15" fill="rgb(252,16,13)" fg:x="892" fg:w="1"/><text x="95.7532%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.5032%" y="213" width="0.1071%" height="15" fill="rgb(221,62,2)" fg:x="892" fg:w="1"/><text x="95.7532%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.5032%" y="197" width="0.1071%" height="15" fill="rgb(247,87,22)" fg:x="892" fg:w="1"/><text x="95.7532%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.5032%" y="181" width="0.1071%" height="15" fill="rgb(215,73,9)" fg:x="892" fg:w="1"/><text x="95.7532%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.5032%" y="165" width="0.1071%" height="15" fill="rgb(207,175,33)" fg:x="892" fg:w="1"/><text x="95.7532%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.21%)</title><rect x="95.5032%" y="565" width="0.2141%" height="15" fill="rgb(243,129,54)" fg:x="892" fg:w="2"/><text x="95.7532%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.21%)</title><rect x="95.5032%" y="549" width="0.2141%" height="15" fill="rgb(227,119,45)" fg:x="892" fg:w="2"/><text x="95.7532%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.21%)</title><rect x="95.5032%" y="533" width="0.2141%" height="15" fill="rgb(205,109,36)" fg:x="892" fg:w="2"/><text x="95.7532%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.21%)</title><rect x="95.5032%" y="517" width="0.2141%" height="15" fill="rgb(205,6,39)" fg:x="892" fg:w="2"/><text x="95.7532%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.21%)</title><rect x="95.5032%" y="501" width="0.2141%" height="15" fill="rgb(221,32,16)" fg:x="892" fg:w="2"/><text x="95.7532%" y="511.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.21%)</title><rect x="95.5032%" y="485" width="0.2141%" height="15" fill="rgb(228,144,50)" fg:x="892" fg:w="2"/><text x="95.7532%" y="495.50"></text></g><g><title>_mi_heap_realloc_zero (2 samples, 0.21%)</title><rect x="95.5032%" y="469" width="0.2141%" height="15" fill="rgb(229,201,53)" fg:x="892" fg:w="2"/><text x="95.7532%" y="479.50"></text></g><g><title>mi_heap_malloc (2 samples, 0.21%)</title><rect x="95.5032%" y="453" width="0.2141%" height="15" fill="rgb(249,153,27)" fg:x="892" fg:w="2"/><text x="95.7532%" y="463.50"></text></g><g><title>_mi_malloc_generic (2 samples, 0.21%)</title><rect x="95.5032%" y="437" width="0.2141%" height="15" fill="rgb(227,106,25)" fg:x="892" fg:w="2"/><text x="95.7532%" y="447.50"></text></g><g><title>mi_find_page (2 samples, 0.21%)</title><rect x="95.5032%" y="421" width="0.2141%" height="15" fill="rgb(230,65,29)" fg:x="892" fg:w="2"/><text x="95.7532%" y="431.50"></text></g><g><title>mi_find_free_page (2 samples, 0.21%)</title><rect x="95.5032%" y="405" width="0.2141%" height="15" fill="rgb(221,57,46)" fg:x="892" fg:w="2"/><text x="95.7532%" y="415.50"></text></g><g><title>mi_page_queue_find_free_ex (2 samples, 0.21%)</title><rect x="95.5032%" y="389" width="0.2141%" height="15" fill="rgb(229,161,17)" fg:x="892" fg:w="2"/><text x="95.7532%" y="399.50"></text></g><g><title>mi_page_fresh (1 samples, 0.11%)</title><rect x="95.6103%" y="373" width="0.1071%" height="15" fill="rgb(222,213,11)" fg:x="893" fg:w="1"/><text x="95.8603%" y="383.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.11%)</title><rect x="95.6103%" y="357" width="0.1071%" height="15" fill="rgb(235,35,13)" fg:x="893" fg:w="1"/><text x="95.8603%" y="367.50"></text></g><g><title>mi_page_init (1 samples, 0.11%)</title><rect x="95.6103%" y="341" width="0.1071%" height="15" fill="rgb(233,158,34)" fg:x="893" fg:w="1"/><text x="95.8603%" y="351.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.11%)</title><rect x="95.6103%" y="325" width="0.1071%" height="15" fill="rgb(215,151,48)" fg:x="893" fg:w="1"/><text x="95.8603%" y="335.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.11%)</title><rect x="95.6103%" y="309" width="0.1071%" height="15" fill="rgb(229,84,14)" fg:x="893" fg:w="1"/><text x="95.8603%" y="319.50"></text></g><g><title>mi_page_free_list_extend (1 samples, 0.11%)</title><rect x="95.6103%" y="293" width="0.1071%" height="15" fill="rgb(229,68,14)" fg:x="893" fg:w="1"/><text x="95.8603%" y="303.50"></text></g><g><title>mi_block_set_next (1 samples, 0.11%)</title><rect x="95.6103%" y="277" width="0.1071%" height="15" fill="rgb(243,106,26)" fg:x="893" fg:w="1"/><text x="95.8603%" y="287.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.11%)</title><rect x="95.6103%" y="261" width="0.1071%" height="15" fill="rgb(206,45,38)" fg:x="893" fg:w="1"/><text x="95.8603%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.6103%" y="245" width="0.1071%" height="15" fill="rgb(226,6,15)" fg:x="893" fg:w="1"/><text x="95.8603%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.6103%" y="229" width="0.1071%" height="15" fill="rgb(232,22,54)" fg:x="893" fg:w="1"/><text x="95.8603%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.6103%" y="213" width="0.1071%" height="15" fill="rgb(229,222,32)" fg:x="893" fg:w="1"/><text x="95.8603%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.6103%" y="197" width="0.1071%" height="15" fill="rgb(228,62,29)" fg:x="893" fg:w="1"/><text x="95.8603%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.6103%" y="181" width="0.1071%" height="15" fill="rgb(251,103,34)" fg:x="893" fg:w="1"/><text x="95.8603%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.6103%" y="165" width="0.1071%" height="15" fill="rgb(233,12,30)" fg:x="893" fg:w="1"/><text x="95.8603%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.6103%" y="149" width="0.1071%" height="15" fill="rgb(238,52,0)" fg:x="893" fg:w="1"/><text x="95.8603%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.6103%" y="133" width="0.1071%" height="15" fill="rgb(223,98,5)" fg:x="893" fg:w="1"/><text x="95.8603%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.6103%" y="117" width="0.1071%" height="15" fill="rgb(228,75,37)" fg:x="893" fg:w="1"/><text x="95.8603%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.6103%" y="101" width="0.1071%" height="15" fill="rgb(205,115,49)" fg:x="893" fg:w="1"/><text x="95.8603%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.6103%" y="85" width="0.1071%" height="15" fill="rgb(250,154,43)" fg:x="893" fg:w="1"/><text x="95.8603%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.6103%" y="69" width="0.1071%" height="15" fill="rgb(226,43,29)" fg:x="893" fg:w="1"/><text x="95.8603%" y="79.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.43%)</title><rect x="95.5032%" y="581" width="0.4283%" height="15" fill="rgb(249,228,39)" fg:x="892" fg:w="4"/><text x="95.7532%" y="591.50"></text></g><g><title>core::ptr::write (2 samples, 0.21%)</title><rect x="95.7173%" y="565" width="0.2141%" height="15" fill="rgb(216,79,43)" fg:x="894" fg:w="2"/><text x="95.9673%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="95.7173%" y="549" width="0.2141%" height="15" fill="rgb(228,95,12)" fg:x="894" fg:w="2"/><text x="95.9673%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="95.7173%" y="533" width="0.2141%" height="15" fill="rgb(249,221,15)" fg:x="894" fg:w="2"/><text x="95.9673%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="95.7173%" y="517" width="0.2141%" height="15" fill="rgb(233,34,13)" fg:x="894" fg:w="2"/><text x="95.9673%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="95.7173%" y="501" width="0.2141%" height="15" fill="rgb(214,103,39)" fg:x="894" fg:w="2"/><text x="95.9673%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="95.7173%" y="485" width="0.2141%" height="15" fill="rgb(251,126,39)" fg:x="894" fg:w="2"/><text x="95.9673%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="95.7173%" y="469" width="0.2141%" height="15" fill="rgb(214,216,36)" fg:x="894" fg:w="2"/><text x="95.9673%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="95.7173%" y="453" width="0.2141%" height="15" fill="rgb(220,221,8)" fg:x="894" fg:w="2"/><text x="95.9673%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="95.7173%" y="437" width="0.2141%" height="15" fill="rgb(240,216,3)" fg:x="894" fg:w="2"/><text x="95.9673%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="95.7173%" y="421" width="0.2141%" height="15" fill="rgb(232,218,17)" fg:x="894" fg:w="2"/><text x="95.9673%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.8244%" y="405" width="0.1071%" height="15" fill="rgb(229,163,45)" fg:x="895" fg:w="1"/><text x="96.0744%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.8244%" y="389" width="0.1071%" height="15" fill="rgb(231,110,42)" fg:x="895" fg:w="1"/><text x="96.0744%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.8244%" y="373" width="0.1071%" height="15" fill="rgb(208,170,48)" fg:x="895" fg:w="1"/><text x="96.0744%" y="383.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::TryFrom&lt;i64&gt; for i32&gt;::try_from (1 samples, 0.11%)</title><rect x="96.0385%" y="517" width="0.1071%" height="15" fill="rgb(239,116,25)" fg:x="897" fg:w="1"/><text x="96.2885%" y="527.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int32 (2 samples, 0.21%)</title><rect x="96.0385%" y="533" width="0.2141%" height="15" fill="rgb(219,200,50)" fg:x="897" fg:w="2"/><text x="96.2885%" y="543.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int64 (1 samples, 0.11%)</title><rect x="96.1456%" y="517" width="0.1071%" height="15" fill="rgb(245,200,0)" fg:x="898" fg:w="1"/><text x="96.3956%" y="527.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (1 samples, 0.11%)</title><rect x="96.1456%" y="501" width="0.1071%" height="15" fill="rgb(245,119,33)" fg:x="898" fg:w="1"/><text x="96.3956%" y="511.50"></text></g><g><title>protobuf::varint::decode::decode_varint64 (1 samples, 0.11%)</title><rect x="96.1456%" y="485" width="0.1071%" height="15" fill="rgb(231,125,12)" fg:x="898" fg:w="1"/><text x="96.3956%" y="495.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (1 samples, 0.11%)</title><rect x="96.1456%" y="469" width="0.1071%" height="15" fill="rgb(216,96,41)" fg:x="898" fg:w="1"/><text x="96.3956%" y="479.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (3 samples, 0.32%)</title><rect x="96.2527%" y="533" width="0.3212%" height="15" fill="rgb(248,43,45)" fg:x="899" fg:w="3"/><text x="96.5027%" y="543.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (3 samples, 0.32%)</title><rect x="96.2527%" y="517" width="0.3212%" height="15" fill="rgb(217,222,7)" fg:x="899" fg:w="3"/><text x="96.5027%" y="527.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::eof (2 samples, 0.21%)</title><rect x="96.3597%" y="501" width="0.2141%" height="15" fill="rgb(233,28,6)" fg:x="900" fg:w="2"/><text x="96.6097%" y="511.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::eof (2 samples, 0.21%)</title><rect x="96.3597%" y="485" width="0.2141%" height="15" fill="rgb(231,218,15)" fg:x="900" fg:w="2"/><text x="96.6097%" y="495.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::fill_buf (2 samples, 0.21%)</title><rect x="96.3597%" y="469" width="0.2141%" height="15" fill="rgb(226,171,48)" fg:x="900" fg:w="2"/><text x="96.6097%" y="479.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::pos (2 samples, 0.21%)</title><rect x="96.3597%" y="453" width="0.2141%" height="15" fill="rgb(235,201,9)" fg:x="900" fg:w="2"/><text x="96.6097%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (1 samples, 0.11%)</title><rect x="96.5739%" y="453" width="0.1071%" height="15" fill="rgb(217,80,15)" fg:x="902" fg:w="1"/><text x="96.8239%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (1 samples, 0.11%)</title><rect x="96.5739%" y="437" width="0.1071%" height="15" fill="rgb(219,152,8)" fg:x="902" fg:w="1"/><text x="96.8239%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (1 samples, 0.11%)</title><rect x="96.5739%" y="421" width="0.1071%" height="15" fill="rgb(243,107,38)" fg:x="902" fg:w="1"/><text x="96.8239%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (1 samples, 0.11%)</title><rect x="96.5739%" y="405" width="0.1071%" height="15" fill="rgb(231,17,5)" fg:x="902" fg:w="1"/><text x="96.8239%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.11%)</title><rect x="96.5739%" y="389" width="0.1071%" height="15" fill="rgb(209,25,54)" fg:x="902" fg:w="1"/><text x="96.8239%" y="399.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_game_event::Key_t as protobuf::message::Message&gt;::merge_from (8 samples, 0.86%)</title><rect x="95.9315%" y="549" width="0.8565%" height="15" fill="rgb(219,0,2)" fg:x="896" fg:w="8"/><text x="96.1815%" y="559.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string (2 samples, 0.21%)</title><rect x="96.5739%" y="533" width="0.2141%" height="15" fill="rgb(246,9,5)" fg:x="902" fg:w="2"/><text x="96.8239%" y="543.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string_into (2 samples, 0.21%)</title><rect x="96.5739%" y="517" width="0.2141%" height="15" fill="rgb(226,159,4)" fg:x="902" fg:w="2"/><text x="96.8239%" y="527.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (2 samples, 0.21%)</title><rect x="96.5739%" y="501" width="0.2141%" height="15" fill="rgb(219,175,34)" fg:x="902" fg:w="2"/><text x="96.8239%" y="511.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (2 samples, 0.21%)</title><rect x="96.5739%" y="485" width="0.2141%" height="15" fill="rgb(236,10,46)" fg:x="902" fg:w="2"/><text x="96.8239%" y="495.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (2 samples, 0.21%)</title><rect x="96.5739%" y="469" width="0.2141%" height="15" fill="rgb(240,211,16)" fg:x="902" fg:w="2"/><text x="96.8239%" y="479.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact (1 samples, 0.11%)</title><rect x="96.6809%" y="453" width="0.1071%" height="15" fill="rgb(205,3,43)" fg:x="903" fg:w="1"/><text x="96.9309%" y="463.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::remaining_in_buf_len (1 samples, 0.11%)</title><rect x="96.6809%" y="437" width="0.1071%" height="15" fill="rgb(245,7,22)" fg:x="903" fg:w="1"/><text x="96.9309%" y="447.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::remaining_in_buf (1 samples, 0.11%)</title><rect x="96.6809%" y="421" width="0.1071%" height="15" fill="rgb(239,132,32)" fg:x="903" fg:w="1"/><text x="96.9309%" y="431.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::remaining_in_buf (1 samples, 0.11%)</title><rect x="96.6809%" y="405" width="0.1071%" height="15" fill="rgb(228,202,34)" fg:x="903" fg:w="1"/><text x="96.9309%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.11%)</title><rect x="96.6809%" y="389" width="0.1071%" height="15" fill="rgb(254,200,22)" fg:x="903" fg:w="1"/><text x="96.9309%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.11%)</title><rect x="96.6809%" y="373" width="0.1071%" height="15" fill="rgb(219,10,39)" fg:x="903" fg:w="1"/><text x="96.9309%" y="383.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::pop_limit (1 samples, 0.11%)</title><rect x="96.7880%" y="549" width="0.1071%" height="15" fill="rgb(226,210,39)" fg:x="904" fg:w="1"/><text x="97.0380%" y="559.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::pop_limit (1 samples, 0.11%)</title><rect x="96.7880%" y="533" width="0.1071%" height="15" fill="rgb(208,219,16)" fg:x="904" fg:w="1"/><text x="97.0380%" y="543.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::update_limit_within_buf (1 samples, 0.11%)</title><rect x="96.7880%" y="517" width="0.1071%" height="15" fill="rgb(216,158,51)" fg:x="904" fg:w="1"/><text x="97.0380%" y="527.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::update_limit (1 samples, 0.11%)</title><rect x="96.7880%" y="501" width="0.1071%" height="15" fill="rgb(233,14,44)" fg:x="904" fg:w="1"/><text x="97.0380%" y="511.50"></text></g><g><title>core::cmp::min (1 samples, 0.11%)</title><rect x="96.7880%" y="485" width="0.1071%" height="15" fill="rgb(237,97,39)" fg:x="904" fg:w="1"/><text x="97.0380%" y="495.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.11%)</title><rect x="96.7880%" y="469" width="0.1071%" height="15" fill="rgb(218,198,43)" fg:x="904" fg:w="1"/><text x="97.0380%" y="479.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_message (10 samples, 1.07%)</title><rect x="95.9315%" y="581" width="1.0707%" height="15" fill="rgb(231,104,20)" fg:x="896" fg:w="10"/><text x="96.1815%" y="591.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::merge_message (10 samples, 1.07%)</title><rect x="95.9315%" y="565" width="1.0707%" height="15" fill="rgb(254,36,13)" fg:x="896" fg:w="10"/><text x="96.1815%" y="575.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (1 samples, 0.11%)</title><rect x="96.8951%" y="549" width="0.1071%" height="15" fill="rgb(248,14,50)" fg:x="905" fg:w="1"/><text x="97.1451%" y="559.50"></text></g><g><title>demoparser::parsing::demo_parsing::game_events::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_game_events (26 samples, 2.78%)</title><rect x="94.4325%" y="645" width="2.7837%" height="15" fill="rgb(217,107,29)" fg:x="882" fg:w="26"/><text x="94.6825%" y="655.50">de..</text></g><g><title>protobuf::message::Message::parse_from_bytes (16 samples, 1.71%)</title><rect x="95.5032%" y="629" width="1.7131%" height="15" fill="rgb(251,169,33)" fg:x="892" fg:w="16"/><text x="95.7532%" y="639.50"></text></g><g><title>protobuf::message::Message::parse_from (16 samples, 1.71%)</title><rect x="95.5032%" y="613" width="1.7131%" height="15" fill="rgb(217,108,32)" fg:x="892" fg:w="16"/><text x="95.7532%" y="623.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_GameEvent as protobuf::message::Message&gt;::merge_from (16 samples, 1.71%)</title><rect x="95.5032%" y="597" width="1.7131%" height="15" fill="rgb(219,66,42)" fg:x="892" fg:w="16"/><text x="95.7532%" y="607.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (2 samples, 0.21%)</title><rect x="97.0021%" y="581" width="0.2141%" height="15" fill="rgb(206,180,7)" fg:x="906" fg:w="2"/><text x="97.2521%" y="591.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (2 samples, 0.21%)</title><rect x="97.0021%" y="565" width="0.2141%" height="15" fill="rgb(208,226,31)" fg:x="906" fg:w="2"/><text x="97.2521%" y="575.50"></text></g><g><title>protobuf::varint::decode::decode_varint32 (2 samples, 0.21%)</title><rect x="97.0021%" y="549" width="0.2141%" height="15" fill="rgb(218,26,49)" fg:x="906" fg:w="2"/><text x="97.2521%" y="559.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (2 samples, 0.21%)</title><rect x="97.0021%" y="533" width="0.2141%" height="15" fill="rgb(233,197,48)" fg:x="906" fg:w="2"/><text x="97.2521%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.11%)</title><rect x="97.2163%" y="629" width="0.1071%" height="15" fill="rgb(252,181,51)" fg:x="908" fg:w="1"/><text x="97.4663%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.11%)</title><rect x="97.2163%" y="613" width="0.1071%" height="15" fill="rgb(253,90,19)" fg:x="908" fg:w="1"/><text x="97.4663%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.11%)</title><rect x="97.2163%" y="597" width="0.1071%" height="15" fill="rgb(215,171,30)" fg:x="908" fg:w="1"/><text x="97.4663%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.11%)</title><rect x="97.2163%" y="581" width="0.1071%" height="15" fill="rgb(214,222,9)" fg:x="908" fg:w="1"/><text x="97.4663%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.11%)</title><rect x="97.2163%" y="565" width="0.1071%" height="15" fill="rgb(223,3,22)" fg:x="908" fg:w="1"/><text x="97.4663%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.11%)</title><rect x="97.2163%" y="549" width="0.1071%" height="15" fill="rgb(225,196,46)" fg:x="908" fg:w="1"/><text x="97.4663%" y="559.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.11%)</title><rect x="97.2163%" y="533" width="0.1071%" height="15" fill="rgb(209,110,37)" fg:x="908" fg:w="1"/><text x="97.4663%" y="543.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.11%)</title><rect x="97.2163%" y="517" width="0.1071%" height="15" fill="rgb(249,89,12)" fg:x="908" fg:w="1"/><text x="97.4663%" y="527.50"></text></g><g><title>_mi_memcpy_aligned (1 samples, 0.11%)</title><rect x="97.2163%" y="501" width="0.1071%" height="15" fill="rgb(226,27,33)" fg:x="908" fg:w="1"/><text x="97.4663%" y="511.50"></text></g><g><title>_mi_memcpy (1 samples, 0.11%)</title><rect x="97.2163%" y="485" width="0.1071%" height="15" fill="rgb(213,82,22)" fg:x="908" fg:w="1"/><text x="97.4663%" y="495.50"></text></g><g><title>memcpy (1 samples, 0.11%)</title><rect x="97.2163%" y="469" width="0.1071%" height="15" fill="rgb(248,140,0)" fg:x="908" fg:w="1"/><text x="97.4663%" y="479.50"></text></g><g><title>[libc.so.6] (1 samples, 0.11%)</title><rect x="97.2163%" y="453" width="0.1071%" height="15" fill="rgb(228,106,3)" fg:x="908" fg:w="1"/><text x="97.4663%" y="463.50"></text></g><g><title>demoparser::parsing::demo_parsing::stringtables::&lt;impl demoparser::parsing::parser::Parser&gt;::create_string_table (2 samples, 0.21%)</title><rect x="97.2163%" y="645" width="0.2141%" height="15" fill="rgb(209,23,37)" fg:x="908" fg:w="2"/><text x="97.4663%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::stringtables::StringTable&gt; (1 samples, 0.11%)</title><rect x="97.3233%" y="629" width="0.1071%" height="15" fill="rgb(241,93,50)" fg:x="909" fg:w="1"/><text x="97.5733%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::demo_parsing::stringtables::StField&gt;&gt; (1 samples, 0.11%)</title><rect x="97.3233%" y="613" width="0.1071%" height="15" fill="rgb(253,46,43)" fg:x="909" fg:w="1"/><text x="97.5733%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="97.3233%" y="597" width="0.1071%" height="15" fill="rgb(226,206,43)" fg:x="909" fg:w="1"/><text x="97.5733%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::demo_parsing::stringtables::StField]&gt; (1 samples, 0.11%)</title><rect x="97.3233%" y="581" width="0.1071%" height="15" fill="rgb(217,54,7)" fg:x="909" fg:w="1"/><text x="97.5733%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::stringtables::StField&gt; (1 samples, 0.11%)</title><rect x="97.3233%" y="565" width="0.1071%" height="15" fill="rgb(223,5,52)" fg:x="909" fg:w="1"/><text x="97.5733%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.11%)</title><rect x="97.3233%" y="549" width="0.1071%" height="15" fill="rgb(206,52,46)" fg:x="909" fg:w="1"/><text x="97.5733%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.11%)</title><rect x="97.3233%" y="533" width="0.1071%" height="15" fill="rgb(253,136,11)" fg:x="909" fg:w="1"/><text x="97.5733%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.11%)</title><rect x="97.3233%" y="517" width="0.1071%" height="15" fill="rgb(208,106,33)" fg:x="909" fg:w="1"/><text x="97.5733%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="97.3233%" y="501" width="0.1071%" height="15" fill="rgb(206,54,4)" fg:x="909" fg:w="1"/><text x="97.5733%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.11%)</title><rect x="97.3233%" y="485" width="0.1071%" height="15" fill="rgb(213,3,15)" fg:x="909" fg:w="1"/><text x="97.5733%" y="495.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.11%)</title><rect x="97.4304%" y="629" width="0.1071%" height="15" fill="rgb(252,211,39)" fg:x="910" fg:w="1"/><text x="97.6804%" y="639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.11%)</title><rect x="97.4304%" y="613" width="0.1071%" height="15" fill="rgb(223,6,36)" fg:x="910" fg:w="1"/><text x="97.6804%" y="623.50"></text></g><g><title>csgoproto::netmessages::CCLCMsg_Move::num_backup_commands (1 samples, 0.11%)</title><rect x="97.5375%" y="629" width="0.1071%" height="15" fill="rgb(252,169,45)" fg:x="911" fg:w="1"/><text x="97.7875%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.11%)</title><rect x="97.5375%" y="613" width="0.1071%" height="15" fill="rgb(212,48,26)" fg:x="911" fg:w="1"/><text x="97.7875%" y="623.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes (5 samples, 0.54%)</title><rect x="97.7516%" y="581" width="0.5353%" height="15" fill="rgb(251,102,48)" fg:x="913" fg:w="5"/><text x="98.0016%" y="591.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (4 samples, 0.43%)</title><rect x="97.8587%" y="565" width="0.4283%" height="15" fill="rgb(243,208,16)" fg:x="914" fg:w="4"/><text x="98.1087%" y="575.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (4 samples, 0.43%)</title><rect x="97.8587%" y="549" width="0.4283%" height="15" fill="rgb(219,96,24)" fg:x="914" fg:w="4"/><text x="98.1087%" y="559.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (4 samples, 0.43%)</title><rect x="97.8587%" y="533" width="0.4283%" height="15" fill="rgb(219,33,29)" fg:x="914" fg:w="4"/><text x="98.1087%" y="543.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact (4 samples, 0.43%)</title><rect x="97.8587%" y="517" width="0.4283%" height="15" fill="rgb(223,176,5)" fg:x="914" fg:w="4"/><text x="98.1087%" y="527.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::read_bytes (4 samples, 0.43%)</title><rect x="97.8587%" y="501" width="0.4283%" height="15" fill="rgb(228,140,14)" fg:x="914" fg:w="4"/><text x="98.1087%" y="511.50"></text></g><g><title>protobuf::misc::maybe_uninit_write_slice (4 samples, 0.43%)</title><rect x="97.8587%" y="485" width="0.4283%" height="15" fill="rgb(217,179,31)" fg:x="914" fg:w="4"/><text x="98.1087%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (4 samples, 0.43%)</title><rect x="97.8587%" y="469" width="0.4283%" height="15" fill="rgb(230,9,30)" fg:x="914" fg:w="4"/><text x="98.1087%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.43%)</title><rect x="97.8587%" y="453" width="0.4283%" height="15" fill="rgb(230,136,20)" fg:x="914" fg:w="4"/><text x="98.1087%" y="463.50"></text></g><g><title>[libc.so.6] (4 samples, 0.43%)</title><rect x="97.8587%" y="437" width="0.4283%" height="15" fill="rgb(215,210,22)" fg:x="914" fg:w="4"/><text x="98.1087%" y="447.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::TryFrom&lt;i64&gt; for i32&gt;::try_from (1 samples, 0.11%)</title><rect x="98.2869%" y="565" width="0.1071%" height="15" fill="rgb(218,43,5)" fg:x="918" fg:w="1"/><text x="98.5369%" y="575.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int32 (2 samples, 0.21%)</title><rect x="98.2869%" y="581" width="0.2141%" height="15" fill="rgb(216,11,5)" fg:x="918" fg:w="2"/><text x="98.5369%" y="591.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int64 (1 samples, 0.11%)</title><rect x="98.3940%" y="565" width="0.1071%" height="15" fill="rgb(209,82,29)" fg:x="919" fg:w="1"/><text x="98.6440%" y="575.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (1 samples, 0.11%)</title><rect x="98.3940%" y="549" width="0.1071%" height="15" fill="rgb(244,115,12)" fg:x="919" fg:w="1"/><text x="98.6440%" y="559.50"></text></g><g><title>protobuf::varint::decode::decode_varint64 (1 samples, 0.11%)</title><rect x="98.3940%" y="533" width="0.1071%" height="15" fill="rgb(222,82,18)" fg:x="919" fg:w="1"/><text x="98.6440%" y="543.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (1 samples, 0.11%)</title><rect x="98.3940%" y="517" width="0.1071%" height="15" fill="rgb(249,227,8)" fg:x="919" fg:w="1"/><text x="98.6440%" y="527.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_blueprints (319 samples, 34.15%)</title><rect x="64.4540%" y="837" width="34.1542%" height="15" fill="rgb(253,141,45)" fg:x="602" fg:w="319"/><text x="64.7040%" y="847.50">demoparser::parsing::parser::Parser::parse_blueprints</text></g><g><title>core::iter::traits::iterator::Iterator::collect (319 samples, 34.15%)</title><rect x="64.4540%" y="821" width="34.1542%" height="15" fill="rgb(234,184,4)" fg:x="602" fg:w="319"/><text x="64.7040%" y="831.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (319 samples, 34.15%)</title><rect x="64.4540%" y="805" width="34.1542%" height="15" fill="rgb(218,194,23)" fg:x="602" fg:w="319"/><text x="64.7040%" y="815.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::Fro..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (319 samples, 34.15%)</title><rect x="64.4540%" y="789" width="34.1542%" height="15" fill="rgb(235,66,41)" fg:x="602" fg:w="319"/><text x="64.7040%" y="799.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::Spec..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (319 samples, 34.15%)</title><rect x="64.4540%" y="773" width="34.1542%" height="15" fill="rgb(245,217,1)" fg:x="602" fg:w="319"/><text x="64.7040%" y="783.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_neste..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (319 samples, 34.15%)</title><rect x="64.4540%" y="757" width="34.1542%" height="15" fill="rgb(229,91,1)" fg:x="602" fg:w="319"/><text x="64.7040%" y="767.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecE..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (319 samples, 34.15%)</title><rect x="64.4540%" y="741" width="34.1542%" height="15" fill="rgb(207,101,30)" fg:x="602" fg:w="319"/><text x="64.7040%" y="751.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (319 samples, 34.15%)</title><rect x="64.4540%" y="725" width="34.1542%" height="15" fill="rgb(223,82,49)" fg:x="602" fg:w="319"/><text x="64.7040%" y="735.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::tra..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (319 samples, 34.15%)</title><rect x="64.4540%" y="709" width="34.1542%" height="15" fill="rgb(218,167,17)" fg:x="602" fg:w="319"/><text x="64.7040%" y="719.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (319 samples, 34.15%)</title><rect x="64.4540%" y="693" width="34.1542%" height="15" fill="rgb(208,103,14)" fg:x="602" fg:w="319"/><text x="64.7040%" y="703.50">core::iter::adapters::map::map_fold::{{closure}}</text></g><g><title>demoparser::parsing::parser::Parser::parse_blueprints::{{closure}} (319 samples, 34.15%)</title><rect x="64.4540%" y="677" width="34.1542%" height="15" fill="rgb(238,20,8)" fg:x="602" fg:w="319"/><text x="64.7040%" y="687.50">demoparser::parsing::parser::Parser::parse_blueprints::..</text></g><g><title>demoparser::parsing::parser::Parser::msg_handler (319 samples, 34.15%)</title><rect x="64.4540%" y="661" width="34.1542%" height="15" fill="rgb(218,80,54)" fg:x="602" fg:w="319"/><text x="64.7040%" y="671.50">demoparser::parsing::parser::Parser::msg_handler</text></g><g><title>demoparser::parsing::demo_parsing::stringtables::&lt;impl demoparser::parsing::parser::Parser&gt;::update_string_table_msg (11 samples, 1.18%)</title><rect x="97.4304%" y="645" width="1.1777%" height="15" fill="rgb(240,144,17)" fg:x="910" fg:w="11"/><text x="97.6804%" y="655.50"></text></g><g><title>protobuf::message::Message::parse_from_bytes (9 samples, 0.96%)</title><rect x="97.6445%" y="629" width="0.9636%" height="15" fill="rgb(245,27,50)" fg:x="912" fg:w="9"/><text x="97.8945%" y="639.50"></text></g><g><title>protobuf::message::Message::parse_from (8 samples, 0.86%)</title><rect x="97.7516%" y="613" width="0.8565%" height="15" fill="rgb(251,51,7)" fg:x="913" fg:w="8"/><text x="98.0016%" y="623.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_EntityMsg as protobuf::message::Message&gt;::merge_from (8 samples, 0.86%)</title><rect x="97.7516%" y="597" width="0.8565%" height="15" fill="rgb(245,217,29)" fg:x="913" fg:w="8"/><text x="98.0016%" y="607.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (1 samples, 0.11%)</title><rect x="98.5011%" y="581" width="0.1071%" height="15" fill="rgb(221,176,29)" fg:x="920" fg:w="1"/><text x="98.7511%" y="591.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bytes::ByteReader::read_frame (2 samples, 0.21%)</title><rect x="98.6081%" y="821" width="0.2141%" height="15" fill="rgb(212,180,24)" fg:x="921" fg:w="2"/><text x="98.8581%" y="831.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bytes::ByteReader::read_byte (2 samples, 0.21%)</title><rect x="98.6081%" y="805" width="0.2141%" height="15" fill="rgb(254,24,2)" fg:x="921" fg:w="2"/><text x="98.8581%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.21%)</title><rect x="98.8223%" y="789" width="0.2141%" height="15" fill="rgb(230,100,2)" fg:x="923" fg:w="2"/><text x="99.0723%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.21%)</title><rect x="98.8223%" y="773" width="0.2141%" height="15" fill="rgb(219,142,25)" fg:x="923" fg:w="2"/><text x="99.0723%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.21%)</title><rect x="98.8223%" y="757" width="0.2141%" height="15" fill="rgb(240,73,43)" fg:x="923" fg:w="2"/><text x="99.0723%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.21%)</title><rect x="98.8223%" y="741" width="0.2141%" height="15" fill="rgb(214,114,15)" fg:x="923" fg:w="2"/><text x="99.0723%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.21%)</title><rect x="98.8223%" y="725" width="0.2141%" height="15" fill="rgb(207,130,4)" fg:x="923" fg:w="2"/><text x="99.0723%" y="735.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.21%)</title><rect x="98.8223%" y="709" width="0.2141%" height="15" fill="rgb(221,25,40)" fg:x="923" fg:w="2"/><text x="99.0723%" y="719.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.21%)</title><rect x="98.8223%" y="693" width="0.2141%" height="15" fill="rgb(241,184,7)" fg:x="923" fg:w="2"/><text x="99.0723%" y="703.50"></text></g><g><title>_mi_heap_realloc_zero (2 samples, 0.21%)</title><rect x="98.8223%" y="677" width="0.2141%" height="15" fill="rgb(235,159,4)" fg:x="923" fg:w="2"/><text x="99.0723%" y="687.50"></text></g><g><title>_mi_memcpy_aligned (2 samples, 0.21%)</title><rect x="98.8223%" y="661" width="0.2141%" height="15" fill="rgb(214,87,48)" fg:x="923" fg:w="2"/><text x="99.0723%" y="671.50"></text></g><g><title>_mi_memcpy (2 samples, 0.21%)</title><rect x="98.8223%" y="645" width="0.2141%" height="15" fill="rgb(246,198,24)" fg:x="923" fg:w="2"/><text x="99.0723%" y="655.50"></text></g><g><title>memcpy (2 samples, 0.21%)</title><rect x="98.8223%" y="629" width="0.2141%" height="15" fill="rgb(209,66,40)" fg:x="923" fg:w="2"/><text x="99.0723%" y="639.50"></text></g><g><title>[libc.so.6] (2 samples, 0.21%)</title><rect x="98.8223%" y="613" width="0.2141%" height="15" fill="rgb(233,147,39)" fg:x="923" fg:w="2"/><text x="99.0723%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="98.9293%" y="597" width="0.1071%" height="15" fill="rgb(231,145,52)" fg:x="924" fg:w="1"/><text x="99.1793%" y="607.50"></text></g><g><title>std::panic::catch_unwind (879 samples, 94.11%)</title><rect x="5.2463%" y="1173" width="94.1113%" height="15" fill="rgb(206,20,26)" fg:x="49" fg:w="879"/><text x="5.4963%" y="1183.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (879 samples, 94.11%)</title><rect x="5.2463%" y="1157" width="94.1113%" height="15" fill="rgb(238,220,4)" fg:x="49" fg:w="879"/><text x="5.4963%" y="1167.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (879 samples, 94.11%)</title><rect x="5.2463%" y="1141" width="94.1113%" height="15" fill="rgb(252,195,42)" fg:x="49" fg:w="879"/><text x="5.4963%" y="1151.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (879 samples, 94.11%)</title><rect x="5.2463%" y="1125" width="94.1113%" height="15" fill="rgb(209,10,6)" fg:x="49" fg:w="879"/><text x="5.4963%" y="1135.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (879 samples, 94.11%)</title><rect x="5.2463%" y="1109" width="94.1113%" height="15" fill="rgb(229,3,52)" fg:x="49" fg:w="879"/><text x="5.4963%" y="1119.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (879 samples, 94.11%)</title><rect x="5.2463%" y="1093" width="94.1113%" height="15" fill="rgb(253,49,37)" fg:x="49" fg:w="879"/><text x="5.4963%" y="1103.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (879 samples, 94.11%)</title><rect x="5.2463%" y="1077" width="94.1113%" height="15" fill="rgb(240,103,49)" fg:x="49" fg:w="879"/><text x="5.4963%" y="1087.50">core::ops::function::FnOnce::call_once</text></g><g><title>demoparser::main (879 samples, 94.11%)</title><rect x="5.2463%" y="1061" width="94.1113%" height="15" fill="rgb(250,182,30)" fg:x="49" fg:w="879"/><text x="5.4963%" y="1071.50">demoparser::main</text></g><g><title>core::iter::traits::iterator::Iterator::collect (879 samples, 94.11%)</title><rect x="5.2463%" y="1045" width="94.1113%" height="15" fill="rgb(248,8,30)" fg:x="49" fg:w="879"/><text x="5.4963%" y="1055.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (879 samples, 94.11%)</title><rect x="5.2463%" y="1029" width="94.1113%" height="15" fill="rgb(237,120,30)" fg:x="49" fg:w="879"/><text x="5.4963%" y="1039.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (879 samples, 94.11%)</title><rect x="5.2463%" y="1013" width="94.1113%" height="15" fill="rgb(221,146,34)" fg:x="49" fg:w="879"/><text x="5.4963%" y="1023.50">alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (879 samples, 94.11%)</title><rect x="5.2463%" y="997" width="94.1113%" height="15" fill="rgb(242,55,13)" fg:x="49" fg:w="879"/><text x="5.4963%" y="1007.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (879 samples, 94.11%)</title><rect x="5.2463%" y="981" width="94.1113%" height="15" fill="rgb(242,112,31)" fg:x="49" fg:w="879"/><text x="5.4963%" y="991.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (879 samples, 94.11%)</title><rect x="5.2463%" y="965" width="94.1113%" height="15" fill="rgb(249,192,27)" fg:x="49" fg:w="879"/><text x="5.4963%" y="975.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (879 samples, 94.11%)</title><rect x="5.2463%" y="949" width="94.1113%" height="15" fill="rgb(208,204,44)" fg:x="49" fg:w="879"/><text x="5.4963%" y="959.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::traits::iterator::Iterator::fold (879 samples, 94.11%)</title><rect x="5.2463%" y="933" width="94.1113%" height="15" fill="rgb(208,93,54)" fg:x="49" fg:w="879"/><text x="5.4963%" y="943.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (879 samples, 94.11%)</title><rect x="5.2463%" y="917" width="94.1113%" height="15" fill="rgb(242,1,31)" fg:x="49" fg:w="879"/><text x="5.4963%" y="927.50">core::iter::adapters::map::map_fold::{{closure}}</text></g><g><title>demoparser::main::{{closure}} (879 samples, 94.11%)</title><rect x="5.2463%" y="901" width="94.1113%" height="15" fill="rgb(241,83,25)" fg:x="49" fg:w="879"/><text x="5.4963%" y="911.50">demoparser::main::{{closure}}</text></g><g><title>demoparser::parse_demo (879 samples, 94.11%)</title><rect x="5.2463%" y="885" width="94.1113%" height="15" fill="rgb(205,169,50)" fg:x="49" fg:w="879"/><text x="5.4963%" y="895.50">demoparser::parse_demo</text></g><g><title>demoparser::parsing::parser::Parser::start_parsing (877 samples, 93.90%)</title><rect x="5.4604%" y="869" width="93.8972%" height="15" fill="rgb(239,186,37)" fg:x="51" fg:w="877"/><text x="5.7104%" y="879.50">demoparser::parsing::parser::Parser::start_parsing</text></g><g><title>demoparser::parsing::create_output::&lt;impl demoparser::parsing::parser::Parser&gt;::compute_jobs_with_cache (876 samples, 93.79%)</title><rect x="5.5675%" y="853" width="93.7901%" height="15" fill="rgb(205,221,10)" fg:x="52" fg:w="876"/><text x="5.8175%" y="863.50">demoparser::parsing::create_output::&lt;impl demoparser::parsing::parser::Parser&gt;::compute_jobs_with_cache</text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (7 samples, 0.75%)</title><rect x="98.6081%" y="837" width="0.7495%" height="15" fill="rgb(218,196,15)" fg:x="921" fg:w="7"/><text x="98.8581%" y="847.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_cmd (5 samples, 0.54%)</title><rect x="98.8223%" y="821" width="0.5353%" height="15" fill="rgb(218,196,35)" fg:x="923" fg:w="5"/><text x="99.0723%" y="831.50"></text></g><g><title>demoparser::parsing::parser::Parser::messages_from_packet (5 samples, 0.54%)</title><rect x="98.8223%" y="805" width="0.5353%" height="15" fill="rgb(233,63,24)" fg:x="923" fg:w="5"/><text x="99.0723%" y="815.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bytes::ByteReader::read_varint (3 samples, 0.32%)</title><rect x="99.0364%" y="789" width="0.3212%" height="15" fill="rgb(225,8,4)" fg:x="925" fg:w="3"/><text x="99.2864%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.2505%" y="773" width="0.1071%" height="15" fill="rgb(234,105,35)" fg:x="927" fg:w="1"/><text x="99.5005%" y="783.50"></text></g><g><title>demoparser (929 samples, 99.46%)</title><rect x="0.0000%" y="1333" width="99.4647%" height="15" fill="rgb(236,21,32)" fg:x="0" fg:w="929"/><text x="0.2500%" y="1343.50">demoparser</text></g><g><title>_start (920 samples, 98.50%)</title><rect x="0.9636%" y="1317" width="98.5011%" height="15" fill="rgb(228,109,6)" fg:x="9" fg:w="920"/><text x="1.2136%" y="1327.50">_start</text></g><g><title>__libc_start_main_impl (920 samples, 98.50%)</title><rect x="0.9636%" y="1301" width="98.5011%" height="15" fill="rgb(229,215,31)" fg:x="9" fg:w="920"/><text x="1.2136%" y="1311.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (920 samples, 98.50%)</title><rect x="0.9636%" y="1285" width="98.5011%" height="15" fill="rgb(221,52,54)" fg:x="9" fg:w="920"/><text x="1.2136%" y="1295.50">__libc_start_call_main</text></g><g><title>main (880 samples, 94.22%)</title><rect x="5.2463%" y="1269" width="94.2184%" height="15" fill="rgb(252,129,43)" fg:x="49" fg:w="880"/><text x="5.4963%" y="1279.50">main</text></g><g><title>std::rt::lang_start_internal (880 samples, 94.22%)</title><rect x="5.2463%" y="1253" width="94.2184%" height="15" fill="rgb(248,183,27)" fg:x="49" fg:w="880"/><text x="5.4963%" y="1263.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (880 samples, 94.22%)</title><rect x="5.2463%" y="1237" width="94.2184%" height="15" fill="rgb(250,0,22)" fg:x="49" fg:w="880"/><text x="5.4963%" y="1247.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (880 samples, 94.22%)</title><rect x="5.2463%" y="1221" width="94.2184%" height="15" fill="rgb(213,166,10)" fg:x="49" fg:w="880"/><text x="5.4963%" y="1231.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (880 samples, 94.22%)</title><rect x="5.2463%" y="1205" width="94.2184%" height="15" fill="rgb(207,163,36)" fg:x="49" fg:w="880"/><text x="5.4963%" y="1215.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (880 samples, 94.22%)</title><rect x="5.2463%" y="1189" width="94.2184%" height="15" fill="rgb(208,122,22)" fg:x="49" fg:w="880"/><text x="5.4963%" y="1199.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::rt::init (1 samples, 0.11%)</title><rect x="99.3576%" y="1173" width="0.1071%" height="15" fill="rgb(207,104,49)" fg:x="928" fg:w="1"/><text x="99.6076%" y="1183.50"></text></g><g><title>std::sys::unix::thread::guard::init (1 samples, 0.11%)</title><rect x="99.3576%" y="1157" width="0.1071%" height="15" fill="rgb(248,211,50)" fg:x="928" fg:w="1"/><text x="99.6076%" y="1167.50"></text></g><g><title>std::sys::unix::thread::guard::get_stack_start_aligned (1 samples, 0.11%)</title><rect x="99.3576%" y="1141" width="0.1071%" height="15" fill="rgb(217,13,45)" fg:x="928" fg:w="1"/><text x="99.6076%" y="1151.50"></text></g><g><title>std::sys::unix::thread::guard::get_stack_start (1 samples, 0.11%)</title><rect x="99.3576%" y="1125" width="0.1071%" height="15" fill="rgb(211,216,49)" fg:x="928" fg:w="1"/><text x="99.6076%" y="1135.50"></text></g><g><title>__pthread_getattr_np (1 samples, 0.11%)</title><rect x="99.3576%" y="1109" width="0.1071%" height="15" fill="rgb(221,58,53)" fg:x="928" fg:w="1"/><text x="99.6076%" y="1119.50"></text></g><g><title>_IO_new_fopen (1 samples, 0.11%)</title><rect x="99.3576%" y="1093" width="0.1071%" height="15" fill="rgb(220,112,41)" fg:x="928" fg:w="1"/><text x="99.6076%" y="1103.50"></text></g><g><title>__fopen_internal (1 samples, 0.11%)</title><rect x="99.3576%" y="1077" width="0.1071%" height="15" fill="rgb(236,38,28)" fg:x="928" fg:w="1"/><text x="99.6076%" y="1087.50"></text></g><g><title>_IO_new_file_fopen (1 samples, 0.11%)</title><rect x="99.3576%" y="1061" width="0.1071%" height="15" fill="rgb(227,195,22)" fg:x="928" fg:w="1"/><text x="99.6076%" y="1071.50"></text></g><g><title>__GI__IO_file_open (1 samples, 0.11%)</title><rect x="99.3576%" y="1045" width="0.1071%" height="15" fill="rgb(214,55,33)" fg:x="928" fg:w="1"/><text x="99.6076%" y="1055.50"></text></g><g><title>__GI___open64_nocancel (1 samples, 0.11%)</title><rect x="99.3576%" y="1029" width="0.1071%" height="15" fill="rgb(248,80,13)" fg:x="928" fg:w="1"/><text x="99.6076%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3576%" y="1013" width="0.1071%" height="15" fill="rgb(238,52,6)" fg:x="928" fg:w="1"/><text x="99.6076%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3576%" y="997" width="0.1071%" height="15" fill="rgb(224,198,47)" fg:x="928" fg:w="1"/><text x="99.6076%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3576%" y="981" width="0.1071%" height="15" fill="rgb(233,171,20)" fg:x="928" fg:w="1"/><text x="99.6076%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3576%" y="965" width="0.1071%" height="15" fill="rgb(241,30,25)" fg:x="928" fg:w="1"/><text x="99.6076%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3576%" y="949" width="0.1071%" height="15" fill="rgb(207,171,38)" fg:x="928" fg:w="1"/><text x="99.6076%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3576%" y="933" width="0.1071%" height="15" fill="rgb(234,70,1)" fg:x="928" fg:w="1"/><text x="99.6076%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3576%" y="917" width="0.1071%" height="15" fill="rgb(232,178,18)" fg:x="928" fg:w="1"/><text x="99.6076%" y="927.50"></text></g><g><title>all (934 samples, 100%)</title><rect x="0.0000%" y="1349" width="100.0000%" height="15" fill="rgb(241,78,40)" fg:x="0" fg:w="934"/><text x="0.2500%" y="1359.50"></text></g><g><title>perf-exec (5 samples, 0.54%)</title><rect x="99.4647%" y="1333" width="0.5353%" height="15" fill="rgb(222,35,25)" fg:x="929" fg:w="5"/><text x="99.7147%" y="1343.50"></text></g><g><title>[unknown] (5 samples, 0.54%)</title><rect x="99.4647%" y="1317" width="0.5353%" height="15" fill="rgb(207,92,16)" fg:x="929" fg:w="5"/><text x="99.7147%" y="1327.50"></text></g><g><title>[unknown] (5 samples, 0.54%)</title><rect x="99.4647%" y="1301" width="0.5353%" height="15" fill="rgb(216,59,51)" fg:x="929" fg:w="5"/><text x="99.7147%" y="1311.50"></text></g><g><title>[unknown] (5 samples, 0.54%)</title><rect x="99.4647%" y="1285" width="0.5353%" height="15" fill="rgb(213,80,28)" fg:x="929" fg:w="5"/><text x="99.7147%" y="1295.50"></text></g><g><title>[unknown] (5 samples, 0.54%)</title><rect x="99.4647%" y="1269" width="0.5353%" height="15" fill="rgb(220,93,7)" fg:x="929" fg:w="5"/><text x="99.7147%" y="1279.50"></text></g><g><title>[unknown] (5 samples, 0.54%)</title><rect x="99.4647%" y="1253" width="0.5353%" height="15" fill="rgb(225,24,44)" fg:x="929" fg:w="5"/><text x="99.7147%" y="1263.50"></text></g><g><title>[unknown] (5 samples, 0.54%)</title><rect x="99.4647%" y="1237" width="0.5353%" height="15" fill="rgb(243,74,40)" fg:x="929" fg:w="5"/><text x="99.7147%" y="1247.50"></text></g><g><title>[unknown] (5 samples, 0.54%)</title><rect x="99.4647%" y="1221" width="0.5353%" height="15" fill="rgb(228,39,7)" fg:x="929" fg:w="5"/><text x="99.7147%" y="1231.50"></text></g><g><title>[unknown] (5 samples, 0.54%)</title><rect x="99.4647%" y="1205" width="0.5353%" height="15" fill="rgb(227,79,8)" fg:x="929" fg:w="5"/><text x="99.7147%" y="1215.50"></text></g><g><title>[unknown] (5 samples, 0.54%)</title><rect x="99.4647%" y="1189" width="0.5353%" height="15" fill="rgb(236,58,11)" fg:x="929" fg:w="5"/><text x="99.7147%" y="1199.50"></text></g><g><title>[unknown] (5 samples, 0.54%)</title><rect x="99.4647%" y="1173" width="0.5353%" height="15" fill="rgb(249,63,35)" fg:x="929" fg:w="5"/><text x="99.7147%" y="1183.50"></text></g></svg></svg>