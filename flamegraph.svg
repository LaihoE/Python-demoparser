<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="870" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="853.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="853.00"> </text><svg id="frames" x="10" width="1180" total_samples="315"><g><title>[unknown] (56 samples, 17.78%)</title><rect x="0.0000%" y="789" width="17.7778%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="56"/><text x="0.2500%" y="799.50">[unknown]</text></g><g><title>[unknown] (46 samples, 14.60%)</title><rect x="3.1746%" y="773" width="14.6032%" height="15" fill="rgb(217,0,24)" fg:x="10" fg:w="46"/><text x="3.4246%" y="783.50">[unknown]</text></g><g><title>[unknown] (46 samples, 14.60%)</title><rect x="3.1746%" y="757" width="14.6032%" height="15" fill="rgb(221,193,54)" fg:x="10" fg:w="46"/><text x="3.4246%" y="767.50">[unknown]</text></g><g><title>[unknown] (46 samples, 14.60%)</title><rect x="3.1746%" y="741" width="14.6032%" height="15" fill="rgb(248,212,6)" fg:x="10" fg:w="46"/><text x="3.4246%" y="751.50">[unknown]</text></g><g><title>[unknown] (36 samples, 11.43%)</title><rect x="6.3492%" y="725" width="11.4286%" height="15" fill="rgb(208,68,35)" fg:x="20" fg:w="36"/><text x="6.5992%" y="735.50">[unknown]</text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="17.4603%" y="709" width="0.3175%" height="15" fill="rgb(232,128,0)" fg:x="55" fg:w="1"/><text x="17.7103%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="17.4603%" y="693" width="0.3175%" height="15" fill="rgb(207,160,47)" fg:x="55" fg:w="1"/><text x="17.7103%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="17.4603%" y="677" width="0.3175%" height="15" fill="rgb(228,23,34)" fg:x="55" fg:w="1"/><text x="17.7103%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="17.4603%" y="661" width="0.3175%" height="15" fill="rgb(218,30,26)" fg:x="55" fg:w="1"/><text x="17.7103%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="17.4603%" y="645" width="0.3175%" height="15" fill="rgb(220,122,19)" fg:x="55" fg:w="1"/><text x="17.7103%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="17.4603%" y="629" width="0.3175%" height="15" fill="rgb(250,228,42)" fg:x="55" fg:w="1"/><text x="17.7103%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="17.4603%" y="613" width="0.3175%" height="15" fill="rgb(240,193,28)" fg:x="55" fg:w="1"/><text x="17.7103%" y="623.50"></text></g><g><title>__GI___nptl_deallocate_tsd (2 samples, 0.63%)</title><rect x="18.0952%" y="757" width="0.6349%" height="15" fill="rgb(216,20,37)" fg:x="57" fg:w="2"/><text x="18.3452%" y="767.50"></text></g><g><title>__GI___nptl_deallocate_tsd (2 samples, 0.63%)</title><rect x="18.0952%" y="741" width="0.6349%" height="15" fill="rgb(206,188,39)" fg:x="57" fg:w="2"/><text x="18.3452%" y="751.50"></text></g><g><title>mi_pthread_done (2 samples, 0.63%)</title><rect x="18.0952%" y="725" width="0.6349%" height="15" fill="rgb(217,207,13)" fg:x="57" fg:w="2"/><text x="18.3452%" y="735.50"></text></g><g><title>_mi_thread_done (2 samples, 0.63%)</title><rect x="18.0952%" y="709" width="0.6349%" height="15" fill="rgb(231,73,38)" fg:x="57" fg:w="2"/><text x="18.3452%" y="719.50"></text></g><g><title>_mi_heap_done (2 samples, 0.63%)</title><rect x="18.0952%" y="693" width="0.6349%" height="15" fill="rgb(225,20,46)" fg:x="57" fg:w="2"/><text x="18.3452%" y="703.50"></text></g><g><title>mi_heap_collect_ex (2 samples, 0.63%)</title><rect x="18.0952%" y="677" width="0.6349%" height="15" fill="rgb(210,31,41)" fg:x="57" fg:w="2"/><text x="18.3452%" y="687.50"></text></g><g><title>_mi_abandoned_collect (2 samples, 0.63%)</title><rect x="18.0952%" y="661" width="0.6349%" height="15" fill="rgb(221,200,47)" fg:x="57" fg:w="2"/><text x="18.3452%" y="671.50"></text></g><g><title>mi_segment_check_free (2 samples, 0.63%)</title><rect x="18.0952%" y="645" width="0.6349%" height="15" fill="rgb(226,26,5)" fg:x="57" fg:w="2"/><text x="18.3452%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (10 samples, 3.17%)</title><rect x="19.0476%" y="549" width="3.1746%" height="15" fill="rgb(249,33,26)" fg:x="60" fg:w="10"/><text x="19.2976%" y="559.50">&lt;al..</text></g><g><title>[libc.so.6] (6 samples, 1.90%)</title><rect x="24.4444%" y="517" width="1.9048%" height="15" fill="rgb(235,183,28)" fg:x="77" fg:w="6"/><text x="24.6944%" y="527.50">[..</text></g><g><title>[unknown] (4 samples, 1.27%)</title><rect x="25.0794%" y="501" width="1.2698%" height="15" fill="rgb(221,5,38)" fg:x="79" fg:w="4"/><text x="25.3294%" y="511.50"></text></g><g><title>[unknown] (4 samples, 1.27%)</title><rect x="25.0794%" y="485" width="1.2698%" height="15" fill="rgb(247,18,42)" fg:x="79" fg:w="4"/><text x="25.3294%" y="495.50"></text></g><g><title>[unknown] (4 samples, 1.27%)</title><rect x="25.0794%" y="469" width="1.2698%" height="15" fill="rgb(241,131,45)" fg:x="79" fg:w="4"/><text x="25.3294%" y="479.50"></text></g><g><title>[unknown] (4 samples, 1.27%)</title><rect x="25.0794%" y="453" width="1.2698%" height="15" fill="rgb(249,31,29)" fg:x="79" fg:w="4"/><text x="25.3294%" y="463.50"></text></g><g><title>[unknown] (4 samples, 1.27%)</title><rect x="25.0794%" y="437" width="1.2698%" height="15" fill="rgb(225,111,53)" fg:x="79" fg:w="4"/><text x="25.3294%" y="447.50"></text></g><g><title>[unknown] (4 samples, 1.27%)</title><rect x="25.0794%" y="421" width="1.2698%" height="15" fill="rgb(238,160,17)" fg:x="79" fg:w="4"/><text x="25.3294%" y="431.50"></text></g><g><title>[unknown] (4 samples, 1.27%)</title><rect x="25.0794%" y="405" width="1.2698%" height="15" fill="rgb(214,148,48)" fg:x="79" fg:w="4"/><text x="25.3294%" y="415.50"></text></g><g><title>[unknown] (4 samples, 1.27%)</title><rect x="25.0794%" y="389" width="1.2698%" height="15" fill="rgb(232,36,49)" fg:x="79" fg:w="4"/><text x="25.3294%" y="399.50"></text></g><g><title>[unknown] (4 samples, 1.27%)</title><rect x="25.0794%" y="373" width="1.2698%" height="15" fill="rgb(209,103,24)" fg:x="79" fg:w="4"/><text x="25.3294%" y="383.50"></text></g><g><title>[unknown] (4 samples, 1.27%)</title><rect x="25.0794%" y="357" width="1.2698%" height="15" fill="rgb(229,88,8)" fg:x="79" fg:w="4"/><text x="25.3294%" y="367.50"></text></g><g><title>[unknown] (4 samples, 1.27%)</title><rect x="25.0794%" y="341" width="1.2698%" height="15" fill="rgb(213,181,19)" fg:x="79" fg:w="4"/><text x="25.3294%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="25.7143%" y="325" width="0.6349%" height="15" fill="rgb(254,191,54)" fg:x="81" fg:w="2"/><text x="25.9643%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="26.0317%" y="309" width="0.3175%" height="15" fill="rgb(241,83,37)" fg:x="82" fg:w="1"/><text x="26.2817%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="26.0317%" y="293" width="0.3175%" height="15" fill="rgb(233,36,39)" fg:x="82" fg:w="1"/><text x="26.2817%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="26.0317%" y="277" width="0.3175%" height="15" fill="rgb(226,3,54)" fg:x="82" fg:w="1"/><text x="26.2817%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="26.0317%" y="261" width="0.3175%" height="15" fill="rgb(245,192,40)" fg:x="82" fg:w="1"/><text x="26.2817%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="26.0317%" y="245" width="0.3175%" height="15" fill="rgb(238,167,29)" fg:x="82" fg:w="1"/><text x="26.2817%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="26.0317%" y="229" width="0.3175%" height="15" fill="rgb(232,182,51)" fg:x="82" fg:w="1"/><text x="26.2817%" y="239.50"></text></g><g><title>_mi_deferred_free (1 samples, 0.32%)</title><rect x="26.3492%" y="437" width="0.3175%" height="15" fill="rgb(231,60,39)" fg:x="83" fg:w="1"/><text x="26.5992%" y="447.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (13 samples, 4.13%)</title><rect x="24.4444%" y="533" width="4.1270%" height="15" fill="rgb(208,69,12)" fg:x="77" fg:w="13"/><text x="24.6944%" y="543.50">allo..</text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 2.22%)</title><rect x="26.3492%" y="517" width="2.2222%" height="15" fill="rgb(235,93,37)" fg:x="83" fg:w="7"/><text x="26.5992%" y="527.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 2.22%)</title><rect x="26.3492%" y="501" width="2.2222%" height="15" fill="rgb(213,116,39)" fg:x="83" fg:w="7"/><text x="26.5992%" y="511.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 2.22%)</title><rect x="26.3492%" y="485" width="2.2222%" height="15" fill="rgb(222,207,29)" fg:x="83" fg:w="7"/><text x="26.5992%" y="495.50">a..</text></g><g><title>alloc::alloc::alloc (7 samples, 2.22%)</title><rect x="26.3492%" y="469" width="2.2222%" height="15" fill="rgb(206,96,30)" fg:x="83" fg:w="7"/><text x="26.5992%" y="479.50">a..</text></g><g><title>_mi_malloc_generic (7 samples, 2.22%)</title><rect x="26.3492%" y="453" width="2.2222%" height="15" fill="rgb(218,138,4)" fg:x="83" fg:w="7"/><text x="26.5992%" y="463.50">_..</text></g><g><title>mi_find_page (6 samples, 1.90%)</title><rect x="26.6667%" y="437" width="1.9048%" height="15" fill="rgb(250,191,14)" fg:x="84" fg:w="6"/><text x="26.9167%" y="447.50">m..</text></g><g><title>mi_find_free_page (6 samples, 1.90%)</title><rect x="26.6667%" y="421" width="1.9048%" height="15" fill="rgb(239,60,40)" fg:x="84" fg:w="6"/><text x="26.9167%" y="431.50">m..</text></g><g><title>mi_page_queue_find_free_ex (6 samples, 1.90%)</title><rect x="26.6667%" y="405" width="1.9048%" height="15" fill="rgb(206,27,48)" fg:x="84" fg:w="6"/><text x="26.9167%" y="415.50">m..</text></g><g><title>mi_page_fresh (6 samples, 1.90%)</title><rect x="26.6667%" y="389" width="1.9048%" height="15" fill="rgb(225,35,8)" fg:x="84" fg:w="6"/><text x="26.9167%" y="399.50">m..</text></g><g><title>mi_page_fresh_alloc (6 samples, 1.90%)</title><rect x="26.6667%" y="373" width="1.9048%" height="15" fill="rgb(250,213,24)" fg:x="84" fg:w="6"/><text x="26.9167%" y="383.50">m..</text></g><g><title>mi_segments_page_alloc (6 samples, 1.90%)</title><rect x="26.6667%" y="357" width="1.9048%" height="15" fill="rgb(247,123,22)" fg:x="84" fg:w="6"/><text x="26.9167%" y="367.50">m..</text></g><g><title>mi_segment_reclaim_or_alloc (6 samples, 1.90%)</title><rect x="26.6667%" y="341" width="1.9048%" height="15" fill="rgb(231,138,38)" fg:x="84" fg:w="6"/><text x="26.9167%" y="351.50">m..</text></g><g><title>mi_segment_alloc (6 samples, 1.90%)</title><rect x="26.6667%" y="325" width="1.9048%" height="15" fill="rgb(231,145,46)" fg:x="84" fg:w="6"/><text x="26.9167%" y="335.50">m..</text></g><g><title>mi_segment_init (6 samples, 1.90%)</title><rect x="26.6667%" y="309" width="1.9048%" height="15" fill="rgb(251,118,11)" fg:x="84" fg:w="6"/><text x="26.9167%" y="319.50">m..</text></g><g><title>memset (6 samples, 1.90%)</title><rect x="26.6667%" y="293" width="1.9048%" height="15" fill="rgb(217,147,25)" fg:x="84" fg:w="6"/><text x="26.9167%" y="303.50">m..</text></g><g><title>[libc.so.6] (6 samples, 1.90%)</title><rect x="26.6667%" y="277" width="1.9048%" height="15" fill="rgb(247,81,37)" fg:x="84" fg:w="6"/><text x="26.9167%" y="287.50">[..</text></g><g><title>[unknown] (6 samples, 1.90%)</title><rect x="26.6667%" y="261" width="1.9048%" height="15" fill="rgb(209,12,38)" fg:x="84" fg:w="6"/><text x="26.9167%" y="271.50">[..</text></g><g><title>[unknown] (5 samples, 1.59%)</title><rect x="26.9841%" y="245" width="1.5873%" height="15" fill="rgb(227,1,9)" fg:x="85" fg:w="5"/><text x="27.2341%" y="255.50"></text></g><g><title>[unknown] (5 samples, 1.59%)</title><rect x="26.9841%" y="229" width="1.5873%" height="15" fill="rgb(248,47,43)" fg:x="85" fg:w="5"/><text x="27.2341%" y="239.50"></text></g><g><title>[unknown] (5 samples, 1.59%)</title><rect x="26.9841%" y="213" width="1.5873%" height="15" fill="rgb(221,10,30)" fg:x="85" fg:w="5"/><text x="27.2341%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (2 samples, 0.63%)</title><rect x="28.5714%" y="533" width="0.6349%" height="15" fill="rgb(210,229,1)" fg:x="90" fg:w="2"/><text x="28.8214%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.63%)</title><rect x="28.5714%" y="517" width="0.6349%" height="15" fill="rgb(222,148,37)" fg:x="90" fg:w="2"/><text x="28.8214%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="28.8889%" y="501" width="0.3175%" height="15" fill="rgb(234,67,33)" fg:x="91" fg:w="1"/><text x="29.1389%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="28.8889%" y="485" width="0.3175%" height="15" fill="rgb(247,98,35)" fg:x="91" fg:w="1"/><text x="29.1389%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="28.8889%" y="469" width="0.3175%" height="15" fill="rgb(247,138,52)" fg:x="91" fg:w="1"/><text x="29.1389%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="28.8889%" y="453" width="0.3175%" height="15" fill="rgb(213,79,30)" fg:x="91" fg:w="1"/><text x="29.1389%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="28.8889%" y="437" width="0.3175%" height="15" fill="rgb(246,177,23)" fg:x="91" fg:w="1"/><text x="29.1389%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (5 samples, 1.59%)</title><rect x="29.2063%" y="533" width="1.5873%" height="15" fill="rgb(230,62,27)" fg:x="92" fg:w="5"/><text x="29.4563%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_or (5 samples, 1.59%)</title><rect x="29.2063%" y="517" width="1.5873%" height="15" fill="rgb(216,154,8)" fg:x="92" fg:w="5"/><text x="29.4563%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="30.4762%" y="501" width="0.3175%" height="15" fill="rgb(244,35,45)" fg:x="96" fg:w="1"/><text x="30.7262%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="30.4762%" y="485" width="0.3175%" height="15" fill="rgb(251,115,12)" fg:x="96" fg:w="1"/><text x="30.7262%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="30.4762%" y="469" width="0.3175%" height="15" fill="rgb(240,54,50)" fg:x="96" fg:w="1"/><text x="30.7262%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="30.4762%" y="453" width="0.3175%" height="15" fill="rgb(233,84,52)" fg:x="96" fg:w="1"/><text x="30.7262%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="30.4762%" y="437" width="0.3175%" height="15" fill="rgb(207,117,47)" fg:x="96" fg:w="1"/><text x="30.7262%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="30.4762%" y="421" width="0.3175%" height="15" fill="rgb(249,43,39)" fg:x="96" fg:w="1"/><text x="30.7262%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="30.4762%" y="405" width="0.3175%" height="15" fill="rgb(209,38,44)" fg:x="96" fg:w="1"/><text x="30.7262%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="30.4762%" y="389" width="0.3175%" height="15" fill="rgb(236,212,23)" fg:x="96" fg:w="1"/><text x="30.7262%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="30.4762%" y="373" width="0.3175%" height="15" fill="rgb(242,79,21)" fg:x="96" fg:w="1"/><text x="30.7262%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="30.4762%" y="357" width="0.3175%" height="15" fill="rgb(211,96,35)" fg:x="96" fg:w="1"/><text x="30.7262%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="30.4762%" y="341" width="0.3175%" height="15" fill="rgb(253,215,40)" fg:x="96" fg:w="1"/><text x="30.7262%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="30.4762%" y="325" width="0.3175%" height="15" fill="rgb(211,81,21)" fg:x="96" fg:w="1"/><text x="30.7262%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="30.4762%" y="309" width="0.3175%" height="15" fill="rgb(208,190,38)" fg:x="96" fg:w="1"/><text x="30.7262%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="30.4762%" y="293" width="0.3175%" height="15" fill="rgb(235,213,38)" fg:x="96" fg:w="1"/><text x="30.7262%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="30.4762%" y="277" width="0.3175%" height="15" fill="rgb(237,122,38)" fg:x="96" fg:w="1"/><text x="30.7262%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="30.4762%" y="261" width="0.3175%" height="15" fill="rgb(244,218,35)" fg:x="96" fg:w="1"/><text x="30.7262%" y="271.50"></text></g><g><title>crossbeam_queue::seg_queue::SegQueue&lt;T&gt;::push (44 samples, 13.97%)</title><rect x="22.2222%" y="549" width="13.9683%" height="15" fill="rgb(240,68,47)" fg:x="70" fg:w="44"/><text x="22.4722%" y="559.50">crossbeam_queue::seg_..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (17 samples, 5.40%)</title><rect x="30.7937%" y="533" width="5.3968%" height="15" fill="rgb(210,16,53)" fg:x="97" fg:w="17"/><text x="31.0437%" y="543.50">crossbe..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (17 samples, 5.40%)</title><rect x="30.7937%" y="517" width="5.3968%" height="15" fill="rgb(235,124,12)" fg:x="97" fg:w="17"/><text x="31.0437%" y="527.50">core::i..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (17 samples, 5.40%)</title><rect x="30.7937%" y="501" width="5.3968%" height="15" fill="rgb(224,169,11)" fg:x="97" fg:w="17"/><text x="31.0437%" y="511.50">&lt;core::..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (3 samples, 0.95%)</title><rect x="35.2381%" y="485" width="0.9524%" height="15" fill="rgb(250,166,2)" fg:x="111" fg:w="3"/><text x="35.4881%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.63%)</title><rect x="39.6825%" y="533" width="0.6349%" height="15" fill="rgb(242,216,29)" fg:x="125" fg:w="2"/><text x="39.9325%" y="543.50"></text></g><g><title>demoparser::parsing::parser::Parser::find_beginning (43 samples, 13.65%)</title><rect x="36.1905%" y="549" width="13.6508%" height="15" fill="rgb(230,116,27)" fg:x="114" fg:w="43"/><text x="36.4405%" y="559.50">demoparser::parsing::..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (30 samples, 9.52%)</title><rect x="40.3175%" y="533" width="9.5238%" height="15" fill="rgb(228,99,48)" fg:x="127" fg:w="30"/><text x="40.5675%" y="543.50">core::cmp::imp..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u8&gt;::eq (30 samples, 9.52%)</title><rect x="40.3175%" y="517" width="9.5238%" height="15" fill="rgb(253,11,6)" fg:x="127" fg:w="30"/><text x="40.5675%" y="527.50">core::cmp::imp..</text></g><g><title>[unknown] (30 samples, 9.52%)</title><rect x="40.3175%" y="501" width="9.5238%" height="15" fill="rgb(247,143,39)" fg:x="127" fg:w="30"/><text x="40.5675%" y="511.50">[unknown]</text></g><g><title>[unknown] (30 samples, 9.52%)</title><rect x="40.3175%" y="485" width="9.5238%" height="15" fill="rgb(236,97,10)" fg:x="127" fg:w="30"/><text x="40.5675%" y="495.50">[unknown]</text></g><g><title>[unknown] (30 samples, 9.52%)</title><rect x="40.3175%" y="469" width="9.5238%" height="15" fill="rgb(233,208,19)" fg:x="127" fg:w="30"/><text x="40.5675%" y="479.50">[unknown]</text></g><g><title>[unknown] (30 samples, 9.52%)</title><rect x="40.3175%" y="453" width="9.5238%" height="15" fill="rgb(216,164,2)" fg:x="127" fg:w="30"/><text x="40.5675%" y="463.50">[unknown]</text></g><g><title>[unknown] (30 samples, 9.52%)</title><rect x="40.3175%" y="437" width="9.5238%" height="15" fill="rgb(220,129,5)" fg:x="127" fg:w="30"/><text x="40.5675%" y="447.50">[unknown]</text></g><g><title>[unknown] (19 samples, 6.03%)</title><rect x="43.8095%" y="421" width="6.0317%" height="15" fill="rgb(242,17,10)" fg:x="138" fg:w="19"/><text x="44.0595%" y="431.50">[unknown]</text></g><g><title>[unknown] (19 samples, 6.03%)</title><rect x="43.8095%" y="405" width="6.0317%" height="15" fill="rgb(242,107,0)" fg:x="138" fg:w="19"/><text x="44.0595%" y="415.50">[unknown]</text></g><g><title>[unknown] (14 samples, 4.44%)</title><rect x="45.3968%" y="389" width="4.4444%" height="15" fill="rgb(251,28,31)" fg:x="143" fg:w="14"/><text x="45.6468%" y="399.50">[unkn..</text></g><g><title>[unknown] (14 samples, 4.44%)</title><rect x="45.3968%" y="373" width="4.4444%" height="15" fill="rgb(233,223,10)" fg:x="143" fg:w="14"/><text x="45.6468%" y="383.50">[unkn..</text></g><g><title>[unknown] (14 samples, 4.44%)</title><rect x="45.3968%" y="357" width="4.4444%" height="15" fill="rgb(215,21,27)" fg:x="143" fg:w="14"/><text x="45.6468%" y="367.50">[unkn..</text></g><g><title>[unknown] (3 samples, 0.95%)</title><rect x="48.8889%" y="341" width="0.9524%" height="15" fill="rgb(232,23,21)" fg:x="154" fg:w="3"/><text x="49.1389%" y="351.50"></text></g><g><title>[unknown] (3 samples, 0.95%)</title><rect x="48.8889%" y="325" width="0.9524%" height="15" fill="rgb(244,5,23)" fg:x="154" fg:w="3"/><text x="49.1389%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="49.2063%" y="309" width="0.6349%" height="15" fill="rgb(226,81,46)" fg:x="155" fg:w="2"/><text x="49.4563%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="49.2063%" y="293" width="0.6349%" height="15" fill="rgb(247,70,30)" fg:x="155" fg:w="2"/><text x="49.4563%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="49.2063%" y="277" width="0.6349%" height="15" fill="rgb(212,68,19)" fg:x="155" fg:w="2"/><text x="49.4563%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="49.2063%" y="261" width="0.6349%" height="15" fill="rgb(240,187,13)" fg:x="155" fg:w="2"/><text x="49.4563%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="49.2063%" y="245" width="0.6349%" height="15" fill="rgb(223,113,26)" fg:x="155" fg:w="2"/><text x="49.4563%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;demoparser::parsing::parser::ParsingMaps&gt;&gt;&gt; (7 samples, 2.22%)</title><rect x="50.1587%" y="533" width="2.2222%" height="15" fill="rgb(206,192,2)" fg:x="158" fg:w="7"/><text x="50.4087%" y="543.50">c..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 2.22%)</title><rect x="50.1587%" y="517" width="2.2222%" height="15" fill="rgb(241,108,4)" fg:x="158" fg:w="7"/><text x="50.4087%" y="527.50">&lt;..</text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="52.0635%" y="501" width="0.3175%" height="15" fill="rgb(247,173,49)" fg:x="164" fg:w="1"/><text x="52.3135%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="52.0635%" y="485" width="0.3175%" height="15" fill="rgb(224,114,35)" fg:x="164" fg:w="1"/><text x="52.3135%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="52.0635%" y="469" width="0.3175%" height="15" fill="rgb(245,159,27)" fg:x="164" fg:w="1"/><text x="52.3135%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="52.0635%" y="453" width="0.3175%" height="15" fill="rgb(245,172,44)" fg:x="164" fg:w="1"/><text x="52.3135%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="52.0635%" y="437" width="0.3175%" height="15" fill="rgb(236,23,11)" fg:x="164" fg:w="1"/><text x="52.3135%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="52.0635%" y="421" width="0.3175%" height="15" fill="rgb(205,117,38)" fg:x="164" fg:w="1"/><text x="52.3135%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="52.0635%" y="405" width="0.3175%" height="15" fill="rgb(237,72,25)" fg:x="164" fg:w="1"/><text x="52.3135%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="52.0635%" y="389" width="0.3175%" height="15" fill="rgb(244,70,9)" fg:x="164" fg:w="1"/><text x="52.3135%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="52.0635%" y="373" width="0.3175%" height="15" fill="rgb(217,125,39)" fg:x="164" fg:w="1"/><text x="52.3135%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="52.0635%" y="357" width="0.3175%" height="15" fill="rgb(235,36,10)" fg:x="164" fg:w="1"/><text x="52.3135%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="52.0635%" y="341" width="0.3175%" height="15" fill="rgb(251,123,47)" fg:x="164" fg:w="1"/><text x="52.3135%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="52.0635%" y="325" width="0.3175%" height="15" fill="rgb(221,13,13)" fg:x="164" fg:w="1"/><text x="52.3135%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="52.0635%" y="309" width="0.3175%" height="15" fill="rgb(238,131,9)" fg:x="164" fg:w="1"/><text x="52.3135%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="52.0635%" y="293" width="0.3175%" height="15" fill="rgb(211,50,8)" fg:x="164" fg:w="1"/><text x="52.3135%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="52.0635%" y="277" width="0.3175%" height="15" fill="rgb(245,182,24)" fg:x="164" fg:w="1"/><text x="52.3135%" y="287.50"></text></g><g><title>demoparser::parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_datatable (1 samples, 0.32%)</title><rect x="52.3810%" y="533" width="0.3175%" height="15" fill="rgb(242,14,37)" fg:x="165" fg:w="1"/><text x="52.6310%" y="543.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_SendTable as core::clone::Clone&gt;::clone (1 samples, 0.32%)</title><rect x="52.3810%" y="517" width="0.3175%" height="15" fill="rgb(246,228,12)" fg:x="165" fg:w="1"/><text x="52.6310%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.32%)</title><rect x="52.3810%" y="501" width="0.3175%" height="15" fill="rgb(213,55,15)" fg:x="165" fg:w="1"/><text x="52.6310%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.32%)</title><rect x="52.3810%" y="485" width="0.3175%" height="15" fill="rgb(209,9,3)" fg:x="165" fg:w="1"/><text x="52.6310%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.32%)</title><rect x="52.3810%" y="469" width="0.3175%" height="15" fill="rgb(230,59,30)" fg:x="165" fg:w="1"/><text x="52.6310%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.32%)</title><rect x="52.3810%" y="453" width="0.3175%" height="15" fill="rgb(209,121,21)" fg:x="165" fg:w="1"/><text x="52.6310%" y="463.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_send_table::Sendprop_t as core::clone::Clone&gt;::clone (1 samples, 0.32%)</title><rect x="52.3810%" y="437" width="0.3175%" height="15" fill="rgb(220,109,13)" fg:x="165" fg:w="1"/><text x="52.6310%" y="447.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.32%)</title><rect x="52.3810%" y="421" width="0.3175%" height="15" fill="rgb(232,18,1)" fg:x="165" fg:w="1"/><text x="52.6310%" y="431.50"></text></g><g><title>demoparser::parsing::read_bytes::ByteReader::read_i32 (9 samples, 2.86%)</title><rect x="53.3333%" y="517" width="2.8571%" height="15" fill="rgb(215,41,42)" fg:x="168" fg:w="9"/><text x="53.5833%" y="527.50">de..</text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (9 samples, 2.86%)</title><rect x="53.3333%" y="501" width="2.8571%" height="15" fill="rgb(224,123,36)" fg:x="168" fg:w="9"/><text x="53.5833%" y="511.50">&lt;T..</text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (9 samples, 2.86%)</title><rect x="53.3333%" y="485" width="2.8571%" height="15" fill="rgb(240,125,3)" fg:x="168" fg:w="9"/><text x="53.5833%" y="495.50">co..</text></g><g><title>core::result::Result&lt;T,E&gt;::map (9 samples, 2.86%)</title><rect x="53.3333%" y="469" width="2.8571%" height="15" fill="rgb(205,98,50)" fg:x="168" fg:w="9"/><text x="53.5833%" y="479.50">co..</text></g><g><title>[unknown] (9 samples, 2.86%)</title><rect x="53.3333%" y="453" width="2.8571%" height="15" fill="rgb(205,185,37)" fg:x="168" fg:w="9"/><text x="53.5833%" y="463.50">[u..</text></g><g><title>[unknown] (9 samples, 2.86%)</title><rect x="53.3333%" y="437" width="2.8571%" height="15" fill="rgb(238,207,15)" fg:x="168" fg:w="9"/><text x="53.5833%" y="447.50">[u..</text></g><g><title>[unknown] (9 samples, 2.86%)</title><rect x="53.3333%" y="421" width="2.8571%" height="15" fill="rgb(213,199,42)" fg:x="168" fg:w="9"/><text x="53.5833%" y="431.50">[u..</text></g><g><title>[unknown] (9 samples, 2.86%)</title><rect x="53.3333%" y="405" width="2.8571%" height="15" fill="rgb(235,201,11)" fg:x="168" fg:w="9"/><text x="53.5833%" y="415.50">[u..</text></g><g><title>[unknown] (8 samples, 2.54%)</title><rect x="53.6508%" y="389" width="2.5397%" height="15" fill="rgb(207,46,11)" fg:x="169" fg:w="8"/><text x="53.9008%" y="399.50">[u..</text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="55.5556%" y="373" width="0.6349%" height="15" fill="rgb(241,35,35)" fg:x="175" fg:w="2"/><text x="55.8056%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="55.5556%" y="357" width="0.6349%" height="15" fill="rgb(243,32,47)" fg:x="175" fg:w="2"/><text x="55.8056%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="55.5556%" y="341" width="0.6349%" height="15" fill="rgb(247,202,23)" fg:x="175" fg:w="2"/><text x="55.8056%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="55.5556%" y="325" width="0.6349%" height="15" fill="rgb(219,102,11)" fg:x="175" fg:w="2"/><text x="55.8056%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="55.5556%" y="309" width="0.6349%" height="15" fill="rgb(243,110,44)" fg:x="175" fg:w="2"/><text x="55.8056%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="55.5556%" y="293" width="0.6349%" height="15" fill="rgb(222,74,54)" fg:x="175" fg:w="2"/><text x="55.8056%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="55.5556%" y="277" width="0.6349%" height="15" fill="rgb(216,99,12)" fg:x="175" fg:w="2"/><text x="55.8056%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="55.5556%" y="261" width="0.6349%" height="15" fill="rgb(226,22,26)" fg:x="175" fg:w="2"/><text x="55.8056%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="55.5556%" y="245" width="0.6349%" height="15" fill="rgb(217,163,10)" fg:x="175" fg:w="2"/><text x="55.8056%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="55.5556%" y="229" width="0.6349%" height="15" fill="rgb(213,25,53)" fg:x="175" fg:w="2"/><text x="55.8056%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="55.8730%" y="213" width="0.3175%" height="15" fill="rgb(252,105,26)" fg:x="176" fg:w="1"/><text x="56.1230%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="55.8730%" y="197" width="0.3175%" height="15" fill="rgb(220,39,43)" fg:x="176" fg:w="1"/><text x="56.1230%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="55.8730%" y="181" width="0.3175%" height="15" fill="rgb(229,68,48)" fg:x="176" fg:w="1"/><text x="56.1230%" y="191.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_cmd (27 samples, 8.57%)</title><rect x="49.8413%" y="549" width="8.5714%" height="15" fill="rgb(252,8,32)" fg:x="157" fg:w="27"/><text x="50.0913%" y="559.50">demoparser::..</text></g><g><title>demoparser::parsing::parser::Parser::parse_packet (18 samples, 5.71%)</title><rect x="52.6984%" y="533" width="5.7143%" height="15" fill="rgb(223,20,43)" fg:x="166" fg:w="18"/><text x="52.9484%" y="543.50">demopar..</text></g><g><title>demoparser::parsing::read_bytes::ByteReader::read_varint (7 samples, 2.22%)</title><rect x="56.1905%" y="517" width="2.2222%" height="15" fill="rgb(229,81,49)" fg:x="177" fg:w="7"/><text x="56.4405%" y="527.50">d..</text></g><g><title>[unknown] (6 samples, 1.90%)</title><rect x="56.5079%" y="501" width="1.9048%" height="15" fill="rgb(236,28,36)" fg:x="178" fg:w="6"/><text x="56.7579%" y="511.50">[..</text></g><g><title>[unknown] (6 samples, 1.90%)</title><rect x="56.5079%" y="485" width="1.9048%" height="15" fill="rgb(249,185,26)" fg:x="178" fg:w="6"/><text x="56.7579%" y="495.50">[..</text></g><g><title>[unknown] (6 samples, 1.90%)</title><rect x="56.5079%" y="469" width="1.9048%" height="15" fill="rgb(249,174,33)" fg:x="178" fg:w="6"/><text x="56.7579%" y="479.50">[..</text></g><g><title>[unknown] (6 samples, 1.90%)</title><rect x="56.5079%" y="453" width="1.9048%" height="15" fill="rgb(233,201,37)" fg:x="178" fg:w="6"/><text x="56.7579%" y="463.50">[..</text></g><g><title>[unknown] (6 samples, 1.90%)</title><rect x="56.5079%" y="437" width="1.9048%" height="15" fill="rgb(221,78,26)" fg:x="178" fg:w="6"/><text x="56.7579%" y="447.50">[..</text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="58.0952%" y="421" width="0.3175%" height="15" fill="rgb(250,127,30)" fg:x="183" fg:w="1"/><text x="58.3452%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="58.0952%" y="405" width="0.3175%" height="15" fill="rgb(230,49,44)" fg:x="183" fg:w="1"/><text x="58.3452%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="58.0952%" y="389" width="0.3175%" height="15" fill="rgb(229,67,23)" fg:x="183" fg:w="1"/><text x="58.3452%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="58.0952%" y="373" width="0.3175%" height="15" fill="rgb(249,83,47)" fg:x="183" fg:w="1"/><text x="58.3452%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="58.0952%" y="357" width="0.3175%" height="15" fill="rgb(215,43,3)" fg:x="183" fg:w="1"/><text x="58.3452%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="58.0952%" y="341" width="0.3175%" height="15" fill="rgb(238,154,13)" fg:x="183" fg:w="1"/><text x="58.3452%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="58.0952%" y="325" width="0.3175%" height="15" fill="rgb(219,56,2)" fg:x="183" fg:w="1"/><text x="58.3452%" y="335.50"></text></g><g><title>demoparser::parsing::parser::Parser::start_io_threads::{{closure}} (136 samples, 43.17%)</title><rect x="19.0476%" y="581" width="43.1746%" height="15" fill="rgb(233,0,4)" fg:x="60" fg:w="136"/><text x="19.2976%" y="591.50">demoparser::parsing::parser::Parser::start_io_threads::{{closure}}</text></g><g><title>demoparser::parsing::parser::Parser::parse_messages (136 samples, 43.17%)</title><rect x="19.0476%" y="565" width="43.1746%" height="15" fill="rgb(235,30,7)" fg:x="60" fg:w="136"/><text x="19.2976%" y="575.50">demoparser::parsing::parser::Parser::parse_messages</text></g><g><title>demoparser::parsing::read_bytes::ByteReader::read_frame (12 samples, 3.81%)</title><rect x="58.4127%" y="549" width="3.8095%" height="15" fill="rgb(250,79,13)" fg:x="184" fg:w="12"/><text x="58.6627%" y="559.50">demo..</text></g><g><title>demoparser::parsing::read_bytes::ByteReader::read_byte (12 samples, 3.81%)</title><rect x="58.4127%" y="533" width="3.8095%" height="15" fill="rgb(211,146,34)" fg:x="184" fg:w="12"/><text x="58.6627%" y="543.50">demo..</text></g><g><title>[unknown] (11 samples, 3.49%)</title><rect x="58.7302%" y="517" width="3.4921%" height="15" fill="rgb(228,22,38)" fg:x="185" fg:w="11"/><text x="58.9802%" y="527.50">[un..</text></g><g><title>[unknown] (11 samples, 3.49%)</title><rect x="58.7302%" y="501" width="3.4921%" height="15" fill="rgb(235,168,5)" fg:x="185" fg:w="11"/><text x="58.9802%" y="511.50">[un..</text></g><g><title>[unknown] (11 samples, 3.49%)</title><rect x="58.7302%" y="485" width="3.4921%" height="15" fill="rgb(221,155,16)" fg:x="185" fg:w="11"/><text x="58.9802%" y="495.50">[un..</text></g><g><title>[unknown] (10 samples, 3.17%)</title><rect x="59.0476%" y="469" width="3.1746%" height="15" fill="rgb(215,215,53)" fg:x="186" fg:w="10"/><text x="59.2976%" y="479.50">[un..</text></g><g><title>[unknown] (10 samples, 3.17%)</title><rect x="59.0476%" y="453" width="3.1746%" height="15" fill="rgb(223,4,10)" fg:x="186" fg:w="10"/><text x="59.2976%" y="463.50">[un..</text></g><g><title>[unknown] (10 samples, 3.17%)</title><rect x="59.0476%" y="437" width="3.1746%" height="15" fill="rgb(234,103,6)" fg:x="186" fg:w="10"/><text x="59.2976%" y="447.50">[un..</text></g><g><title>[unknown] (10 samples, 3.17%)</title><rect x="59.0476%" y="421" width="3.1746%" height="15" fill="rgb(227,97,0)" fg:x="186" fg:w="10"/><text x="59.2976%" y="431.50">[un..</text></g><g><title>[unknown] (10 samples, 3.17%)</title><rect x="59.0476%" y="405" width="3.1746%" height="15" fill="rgb(234,150,53)" fg:x="186" fg:w="10"/><text x="59.2976%" y="415.50">[un..</text></g><g><title>[unknown] (10 samples, 3.17%)</title><rect x="59.0476%" y="389" width="3.1746%" height="15" fill="rgb(228,201,54)" fg:x="186" fg:w="10"/><text x="59.2976%" y="399.50">[un..</text></g><g><title>[unknown] (10 samples, 3.17%)</title><rect x="59.0476%" y="373" width="3.1746%" height="15" fill="rgb(222,22,37)" fg:x="186" fg:w="10"/><text x="59.2976%" y="383.50">[un..</text></g><g><title>[unknown] (10 samples, 3.17%)</title><rect x="59.0476%" y="357" width="3.1746%" height="15" fill="rgb(237,53,32)" fg:x="186" fg:w="10"/><text x="59.2976%" y="367.50">[un..</text></g><g><title>[unknown] (10 samples, 3.17%)</title><rect x="59.0476%" y="341" width="3.1746%" height="15" fill="rgb(233,25,53)" fg:x="186" fg:w="10"/><text x="59.2976%" y="351.50">[un..</text></g><g><title>[unknown] (10 samples, 3.17%)</title><rect x="59.0476%" y="325" width="3.1746%" height="15" fill="rgb(210,40,34)" fg:x="186" fg:w="10"/><text x="59.2976%" y="335.50">[un..</text></g><g><title>[unknown] (9 samples, 2.86%)</title><rect x="59.3651%" y="309" width="2.8571%" height="15" fill="rgb(241,220,44)" fg:x="187" fg:w="9"/><text x="59.6151%" y="319.50">[u..</text></g><g><title>[unknown] (9 samples, 2.86%)</title><rect x="59.3651%" y="293" width="2.8571%" height="15" fill="rgb(235,28,35)" fg:x="187" fg:w="9"/><text x="59.6151%" y="303.50">[u..</text></g><g><title>[unknown] (9 samples, 2.86%)</title><rect x="59.3651%" y="277" width="2.8571%" height="15" fill="rgb(210,56,17)" fg:x="187" fg:w="9"/><text x="59.6151%" y="287.50">[u..</text></g><g><title>[unknown] (6 samples, 1.90%)</title><rect x="60.3175%" y="261" width="1.9048%" height="15" fill="rgb(224,130,29)" fg:x="190" fg:w="6"/><text x="60.5675%" y="271.50">[..</text></g><g><title>[unknown] (4 samples, 1.27%)</title><rect x="60.9524%" y="245" width="1.2698%" height="15" fill="rgb(235,212,8)" fg:x="192" fg:w="4"/><text x="61.2024%" y="255.50"></text></g><g><title>[unknown] (3 samples, 0.95%)</title><rect x="61.2698%" y="229" width="0.9524%" height="15" fill="rgb(223,33,50)" fg:x="193" fg:w="3"/><text x="61.5198%" y="239.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 5.71%)</title><rect x="62.5397%" y="549" width="5.7143%" height="15" fill="rgb(219,149,13)" fg:x="197" fg:w="18"/><text x="62.7897%" y="559.50">&lt;alloc:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (15 samples, 4.76%)</title><rect x="68.8889%" y="533" width="4.7619%" height="15" fill="rgb(250,156,29)" fg:x="217" fg:w="15"/><text x="69.1389%" y="543.50">alloc:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (15 samples, 4.76%)</title><rect x="68.8889%" y="517" width="4.7619%" height="15" fill="rgb(216,193,19)" fg:x="217" fg:w="15"/><text x="69.1389%" y="527.50">alloc:..</text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 4.76%)</title><rect x="68.8889%" y="501" width="4.7619%" height="15" fill="rgb(216,135,14)" fg:x="217" fg:w="15"/><text x="69.1389%" y="511.50">alloc:..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (15 samples, 4.76%)</title><rect x="68.8889%" y="485" width="4.7619%" height="15" fill="rgb(241,47,5)" fg:x="217" fg:w="15"/><text x="69.1389%" y="495.50">&lt;alloc..</text></g><g><title>alloc::alloc::Global::grow_impl (15 samples, 4.76%)</title><rect x="68.8889%" y="469" width="4.7619%" height="15" fill="rgb(233,42,35)" fg:x="217" fg:w="15"/><text x="69.1389%" y="479.50">alloc:..</text></g><g><title>alloc::alloc::realloc (15 samples, 4.76%)</title><rect x="68.8889%" y="453" width="4.7619%" height="15" fill="rgb(231,13,6)" fg:x="217" fg:w="15"/><text x="69.1389%" y="463.50">alloc:..</text></g><g><title>_mi_heap_realloc_zero (15 samples, 4.76%)</title><rect x="68.8889%" y="437" width="4.7619%" height="15" fill="rgb(207,181,40)" fg:x="217" fg:w="15"/><text x="69.1389%" y="447.50">_mi_he..</text></g><g><title>_mi_memcpy_aligned (15 samples, 4.76%)</title><rect x="68.8889%" y="421" width="4.7619%" height="15" fill="rgb(254,173,49)" fg:x="217" fg:w="15"/><text x="69.1389%" y="431.50">_mi_me..</text></g><g><title>_mi_memcpy (15 samples, 4.76%)</title><rect x="68.8889%" y="405" width="4.7619%" height="15" fill="rgb(221,1,38)" fg:x="217" fg:w="15"/><text x="69.1389%" y="415.50">_mi_me..</text></g><g><title>memcpy (15 samples, 4.76%)</title><rect x="68.8889%" y="389" width="4.7619%" height="15" fill="rgb(206,124,46)" fg:x="217" fg:w="15"/><text x="69.1389%" y="399.50">memcpy</text></g><g><title>[libc.so.6] (15 samples, 4.76%)</title><rect x="68.8889%" y="373" width="4.7619%" height="15" fill="rgb(249,21,11)" fg:x="217" fg:w="15"/><text x="69.1389%" y="383.50">[libc...</text></g><g><title>[unknown] (14 samples, 4.44%)</title><rect x="69.2063%" y="357" width="4.4444%" height="15" fill="rgb(222,201,40)" fg:x="218" fg:w="14"/><text x="69.4563%" y="367.50">[unkn..</text></g><g><title>[unknown] (9 samples, 2.86%)</title><rect x="70.7937%" y="341" width="2.8571%" height="15" fill="rgb(235,61,29)" fg:x="223" fg:w="9"/><text x="71.0437%" y="351.50">[u..</text></g><g><title>[unknown] (9 samples, 2.86%)</title><rect x="70.7937%" y="325" width="2.8571%" height="15" fill="rgb(219,207,3)" fg:x="223" fg:w="9"/><text x="71.0437%" y="335.50">[u..</text></g><g><title>[unknown] (9 samples, 2.86%)</title><rect x="70.7937%" y="309" width="2.8571%" height="15" fill="rgb(222,56,46)" fg:x="223" fg:w="9"/><text x="71.0437%" y="319.50">[u..</text></g><g><title>[unknown] (7 samples, 2.22%)</title><rect x="71.4286%" y="293" width="2.2222%" height="15" fill="rgb(239,76,54)" fg:x="225" fg:w="7"/><text x="71.6786%" y="303.50">[..</text></g><g><title>[unknown] (7 samples, 2.22%)</title><rect x="71.4286%" y="277" width="2.2222%" height="15" fill="rgb(231,124,27)" fg:x="225" fg:w="7"/><text x="71.6786%" y="287.50">[..</text></g><g><title>[unknown] (7 samples, 2.22%)</title><rect x="71.4286%" y="261" width="2.2222%" height="15" fill="rgb(249,195,6)" fg:x="225" fg:w="7"/><text x="71.6786%" y="271.50">[..</text></g><g><title>[unknown] (7 samples, 2.22%)</title><rect x="71.4286%" y="245" width="2.2222%" height="15" fill="rgb(237,174,47)" fg:x="225" fg:w="7"/><text x="71.6786%" y="255.50">[..</text></g><g><title>[unknown] (7 samples, 2.22%)</title><rect x="71.4286%" y="229" width="2.2222%" height="15" fill="rgb(206,201,31)" fg:x="225" fg:w="7"/><text x="71.6786%" y="239.50">[..</text></g><g><title>[unknown] (7 samples, 2.22%)</title><rect x="71.4286%" y="213" width="2.2222%" height="15" fill="rgb(231,57,52)" fg:x="225" fg:w="7"/><text x="71.6786%" y="223.50">[..</text></g><g><title>[unknown] (7 samples, 2.22%)</title><rect x="71.4286%" y="197" width="2.2222%" height="15" fill="rgb(248,177,22)" fg:x="225" fg:w="7"/><text x="71.6786%" y="207.50">[..</text></g><g><title>[unknown] (4 samples, 1.27%)</title><rect x="72.3810%" y="181" width="1.2698%" height="15" fill="rgb(215,211,37)" fg:x="228" fg:w="4"/><text x="72.6310%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="73.3333%" y="165" width="0.3175%" height="15" fill="rgb(241,128,51)" fg:x="231" fg:w="1"/><text x="73.5833%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="73.3333%" y="149" width="0.3175%" height="15" fill="rgb(227,165,31)" fg:x="231" fg:w="1"/><text x="73.5833%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="73.3333%" y="133" width="0.3175%" height="15" fill="rgb(228,167,24)" fg:x="231" fg:w="1"/><text x="73.5833%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (23 samples, 7.30%)</title><rect x="68.2540%" y="549" width="7.3016%" height="15" fill="rgb(228,143,12)" fg:x="215" fg:w="23"/><text x="68.5040%" y="559.50">alloc::vec..</text></g><g><title>core::ptr::write (6 samples, 1.90%)</title><rect x="73.6508%" y="533" width="1.9048%" height="15" fill="rgb(249,149,8)" fg:x="232" fg:w="6"/><text x="73.9008%" y="543.50">c..</text></g><g><title>[unknown] (4 samples, 1.27%)</title><rect x="74.2857%" y="517" width="1.2698%" height="15" fill="rgb(243,35,44)" fg:x="234" fg:w="4"/><text x="74.5357%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="74.9206%" y="501" width="0.6349%" height="15" fill="rgb(246,89,9)" fg:x="236" fg:w="2"/><text x="75.1706%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="74.9206%" y="485" width="0.6349%" height="15" fill="rgb(233,213,13)" fg:x="236" fg:w="2"/><text x="75.1706%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="74.9206%" y="469" width="0.6349%" height="15" fill="rgb(233,141,41)" fg:x="236" fg:w="2"/><text x="75.1706%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="74.9206%" y="453" width="0.6349%" height="15" fill="rgb(239,167,4)" fg:x="236" fg:w="2"/><text x="75.1706%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="74.9206%" y="437" width="0.6349%" height="15" fill="rgb(209,217,16)" fg:x="236" fg:w="2"/><text x="75.1706%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="74.9206%" y="421" width="0.6349%" height="15" fill="rgb(219,88,35)" fg:x="236" fg:w="2"/><text x="75.1706%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="75.2381%" y="405" width="0.3175%" height="15" fill="rgb(220,193,23)" fg:x="237" fg:w="1"/><text x="75.4881%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="75.2381%" y="389" width="0.3175%" height="15" fill="rgb(230,90,52)" fg:x="237" fg:w="1"/><text x="75.4881%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="75.2381%" y="373" width="0.3175%" height="15" fill="rgb(252,106,19)" fg:x="237" fg:w="1"/><text x="75.4881%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="75.2381%" y="357" width="0.3175%" height="15" fill="rgb(206,74,20)" fg:x="237" fg:w="1"/><text x="75.4881%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u16,demoparser::parsing::data_table::ServerClass,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.32%)</title><rect x="75.5556%" y="549" width="0.3175%" height="15" fill="rgb(230,138,44)" fg:x="238" fg:w="1"/><text x="75.8056%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u16,demoparser::parsing::data_table::ServerClass,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.32%)</title><rect x="75.5556%" y="533" width="0.3175%" height="15" fill="rgb(235,182,43)" fg:x="238" fg:w="1"/><text x="75.8056%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u16,demoparser::parsing::data_table::ServerClass)&gt;&gt; (1 samples, 0.32%)</title><rect x="75.5556%" y="517" width="0.3175%" height="15" fill="rgb(242,16,51)" fg:x="238" fg:w="1"/><text x="75.8056%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.32%)</title><rect x="75.5556%" y="501" width="0.3175%" height="15" fill="rgb(248,9,4)" fg:x="238" fg:w="1"/><text x="75.8056%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.32%)</title><rect x="75.5556%" y="485" width="0.3175%" height="15" fill="rgb(210,31,22)" fg:x="238" fg:w="1"/><text x="75.8056%" y="495.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.32%)</title><rect x="75.5556%" y="469" width="0.3175%" height="15" fill="rgb(239,54,39)" fg:x="238" fg:w="1"/><text x="75.8056%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.32%)</title><rect x="75.5556%" y="453" width="0.3175%" height="15" fill="rgb(230,99,41)" fg:x="238" fg:w="1"/><text x="75.8056%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u16,demoparser::parsing::data_table::ServerClass)&gt; (1 samples, 0.32%)</title><rect x="75.5556%" y="437" width="0.3175%" height="15" fill="rgb(253,106,12)" fg:x="238" fg:w="1"/><text x="75.8056%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::data_table::ServerClass&gt; (1 samples, 0.32%)</title><rect x="75.5556%" y="421" width="0.3175%" height="15" fill="rgb(213,46,41)" fg:x="238" fg:w="1"/><text x="75.8056%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::entities::Prop&gt;&gt; (1 samples, 0.32%)</title><rect x="75.5556%" y="405" width="0.3175%" height="15" fill="rgb(215,133,35)" fg:x="238" fg:w="1"/><text x="75.8056%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;demoparser::parsing::entities::Prop&gt;&gt; (1 samples, 0.32%)</title><rect x="75.5556%" y="389" width="0.3175%" height="15" fill="rgb(213,28,5)" fg:x="238" fg:w="1"/><text x="75.8056%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.32%)</title><rect x="75.5556%" y="373" width="0.3175%" height="15" fill="rgb(215,77,49)" fg:x="238" fg:w="1"/><text x="75.8056%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.32%)</title><rect x="75.5556%" y="357" width="0.3175%" height="15" fill="rgb(248,100,22)" fg:x="238" fg:w="1"/><text x="75.8056%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.32%)</title><rect x="75.5556%" y="341" width="0.3175%" height="15" fill="rgb(208,67,9)" fg:x="238" fg:w="1"/><text x="75.8056%" y="351.50"></text></g><g><title>_mi_segment_page_free (1 samples, 0.32%)</title><rect x="75.5556%" y="325" width="0.3175%" height="15" fill="rgb(219,133,21)" fg:x="238" fg:w="1"/><text x="75.8056%" y="335.50"></text></g><g><title>mi_segment_page_clear (1 samples, 0.32%)</title><rect x="75.5556%" y="309" width="0.3175%" height="15" fill="rgb(246,46,29)" fg:x="238" fg:w="1"/><text x="75.8056%" y="319.50"></text></g><g><title>mi_segment_span_free_coalesce (1 samples, 0.32%)</title><rect x="75.5556%" y="293" width="0.3175%" height="15" fill="rgb(246,185,52)" fg:x="238" fg:w="1"/><text x="75.8056%" y="303.50"></text></g><g><title>mi_segment_span_free (1 samples, 0.32%)</title><rect x="75.5556%" y="277" width="0.3175%" height="15" fill="rgb(252,136,11)" fg:x="238" fg:w="1"/><text x="75.8056%" y="287.50"></text></g><g><title>mi_span_queue_push (1 samples, 0.32%)</title><rect x="75.5556%" y="261" width="0.3175%" height="15" fill="rgb(219,138,53)" fg:x="238" fg:w="1"/><text x="75.8056%" y="271.50"></text></g><g><title>crossbeam_queue::seg_queue::SegQueue&lt;T&gt;::len (15 samples, 4.76%)</title><rect x="75.8730%" y="549" width="4.7619%" height="15" fill="rgb(211,51,23)" fg:x="239" fg:w="15"/><text x="76.1230%" y="559.50">crossb..</text></g><g><title>core::sync::atomic::AtomicUsize::load (13 samples, 4.13%)</title><rect x="76.5079%" y="533" width="4.1270%" height="15" fill="rgb(247,221,28)" fg:x="241" fg:w="13"/><text x="76.7579%" y="543.50">core..</text></g><g><title>core::sync::atomic::atomic_load (13 samples, 4.13%)</title><rect x="76.5079%" y="517" width="4.1270%" height="15" fill="rgb(251,222,45)" fg:x="241" fg:w="13"/><text x="76.7579%" y="527.50">core..</text></g><g><title>_mi_free_block_mt (1 samples, 0.32%)</title><rect x="81.9048%" y="533" width="0.3175%" height="15" fill="rgb(217,162,53)" fg:x="258" fg:w="1"/><text x="82.1548%" y="543.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.32%)</title><rect x="82.2222%" y="533" width="0.3175%" height="15" fill="rgb(229,93,14)" fg:x="259" fg:w="1"/><text x="82.4722%" y="543.50"></text></g><g><title>[libc.so.6] (1 samples, 0.32%)</title><rect x="82.2222%" y="517" width="0.3175%" height="15" fill="rgb(209,67,49)" fg:x="259" fg:w="1"/><text x="82.4722%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (5 samples, 1.59%)</title><rect x="82.5397%" y="533" width="1.5873%" height="15" fill="rgb(213,87,29)" fg:x="260" fg:w="5"/><text x="82.7897%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_or (5 samples, 1.59%)</title><rect x="82.5397%" y="517" width="1.5873%" height="15" fill="rgb(205,151,52)" fg:x="260" fg:w="5"/><text x="82.7897%" y="527.50"></text></g><g><title>crossbeam_queue::seg_queue::Slot&lt;T&gt;::wait_write (1 samples, 0.32%)</title><rect x="84.1270%" y="533" width="0.3175%" height="15" fill="rgb(253,215,39)" fg:x="265" fg:w="1"/><text x="84.3770%" y="543.50"></text></g><g><title>crossbeam_queue::seg_queue::SegQueue&lt;T&gt;::pop (22 samples, 6.98%)</title><rect x="80.6349%" y="549" width="6.9841%" height="15" fill="rgb(221,220,41)" fg:x="254" fg:w="22"/><text x="80.8849%" y="559.50">crossbeam..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (10 samples, 3.17%)</title><rect x="84.4444%" y="533" width="3.1746%" height="15" fill="rgb(218,133,21)" fg:x="266" fg:w="10"/><text x="84.6944%" y="543.50">cro..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (10 samples, 3.17%)</title><rect x="84.4444%" y="517" width="3.1746%" height="15" fill="rgb(221,193,43)" fg:x="266" fg:w="10"/><text x="84.6944%" y="527.50">cor..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (10 samples, 3.17%)</title><rect x="84.4444%" y="501" width="3.1746%" height="15" fill="rgb(240,128,52)" fg:x="266" fg:w="10"/><text x="84.6944%" y="511.50">&lt;co..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (2 samples, 0.63%)</title><rect x="86.9841%" y="485" width="0.6349%" height="15" fill="rgb(253,114,12)" fg:x="274" fg:w="2"/><text x="87.2341%" y="495.50"></text></g><g><title>demoparser::parsing::parser::Parser::msg_handler (8 samples, 2.54%)</title><rect x="87.6190%" y="549" width="2.5397%" height="15" fill="rgb(215,223,47)" fg:x="276" fg:w="8"/><text x="87.8690%" y="559.50">de..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;demoparser::parsing::parser::ParsingMaps&gt;&gt;&gt; (8 samples, 2.54%)</title><rect x="87.6190%" y="533" width="2.5397%" height="15" fill="rgb(248,225,23)" fg:x="276" fg:w="8"/><text x="87.8690%" y="543.50">co..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 2.54%)</title><rect x="87.6190%" y="517" width="2.5397%" height="15" fill="rgb(250,108,0)" fg:x="276" fg:w="8"/><text x="87.8690%" y="527.50">&lt;a..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.32%)</title><rect x="89.8413%" y="501" width="0.3175%" height="15" fill="rgb(228,208,7)" fg:x="283" fg:w="1"/><text x="90.0913%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.32%)</title><rect x="89.8413%" y="485" width="0.3175%" height="15" fill="rgb(244,45,10)" fg:x="283" fg:w="1"/><text x="90.0913%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.32%)</title><rect x="90.1587%" y="533" width="0.3175%" height="15" fill="rgb(207,125,25)" fg:x="284" fg:w="1"/><text x="90.4087%" y="543.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.32%)</title><rect x="90.1587%" y="517" width="0.3175%" height="15" fill="rgb(210,195,18)" fg:x="284" fg:w="1"/><text x="90.4087%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.32%)</title><rect x="90.1587%" y="501" width="0.3175%" height="15" fill="rgb(249,80,12)" fg:x="284" fg:w="1"/><text x="90.4087%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.32%)</title><rect x="90.1587%" y="485" width="0.3175%" height="15" fill="rgb(221,65,9)" fg:x="284" fg:w="1"/><text x="90.4087%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1 samples, 0.32%)</title><rect x="90.1587%" y="469" width="0.3175%" height="15" fill="rgb(235,49,36)" fg:x="284" fg:w="1"/><text x="90.4087%" y="479.50"></text></g><g><title>core::clone::Clone::clone (1 samples, 0.32%)</title><rect x="90.1587%" y="453" width="0.3175%" height="15" fill="rgb(225,32,20)" fg:x="284" fg:w="1"/><text x="90.4087%" y="463.50"></text></g><g><title>&lt;demoparser::parsing::data_table::ServerClass as core::clone::Clone&gt;::clone (1 samples, 0.32%)</title><rect x="90.1587%" y="437" width="0.3175%" height="15" fill="rgb(215,141,46)" fg:x="284" fg:w="1"/><text x="90.4087%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.32%)</title><rect x="90.1587%" y="421" width="0.3175%" height="15" fill="rgb(250,160,47)" fg:x="284" fg:w="1"/><text x="90.4087%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.32%)</title><rect x="90.1587%" y="405" width="0.3175%" height="15" fill="rgb(216,222,40)" fg:x="284" fg:w="1"/><text x="90.4087%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.32%)</title><rect x="90.1587%" y="389" width="0.3175%" height="15" fill="rgb(234,217,39)" fg:x="284" fg:w="1"/><text x="90.4087%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.32%)</title><rect x="90.1587%" y="373" width="0.3175%" height="15" fill="rgb(207,178,40)" fg:x="284" fg:w="1"/><text x="90.4087%" y="383.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.32%)</title><rect x="90.1587%" y="357" width="0.3175%" height="15" fill="rgb(221,136,13)" fg:x="284" fg:w="1"/><text x="90.4087%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="90.1587%" y="341" width="0.3175%" height="15" fill="rgb(249,199,10)" fg:x="284" fg:w="1"/><text x="90.4087%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="90.1587%" y="325" width="0.3175%" height="15" fill="rgb(249,222,13)" fg:x="284" fg:w="1"/><text x="90.4087%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="90.1587%" y="309" width="0.3175%" height="15" fill="rgb(244,185,38)" fg:x="284" fg:w="1"/><text x="90.4087%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="90.1587%" y="293" width="0.3175%" height="15" fill="rgb(236,202,9)" fg:x="284" fg:w="1"/><text x="90.4087%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;demoparser::parsing::parser::ParsingMaps&gt;&gt; (5 samples, 1.59%)</title><rect x="90.4762%" y="533" width="1.5873%" height="15" fill="rgb(250,229,37)" fg:x="285" fg:w="5"/><text x="90.7262%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 1.59%)</title><rect x="90.4762%" y="517" width="1.5873%" height="15" fill="rgb(206,174,23)" fg:x="285" fg:w="5"/><text x="90.7262%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (5 samples, 1.59%)</title><rect x="90.4762%" y="501" width="1.5873%" height="15" fill="rgb(211,33,43)" fg:x="285" fg:w="5"/><text x="90.7262%" y="511.50"></text></g><g><title>std::panic::catch_unwind (231 samples, 73.33%)</title><rect x="19.0476%" y="677" width="73.3333%" height="15" fill="rgb(245,58,50)" fg:x="60" fg:w="231"/><text x="19.2976%" y="687.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (231 samples, 73.33%)</title><rect x="19.0476%" y="661" width="73.3333%" height="15" fill="rgb(244,68,36)" fg:x="60" fg:w="231"/><text x="19.2976%" y="671.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (231 samples, 73.33%)</title><rect x="19.0476%" y="645" width="73.3333%" height="15" fill="rgb(232,229,15)" fg:x="60" fg:w="231"/><text x="19.2976%" y="655.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (231 samples, 73.33%)</title><rect x="19.0476%" y="629" width="73.3333%" height="15" fill="rgb(254,30,23)" fg:x="60" fg:w="231"/><text x="19.2976%" y="639.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (231 samples, 73.33%)</title><rect x="19.0476%" y="613" width="73.3333%" height="15" fill="rgb(235,160,14)" fg:x="60" fg:w="231"/><text x="19.2976%" y="623.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (231 samples, 73.33%)</title><rect x="19.0476%" y="597" width="73.3333%" height="15" fill="rgb(212,155,44)" fg:x="60" fg:w="231"/><text x="19.2976%" y="607.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>demoparser::parsing::parser::Parser::start_parser_thread_main::{{closure}} (95 samples, 30.16%)</title><rect x="62.2222%" y="581" width="30.1587%" height="15" fill="rgb(226,2,50)" fg:x="196" fg:w="95"/><text x="62.4722%" y="591.50">demoparser::parsing::parser::Parser::start_parser..</text></g><g><title>demoparser::parsing::parser::Parser::start_parser_thread (95 samples, 30.16%)</title><rect x="62.2222%" y="565" width="30.1587%" height="15" fill="rgb(234,177,6)" fg:x="196" fg:w="95"/><text x="62.4722%" y="575.50">demoparser::parsing::parser::Parser::start_parser..</text></g><g><title>demoparser::parsing::parser::Parser::wait_for_map (7 samples, 2.22%)</title><rect x="90.1587%" y="549" width="2.2222%" height="15" fill="rgb(217,24,9)" fg:x="284" fg:w="7"/><text x="90.4087%" y="559.50">d..</text></g><g><title>std::thread::sleep (1 samples, 0.32%)</title><rect x="92.0635%" y="533" width="0.3175%" height="15" fill="rgb(220,13,46)" fg:x="290" fg:w="1"/><text x="92.3135%" y="543.50"></text></g><g><title>std::sys::unix::thread::Thread::sleep (1 samples, 0.32%)</title><rect x="92.0635%" y="517" width="0.3175%" height="15" fill="rgb(239,221,27)" fg:x="290" fg:w="1"/><text x="92.3135%" y="527.50"></text></g><g><title>__GI___nanosleep (1 samples, 0.32%)</title><rect x="92.0635%" y="501" width="0.3175%" height="15" fill="rgb(222,198,25)" fg:x="290" fg:w="1"/><text x="92.3135%" y="511.50"></text></g><g><title>__GI___clock_nanosleep (1 samples, 0.32%)</title><rect x="92.0635%" y="485" width="0.3175%" height="15" fill="rgb(211,99,13)" fg:x="290" fg:w="1"/><text x="92.3135%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.0635%" y="469" width="0.3175%" height="15" fill="rgb(232,111,31)" fg:x="290" fg:w="1"/><text x="92.3135%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.0635%" y="453" width="0.3175%" height="15" fill="rgb(245,82,37)" fg:x="290" fg:w="1"/><text x="92.3135%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.0635%" y="437" width="0.3175%" height="15" fill="rgb(227,149,46)" fg:x="290" fg:w="1"/><text x="92.3135%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.0635%" y="421" width="0.3175%" height="15" fill="rgb(218,36,50)" fg:x="290" fg:w="1"/><text x="92.3135%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.0635%" y="405" width="0.3175%" height="15" fill="rgb(226,80,48)" fg:x="290" fg:w="1"/><text x="92.3135%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.0635%" y="389" width="0.3175%" height="15" fill="rgb(238,224,15)" fg:x="290" fg:w="1"/><text x="92.3135%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.0635%" y="373" width="0.3175%" height="15" fill="rgb(241,136,10)" fg:x="290" fg:w="1"/><text x="92.3135%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.0635%" y="357" width="0.3175%" height="15" fill="rgb(208,32,45)" fg:x="290" fg:w="1"/><text x="92.3135%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.0635%" y="341" width="0.3175%" height="15" fill="rgb(207,135,9)" fg:x="290" fg:w="1"/><text x="92.3135%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.0635%" y="325" width="0.3175%" height="15" fill="rgb(206,86,44)" fg:x="290" fg:w="1"/><text x="92.3135%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.0635%" y="309" width="0.3175%" height="15" fill="rgb(245,177,15)" fg:x="290" fg:w="1"/><text x="92.3135%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.0635%" y="293" width="0.3175%" height="15" fill="rgb(206,64,50)" fg:x="290" fg:w="1"/><text x="92.3135%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.0635%" y="277" width="0.3175%" height="15" fill="rgb(234,36,40)" fg:x="290" fg:w="1"/><text x="92.3135%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.0635%" y="261" width="0.3175%" height="15" fill="rgb(213,64,8)" fg:x="290" fg:w="1"/><text x="92.3135%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.0635%" y="245" width="0.3175%" height="15" fill="rgb(210,75,36)" fg:x="290" fg:w="1"/><text x="92.3135%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.0635%" y="229" width="0.3175%" height="15" fill="rgb(229,88,21)" fg:x="290" fg:w="1"/><text x="92.3135%" y="239.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.32%)</title><rect x="92.3810%" y="517" width="0.3175%" height="15" fill="rgb(252,204,47)" fg:x="291" fg:w="1"/><text x="92.6310%" y="527.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.32%)</title><rect x="92.3810%" y="501" width="0.3175%" height="15" fill="rgb(208,77,27)" fg:x="291" fg:w="1"/><text x="92.6310%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.3810%" y="485" width="0.3175%" height="15" fill="rgb(221,76,26)" fg:x="291" fg:w="1"/><text x="92.6310%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.3810%" y="469" width="0.3175%" height="15" fill="rgb(225,139,18)" fg:x="291" fg:w="1"/><text x="92.6310%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.3810%" y="453" width="0.3175%" height="15" fill="rgb(230,137,11)" fg:x="291" fg:w="1"/><text x="92.6310%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.3810%" y="437" width="0.3175%" height="15" fill="rgb(212,28,1)" fg:x="291" fg:w="1"/><text x="92.6310%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.3810%" y="421" width="0.3175%" height="15" fill="rgb(248,164,17)" fg:x="291" fg:w="1"/><text x="92.6310%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.3810%" y="405" width="0.3175%" height="15" fill="rgb(222,171,42)" fg:x="291" fg:w="1"/><text x="92.6310%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.3810%" y="389" width="0.3175%" height="15" fill="rgb(243,84,45)" fg:x="291" fg:w="1"/><text x="92.6310%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.3810%" y="373" width="0.3175%" height="15" fill="rgb(252,49,23)" fg:x="291" fg:w="1"/><text x="92.6310%" y="383.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (233 samples, 73.97%)</title><rect x="19.0476%" y="741" width="73.9683%" height="15" fill="rgb(215,19,7)" fg:x="60" fg:w="233"/><text x="19.2976%" y="751.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (233 samples, 73.97%)</title><rect x="19.0476%" y="725" width="73.9683%" height="15" fill="rgb(238,81,41)" fg:x="60" fg:w="233"/><text x="19.2976%" y="735.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (233 samples, 73.97%)</title><rect x="19.0476%" y="709" width="73.9683%" height="15" fill="rgb(210,199,37)" fg:x="60" fg:w="233"/><text x="19.2976%" y="719.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (233 samples, 73.97%)</title><rect x="19.0476%" y="693" width="73.9683%" height="15" fill="rgb(244,192,49)" fg:x="60" fg:w="233"/><text x="19.2976%" y="703.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::sys::unix::thread::guard::current (2 samples, 0.63%)</title><rect x="92.3810%" y="677" width="0.6349%" height="15" fill="rgb(226,211,11)" fg:x="291" fg:w="2"/><text x="92.6310%" y="687.50"></text></g><g><title>__pthread_getattr_np (2 samples, 0.63%)</title><rect x="92.3810%" y="661" width="0.6349%" height="15" fill="rgb(236,162,54)" fg:x="291" fg:w="2"/><text x="92.6310%" y="671.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.63%)</title><rect x="92.3810%" y="645" width="0.6349%" height="15" fill="rgb(220,229,9)" fg:x="291" fg:w="2"/><text x="92.6310%" y="655.50"></text></g><g><title>tcache_init (2 samples, 0.63%)</title><rect x="92.3810%" y="629" width="0.6349%" height="15" fill="rgb(250,87,22)" fg:x="291" fg:w="2"/><text x="92.6310%" y="639.50"></text></g><g><title>tcache_init (2 samples, 0.63%)</title><rect x="92.3810%" y="613" width="0.6349%" height="15" fill="rgb(239,43,17)" fg:x="291" fg:w="2"/><text x="92.6310%" y="623.50"></text></g><g><title>arena_get2 (2 samples, 0.63%)</title><rect x="92.3810%" y="597" width="0.6349%" height="15" fill="rgb(231,177,25)" fg:x="291" fg:w="2"/><text x="92.6310%" y="607.50"></text></g><g><title>arena_get2 (2 samples, 0.63%)</title><rect x="92.3810%" y="581" width="0.6349%" height="15" fill="rgb(219,179,1)" fg:x="291" fg:w="2"/><text x="92.6310%" y="591.50"></text></g><g><title>_int_new_arena (2 samples, 0.63%)</title><rect x="92.3810%" y="565" width="0.6349%" height="15" fill="rgb(238,219,53)" fg:x="291" fg:w="2"/><text x="92.6310%" y="575.50"></text></g><g><title>new_heap (2 samples, 0.63%)</title><rect x="92.3810%" y="549" width="0.6349%" height="15" fill="rgb(232,167,36)" fg:x="291" fg:w="2"/><text x="92.6310%" y="559.50"></text></g><g><title>alloc_new_heap (2 samples, 0.63%)</title><rect x="92.3810%" y="533" width="0.6349%" height="15" fill="rgb(244,19,51)" fg:x="291" fg:w="2"/><text x="92.6310%" y="543.50"></text></g><g><title>__GI___mprotect (1 samples, 0.32%)</title><rect x="92.6984%" y="517" width="0.3175%" height="15" fill="rgb(224,6,22)" fg:x="292" fg:w="1"/><text x="92.9484%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.6984%" y="501" width="0.3175%" height="15" fill="rgb(224,145,5)" fg:x="292" fg:w="1"/><text x="92.9484%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.6984%" y="485" width="0.3175%" height="15" fill="rgb(234,130,49)" fg:x="292" fg:w="1"/><text x="92.9484%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.6984%" y="469" width="0.3175%" height="15" fill="rgb(254,6,2)" fg:x="292" fg:w="1"/><text x="92.9484%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.6984%" y="453" width="0.3175%" height="15" fill="rgb(208,96,46)" fg:x="292" fg:w="1"/><text x="92.9484%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.6984%" y="437" width="0.3175%" height="15" fill="rgb(239,3,39)" fg:x="292" fg:w="1"/><text x="92.9484%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.6984%" y="421" width="0.3175%" height="15" fill="rgb(233,210,1)" fg:x="292" fg:w="1"/><text x="92.9484%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.6984%" y="405" width="0.3175%" height="15" fill="rgb(244,137,37)" fg:x="292" fg:w="1"/><text x="92.9484%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="92.6984%" y="389" width="0.3175%" height="15" fill="rgb(240,136,2)" fg:x="292" fg:w="1"/><text x="92.9484%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1 samples, 0.32%)</title><rect x="93.0159%" y="709" width="0.3175%" height="15" fill="rgb(239,18,37)" fg:x="293" fg:w="1"/><text x="93.2659%" y="719.50"></text></g><g><title>__clone3 (243 samples, 77.14%)</title><rect x="17.7778%" y="789" width="77.1429%" height="15" fill="rgb(218,185,22)" fg:x="56" fg:w="243"/><text x="18.0278%" y="799.50">__clone3</text></g><g><title>start_thread (243 samples, 77.14%)</title><rect x="17.7778%" y="773" width="77.1429%" height="15" fill="rgb(225,218,4)" fg:x="56" fg:w="243"/><text x="18.0278%" y="783.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (240 samples, 76.19%)</title><rect x="18.7302%" y="757" width="76.1905%" height="15" fill="rgb(230,182,32)" fg:x="59" fg:w="240"/><text x="18.9802%" y="767.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (6 samples, 1.90%)</title><rect x="93.0159%" y="741" width="1.9048%" height="15" fill="rgb(242,56,43)" fg:x="293" fg:w="6"/><text x="93.2659%" y="751.50">s..</text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (6 samples, 1.90%)</title><rect x="93.0159%" y="725" width="1.9048%" height="15" fill="rgb(233,99,24)" fg:x="293" fg:w="6"/><text x="93.2659%" y="735.50">s..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (5 samples, 1.59%)</title><rect x="93.3333%" y="709" width="1.5873%" height="15" fill="rgb(234,209,42)" fg:x="294" fg:w="5"/><text x="93.5833%" y="719.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (5 samples, 1.59%)</title><rect x="93.3333%" y="693" width="1.5873%" height="15" fill="rgb(227,7,12)" fg:x="294" fg:w="5"/><text x="93.5833%" y="703.50"></text></g><g><title>__GI___mmap64 (5 samples, 1.59%)</title><rect x="93.3333%" y="677" width="1.5873%" height="15" fill="rgb(245,203,43)" fg:x="294" fg:w="5"/><text x="93.5833%" y="687.50"></text></g><g><title>__GI___mmap64 (5 samples, 1.59%)</title><rect x="93.3333%" y="661" width="1.5873%" height="15" fill="rgb(238,205,33)" fg:x="294" fg:w="5"/><text x="93.5833%" y="671.50"></text></g><g><title>[unknown] (5 samples, 1.59%)</title><rect x="93.3333%" y="645" width="1.5873%" height="15" fill="rgb(231,56,7)" fg:x="294" fg:w="5"/><text x="93.5833%" y="655.50"></text></g><g><title>[unknown] (5 samples, 1.59%)</title><rect x="93.3333%" y="629" width="1.5873%" height="15" fill="rgb(244,186,29)" fg:x="294" fg:w="5"/><text x="93.5833%" y="639.50"></text></g><g><title>[unknown] (5 samples, 1.59%)</title><rect x="93.3333%" y="613" width="1.5873%" height="15" fill="rgb(234,111,31)" fg:x="294" fg:w="5"/><text x="93.5833%" y="623.50"></text></g><g><title>[unknown] (5 samples, 1.59%)</title><rect x="93.3333%" y="597" width="1.5873%" height="15" fill="rgb(241,149,10)" fg:x="294" fg:w="5"/><text x="93.5833%" y="607.50"></text></g><g><title>[unknown] (5 samples, 1.59%)</title><rect x="93.3333%" y="581" width="1.5873%" height="15" fill="rgb(249,206,44)" fg:x="294" fg:w="5"/><text x="93.5833%" y="591.50"></text></g><g><title>[unknown] (5 samples, 1.59%)</title><rect x="93.3333%" y="565" width="1.5873%" height="15" fill="rgb(251,153,30)" fg:x="294" fg:w="5"/><text x="93.5833%" y="575.50"></text></g><g><title>[unknown] (5 samples, 1.59%)</title><rect x="93.3333%" y="549" width="1.5873%" height="15" fill="rgb(239,152,38)" fg:x="294" fg:w="5"/><text x="93.5833%" y="559.50"></text></g><g><title>[unknown] (5 samples, 1.59%)</title><rect x="93.3333%" y="533" width="1.5873%" height="15" fill="rgb(249,139,47)" fg:x="294" fg:w="5"/><text x="93.5833%" y="543.50"></text></g><g><title>[unknown] (5 samples, 1.59%)</title><rect x="93.3333%" y="517" width="1.5873%" height="15" fill="rgb(244,64,35)" fg:x="294" fg:w="5"/><text x="93.5833%" y="527.50"></text></g><g><title>__GI_exit (2 samples, 0.63%)</title><rect x="94.9206%" y="741" width="0.6349%" height="15" fill="rgb(216,46,15)" fg:x="299" fg:w="2"/><text x="95.1706%" y="751.50"></text></g><g><title>__run_exit_handlers (2 samples, 0.63%)</title><rect x="94.9206%" y="725" width="0.6349%" height="15" fill="rgb(250,74,19)" fg:x="299" fg:w="2"/><text x="95.1706%" y="735.50"></text></g><g><title>mi_process_done (2 samples, 0.63%)</title><rect x="94.9206%" y="709" width="0.6349%" height="15" fill="rgb(249,42,33)" fg:x="299" fg:w="2"/><text x="95.1706%" y="719.50"></text></g><g><title>mi_process_done (2 samples, 0.63%)</title><rect x="94.9206%" y="693" width="0.6349%" height="15" fill="rgb(242,149,17)" fg:x="299" fg:w="2"/><text x="95.1706%" y="703.50"></text></g><g><title>mi_heap_collect_ex (2 samples, 0.63%)</title><rect x="94.9206%" y="677" width="0.6349%" height="15" fill="rgb(244,29,21)" fg:x="299" fg:w="2"/><text x="95.1706%" y="687.50"></text></g><g><title>mi_segment_cache_purge (2 samples, 0.63%)</title><rect x="94.9206%" y="661" width="0.6349%" height="15" fill="rgb(220,130,37)" fg:x="299" fg:w="2"/><text x="95.1706%" y="671.50"></text></g><g><title>mi_commit_mask_decommit (2 samples, 0.63%)</title><rect x="94.9206%" y="645" width="0.6349%" height="15" fill="rgb(211,67,2)" fg:x="299" fg:w="2"/><text x="95.1706%" y="655.50"></text></g><g><title>_mi_os_decommit (2 samples, 0.63%)</title><rect x="94.9206%" y="629" width="0.6349%" height="15" fill="rgb(235,68,52)" fg:x="299" fg:w="2"/><text x="95.1706%" y="639.50"></text></g><g><title>mi_os_commitx (2 samples, 0.63%)</title><rect x="94.9206%" y="613" width="0.6349%" height="15" fill="rgb(246,142,3)" fg:x="299" fg:w="2"/><text x="95.1706%" y="623.50"></text></g><g><title>__GI_madvise (2 samples, 0.63%)</title><rect x="94.9206%" y="597" width="0.6349%" height="15" fill="rgb(241,25,7)" fg:x="299" fg:w="2"/><text x="95.1706%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="94.9206%" y="581" width="0.6349%" height="15" fill="rgb(242,119,39)" fg:x="299" fg:w="2"/><text x="95.1706%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="94.9206%" y="565" width="0.6349%" height="15" fill="rgb(241,98,45)" fg:x="299" fg:w="2"/><text x="95.1706%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="94.9206%" y="549" width="0.6349%" height="15" fill="rgb(254,28,30)" fg:x="299" fg:w="2"/><text x="95.1706%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="94.9206%" y="533" width="0.6349%" height="15" fill="rgb(241,142,54)" fg:x="299" fg:w="2"/><text x="95.1706%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="94.9206%" y="517" width="0.6349%" height="15" fill="rgb(222,85,15)" fg:x="299" fg:w="2"/><text x="95.1706%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="94.9206%" y="501" width="0.6349%" height="15" fill="rgb(210,85,47)" fg:x="299" fg:w="2"/><text x="95.1706%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="94.9206%" y="485" width="0.6349%" height="15" fill="rgb(224,206,25)" fg:x="299" fg:w="2"/><text x="95.1706%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="94.9206%" y="469" width="0.6349%" height="15" fill="rgb(243,201,19)" fg:x="299" fg:w="2"/><text x="95.1706%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.63%)</title><rect x="94.9206%" y="453" width="0.6349%" height="15" fill="rgb(236,59,4)" fg:x="299" fg:w="2"/><text x="95.1706%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="95.2381%" y="437" width="0.3175%" height="15" fill="rgb(254,179,45)" fg:x="300" fg:w="1"/><text x="95.4881%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="95.2381%" y="421" width="0.3175%" height="15" fill="rgb(226,14,10)" fg:x="300" fg:w="1"/><text x="95.4881%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="95.2381%" y="405" width="0.3175%" height="15" fill="rgb(244,27,41)" fg:x="300" fg:w="1"/><text x="95.4881%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="95.2381%" y="389" width="0.3175%" height="15" fill="rgb(235,35,32)" fg:x="300" fg:w="1"/><text x="95.4881%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="95.2381%" y="373" width="0.3175%" height="15" fill="rgb(218,68,31)" fg:x="300" fg:w="1"/><text x="95.4881%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser::Parser&gt; (1 samples, 0.32%)</title><rect x="95.5556%" y="341" width="0.3175%" height="15" fill="rgb(207,120,37)" fg:x="301" fg:w="1"/><text x="95.8056%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;memmap2::Mmap&gt;&gt; (1 samples, 0.32%)</title><rect x="95.5556%" y="325" width="0.3175%" height="15" fill="rgb(227,98,0)" fg:x="301" fg:w="1"/><text x="95.8056%" y="335.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.32%)</title><rect x="95.5556%" y="309" width="0.3175%" height="15" fill="rgb(207,7,3)" fg:x="301" fg:w="1"/><text x="95.8056%" y="319.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.32%)</title><rect x="95.5556%" y="293" width="0.3175%" height="15" fill="rgb(206,98,19)" fg:x="301" fg:w="1"/><text x="95.8056%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;memmap2::Mmap&gt; (1 samples, 0.32%)</title><rect x="95.5556%" y="277" width="0.3175%" height="15" fill="rgb(217,5,26)" fg:x="301" fg:w="1"/><text x="95.8056%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;memmap2::os::MmapInner&gt; (1 samples, 0.32%)</title><rect x="95.5556%" y="261" width="0.3175%" height="15" fill="rgb(235,190,38)" fg:x="301" fg:w="1"/><text x="95.8056%" y="271.50"></text></g><g><title>__GI___munmap (1 samples, 0.32%)</title><rect x="95.5556%" y="245" width="0.3175%" height="15" fill="rgb(247,86,24)" fg:x="301" fg:w="1"/><text x="95.8056%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="95.5556%" y="229" width="0.3175%" height="15" fill="rgb(205,101,16)" fg:x="301" fg:w="1"/><text x="95.8056%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="95.5556%" y="213" width="0.3175%" height="15" fill="rgb(246,168,33)" fg:x="301" fg:w="1"/><text x="95.8056%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="95.5556%" y="197" width="0.3175%" height="15" fill="rgb(231,114,1)" fg:x="301" fg:w="1"/><text x="95.8056%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="95.5556%" y="181" width="0.3175%" height="15" fill="rgb(207,184,53)" fg:x="301" fg:w="1"/><text x="95.8056%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="95.5556%" y="165" width="0.3175%" height="15" fill="rgb(224,95,51)" fg:x="301" fg:w="1"/><text x="95.8056%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="95.5556%" y="149" width="0.3175%" height="15" fill="rgb(212,188,45)" fg:x="301" fg:w="1"/><text x="95.8056%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="95.5556%" y="133" width="0.3175%" height="15" fill="rgb(223,154,38)" fg:x="301" fg:w="1"/><text x="95.8056%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="95.5556%" y="117" width="0.3175%" height="15" fill="rgb(251,22,52)" fg:x="301" fg:w="1"/><text x="95.8056%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="95.5556%" y="101" width="0.3175%" height="15" fill="rgb(229,209,22)" fg:x="301" fg:w="1"/><text x="95.8056%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="95.5556%" y="85" width="0.3175%" height="15" fill="rgb(234,138,34)" fg:x="301" fg:w="1"/><text x="95.8056%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="95.5556%" y="69" width="0.3175%" height="15" fill="rgb(212,95,11)" fg:x="301" fg:w="1"/><text x="95.8056%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="95.5556%" y="53" width="0.3175%" height="15" fill="rgb(240,179,47)" fg:x="301" fg:w="1"/><text x="95.8056%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="95.5556%" y="37" width="0.3175%" height="15" fill="rgb(240,163,11)" fg:x="301" fg:w="1"/><text x="95.8056%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::parser::JobResult&gt;&gt; (1 samples, 0.32%)</title><rect x="95.8730%" y="325" width="0.3175%" height="15" fill="rgb(236,37,12)" fg:x="302" fg:w="1"/><text x="96.1230%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.32%)</title><rect x="95.8730%" y="309" width="0.3175%" height="15" fill="rgb(232,164,16)" fg:x="302" fg:w="1"/><text x="96.1230%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::parser::JobResult]&gt; (1 samples, 0.32%)</title><rect x="95.8730%" y="293" width="0.3175%" height="15" fill="rgb(244,205,15)" fg:x="302" fg:w="1"/><text x="96.1230%" y="303.50"></text></g><g><title>__libc_start_call_main (10 samples, 3.17%)</title><rect x="94.9206%" y="757" width="3.1746%" height="15" fill="rgb(223,117,47)" fg:x="299" fg:w="10"/><text x="95.1706%" y="767.50">__l..</text></g><g><title>main (8 samples, 2.54%)</title><rect x="95.5556%" y="741" width="2.5397%" height="15" fill="rgb(244,107,35)" fg:x="301" fg:w="8"/><text x="95.8056%" y="751.50">ma..</text></g><g><title>std::rt::lang_start_internal (8 samples, 2.54%)</title><rect x="95.5556%" y="725" width="2.5397%" height="15" fill="rgb(205,140,8)" fg:x="301" fg:w="8"/><text x="95.8056%" y="735.50">st..</text></g><g><title>std::panic::catch_unwind (8 samples, 2.54%)</title><rect x="95.5556%" y="709" width="2.5397%" height="15" fill="rgb(228,84,46)" fg:x="301" fg:w="8"/><text x="95.8056%" y="719.50">st..</text></g><g><title>std::panicking::try (8 samples, 2.54%)</title><rect x="95.5556%" y="693" width="2.5397%" height="15" fill="rgb(254,188,9)" fg:x="301" fg:w="8"/><text x="95.8056%" y="703.50">st..</text></g><g><title>std::panicking::try::do_call (8 samples, 2.54%)</title><rect x="95.5556%" y="677" width="2.5397%" height="15" fill="rgb(206,112,54)" fg:x="301" fg:w="8"/><text x="95.8056%" y="687.50">st..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (8 samples, 2.54%)</title><rect x="95.5556%" y="661" width="2.5397%" height="15" fill="rgb(216,84,49)" fg:x="301" fg:w="8"/><text x="95.8056%" y="671.50">st..</text></g><g><title>std::panic::catch_unwind (8 samples, 2.54%)</title><rect x="95.5556%" y="645" width="2.5397%" height="15" fill="rgb(214,194,35)" fg:x="301" fg:w="8"/><text x="95.8056%" y="655.50">st..</text></g><g><title>std::panicking::try (8 samples, 2.54%)</title><rect x="95.5556%" y="629" width="2.5397%" height="15" fill="rgb(249,28,3)" fg:x="301" fg:w="8"/><text x="95.8056%" y="639.50">st..</text></g><g><title>std::panicking::try::do_call (8 samples, 2.54%)</title><rect x="95.5556%" y="613" width="2.5397%" height="15" fill="rgb(222,56,52)" fg:x="301" fg:w="8"/><text x="95.8056%" y="623.50">st..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (8 samples, 2.54%)</title><rect x="95.5556%" y="597" width="2.5397%" height="15" fill="rgb(245,217,50)" fg:x="301" fg:w="8"/><text x="95.8056%" y="607.50">co..</text></g><g><title>std::rt::lang_start::{{closure}} (8 samples, 2.54%)</title><rect x="95.5556%" y="581" width="2.5397%" height="15" fill="rgb(213,201,24)" fg:x="301" fg:w="8"/><text x="95.8056%" y="591.50">st..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (8 samples, 2.54%)</title><rect x="95.5556%" y="565" width="2.5397%" height="15" fill="rgb(248,116,28)" fg:x="301" fg:w="8"/><text x="95.8056%" y="575.50">st..</text></g><g><title>core::ops::function::FnOnce::call_once (8 samples, 2.54%)</title><rect x="95.5556%" y="549" width="2.5397%" height="15" fill="rgb(219,72,43)" fg:x="301" fg:w="8"/><text x="95.8056%" y="559.50">co..</text></g><g><title>demoparser::main (8 samples, 2.54%)</title><rect x="95.5556%" y="533" width="2.5397%" height="15" fill="rgb(209,138,14)" fg:x="301" fg:w="8"/><text x="95.8056%" y="543.50">de..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 2.54%)</title><rect x="95.5556%" y="517" width="2.5397%" height="15" fill="rgb(222,18,33)" fg:x="301" fg:w="8"/><text x="95.8056%" y="527.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 2.54%)</title><rect x="95.5556%" y="501" width="2.5397%" height="15" fill="rgb(213,199,7)" fg:x="301" fg:w="8"/><text x="95.8056%" y="511.50">&lt;a..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (8 samples, 2.54%)</title><rect x="95.5556%" y="485" width="2.5397%" height="15" fill="rgb(250,110,10)" fg:x="301" fg:w="8"/><text x="95.8056%" y="495.50">al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 2.54%)</title><rect x="95.5556%" y="469" width="2.5397%" height="15" fill="rgb(248,123,6)" fg:x="301" fg:w="8"/><text x="95.8056%" y="479.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 2.54%)</title><rect x="95.5556%" y="453" width="2.5397%" height="15" fill="rgb(206,91,31)" fg:x="301" fg:w="8"/><text x="95.8056%" y="463.50">&lt;a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8 samples, 2.54%)</title><rect x="95.5556%" y="437" width="2.5397%" height="15" fill="rgb(211,154,13)" fg:x="301" fg:w="8"/><text x="95.8056%" y="447.50">co..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 2.54%)</title><rect x="95.5556%" y="421" width="2.5397%" height="15" fill="rgb(225,148,7)" fg:x="301" fg:w="8"/><text x="95.8056%" y="431.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (8 samples, 2.54%)</title><rect x="95.5556%" y="405" width="2.5397%" height="15" fill="rgb(220,160,43)" fg:x="301" fg:w="8"/><text x="95.8056%" y="415.50">co..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (8 samples, 2.54%)</title><rect x="95.5556%" y="389" width="2.5397%" height="15" fill="rgb(213,52,39)" fg:x="301" fg:w="8"/><text x="95.8056%" y="399.50">co..</text></g><g><title>demoparser::main::{{closure}} (8 samples, 2.54%)</title><rect x="95.5556%" y="373" width="2.5397%" height="15" fill="rgb(243,137,7)" fg:x="301" fg:w="8"/><text x="95.8056%" y="383.50">de..</text></g><g><title>demoparser::parse_demo (8 samples, 2.54%)</title><rect x="95.5556%" y="357" width="2.5397%" height="15" fill="rgb(230,79,13)" fg:x="301" fg:w="8"/><text x="95.8056%" y="367.50">de..</text></g><g><title>demoparser::parsing::parser::Parser::start_parsing (7 samples, 2.22%)</title><rect x="95.8730%" y="341" width="2.2222%" height="15" fill="rgb(247,105,23)" fg:x="302" fg:w="7"/><text x="96.1230%" y="351.50">d..</text></g><g><title>std::thread::JoinHandle&lt;T&gt;::join (6 samples, 1.90%)</title><rect x="96.1905%" y="325" width="1.9048%" height="15" fill="rgb(223,179,41)" fg:x="303" fg:w="6"/><text x="96.4405%" y="335.50">s..</text></g><g><title>std::thread::JoinInner&lt;T&gt;::join (6 samples, 1.90%)</title><rect x="96.1905%" y="309" width="1.9048%" height="15" fill="rgb(218,9,34)" fg:x="303" fg:w="6"/><text x="96.4405%" y="319.50">s..</text></g><g><title>std::sys::unix::thread::Thread::join (6 samples, 1.90%)</title><rect x="96.1905%" y="293" width="1.9048%" height="15" fill="rgb(222,106,8)" fg:x="303" fg:w="6"/><text x="96.4405%" y="303.50">s..</text></g><g><title>__pthread_clockjoin_ex (6 samples, 1.90%)</title><rect x="96.1905%" y="277" width="1.9048%" height="15" fill="rgb(211,220,0)" fg:x="303" fg:w="6"/><text x="96.4405%" y="287.50">_..</text></g><g><title>__GI___futex_abstimed_wait_cancelable64 (6 samples, 1.90%)</title><rect x="96.1905%" y="261" width="1.9048%" height="15" fill="rgb(229,52,16)" fg:x="303" fg:w="6"/><text x="96.4405%" y="271.50">_..</text></g><g><title>__futex_abstimed_wait_common (6 samples, 1.90%)</title><rect x="96.1905%" y="245" width="1.9048%" height="15" fill="rgb(212,155,18)" fg:x="303" fg:w="6"/><text x="96.4405%" y="255.50">_..</text></g><g><title>__futex_abstimed_wait_common64 (6 samples, 1.90%)</title><rect x="96.1905%" y="229" width="1.9048%" height="15" fill="rgb(242,21,14)" fg:x="303" fg:w="6"/><text x="96.4405%" y="239.50">_..</text></g><g><title>[unknown] (6 samples, 1.90%)</title><rect x="96.1905%" y="213" width="1.9048%" height="15" fill="rgb(222,19,48)" fg:x="303" fg:w="6"/><text x="96.4405%" y="223.50">[..</text></g><g><title>[unknown] (6 samples, 1.90%)</title><rect x="96.1905%" y="197" width="1.9048%" height="15" fill="rgb(232,45,27)" fg:x="303" fg:w="6"/><text x="96.4405%" y="207.50">[..</text></g><g><title>[unknown] (6 samples, 1.90%)</title><rect x="96.1905%" y="181" width="1.9048%" height="15" fill="rgb(249,103,42)" fg:x="303" fg:w="6"/><text x="96.4405%" y="191.50">[..</text></g><g><title>[unknown] (6 samples, 1.90%)</title><rect x="96.1905%" y="165" width="1.9048%" height="15" fill="rgb(246,81,33)" fg:x="303" fg:w="6"/><text x="96.4405%" y="175.50">[..</text></g><g><title>[unknown] (6 samples, 1.90%)</title><rect x="96.1905%" y="149" width="1.9048%" height="15" fill="rgb(252,33,42)" fg:x="303" fg:w="6"/><text x="96.4405%" y="159.50">[..</text></g><g><title>[unknown] (6 samples, 1.90%)</title><rect x="96.1905%" y="133" width="1.9048%" height="15" fill="rgb(209,212,41)" fg:x="303" fg:w="6"/><text x="96.4405%" y="143.50">[..</text></g><g><title>demoparser (310 samples, 98.41%)</title><rect x="0.0000%" y="805" width="98.4127%" height="15" fill="rgb(207,154,6)" fg:x="0" fg:w="310"/><text x="0.2500%" y="815.50">demoparser</text></g><g><title>_start (11 samples, 3.49%)</title><rect x="94.9206%" y="789" width="3.4921%" height="15" fill="rgb(223,64,47)" fg:x="299" fg:w="11"/><text x="95.1706%" y="799.50">_st..</text></g><g><title>__libc_start_main_impl (11 samples, 3.49%)</title><rect x="94.9206%" y="773" width="3.4921%" height="15" fill="rgb(211,161,38)" fg:x="299" fg:w="11"/><text x="95.1706%" y="783.50">__l..</text></g><g><title>call_init (1 samples, 0.32%)</title><rect x="98.0952%" y="757" width="0.3175%" height="15" fill="rgb(219,138,40)" fg:x="309" fg:w="1"/><text x="98.3452%" y="767.50"></text></g><g><title>mi_process_init (1 samples, 0.32%)</title><rect x="98.0952%" y="741" width="0.3175%" height="15" fill="rgb(241,228,46)" fg:x="309" fg:w="1"/><text x="98.3452%" y="751.50"></text></g><g><title>_mi_os_init (1 samples, 0.32%)</title><rect x="98.0952%" y="725" width="0.3175%" height="15" fill="rgb(223,209,38)" fg:x="309" fg:w="1"/><text x="98.3452%" y="735.50"></text></g><g><title>os_detect_overcommit (1 samples, 0.32%)</title><rect x="98.0952%" y="709" width="0.3175%" height="15" fill="rgb(236,164,45)" fg:x="309" fg:w="1"/><text x="98.3452%" y="719.50"></text></g><g><title>open (1 samples, 0.32%)</title><rect x="98.0952%" y="693" width="0.3175%" height="15" fill="rgb(231,15,5)" fg:x="309" fg:w="1"/><text x="98.3452%" y="703.50"></text></g><g><title>__libc_open64 (1 samples, 0.32%)</title><rect x="98.0952%" y="677" width="0.3175%" height="15" fill="rgb(252,35,15)" fg:x="309" fg:w="1"/><text x="98.3452%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="98.0952%" y="661" width="0.3175%" height="15" fill="rgb(248,181,18)" fg:x="309" fg:w="1"/><text x="98.3452%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="98.0952%" y="645" width="0.3175%" height="15" fill="rgb(233,39,42)" fg:x="309" fg:w="1"/><text x="98.3452%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="98.0952%" y="629" width="0.3175%" height="15" fill="rgb(238,110,33)" fg:x="309" fg:w="1"/><text x="98.3452%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="98.0952%" y="613" width="0.3175%" height="15" fill="rgb(233,195,10)" fg:x="309" fg:w="1"/><text x="98.3452%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="98.0952%" y="597" width="0.3175%" height="15" fill="rgb(254,105,3)" fg:x="309" fg:w="1"/><text x="98.3452%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="98.0952%" y="581" width="0.3175%" height="15" fill="rgb(221,225,9)" fg:x="309" fg:w="1"/><text x="98.3452%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="98.0952%" y="565" width="0.3175%" height="15" fill="rgb(224,227,45)" fg:x="309" fg:w="1"/><text x="98.3452%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="98.0952%" y="549" width="0.3175%" height="15" fill="rgb(229,198,43)" fg:x="309" fg:w="1"/><text x="98.3452%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="98.0952%" y="533" width="0.3175%" height="15" fill="rgb(206,209,35)" fg:x="309" fg:w="1"/><text x="98.3452%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.32%)</title><rect x="98.0952%" y="517" width="0.3175%" height="15" fill="rgb(245,195,53)" fg:x="309" fg:w="1"/><text x="98.3452%" y="527.50"></text></g><g><title>all (315 samples, 100%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(240,92,26)" fg:x="0" fg:w="315"/><text x="0.2500%" y="831.50"></text></g><g><title>perf-exec (5 samples, 1.59%)</title><rect x="98.4127%" y="805" width="1.5873%" height="15" fill="rgb(207,40,23)" fg:x="310" fg:w="5"/><text x="98.6627%" y="815.50"></text></g><g><title>[unknown] (5 samples, 1.59%)</title><rect x="98.4127%" y="789" width="1.5873%" height="15" fill="rgb(223,111,35)" fg:x="310" fg:w="5"/><text x="98.6627%" y="799.50"></text></g><g><title>[unknown] (5 samples, 1.59%)</title><rect x="98.4127%" y="773" width="1.5873%" height="15" fill="rgb(229,147,28)" fg:x="310" fg:w="5"/><text x="98.6627%" y="783.50"></text></g><g><title>[unknown] (5 samples, 1.59%)</title><rect x="98.4127%" y="757" width="1.5873%" height="15" fill="rgb(211,29,28)" fg:x="310" fg:w="5"/><text x="98.6627%" y="767.50"></text></g><g><title>[unknown] (5 samples, 1.59%)</title><rect x="98.4127%" y="741" width="1.5873%" height="15" fill="rgb(228,72,33)" fg:x="310" fg:w="5"/><text x="98.6627%" y="751.50"></text></g><g><title>[unknown] (5 samples, 1.59%)</title><rect x="98.4127%" y="725" width="1.5873%" height="15" fill="rgb(205,214,31)" fg:x="310" fg:w="5"/><text x="98.6627%" y="735.50"></text></g><g><title>[unknown] (5 samples, 1.59%)</title><rect x="98.4127%" y="709" width="1.5873%" height="15" fill="rgb(224,111,15)" fg:x="310" fg:w="5"/><text x="98.6627%" y="719.50"></text></g><g><title>[unknown] (5 samples, 1.59%)</title><rect x="98.4127%" y="693" width="1.5873%" height="15" fill="rgb(253,21,26)" fg:x="310" fg:w="5"/><text x="98.6627%" y="703.50"></text></g><g><title>[unknown] (5 samples, 1.59%)</title><rect x="98.4127%" y="677" width="1.5873%" height="15" fill="rgb(245,139,43)" fg:x="310" fg:w="5"/><text x="98.6627%" y="687.50"></text></g><g><title>[unknown] (5 samples, 1.59%)</title><rect x="98.4127%" y="661" width="1.5873%" height="15" fill="rgb(252,170,7)" fg:x="310" fg:w="5"/><text x="98.6627%" y="671.50"></text></g><g><title>[unknown] (5 samples, 1.59%)</title><rect x="98.4127%" y="645" width="1.5873%" height="15" fill="rgb(231,118,14)" fg:x="310" fg:w="5"/><text x="98.6627%" y="655.50"></text></g></svg></svg>