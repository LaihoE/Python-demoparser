<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1750" onload="init(evt)" viewBox="0 0 1200 1750" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1750" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1733.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1733.00"> </text><svg id="frames" x="10" width="1180" total_samples="1343"><g><title>[unknown] (90 samples, 6.70%)</title><rect x="0.0000%" y="1669" width="6.7014%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="90"/><text x="0.2500%" y="1679.50">[unknown]</text></g><g><title>[unknown] (65 samples, 4.84%)</title><rect x="1.8615%" y="1653" width="4.8399%" height="15" fill="rgb(217,0,24)" fg:x="25" fg:w="65"/><text x="2.1115%" y="1663.50">[unkno..</text></g><g><title>[unknown] (65 samples, 4.84%)</title><rect x="1.8615%" y="1637" width="4.8399%" height="15" fill="rgb(221,193,54)" fg:x="25" fg:w="65"/><text x="2.1115%" y="1647.50">[unkno..</text></g><g><title>[unknown] (55 samples, 4.10%)</title><rect x="2.6061%" y="1621" width="4.0953%" height="15" fill="rgb(248,212,6)" fg:x="35" fg:w="55"/><text x="2.8561%" y="1631.50">[unk..</text></g><g><title>[unknown] (44 samples, 3.28%)</title><rect x="3.4252%" y="1605" width="3.2762%" height="15" fill="rgb(208,68,35)" fg:x="46" fg:w="44"/><text x="3.6752%" y="1615.50">[un..</text></g><g><title>[unknown] (4 samples, 0.30%)</title><rect x="6.4036%" y="1589" width="0.2978%" height="15" fill="rgb(232,128,0)" fg:x="86" fg:w="4"/><text x="6.6536%" y="1599.50"></text></g><g><title>[unknown] (4 samples, 0.30%)</title><rect x="6.4036%" y="1573" width="0.2978%" height="15" fill="rgb(207,160,47)" fg:x="86" fg:w="4"/><text x="6.6536%" y="1583.50"></text></g><g><title>[unknown] (4 samples, 0.30%)</title><rect x="6.4036%" y="1557" width="0.2978%" height="15" fill="rgb(228,23,34)" fg:x="86" fg:w="4"/><text x="6.6536%" y="1567.50"></text></g><g><title>[unknown] (4 samples, 0.30%)</title><rect x="6.4036%" y="1541" width="0.2978%" height="15" fill="rgb(218,30,26)" fg:x="86" fg:w="4"/><text x="6.6536%" y="1551.50"></text></g><g><title>[unknown] (3 samples, 0.22%)</title><rect x="6.4780%" y="1525" width="0.2234%" height="15" fill="rgb(220,122,19)" fg:x="87" fg:w="3"/><text x="6.7280%" y="1535.50"></text></g><g><title>[unknown] (3 samples, 0.22%)</title><rect x="6.4780%" y="1509" width="0.2234%" height="15" fill="rgb(250,228,42)" fg:x="87" fg:w="3"/><text x="6.7280%" y="1519.50"></text></g><g><title>[unknown] (3 samples, 0.22%)</title><rect x="6.4780%" y="1493" width="0.2234%" height="15" fill="rgb(240,193,28)" fg:x="87" fg:w="3"/><text x="6.7280%" y="1503.50"></text></g><g><title>[unknown] (3 samples, 0.22%)</title><rect x="6.4780%" y="1477" width="0.2234%" height="15" fill="rgb(216,20,37)" fg:x="87" fg:w="3"/><text x="6.7280%" y="1487.50"></text></g><g><title>[unknown] (3 samples, 0.22%)</title><rect x="6.4780%" y="1461" width="0.2234%" height="15" fill="rgb(206,188,39)" fg:x="87" fg:w="3"/><text x="6.7280%" y="1471.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="6.5525%" y="1445" width="0.1489%" height="15" fill="rgb(217,207,13)" fg:x="88" fg:w="2"/><text x="6.8025%" y="1455.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="6.6270%" y="1429" width="0.0745%" height="15" fill="rgb(231,73,38)" fg:x="89" fg:w="1"/><text x="6.8770%" y="1439.50"></text></g><g><title>__sigjmp_save (1 samples, 0.07%)</title><rect x="6.7014%" y="1637" width="0.0745%" height="15" fill="rgb(225,20,46)" fg:x="90" fg:w="1"/><text x="6.9514%" y="1647.50"></text></g><g><title>rseq_register_current_thread (1 samples, 0.07%)</title><rect x="6.7759%" y="1637" width="0.0745%" height="15" fill="rgb(210,31,41)" fg:x="91" fg:w="1"/><text x="7.0259%" y="1647.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="6.7759%" y="1621" width="0.0745%" height="15" fill="rgb(221,200,47)" fg:x="91" fg:w="1"/><text x="7.0259%" y="1631.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="6.7759%" y="1605" width="0.0745%" height="15" fill="rgb(226,26,5)" fg:x="91" fg:w="1"/><text x="7.0259%" y="1615.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="6.7759%" y="1589" width="0.0745%" height="15" fill="rgb(249,33,26)" fg:x="91" fg:w="1"/><text x="7.0259%" y="1599.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="6.7759%" y="1573" width="0.0745%" height="15" fill="rgb(235,183,28)" fg:x="91" fg:w="1"/><text x="7.0259%" y="1583.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="6.7759%" y="1557" width="0.0745%" height="15" fill="rgb(221,5,38)" fg:x="91" fg:w="1"/><text x="7.0259%" y="1567.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.30%)</title><rect x="6.8503%" y="1429" width="0.2978%" height="15" fill="rgb(247,18,42)" fg:x="92" fg:w="4"/><text x="7.1003%" y="1439.50"></text></g><g><title>demoparser::parsing::parser::Parser::find_beginning (2 samples, 0.15%)</title><rect x="7.1482%" y="1429" width="0.1489%" height="15" fill="rgb(241,131,45)" fg:x="96" fg:w="2"/><text x="7.3982%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;demoparser::parsing::parser::ParsingMaps&gt;&gt;&gt; (3 samples, 0.22%)</title><rect x="7.3716%" y="1413" width="0.2234%" height="15" fill="rgb(249,31,29)" fg:x="99" fg:w="3"/><text x="7.6216%" y="1423.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.22%)</title><rect x="7.3716%" y="1397" width="0.2234%" height="15" fill="rgb(225,111,53)" fg:x="99" fg:w="3"/><text x="7.6216%" y="1407.50"></text></g><g><title>demoparser::parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_datatable (1 samples, 0.07%)</title><rect x="7.5949%" y="1413" width="0.0745%" height="15" fill="rgb(238,160,17)" fg:x="102" fg:w="1"/><text x="7.8449%" y="1423.50"></text></g><g><title>protobuf::message::Message::parse_from_bytes (1 samples, 0.07%)</title><rect x="7.5949%" y="1397" width="0.0745%" height="15" fill="rgb(214,148,48)" fg:x="102" fg:w="1"/><text x="7.8449%" y="1407.50"></text></g><g><title>protobuf::message::Message::parse_from (1 samples, 0.07%)</title><rect x="7.5949%" y="1381" width="0.0745%" height="15" fill="rgb(232,36,49)" fg:x="102" fg:w="1"/><text x="7.8449%" y="1391.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_SendTable as protobuf::message::Message&gt;::merge_from (1 samples, 0.07%)</title><rect x="7.5949%" y="1365" width="0.0745%" height="15" fill="rgb(209,103,24)" fg:x="102" fg:w="1"/><text x="7.8449%" y="1375.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.07%)</title><rect x="7.5949%" y="1349" width="0.0745%" height="15" fill="rgb(229,88,8)" fg:x="102" fg:w="1"/><text x="7.8449%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.07%)</title><rect x="7.5949%" y="1333" width="0.0745%" height="15" fill="rgb(213,181,19)" fg:x="102" fg:w="1"/><text x="7.8449%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="7.5949%" y="1317" width="0.0745%" height="15" fill="rgb(254,191,54)" fg:x="102" fg:w="1"/><text x="7.8449%" y="1327.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="7.5949%" y="1301" width="0.0745%" height="15" fill="rgb(241,83,37)" fg:x="102" fg:w="1"/><text x="7.8449%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.07%)</title><rect x="7.5949%" y="1285" width="0.0745%" height="15" fill="rgb(233,36,39)" fg:x="102" fg:w="1"/><text x="7.8449%" y="1295.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.07%)</title><rect x="7.5949%" y="1269" width="0.0745%" height="15" fill="rgb(226,3,54)" fg:x="102" fg:w="1"/><text x="7.8449%" y="1279.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.07%)</title><rect x="7.5949%" y="1253" width="0.0745%" height="15" fill="rgb(245,192,40)" fg:x="102" fg:w="1"/><text x="7.8449%" y="1263.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.07%)</title><rect x="7.5949%" y="1237" width="0.0745%" height="15" fill="rgb(238,167,29)" fg:x="102" fg:w="1"/><text x="7.8449%" y="1247.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.07%)</title><rect x="7.5949%" y="1221" width="0.0745%" height="15" fill="rgb(232,182,51)" fg:x="102" fg:w="1"/><text x="7.8449%" y="1231.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.07%)</title><rect x="7.5949%" y="1205" width="0.0745%" height="15" fill="rgb(231,60,39)" fg:x="102" fg:w="1"/><text x="7.8449%" y="1215.50"></text></g><g><title>mi_find_page (1 samples, 0.07%)</title><rect x="7.5949%" y="1189" width="0.0745%" height="15" fill="rgb(208,69,12)" fg:x="102" fg:w="1"/><text x="7.8449%" y="1199.50"></text></g><g><title>mi_find_free_page (1 samples, 0.07%)</title><rect x="7.5949%" y="1173" width="0.0745%" height="15" fill="rgb(235,93,37)" fg:x="102" fg:w="1"/><text x="7.8449%" y="1183.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.07%)</title><rect x="7.5949%" y="1157" width="0.0745%" height="15" fill="rgb(213,116,39)" fg:x="102" fg:w="1"/><text x="7.8449%" y="1167.50"></text></g><g><title>mi_page_fresh (1 samples, 0.07%)</title><rect x="7.5949%" y="1141" width="0.0745%" height="15" fill="rgb(222,207,29)" fg:x="102" fg:w="1"/><text x="7.8449%" y="1151.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.07%)</title><rect x="7.5949%" y="1125" width="0.0745%" height="15" fill="rgb(206,96,30)" fg:x="102" fg:w="1"/><text x="7.8449%" y="1135.50"></text></g><g><title>mi_segments_page_alloc (1 samples, 0.07%)</title><rect x="7.5949%" y="1109" width="0.0745%" height="15" fill="rgb(218,138,4)" fg:x="102" fg:w="1"/><text x="7.8449%" y="1119.50"></text></g><g><title>mi_segments_page_find_and_allocate (1 samples, 0.07%)</title><rect x="7.5949%" y="1093" width="0.0745%" height="15" fill="rgb(250,191,14)" fg:x="102" fg:w="1"/><text x="7.8449%" y="1103.50"></text></g><g><title>mi_segment_span_allocate (1 samples, 0.07%)</title><rect x="7.5949%" y="1077" width="0.0745%" height="15" fill="rgb(239,60,40)" fg:x="102" fg:w="1"/><text x="7.8449%" y="1087.50"></text></g><g><title>mi_segment_ensure_committed (1 samples, 0.07%)</title><rect x="7.5949%" y="1061" width="0.0745%" height="15" fill="rgb(206,27,48)" fg:x="102" fg:w="1"/><text x="7.8449%" y="1071.50"></text></g><g><title>mi_segment_commitx (1 samples, 0.07%)</title><rect x="7.5949%" y="1045" width="0.0745%" height="15" fill="rgb(225,35,8)" fg:x="102" fg:w="1"/><text x="7.8449%" y="1055.50"></text></g><g><title>_mi_clock_now (1 samples, 0.07%)</title><rect x="7.5949%" y="1029" width="0.0745%" height="15" fill="rgb(250,213,24)" fg:x="102" fg:w="1"/><text x="7.8449%" y="1039.50"></text></g><g><title>__GI___clock_gettime (1 samples, 0.07%)</title><rect x="7.5949%" y="1013" width="0.0745%" height="15" fill="rgb(247,123,22)" fg:x="102" fg:w="1"/><text x="7.8449%" y="1023.50"></text></g><g><title>[[vdso]] (1 samples, 0.07%)</title><rect x="7.5949%" y="997" width="0.0745%" height="15" fill="rgb(231,138,38)" fg:x="102" fg:w="1"/><text x="7.8449%" y="1007.50"></text></g><g><title>[[vdso]] (1 samples, 0.07%)</title><rect x="7.5949%" y="981" width="0.0745%" height="15" fill="rgb(231,145,46)" fg:x="102" fg:w="1"/><text x="7.8449%" y="991.50"></text></g><g><title>[libc.so.6] (5 samples, 0.37%)</title><rect x="11.6158%" y="1365" width="0.3723%" height="15" fill="rgb(251,118,11)" fg:x="156" fg:w="5"/><text x="11.8658%" y="1375.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="11.6158%" y="1349" width="0.3723%" height="15" fill="rgb(217,147,25)" fg:x="156" fg:w="5"/><text x="11.8658%" y="1359.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="11.6158%" y="1333" width="0.3723%" height="15" fill="rgb(247,81,37)" fg:x="156" fg:w="5"/><text x="11.8658%" y="1343.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="11.6158%" y="1317" width="0.3723%" height="15" fill="rgb(209,12,38)" fg:x="156" fg:w="5"/><text x="11.8658%" y="1327.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="11.6158%" y="1301" width="0.3723%" height="15" fill="rgb(227,1,9)" fg:x="156" fg:w="5"/><text x="11.8658%" y="1311.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="11.6158%" y="1285" width="0.3723%" height="15" fill="rgb(248,47,43)" fg:x="156" fg:w="5"/><text x="11.8658%" y="1295.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="11.6158%" y="1269" width="0.3723%" height="15" fill="rgb(221,10,30)" fg:x="156" fg:w="5"/><text x="11.8658%" y="1279.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="11.6158%" y="1253" width="0.3723%" height="15" fill="rgb(210,229,1)" fg:x="156" fg:w="5"/><text x="11.8658%" y="1263.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="11.6158%" y="1237" width="0.3723%" height="15" fill="rgb(222,148,37)" fg:x="156" fg:w="5"/><text x="11.8658%" y="1247.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="11.6158%" y="1221" width="0.3723%" height="15" fill="rgb(234,67,33)" fg:x="156" fg:w="5"/><text x="11.8658%" y="1231.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="11.6158%" y="1205" width="0.3723%" height="15" fill="rgb(247,98,35)" fg:x="156" fg:w="5"/><text x="11.8658%" y="1215.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="11.6158%" y="1189" width="0.3723%" height="15" fill="rgb(247,138,52)" fg:x="156" fg:w="5"/><text x="11.8658%" y="1199.50"></text></g><g><title>_mi_os_commit (1 samples, 0.07%)</title><rect x="11.9881%" y="1141" width="0.0745%" height="15" fill="rgb(213,79,30)" fg:x="161" fg:w="1"/><text x="12.2381%" y="1151.50"></text></g><g><title>mi_os_commitx (1 samples, 0.07%)</title><rect x="11.9881%" y="1125" width="0.0745%" height="15" fill="rgb(246,177,23)" fg:x="161" fg:w="1"/><text x="12.2381%" y="1135.50"></text></g><g><title>__GI___mprotect (1 samples, 0.07%)</title><rect x="11.9881%" y="1109" width="0.0745%" height="15" fill="rgb(230,62,27)" fg:x="161" fg:w="1"/><text x="12.2381%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="11.9881%" y="1093" width="0.0745%" height="15" fill="rgb(216,154,8)" fg:x="161" fg:w="1"/><text x="12.2381%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="11.9881%" y="1077" width="0.0745%" height="15" fill="rgb(244,35,45)" fg:x="161" fg:w="1"/><text x="12.2381%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="11.9881%" y="1061" width="0.0745%" height="15" fill="rgb(251,115,12)" fg:x="161" fg:w="1"/><text x="12.2381%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="11.9881%" y="1045" width="0.0745%" height="15" fill="rgb(240,54,50)" fg:x="161" fg:w="1"/><text x="12.2381%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="11.9881%" y="1029" width="0.0745%" height="15" fill="rgb(233,84,52)" fg:x="161" fg:w="1"/><text x="12.2381%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="11.9881%" y="1013" width="0.0745%" height="15" fill="rgb(207,117,47)" fg:x="161" fg:w="1"/><text x="12.2381%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="11.9881%" y="997" width="0.0745%" height="15" fill="rgb(249,43,39)" fg:x="161" fg:w="1"/><text x="12.2381%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="11.9881%" y="981" width="0.0745%" height="15" fill="rgb(209,38,44)" fg:x="161" fg:w="1"/><text x="12.2381%" y="991.50"></text></g><g><title>mi_find_page (7 samples, 0.52%)</title><rect x="11.9881%" y="1285" width="0.5212%" height="15" fill="rgb(236,212,23)" fg:x="161" fg:w="7"/><text x="12.2381%" y="1295.50"></text></g><g><title>mi_find_free_page (7 samples, 0.52%)</title><rect x="11.9881%" y="1269" width="0.5212%" height="15" fill="rgb(242,79,21)" fg:x="161" fg:w="7"/><text x="12.2381%" y="1279.50"></text></g><g><title>mi_page_queue_find_free_ex (7 samples, 0.52%)</title><rect x="11.9881%" y="1253" width="0.5212%" height="15" fill="rgb(211,96,35)" fg:x="161" fg:w="7"/><text x="12.2381%" y="1263.50"></text></g><g><title>mi_page_fresh (7 samples, 0.52%)</title><rect x="11.9881%" y="1237" width="0.5212%" height="15" fill="rgb(253,215,40)" fg:x="161" fg:w="7"/><text x="12.2381%" y="1247.50"></text></g><g><title>mi_page_fresh_alloc (7 samples, 0.52%)</title><rect x="11.9881%" y="1221" width="0.5212%" height="15" fill="rgb(211,81,21)" fg:x="161" fg:w="7"/><text x="12.2381%" y="1231.50"></text></g><g><title>mi_segments_page_alloc (7 samples, 0.52%)</title><rect x="11.9881%" y="1205" width="0.5212%" height="15" fill="rgb(208,190,38)" fg:x="161" fg:w="7"/><text x="12.2381%" y="1215.50"></text></g><g><title>mi_segment_reclaim_or_alloc (7 samples, 0.52%)</title><rect x="11.9881%" y="1189" width="0.5212%" height="15" fill="rgb(235,213,38)" fg:x="161" fg:w="7"/><text x="12.2381%" y="1199.50"></text></g><g><title>mi_segment_alloc (7 samples, 0.52%)</title><rect x="11.9881%" y="1173" width="0.5212%" height="15" fill="rgb(237,122,38)" fg:x="161" fg:w="7"/><text x="12.2381%" y="1183.50"></text></g><g><title>mi_segment_init (7 samples, 0.52%)</title><rect x="11.9881%" y="1157" width="0.5212%" height="15" fill="rgb(244,218,35)" fg:x="161" fg:w="7"/><text x="12.2381%" y="1167.50"></text></g><g><title>memset (6 samples, 0.45%)</title><rect x="12.0625%" y="1141" width="0.4468%" height="15" fill="rgb(240,68,47)" fg:x="162" fg:w="6"/><text x="12.3125%" y="1151.50"></text></g><g><title>[libc.so.6] (6 samples, 0.45%)</title><rect x="12.0625%" y="1125" width="0.4468%" height="15" fill="rgb(210,16,53)" fg:x="162" fg:w="6"/><text x="12.3125%" y="1135.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="12.0625%" y="1109" width="0.4468%" height="15" fill="rgb(235,124,12)" fg:x="162" fg:w="6"/><text x="12.3125%" y="1119.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="12.0625%" y="1093" width="0.4468%" height="15" fill="rgb(224,169,11)" fg:x="162" fg:w="6"/><text x="12.3125%" y="1103.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="12.0625%" y="1077" width="0.4468%" height="15" fill="rgb(250,166,2)" fg:x="162" fg:w="6"/><text x="12.3125%" y="1087.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="12.0625%" y="1061" width="0.4468%" height="15" fill="rgb(242,216,29)" fg:x="162" fg:w="6"/><text x="12.3125%" y="1071.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="12.0625%" y="1045" width="0.4468%" height="15" fill="rgb(230,116,27)" fg:x="162" fg:w="6"/><text x="12.3125%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="12.4348%" y="1029" width="0.0745%" height="15" fill="rgb(228,99,48)" fg:x="167" fg:w="1"/><text x="12.6848%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="12.4348%" y="1013" width="0.0745%" height="15" fill="rgb(253,11,6)" fg:x="167" fg:w="1"/><text x="12.6848%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="12.4348%" y="997" width="0.0745%" height="15" fill="rgb(247,143,39)" fg:x="167" fg:w="1"/><text x="12.6848%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="12.4348%" y="981" width="0.0745%" height="15" fill="rgb(236,97,10)" fg:x="167" fg:w="1"/><text x="12.6848%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="12.4348%" y="965" width="0.0745%" height="15" fill="rgb(233,208,19)" fg:x="167" fg:w="1"/><text x="12.6848%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="12.4348%" y="949" width="0.0745%" height="15" fill="rgb(216,164,2)" fg:x="167" fg:w="1"/><text x="12.6848%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="12.4348%" y="933" width="0.0745%" height="15" fill="rgb(220,129,5)" fg:x="167" fg:w="1"/><text x="12.6848%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="12.4348%" y="917" width="0.0745%" height="15" fill="rgb(242,17,10)" fg:x="167" fg:w="1"/><text x="12.6848%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="12.4348%" y="901" width="0.0745%" height="15" fill="rgb(242,107,0)" fg:x="167" fg:w="1"/><text x="12.6848%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="12.4348%" y="885" width="0.0745%" height="15" fill="rgb(251,28,31)" fg:x="167" fg:w="1"/><text x="12.6848%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="12.4348%" y="869" width="0.0745%" height="15" fill="rgb(233,223,10)" fg:x="167" fg:w="1"/><text x="12.6848%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="12.4348%" y="853" width="0.0745%" height="15" fill="rgb(215,21,27)" fg:x="167" fg:w="1"/><text x="12.6848%" y="863.50"></text></g><g><title>_mi_malloc_generic (12 samples, 0.89%)</title><rect x="11.9881%" y="1301" width="0.8935%" height="15" fill="rgb(232,23,21)" fg:x="161" fg:w="12"/><text x="12.2381%" y="1311.50"></text></g><g><title>mi_thread_init (5 samples, 0.37%)</title><rect x="12.5093%" y="1285" width="0.3723%" height="15" fill="rgb(244,5,23)" fg:x="168" fg:w="5"/><text x="12.7593%" y="1295.50"></text></g><g><title>_mi_heap_init (5 samples, 0.37%)</title><rect x="12.5093%" y="1269" width="0.3723%" height="15" fill="rgb(226,81,46)" fg:x="168" fg:w="5"/><text x="12.7593%" y="1279.50"></text></g><g><title>_mi_memcpy_aligned (5 samples, 0.37%)</title><rect x="12.5093%" y="1253" width="0.3723%" height="15" fill="rgb(247,70,30)" fg:x="168" fg:w="5"/><text x="12.7593%" y="1263.50"></text></g><g><title>_mi_memcpy (5 samples, 0.37%)</title><rect x="12.5093%" y="1237" width="0.3723%" height="15" fill="rgb(212,68,19)" fg:x="168" fg:w="5"/><text x="12.7593%" y="1247.50"></text></g><g><title>memcpy (5 samples, 0.37%)</title><rect x="12.5093%" y="1221" width="0.3723%" height="15" fill="rgb(240,187,13)" fg:x="168" fg:w="5"/><text x="12.7593%" y="1231.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="12.5093%" y="1205" width="0.3723%" height="15" fill="rgb(223,113,26)" fg:x="168" fg:w="5"/><text x="12.7593%" y="1215.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="12.5093%" y="1189" width="0.3723%" height="15" fill="rgb(206,192,2)" fg:x="168" fg:w="5"/><text x="12.7593%" y="1199.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="12.5093%" y="1173" width="0.3723%" height="15" fill="rgb(241,108,4)" fg:x="168" fg:w="5"/><text x="12.7593%" y="1183.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="12.5093%" y="1157" width="0.3723%" height="15" fill="rgb(247,173,49)" fg:x="168" fg:w="5"/><text x="12.7593%" y="1167.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="12.5093%" y="1141" width="0.3723%" height="15" fill="rgb(224,114,35)" fg:x="168" fg:w="5"/><text x="12.7593%" y="1151.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="12.5093%" y="1125" width="0.3723%" height="15" fill="rgb(245,159,27)" fg:x="168" fg:w="5"/><text x="12.7593%" y="1135.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (18 samples, 1.34%)</title><rect x="11.6158%" y="1381" width="1.3403%" height="15" fill="rgb(245,172,44)" fg:x="156" fg:w="18"/><text x="11.8658%" y="1391.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.97%)</title><rect x="11.9881%" y="1365" width="0.9680%" height="15" fill="rgb(236,23,11)" fg:x="161" fg:w="13"/><text x="12.2381%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.97%)</title><rect x="11.9881%" y="1349" width="0.9680%" height="15" fill="rgb(205,117,38)" fg:x="161" fg:w="13"/><text x="12.2381%" y="1359.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.97%)</title><rect x="11.9881%" y="1333" width="0.9680%" height="15" fill="rgb(237,72,25)" fg:x="161" fg:w="13"/><text x="12.2381%" y="1343.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.97%)</title><rect x="11.9881%" y="1317" width="0.9680%" height="15" fill="rgb(244,70,9)" fg:x="161" fg:w="13"/><text x="12.2381%" y="1327.50"></text></g><g><title>mi_malloc (1 samples, 0.07%)</title><rect x="12.8816%" y="1301" width="0.0745%" height="15" fill="rgb(217,125,39)" fg:x="173" fg:w="1"/><text x="13.1316%" y="1311.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.07%)</title><rect x="12.8816%" y="1285" width="0.0745%" height="15" fill="rgb(235,36,10)" fg:x="173" fg:w="1"/><text x="13.1316%" y="1295.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.07%)</title><rect x="12.8816%" y="1269" width="0.0745%" height="15" fill="rgb(251,123,47)" fg:x="173" fg:w="1"/><text x="13.1316%" y="1279.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.07%)</title><rect x="12.8816%" y="1253" width="0.0745%" height="15" fill="rgb(221,13,13)" fg:x="173" fg:w="1"/><text x="13.1316%" y="1263.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.07%)</title><rect x="12.9561%" y="1381" width="0.0745%" height="15" fill="rgb(238,131,9)" fg:x="174" fg:w="1"/><text x="13.2061%" y="1391.50"></text></g><g><title>core::ptr::write (1 samples, 0.07%)</title><rect x="12.9561%" y="1365" width="0.0745%" height="15" fill="rgb(211,50,8)" fg:x="174" fg:w="1"/><text x="13.2061%" y="1375.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.07%)</title><rect x="13.0305%" y="1381" width="0.0745%" height="15" fill="rgb(245,182,24)" fg:x="175" fg:w="1"/><text x="13.2805%" y="1391.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.07%)</title><rect x="13.0305%" y="1365" width="0.0745%" height="15" fill="rgb(242,14,37)" fg:x="175" fg:w="1"/><text x="13.2805%" y="1375.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.07%)</title><rect x="13.0305%" y="1349" width="0.0745%" height="15" fill="rgb(246,228,12)" fg:x="175" fg:w="1"/><text x="13.2805%" y="1359.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.07%)</title><rect x="13.0305%" y="1333" width="0.0745%" height="15" fill="rgb(213,55,15)" fg:x="175" fg:w="1"/><text x="13.2805%" y="1343.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (13 samples, 0.97%)</title><rect x="13.1050%" y="1381" width="0.9680%" height="15" fill="rgb(209,9,3)" fg:x="176" fg:w="13"/><text x="13.3550%" y="1391.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.97%)</title><rect x="13.1050%" y="1365" width="0.9680%" height="15" fill="rgb(230,59,30)" fg:x="176" fg:w="13"/><text x="13.3550%" y="1375.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (10 samples, 0.74%)</title><rect x="14.0730%" y="1381" width="0.7446%" height="15" fill="rgb(209,121,21)" fg:x="189" fg:w="10"/><text x="14.3230%" y="1391.50"></text></g><g><title>core::sync::atomic::atomic_or (10 samples, 0.74%)</title><rect x="14.0730%" y="1365" width="0.7446%" height="15" fill="rgb(220,109,13)" fg:x="189" fg:w="10"/><text x="14.3230%" y="1375.50"></text></g><g><title>core::cmp::Ord::min (5 samples, 0.37%)</title><rect x="14.8176%" y="1365" width="0.3723%" height="15" fill="rgb(232,18,1)" fg:x="199" fg:w="5"/><text x="15.0676%" y="1375.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (156 samples, 11.62%)</title><rect x="15.1899%" y="1365" width="11.6158%" height="15" fill="rgb(215,41,42)" fg:x="204" fg:w="156"/><text x="15.4399%" y="1375.50">core::iter::range..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (156 samples, 11.62%)</title><rect x="15.1899%" y="1349" width="11.6158%" height="15" fill="rgb(224,123,36)" fg:x="204" fg:w="156"/><text x="15.4399%" y="1359.50">&lt;core::ops::range..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (32 samples, 2.38%)</title><rect x="24.4229%" y="1333" width="2.3827%" height="15" fill="rgb(240,125,3)" fg:x="328" fg:w="32"/><text x="24.6729%" y="1343.50">co..</text></g><g><title>crossbeam_queue::seg_queue::SegQueue&lt;T&gt;::push (257 samples, 19.14%)</title><rect x="7.7439%" y="1397" width="19.1363%" height="15" fill="rgb(205,98,50)" fg:x="104" fg:w="257"/><text x="7.9939%" y="1407.50">crossbeam_queue::seg_queue::Se..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (162 samples, 12.06%)</title><rect x="14.8176%" y="1381" width="12.0625%" height="15" fill="rgb(205,185,37)" fg:x="199" fg:w="162"/><text x="15.0676%" y="1391.50">crossbeam_utils::b..</text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.07%)</title><rect x="26.8057%" y="1365" width="0.0745%" height="15" fill="rgb(238,207,15)" fg:x="360" fg:w="1"/><text x="27.0557%" y="1375.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.07%)</title><rect x="26.8057%" y="1349" width="0.0745%" height="15" fill="rgb(213,199,42)" fg:x="360" fg:w="1"/><text x="27.0557%" y="1359.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.07%)</title><rect x="26.8057%" y="1333" width="0.0745%" height="15" fill="rgb(235,201,11)" fg:x="360" fg:w="1"/><text x="27.0557%" y="1343.50"></text></g><g><title>demoparser::parsing::read_bytes::ByteReader::read_i32 (2 samples, 0.15%)</title><rect x="26.8801%" y="1397" width="0.1489%" height="15" fill="rgb(207,46,11)" fg:x="361" fg:w="2"/><text x="27.1301%" y="1407.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (2 samples, 0.15%)</title><rect x="26.8801%" y="1381" width="0.1489%" height="15" fill="rgb(241,35,35)" fg:x="361" fg:w="2"/><text x="27.1301%" y="1391.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (2 samples, 0.15%)</title><rect x="26.8801%" y="1365" width="0.1489%" height="15" fill="rgb(243,32,47)" fg:x="361" fg:w="2"/><text x="27.1301%" y="1375.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (2 samples, 0.15%)</title><rect x="26.8801%" y="1349" width="0.1489%" height="15" fill="rgb(247,202,23)" fg:x="361" fg:w="2"/><text x="27.1301%" y="1359.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="26.8801%" y="1333" width="0.1489%" height="15" fill="rgb(219,102,11)" fg:x="361" fg:w="2"/><text x="27.1301%" y="1343.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="26.8801%" y="1317" width="0.1489%" height="15" fill="rgb(243,110,44)" fg:x="361" fg:w="2"/><text x="27.1301%" y="1327.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="26.8801%" y="1301" width="0.1489%" height="15" fill="rgb(222,74,54)" fg:x="361" fg:w="2"/><text x="27.1301%" y="1311.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="26.8801%" y="1285" width="0.1489%" height="15" fill="rgb(216,99,12)" fg:x="361" fg:w="2"/><text x="27.1301%" y="1295.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="26.8801%" y="1269" width="0.1489%" height="15" fill="rgb(226,22,26)" fg:x="361" fg:w="2"/><text x="27.1301%" y="1279.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="26.8801%" y="1253" width="0.1489%" height="15" fill="rgb(217,163,10)" fg:x="361" fg:w="2"/><text x="27.1301%" y="1263.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="26.8801%" y="1237" width="0.1489%" height="15" fill="rgb(213,25,53)" fg:x="361" fg:w="2"/><text x="27.1301%" y="1247.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="26.8801%" y="1221" width="0.1489%" height="15" fill="rgb(252,105,26)" fg:x="361" fg:w="2"/><text x="27.1301%" y="1231.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="26.8801%" y="1205" width="0.1489%" height="15" fill="rgb(220,39,43)" fg:x="361" fg:w="2"/><text x="27.1301%" y="1215.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="26.8801%" y="1189" width="0.1489%" height="15" fill="rgb(229,68,48)" fg:x="361" fg:w="2"/><text x="27.1301%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="26.9546%" y="1173" width="0.0745%" height="15" fill="rgb(252,8,32)" fg:x="362" fg:w="1"/><text x="27.2046%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="26.9546%" y="1157" width="0.0745%" height="15" fill="rgb(223,20,43)" fg:x="362" fg:w="1"/><text x="27.2046%" y="1167.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_cmd (267 samples, 19.88%)</title><rect x="7.2971%" y="1429" width="19.8809%" height="15" fill="rgb(229,81,49)" fg:x="98" fg:w="267"/><text x="7.5471%" y="1439.50">demoparser::parsing::parser::Pa..</text></g><g><title>demoparser::parsing::parser::Parser::parse_packet (262 samples, 19.51%)</title><rect x="7.6694%" y="1413" width="19.5086%" height="15" fill="rgb(236,28,36)" fg:x="103" fg:w="262"/><text x="7.9194%" y="1423.50">demoparser::parsing::parser::Pa..</text></g><g><title>demoparser::parsing::read_bytes::ByteReader::read_varint (2 samples, 0.15%)</title><rect x="27.0290%" y="1397" width="0.1489%" height="15" fill="rgb(249,185,26)" fg:x="363" fg:w="2"/><text x="27.2790%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="27.1035%" y="1381" width="0.0745%" height="15" fill="rgb(249,174,33)" fg:x="364" fg:w="1"/><text x="27.3535%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="27.1035%" y="1365" width="0.0745%" height="15" fill="rgb(233,201,37)" fg:x="364" fg:w="1"/><text x="27.3535%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="27.1035%" y="1349" width="0.0745%" height="15" fill="rgb(221,78,26)" fg:x="364" fg:w="1"/><text x="27.3535%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="27.1035%" y="1333" width="0.0745%" height="15" fill="rgb(250,127,30)" fg:x="364" fg:w="1"/><text x="27.3535%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="27.1035%" y="1317" width="0.0745%" height="15" fill="rgb(230,49,44)" fg:x="364" fg:w="1"/><text x="27.3535%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="27.1035%" y="1301" width="0.0745%" height="15" fill="rgb(229,67,23)" fg:x="364" fg:w="1"/><text x="27.3535%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="27.1035%" y="1285" width="0.0745%" height="15" fill="rgb(249,83,47)" fg:x="364" fg:w="1"/><text x="27.3535%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="27.1035%" y="1269" width="0.0745%" height="15" fill="rgb(215,43,3)" fg:x="364" fg:w="1"/><text x="27.3535%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="27.1035%" y="1253" width="0.0745%" height="15" fill="rgb(238,154,13)" fg:x="364" fg:w="1"/><text x="27.3535%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="27.1035%" y="1237" width="0.0745%" height="15" fill="rgb(219,56,2)" fg:x="364" fg:w="1"/><text x="27.3535%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="27.1035%" y="1221" width="0.0745%" height="15" fill="rgb(233,0,4)" fg:x="364" fg:w="1"/><text x="27.3535%" y="1231.50"></text></g><g><title>demoparser::parsing::parser::Parser::start_io_threads::{{closure}} (289 samples, 21.52%)</title><rect x="6.8503%" y="1461" width="21.5190%" height="15" fill="rgb(235,30,7)" fg:x="92" fg:w="289"/><text x="7.1003%" y="1471.50">demoparser::parsing::parser::Parse..</text></g><g><title>demoparser::parsing::parser::Parser::parse_messages (289 samples, 21.52%)</title><rect x="6.8503%" y="1445" width="21.5190%" height="15" fill="rgb(250,79,13)" fg:x="92" fg:w="289"/><text x="7.1003%" y="1455.50">demoparser::parsing::parser::Parse..</text></g><g><title>demoparser::parsing::read_bytes::ByteReader::read_frame (16 samples, 1.19%)</title><rect x="27.1780%" y="1429" width="1.1914%" height="15" fill="rgb(211,146,34)" fg:x="365" fg:w="16"/><text x="27.4280%" y="1439.50"></text></g><g><title>demoparser::parsing::read_bytes::ByteReader::read_byte (16 samples, 1.19%)</title><rect x="27.1780%" y="1413" width="1.1914%" height="15" fill="rgb(228,22,38)" fg:x="365" fg:w="16"/><text x="27.4280%" y="1423.50"></text></g><g><title>[unknown] (15 samples, 1.12%)</title><rect x="27.2524%" y="1397" width="1.1169%" height="15" fill="rgb(235,168,5)" fg:x="366" fg:w="15"/><text x="27.5024%" y="1407.50"></text></g><g><title>[unknown] (14 samples, 1.04%)</title><rect x="27.3269%" y="1381" width="1.0424%" height="15" fill="rgb(221,155,16)" fg:x="367" fg:w="14"/><text x="27.5769%" y="1391.50"></text></g><g><title>[unknown] (14 samples, 1.04%)</title><rect x="27.3269%" y="1365" width="1.0424%" height="15" fill="rgb(215,215,53)" fg:x="367" fg:w="14"/><text x="27.5769%" y="1375.50"></text></g><g><title>[unknown] (14 samples, 1.04%)</title><rect x="27.3269%" y="1349" width="1.0424%" height="15" fill="rgb(223,4,10)" fg:x="367" fg:w="14"/><text x="27.5769%" y="1359.50"></text></g><g><title>[unknown] (14 samples, 1.04%)</title><rect x="27.3269%" y="1333" width="1.0424%" height="15" fill="rgb(234,103,6)" fg:x="367" fg:w="14"/><text x="27.5769%" y="1343.50"></text></g><g><title>[unknown] (9 samples, 0.67%)</title><rect x="27.6992%" y="1317" width="0.6701%" height="15" fill="rgb(227,97,0)" fg:x="372" fg:w="9"/><text x="27.9492%" y="1327.50"></text></g><g><title>[unknown] (9 samples, 0.67%)</title><rect x="27.6992%" y="1301" width="0.6701%" height="15" fill="rgb(234,150,53)" fg:x="372" fg:w="9"/><text x="27.9492%" y="1311.50"></text></g><g><title>[unknown] (9 samples, 0.67%)</title><rect x="27.6992%" y="1285" width="0.6701%" height="15" fill="rgb(228,201,54)" fg:x="372" fg:w="9"/><text x="27.9492%" y="1295.50"></text></g><g><title>[unknown] (9 samples, 0.67%)</title><rect x="27.6992%" y="1269" width="0.6701%" height="15" fill="rgb(222,22,37)" fg:x="372" fg:w="9"/><text x="27.9492%" y="1279.50"></text></g><g><title>[unknown] (9 samples, 0.67%)</title><rect x="27.6992%" y="1253" width="0.6701%" height="15" fill="rgb(237,53,32)" fg:x="372" fg:w="9"/><text x="27.9492%" y="1263.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (20 samples, 1.49%)</title><rect x="28.4438%" y="1429" width="1.4892%" height="15" fill="rgb(233,25,53)" fg:x="382" fg:w="20"/><text x="28.6938%" y="1439.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="29.8585%" y="1413" width="0.0745%" height="15" fill="rgb(210,40,34)" fg:x="401" fg:w="1"/><text x="30.1085%" y="1423.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="29.8585%" y="1397" width="0.0745%" height="15" fill="rgb(241,220,44)" fg:x="401" fg:w="1"/><text x="30.1085%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="29.8585%" y="1381" width="0.0745%" height="15" fill="rgb(235,28,35)" fg:x="401" fg:w="1"/><text x="30.1085%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="29.8585%" y="1365" width="0.0745%" height="15" fill="rgb(210,56,17)" fg:x="401" fg:w="1"/><text x="30.1085%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="29.8585%" y="1349" width="0.0745%" height="15" fill="rgb(224,130,29)" fg:x="401" fg:w="1"/><text x="30.1085%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="29.8585%" y="1333" width="0.0745%" height="15" fill="rgb(235,212,8)" fg:x="401" fg:w="1"/><text x="30.1085%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="29.8585%" y="1317" width="0.0745%" height="15" fill="rgb(223,33,50)" fg:x="401" fg:w="1"/><text x="30.1085%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="29.8585%" y="1301" width="0.0745%" height="15" fill="rgb(219,149,13)" fg:x="401" fg:w="1"/><text x="30.1085%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="29.8585%" y="1285" width="0.0745%" height="15" fill="rgb(250,156,29)" fg:x="401" fg:w="1"/><text x="30.1085%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="29.8585%" y="1269" width="0.0745%" height="15" fill="rgb(216,193,19)" fg:x="401" fg:w="1"/><text x="30.1085%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="29.8585%" y="1253" width="0.0745%" height="15" fill="rgb(216,135,14)" fg:x="401" fg:w="1"/><text x="30.1085%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="29.8585%" y="1237" width="0.0745%" height="15" fill="rgb(241,47,5)" fg:x="401" fg:w="1"/><text x="30.1085%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.52%)</title><rect x="29.9330%" y="1429" width="0.5212%" height="15" fill="rgb(233,42,35)" fg:x="402" fg:w="7"/><text x="30.1830%" y="1439.50"></text></g><g><title>core::ptr::write (7 samples, 0.52%)</title><rect x="29.9330%" y="1413" width="0.5212%" height="15" fill="rgb(231,13,6)" fg:x="402" fg:w="7"/><text x="30.1830%" y="1423.50"></text></g><g><title>[unknown] (7 samples, 0.52%)</title><rect x="29.9330%" y="1397" width="0.5212%" height="15" fill="rgb(207,181,40)" fg:x="402" fg:w="7"/><text x="30.1830%" y="1407.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="30.0074%" y="1381" width="0.4468%" height="15" fill="rgb(254,173,49)" fg:x="403" fg:w="6"/><text x="30.2574%" y="1391.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="30.0074%" y="1365" width="0.4468%" height="15" fill="rgb(221,1,38)" fg:x="403" fg:w="6"/><text x="30.2574%" y="1375.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="30.0074%" y="1349" width="0.4468%" height="15" fill="rgb(206,124,46)" fg:x="403" fg:w="6"/><text x="30.2574%" y="1359.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="30.0074%" y="1333" width="0.4468%" height="15" fill="rgb(249,21,11)" fg:x="403" fg:w="6"/><text x="30.2574%" y="1343.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="30.0819%" y="1317" width="0.3723%" height="15" fill="rgb(222,201,40)" fg:x="404" fg:w="5"/><text x="30.3319%" y="1327.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="30.0819%" y="1301" width="0.3723%" height="15" fill="rgb(235,61,29)" fg:x="404" fg:w="5"/><text x="30.3319%" y="1311.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="30.0819%" y="1285" width="0.3723%" height="15" fill="rgb(219,207,3)" fg:x="404" fg:w="5"/><text x="30.3319%" y="1295.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="30.0819%" y="1269" width="0.3723%" height="15" fill="rgb(222,56,46)" fg:x="404" fg:w="5"/><text x="30.3319%" y="1279.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="30.0819%" y="1253" width="0.3723%" height="15" fill="rgb(239,76,54)" fg:x="404" fg:w="5"/><text x="30.3319%" y="1263.50"></text></g><g><title>[unknown] (4 samples, 0.30%)</title><rect x="30.1564%" y="1237" width="0.2978%" height="15" fill="rgb(231,124,27)" fg:x="405" fg:w="4"/><text x="30.4064%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="30.4542%" y="1189" width="0.0745%" height="15" fill="rgb(249,195,6)" fg:x="409" fg:w="1"/><text x="30.7042%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="30.4542%" y="1173" width="0.0745%" height="15" fill="rgb(237,174,47)" fg:x="409" fg:w="1"/><text x="30.7042%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="30.4542%" y="1157" width="0.0745%" height="15" fill="rgb(206,201,31)" fg:x="409" fg:w="1"/><text x="30.7042%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="30.4542%" y="1141" width="0.0745%" height="15" fill="rgb(231,57,52)" fg:x="409" fg:w="1"/><text x="30.7042%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="30.4542%" y="1125" width="0.0745%" height="15" fill="rgb(248,177,22)" fg:x="409" fg:w="1"/><text x="30.7042%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="30.4542%" y="1109" width="0.0745%" height="15" fill="rgb(215,211,37)" fg:x="409" fg:w="1"/><text x="30.7042%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="30.4542%" y="1093" width="0.0745%" height="15" fill="rgb(241,128,51)" fg:x="409" fg:w="1"/><text x="30.7042%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="30.4542%" y="1077" width="0.0745%" height="15" fill="rgb(227,165,31)" fg:x="409" fg:w="1"/><text x="30.7042%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="30.4542%" y="1061" width="0.0745%" height="15" fill="rgb(228,167,24)" fg:x="409" fg:w="1"/><text x="30.7042%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="30.4542%" y="1045" width="0.0745%" height="15" fill="rgb(228,143,12)" fg:x="409" fg:w="1"/><text x="30.7042%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (6 samples, 0.45%)</title><rect x="30.4542%" y="1429" width="0.4468%" height="15" fill="rgb(249,149,8)" fg:x="409" fg:w="6"/><text x="30.7042%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.45%)</title><rect x="30.4542%" y="1413" width="0.4468%" height="15" fill="rgb(243,35,44)" fg:x="409" fg:w="6"/><text x="30.7042%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.45%)</title><rect x="30.4542%" y="1397" width="0.4468%" height="15" fill="rgb(246,89,9)" fg:x="409" fg:w="6"/><text x="30.7042%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.45%)</title><rect x="30.4542%" y="1381" width="0.4468%" height="15" fill="rgb(233,213,13)" fg:x="409" fg:w="6"/><text x="30.7042%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.45%)</title><rect x="30.4542%" y="1365" width="0.4468%" height="15" fill="rgb(233,141,41)" fg:x="409" fg:w="6"/><text x="30.7042%" y="1375.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.45%)</title><rect x="30.4542%" y="1349" width="0.4468%" height="15" fill="rgb(239,167,4)" fg:x="409" fg:w="6"/><text x="30.7042%" y="1359.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.45%)</title><rect x="30.4542%" y="1333" width="0.4468%" height="15" fill="rgb(209,217,16)" fg:x="409" fg:w="6"/><text x="30.7042%" y="1343.50"></text></g><g><title>_mi_malloc_generic (6 samples, 0.45%)</title><rect x="30.4542%" y="1317" width="0.4468%" height="15" fill="rgb(219,88,35)" fg:x="409" fg:w="6"/><text x="30.7042%" y="1327.50"></text></g><g><title>mi_find_page (6 samples, 0.45%)</title><rect x="30.4542%" y="1301" width="0.4468%" height="15" fill="rgb(220,193,23)" fg:x="409" fg:w="6"/><text x="30.7042%" y="1311.50"></text></g><g><title>mi_large_huge_page_alloc (6 samples, 0.45%)</title><rect x="30.4542%" y="1285" width="0.4468%" height="15" fill="rgb(230,90,52)" fg:x="409" fg:w="6"/><text x="30.7042%" y="1295.50"></text></g><g><title>mi_page_fresh_alloc (6 samples, 0.45%)</title><rect x="30.4542%" y="1269" width="0.4468%" height="15" fill="rgb(252,106,19)" fg:x="409" fg:w="6"/><text x="30.7042%" y="1279.50"></text></g><g><title>_mi_segment_page_alloc (6 samples, 0.45%)</title><rect x="30.4542%" y="1253" width="0.4468%" height="15" fill="rgb(206,74,20)" fg:x="409" fg:w="6"/><text x="30.7042%" y="1263.50"></text></g><g><title>mi_segment_huge_page_alloc (6 samples, 0.45%)</title><rect x="30.4542%" y="1237" width="0.4468%" height="15" fill="rgb(230,138,44)" fg:x="409" fg:w="6"/><text x="30.7042%" y="1247.50"></text></g><g><title>mi_segment_alloc (6 samples, 0.45%)</title><rect x="30.4542%" y="1221" width="0.4468%" height="15" fill="rgb(235,182,43)" fg:x="409" fg:w="6"/><text x="30.7042%" y="1231.50"></text></g><g><title>mi_segment_init (6 samples, 0.45%)</title><rect x="30.4542%" y="1205" width="0.4468%" height="15" fill="rgb(242,16,51)" fg:x="409" fg:w="6"/><text x="30.7042%" y="1215.50"></text></g><g><title>_mi_arena_alloc_aligned (5 samples, 0.37%)</title><rect x="30.5287%" y="1189" width="0.3723%" height="15" fill="rgb(248,9,4)" fg:x="410" fg:w="5"/><text x="30.7787%" y="1199.50"></text></g><g><title>_mi_os_alloc_aligned (5 samples, 0.37%)</title><rect x="30.5287%" y="1173" width="0.3723%" height="15" fill="rgb(210,31,22)" fg:x="410" fg:w="5"/><text x="30.7787%" y="1183.50"></text></g><g><title>mi_os_mem_alloc_aligned (5 samples, 0.37%)</title><rect x="30.5287%" y="1157" width="0.3723%" height="15" fill="rgb(239,54,39)" fg:x="410" fg:w="5"/><text x="30.7787%" y="1167.50"></text></g><g><title>mi_os_mem_alloc (5 samples, 0.37%)</title><rect x="30.5287%" y="1141" width="0.3723%" height="15" fill="rgb(230,99,41)" fg:x="410" fg:w="5"/><text x="30.7787%" y="1151.50"></text></g><g><title>mi_unix_mmap (5 samples, 0.37%)</title><rect x="30.5287%" y="1125" width="0.3723%" height="15" fill="rgb(253,106,12)" fg:x="410" fg:w="5"/><text x="30.7787%" y="1135.50"></text></g><g><title>mi_unix_mmapx (5 samples, 0.37%)</title><rect x="30.5287%" y="1109" width="0.3723%" height="15" fill="rgb(213,46,41)" fg:x="410" fg:w="5"/><text x="30.7787%" y="1119.50"></text></g><g><title>__GI___mmap64 (5 samples, 0.37%)</title><rect x="30.5287%" y="1093" width="0.3723%" height="15" fill="rgb(215,133,35)" fg:x="410" fg:w="5"/><text x="30.7787%" y="1103.50"></text></g><g><title>__GI___mmap64 (5 samples, 0.37%)</title><rect x="30.5287%" y="1077" width="0.3723%" height="15" fill="rgb(213,28,5)" fg:x="410" fg:w="5"/><text x="30.7787%" y="1087.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="30.5287%" y="1061" width="0.3723%" height="15" fill="rgb(215,77,49)" fg:x="410" fg:w="5"/><text x="30.7787%" y="1071.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="30.5287%" y="1045" width="0.3723%" height="15" fill="rgb(248,100,22)" fg:x="410" fg:w="5"/><text x="30.7787%" y="1055.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="30.5287%" y="1029" width="0.3723%" height="15" fill="rgb(208,67,9)" fg:x="410" fg:w="5"/><text x="30.7787%" y="1039.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="30.5287%" y="1013" width="0.3723%" height="15" fill="rgb(219,133,21)" fg:x="410" fg:w="5"/><text x="30.7787%" y="1023.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="30.5287%" y="997" width="0.3723%" height="15" fill="rgb(246,46,29)" fg:x="410" fg:w="5"/><text x="30.7787%" y="1007.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="30.5287%" y="981" width="0.3723%" height="15" fill="rgb(246,185,52)" fg:x="410" fg:w="5"/><text x="30.7787%" y="991.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="30.5287%" y="965" width="0.3723%" height="15" fill="rgb(252,136,11)" fg:x="410" fg:w="5"/><text x="30.7787%" y="975.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="30.5287%" y="949" width="0.3723%" height="15" fill="rgb(219,138,53)" fg:x="410" fg:w="5"/><text x="30.7787%" y="959.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="30.5287%" y="933" width="0.3723%" height="15" fill="rgb(211,51,23)" fg:x="410" fg:w="5"/><text x="30.7787%" y="943.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="30.5287%" y="917" width="0.3723%" height="15" fill="rgb(247,221,28)" fg:x="410" fg:w="5"/><text x="30.7787%" y="927.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="30.5287%" y="901" width="0.3723%" height="15" fill="rgb(251,222,45)" fg:x="410" fg:w="5"/><text x="30.7787%" y="911.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="30.5287%" y="885" width="0.3723%" height="15" fill="rgb(217,162,53)" fg:x="410" fg:w="5"/><text x="30.7787%" y="895.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="30.5287%" y="869" width="0.3723%" height="15" fill="rgb(229,93,14)" fg:x="410" fg:w="5"/><text x="30.7787%" y="879.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="30.5287%" y="853" width="0.3723%" height="15" fill="rgb(209,67,49)" fg:x="410" fg:w="5"/><text x="30.7787%" y="863.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="30.5287%" y="837" width="0.3723%" height="15" fill="rgb(213,87,29)" fg:x="410" fg:w="5"/><text x="30.7787%" y="847.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="30.5287%" y="821" width="0.3723%" height="15" fill="rgb(205,151,52)" fg:x="410" fg:w="5"/><text x="30.7787%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u16,demoparser::parsing::data_table::ServerClass,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.07%)</title><rect x="30.9010%" y="1429" width="0.0745%" height="15" fill="rgb(253,215,39)" fg:x="415" fg:w="1"/><text x="31.1510%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u16,demoparser::parsing::data_table::ServerClass,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.07%)</title><rect x="30.9010%" y="1413" width="0.0745%" height="15" fill="rgb(221,220,41)" fg:x="415" fg:w="1"/><text x="31.1510%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u16,demoparser::parsing::data_table::ServerClass)&gt;&gt; (1 samples, 0.07%)</title><rect x="30.9010%" y="1397" width="0.0745%" height="15" fill="rgb(218,133,21)" fg:x="415" fg:w="1"/><text x="31.1510%" y="1407.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="30.9010%" y="1381" width="0.0745%" height="15" fill="rgb(221,193,43)" fg:x="415" fg:w="1"/><text x="31.1510%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.07%)</title><rect x="30.9010%" y="1365" width="0.0745%" height="15" fill="rgb(240,128,52)" fg:x="415" fg:w="1"/><text x="31.1510%" y="1375.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.07%)</title><rect x="30.9010%" y="1349" width="0.0745%" height="15" fill="rgb(253,114,12)" fg:x="415" fg:w="1"/><text x="31.1510%" y="1359.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.07%)</title><rect x="30.9010%" y="1333" width="0.0745%" height="15" fill="rgb(215,223,47)" fg:x="415" fg:w="1"/><text x="31.1510%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u16,demoparser::parsing::data_table::ServerClass)&gt; (1 samples, 0.07%)</title><rect x="30.9010%" y="1317" width="0.0745%" height="15" fill="rgb(248,225,23)" fg:x="415" fg:w="1"/><text x="31.1510%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::data_table::ServerClass&gt; (1 samples, 0.07%)</title><rect x="30.9010%" y="1301" width="0.0745%" height="15" fill="rgb(250,108,0)" fg:x="415" fg:w="1"/><text x="31.1510%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::entities::Prop&gt;&gt; (1 samples, 0.07%)</title><rect x="30.9010%" y="1285" width="0.0745%" height="15" fill="rgb(228,208,7)" fg:x="415" fg:w="1"/><text x="31.1510%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="30.9010%" y="1269" width="0.0745%" height="15" fill="rgb(244,45,10)" fg:x="415" fg:w="1"/><text x="31.1510%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::entities::Prop]&gt; (1 samples, 0.07%)</title><rect x="30.9010%" y="1253" width="0.0745%" height="15" fill="rgb(207,125,25)" fg:x="415" fg:w="1"/><text x="31.1510%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::entities::Prop&gt; (1 samples, 0.07%)</title><rect x="30.9010%" y="1237" width="0.0745%" height="15" fill="rgb(210,195,18)" fg:x="415" fg:w="1"/><text x="31.1510%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.07%)</title><rect x="30.9010%" y="1221" width="0.0745%" height="15" fill="rgb(249,80,12)" fg:x="415" fg:w="1"/><text x="31.1510%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="30.9010%" y="1205" width="0.0745%" height="15" fill="rgb(221,65,9)" fg:x="415" fg:w="1"/><text x="31.1510%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="30.9010%" y="1189" width="0.0745%" height="15" fill="rgb(235,49,36)" fg:x="415" fg:w="1"/><text x="31.1510%" y="1199.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="30.9010%" y="1173" width="0.0745%" height="15" fill="rgb(225,32,20)" fg:x="415" fg:w="1"/><text x="31.1510%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.07%)</title><rect x="30.9010%" y="1157" width="0.0745%" height="15" fill="rgb(215,141,46)" fg:x="415" fg:w="1"/><text x="31.1510%" y="1167.50"></text></g><g><title>crossbeam_queue::seg_queue::SegQueue&lt;T&gt;::len (68 samples, 5.06%)</title><rect x="30.9754%" y="1429" width="5.0633%" height="15" fill="rgb(250,160,47)" fg:x="416" fg:w="68"/><text x="31.2254%" y="1439.50">crossb..</text></g><g><title>core::sync::atomic::AtomicUsize::load (44 samples, 3.28%)</title><rect x="32.7625%" y="1413" width="3.2762%" height="15" fill="rgb(216,222,40)" fg:x="440" fg:w="44"/><text x="33.0125%" y="1423.50">cor..</text></g><g><title>core::sync::atomic::atomic_load (44 samples, 3.28%)</title><rect x="32.7625%" y="1397" width="3.2762%" height="15" fill="rgb(234,217,39)" fg:x="440" fg:w="44"/><text x="33.0125%" y="1407.50">cor..</text></g><g><title>__GI___sched_yield (1 samples, 0.07%)</title><rect x="40.9531%" y="1413" width="0.0745%" height="15" fill="rgb(207,178,40)" fg:x="550" fg:w="1"/><text x="41.2031%" y="1423.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="40.9531%" y="1397" width="0.0745%" height="15" fill="rgb(221,136,13)" fg:x="550" fg:w="1"/><text x="41.2031%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="40.9531%" y="1381" width="0.0745%" height="15" fill="rgb(249,199,10)" fg:x="550" fg:w="1"/><text x="41.2031%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="40.9531%" y="1365" width="0.0745%" height="15" fill="rgb(249,222,13)" fg:x="550" fg:w="1"/><text x="41.2031%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="40.9531%" y="1349" width="0.0745%" height="15" fill="rgb(244,185,38)" fg:x="550" fg:w="1"/><text x="41.2031%" y="1359.50"></text></g><g><title>_mi_free_block_mt (2 samples, 0.15%)</title><rect x="41.0276%" y="1413" width="0.1489%" height="15" fill="rgb(236,202,9)" fg:x="551" fg:w="2"/><text x="41.2776%" y="1423.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (6 samples, 0.45%)</title><rect x="41.1765%" y="1413" width="0.4468%" height="15" fill="rgb(250,229,37)" fg:x="553" fg:w="6"/><text x="41.4265%" y="1423.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (1 samples, 0.07%)</title><rect x="41.6232%" y="1413" width="0.0745%" height="15" fill="rgb(206,174,23)" fg:x="559" fg:w="1"/><text x="41.8732%" y="1423.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (8 samples, 0.60%)</title><rect x="41.6977%" y="1413" width="0.5957%" height="15" fill="rgb(211,33,43)" fg:x="560" fg:w="8"/><text x="41.9477%" y="1423.50"></text></g><g><title>core::sync::atomic::atomic_load (8 samples, 0.60%)</title><rect x="41.6977%" y="1397" width="0.5957%" height="15" fill="rgb(245,58,50)" fg:x="560" fg:w="8"/><text x="41.9477%" y="1407.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (15 samples, 1.12%)</title><rect x="42.2934%" y="1413" width="1.1169%" height="15" fill="rgb(244,68,36)" fg:x="568" fg:w="15"/><text x="42.5434%" y="1423.50"></text></g><g><title>core::sync::atomic::atomic_or (15 samples, 1.12%)</title><rect x="42.2934%" y="1397" width="1.1169%" height="15" fill="rgb(232,229,15)" fg:x="568" fg:w="15"/><text x="42.5434%" y="1407.50"></text></g><g><title>crossbeam_queue::seg_queue::Slot&lt;T&gt;::wait_write (14 samples, 1.04%)</title><rect x="43.4103%" y="1413" width="1.0424%" height="15" fill="rgb(254,30,23)" fg:x="583" fg:w="14"/><text x="43.6603%" y="1423.50"></text></g><g><title>core::cmp::Ord::min (9 samples, 0.67%)</title><rect x="44.4527%" y="1397" width="0.6701%" height="15" fill="rgb(235,160,14)" fg:x="597" fg:w="9"/><text x="44.7027%" y="1407.50"></text></g><g><title>crossbeam_queue::seg_queue::SegQueue&lt;T&gt;::pop (406 samples, 30.23%)</title><rect x="36.0387%" y="1429" width="30.2308%" height="15" fill="rgb(212,155,44)" fg:x="484" fg:w="406"/><text x="36.2887%" y="1439.50">crossbeam_queue::seg_queue::SegQueue&lt;T&gt;::pop</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (293 samples, 21.82%)</title><rect x="44.4527%" y="1413" width="21.8168%" height="15" fill="rgb(226,2,50)" fg:x="597" fg:w="293"/><text x="44.7027%" y="1423.50">crossbeam_utils::backoff::Backoff:..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (284 samples, 21.15%)</title><rect x="45.1229%" y="1397" width="21.1467%" height="15" fill="rgb(234,177,6)" fg:x="606" fg:w="284"/><text x="45.3729%" y="1407.50">core::iter::range::&lt;impl core::it..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (284 samples, 21.15%)</title><rect x="45.1229%" y="1381" width="21.1467%" height="15" fill="rgb(217,24,9)" fg:x="606" fg:w="284"/><text x="45.3729%" y="1391.50">&lt;core::ops::range::Range&lt;T&gt; as co..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (62 samples, 4.62%)</title><rect x="61.6530%" y="1365" width="4.6165%" height="15" fill="rgb(220,13,46)" fg:x="828" fg:w="62"/><text x="61.9030%" y="1375.50">core:..</text></g><g><title>demoparser::parsing::entities::parse_packet_entities (1 samples, 0.07%)</title><rect x="66.2695%" y="1429" width="0.0745%" height="15" fill="rgb(239,221,27)" fg:x="890" fg:w="1"/><text x="66.5195%" y="1439.50"></text></g><g><title>demoparser::parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::_parse_packet_entities (1 samples, 0.07%)</title><rect x="66.2695%" y="1413" width="0.0745%" height="15" fill="rgb(222,198,25)" fg:x="890" fg:w="1"/><text x="66.5195%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;csgoproto::netmessages::CSVCMsg_PacketEntities&gt; (1 samples, 0.07%)</title><rect x="66.2695%" y="1397" width="0.0745%" height="15" fill="rgb(211,99,13)" fg:x="890" fg:w="1"/><text x="66.5195%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (1 samples, 0.07%)</title><rect x="66.2695%" y="1381" width="0.0745%" height="15" fill="rgb(232,111,31)" fg:x="890" fg:w="1"/><text x="66.5195%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="66.2695%" y="1365" width="0.0745%" height="15" fill="rgb(245,82,37)" fg:x="890" fg:w="1"/><text x="66.5195%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="66.2695%" y="1349" width="0.0745%" height="15" fill="rgb(227,149,46)" fg:x="890" fg:w="1"/><text x="66.5195%" y="1359.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="66.2695%" y="1333" width="0.0745%" height="15" fill="rgb(218,36,50)" fg:x="890" fg:w="1"/><text x="66.5195%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="66.2695%" y="1317" width="0.0745%" height="15" fill="rgb(226,80,48)" fg:x="890" fg:w="1"/><text x="66.5195%" y="1327.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="66.2695%" y="1301" width="0.0745%" height="15" fill="rgb(238,224,15)" fg:x="890" fg:w="1"/><text x="66.5195%" y="1311.50"></text></g><g><title>mi_free (1 samples, 0.07%)</title><rect x="66.2695%" y="1285" width="0.0745%" height="15" fill="rgb(241,136,10)" fg:x="890" fg:w="1"/><text x="66.5195%" y="1295.50"></text></g><g><title>_mi_segment_page_of (1 samples, 0.07%)</title><rect x="66.2695%" y="1269" width="0.0745%" height="15" fill="rgb(208,32,45)" fg:x="890" fg:w="1"/><text x="66.5195%" y="1279.50"></text></g><g><title>mi_slice_first (1 samples, 0.07%)</title><rect x="66.2695%" y="1253" width="0.0745%" height="15" fill="rgb(207,135,9)" fg:x="890" fg:w="1"/><text x="66.5195%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="66.2695%" y="1237" width="0.0745%" height="15" fill="rgb(206,86,44)" fg:x="890" fg:w="1"/><text x="66.5195%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;demoparser::parsing::parser::ParsingMaps&gt;&gt;&gt; (7 samples, 0.52%)</title><rect x="66.4185%" y="1413" width="0.5212%" height="15" fill="rgb(245,177,15)" fg:x="892" fg:w="7"/><text x="66.6685%" y="1423.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.52%)</title><rect x="66.4185%" y="1397" width="0.5212%" height="15" fill="rgb(206,64,50)" fg:x="892" fg:w="7"/><text x="66.6685%" y="1407.50"></text></g><g><title>crossbeam_queue::seg_queue::SegQueue&lt;T&gt;::pop (1 samples, 0.07%)</title><rect x="66.9397%" y="1413" width="0.0745%" height="15" fill="rgb(234,36,40)" fg:x="899" fg:w="1"/><text x="67.1897%" y="1423.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.07%)</title><rect x="66.9397%" y="1397" width="0.0745%" height="15" fill="rgb(213,64,8)" fg:x="899" fg:w="1"/><text x="67.1897%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="66.9397%" y="1381" width="0.0745%" height="15" fill="rgb(210,75,36)" fg:x="899" fg:w="1"/><text x="67.1897%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;csgoproto::netmessages::CSVCMsg_PacketEntities&gt; (2 samples, 0.15%)</title><rect x="67.3120%" y="1381" width="0.1489%" height="15" fill="rgb(229,88,21)" fg:x="904" fg:w="2"/><text x="67.5620%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (2 samples, 0.15%)</title><rect x="67.3120%" y="1365" width="0.1489%" height="15" fill="rgb(252,204,47)" fg:x="904" fg:w="2"/><text x="67.5620%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.15%)</title><rect x="67.3120%" y="1349" width="0.1489%" height="15" fill="rgb(208,77,27)" fg:x="904" fg:w="2"/><text x="67.5620%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.15%)</title><rect x="67.3120%" y="1333" width="0.1489%" height="15" fill="rgb(221,76,26)" fg:x="904" fg:w="2"/><text x="67.5620%" y="1343.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.15%)</title><rect x="67.3120%" y="1317" width="0.1489%" height="15" fill="rgb(225,139,18)" fg:x="904" fg:w="2"/><text x="67.5620%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.15%)</title><rect x="67.3120%" y="1301" width="0.1489%" height="15" fill="rgb(230,137,11)" fg:x="904" fg:w="2"/><text x="67.5620%" y="1311.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.15%)</title><rect x="67.3120%" y="1285" width="0.1489%" height="15" fill="rgb(212,28,1)" fg:x="904" fg:w="2"/><text x="67.5620%" y="1295.50"></text></g><g><title>mi_free (2 samples, 0.15%)</title><rect x="67.3120%" y="1269" width="0.1489%" height="15" fill="rgb(248,164,17)" fg:x="904" fg:w="2"/><text x="67.5620%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (5 samples, 0.37%)</title><rect x="67.8332%" y="1365" width="0.3723%" height="15" fill="rgb(222,171,42)" fg:x="911" fg:w="5"/><text x="68.0832%" y="1375.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (5 samples, 0.37%)</title><rect x="67.8332%" y="1349" width="0.3723%" height="15" fill="rgb(243,84,45)" fg:x="911" fg:w="5"/><text x="68.0832%" y="1359.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.37%)</title><rect x="67.8332%" y="1333" width="0.3723%" height="15" fill="rgb(252,49,23)" fg:x="911" fg:w="5"/><text x="68.0832%" y="1343.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.30%)</title><rect x="68.2055%" y="1365" width="0.2978%" height="15" fill="rgb(215,19,7)" fg:x="916" fg:w="4"/><text x="68.4555%" y="1375.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (3 samples, 0.22%)</title><rect x="68.5034%" y="1365" width="0.2234%" height="15" fill="rgb(238,81,41)" fg:x="920" fg:w="3"/><text x="68.7534%" y="1375.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.07%)</title><rect x="68.7267%" y="1365" width="0.0745%" height="15" fill="rgb(210,199,37)" fg:x="923" fg:w="1"/><text x="68.9767%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::variants::PropData&gt; (2 samples, 0.15%)</title><rect x="68.8012%" y="1365" width="0.1489%" height="15" fill="rgb(244,192,49)" fg:x="924" fg:w="2"/><text x="69.0512%" y="1375.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (17 samples, 1.27%)</title><rect x="68.9501%" y="1317" width="1.2658%" height="15" fill="rgb(226,211,11)" fg:x="926" fg:w="17"/><text x="69.2001%" y="1327.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (17 samples, 1.27%)</title><rect x="68.9501%" y="1301" width="1.2658%" height="15" fill="rgb(236,162,54)" fg:x="926" fg:w="17"/><text x="69.2001%" y="1311.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (17 samples, 1.27%)</title><rect x="68.9501%" y="1285" width="1.2658%" height="15" fill="rgb(220,229,9)" fg:x="926" fg:w="17"/><text x="69.2001%" y="1295.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (17 samples, 1.27%)</title><rect x="68.9501%" y="1269" width="1.2658%" height="15" fill="rgb(250,87,22)" fg:x="926" fg:w="17"/><text x="69.2001%" y="1279.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (17 samples, 1.27%)</title><rect x="68.9501%" y="1253" width="1.2658%" height="15" fill="rgb(239,43,17)" fg:x="926" fg:w="17"/><text x="69.2001%" y="1263.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (17 samples, 1.27%)</title><rect x="68.9501%" y="1237" width="1.2658%" height="15" fill="rgb(231,177,25)" fg:x="926" fg:w="17"/><text x="69.2001%" y="1247.50"></text></g><g><title>[libc.so.6] (6 samples, 0.45%)</title><rect x="69.7692%" y="1221" width="0.4468%" height="15" fill="rgb(219,179,1)" fg:x="937" fg:w="6"/><text x="70.0192%" y="1231.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (20 samples, 1.49%)</title><rect x="68.9501%" y="1365" width="1.4892%" height="15" fill="rgb(238,219,53)" fg:x="926" fg:w="20"/><text x="69.2001%" y="1375.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (20 samples, 1.49%)</title><rect x="68.9501%" y="1349" width="1.4892%" height="15" fill="rgb(232,167,36)" fg:x="926" fg:w="20"/><text x="69.2001%" y="1359.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (20 samples, 1.49%)</title><rect x="68.9501%" y="1333" width="1.4892%" height="15" fill="rgb(244,19,51)" fg:x="926" fg:w="20"/><text x="69.2001%" y="1343.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.22%)</title><rect x="70.2159%" y="1317" width="0.2234%" height="15" fill="rgb(224,6,22)" fg:x="943" fg:w="3"/><text x="70.4659%" y="1327.50"></text></g><g><title>demoparser::parsing::entities::get_cls_id (3 samples, 0.22%)</title><rect x="70.4393%" y="1365" width="0.2234%" height="15" fill="rgb(224,145,5)" fg:x="946" fg:w="3"/><text x="70.6893%" y="1375.50"></text></g><g><title>bitter::LittleEndianReader::has_data_for_unaligned_loads (1 samples, 0.07%)</title><rect x="72.9710%" y="1285" width="0.0745%" height="15" fill="rgb(234,130,49)" fg:x="980" fg:w="1"/><text x="73.2210%" y="1295.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_boolie (19 samples, 1.41%)</title><rect x="71.7051%" y="1333" width="1.4147%" height="15" fill="rgb(254,6,2)" fg:x="963" fg:w="19"/><text x="71.9551%" y="1343.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bit (19 samples, 1.41%)</title><rect x="71.7051%" y="1317" width="1.4147%" height="15" fill="rgb(208,96,46)" fg:x="963" fg:w="19"/><text x="71.9551%" y="1327.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (19 samples, 1.41%)</title><rect x="71.7051%" y="1301" width="1.4147%" height="15" fill="rgb(239,3,39)" fg:x="963" fg:w="19"/><text x="71.9551%" y="1311.50"></text></g><g><title>bitter::LittleEndianReader::refill (1 samples, 0.07%)</title><rect x="73.0454%" y="1285" width="0.0745%" height="15" fill="rgb(233,210,1)" fg:x="981" fg:w="1"/><text x="73.2954%" y="1295.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.07%)</title><rect x="73.0454%" y="1269" width="0.0745%" height="15" fill="rgb(244,137,37)" fg:x="981" fg:w="1"/><text x="73.2954%" y="1279.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.07%)</title><rect x="73.0454%" y="1253" width="0.0745%" height="15" fill="rgb(240,136,2)" fg:x="981" fg:w="1"/><text x="73.2954%" y="1263.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_inx (50 samples, 3.72%)</title><rect x="71.1095%" y="1349" width="3.7230%" height="15" fill="rgb(239,18,37)" fg:x="955" fg:w="50"/><text x="71.3595%" y="1359.50">demo..</text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_nbits (23 samples, 1.71%)</title><rect x="73.1199%" y="1333" width="1.7126%" height="15" fill="rgb(218,185,22)" fg:x="982" fg:w="23"/><text x="73.3699%" y="1343.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (23 samples, 1.71%)</title><rect x="73.1199%" y="1317" width="1.7126%" height="15" fill="rgb(225,218,4)" fg:x="982" fg:w="23"/><text x="73.3699%" y="1327.50"></text></g><g><title>bitter::LittleEndianReader::refill (2 samples, 0.15%)</title><rect x="74.6835%" y="1301" width="0.1489%" height="15" fill="rgb(230,182,32)" fg:x="1003" fg:w="2"/><text x="74.9335%" y="1311.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.15%)</title><rect x="74.6835%" y="1285" width="0.1489%" height="15" fill="rgb(242,56,43)" fg:x="1003" fg:w="2"/><text x="74.9335%" y="1295.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.15%)</title><rect x="74.6835%" y="1269" width="0.1489%" height="15" fill="rgb(233,99,24)" fg:x="1003" fg:w="2"/><text x="74.9335%" y="1279.50"></text></g><g><title>demoparser::parsing::entities::get_indicies (71 samples, 5.29%)</title><rect x="70.6627%" y="1365" width="5.2867%" height="15" fill="rgb(234,209,42)" fg:x="949" fg:w="71"/><text x="70.9127%" y="1375.50">demopa..</text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (15 samples, 1.12%)</title><rect x="74.8325%" y="1349" width="1.1169%" height="15" fill="rgb(227,7,12)" fg:x="1005" fg:w="15"/><text x="75.0825%" y="1359.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (3 samples, 0.22%)</title><rect x="75.7260%" y="1333" width="0.2234%" height="15" fill="rgb(245,203,43)" fg:x="1017" fg:w="3"/><text x="75.9760%" y="1343.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (2 samples, 0.15%)</title><rect x="75.8004%" y="1317" width="0.1489%" height="15" fill="rgb(238,205,33)" fg:x="1018" fg:w="2"/><text x="76.0504%" y="1327.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode_array (1 samples, 0.07%)</title><rect x="79.0767%" y="1349" width="0.0745%" height="15" fill="rgb(231,56,7)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="1359.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1 samples, 0.07%)</title><rect x="79.0767%" y="1333" width="0.0745%" height="15" fill="rgb(244,186,29)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="1343.50"></text></g><g><title>protobuf::text_format::print::fmt (1 samples, 0.07%)</title><rect x="79.0767%" y="1317" width="0.0745%" height="15" fill="rgb(234,111,31)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="1327.50"></text></g><g><title>protobuf::text_format::print::print_to_string_internal (1 samples, 0.07%)</title><rect x="79.0767%" y="1301" width="0.0745%" height="15" fill="rgb(241,149,10)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="1311.50"></text></g><g><title>protobuf::text_format::print::print_to_internal (1 samples, 0.07%)</title><rect x="79.0767%" y="1285" width="0.0745%" height="15" fill="rgb(249,206,44)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="1295.50"></text></g><g><title>&lt;M as protobuf::message_dyn::MessageDyn&gt;::descriptor_dyn (1 samples, 0.07%)</title><rect x="79.0767%" y="1269" width="0.0745%" height="15" fill="rgb(251,153,30)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="1279.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_send_table::Sendprop_t as protobuf::message_full::MessageFull&gt;::descriptor (1 samples, 0.07%)</title><rect x="79.0767%" y="1253" width="0.0745%" height="15" fill="rgb(239,152,38)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="1263.50"></text></g><g><title>protobuf::lazy::Lazy&lt;T&gt;::get (1 samples, 0.07%)</title><rect x="79.0767%" y="1237" width="0.0745%" height="15" fill="rgb(249,139,47)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="1247.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.07%)</title><rect x="79.0767%" y="1221" width="0.0745%" height="15" fill="rgb(244,64,35)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="1231.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.07%)</title><rect x="79.0767%" y="1205" width="0.0745%" height="15" fill="rgb(216,46,15)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="1215.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.07%)</title><rect x="79.0767%" y="1189" width="0.0745%" height="15" fill="rgb(250,74,19)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="1199.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.07%)</title><rect x="79.0767%" y="1173" width="0.0745%" height="15" fill="rgb(249,42,33)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="1183.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.07%)</title><rect x="79.0767%" y="1157" width="0.0745%" height="15" fill="rgb(242,149,17)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="1167.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.07%)</title><rect x="79.0767%" y="1141" width="0.0745%" height="15" fill="rgb(244,29,21)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="1151.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (1 samples, 0.07%)</title><rect x="79.0767%" y="1125" width="0.0745%" height="15" fill="rgb(220,130,37)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="1135.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_send_table::Sendprop_t as protobuf::message_full::MessageFull&gt;::descriptor::{{closure}} (1 samples, 0.07%)</title><rect x="79.0767%" y="1109" width="0.0745%" height="15" fill="rgb(211,67,2)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="1119.50"></text></g><g><title>csgoproto::netmessages::file_descriptor (1 samples, 0.07%)</title><rect x="79.0767%" y="1093" width="0.0745%" height="15" fill="rgb(235,68,52)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="1103.50"></text></g><g><title>protobuf::lazy::Lazy&lt;T&gt;::get (1 samples, 0.07%)</title><rect x="79.0767%" y="1077" width="0.0745%" height="15" fill="rgb(246,142,3)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="1087.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.07%)</title><rect x="79.0767%" y="1061" width="0.0745%" height="15" fill="rgb(241,25,7)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="1071.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.07%)</title><rect x="79.0767%" y="1045" width="0.0745%" height="15" fill="rgb(242,119,39)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="1055.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.07%)</title><rect x="79.0767%" y="1029" width="0.0745%" height="15" fill="rgb(241,98,45)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="1039.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.07%)</title><rect x="79.0767%" y="1013" width="0.0745%" height="15" fill="rgb(254,28,30)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.07%)</title><rect x="79.0767%" y="997" width="0.0745%" height="15" fill="rgb(241,142,54)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="1007.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.07%)</title><rect x="79.0767%" y="981" width="0.0745%" height="15" fill="rgb(222,85,15)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="991.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (1 samples, 0.07%)</title><rect x="79.0767%" y="965" width="0.0745%" height="15" fill="rgb(210,85,47)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="975.50"></text></g><g><title>csgoproto::netmessages::file_descriptor::{{closure}} (1 samples, 0.07%)</title><rect x="79.0767%" y="949" width="0.0745%" height="15" fill="rgb(224,206,25)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="959.50"></text></g><g><title>protobuf::lazy::Lazy&lt;T&gt;::get (1 samples, 0.07%)</title><rect x="79.0767%" y="933" width="0.0745%" height="15" fill="rgb(243,201,19)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="943.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.07%)</title><rect x="79.0767%" y="917" width="0.0745%" height="15" fill="rgb(236,59,4)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="927.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.07%)</title><rect x="79.0767%" y="901" width="0.0745%" height="15" fill="rgb(254,179,45)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="911.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.07%)</title><rect x="79.0767%" y="885" width="0.0745%" height="15" fill="rgb(226,14,10)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="895.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.07%)</title><rect x="79.0767%" y="869" width="0.0745%" height="15" fill="rgb(244,27,41)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.07%)</title><rect x="79.0767%" y="853" width="0.0745%" height="15" fill="rgb(235,35,32)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="863.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.07%)</title><rect x="79.0767%" y="837" width="0.0745%" height="15" fill="rgb(218,68,31)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="847.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (1 samples, 0.07%)</title><rect x="79.0767%" y="821" width="0.0745%" height="15" fill="rgb(207,120,37)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="831.50"></text></g><g><title>csgoproto::netmessages::file_descriptor::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="79.0767%" y="805" width="0.0745%" height="15" fill="rgb(227,98,0)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="815.50"></text></g><g><title>protobuf::descriptor::file_descriptor (1 samples, 0.07%)</title><rect x="79.0767%" y="789" width="0.0745%" height="15" fill="rgb(207,7,3)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="799.50"></text></g><g><title>protobuf::lazy::Lazy&lt;T&gt;::get (1 samples, 0.07%)</title><rect x="79.0767%" y="773" width="0.0745%" height="15" fill="rgb(206,98,19)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="783.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.07%)</title><rect x="79.0767%" y="757" width="0.0745%" height="15" fill="rgb(217,5,26)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="767.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.07%)</title><rect x="79.0767%" y="741" width="0.0745%" height="15" fill="rgb(235,190,38)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="751.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.07%)</title><rect x="79.0767%" y="725" width="0.0745%" height="15" fill="rgb(247,86,24)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="735.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.07%)</title><rect x="79.0767%" y="709" width="0.0745%" height="15" fill="rgb(205,101,16)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.07%)</title><rect x="79.0767%" y="693" width="0.0745%" height="15" fill="rgb(246,168,33)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="703.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.07%)</title><rect x="79.0767%" y="677" width="0.0745%" height="15" fill="rgb(231,114,1)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="687.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (1 samples, 0.07%)</title><rect x="79.0767%" y="661" width="0.0745%" height="15" fill="rgb(207,184,53)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="671.50"></text></g><g><title>protobuf::descriptor::file_descriptor::{{closure}} (1 samples, 0.07%)</title><rect x="79.0767%" y="645" width="0.0745%" height="15" fill="rgb(224,95,51)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="655.50"></text></g><g><title>protobuf::lazy::Lazy&lt;T&gt;::get (1 samples, 0.07%)</title><rect x="79.0767%" y="629" width="0.0745%" height="15" fill="rgb(212,188,45)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="639.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.07%)</title><rect x="79.0767%" y="613" width="0.0745%" height="15" fill="rgb(223,154,38)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="623.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.07%)</title><rect x="79.0767%" y="597" width="0.0745%" height="15" fill="rgb(251,22,52)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="607.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.07%)</title><rect x="79.0767%" y="581" width="0.0745%" height="15" fill="rgb(229,209,22)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="591.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.07%)</title><rect x="79.0767%" y="565" width="0.0745%" height="15" fill="rgb(234,138,34)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.07%)</title><rect x="79.0767%" y="549" width="0.0745%" height="15" fill="rgb(212,95,11)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="559.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.07%)</title><rect x="79.0767%" y="533" width="0.0745%" height="15" fill="rgb(240,179,47)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="543.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (1 samples, 0.07%)</title><rect x="79.0767%" y="517" width="0.0745%" height="15" fill="rgb(240,163,11)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="527.50"></text></g><g><title>protobuf::descriptor::file_descriptor::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="79.0767%" y="501" width="0.0745%" height="15" fill="rgb(236,37,12)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="511.50"></text></g><g><title>protobuf::descriptor::file_descriptor_proto (1 samples, 0.07%)</title><rect x="79.0767%" y="485" width="0.0745%" height="15" fill="rgb(232,164,16)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="495.50"></text></g><g><title>protobuf::lazy::Lazy&lt;T&gt;::get (1 samples, 0.07%)</title><rect x="79.0767%" y="469" width="0.0745%" height="15" fill="rgb(244,205,15)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="479.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.07%)</title><rect x="79.0767%" y="453" width="0.0745%" height="15" fill="rgb(223,117,47)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="463.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.07%)</title><rect x="79.0767%" y="437" width="0.0745%" height="15" fill="rgb(244,107,35)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="447.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.07%)</title><rect x="79.0767%" y="421" width="0.0745%" height="15" fill="rgb(205,140,8)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="431.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.07%)</title><rect x="79.0767%" y="405" width="0.0745%" height="15" fill="rgb(228,84,46)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.07%)</title><rect x="79.0767%" y="389" width="0.0745%" height="15" fill="rgb(254,188,9)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="399.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.07%)</title><rect x="79.0767%" y="373" width="0.0745%" height="15" fill="rgb(206,112,54)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="383.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (1 samples, 0.07%)</title><rect x="79.0767%" y="357" width="0.0745%" height="15" fill="rgb(216,84,49)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="367.50"></text></g><g><title>protobuf::descriptor::file_descriptor_proto::{{closure}} (1 samples, 0.07%)</title><rect x="79.0767%" y="341" width="0.0745%" height="15" fill="rgb(214,194,35)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="351.50"></text></g><g><title>protobuf::message::Message::parse_from_bytes (1 samples, 0.07%)</title><rect x="79.0767%" y="325" width="0.0745%" height="15" fill="rgb(249,28,3)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="335.50"></text></g><g><title>protobuf::message::Message::parse_from (1 samples, 0.07%)</title><rect x="79.0767%" y="309" width="0.0745%" height="15" fill="rgb(222,56,52)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="319.50"></text></g><g><title>&lt;protobuf::descriptor::FileDescriptorProto as protobuf::message::Message&gt;::merge_from (1 samples, 0.07%)</title><rect x="79.0767%" y="293" width="0.0745%" height="15" fill="rgb(245,217,50)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="303.50"></text></g><g><title>protobuf::rt::message::read_singular_message_into_field (1 samples, 0.07%)</title><rect x="79.0767%" y="277" width="0.0745%" height="15" fill="rgb(213,201,24)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="287.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::merge_message (1 samples, 0.07%)</title><rect x="79.0767%" y="261" width="0.0745%" height="15" fill="rgb(248,116,28)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="271.50"></text></g><g><title>&lt;protobuf::descriptor::SourceCodeInfo as protobuf::message::Message&gt;::merge_from (1 samples, 0.07%)</title><rect x="79.0767%" y="245" width="0.0745%" height="15" fill="rgb(219,72,43)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.07%)</title><rect x="79.0767%" y="229" width="0.0745%" height="15" fill="rgb(209,138,14)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.07%)</title><rect x="79.0767%" y="213" width="0.0745%" height="15" fill="rgb(222,18,33)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="79.0767%" y="197" width="0.0745%" height="15" fill="rgb(213,199,7)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="79.0767%" y="181" width="0.0745%" height="15" fill="rgb(250,110,10)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.07%)</title><rect x="79.0767%" y="165" width="0.0745%" height="15" fill="rgb(248,123,6)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.07%)</title><rect x="79.0767%" y="149" width="0.0745%" height="15" fill="rgb(206,91,31)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="159.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.07%)</title><rect x="79.0767%" y="133" width="0.0745%" height="15" fill="rgb(211,154,13)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="143.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.07%)</title><rect x="79.0767%" y="117" width="0.0745%" height="15" fill="rgb(225,148,7)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="127.50"></text></g><g><title>_mi_memcpy_aligned (1 samples, 0.07%)</title><rect x="79.0767%" y="101" width="0.0745%" height="15" fill="rgb(220,160,43)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="111.50"></text></g><g><title>_mi_memcpy (1 samples, 0.07%)</title><rect x="79.0767%" y="85" width="0.0745%" height="15" fill="rgb(213,52,39)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="95.50"></text></g><g><title>memcpy (1 samples, 0.07%)</title><rect x="79.0767%" y="69" width="0.0745%" height="15" fill="rgb(243,137,7)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="79.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="79.0767%" y="53" width="0.0745%" height="15" fill="rgb(230,79,13)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="79.0767%" y="37" width="0.0745%" height="15" fill="rgb(247,105,23)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="47.50"></text></g><g><title>bitter::LittleEndianReader::has_data_for_unaligned_loads (2 samples, 0.15%)</title><rect x="80.7893%" y="1269" width="0.1489%" height="15" fill="rgb(223,179,41)" fg:x="1085" fg:w="2"/><text x="81.0393%" y="1279.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode_special_float (12 samples, 0.89%)</title><rect x="80.1191%" y="1333" width="0.8935%" height="15" fill="rgb(218,9,34)" fg:x="1076" fg:w="12"/><text x="80.3691%" y="1343.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_f32 (4 samples, 0.30%)</title><rect x="80.7148%" y="1317" width="0.2978%" height="15" fill="rgb(222,106,8)" fg:x="1084" fg:w="4"/><text x="80.9648%" y="1327.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_u32 (4 samples, 0.30%)</title><rect x="80.7148%" y="1301" width="0.2978%" height="15" fill="rgb(211,220,0)" fg:x="1084" fg:w="4"/><text x="80.9648%" y="1311.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (4 samples, 0.30%)</title><rect x="80.7148%" y="1285" width="0.2978%" height="15" fill="rgb(229,52,16)" fg:x="1084" fg:w="4"/><text x="80.9648%" y="1295.50"></text></g><g><title>bitter::LittleEndianReader::refill (1 samples, 0.07%)</title><rect x="80.9382%" y="1269" width="0.0745%" height="15" fill="rgb(212,155,18)" fg:x="1087" fg:w="1"/><text x="81.1882%" y="1279.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode_float (27 samples, 2.01%)</title><rect x="79.1512%" y="1349" width="2.0104%" height="15" fill="rgb(242,21,14)" fg:x="1063" fg:w="27"/><text x="79.4012%" y="1359.50">d..</text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_nbits (2 samples, 0.15%)</title><rect x="81.0127%" y="1333" width="0.1489%" height="15" fill="rgb(222,19,48)" fg:x="1088" fg:w="2"/><text x="81.2627%" y="1343.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.07%)</title><rect x="81.0871%" y="1317" width="0.0745%" height="15" fill="rgb(232,45,27)" fg:x="1089" fg:w="1"/><text x="81.3371%" y="1327.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_nbits (3 samples, 0.22%)</title><rect x="81.2360%" y="1333" width="0.2234%" height="15" fill="rgb(249,103,42)" fg:x="1091" fg:w="3"/><text x="81.4860%" y="1343.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (3 samples, 0.22%)</title><rect x="81.2360%" y="1317" width="0.2234%" height="15" fill="rgb(246,81,33)" fg:x="1091" fg:w="3"/><text x="81.4860%" y="1327.50"></text></g><g><title>bitter::LittleEndianReader::has_data_for_unaligned_loads (1 samples, 0.07%)</title><rect x="81.3850%" y="1301" width="0.0745%" height="15" fill="rgb(252,33,42)" fg:x="1093" fg:w="1"/><text x="81.6350%" y="1311.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode_int (6 samples, 0.45%)</title><rect x="81.1616%" y="1349" width="0.4468%" height="15" fill="rgb(209,212,41)" fg:x="1090" fg:w="6"/><text x="81.4116%" y="1359.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_sbit_long (2 samples, 0.15%)</title><rect x="81.4594%" y="1333" width="0.1489%" height="15" fill="rgb(207,154,6)" fg:x="1094" fg:w="2"/><text x="81.7094%" y="1343.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_nbits (2 samples, 0.15%)</title><rect x="81.4594%" y="1317" width="0.1489%" height="15" fill="rgb(223,64,47)" fg:x="1094" fg:w="2"/><text x="81.7094%" y="1327.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (2 samples, 0.15%)</title><rect x="81.4594%" y="1301" width="0.1489%" height="15" fill="rgb(211,161,38)" fg:x="1094" fg:w="2"/><text x="81.7094%" y="1311.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bit (1 samples, 0.07%)</title><rect x="82.0551%" y="1285" width="0.0745%" height="15" fill="rgb(219,138,40)" fg:x="1102" fg:w="1"/><text x="82.3051%" y="1295.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.07%)</title><rect x="82.0551%" y="1269" width="0.0745%" height="15" fill="rgb(241,228,46)" fg:x="1102" fg:w="1"/><text x="82.3051%" y="1279.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode_special_float (4 samples, 0.30%)</title><rect x="81.9062%" y="1317" width="0.2978%" height="15" fill="rgb(223,209,38)" fg:x="1100" fg:w="4"/><text x="82.1562%" y="1327.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_bit_coord (4 samples, 0.30%)</title><rect x="81.9062%" y="1301" width="0.2978%" height="15" fill="rgb(236,164,45)" fg:x="1100" fg:w="4"/><text x="82.1562%" y="1311.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_nbits (1 samples, 0.07%)</title><rect x="82.1296%" y="1285" width="0.0745%" height="15" fill="rgb(231,15,5)" fg:x="1103" fg:w="1"/><text x="82.3796%" y="1295.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.07%)</title><rect x="82.1296%" y="1269" width="0.0745%" height="15" fill="rgb(252,35,15)" fg:x="1103" fg:w="1"/><text x="82.3796%" y="1279.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode_vec (9 samples, 0.67%)</title><rect x="81.6083%" y="1349" width="0.6701%" height="15" fill="rgb(248,181,18)" fg:x="1096" fg:w="9"/><text x="81.8583%" y="1359.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode_float (8 samples, 0.60%)</title><rect x="81.6828%" y="1333" width="0.5957%" height="15" fill="rgb(233,39,42)" fg:x="1097" fg:w="8"/><text x="81.9328%" y="1343.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_nbits (1 samples, 0.07%)</title><rect x="82.2040%" y="1317" width="0.0745%" height="15" fill="rgb(238,110,33)" fg:x="1104" fg:w="1"/><text x="82.4540%" y="1327.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.07%)</title><rect x="82.2040%" y="1301" width="0.0745%" height="15" fill="rgb(233,195,10)" fg:x="1104" fg:w="1"/><text x="82.4540%" y="1311.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode (88 samples, 6.55%)</title><rect x="75.9494%" y="1365" width="6.5525%" height="15" fill="rgb(254,105,3)" fg:x="1020" fg:w="88"/><text x="76.1994%" y="1375.50">demoparse..</text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode_vec_xy (3 samples, 0.22%)</title><rect x="82.2785%" y="1349" width="0.2234%" height="15" fill="rgb(221,225,9)" fg:x="1105" fg:w="3"/><text x="82.5285%" y="1359.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode_float (2 samples, 0.15%)</title><rect x="82.3529%" y="1333" width="0.1489%" height="15" fill="rgb(224,227,45)" fg:x="1106" fg:w="2"/><text x="82.6029%" y="1343.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode_special_float (1 samples, 0.07%)</title><rect x="82.4274%" y="1317" width="0.0745%" height="15" fill="rgb(229,198,43)" fg:x="1107" fg:w="1"/><text x="82.6774%" y="1327.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_f32 (1 samples, 0.07%)</title><rect x="82.4274%" y="1301" width="0.0745%" height="15" fill="rgb(206,209,35)" fg:x="1107" fg:w="1"/><text x="82.6774%" y="1311.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_u32 (1 samples, 0.07%)</title><rect x="82.4274%" y="1285" width="0.0745%" height="15" fill="rgb(245,195,53)" fg:x="1107" fg:w="1"/><text x="82.6774%" y="1295.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.07%)</title><rect x="82.4274%" y="1269" width="0.0745%" height="15" fill="rgb(240,92,26)" fg:x="1107" fg:w="1"/><text x="82.6774%" y="1279.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.22%)</title><rect x="82.5019%" y="1317" width="0.2234%" height="15" fill="rgb(207,40,23)" fg:x="1108" fg:w="3"/><text x="82.7519%" y="1327.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::hash_one (3 samples, 0.22%)</title><rect x="82.5019%" y="1301" width="0.2234%" height="15" fill="rgb(223,111,35)" fg:x="1108" fg:w="3"/><text x="82.7519%" y="1311.50"></text></g><g><title>ahash::random_state::RandomState::hash_one (3 samples, 0.22%)</title><rect x="82.5019%" y="1285" width="0.2234%" height="15" fill="rgb(229,147,28)" fg:x="1108" fg:w="3"/><text x="82.7519%" y="1295.50"></text></g><g><title>&lt;T as ahash::specialize::CallHasher&gt;::get_hash (3 samples, 0.22%)</title><rect x="82.5019%" y="1269" width="0.2234%" height="15" fill="rgb(211,29,28)" fg:x="1108" fg:w="3"/><text x="82.7519%" y="1279.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::finish (3 samples, 0.22%)</title><rect x="82.5019%" y="1253" width="0.2234%" height="15" fill="rgb(228,72,33)" fg:x="1108" fg:w="3"/><text x="82.7519%" y="1263.50"></text></g><g><title>&lt;u128 as ahash::convert::Convert&lt;[u64: 2]&gt;&gt;::convert (3 samples, 0.22%)</title><rect x="82.5019%" y="1237" width="0.2234%" height="15" fill="rgb(205,214,31)" fg:x="1108" fg:w="3"/><text x="82.7519%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.07%)</title><rect x="82.9486%" y="1269" width="0.0745%" height="15" fill="rgb(224,111,15)" fg:x="1114" fg:w="1"/><text x="83.1986%" y="1279.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.07%)</title><rect x="82.9486%" y="1253" width="0.0745%" height="15" fill="rgb(253,21,26)" fg:x="1114" fg:w="1"/><text x="83.1986%" y="1263.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.07%)</title><rect x="82.9486%" y="1237" width="0.0745%" height="15" fill="rgb(245,139,43)" fg:x="1114" fg:w="1"/><text x="83.1986%" y="1247.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.07%)</title><rect x="82.9486%" y="1221" width="0.0745%" height="15" fill="rgb(252,170,7)" fg:x="1114" fg:w="1"/><text x="83.1986%" y="1231.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.07%)</title><rect x="82.9486%" y="1205" width="0.0745%" height="15" fill="rgb(231,118,14)" fg:x="1114" fg:w="1"/><text x="83.1986%" y="1215.50"></text></g><g><title>demoparser::parsing::entities::parse_ent_props (211 samples, 15.71%)</title><rect x="67.4609%" y="1381" width="15.7111%" height="15" fill="rgb(238,83,0)" fg:x="906" fg:w="211"/><text x="67.7109%" y="1391.50">demoparser::parsing::ent..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.67%)</title><rect x="82.5019%" y="1365" width="0.6701%" height="15" fill="rgb(221,39,39)" fg:x="1108" fg:w="9"/><text x="82.7519%" y="1375.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9 samples, 0.67%)</title><rect x="82.5019%" y="1349" width="0.6701%" height="15" fill="rgb(222,119,46)" fg:x="1108" fg:w="9"/><text x="82.7519%" y="1359.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.67%)</title><rect x="82.5019%" y="1333" width="0.6701%" height="15" fill="rgb(222,165,49)" fg:x="1108" fg:w="9"/><text x="82.7519%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.45%)</title><rect x="82.7252%" y="1317" width="0.4468%" height="15" fill="rgb(219,113,52)" fg:x="1111" fg:w="6"/><text x="82.9752%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.45%)</title><rect x="82.7252%" y="1301" width="0.4468%" height="15" fill="rgb(214,7,15)" fg:x="1111" fg:w="6"/><text x="82.9752%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.45%)</title><rect x="82.7252%" y="1285" width="0.4468%" height="15" fill="rgb(235,32,4)" fg:x="1111" fg:w="6"/><text x="82.9752%" y="1295.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.15%)</title><rect x="83.0231%" y="1269" width="0.1489%" height="15" fill="rgb(238,90,54)" fg:x="1115" fg:w="2"/><text x="83.2731%" y="1279.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.15%)</title><rect x="83.0231%" y="1253" width="0.1489%" height="15" fill="rgb(213,208,19)" fg:x="1115" fg:w="2"/><text x="83.2731%" y="1263.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_boolie (1 samples, 0.07%)</title><rect x="83.1720%" y="1381" width="0.0745%" height="15" fill="rgb(233,156,4)" fg:x="1117" fg:w="1"/><text x="83.4220%" y="1391.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bit (1 samples, 0.07%)</title><rect x="83.1720%" y="1365" width="0.0745%" height="15" fill="rgb(207,194,5)" fg:x="1117" fg:w="1"/><text x="83.4220%" y="1375.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.07%)</title><rect x="83.1720%" y="1349" width="0.0745%" height="15" fill="rgb(206,111,30)" fg:x="1117" fg:w="1"/><text x="83.4220%" y="1359.50"></text></g><g><title>demoparser::parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::_parse_packet_entities (223 samples, 16.60%)</title><rect x="67.0141%" y="1397" width="16.6046%" height="15" fill="rgb(243,70,54)" fg:x="900" fg:w="223"/><text x="67.2641%" y="1407.50">demoparser::parsing::entit..</text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_u_bit_var (5 samples, 0.37%)</title><rect x="83.2465%" y="1381" width="0.3723%" height="15" fill="rgb(242,28,8)" fg:x="1118" fg:w="5"/><text x="83.4965%" y="1391.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_nbits (1 samples, 0.07%)</title><rect x="83.5443%" y="1365" width="0.0745%" height="15" fill="rgb(219,106,18)" fg:x="1122" fg:w="1"/><text x="83.7943%" y="1375.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.07%)</title><rect x="83.5443%" y="1349" width="0.0745%" height="15" fill="rgb(244,222,10)" fg:x="1122" fg:w="1"/><text x="83.7943%" y="1359.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bool (1 samples, 0.07%)</title><rect x="83.6188%" y="1349" width="0.0745%" height="15" fill="rgb(236,179,52)" fg:x="1123" fg:w="1"/><text x="83.8688%" y="1359.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (1 samples, 0.07%)</title><rect x="83.6188%" y="1333" width="0.0745%" height="15" fill="rgb(213,23,39)" fg:x="1123" fg:w="1"/><text x="83.8688%" y="1343.50"></text></g><g><title>_mi_malloc_generic (6 samples, 0.45%)</title><rect x="83.6932%" y="1205" width="0.4468%" height="15" fill="rgb(238,48,10)" fg:x="1124" fg:w="6"/><text x="83.9432%" y="1215.50"></text></g><g><title>mi_find_page (6 samples, 0.45%)</title><rect x="83.6932%" y="1189" width="0.4468%" height="15" fill="rgb(251,196,23)" fg:x="1124" fg:w="6"/><text x="83.9432%" y="1199.50"></text></g><g><title>mi_find_free_page (6 samples, 0.45%)</title><rect x="83.6932%" y="1173" width="0.4468%" height="15" fill="rgb(250,152,24)" fg:x="1124" fg:w="6"/><text x="83.9432%" y="1183.50"></text></g><g><title>mi_page_queue_find_free_ex (6 samples, 0.45%)</title><rect x="83.6932%" y="1157" width="0.4468%" height="15" fill="rgb(209,150,17)" fg:x="1124" fg:w="6"/><text x="83.9432%" y="1167.50"></text></g><g><title>mi_page_fresh (6 samples, 0.45%)</title><rect x="83.6932%" y="1141" width="0.4468%" height="15" fill="rgb(234,202,34)" fg:x="1124" fg:w="6"/><text x="83.9432%" y="1151.50"></text></g><g><title>mi_page_fresh_alloc (6 samples, 0.45%)</title><rect x="83.6932%" y="1125" width="0.4468%" height="15" fill="rgb(253,148,53)" fg:x="1124" fg:w="6"/><text x="83.9432%" y="1135.50"></text></g><g><title>mi_page_init (6 samples, 0.45%)</title><rect x="83.6932%" y="1109" width="0.4468%" height="15" fill="rgb(218,129,16)" fg:x="1124" fg:w="6"/><text x="83.9432%" y="1119.50"></text></g><g><title>mi_page_extend_free (6 samples, 0.45%)</title><rect x="83.6932%" y="1093" width="0.4468%" height="15" fill="rgb(216,85,19)" fg:x="1124" fg:w="6"/><text x="83.9432%" y="1103.50"></text></g><g><title>mi_page_extend_free (6 samples, 0.45%)</title><rect x="83.6932%" y="1077" width="0.4468%" height="15" fill="rgb(235,228,7)" fg:x="1124" fg:w="6"/><text x="83.9432%" y="1087.50"></text></g><g><title>mi_page_free_list_extend (6 samples, 0.45%)</title><rect x="83.6932%" y="1061" width="0.4468%" height="15" fill="rgb(245,175,0)" fg:x="1124" fg:w="6"/><text x="83.9432%" y="1071.50"></text></g><g><title>mi_block_set_next (6 samples, 0.45%)</title><rect x="83.6932%" y="1045" width="0.4468%" height="15" fill="rgb(208,168,36)" fg:x="1124" fg:w="6"/><text x="83.9432%" y="1055.50"></text></g><g><title>mi_block_set_nextx (6 samples, 0.45%)</title><rect x="83.6932%" y="1029" width="0.4468%" height="15" fill="rgb(246,171,24)" fg:x="1124" fg:w="6"/><text x="83.9432%" y="1039.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="83.6932%" y="1013" width="0.4468%" height="15" fill="rgb(215,142,24)" fg:x="1124" fg:w="6"/><text x="83.9432%" y="1023.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="83.6932%" y="997" width="0.4468%" height="15" fill="rgb(250,187,7)" fg:x="1124" fg:w="6"/><text x="83.9432%" y="1007.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="83.6932%" y="981" width="0.4468%" height="15" fill="rgb(228,66,33)" fg:x="1124" fg:w="6"/><text x="83.9432%" y="991.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="83.6932%" y="965" width="0.4468%" height="15" fill="rgb(234,215,21)" fg:x="1124" fg:w="6"/><text x="83.9432%" y="975.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="83.6932%" y="949" width="0.4468%" height="15" fill="rgb(222,191,20)" fg:x="1124" fg:w="6"/><text x="83.9432%" y="959.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="83.6932%" y="933" width="0.4468%" height="15" fill="rgb(245,79,54)" fg:x="1124" fg:w="6"/><text x="83.9432%" y="943.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="83.6932%" y="917" width="0.4468%" height="15" fill="rgb(240,10,37)" fg:x="1124" fg:w="6"/><text x="83.9432%" y="927.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="83.6932%" y="901" width="0.4468%" height="15" fill="rgb(214,192,32)" fg:x="1124" fg:w="6"/><text x="83.9432%" y="911.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="83.6932%" y="885" width="0.4468%" height="15" fill="rgb(209,36,54)" fg:x="1124" fg:w="6"/><text x="83.9432%" y="895.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="83.6932%" y="869" width="0.4468%" height="15" fill="rgb(220,10,11)" fg:x="1124" fg:w="6"/><text x="83.9432%" y="879.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="83.6932%" y="853" width="0.4468%" height="15" fill="rgb(221,106,17)" fg:x="1124" fg:w="6"/><text x="83.9432%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (9 samples, 0.67%)</title><rect x="83.6932%" y="1285" width="0.6701%" height="15" fill="rgb(251,142,44)" fg:x="1124" fg:w="9"/><text x="83.9432%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (9 samples, 0.67%)</title><rect x="83.6932%" y="1269" width="0.6701%" height="15" fill="rgb(238,13,15)" fg:x="1124" fg:w="9"/><text x="83.9432%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (9 samples, 0.67%)</title><rect x="83.6932%" y="1253" width="0.6701%" height="15" fill="rgb(208,107,27)" fg:x="1124" fg:w="9"/><text x="83.9432%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (9 samples, 0.67%)</title><rect x="83.6932%" y="1237" width="0.6701%" height="15" fill="rgb(205,136,37)" fg:x="1124" fg:w="9"/><text x="83.9432%" y="1247.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.67%)</title><rect x="83.6932%" y="1221" width="0.6701%" height="15" fill="rgb(250,205,27)" fg:x="1124" fg:w="9"/><text x="83.9432%" y="1231.50"></text></g><g><title>mi_malloc (3 samples, 0.22%)</title><rect x="84.1400%" y="1205" width="0.2234%" height="15" fill="rgb(210,80,43)" fg:x="1130" fg:w="3"/><text x="84.3900%" y="1215.50"></text></g><g><title>mi_heap_malloc (2 samples, 0.15%)</title><rect x="84.2144%" y="1189" width="0.1489%" height="15" fill="rgb(247,160,36)" fg:x="1131" fg:w="2"/><text x="84.4644%" y="1199.50"></text></g><g><title>mi_heap_malloc_small (2 samples, 0.15%)</title><rect x="84.2144%" y="1173" width="0.1489%" height="15" fill="rgb(234,13,49)" fg:x="1131" fg:w="2"/><text x="84.4644%" y="1183.50"></text></g><g><title>_mi_page_malloc (2 samples, 0.15%)</title><rect x="84.2144%" y="1157" width="0.1489%" height="15" fill="rgb(234,122,0)" fg:x="1131" fg:w="2"/><text x="84.4644%" y="1167.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes (17 samples, 1.27%)</title><rect x="83.6932%" y="1349" width="1.2658%" height="15" fill="rgb(207,146,38)" fg:x="1124" fg:w="17"/><text x="83.9432%" y="1359.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (17 samples, 1.27%)</title><rect x="83.6932%" y="1333" width="1.2658%" height="15" fill="rgb(207,177,25)" fg:x="1124" fg:w="17"/><text x="83.9432%" y="1343.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (17 samples, 1.27%)</title><rect x="83.6932%" y="1317" width="1.2658%" height="15" fill="rgb(211,178,42)" fg:x="1124" fg:w="17"/><text x="83.9432%" y="1327.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (17 samples, 1.27%)</title><rect x="83.6932%" y="1301" width="1.2658%" height="15" fill="rgb(230,69,54)" fg:x="1124" fg:w="17"/><text x="83.9432%" y="1311.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact (8 samples, 0.60%)</title><rect x="84.3634%" y="1285" width="0.5957%" height="15" fill="rgb(214,135,41)" fg:x="1133" fg:w="8"/><text x="84.6134%" y="1295.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::read_bytes (8 samples, 0.60%)</title><rect x="84.3634%" y="1269" width="0.5957%" height="15" fill="rgb(237,67,25)" fg:x="1133" fg:w="8"/><text x="84.6134%" y="1279.50"></text></g><g><title>protobuf::misc::maybe_uninit_write_slice (8 samples, 0.60%)</title><rect x="84.3634%" y="1253" width="0.5957%" height="15" fill="rgb(222,189,50)" fg:x="1133" fg:w="8"/><text x="84.6134%" y="1263.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (8 samples, 0.60%)</title><rect x="84.3634%" y="1237" width="0.5957%" height="15" fill="rgb(245,148,34)" fg:x="1133" fg:w="8"/><text x="84.6134%" y="1247.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.60%)</title><rect x="84.3634%" y="1221" width="0.5957%" height="15" fill="rgb(222,29,6)" fg:x="1133" fg:w="8"/><text x="84.6134%" y="1231.50"></text></g><g><title>[libc.so.6] (8 samples, 0.60%)</title><rect x="84.3634%" y="1205" width="0.5957%" height="15" fill="rgb(221,189,43)" fg:x="1133" fg:w="8"/><text x="84.6134%" y="1215.50"></text></g><g><title>demoparser::parsing::parser::Parser::msg_handler (254 samples, 18.91%)</title><rect x="66.3440%" y="1429" width="18.9129%" height="15" fill="rgb(207,36,27)" fg:x="891" fg:w="254"/><text x="66.5940%" y="1439.50">demoparser::parsing::parser::P..</text></g><g><title>demoparser::parsing::entities::parse_packet_entities (245 samples, 18.24%)</title><rect x="67.0141%" y="1413" width="18.2427%" height="15" fill="rgb(217,90,24)" fg:x="900" fg:w="245"/><text x="67.2641%" y="1423.50">demoparser::parsing::entitie..</text></g><g><title>protobuf::message::Message::parse_from_bytes (22 samples, 1.64%)</title><rect x="83.6188%" y="1397" width="1.6381%" height="15" fill="rgb(224,66,35)" fg:x="1123" fg:w="22"/><text x="83.8688%" y="1407.50"></text></g><g><title>protobuf::message::Message::parse_from (22 samples, 1.64%)</title><rect x="83.6188%" y="1381" width="1.6381%" height="15" fill="rgb(221,13,50)" fg:x="1123" fg:w="22"/><text x="83.8688%" y="1391.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_PacketEntities as protobuf::message::Message&gt;::merge_from (22 samples, 1.64%)</title><rect x="83.6188%" y="1365" width="1.6381%" height="15" fill="rgb(236,68,49)" fg:x="1123" fg:w="22"/><text x="83.8688%" y="1375.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (4 samples, 0.30%)</title><rect x="84.9590%" y="1349" width="0.2978%" height="15" fill="rgb(229,146,28)" fg:x="1141" fg:w="4"/><text x="85.2090%" y="1359.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (4 samples, 0.30%)</title><rect x="84.9590%" y="1333" width="0.2978%" height="15" fill="rgb(225,31,38)" fg:x="1141" fg:w="4"/><text x="85.2090%" y="1343.50"></text></g><g><title>protobuf::varint::decode::decode_varint32 (4 samples, 0.30%)</title><rect x="84.9590%" y="1317" width="0.2978%" height="15" fill="rgb(250,208,3)" fg:x="1141" fg:w="4"/><text x="85.2090%" y="1327.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (4 samples, 0.30%)</title><rect x="84.9590%" y="1301" width="0.2978%" height="15" fill="rgb(246,54,23)" fg:x="1141" fg:w="4"/><text x="85.2090%" y="1311.50"></text></g><g><title>&lt;demoparser::parsing::entities::Prop as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="85.2569%" y="1237" width="0.0745%" height="15" fill="rgb(243,76,11)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="1247.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="85.2569%" y="1221" width="0.0745%" height="15" fill="rgb(245,21,50)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="85.2569%" y="1205" width="0.0745%" height="15" fill="rgb(228,9,43)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="85.2569%" y="1189" width="0.0745%" height="15" fill="rgb(208,100,47)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="1199.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="85.2569%" y="1173" width="0.0745%" height="15" fill="rgb(232,26,8)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="1183.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="85.2569%" y="1157" width="0.0745%" height="15" fill="rgb(216,166,38)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="85.2569%" y="1141" width="0.0745%" height="15" fill="rgb(251,202,51)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="85.2569%" y="1125" width="0.0745%" height="15" fill="rgb(254,216,34)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="85.2569%" y="1109" width="0.0745%" height="15" fill="rgb(251,32,27)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="85.2569%" y="1093" width="0.0745%" height="15" fill="rgb(208,127,28)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="85.2569%" y="1077" width="0.0745%" height="15" fill="rgb(224,137,22)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="85.2569%" y="1061" width="0.0745%" height="15" fill="rgb(254,70,32)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="1071.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.07%)</title><rect x="85.2569%" y="1045" width="0.0745%" height="15" fill="rgb(229,75,37)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="1055.50"></text></g><g><title>mi_find_page (1 samples, 0.07%)</title><rect x="85.2569%" y="1029" width="0.0745%" height="15" fill="rgb(252,64,23)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="1039.50"></text></g><g><title>mi_find_free_page (1 samples, 0.07%)</title><rect x="85.2569%" y="1013" width="0.0745%" height="15" fill="rgb(232,162,48)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="1023.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.07%)</title><rect x="85.2569%" y="997" width="0.0745%" height="15" fill="rgb(246,160,12)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="1007.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.07%)</title><rect x="85.2569%" y="981" width="0.0745%" height="15" fill="rgb(247,166,0)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="991.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.07%)</title><rect x="85.2569%" y="965" width="0.0745%" height="15" fill="rgb(249,219,21)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="975.50"></text></g><g><title>mi_page_free_list_extend (1 samples, 0.07%)</title><rect x="85.2569%" y="949" width="0.0745%" height="15" fill="rgb(205,209,3)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="959.50"></text></g><g><title>mi_block_set_next (1 samples, 0.07%)</title><rect x="85.2569%" y="933" width="0.0745%" height="15" fill="rgb(243,44,1)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="943.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.07%)</title><rect x="85.2569%" y="917" width="0.0745%" height="15" fill="rgb(206,159,16)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="85.2569%" y="901" width="0.0745%" height="15" fill="rgb(244,77,30)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="85.2569%" y="885" width="0.0745%" height="15" fill="rgb(218,69,12)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="85.2569%" y="869" width="0.0745%" height="15" fill="rgb(212,87,7)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="85.2569%" y="853" width="0.0745%" height="15" fill="rgb(245,114,25)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="85.2569%" y="837" width="0.0745%" height="15" fill="rgb(210,61,42)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="85.2569%" y="821" width="0.0745%" height="15" fill="rgb(211,52,33)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="85.2569%" y="805" width="0.0745%" height="15" fill="rgb(234,58,33)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="85.2569%" y="789" width="0.0745%" height="15" fill="rgb(220,115,36)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="85.2569%" y="773" width="0.0745%" height="15" fill="rgb(243,153,54)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="85.2569%" y="757" width="0.0745%" height="15" fill="rgb(251,47,18)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="85.2569%" y="741" width="0.0745%" height="15" fill="rgb(242,102,42)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (7 samples, 0.52%)</title><rect x="85.2569%" y="1365" width="0.5212%" height="15" fill="rgb(234,31,38)" fg:x="1145" fg:w="7"/><text x="85.5069%" y="1375.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (7 samples, 0.52%)</title><rect x="85.2569%" y="1349" width="0.5212%" height="15" fill="rgb(221,117,51)" fg:x="1145" fg:w="7"/><text x="85.5069%" y="1359.50"></text></g><g><title>core::clone::Clone::clone (7 samples, 0.52%)</title><rect x="85.2569%" y="1333" width="0.5212%" height="15" fill="rgb(212,20,18)" fg:x="1145" fg:w="7"/><text x="85.5069%" y="1343.50"></text></g><g><title>&lt;demoparser::parsing::data_table::ServerClass as core::clone::Clone&gt;::clone (7 samples, 0.52%)</title><rect x="85.2569%" y="1317" width="0.5212%" height="15" fill="rgb(245,133,36)" fg:x="1145" fg:w="7"/><text x="85.5069%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.52%)</title><rect x="85.2569%" y="1301" width="0.5212%" height="15" fill="rgb(212,6,19)" fg:x="1145" fg:w="7"/><text x="85.5069%" y="1311.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.52%)</title><rect x="85.2569%" y="1285" width="0.5212%" height="15" fill="rgb(218,1,36)" fg:x="1145" fg:w="7"/><text x="85.5069%" y="1295.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.52%)</title><rect x="85.2569%" y="1269" width="0.5212%" height="15" fill="rgb(246,84,54)" fg:x="1145" fg:w="7"/><text x="85.5069%" y="1279.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.52%)</title><rect x="85.2569%" y="1253" width="0.5212%" height="15" fill="rgb(242,110,6)" fg:x="1145" fg:w="7"/><text x="85.5069%" y="1263.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (6 samples, 0.45%)</title><rect x="85.3313%" y="1237" width="0.4468%" height="15" fill="rgb(214,47,5)" fg:x="1146" fg:w="6"/><text x="85.5813%" y="1247.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="85.3313%" y="1221" width="0.4468%" height="15" fill="rgb(218,159,25)" fg:x="1146" fg:w="6"/><text x="85.5813%" y="1231.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="85.4058%" y="1205" width="0.3723%" height="15" fill="rgb(215,211,28)" fg:x="1147" fg:w="5"/><text x="85.6558%" y="1215.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="85.4058%" y="1189" width="0.3723%" height="15" fill="rgb(238,59,32)" fg:x="1147" fg:w="5"/><text x="85.6558%" y="1199.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="85.4058%" y="1173" width="0.3723%" height="15" fill="rgb(226,82,3)" fg:x="1147" fg:w="5"/><text x="85.6558%" y="1183.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="85.4058%" y="1157" width="0.3723%" height="15" fill="rgb(240,164,32)" fg:x="1147" fg:w="5"/><text x="85.6558%" y="1167.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="85.4058%" y="1141" width="0.3723%" height="15" fill="rgb(232,46,7)" fg:x="1147" fg:w="5"/><text x="85.6558%" y="1151.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="85.4058%" y="1125" width="0.3723%" height="15" fill="rgb(229,129,53)" fg:x="1147" fg:w="5"/><text x="85.6558%" y="1135.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="85.4058%" y="1109" width="0.3723%" height="15" fill="rgb(234,188,29)" fg:x="1147" fg:w="5"/><text x="85.6558%" y="1119.50"></text></g><g><title>[unknown] (4 samples, 0.30%)</title><rect x="85.4803%" y="1093" width="0.2978%" height="15" fill="rgb(246,141,4)" fg:x="1148" fg:w="4"/><text x="85.7303%" y="1103.50"></text></g><g><title>[unknown] (4 samples, 0.30%)</title><rect x="85.4803%" y="1077" width="0.2978%" height="15" fill="rgb(229,23,39)" fg:x="1148" fg:w="4"/><text x="85.7303%" y="1087.50"></text></g><g><title>[unknown] (4 samples, 0.30%)</title><rect x="85.4803%" y="1061" width="0.2978%" height="15" fill="rgb(206,12,3)" fg:x="1148" fg:w="4"/><text x="85.7303%" y="1071.50"></text></g><g><title>_mi_arena_alloc_aligned (2 samples, 0.15%)</title><rect x="85.7781%" y="1109" width="0.1489%" height="15" fill="rgb(252,226,20)" fg:x="1152" fg:w="2"/><text x="86.0281%" y="1119.50"></text></g><g><title>_mi_os_alloc_aligned (2 samples, 0.15%)</title><rect x="85.7781%" y="1093" width="0.1489%" height="15" fill="rgb(216,123,35)" fg:x="1152" fg:w="2"/><text x="86.0281%" y="1103.50"></text></g><g><title>mi_os_mem_alloc_aligned (2 samples, 0.15%)</title><rect x="85.7781%" y="1077" width="0.1489%" height="15" fill="rgb(212,68,40)" fg:x="1152" fg:w="2"/><text x="86.0281%" y="1087.50"></text></g><g><title>mi_os_mem_alloc (2 samples, 0.15%)</title><rect x="85.7781%" y="1061" width="0.1489%" height="15" fill="rgb(254,125,32)" fg:x="1152" fg:w="2"/><text x="86.0281%" y="1071.50"></text></g><g><title>mi_unix_mmap (2 samples, 0.15%)</title><rect x="85.7781%" y="1045" width="0.1489%" height="15" fill="rgb(253,97,22)" fg:x="1152" fg:w="2"/><text x="86.0281%" y="1055.50"></text></g><g><title>mi_unix_mmapx (2 samples, 0.15%)</title><rect x="85.7781%" y="1029" width="0.1489%" height="15" fill="rgb(241,101,14)" fg:x="1152" fg:w="2"/><text x="86.0281%" y="1039.50"></text></g><g><title>__GI___mmap64 (2 samples, 0.15%)</title><rect x="85.7781%" y="1013" width="0.1489%" height="15" fill="rgb(238,103,29)" fg:x="1152" fg:w="2"/><text x="86.0281%" y="1023.50"></text></g><g><title>__GI___mmap64 (2 samples, 0.15%)</title><rect x="85.7781%" y="997" width="0.1489%" height="15" fill="rgb(233,195,47)" fg:x="1152" fg:w="2"/><text x="86.0281%" y="1007.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="85.7781%" y="981" width="0.1489%" height="15" fill="rgb(246,218,30)" fg:x="1152" fg:w="2"/><text x="86.0281%" y="991.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="85.7781%" y="965" width="0.1489%" height="15" fill="rgb(219,145,47)" fg:x="1152" fg:w="2"/><text x="86.0281%" y="975.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="85.7781%" y="949" width="0.1489%" height="15" fill="rgb(243,12,26)" fg:x="1152" fg:w="2"/><text x="86.0281%" y="959.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="85.7781%" y="933" width="0.1489%" height="15" fill="rgb(214,87,16)" fg:x="1152" fg:w="2"/><text x="86.0281%" y="943.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="85.7781%" y="917" width="0.1489%" height="15" fill="rgb(208,99,42)" fg:x="1152" fg:w="2"/><text x="86.0281%" y="927.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="85.7781%" y="901" width="0.1489%" height="15" fill="rgb(253,99,2)" fg:x="1152" fg:w="2"/><text x="86.0281%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="85.7781%" y="885" width="0.1489%" height="15" fill="rgb(220,168,23)" fg:x="1152" fg:w="2"/><text x="86.0281%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="85.7781%" y="869" width="0.1489%" height="15" fill="rgb(242,38,24)" fg:x="1152" fg:w="2"/><text x="86.0281%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="85.7781%" y="853" width="0.1489%" height="15" fill="rgb(225,182,9)" fg:x="1152" fg:w="2"/><text x="86.0281%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="85.7781%" y="837" width="0.1489%" height="15" fill="rgb(243,178,37)" fg:x="1152" fg:w="2"/><text x="86.0281%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="85.7781%" y="821" width="0.1489%" height="15" fill="rgb(232,139,19)" fg:x="1152" fg:w="2"/><text x="86.0281%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="85.7781%" y="805" width="0.1489%" height="15" fill="rgb(225,201,24)" fg:x="1152" fg:w="2"/><text x="86.0281%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="85.7781%" y="789" width="0.1489%" height="15" fill="rgb(221,47,46)" fg:x="1152" fg:w="2"/><text x="86.0281%" y="799.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="85.7781%" y="773" width="0.1489%" height="15" fill="rgb(249,23,13)" fg:x="1152" fg:w="2"/><text x="86.0281%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="85.7781%" y="757" width="0.1489%" height="15" fill="rgb(219,9,5)" fg:x="1152" fg:w="2"/><text x="86.0281%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="85.7781%" y="741" width="0.1489%" height="15" fill="rgb(254,171,16)" fg:x="1152" fg:w="2"/><text x="86.0281%" y="751.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="85.7781%" y="725" width="0.1489%" height="15" fill="rgb(230,171,20)" fg:x="1152" fg:w="2"/><text x="86.0281%" y="735.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="85.7781%" y="709" width="0.1489%" height="15" fill="rgb(210,71,41)" fg:x="1152" fg:w="2"/><text x="86.0281%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="85.8526%" y="693" width="0.0745%" height="15" fill="rgb(206,173,20)" fg:x="1153" fg:w="1"/><text x="86.1026%" y="703.50"></text></g><g><title>memset (19 samples, 1.41%)</title><rect x="85.9270%" y="1109" width="1.4147%" height="15" fill="rgb(233,88,34)" fg:x="1154" fg:w="19"/><text x="86.1770%" y="1119.50"></text></g><g><title>[libc.so.6] (19 samples, 1.41%)</title><rect x="85.9270%" y="1093" width="1.4147%" height="15" fill="rgb(223,209,46)" fg:x="1154" fg:w="19"/><text x="86.1770%" y="1103.50"></text></g><g><title>[unknown] (19 samples, 1.41%)</title><rect x="85.9270%" y="1077" width="1.4147%" height="15" fill="rgb(250,43,18)" fg:x="1154" fg:w="19"/><text x="86.1770%" y="1087.50"></text></g><g><title>[unknown] (19 samples, 1.41%)</title><rect x="85.9270%" y="1061" width="1.4147%" height="15" fill="rgb(208,13,10)" fg:x="1154" fg:w="19"/><text x="86.1770%" y="1071.50"></text></g><g><title>[unknown] (19 samples, 1.41%)</title><rect x="85.9270%" y="1045" width="1.4147%" height="15" fill="rgb(212,200,36)" fg:x="1154" fg:w="19"/><text x="86.1770%" y="1055.50"></text></g><g><title>[unknown] (19 samples, 1.41%)</title><rect x="85.9270%" y="1029" width="1.4147%" height="15" fill="rgb(225,90,30)" fg:x="1154" fg:w="19"/><text x="86.1770%" y="1039.50"></text></g><g><title>[unknown] (19 samples, 1.41%)</title><rect x="85.9270%" y="1013" width="1.4147%" height="15" fill="rgb(236,182,39)" fg:x="1154" fg:w="19"/><text x="86.1770%" y="1023.50"></text></g><g><title>[unknown] (19 samples, 1.41%)</title><rect x="85.9270%" y="997" width="1.4147%" height="15" fill="rgb(212,144,35)" fg:x="1154" fg:w="19"/><text x="86.1770%" y="1007.50"></text></g><g><title>[unknown] (14 samples, 1.04%)</title><rect x="86.2993%" y="981" width="1.0424%" height="15" fill="rgb(228,63,44)" fg:x="1159" fg:w="14"/><text x="86.5493%" y="991.50"></text></g><g><title>[unknown] (14 samples, 1.04%)</title><rect x="86.2993%" y="965" width="1.0424%" height="15" fill="rgb(228,109,6)" fg:x="1159" fg:w="14"/><text x="86.5493%" y="975.50"></text></g><g><title>[unknown] (14 samples, 1.04%)</title><rect x="86.2993%" y="949" width="1.0424%" height="15" fill="rgb(238,117,24)" fg:x="1159" fg:w="14"/><text x="86.5493%" y="959.50"></text></g><g><title>[unknown] (14 samples, 1.04%)</title><rect x="86.2993%" y="933" width="1.0424%" height="15" fill="rgb(242,26,26)" fg:x="1159" fg:w="14"/><text x="86.5493%" y="943.50"></text></g><g><title>[unknown] (13 samples, 0.97%)</title><rect x="86.3738%" y="917" width="0.9680%" height="15" fill="rgb(221,92,48)" fg:x="1160" fg:w="13"/><text x="86.6238%" y="927.50"></text></g><g><title>mi_find_page (28 samples, 2.08%)</title><rect x="85.7781%" y="1253" width="2.0849%" height="15" fill="rgb(209,209,32)" fg:x="1152" fg:w="28"/><text x="86.0281%" y="1263.50">m..</text></g><g><title>mi_find_free_page (28 samples, 2.08%)</title><rect x="85.7781%" y="1237" width="2.0849%" height="15" fill="rgb(221,70,22)" fg:x="1152" fg:w="28"/><text x="86.0281%" y="1247.50">m..</text></g><g><title>mi_page_queue_find_free_ex (28 samples, 2.08%)</title><rect x="85.7781%" y="1221" width="2.0849%" height="15" fill="rgb(248,145,5)" fg:x="1152" fg:w="28"/><text x="86.0281%" y="1231.50">m..</text></g><g><title>mi_page_fresh (28 samples, 2.08%)</title><rect x="85.7781%" y="1205" width="2.0849%" height="15" fill="rgb(226,116,26)" fg:x="1152" fg:w="28"/><text x="86.0281%" y="1215.50">m..</text></g><g><title>mi_page_fresh_alloc (28 samples, 2.08%)</title><rect x="85.7781%" y="1189" width="2.0849%" height="15" fill="rgb(244,5,17)" fg:x="1152" fg:w="28"/><text x="86.0281%" y="1199.50">m..</text></g><g><title>mi_segments_page_alloc (28 samples, 2.08%)</title><rect x="85.7781%" y="1173" width="2.0849%" height="15" fill="rgb(252,159,33)" fg:x="1152" fg:w="28"/><text x="86.0281%" y="1183.50">m..</text></g><g><title>mi_segment_reclaim_or_alloc (28 samples, 2.08%)</title><rect x="85.7781%" y="1157" width="2.0849%" height="15" fill="rgb(206,71,0)" fg:x="1152" fg:w="28"/><text x="86.0281%" y="1167.50">m..</text></g><g><title>mi_segment_alloc (28 samples, 2.08%)</title><rect x="85.7781%" y="1141" width="2.0849%" height="15" fill="rgb(233,118,54)" fg:x="1152" fg:w="28"/><text x="86.0281%" y="1151.50">m..</text></g><g><title>mi_segment_init (28 samples, 2.08%)</title><rect x="85.7781%" y="1125" width="2.0849%" height="15" fill="rgb(234,83,48)" fg:x="1152" fg:w="28"/><text x="86.0281%" y="1135.50">m..</text></g><g><title>mi_segment_span_allocate (7 samples, 0.52%)</title><rect x="87.3418%" y="1109" width="0.5212%" height="15" fill="rgb(228,3,54)" fg:x="1173" fg:w="7"/><text x="87.5918%" y="1119.50"></text></g><g><title>mi_segment_ensure_committed (7 samples, 0.52%)</title><rect x="87.3418%" y="1093" width="0.5212%" height="15" fill="rgb(226,155,13)" fg:x="1173" fg:w="7"/><text x="87.5918%" y="1103.50"></text></g><g><title>mi_segment_commitx (7 samples, 0.52%)</title><rect x="87.3418%" y="1077" width="0.5212%" height="15" fill="rgb(241,28,37)" fg:x="1173" fg:w="7"/><text x="87.5918%" y="1087.50"></text></g><g><title>_mi_os_commit (7 samples, 0.52%)</title><rect x="87.3418%" y="1061" width="0.5212%" height="15" fill="rgb(233,93,10)" fg:x="1173" fg:w="7"/><text x="87.5918%" y="1071.50"></text></g><g><title>mi_os_commitx (7 samples, 0.52%)</title><rect x="87.3418%" y="1045" width="0.5212%" height="15" fill="rgb(225,113,19)" fg:x="1173" fg:w="7"/><text x="87.5918%" y="1055.50"></text></g><g><title>__GI___mprotect (7 samples, 0.52%)</title><rect x="87.3418%" y="1029" width="0.5212%" height="15" fill="rgb(241,2,18)" fg:x="1173" fg:w="7"/><text x="87.5918%" y="1039.50"></text></g><g><title>[unknown] (7 samples, 0.52%)</title><rect x="87.3418%" y="1013" width="0.5212%" height="15" fill="rgb(228,207,21)" fg:x="1173" fg:w="7"/><text x="87.5918%" y="1023.50"></text></g><g><title>[unknown] (7 samples, 0.52%)</title><rect x="87.3418%" y="997" width="0.5212%" height="15" fill="rgb(213,211,35)" fg:x="1173" fg:w="7"/><text x="87.5918%" y="1007.50"></text></g><g><title>[unknown] (7 samples, 0.52%)</title><rect x="87.3418%" y="981" width="0.5212%" height="15" fill="rgb(209,83,10)" fg:x="1173" fg:w="7"/><text x="87.5918%" y="991.50"></text></g><g><title>[unknown] (7 samples, 0.52%)</title><rect x="87.3418%" y="965" width="0.5212%" height="15" fill="rgb(209,164,1)" fg:x="1173" fg:w="7"/><text x="87.5918%" y="975.50"></text></g><g><title>[unknown] (7 samples, 0.52%)</title><rect x="87.3418%" y="949" width="0.5212%" height="15" fill="rgb(213,184,43)" fg:x="1173" fg:w="7"/><text x="87.5918%" y="959.50"></text></g><g><title>[unknown] (7 samples, 0.52%)</title><rect x="87.3418%" y="933" width="0.5212%" height="15" fill="rgb(231,61,34)" fg:x="1173" fg:w="7"/><text x="87.5918%" y="943.50"></text></g><g><title>[unknown] (7 samples, 0.52%)</title><rect x="87.3418%" y="917" width="0.5212%" height="15" fill="rgb(235,75,3)" fg:x="1173" fg:w="7"/><text x="87.5918%" y="927.50"></text></g><g><title>[unknown] (7 samples, 0.52%)</title><rect x="87.3418%" y="901" width="0.5212%" height="15" fill="rgb(220,106,47)" fg:x="1173" fg:w="7"/><text x="87.5918%" y="911.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="87.4162%" y="885" width="0.4468%" height="15" fill="rgb(210,196,33)" fg:x="1174" fg:w="6"/><text x="87.6662%" y="895.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="87.4907%" y="869" width="0.3723%" height="15" fill="rgb(229,154,42)" fg:x="1175" fg:w="5"/><text x="87.7407%" y="879.50"></text></g><g><title>_mi_memcpy_aligned (6 samples, 0.45%)</title><rect x="87.8630%" y="1221" width="0.4468%" height="15" fill="rgb(228,114,26)" fg:x="1180" fg:w="6"/><text x="88.1130%" y="1231.50"></text></g><g><title>_mi_memcpy (6 samples, 0.45%)</title><rect x="87.8630%" y="1205" width="0.4468%" height="15" fill="rgb(208,144,1)" fg:x="1180" fg:w="6"/><text x="88.1130%" y="1215.50"></text></g><g><title>memcpy (6 samples, 0.45%)</title><rect x="87.8630%" y="1189" width="0.4468%" height="15" fill="rgb(239,112,37)" fg:x="1180" fg:w="6"/><text x="88.1130%" y="1199.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="87.8630%" y="1173" width="0.4468%" height="15" fill="rgb(210,96,50)" fg:x="1180" fg:w="6"/><text x="88.1130%" y="1183.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="87.8630%" y="1157" width="0.4468%" height="15" fill="rgb(222,178,2)" fg:x="1180" fg:w="6"/><text x="88.1130%" y="1167.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="87.8630%" y="1141" width="0.4468%" height="15" fill="rgb(226,74,18)" fg:x="1180" fg:w="6"/><text x="88.1130%" y="1151.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="87.8630%" y="1125" width="0.4468%" height="15" fill="rgb(225,67,54)" fg:x="1180" fg:w="6"/><text x="88.1130%" y="1135.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="87.8630%" y="1109" width="0.4468%" height="15" fill="rgb(251,92,32)" fg:x="1180" fg:w="6"/><text x="88.1130%" y="1119.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (42 samples, 3.13%)</title><rect x="85.2569%" y="1413" width="3.1273%" height="15" fill="rgb(228,149,22)" fg:x="1145" fg:w="42"/><text x="85.5069%" y="1423.50">&lt;st..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (42 samples, 3.13%)</title><rect x="85.2569%" y="1397" width="3.1273%" height="15" fill="rgb(243,54,13)" fg:x="1145" fg:w="42"/><text x="85.5069%" y="1407.50">&lt;ha..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (42 samples, 3.13%)</title><rect x="85.2569%" y="1381" width="3.1273%" height="15" fill="rgb(243,180,28)" fg:x="1145" fg:w="42"/><text x="85.5069%" y="1391.50">&lt;ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (35 samples, 2.61%)</title><rect x="85.7781%" y="1365" width="2.6061%" height="15" fill="rgb(208,167,24)" fg:x="1152" fg:w="35"/><text x="86.0281%" y="1375.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (35 samples, 2.61%)</title><rect x="85.7781%" y="1349" width="2.6061%" height="15" fill="rgb(245,73,45)" fg:x="1152" fg:w="35"/><text x="86.0281%" y="1359.50">ha..</text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (35 samples, 2.61%)</title><rect x="85.7781%" y="1333" width="2.6061%" height="15" fill="rgb(237,203,48)" fg:x="1152" fg:w="35"/><text x="86.0281%" y="1343.50">ha..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (35 samples, 2.61%)</title><rect x="85.7781%" y="1317" width="2.6061%" height="15" fill="rgb(211,197,16)" fg:x="1152" fg:w="35"/><text x="86.0281%" y="1327.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (35 samples, 2.61%)</title><rect x="85.7781%" y="1301" width="2.6061%" height="15" fill="rgb(243,99,51)" fg:x="1152" fg:w="35"/><text x="86.0281%" y="1311.50">al..</text></g><g><title>alloc::alloc::alloc (35 samples, 2.61%)</title><rect x="85.7781%" y="1285" width="2.6061%" height="15" fill="rgb(215,123,29)" fg:x="1152" fg:w="35"/><text x="86.0281%" y="1295.50">al..</text></g><g><title>_mi_malloc_generic (35 samples, 2.61%)</title><rect x="85.7781%" y="1269" width="2.6061%" height="15" fill="rgb(239,186,37)" fg:x="1152" fg:w="35"/><text x="86.0281%" y="1279.50">_m..</text></g><g><title>mi_thread_init (7 samples, 0.52%)</title><rect x="87.8630%" y="1253" width="0.5212%" height="15" fill="rgb(252,136,39)" fg:x="1180" fg:w="7"/><text x="88.1130%" y="1263.50"></text></g><g><title>_mi_heap_init (7 samples, 0.52%)</title><rect x="87.8630%" y="1237" width="0.5212%" height="15" fill="rgb(223,213,32)" fg:x="1180" fg:w="7"/><text x="88.1130%" y="1247.50"></text></g><g><title>mi_thread_data_alloc (1 samples, 0.07%)</title><rect x="88.3098%" y="1221" width="0.0745%" height="15" fill="rgb(233,115,5)" fg:x="1186" fg:w="1"/><text x="88.5598%" y="1231.50"></text></g><g><title>_mi_os_alloc (1 samples, 0.07%)</title><rect x="88.3098%" y="1205" width="0.0745%" height="15" fill="rgb(207,226,44)" fg:x="1186" fg:w="1"/><text x="88.5598%" y="1215.50"></text></g><g><title>mi_os_mem_alloc (1 samples, 0.07%)</title><rect x="88.3098%" y="1189" width="0.0745%" height="15" fill="rgb(208,126,0)" fg:x="1186" fg:w="1"/><text x="88.5598%" y="1199.50"></text></g><g><title>mi_unix_mmap (1 samples, 0.07%)</title><rect x="88.3098%" y="1173" width="0.0745%" height="15" fill="rgb(244,66,21)" fg:x="1186" fg:w="1"/><text x="88.5598%" y="1183.50"></text></g><g><title>mi_unix_mmapx (1 samples, 0.07%)</title><rect x="88.3098%" y="1157" width="0.0745%" height="15" fill="rgb(222,97,12)" fg:x="1186" fg:w="1"/><text x="88.5598%" y="1167.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.07%)</title><rect x="88.3098%" y="1141" width="0.0745%" height="15" fill="rgb(219,213,19)" fg:x="1186" fg:w="1"/><text x="88.5598%" y="1151.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.07%)</title><rect x="88.3098%" y="1125" width="0.0745%" height="15" fill="rgb(252,169,30)" fg:x="1186" fg:w="1"/><text x="88.5598%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="88.3098%" y="1109" width="0.0745%" height="15" fill="rgb(206,32,51)" fg:x="1186" fg:w="1"/><text x="88.5598%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="88.3098%" y="1093" width="0.0745%" height="15" fill="rgb(250,172,42)" fg:x="1186" fg:w="1"/><text x="88.5598%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="88.3098%" y="1077" width="0.0745%" height="15" fill="rgb(209,34,43)" fg:x="1186" fg:w="1"/><text x="88.5598%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="88.3098%" y="1061" width="0.0745%" height="15" fill="rgb(223,11,35)" fg:x="1186" fg:w="1"/><text x="88.5598%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="88.3098%" y="1045" width="0.0745%" height="15" fill="rgb(251,219,26)" fg:x="1186" fg:w="1"/><text x="88.5598%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="88.3098%" y="1029" width="0.0745%" height="15" fill="rgb(231,119,3)" fg:x="1186" fg:w="1"/><text x="88.5598%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="88.3098%" y="1013" width="0.0745%" height="15" fill="rgb(216,97,11)" fg:x="1186" fg:w="1"/><text x="88.5598%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="88.3098%" y="997" width="0.0745%" height="15" fill="rgb(223,59,9)" fg:x="1186" fg:w="1"/><text x="88.5598%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="88.3098%" y="981" width="0.0745%" height="15" fill="rgb(233,93,31)" fg:x="1186" fg:w="1"/><text x="88.5598%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="88.3098%" y="965" width="0.0745%" height="15" fill="rgb(239,81,33)" fg:x="1186" fg:w="1"/><text x="88.5598%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="88.3098%" y="949" width="0.0745%" height="15" fill="rgb(213,120,34)" fg:x="1186" fg:w="1"/><text x="88.5598%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;demoparser::parsing::parser::ParsingMaps&gt;&gt; (10 samples, 0.74%)</title><rect x="88.3842%" y="1413" width="0.7446%" height="15" fill="rgb(243,49,53)" fg:x="1187" fg:w="10"/><text x="88.6342%" y="1423.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.74%)</title><rect x="88.3842%" y="1397" width="0.7446%" height="15" fill="rgb(247,216,33)" fg:x="1187" fg:w="10"/><text x="88.6342%" y="1407.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (10 samples, 0.74%)</title><rect x="88.3842%" y="1381" width="0.7446%" height="15" fill="rgb(226,26,14)" fg:x="1187" fg:w="10"/><text x="88.6342%" y="1391.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (6 samples, 0.45%)</title><rect x="89.1288%" y="1397" width="0.4468%" height="15" fill="rgb(215,49,53)" fg:x="1197" fg:w="6"/><text x="89.3788%" y="1407.50"></text></g><g><title>std::sync::poison::Flag::borrow (6 samples, 0.45%)</title><rect x="89.1288%" y="1381" width="0.4468%" height="15" fill="rgb(245,162,40)" fg:x="1197" fg:w="6"/><text x="89.3788%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="89.5011%" y="1365" width="0.0745%" height="15" fill="rgb(229,68,17)" fg:x="1202" fg:w="1"/><text x="89.7511%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="89.5011%" y="1349" width="0.0745%" height="15" fill="rgb(213,182,10)" fg:x="1202" fg:w="1"/><text x="89.7511%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="89.5011%" y="1333" width="0.0745%" height="15" fill="rgb(245,125,30)" fg:x="1202" fg:w="1"/><text x="89.7511%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="89.5011%" y="1317" width="0.0745%" height="15" fill="rgb(232,202,2)" fg:x="1202" fg:w="1"/><text x="89.7511%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="89.5011%" y="1301" width="0.0745%" height="15" fill="rgb(237,140,51)" fg:x="1202" fg:w="1"/><text x="89.7511%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="89.5011%" y="1285" width="0.0745%" height="15" fill="rgb(236,157,25)" fg:x="1202" fg:w="1"/><text x="89.7511%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="89.5011%" y="1269" width="0.0745%" height="15" fill="rgb(219,209,0)" fg:x="1202" fg:w="1"/><text x="89.7511%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="89.5011%" y="1253" width="0.0745%" height="15" fill="rgb(240,116,54)" fg:x="1202" fg:w="1"/><text x="89.7511%" y="1263.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (16 samples, 1.19%)</title><rect x="89.1288%" y="1413" width="1.1914%" height="15" fill="rgb(216,10,36)" fg:x="1197" fg:w="16"/><text x="89.3788%" y="1423.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (10 samples, 0.74%)</title><rect x="89.5756%" y="1397" width="0.7446%" height="15" fill="rgb(222,72,44)" fg:x="1203" fg:w="10"/><text x="89.8256%" y="1407.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_contended (5 samples, 0.37%)</title><rect x="89.9479%" y="1381" width="0.3723%" height="15" fill="rgb(232,159,9)" fg:x="1208" fg:w="5"/><text x="90.1979%" y="1391.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::spin_read (5 samples, 0.37%)</title><rect x="89.9479%" y="1365" width="0.3723%" height="15" fill="rgb(210,39,32)" fg:x="1208" fg:w="5"/><text x="90.1979%" y="1375.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::spin_until (5 samples, 0.37%)</title><rect x="89.9479%" y="1349" width="0.3723%" height="15" fill="rgb(216,194,45)" fg:x="1208" fg:w="5"/><text x="90.1979%" y="1359.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::spin_read::{{closure}} (5 samples, 0.37%)</title><rect x="89.9479%" y="1333" width="0.3723%" height="15" fill="rgb(218,18,35)" fg:x="1208" fg:w="5"/><text x="90.1979%" y="1343.50"></text></g><g><title>[unknown] (81 samples, 6.03%)</title><rect x="91.1392%" y="1349" width="6.0313%" height="15" fill="rgb(207,83,51)" fg:x="1224" fg:w="81"/><text x="91.3892%" y="1359.50">[unknown]</text></g><g><title>[unknown] (70 samples, 5.21%)</title><rect x="91.9583%" y="1333" width="5.2122%" height="15" fill="rgb(225,63,43)" fg:x="1235" fg:w="70"/><text x="92.2083%" y="1343.50">[unkno..</text></g><g><title>[unknown] (65 samples, 4.84%)</title><rect x="92.3306%" y="1317" width="4.8399%" height="15" fill="rgb(207,57,36)" fg:x="1240" fg:w="65"/><text x="92.5806%" y="1327.50">[unkno..</text></g><g><title>[unknown] (65 samples, 4.84%)</title><rect x="92.3306%" y="1301" width="4.8399%" height="15" fill="rgb(216,99,33)" fg:x="1240" fg:w="65"/><text x="92.5806%" y="1311.50">[unkno..</text></g><g><title>[unknown] (58 samples, 4.32%)</title><rect x="92.8518%" y="1285" width="4.3187%" height="15" fill="rgb(225,42,16)" fg:x="1247" fg:w="58"/><text x="93.1018%" y="1295.50">[unkn..</text></g><g><title>[unknown] (58 samples, 4.32%)</title><rect x="92.8518%" y="1269" width="4.3187%" height="15" fill="rgb(220,201,45)" fg:x="1247" fg:w="58"/><text x="93.1018%" y="1279.50">[unkn..</text></g><g><title>[unknown] (20 samples, 1.49%)</title><rect x="95.6813%" y="1253" width="1.4892%" height="15" fill="rgb(225,33,4)" fg:x="1285" fg:w="20"/><text x="95.9313%" y="1263.50"></text></g><g><title>[unknown] (20 samples, 1.49%)</title><rect x="95.6813%" y="1237" width="1.4892%" height="15" fill="rgb(224,33,50)" fg:x="1285" fg:w="20"/><text x="95.9313%" y="1247.50"></text></g><g><title>[unknown] (15 samples, 1.12%)</title><rect x="96.0536%" y="1221" width="1.1169%" height="15" fill="rgb(246,198,51)" fg:x="1290" fg:w="15"/><text x="96.3036%" y="1231.50"></text></g><g><title>[unknown] (15 samples, 1.12%)</title><rect x="96.0536%" y="1205" width="1.1169%" height="15" fill="rgb(205,22,4)" fg:x="1290" fg:w="15"/><text x="96.3036%" y="1215.50"></text></g><g><title>[unknown] (14 samples, 1.04%)</title><rect x="96.1281%" y="1189" width="1.0424%" height="15" fill="rgb(206,3,8)" fg:x="1291" fg:w="14"/><text x="96.3781%" y="1199.50"></text></g><g><title>[unknown] (13 samples, 0.97%)</title><rect x="96.2025%" y="1173" width="0.9680%" height="15" fill="rgb(251,23,15)" fg:x="1292" fg:w="13"/><text x="96.4525%" y="1183.50"></text></g><g><title>[unknown] (8 samples, 0.60%)</title><rect x="96.5748%" y="1157" width="0.5957%" height="15" fill="rgb(252,88,28)" fg:x="1297" fg:w="8"/><text x="96.8248%" y="1167.50"></text></g><g><title>[unknown] (8 samples, 0.60%)</title><rect x="96.5748%" y="1141" width="0.5957%" height="15" fill="rgb(212,127,14)" fg:x="1297" fg:w="8"/><text x="96.8248%" y="1151.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="96.7238%" y="1125" width="0.4468%" height="15" fill="rgb(247,145,37)" fg:x="1299" fg:w="6"/><text x="96.9738%" y="1135.50"></text></g><g><title>[unknown] (4 samples, 0.30%)</title><rect x="96.8727%" y="1109" width="0.2978%" height="15" fill="rgb(209,117,53)" fg:x="1301" fg:w="4"/><text x="97.1227%" y="1119.50"></text></g><g><title>[unknown] (3 samples, 0.22%)</title><rect x="96.9471%" y="1093" width="0.2234%" height="15" fill="rgb(212,90,42)" fg:x="1302" fg:w="3"/><text x="97.1971%" y="1103.50"></text></g><g><title>[unknown] (3 samples, 0.22%)</title><rect x="96.9471%" y="1077" width="0.2234%" height="15" fill="rgb(218,164,37)" fg:x="1302" fg:w="3"/><text x="97.1971%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (1,218 samples, 90.69%)</title><rect x="6.8503%" y="1557" width="90.6925%" height="15" fill="rgb(246,65,34)" fg:x="92" fg:w="1218"/><text x="7.1003%" y="1567.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,218 samples, 90.69%)</title><rect x="6.8503%" y="1541" width="90.6925%" height="15" fill="rgb(231,100,33)" fg:x="92" fg:w="1218"/><text x="7.1003%" y="1551.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,218 samples, 90.69%)</title><rect x="6.8503%" y="1525" width="90.6925%" height="15" fill="rgb(228,126,14)" fg:x="92" fg:w="1218"/><text x="7.1003%" y="1535.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,218 samples, 90.69%)</title><rect x="6.8503%" y="1509" width="90.6925%" height="15" fill="rgb(215,173,21)" fg:x="92" fg:w="1218"/><text x="7.1003%" y="1519.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (1,218 samples, 90.69%)</title><rect x="6.8503%" y="1493" width="90.6925%" height="15" fill="rgb(210,6,40)" fg:x="92" fg:w="1218"/><text x="7.1003%" y="1503.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,218 samples, 90.69%)</title><rect x="6.8503%" y="1477" width="90.6925%" height="15" fill="rgb(212,48,18)" fg:x="92" fg:w="1218"/><text x="7.1003%" y="1487.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>demoparser::parsing::parser::Parser::start_parser_thread_main::{{closure}} (929 samples, 69.17%)</title><rect x="28.3693%" y="1461" width="69.1735%" height="15" fill="rgb(230,214,11)" fg:x="381" fg:w="929"/><text x="28.6193%" y="1471.50">demoparser::parsing::parser::Parser::start_parser_thread_main::{{closure}}</text></g><g><title>demoparser::parsing::parser::Parser::start_parser_thread (929 samples, 69.17%)</title><rect x="28.3693%" y="1445" width="69.1735%" height="15" fill="rgb(254,105,39)" fg:x="381" fg:w="929"/><text x="28.6193%" y="1455.50">demoparser::parsing::parser::Parser::start_parser_thread</text></g><g><title>demoparser::parsing::parser::Parser::wait_for_map (165 samples, 12.29%)</title><rect x="85.2569%" y="1429" width="12.2859%" height="15" fill="rgb(245,158,5)" fg:x="1145" fg:w="165"/><text x="85.5069%" y="1439.50">demoparser::parsin..</text></g><g><title>std::thread::sleep (97 samples, 7.22%)</title><rect x="90.3202%" y="1413" width="7.2226%" height="15" fill="rgb(249,208,11)" fg:x="1213" fg:w="97"/><text x="90.5702%" y="1423.50">std::threa..</text></g><g><title>std::sys::unix::thread::Thread::sleep (97 samples, 7.22%)</title><rect x="90.3202%" y="1397" width="7.2226%" height="15" fill="rgb(210,39,28)" fg:x="1213" fg:w="97"/><text x="90.5702%" y="1407.50">std::sys::..</text></g><g><title>__GI___nanosleep (96 samples, 7.15%)</title><rect x="90.3946%" y="1381" width="7.1482%" height="15" fill="rgb(211,56,53)" fg:x="1214" fg:w="96"/><text x="90.6446%" y="1391.50">__GI___nan..</text></g><g><title>__GI___clock_nanosleep (96 samples, 7.15%)</title><rect x="90.3946%" y="1365" width="7.1482%" height="15" fill="rgb(226,201,30)" fg:x="1214" fg:w="96"/><text x="90.6446%" y="1375.50">__GI___clo..</text></g><g><title>__GI___pthread_enable_asynccancel (5 samples, 0.37%)</title><rect x="97.1705%" y="1349" width="0.3723%" height="15" fill="rgb(239,101,34)" fg:x="1305" fg:w="5"/><text x="97.4205%" y="1359.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.07%)</title><rect x="97.5428%" y="1397" width="0.0745%" height="15" fill="rgb(226,209,5)" fg:x="1310" fg:w="1"/><text x="97.7928%" y="1407.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.07%)</title><rect x="97.5428%" y="1381" width="0.0745%" height="15" fill="rgb(250,105,47)" fg:x="1310" fg:w="1"/><text x="97.7928%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="97.5428%" y="1365" width="0.0745%" height="15" fill="rgb(230,72,3)" fg:x="1310" fg:w="1"/><text x="97.7928%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="97.5428%" y="1349" width="0.0745%" height="15" fill="rgb(232,218,39)" fg:x="1310" fg:w="1"/><text x="97.7928%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="97.5428%" y="1333" width="0.0745%" height="15" fill="rgb(248,166,6)" fg:x="1310" fg:w="1"/><text x="97.7928%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="97.5428%" y="1317" width="0.0745%" height="15" fill="rgb(247,89,20)" fg:x="1310" fg:w="1"/><text x="97.7928%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="97.5428%" y="1301" width="0.0745%" height="15" fill="rgb(248,130,54)" fg:x="1310" fg:w="1"/><text x="97.7928%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="97.5428%" y="1285" width="0.0745%" height="15" fill="rgb(234,196,4)" fg:x="1310" fg:w="1"/><text x="97.7928%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="97.5428%" y="1269" width="0.0745%" height="15" fill="rgb(250,143,31)" fg:x="1310" fg:w="1"/><text x="97.7928%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="97.5428%" y="1253" width="0.0745%" height="15" fill="rgb(211,110,34)" fg:x="1310" fg:w="1"/><text x="97.7928%" y="1263.50"></text></g><g><title>__GI___mprotect (6 samples, 0.45%)</title><rect x="97.6173%" y="1397" width="0.4468%" height="15" fill="rgb(215,124,48)" fg:x="1311" fg:w="6"/><text x="97.8673%" y="1407.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="97.6173%" y="1381" width="0.4468%" height="15" fill="rgb(216,46,13)" fg:x="1311" fg:w="6"/><text x="97.8673%" y="1391.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="97.6173%" y="1365" width="0.4468%" height="15" fill="rgb(205,184,25)" fg:x="1311" fg:w="6"/><text x="97.8673%" y="1375.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="97.6173%" y="1349" width="0.4468%" height="15" fill="rgb(228,1,10)" fg:x="1311" fg:w="6"/><text x="97.8673%" y="1359.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="97.6173%" y="1333" width="0.4468%" height="15" fill="rgb(213,116,27)" fg:x="1311" fg:w="6"/><text x="97.8673%" y="1343.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="97.6173%" y="1317" width="0.4468%" height="15" fill="rgb(241,95,50)" fg:x="1311" fg:w="6"/><text x="97.8673%" y="1327.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="97.6173%" y="1301" width="0.4468%" height="15" fill="rgb(238,48,32)" fg:x="1311" fg:w="6"/><text x="97.8673%" y="1311.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="97.6173%" y="1285" width="0.4468%" height="15" fill="rgb(235,113,49)" fg:x="1311" fg:w="6"/><text x="97.8673%" y="1295.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="97.6173%" y="1269" width="0.4468%" height="15" fill="rgb(205,127,43)" fg:x="1311" fg:w="6"/><text x="97.8673%" y="1279.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="97.6173%" y="1253" width="0.4468%" height="15" fill="rgb(250,162,2)" fg:x="1311" fg:w="6"/><text x="97.8673%" y="1263.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="97.6173%" y="1237" width="0.4468%" height="15" fill="rgb(220,13,41)" fg:x="1311" fg:w="6"/><text x="97.8673%" y="1247.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="97.6173%" y="1221" width="0.4468%" height="15" fill="rgb(249,221,25)" fg:x="1311" fg:w="6"/><text x="97.8673%" y="1231.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="97.6173%" y="1205" width="0.4468%" height="15" fill="rgb(215,208,19)" fg:x="1311" fg:w="6"/><text x="97.8673%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="97.9896%" y="1189" width="0.0745%" height="15" fill="rgb(236,175,2)" fg:x="1316" fg:w="1"/><text x="98.2396%" y="1199.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,228 samples, 91.44%)</title><rect x="6.8503%" y="1621" width="91.4371%" height="15" fill="rgb(241,52,2)" fg:x="92" fg:w="1228"/><text x="7.1003%" y="1631.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,228 samples, 91.44%)</title><rect x="6.8503%" y="1605" width="91.4371%" height="15" fill="rgb(248,140,14)" fg:x="92" fg:w="1228"/><text x="7.1003%" y="1615.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1,228 samples, 91.44%)</title><rect x="6.8503%" y="1589" width="91.4371%" height="15" fill="rgb(253,22,42)" fg:x="92" fg:w="1228"/><text x="7.1003%" y="1599.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1,228 samples, 91.44%)</title><rect x="6.8503%" y="1573" width="91.4371%" height="15" fill="rgb(234,61,47)" fg:x="92" fg:w="1228"/><text x="7.1003%" y="1583.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::sys::unix::thread::guard::current (10 samples, 0.74%)</title><rect x="97.5428%" y="1557" width="0.7446%" height="15" fill="rgb(208,226,15)" fg:x="1310" fg:w="10"/><text x="97.7928%" y="1567.50"></text></g><g><title>__pthread_getattr_np (10 samples, 0.74%)</title><rect x="97.5428%" y="1541" width="0.7446%" height="15" fill="rgb(217,221,4)" fg:x="1310" fg:w="10"/><text x="97.7928%" y="1551.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.74%)</title><rect x="97.5428%" y="1525" width="0.7446%" height="15" fill="rgb(212,174,34)" fg:x="1310" fg:w="10"/><text x="97.7928%" y="1535.50"></text></g><g><title>tcache_init (10 samples, 0.74%)</title><rect x="97.5428%" y="1509" width="0.7446%" height="15" fill="rgb(253,83,4)" fg:x="1310" fg:w="10"/><text x="97.7928%" y="1519.50"></text></g><g><title>tcache_init (10 samples, 0.74%)</title><rect x="97.5428%" y="1493" width="0.7446%" height="15" fill="rgb(250,195,49)" fg:x="1310" fg:w="10"/><text x="97.7928%" y="1503.50"></text></g><g><title>arena_get2 (10 samples, 0.74%)</title><rect x="97.5428%" y="1477" width="0.7446%" height="15" fill="rgb(241,192,25)" fg:x="1310" fg:w="10"/><text x="97.7928%" y="1487.50"></text></g><g><title>arena_get2 (10 samples, 0.74%)</title><rect x="97.5428%" y="1461" width="0.7446%" height="15" fill="rgb(208,124,10)" fg:x="1310" fg:w="10"/><text x="97.7928%" y="1471.50"></text></g><g><title>_int_new_arena (10 samples, 0.74%)</title><rect x="97.5428%" y="1445" width="0.7446%" height="15" fill="rgb(222,33,0)" fg:x="1310" fg:w="10"/><text x="97.7928%" y="1455.50"></text></g><g><title>new_heap (10 samples, 0.74%)</title><rect x="97.5428%" y="1429" width="0.7446%" height="15" fill="rgb(234,209,28)" fg:x="1310" fg:w="10"/><text x="97.7928%" y="1439.50"></text></g><g><title>alloc_new_heap (10 samples, 0.74%)</title><rect x="97.5428%" y="1413" width="0.7446%" height="15" fill="rgb(224,11,23)" fg:x="1310" fg:w="10"/><text x="97.7928%" y="1423.50"></text></g><g><title>__GI___munmap (3 samples, 0.22%)</title><rect x="98.0640%" y="1397" width="0.2234%" height="15" fill="rgb(232,99,1)" fg:x="1317" fg:w="3"/><text x="98.3140%" y="1407.50"></text></g><g><title>[unknown] (3 samples, 0.22%)</title><rect x="98.0640%" y="1381" width="0.2234%" height="15" fill="rgb(237,95,45)" fg:x="1317" fg:w="3"/><text x="98.3140%" y="1391.50"></text></g><g><title>[unknown] (3 samples, 0.22%)</title><rect x="98.0640%" y="1365" width="0.2234%" height="15" fill="rgb(208,109,11)" fg:x="1317" fg:w="3"/><text x="98.3140%" y="1375.50"></text></g><g><title>[unknown] (3 samples, 0.22%)</title><rect x="98.0640%" y="1349" width="0.2234%" height="15" fill="rgb(216,190,48)" fg:x="1317" fg:w="3"/><text x="98.3140%" y="1359.50"></text></g><g><title>[unknown] (3 samples, 0.22%)</title><rect x="98.0640%" y="1333" width="0.2234%" height="15" fill="rgb(251,171,36)" fg:x="1317" fg:w="3"/><text x="98.3140%" y="1343.50"></text></g><g><title>[unknown] (3 samples, 0.22%)</title><rect x="98.0640%" y="1317" width="0.2234%" height="15" fill="rgb(230,62,22)" fg:x="1317" fg:w="3"/><text x="98.3140%" y="1327.50"></text></g><g><title>[unknown] (3 samples, 0.22%)</title><rect x="98.0640%" y="1301" width="0.2234%" height="15" fill="rgb(225,114,35)" fg:x="1317" fg:w="3"/><text x="98.3140%" y="1311.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="98.1385%" y="1285" width="0.1489%" height="15" fill="rgb(215,118,42)" fg:x="1318" fg:w="2"/><text x="98.3885%" y="1295.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="98.1385%" y="1269" width="0.1489%" height="15" fill="rgb(243,119,21)" fg:x="1318" fg:w="2"/><text x="98.3885%" y="1279.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="98.1385%" y="1253" width="0.1489%" height="15" fill="rgb(252,177,53)" fg:x="1318" fg:w="2"/><text x="98.3885%" y="1263.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="98.1385%" y="1237" width="0.1489%" height="15" fill="rgb(237,209,29)" fg:x="1318" fg:w="2"/><text x="98.3885%" y="1247.50"></text></g><g><title>__GI___mmap64 (2 samples, 0.15%)</title><rect x="98.2874%" y="1557" width="0.1489%" height="15" fill="rgb(212,65,23)" fg:x="1320" fg:w="2"/><text x="98.5374%" y="1567.50"></text></g><g><title>__GI___mmap64 (2 samples, 0.15%)</title><rect x="98.2874%" y="1541" width="0.1489%" height="15" fill="rgb(230,222,46)" fg:x="1320" fg:w="2"/><text x="98.5374%" y="1551.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="98.2874%" y="1525" width="0.1489%" height="15" fill="rgb(215,135,32)" fg:x="1320" fg:w="2"/><text x="98.5374%" y="1535.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="98.2874%" y="1509" width="0.1489%" height="15" fill="rgb(246,101,22)" fg:x="1320" fg:w="2"/><text x="98.5374%" y="1519.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="98.2874%" y="1493" width="0.1489%" height="15" fill="rgb(206,107,13)" fg:x="1320" fg:w="2"/><text x="98.5374%" y="1503.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="98.2874%" y="1477" width="0.1489%" height="15" fill="rgb(250,100,44)" fg:x="1320" fg:w="2"/><text x="98.5374%" y="1487.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="98.2874%" y="1461" width="0.1489%" height="15" fill="rgb(231,147,38)" fg:x="1320" fg:w="2"/><text x="98.5374%" y="1471.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="98.2874%" y="1445" width="0.1489%" height="15" fill="rgb(229,8,40)" fg:x="1320" fg:w="2"/><text x="98.5374%" y="1455.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="98.2874%" y="1429" width="0.1489%" height="15" fill="rgb(221,135,30)" fg:x="1320" fg:w="2"/><text x="98.5374%" y="1439.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="98.2874%" y="1413" width="0.1489%" height="15" fill="rgb(249,193,18)" fg:x="1320" fg:w="2"/><text x="98.5374%" y="1423.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="98.2874%" y="1397" width="0.1489%" height="15" fill="rgb(209,133,39)" fg:x="1320" fg:w="2"/><text x="98.5374%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.3619%" y="1381" width="0.0745%" height="15" fill="rgb(232,100,14)" fg:x="1321" fg:w="1"/><text x="98.6119%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.3619%" y="1365" width="0.0745%" height="15" fill="rgb(224,185,1)" fg:x="1321" fg:w="1"/><text x="98.6119%" y="1375.50"></text></g><g><title>__clone3 (1,238 samples, 92.18%)</title><rect x="6.7014%" y="1669" width="92.1817%" height="15" fill="rgb(223,139,8)" fg:x="90" fg:w="1238"/><text x="6.9514%" y="1679.50">__clone3</text></g><g><title>start_thread (1,238 samples, 92.18%)</title><rect x="6.7014%" y="1653" width="92.1817%" height="15" fill="rgb(232,213,38)" fg:x="90" fg:w="1238"/><text x="6.9514%" y="1663.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1,236 samples, 92.03%)</title><rect x="6.8503%" y="1637" width="92.0328%" height="15" fill="rgb(207,94,22)" fg:x="92" fg:w="1236"/><text x="7.1003%" y="1647.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (8 samples, 0.60%)</title><rect x="98.2874%" y="1621" width="0.5957%" height="15" fill="rgb(219,183,54)" fg:x="1320" fg:w="8"/><text x="98.5374%" y="1631.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (8 samples, 0.60%)</title><rect x="98.2874%" y="1605" width="0.5957%" height="15" fill="rgb(216,185,54)" fg:x="1320" fg:w="8"/><text x="98.5374%" y="1615.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (8 samples, 0.60%)</title><rect x="98.2874%" y="1589" width="0.5957%" height="15" fill="rgb(254,217,39)" fg:x="1320" fg:w="8"/><text x="98.5374%" y="1599.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (8 samples, 0.60%)</title><rect x="98.2874%" y="1573" width="0.5957%" height="15" fill="rgb(240,178,23)" fg:x="1320" fg:w="8"/><text x="98.5374%" y="1583.50"></text></g><g><title>__GI___mprotect (6 samples, 0.45%)</title><rect x="98.4363%" y="1557" width="0.4468%" height="15" fill="rgb(218,11,47)" fg:x="1322" fg:w="6"/><text x="98.6863%" y="1567.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="98.4363%" y="1541" width="0.4468%" height="15" fill="rgb(218,51,51)" fg:x="1322" fg:w="6"/><text x="98.6863%" y="1551.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="98.4363%" y="1525" width="0.4468%" height="15" fill="rgb(238,126,27)" fg:x="1322" fg:w="6"/><text x="98.6863%" y="1535.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="98.4363%" y="1509" width="0.4468%" height="15" fill="rgb(249,202,22)" fg:x="1322" fg:w="6"/><text x="98.6863%" y="1519.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="98.4363%" y="1493" width="0.4468%" height="15" fill="rgb(254,195,49)" fg:x="1322" fg:w="6"/><text x="98.6863%" y="1503.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="98.4363%" y="1477" width="0.4468%" height="15" fill="rgb(208,123,14)" fg:x="1322" fg:w="6"/><text x="98.6863%" y="1487.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="98.5108%" y="1461" width="0.3723%" height="15" fill="rgb(224,200,8)" fg:x="1323" fg:w="5"/><text x="98.7608%" y="1471.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="98.5108%" y="1445" width="0.3723%" height="15" fill="rgb(217,61,36)" fg:x="1323" fg:w="5"/><text x="98.7608%" y="1455.50"></text></g><g><title>[unknown] (4 samples, 0.30%)</title><rect x="98.5853%" y="1429" width="0.2978%" height="15" fill="rgb(206,35,45)" fg:x="1324" fg:w="4"/><text x="98.8353%" y="1439.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.8086%" y="1413" width="0.0745%" height="15" fill="rgb(217,65,33)" fg:x="1327" fg:w="1"/><text x="99.0586%" y="1423.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.8086%" y="1397" width="0.0745%" height="15" fill="rgb(222,158,48)" fg:x="1327" fg:w="1"/><text x="99.0586%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.8086%" y="1381" width="0.0745%" height="15" fill="rgb(254,2,54)" fg:x="1327" fg:w="1"/><text x="99.0586%" y="1391.50"></text></g><g><title>__GI_exit (1 samples, 0.07%)</title><rect x="98.8831%" y="1621" width="0.0745%" height="15" fill="rgb(250,143,38)" fg:x="1328" fg:w="1"/><text x="99.1331%" y="1631.50"></text></g><g><title>__run_exit_handlers (1 samples, 0.07%)</title><rect x="98.8831%" y="1605" width="0.0745%" height="15" fill="rgb(248,25,0)" fg:x="1328" fg:w="1"/><text x="99.1331%" y="1615.50"></text></g><g><title>mi_process_done (1 samples, 0.07%)</title><rect x="98.8831%" y="1589" width="0.0745%" height="15" fill="rgb(206,152,27)" fg:x="1328" fg:w="1"/><text x="99.1331%" y="1599.50"></text></g><g><title>mi_process_done (1 samples, 0.07%)</title><rect x="98.8831%" y="1573" width="0.0745%" height="15" fill="rgb(240,77,30)" fg:x="1328" fg:w="1"/><text x="99.1331%" y="1583.50"></text></g><g><title>mi_heap_collect_ex (1 samples, 0.07%)</title><rect x="98.8831%" y="1557" width="0.0745%" height="15" fill="rgb(231,5,3)" fg:x="1328" fg:w="1"/><text x="99.1331%" y="1567.50"></text></g><g><title>mi_segment_cache_purge (1 samples, 0.07%)</title><rect x="98.8831%" y="1541" width="0.0745%" height="15" fill="rgb(207,226,32)" fg:x="1328" fg:w="1"/><text x="99.1331%" y="1551.50"></text></g><g><title>mi_commit_mask_decommit (1 samples, 0.07%)</title><rect x="98.8831%" y="1525" width="0.0745%" height="15" fill="rgb(222,207,47)" fg:x="1328" fg:w="1"/><text x="99.1331%" y="1535.50"></text></g><g><title>_mi_os_decommit (1 samples, 0.07%)</title><rect x="98.8831%" y="1509" width="0.0745%" height="15" fill="rgb(229,115,45)" fg:x="1328" fg:w="1"/><text x="99.1331%" y="1519.50"></text></g><g><title>mi_os_commitx (1 samples, 0.07%)</title><rect x="98.8831%" y="1493" width="0.0745%" height="15" fill="rgb(224,191,6)" fg:x="1328" fg:w="1"/><text x="99.1331%" y="1503.50"></text></g><g><title>__GI_madvise (1 samples, 0.07%)</title><rect x="98.8831%" y="1477" width="0.0745%" height="15" fill="rgb(230,227,24)" fg:x="1328" fg:w="1"/><text x="99.1331%" y="1487.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.8831%" y="1461" width="0.0745%" height="15" fill="rgb(228,80,19)" fg:x="1328" fg:w="1"/><text x="99.1331%" y="1471.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.8831%" y="1445" width="0.0745%" height="15" fill="rgb(247,229,0)" fg:x="1328" fg:w="1"/><text x="99.1331%" y="1455.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.8831%" y="1429" width="0.0745%" height="15" fill="rgb(237,194,15)" fg:x="1328" fg:w="1"/><text x="99.1331%" y="1439.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.8831%" y="1413" width="0.0745%" height="15" fill="rgb(219,203,20)" fg:x="1328" fg:w="1"/><text x="99.1331%" y="1423.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.8831%" y="1397" width="0.0745%" height="15" fill="rgb(234,128,8)" fg:x="1328" fg:w="1"/><text x="99.1331%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.8831%" y="1381" width="0.0745%" height="15" fill="rgb(248,202,8)" fg:x="1328" fg:w="1"/><text x="99.1331%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.8831%" y="1365" width="0.0745%" height="15" fill="rgb(206,104,37)" fg:x="1328" fg:w="1"/><text x="99.1331%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.8831%" y="1349" width="0.0745%" height="15" fill="rgb(223,8,27)" fg:x="1328" fg:w="1"/><text x="99.1331%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.8831%" y="1333" width="0.0745%" height="15" fill="rgb(216,217,28)" fg:x="1328" fg:w="1"/><text x="99.1331%" y="1343.50"></text></g><g><title>&lt;std::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="98.9576%" y="1397" width="0.0745%" height="15" fill="rgb(249,199,1)" fg:x="1329" fg:w="1"/><text x="99.2076%" y="1407.50"></text></g><g><title>&lt;std::sys::unix::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="98.9576%" y="1381" width="0.0745%" height="15" fill="rgb(240,85,17)" fg:x="1329" fg:w="1"/><text x="99.2076%" y="1391.50"></text></g><g><title>__GI___readdir64 (1 samples, 0.07%)</title><rect x="98.9576%" y="1365" width="0.0745%" height="15" fill="rgb(206,108,45)" fg:x="1329" fg:w="1"/><text x="99.2076%" y="1375.50"></text></g><g><title>__GI___getdents64 (1 samples, 0.07%)</title><rect x="98.9576%" y="1349" width="0.0745%" height="15" fill="rgb(245,210,41)" fg:x="1329" fg:w="1"/><text x="99.2076%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.9576%" y="1333" width="0.0745%" height="15" fill="rgb(206,13,37)" fg:x="1329" fg:w="1"/><text x="99.2076%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.9576%" y="1317" width="0.0745%" height="15" fill="rgb(250,61,18)" fg:x="1329" fg:w="1"/><text x="99.2076%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.9576%" y="1301" width="0.0745%" height="15" fill="rgb(235,172,48)" fg:x="1329" fg:w="1"/><text x="99.2076%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.9576%" y="1285" width="0.0745%" height="15" fill="rgb(249,201,17)" fg:x="1329" fg:w="1"/><text x="99.2076%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.9576%" y="1269" width="0.0745%" height="15" fill="rgb(219,208,6)" fg:x="1329" fg:w="1"/><text x="99.2076%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.9576%" y="1253" width="0.0745%" height="15" fill="rgb(248,31,23)" fg:x="1329" fg:w="1"/><text x="99.2076%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.9576%" y="1237" width="0.0745%" height="15" fill="rgb(245,15,42)" fg:x="1329" fg:w="1"/><text x="99.2076%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.9576%" y="1221" width="0.0745%" height="15" fill="rgb(222,217,39)" fg:x="1329" fg:w="1"/><text x="99.2076%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.9576%" y="1205" width="0.0745%" height="15" fill="rgb(210,219,27)" fg:x="1329" fg:w="1"/><text x="99.2076%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.9576%" y="1189" width="0.0745%" height="15" fill="rgb(252,166,36)" fg:x="1329" fg:w="1"/><text x="99.2076%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.9576%" y="1173" width="0.0745%" height="15" fill="rgb(245,132,34)" fg:x="1329" fg:w="1"/><text x="99.2076%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.9576%" y="1157" width="0.0745%" height="15" fill="rgb(236,54,3)" fg:x="1329" fg:w="1"/><text x="99.2076%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.9576%" y="1141" width="0.0745%" height="15" fill="rgb(241,173,43)" fg:x="1329" fg:w="1"/><text x="99.2076%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.9576%" y="1125" width="0.0745%" height="15" fill="rgb(215,190,9)" fg:x="1329" fg:w="1"/><text x="99.2076%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.9576%" y="1109" width="0.0745%" height="15" fill="rgb(242,101,16)" fg:x="1329" fg:w="1"/><text x="99.2076%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.9576%" y="1093" width="0.0745%" height="15" fill="rgb(223,190,21)" fg:x="1329" fg:w="1"/><text x="99.2076%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser::Parser&gt; (1 samples, 0.07%)</title><rect x="99.0320%" y="1221" width="0.0745%" height="15" fill="rgb(215,228,25)" fg:x="1330" fg:w="1"/><text x="99.2820%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;memmap2::Mmap&gt;&gt; (1 samples, 0.07%)</title><rect x="99.0320%" y="1205" width="0.0745%" height="15" fill="rgb(225,36,22)" fg:x="1330" fg:w="1"/><text x="99.2820%" y="1215.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="99.0320%" y="1189" width="0.0745%" height="15" fill="rgb(251,106,46)" fg:x="1330" fg:w="1"/><text x="99.2820%" y="1199.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.07%)</title><rect x="99.0320%" y="1173" width="0.0745%" height="15" fill="rgb(208,90,1)" fg:x="1330" fg:w="1"/><text x="99.2820%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;memmap2::Mmap&gt; (1 samples, 0.07%)</title><rect x="99.0320%" y="1157" width="0.0745%" height="15" fill="rgb(243,10,4)" fg:x="1330" fg:w="1"/><text x="99.2820%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;memmap2::os::MmapInner&gt; (1 samples, 0.07%)</title><rect x="99.0320%" y="1141" width="0.0745%" height="15" fill="rgb(212,137,27)" fg:x="1330" fg:w="1"/><text x="99.2820%" y="1151.50"></text></g><g><title>__GI___munmap (1 samples, 0.07%)</title><rect x="99.0320%" y="1125" width="0.0745%" height="15" fill="rgb(231,220,49)" fg:x="1330" fg:w="1"/><text x="99.2820%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0320%" y="1109" width="0.0745%" height="15" fill="rgb(237,96,20)" fg:x="1330" fg:w="1"/><text x="99.2820%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0320%" y="1093" width="0.0745%" height="15" fill="rgb(239,229,30)" fg:x="1330" fg:w="1"/><text x="99.2820%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0320%" y="1077" width="0.0745%" height="15" fill="rgb(219,65,33)" fg:x="1330" fg:w="1"/><text x="99.2820%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0320%" y="1061" width="0.0745%" height="15" fill="rgb(243,134,7)" fg:x="1330" fg:w="1"/><text x="99.2820%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0320%" y="1045" width="0.0745%" height="15" fill="rgb(216,177,54)" fg:x="1330" fg:w="1"/><text x="99.2820%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0320%" y="1029" width="0.0745%" height="15" fill="rgb(211,160,20)" fg:x="1330" fg:w="1"/><text x="99.2820%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0320%" y="1013" width="0.0745%" height="15" fill="rgb(239,85,39)" fg:x="1330" fg:w="1"/><text x="99.2820%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0320%" y="997" width="0.0745%" height="15" fill="rgb(232,125,22)" fg:x="1330" fg:w="1"/><text x="99.2820%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0320%" y="981" width="0.0745%" height="15" fill="rgb(244,57,34)" fg:x="1330" fg:w="1"/><text x="99.2820%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0320%" y="965" width="0.0745%" height="15" fill="rgb(214,203,32)" fg:x="1330" fg:w="1"/><text x="99.2820%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0320%" y="949" width="0.0745%" height="15" fill="rgb(207,58,43)" fg:x="1330" fg:w="1"/><text x="99.2820%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::parser::JobResult&gt;&gt; (1 samples, 0.07%)</title><rect x="99.1065%" y="1205" width="0.0745%" height="15" fill="rgb(215,193,15)" fg:x="1331" fg:w="1"/><text x="99.3565%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="99.1065%" y="1189" width="0.0745%" height="15" fill="rgb(232,15,44)" fg:x="1331" fg:w="1"/><text x="99.3565%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::parser::JobResult]&gt; (1 samples, 0.07%)</title><rect x="99.1065%" y="1173" width="0.0745%" height="15" fill="rgb(212,3,48)" fg:x="1331" fg:w="1"/><text x="99.3565%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser::JobResult&gt; (1 samples, 0.07%)</title><rect x="99.1065%" y="1157" width="0.0745%" height="15" fill="rgb(218,128,7)" fg:x="1331" fg:w="1"/><text x="99.3565%" y="1167.50"></text></g><g><title>demoparser (1,338 samples, 99.63%)</title><rect x="0.0000%" y="1685" width="99.6277%" height="15" fill="rgb(226,216,39)" fg:x="0" fg:w="1338"/><text x="0.2500%" y="1695.50">demoparser</text></g><g><title>_start (10 samples, 0.74%)</title><rect x="98.8831%" y="1669" width="0.7446%" height="15" fill="rgb(243,47,51)" fg:x="1328" fg:w="10"/><text x="99.1331%" y="1679.50"></text></g><g><title>__libc_start_main_impl (10 samples, 0.74%)</title><rect x="98.8831%" y="1653" width="0.7446%" height="15" fill="rgb(241,183,40)" fg:x="1328" fg:w="10"/><text x="99.1331%" y="1663.50"></text></g><g><title>__libc_start_call_main (10 samples, 0.74%)</title><rect x="98.8831%" y="1637" width="0.7446%" height="15" fill="rgb(231,217,32)" fg:x="1328" fg:w="10"/><text x="99.1331%" y="1647.50"></text></g><g><title>main (9 samples, 0.67%)</title><rect x="98.9576%" y="1621" width="0.6701%" height="15" fill="rgb(229,61,38)" fg:x="1329" fg:w="9"/><text x="99.2076%" y="1631.50"></text></g><g><title>std::rt::lang_start_internal (9 samples, 0.67%)</title><rect x="98.9576%" y="1605" width="0.6701%" height="15" fill="rgb(225,210,5)" fg:x="1329" fg:w="9"/><text x="99.2076%" y="1615.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.67%)</title><rect x="98.9576%" y="1589" width="0.6701%" height="15" fill="rgb(231,79,45)" fg:x="1329" fg:w="9"/><text x="99.2076%" y="1599.50"></text></g><g><title>std::panicking::try (9 samples, 0.67%)</title><rect x="98.9576%" y="1573" width="0.6701%" height="15" fill="rgb(224,100,7)" fg:x="1329" fg:w="9"/><text x="99.2076%" y="1583.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.67%)</title><rect x="98.9576%" y="1557" width="0.6701%" height="15" fill="rgb(241,198,18)" fg:x="1329" fg:w="9"/><text x="99.2076%" y="1567.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (9 samples, 0.67%)</title><rect x="98.9576%" y="1541" width="0.6701%" height="15" fill="rgb(252,97,53)" fg:x="1329" fg:w="9"/><text x="99.2076%" y="1551.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.67%)</title><rect x="98.9576%" y="1525" width="0.6701%" height="15" fill="rgb(220,88,7)" fg:x="1329" fg:w="9"/><text x="99.2076%" y="1535.50"></text></g><g><title>std::panicking::try (9 samples, 0.67%)</title><rect x="98.9576%" y="1509" width="0.6701%" height="15" fill="rgb(213,176,14)" fg:x="1329" fg:w="9"/><text x="99.2076%" y="1519.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.67%)</title><rect x="98.9576%" y="1493" width="0.6701%" height="15" fill="rgb(246,73,7)" fg:x="1329" fg:w="9"/><text x="99.2076%" y="1503.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (9 samples, 0.67%)</title><rect x="98.9576%" y="1477" width="0.6701%" height="15" fill="rgb(245,64,36)" fg:x="1329" fg:w="9"/><text x="99.2076%" y="1487.50"></text></g><g><title>std::rt::lang_start::{{closure}} (9 samples, 0.67%)</title><rect x="98.9576%" y="1461" width="0.6701%" height="15" fill="rgb(245,80,10)" fg:x="1329" fg:w="9"/><text x="99.2076%" y="1471.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (9 samples, 0.67%)</title><rect x="98.9576%" y="1445" width="0.6701%" height="15" fill="rgb(232,107,50)" fg:x="1329" fg:w="9"/><text x="99.2076%" y="1455.50"></text></g><g><title>core::ops::function::FnOnce::call_once (9 samples, 0.67%)</title><rect x="98.9576%" y="1429" width="0.6701%" height="15" fill="rgb(253,3,0)" fg:x="1329" fg:w="9"/><text x="99.2076%" y="1439.50"></text></g><g><title>demoparser::main (9 samples, 0.67%)</title><rect x="98.9576%" y="1413" width="0.6701%" height="15" fill="rgb(212,99,53)" fg:x="1329" fg:w="9"/><text x="99.2076%" y="1423.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.60%)</title><rect x="99.0320%" y="1397" width="0.5957%" height="15" fill="rgb(249,111,54)" fg:x="1330" fg:w="8"/><text x="99.2820%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.60%)</title><rect x="99.0320%" y="1381" width="0.5957%" height="15" fill="rgb(249,55,30)" fg:x="1330" fg:w="8"/><text x="99.2820%" y="1391.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (8 samples, 0.60%)</title><rect x="99.0320%" y="1365" width="0.5957%" height="15" fill="rgb(237,47,42)" fg:x="1330" fg:w="8"/><text x="99.2820%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 0.60%)</title><rect x="99.0320%" y="1349" width="0.5957%" height="15" fill="rgb(211,20,18)" fg:x="1330" fg:w="8"/><text x="99.2820%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.60%)</title><rect x="99.0320%" y="1333" width="0.5957%" height="15" fill="rgb(231,203,46)" fg:x="1330" fg:w="8"/><text x="99.2820%" y="1343.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8 samples, 0.60%)</title><rect x="99.0320%" y="1317" width="0.5957%" height="15" fill="rgb(237,142,3)" fg:x="1330" fg:w="8"/><text x="99.2820%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.60%)</title><rect x="99.0320%" y="1301" width="0.5957%" height="15" fill="rgb(241,107,1)" fg:x="1330" fg:w="8"/><text x="99.2820%" y="1311.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8 samples, 0.60%)</title><rect x="99.0320%" y="1285" width="0.5957%" height="15" fill="rgb(229,83,13)" fg:x="1330" fg:w="8"/><text x="99.2820%" y="1295.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (8 samples, 0.60%)</title><rect x="99.0320%" y="1269" width="0.5957%" height="15" fill="rgb(241,91,40)" fg:x="1330" fg:w="8"/><text x="99.2820%" y="1279.50"></text></g><g><title>demoparser::main::{{closure}} (8 samples, 0.60%)</title><rect x="99.0320%" y="1253" width="0.5957%" height="15" fill="rgb(225,3,45)" fg:x="1330" fg:w="8"/><text x="99.2820%" y="1263.50"></text></g><g><title>demoparser::parse_demo (8 samples, 0.60%)</title><rect x="99.0320%" y="1237" width="0.5957%" height="15" fill="rgb(244,223,14)" fg:x="1330" fg:w="8"/><text x="99.2820%" y="1247.50"></text></g><g><title>demoparser::parsing::parser::Parser::start_parsing (7 samples, 0.52%)</title><rect x="99.1065%" y="1221" width="0.5212%" height="15" fill="rgb(224,124,37)" fg:x="1331" fg:w="7"/><text x="99.3565%" y="1231.50"></text></g><g><title>std::thread::JoinHandle&lt;T&gt;::join (6 samples, 0.45%)</title><rect x="99.1809%" y="1205" width="0.4468%" height="15" fill="rgb(251,171,30)" fg:x="1332" fg:w="6"/><text x="99.4309%" y="1215.50"></text></g><g><title>std::thread::JoinInner&lt;T&gt;::join (6 samples, 0.45%)</title><rect x="99.1809%" y="1189" width="0.4468%" height="15" fill="rgb(236,46,54)" fg:x="1332" fg:w="6"/><text x="99.4309%" y="1199.50"></text></g><g><title>std::sys::unix::thread::Thread::join (6 samples, 0.45%)</title><rect x="99.1809%" y="1173" width="0.4468%" height="15" fill="rgb(245,213,5)" fg:x="1332" fg:w="6"/><text x="99.4309%" y="1183.50"></text></g><g><title>__pthread_clockjoin_ex (6 samples, 0.45%)</title><rect x="99.1809%" y="1157" width="0.4468%" height="15" fill="rgb(230,144,27)" fg:x="1332" fg:w="6"/><text x="99.4309%" y="1167.50"></text></g><g><title>__GI___futex_abstimed_wait_cancelable64 (6 samples, 0.45%)</title><rect x="99.1809%" y="1141" width="0.4468%" height="15" fill="rgb(220,86,6)" fg:x="1332" fg:w="6"/><text x="99.4309%" y="1151.50"></text></g><g><title>__futex_abstimed_wait_common (6 samples, 0.45%)</title><rect x="99.1809%" y="1125" width="0.4468%" height="15" fill="rgb(240,20,13)" fg:x="1332" fg:w="6"/><text x="99.4309%" y="1135.50"></text></g><g><title>__futex_abstimed_wait_common64 (6 samples, 0.45%)</title><rect x="99.1809%" y="1109" width="0.4468%" height="15" fill="rgb(217,89,34)" fg:x="1332" fg:w="6"/><text x="99.4309%" y="1119.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="99.1809%" y="1093" width="0.4468%" height="15" fill="rgb(229,13,5)" fg:x="1332" fg:w="6"/><text x="99.4309%" y="1103.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="99.1809%" y="1077" width="0.4468%" height="15" fill="rgb(244,67,35)" fg:x="1332" fg:w="6"/><text x="99.4309%" y="1087.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="99.1809%" y="1061" width="0.4468%" height="15" fill="rgb(221,40,2)" fg:x="1332" fg:w="6"/><text x="99.4309%" y="1071.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="99.1809%" y="1045" width="0.4468%" height="15" fill="rgb(237,157,21)" fg:x="1332" fg:w="6"/><text x="99.4309%" y="1055.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="99.1809%" y="1029" width="0.4468%" height="15" fill="rgb(222,94,11)" fg:x="1332" fg:w="6"/><text x="99.4309%" y="1039.50"></text></g><g><title>[unknown] (6 samples, 0.45%)</title><rect x="99.1809%" y="1013" width="0.4468%" height="15" fill="rgb(249,113,6)" fg:x="1332" fg:w="6"/><text x="99.4309%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.5532%" y="997" width="0.0745%" height="15" fill="rgb(238,137,36)" fg:x="1337" fg:w="1"/><text x="99.8032%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.5532%" y="981" width="0.0745%" height="15" fill="rgb(210,102,26)" fg:x="1337" fg:w="1"/><text x="99.8032%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.5532%" y="965" width="0.0745%" height="15" fill="rgb(218,30,30)" fg:x="1337" fg:w="1"/><text x="99.8032%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.5532%" y="949" width="0.0745%" height="15" fill="rgb(214,67,26)" fg:x="1337" fg:w="1"/><text x="99.8032%" y="959.50"></text></g><g><title>all (1,343 samples, 100%)</title><rect x="0.0000%" y="1701" width="100.0000%" height="15" fill="rgb(251,9,53)" fg:x="0" fg:w="1343"/><text x="0.2500%" y="1711.50"></text></g><g><title>perf-exec (5 samples, 0.37%)</title><rect x="99.6277%" y="1685" width="0.3723%" height="15" fill="rgb(228,204,25)" fg:x="1338" fg:w="5"/><text x="99.8777%" y="1695.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="99.6277%" y="1669" width="0.3723%" height="15" fill="rgb(207,153,8)" fg:x="1338" fg:w="5"/><text x="99.8777%" y="1679.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="99.6277%" y="1653" width="0.3723%" height="15" fill="rgb(242,9,16)" fg:x="1338" fg:w="5"/><text x="99.8777%" y="1663.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="99.6277%" y="1637" width="0.3723%" height="15" fill="rgb(217,211,10)" fg:x="1338" fg:w="5"/><text x="99.8777%" y="1647.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="99.6277%" y="1621" width="0.3723%" height="15" fill="rgb(219,228,52)" fg:x="1338" fg:w="5"/><text x="99.8777%" y="1631.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="99.6277%" y="1605" width="0.3723%" height="15" fill="rgb(231,92,29)" fg:x="1338" fg:w="5"/><text x="99.8777%" y="1615.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="99.6277%" y="1589" width="0.3723%" height="15" fill="rgb(232,8,23)" fg:x="1338" fg:w="5"/><text x="99.8777%" y="1599.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="99.6277%" y="1573" width="0.3723%" height="15" fill="rgb(216,211,34)" fg:x="1338" fg:w="5"/><text x="99.8777%" y="1583.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="99.6277%" y="1557" width="0.3723%" height="15" fill="rgb(236,151,0)" fg:x="1338" fg:w="5"/><text x="99.8777%" y="1567.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="99.6277%" y="1541" width="0.3723%" height="15" fill="rgb(209,168,3)" fg:x="1338" fg:w="5"/><text x="99.8777%" y="1551.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="99.6277%" y="1525" width="0.3723%" height="15" fill="rgb(208,129,28)" fg:x="1338" fg:w="5"/><text x="99.8777%" y="1535.50"></text></g><g><title>[unknown] (5 samples, 0.37%)</title><rect x="99.6277%" y="1509" width="0.3723%" height="15" fill="rgb(229,78,22)" fg:x="1338" fg:w="5"/><text x="99.8777%" y="1519.50"></text></g></svg></svg>