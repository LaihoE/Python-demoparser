<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1398" onload="init(evt)" viewBox="0 0 1200 1398" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1398" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1381.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1381.00"> </text><svg id="frames" x="10" width="1180" total_samples="852"><g><title>[unknown] (31 samples, 3.64%)</title><rect x="0.0000%" y="1317" width="3.6385%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="31"/><text x="0.2500%" y="1327.50">[unk..</text></g><g><title>[unknown] (21 samples, 2.46%)</title><rect x="1.1737%" y="1301" width="2.4648%" height="15" fill="rgb(217,0,24)" fg:x="10" fg:w="21"/><text x="1.4237%" y="1311.50">[u..</text></g><g><title>[unknown] (21 samples, 2.46%)</title><rect x="1.1737%" y="1285" width="2.4648%" height="15" fill="rgb(221,193,54)" fg:x="10" fg:w="21"/><text x="1.4237%" y="1295.50">[u..</text></g><g><title>[unknown] (21 samples, 2.46%)</title><rect x="1.1737%" y="1269" width="2.4648%" height="15" fill="rgb(248,212,6)" fg:x="10" fg:w="21"/><text x="1.4237%" y="1279.50">[u..</text></g><g><title>[unknown] (21 samples, 2.46%)</title><rect x="1.1737%" y="1253" width="2.4648%" height="15" fill="rgb(208,68,35)" fg:x="10" fg:w="21"/><text x="1.4237%" y="1263.50">[u..</text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="2.9343%" y="1237" width="0.7042%" height="15" fill="rgb(232,128,0)" fg:x="25" fg:w="6"/><text x="3.1843%" y="1247.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="2.9343%" y="1221" width="0.7042%" height="15" fill="rgb(207,160,47)" fg:x="25" fg:w="6"/><text x="3.1843%" y="1231.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="2.9343%" y="1205" width="0.7042%" height="15" fill="rgb(228,23,34)" fg:x="25" fg:w="6"/><text x="3.1843%" y="1215.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="2.9343%" y="1189" width="0.7042%" height="15" fill="rgb(218,30,26)" fg:x="25" fg:w="6"/><text x="3.1843%" y="1199.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="2.9343%" y="1173" width="0.7042%" height="15" fill="rgb(220,122,19)" fg:x="25" fg:w="6"/><text x="3.1843%" y="1183.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="2.9343%" y="1157" width="0.7042%" height="15" fill="rgb(250,228,42)" fg:x="25" fg:w="6"/><text x="3.1843%" y="1167.50"></text></g><g><title>[unknown] (5 samples, 0.59%)</title><rect x="3.0516%" y="1141" width="0.5869%" height="15" fill="rgb(240,193,28)" fg:x="26" fg:w="5"/><text x="3.3016%" y="1151.50"></text></g><g><title>[unknown] (4 samples, 0.47%)</title><rect x="3.1690%" y="1125" width="0.4695%" height="15" fill="rgb(216,20,37)" fg:x="27" fg:w="4"/><text x="3.4190%" y="1135.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="3.4038%" y="1109" width="0.2347%" height="15" fill="rgb(206,188,39)" fg:x="29" fg:w="2"/><text x="3.6538%" y="1119.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="3.4038%" y="1093" width="0.2347%" height="15" fill="rgb(217,207,13)" fg:x="29" fg:w="2"/><text x="3.6538%" y="1103.50"></text></g><g><title>__GI___sigaltstack (1 samples, 0.12%)</title><rect x="3.6385%" y="1237" width="0.1174%" height="15" fill="rgb(231,73,38)" fg:x="31" fg:w="1"/><text x="3.8885%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="3.6385%" y="1221" width="0.1174%" height="15" fill="rgb(225,20,46)" fg:x="31" fg:w="1"/><text x="3.8885%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="3.6385%" y="1205" width="0.1174%" height="15" fill="rgb(210,31,41)" fg:x="31" fg:w="1"/><text x="3.8885%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="3.6385%" y="1189" width="0.1174%" height="15" fill="rgb(221,200,47)" fg:x="31" fg:w="1"/><text x="3.8885%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="3.6385%" y="1173" width="0.1174%" height="15" fill="rgb(226,26,5)" fg:x="31" fg:w="1"/><text x="3.8885%" y="1183.50"></text></g><g><title>__GI___mmap64 (2 samples, 0.23%)</title><rect x="3.7559%" y="1205" width="0.2347%" height="15" fill="rgb(249,33,26)" fg:x="32" fg:w="2"/><text x="4.0059%" y="1215.50"></text></g><g><title>__GI___mmap64 (2 samples, 0.23%)</title><rect x="3.7559%" y="1189" width="0.2347%" height="15" fill="rgb(235,183,28)" fg:x="32" fg:w="2"/><text x="4.0059%" y="1199.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="3.7559%" y="1173" width="0.2347%" height="15" fill="rgb(221,5,38)" fg:x="32" fg:w="2"/><text x="4.0059%" y="1183.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="3.7559%" y="1157" width="0.2347%" height="15" fill="rgb(247,18,42)" fg:x="32" fg:w="2"/><text x="4.0059%" y="1167.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="3.7559%" y="1141" width="0.2347%" height="15" fill="rgb(241,131,45)" fg:x="32" fg:w="2"/><text x="4.0059%" y="1151.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="3.7559%" y="1125" width="0.2347%" height="15" fill="rgb(249,31,29)" fg:x="32" fg:w="2"/><text x="4.0059%" y="1135.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="3.7559%" y="1109" width="0.2347%" height="15" fill="rgb(225,111,53)" fg:x="32" fg:w="2"/><text x="4.0059%" y="1119.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="3.7559%" y="1093" width="0.2347%" height="15" fill="rgb(238,160,17)" fg:x="32" fg:w="2"/><text x="4.0059%" y="1103.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="3.7559%" y="1077" width="0.2347%" height="15" fill="rgb(214,148,48)" fg:x="32" fg:w="2"/><text x="4.0059%" y="1087.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="3.7559%" y="1061" width="0.2347%" height="15" fill="rgb(232,36,49)" fg:x="32" fg:w="2"/><text x="4.0059%" y="1071.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="3.7559%" y="1045" width="0.2347%" height="15" fill="rgb(209,103,24)" fg:x="32" fg:w="2"/><text x="4.0059%" y="1055.50"></text></g><g><title>__clone3 (4 samples, 0.47%)</title><rect x="3.6385%" y="1317" width="0.4695%" height="15" fill="rgb(229,88,8)" fg:x="31" fg:w="4"/><text x="3.8885%" y="1327.50"></text></g><g><title>start_thread (4 samples, 0.47%)</title><rect x="3.6385%" y="1301" width="0.4695%" height="15" fill="rgb(213,181,19)" fg:x="31" fg:w="4"/><text x="3.8885%" y="1311.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (4 samples, 0.47%)</title><rect x="3.6385%" y="1285" width="0.4695%" height="15" fill="rgb(254,191,54)" fg:x="31" fg:w="4"/><text x="3.8885%" y="1295.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (4 samples, 0.47%)</title><rect x="3.6385%" y="1269" width="0.4695%" height="15" fill="rgb(241,83,37)" fg:x="31" fg:w="4"/><text x="3.8885%" y="1279.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (4 samples, 0.47%)</title><rect x="3.6385%" y="1253" width="0.4695%" height="15" fill="rgb(233,36,39)" fg:x="31" fg:w="4"/><text x="3.8885%" y="1263.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (3 samples, 0.35%)</title><rect x="3.7559%" y="1237" width="0.3521%" height="15" fill="rgb(226,3,54)" fg:x="32" fg:w="3"/><text x="4.0059%" y="1247.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (3 samples, 0.35%)</title><rect x="3.7559%" y="1221" width="0.3521%" height="15" fill="rgb(245,192,40)" fg:x="32" fg:w="3"/><text x="4.0059%" y="1231.50"></text></g><g><title>__GI___mprotect (1 samples, 0.12%)</title><rect x="3.9906%" y="1205" width="0.1174%" height="15" fill="rgb(238,167,29)" fg:x="34" fg:w="1"/><text x="4.2406%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="3.9906%" y="1189" width="0.1174%" height="15" fill="rgb(232,182,51)" fg:x="34" fg:w="1"/><text x="4.2406%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="3.9906%" y="1173" width="0.1174%" height="15" fill="rgb(231,60,39)" fg:x="34" fg:w="1"/><text x="4.2406%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="3.9906%" y="1157" width="0.1174%" height="15" fill="rgb(208,69,12)" fg:x="34" fg:w="1"/><text x="4.2406%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="3.9906%" y="1141" width="0.1174%" height="15" fill="rgb(235,93,37)" fg:x="34" fg:w="1"/><text x="4.2406%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="3.9906%" y="1125" width="0.1174%" height="15" fill="rgb(213,116,39)" fg:x="34" fg:w="1"/><text x="4.2406%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="3.9906%" y="1109" width="0.1174%" height="15" fill="rgb(222,207,29)" fg:x="34" fg:w="1"/><text x="4.2406%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="3.9906%" y="1093" width="0.1174%" height="15" fill="rgb(206,96,30)" fg:x="34" fg:w="1"/><text x="4.2406%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="3.9906%" y="1077" width="0.1174%" height="15" fill="rgb(218,138,4)" fg:x="34" fg:w="1"/><text x="4.2406%" y="1087.50"></text></g><g><title>__GI_exit (25 samples, 2.93%)</title><rect x="4.1080%" y="1269" width="2.9343%" height="15" fill="rgb(250,191,14)" fg:x="35" fg:w="25"/><text x="4.3580%" y="1279.50">__..</text></g><g><title>__run_exit_handlers (25 samples, 2.93%)</title><rect x="4.1080%" y="1253" width="2.9343%" height="15" fill="rgb(239,60,40)" fg:x="35" fg:w="25"/><text x="4.3580%" y="1263.50">__..</text></g><g><title>mi_process_done (25 samples, 2.93%)</title><rect x="4.1080%" y="1237" width="2.9343%" height="15" fill="rgb(206,27,48)" fg:x="35" fg:w="25"/><text x="4.3580%" y="1247.50">mi..</text></g><g><title>mi_process_done (25 samples, 2.93%)</title><rect x="4.1080%" y="1221" width="2.9343%" height="15" fill="rgb(225,35,8)" fg:x="35" fg:w="25"/><text x="4.3580%" y="1231.50">mi..</text></g><g><title>mi_heap_collect_ex (25 samples, 2.93%)</title><rect x="4.1080%" y="1205" width="2.9343%" height="15" fill="rgb(250,213,24)" fg:x="35" fg:w="25"/><text x="4.3580%" y="1215.50">mi..</text></g><g><title>mi_segment_cache_purge (25 samples, 2.93%)</title><rect x="4.1080%" y="1189" width="2.9343%" height="15" fill="rgb(247,123,22)" fg:x="35" fg:w="25"/><text x="4.3580%" y="1199.50">mi..</text></g><g><title>mi_commit_mask_decommit (25 samples, 2.93%)</title><rect x="4.1080%" y="1173" width="2.9343%" height="15" fill="rgb(231,138,38)" fg:x="35" fg:w="25"/><text x="4.3580%" y="1183.50">mi..</text></g><g><title>_mi_os_decommit (25 samples, 2.93%)</title><rect x="4.1080%" y="1157" width="2.9343%" height="15" fill="rgb(231,145,46)" fg:x="35" fg:w="25"/><text x="4.3580%" y="1167.50">_m..</text></g><g><title>mi_os_commitx (25 samples, 2.93%)</title><rect x="4.1080%" y="1141" width="2.9343%" height="15" fill="rgb(251,118,11)" fg:x="35" fg:w="25"/><text x="4.3580%" y="1151.50">mi..</text></g><g><title>__GI_madvise (25 samples, 2.93%)</title><rect x="4.1080%" y="1125" width="2.9343%" height="15" fill="rgb(217,147,25)" fg:x="35" fg:w="25"/><text x="4.3580%" y="1135.50">__..</text></g><g><title>[unknown] (25 samples, 2.93%)</title><rect x="4.1080%" y="1109" width="2.9343%" height="15" fill="rgb(247,81,37)" fg:x="35" fg:w="25"/><text x="4.3580%" y="1119.50">[u..</text></g><g><title>[unknown] (25 samples, 2.93%)</title><rect x="4.1080%" y="1093" width="2.9343%" height="15" fill="rgb(209,12,38)" fg:x="35" fg:w="25"/><text x="4.3580%" y="1103.50">[u..</text></g><g><title>[unknown] (25 samples, 2.93%)</title><rect x="4.1080%" y="1077" width="2.9343%" height="15" fill="rgb(227,1,9)" fg:x="35" fg:w="25"/><text x="4.3580%" y="1087.50">[u..</text></g><g><title>[unknown] (25 samples, 2.93%)</title><rect x="4.1080%" y="1061" width="2.9343%" height="15" fill="rgb(248,47,43)" fg:x="35" fg:w="25"/><text x="4.3580%" y="1071.50">[u..</text></g><g><title>[unknown] (25 samples, 2.93%)</title><rect x="4.1080%" y="1045" width="2.9343%" height="15" fill="rgb(221,10,30)" fg:x="35" fg:w="25"/><text x="4.3580%" y="1055.50">[u..</text></g><g><title>[unknown] (25 samples, 2.93%)</title><rect x="4.1080%" y="1029" width="2.9343%" height="15" fill="rgb(210,229,1)" fg:x="35" fg:w="25"/><text x="4.3580%" y="1039.50">[u..</text></g><g><title>[unknown] (25 samples, 2.93%)</title><rect x="4.1080%" y="1013" width="2.9343%" height="15" fill="rgb(222,148,37)" fg:x="35" fg:w="25"/><text x="4.3580%" y="1023.50">[u..</text></g><g><title>[unknown] (24 samples, 2.82%)</title><rect x="4.2254%" y="997" width="2.8169%" height="15" fill="rgb(234,67,33)" fg:x="36" fg:w="24"/><text x="4.4754%" y="1007.50">[u..</text></g><g><title>[unknown] (23 samples, 2.70%)</title><rect x="4.3427%" y="981" width="2.6995%" height="15" fill="rgb(247,98,35)" fg:x="37" fg:w="23"/><text x="4.5927%" y="991.50">[u..</text></g><g><title>[unknown] (14 samples, 1.64%)</title><rect x="5.3991%" y="965" width="1.6432%" height="15" fill="rgb(247,138,52)" fg:x="46" fg:w="14"/><text x="5.6491%" y="975.50"></text></g><g><title>[unknown] (12 samples, 1.41%)</title><rect x="5.6338%" y="949" width="1.4085%" height="15" fill="rgb(213,79,30)" fg:x="48" fg:w="12"/><text x="5.8838%" y="959.50"></text></g><g><title>[unknown] (11 samples, 1.29%)</title><rect x="5.7512%" y="933" width="1.2911%" height="15" fill="rgb(246,177,23)" fg:x="49" fg:w="11"/><text x="6.0012%" y="943.50"></text></g><g><title>[unknown] (7 samples, 0.82%)</title><rect x="6.2207%" y="917" width="0.8216%" height="15" fill="rgb(230,62,27)" fg:x="53" fg:w="7"/><text x="6.4707%" y="927.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="6.3380%" y="901" width="0.7042%" height="15" fill="rgb(216,154,8)" fg:x="54" fg:w="6"/><text x="6.5880%" y="911.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="6.3380%" y="885" width="0.7042%" height="15" fill="rgb(244,35,45)" fg:x="54" fg:w="6"/><text x="6.5880%" y="895.50"></text></g><g><title>[unknown] (5 samples, 0.59%)</title><rect x="6.4554%" y="869" width="0.5869%" height="15" fill="rgb(251,115,12)" fg:x="55" fg:w="5"/><text x="6.7054%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="6.9249%" y="853" width="0.1174%" height="15" fill="rgb(240,54,50)" fg:x="59" fg:w="1"/><text x="7.1749%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="6.9249%" y="837" width="0.1174%" height="15" fill="rgb(233,84,52)" fg:x="59" fg:w="1"/><text x="7.1749%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="6.9249%" y="821" width="0.1174%" height="15" fill="rgb(207,117,47)" fg:x="59" fg:w="1"/><text x="7.1749%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="6.9249%" y="805" width="0.1174%" height="15" fill="rgb(249,43,39)" fg:x="59" fg:w="1"/><text x="7.1749%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="6.9249%" y="789" width="0.1174%" height="15" fill="rgb(209,38,44)" fg:x="59" fg:w="1"/><text x="7.1749%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser::Parser&gt; (1 samples, 0.12%)</title><rect x="7.0423%" y="869" width="0.1174%" height="15" fill="rgb(236,212,23)" fg:x="60" fg:w="1"/><text x="7.2923%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;memmap2::Mmap&gt;&gt; (1 samples, 0.12%)</title><rect x="7.0423%" y="853" width="0.1174%" height="15" fill="rgb(242,79,21)" fg:x="60" fg:w="1"/><text x="7.2923%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="7.0423%" y="837" width="0.1174%" height="15" fill="rgb(211,96,35)" fg:x="60" fg:w="1"/><text x="7.2923%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.12%)</title><rect x="7.0423%" y="821" width="0.1174%" height="15" fill="rgb(253,215,40)" fg:x="60" fg:w="1"/><text x="7.2923%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;memmap2::Mmap&gt; (1 samples, 0.12%)</title><rect x="7.0423%" y="805" width="0.1174%" height="15" fill="rgb(211,81,21)" fg:x="60" fg:w="1"/><text x="7.2923%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;memmap2::os::MmapInner&gt; (1 samples, 0.12%)</title><rect x="7.0423%" y="789" width="0.1174%" height="15" fill="rgb(208,190,38)" fg:x="60" fg:w="1"/><text x="7.2923%" y="799.50"></text></g><g><title>__GI___munmap (1 samples, 0.12%)</title><rect x="7.0423%" y="773" width="0.1174%" height="15" fill="rgb(235,213,38)" fg:x="60" fg:w="1"/><text x="7.2923%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="7.0423%" y="757" width="0.1174%" height="15" fill="rgb(237,122,38)" fg:x="60" fg:w="1"/><text x="7.2923%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="7.0423%" y="741" width="0.1174%" height="15" fill="rgb(244,218,35)" fg:x="60" fg:w="1"/><text x="7.2923%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="7.0423%" y="725" width="0.1174%" height="15" fill="rgb(240,68,47)" fg:x="60" fg:w="1"/><text x="7.2923%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="7.0423%" y="709" width="0.1174%" height="15" fill="rgb(210,16,53)" fg:x="60" fg:w="1"/><text x="7.2923%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="7.0423%" y="693" width="0.1174%" height="15" fill="rgb(235,124,12)" fg:x="60" fg:w="1"/><text x="7.2923%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="7.0423%" y="677" width="0.1174%" height="15" fill="rgb(224,169,11)" fg:x="60" fg:w="1"/><text x="7.2923%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="7.0423%" y="661" width="0.1174%" height="15" fill="rgb(250,166,2)" fg:x="60" fg:w="1"/><text x="7.2923%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="7.0423%" y="645" width="0.1174%" height="15" fill="rgb(242,216,29)" fg:x="60" fg:w="1"/><text x="7.2923%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="7.0423%" y="629" width="0.1174%" height="15" fill="rgb(230,116,27)" fg:x="60" fg:w="1"/><text x="7.2923%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="7.0423%" y="613" width="0.1174%" height="15" fill="rgb(228,99,48)" fg:x="60" fg:w="1"/><text x="7.2923%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="7.0423%" y="597" width="0.1174%" height="15" fill="rgb(253,11,6)" fg:x="60" fg:w="1"/><text x="7.2923%" y="607.50"></text></g><g><title>demoparser::parsing::cache::cache_reader::ReadCache::get_cache_if_exists (1 samples, 0.12%)</title><rect x="7.1596%" y="853" width="0.1174%" height="15" fill="rgb(247,143,39)" fg:x="61" fg:w="1"/><text x="7.4096%" y="863.50"></text></g><g><title>demoparser::parsing::cache::cache_reader::ReadCache::new (1 samples, 0.12%)</title><rect x="7.1596%" y="837" width="0.1174%" height="15" fill="rgb(236,97,10)" fg:x="61" fg:w="1"/><text x="7.4096%" y="847.50"></text></g><g><title>zip::read::&lt;impl zip::read::zip_archive::ZipArchive&lt;R&gt;&gt;::new (1 samples, 0.12%)</title><rect x="7.1596%" y="821" width="0.1174%" height="15" fill="rgb(233,208,19)" fg:x="61" fg:w="1"/><text x="7.4096%" y="831.50"></text></g><g><title>zip::read::central_header_to_zip_file (1 samples, 0.12%)</title><rect x="7.1596%" y="805" width="0.1174%" height="15" fill="rgb(216,164,2)" fg:x="61" fg:w="1"/><text x="7.4096%" y="815.50"></text></g><g><title>byteorder::io::ReadBytesExt::read_u16 (1 samples, 0.12%)</title><rect x="7.1596%" y="789" width="0.1174%" height="15" fill="rgb(220,129,5)" fg:x="61" fg:w="1"/><text x="7.4096%" y="799.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.12%)</title><rect x="7.1596%" y="773" width="0.1174%" height="15" fill="rgb(242,17,10)" fg:x="61" fg:w="1"/><text x="7.4096%" y="783.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.12%)</title><rect x="7.1596%" y="757" width="0.1174%" height="15" fill="rgb(242,107,0)" fg:x="61" fg:w="1"/><text x="7.4096%" y="767.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="7.1596%" y="741" width="0.1174%" height="15" fill="rgb(251,28,31)" fg:x="61" fg:w="1"/><text x="7.4096%" y="751.50"></text></g><g><title>std::sys::unix::fs::File::read (1 samples, 0.12%)</title><rect x="7.1596%" y="725" width="0.1174%" height="15" fill="rgb(233,223,10)" fg:x="61" fg:w="1"/><text x="7.4096%" y="735.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (1 samples, 0.12%)</title><rect x="7.1596%" y="709" width="0.1174%" height="15" fill="rgb(215,21,27)" fg:x="61" fg:w="1"/><text x="7.4096%" y="719.50"></text></g><g><title>__GI___libc_read (1 samples, 0.12%)</title><rect x="7.1596%" y="693" width="0.1174%" height="15" fill="rgb(232,23,21)" fg:x="61" fg:w="1"/><text x="7.4096%" y="703.50"></text></g><g><title>__GI___libc_read (1 samples, 0.12%)</title><rect x="7.1596%" y="677" width="0.1174%" height="15" fill="rgb(244,5,23)" fg:x="61" fg:w="1"/><text x="7.4096%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="7.1596%" y="661" width="0.1174%" height="15" fill="rgb(226,81,46)" fg:x="61" fg:w="1"/><text x="7.4096%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="7.1596%" y="645" width="0.1174%" height="15" fill="rgb(247,70,30)" fg:x="61" fg:w="1"/><text x="7.4096%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="7.1596%" y="629" width="0.1174%" height="15" fill="rgb(212,68,19)" fg:x="61" fg:w="1"/><text x="7.4096%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="7.1596%" y="613" width="0.1174%" height="15" fill="rgb(240,187,13)" fg:x="61" fg:w="1"/><text x="7.4096%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="7.1596%" y="597" width="0.1174%" height="15" fill="rgb(223,113,26)" fg:x="61" fg:w="1"/><text x="7.4096%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="7.1596%" y="581" width="0.1174%" height="15" fill="rgb(206,192,2)" fg:x="61" fg:w="1"/><text x="7.4096%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="7.1596%" y="565" width="0.1174%" height="15" fill="rgb(241,108,4)" fg:x="61" fg:w="1"/><text x="7.4096%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="7.1596%" y="549" width="0.1174%" height="15" fill="rgb(247,173,49)" fg:x="61" fg:w="1"/><text x="7.4096%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="7.1596%" y="533" width="0.1174%" height="15" fill="rgb(224,114,35)" fg:x="61" fg:w="1"/><text x="7.4096%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="7.1596%" y="517" width="0.1174%" height="15" fill="rgb(245,159,27)" fg:x="61" fg:w="1"/><text x="7.4096%" y="527.50"></text></g><g><title>_mi_stat_decrease (1 samples, 0.12%)</title><rect x="7.2770%" y="757" width="0.1174%" height="15" fill="rgb(245,172,44)" fg:x="62" fg:w="1"/><text x="7.5270%" y="767.50"></text></g><g><title>mi_stat_update (1 samples, 0.12%)</title><rect x="7.2770%" y="741" width="0.1174%" height="15" fill="rgb(236,23,11)" fg:x="62" fg:w="1"/><text x="7.5270%" y="751.50"></text></g><g><title>_mi_segment_page_free (3 samples, 0.35%)</title><rect x="7.2770%" y="789" width="0.3521%" height="15" fill="rgb(205,117,38)" fg:x="62" fg:w="3"/><text x="7.5270%" y="799.50"></text></g><g><title>mi_segment_page_clear (3 samples, 0.35%)</title><rect x="7.2770%" y="773" width="0.3521%" height="15" fill="rgb(237,72,25)" fg:x="62" fg:w="3"/><text x="7.5270%" y="783.50"></text></g><g><title>mi_segment_span_free_coalesce (2 samples, 0.23%)</title><rect x="7.3944%" y="757" width="0.2347%" height="15" fill="rgb(244,70,9)" fg:x="63" fg:w="2"/><text x="7.6444%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::parser::JobResult&gt;&gt; (22 samples, 2.58%)</title><rect x="7.2770%" y="837" width="2.5822%" height="15" fill="rgb(217,125,39)" fg:x="62" fg:w="22"/><text x="7.5270%" y="847.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 2.58%)</title><rect x="7.2770%" y="821" width="2.5822%" height="15" fill="rgb(235,36,10)" fg:x="62" fg:w="22"/><text x="7.5270%" y="831.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::parser::JobResult]&gt; (22 samples, 2.58%)</title><rect x="7.2770%" y="805" width="2.5822%" height="15" fill="rgb(251,123,47)" fg:x="62" fg:w="22"/><text x="7.5270%" y="815.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser::JobResult&gt; (19 samples, 2.23%)</title><rect x="7.6291%" y="789" width="2.2300%" height="15" fill="rgb(221,13,13)" fg:x="65" fg:w="19"/><text x="7.8791%" y="799.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::entities::PacketEntsOutput&gt; (19 samples, 2.23%)</title><rect x="7.6291%" y="773" width="2.2300%" height="15" fill="rgb(238,131,9)" fg:x="65" fg:w="19"/><text x="7.8791%" y="783.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::demo_parsing::entities::SingleEntOutput&gt;&gt; (19 samples, 2.23%)</title><rect x="7.6291%" y="757" width="2.2300%" height="15" fill="rgb(211,50,8)" fg:x="65" fg:w="19"/><text x="7.8791%" y="767.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 2.23%)</title><rect x="7.6291%" y="741" width="2.2300%" height="15" fill="rgb(245,182,24)" fg:x="65" fg:w="19"/><text x="7.8791%" y="751.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::demo_parsing::entities::SingleEntOutput]&gt; (19 samples, 2.23%)</title><rect x="7.6291%" y="725" width="2.2300%" height="15" fill="rgb(242,14,37)" fg:x="65" fg:w="19"/><text x="7.8791%" y="735.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::entities::SingleEntOutput&gt; (19 samples, 2.23%)</title><rect x="7.6291%" y="709" width="2.2300%" height="15" fill="rgb(246,228,12)" fg:x="65" fg:w="19"/><text x="7.8791%" y="719.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::variants::PropData&gt; (19 samples, 2.23%)</title><rect x="7.6291%" y="693" width="2.2300%" height="15" fill="rgb(213,55,15)" fg:x="65" fg:w="19"/><text x="7.8791%" y="703.50">c..</text></g><g><title>mi_segment_span_free (1 samples, 0.12%)</title><rect x="9.8592%" y="725" width="0.1174%" height="15" fill="rgb(209,9,3)" fg:x="84" fg:w="1"/><text x="10.1092%" y="735.50"></text></g><g><title>mi_segment_perhaps_decommit (1 samples, 0.12%)</title><rect x="9.8592%" y="709" width="0.1174%" height="15" fill="rgb(230,59,30)" fg:x="84" fg:w="1"/><text x="10.1092%" y="719.50"></text></g><g><title>mi_segment_commit_mask (1 samples, 0.12%)</title><rect x="9.8592%" y="693" width="0.1174%" height="15" fill="rgb(209,121,21)" fg:x="84" fg:w="1"/><text x="10.1092%" y="703.50"></text></g><g><title>_mi_segment_page_free (2 samples, 0.23%)</title><rect x="9.8592%" y="773" width="0.2347%" height="15" fill="rgb(220,109,13)" fg:x="84" fg:w="2"/><text x="10.1092%" y="783.50"></text></g><g><title>mi_segment_page_clear (2 samples, 0.23%)</title><rect x="9.8592%" y="757" width="0.2347%" height="15" fill="rgb(232,18,1)" fg:x="84" fg:w="2"/><text x="10.1092%" y="767.50"></text></g><g><title>mi_segment_span_free_coalesce (2 samples, 0.23%)</title><rect x="9.8592%" y="741" width="0.2347%" height="15" fill="rgb(215,41,42)" fg:x="84" fg:w="2"/><text x="10.1092%" y="751.50"></text></g><g><title>mi_slice_index (1 samples, 0.12%)</title><rect x="9.9765%" y="725" width="0.1174%" height="15" fill="rgb(224,123,36)" fg:x="85" fg:w="1"/><text x="10.2265%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::parser::JobResult&gt;&gt; (21 samples, 2.46%)</title><rect x="9.8592%" y="821" width="2.4648%" height="15" fill="rgb(240,125,3)" fg:x="84" fg:w="21"/><text x="10.1092%" y="831.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 2.46%)</title><rect x="9.8592%" y="805" width="2.4648%" height="15" fill="rgb(205,98,50)" fg:x="84" fg:w="21"/><text x="10.1092%" y="815.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::parser::JobResult]&gt; (21 samples, 2.46%)</title><rect x="9.8592%" y="789" width="2.4648%" height="15" fill="rgb(205,185,37)" fg:x="84" fg:w="21"/><text x="10.1092%" y="799.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser::JobResult&gt; (19 samples, 2.23%)</title><rect x="10.0939%" y="773" width="2.2300%" height="15" fill="rgb(238,207,15)" fg:x="86" fg:w="19"/><text x="10.3439%" y="783.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::entities::PacketEntsOutput&gt; (19 samples, 2.23%)</title><rect x="10.0939%" y="757" width="2.2300%" height="15" fill="rgb(213,199,42)" fg:x="86" fg:w="19"/><text x="10.3439%" y="767.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::demo_parsing::entities::SingleEntOutput&gt;&gt; (19 samples, 2.23%)</title><rect x="10.0939%" y="741" width="2.2300%" height="15" fill="rgb(235,201,11)" fg:x="86" fg:w="19"/><text x="10.3439%" y="751.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 2.23%)</title><rect x="10.0939%" y="725" width="2.2300%" height="15" fill="rgb(207,46,11)" fg:x="86" fg:w="19"/><text x="10.3439%" y="735.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::demo_parsing::entities::SingleEntOutput]&gt; (19 samples, 2.23%)</title><rect x="10.0939%" y="709" width="2.2300%" height="15" fill="rgb(241,35,35)" fg:x="86" fg:w="19"/><text x="10.3439%" y="719.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::entities::SingleEntOutput&gt; (19 samples, 2.23%)</title><rect x="10.0939%" y="693" width="2.2300%" height="15" fill="rgb(243,32,47)" fg:x="86" fg:w="19"/><text x="10.3439%" y="703.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::variants::PropData&gt; (19 samples, 2.23%)</title><rect x="10.0939%" y="677" width="2.2300%" height="15" fill="rgb(247,202,23)" fg:x="86" fg:w="19"/><text x="10.3439%" y="687.50">c..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="12.7934%" y="773" width="0.2347%" height="15" fill="rgb(219,102,11)" fg:x="109" fg:w="2"/><text x="13.0434%" y="783.50"></text></g><g><title>demoparser::parsing::create_output::&lt;impl demoparser::parsing::parser::Parser&gt;::match_int_other (173 samples, 20.31%)</title><rect x="13.0282%" y="773" width="20.3052%" height="15" fill="rgb(243,110,44)" fg:x="111" fg:w="173"/><text x="13.2782%" y="783.50">demoparser::parsing::create_outp..</text></g><g><title>[unknown] (5 samples, 0.59%)</title><rect x="32.7465%" y="757" width="0.5869%" height="15" fill="rgb(222,74,54)" fg:x="279" fg:w="5"/><text x="32.9965%" y="767.50"></text></g><g><title>[unknown] (5 samples, 0.59%)</title><rect x="32.7465%" y="741" width="0.5869%" height="15" fill="rgb(216,99,12)" fg:x="279" fg:w="5"/><text x="32.9965%" y="751.50"></text></g><g><title>[unknown] (5 samples, 0.59%)</title><rect x="32.7465%" y="725" width="0.5869%" height="15" fill="rgb(226,22,26)" fg:x="279" fg:w="5"/><text x="32.9965%" y="735.50"></text></g><g><title>[unknown] (5 samples, 0.59%)</title><rect x="32.7465%" y="709" width="0.5869%" height="15" fill="rgb(217,163,10)" fg:x="279" fg:w="5"/><text x="32.9965%" y="719.50"></text></g><g><title>[unknown] (5 samples, 0.59%)</title><rect x="32.7465%" y="693" width="0.5869%" height="15" fill="rgb(213,25,53)" fg:x="279" fg:w="5"/><text x="32.9965%" y="703.50"></text></g><g><title>[unknown] (5 samples, 0.59%)</title><rect x="32.7465%" y="677" width="0.5869%" height="15" fill="rgb(252,105,26)" fg:x="279" fg:w="5"/><text x="32.9965%" y="687.50"></text></g><g><title>[unknown] (5 samples, 0.59%)</title><rect x="32.7465%" y="661" width="0.5869%" height="15" fill="rgb(220,39,43)" fg:x="279" fg:w="5"/><text x="32.9965%" y="671.50"></text></g><g><title>[unknown] (5 samples, 0.59%)</title><rect x="32.7465%" y="645" width="0.5869%" height="15" fill="rgb(229,68,48)" fg:x="279" fg:w="5"/><text x="32.9965%" y="655.50"></text></g><g><title>[unknown] (5 samples, 0.59%)</title><rect x="32.7465%" y="629" width="0.5869%" height="15" fill="rgb(252,8,32)" fg:x="279" fg:w="5"/><text x="32.9965%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="33.3333%" y="661" width="0.1174%" height="15" fill="rgb(223,20,43)" fg:x="284" fg:w="1"/><text x="33.5833%" y="671.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.12%)</title><rect x="33.3333%" y="645" width="0.1174%" height="15" fill="rgb(229,81,49)" fg:x="284" fg:w="1"/><text x="33.5833%" y="655.50"></text></g><g><title>demoparser::parsing::create_output::&lt;impl demoparser::parsing::parser::Parser&gt;::create_series_others (181 samples, 21.24%)</title><rect x="12.3239%" y="821" width="21.2441%" height="15" fill="rgb(236,28,36)" fg:x="105" fg:w="181"/><text x="12.5739%" y="831.50">demoparser::parsing::create_output..</text></g><g><title>demoparser::parsing::create_output::&lt;impl demoparser::parsing::parser::Parser&gt;::find_other_values (181 samples, 21.24%)</title><rect x="12.3239%" y="805" width="21.2441%" height="15" fill="rgb(249,185,26)" fg:x="105" fg:w="181"/><text x="12.5739%" y="815.50">demoparser::parsing::create_output..</text></g><g><title>demoparser::parsing::create_output::&lt;impl demoparser::parsing::parser::Parser&gt;::filter_jobs_by_pidx_other (181 samples, 21.24%)</title><rect x="12.3239%" y="789" width="21.2441%" height="15" fill="rgb(249,174,33)" fg:x="105" fg:w="181"/><text x="12.5739%" y="799.50">demoparser::parsing::create_output..</text></g><g><title>demoparser::parsing::players::Players::sid_to_entid (2 samples, 0.23%)</title><rect x="33.3333%" y="773" width="0.2347%" height="15" fill="rgb(233,201,37)" fg:x="284" fg:w="2"/><text x="33.5833%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.23%)</title><rect x="33.3333%" y="757" width="0.2347%" height="15" fill="rgb(221,78,26)" fg:x="284" fg:w="2"/><text x="33.5833%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.23%)</title><rect x="33.3333%" y="741" width="0.2347%" height="15" fill="rgb(250,127,30)" fg:x="284" fg:w="2"/><text x="33.5833%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.23%)</title><rect x="33.3333%" y="725" width="0.2347%" height="15" fill="rgb(230,49,44)" fg:x="284" fg:w="2"/><text x="33.5833%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.23%)</title><rect x="33.3333%" y="709" width="0.2347%" height="15" fill="rgb(229,67,23)" fg:x="284" fg:w="2"/><text x="33.5833%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.23%)</title><rect x="33.3333%" y="693" width="0.2347%" height="15" fill="rgb(249,83,47)" fg:x="284" fg:w="2"/><text x="33.5833%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.23%)</title><rect x="33.3333%" y="677" width="0.2347%" height="15" fill="rgb(215,43,3)" fg:x="284" fg:w="2"/><text x="33.5833%" y="687.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.12%)</title><rect x="33.4507%" y="661" width="0.1174%" height="15" fill="rgb(238,154,13)" fg:x="285" fg:w="1"/><text x="33.7007%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.12%)</title><rect x="33.5681%" y="661" width="0.1174%" height="15" fill="rgb(219,56,2)" fg:x="286" fg:w="1"/><text x="33.8181%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (1 samples, 0.12%)</title><rect x="33.5681%" y="645" width="0.1174%" height="15" fill="rgb(233,0,4)" fg:x="286" fg:w="1"/><text x="33.8181%" y="655.50"></text></g><g><title>core::ptr::write (1 samples, 0.12%)</title><rect x="33.5681%" y="629" width="0.1174%" height="15" fill="rgb(235,30,7)" fg:x="286" fg:w="1"/><text x="33.8181%" y="639.50"></text></g><g><title>[libc.so.6] (4 samples, 0.47%)</title><rect x="34.0376%" y="517" width="0.4695%" height="15" fill="rgb(250,79,13)" fg:x="290" fg:w="4"/><text x="34.2876%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.47%)</title><rect x="34.0376%" y="501" width="0.4695%" height="15" fill="rgb(211,146,34)" fg:x="290" fg:w="4"/><text x="34.2876%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.12%)</title><rect x="34.5070%" y="485" width="0.1174%" height="15" fill="rgb(228,22,38)" fg:x="294" fg:w="1"/><text x="34.7570%" y="495.50"></text></g><g><title>[libc.so.6] (29 samples, 3.40%)</title><rect x="34.7418%" y="357" width="3.4038%" height="15" fill="rgb(235,168,5)" fg:x="296" fg:w="29"/><text x="34.9918%" y="367.50">[li..</text></g><g><title>[unknown] (18 samples, 2.11%)</title><rect x="36.0329%" y="341" width="2.1127%" height="15" fill="rgb(221,155,16)" fg:x="307" fg:w="18"/><text x="36.2829%" y="351.50">[..</text></g><g><title>[unknown] (14 samples, 1.64%)</title><rect x="36.5023%" y="325" width="1.6432%" height="15" fill="rgb(215,215,53)" fg:x="311" fg:w="14"/><text x="36.7523%" y="335.50"></text></g><g><title>[unknown] (14 samples, 1.64%)</title><rect x="36.5023%" y="309" width="1.6432%" height="15" fill="rgb(223,4,10)" fg:x="311" fg:w="14"/><text x="36.7523%" y="319.50"></text></g><g><title>[unknown] (14 samples, 1.64%)</title><rect x="36.5023%" y="293" width="1.6432%" height="15" fill="rgb(234,103,6)" fg:x="311" fg:w="14"/><text x="36.7523%" y="303.50"></text></g><g><title>[unknown] (13 samples, 1.53%)</title><rect x="36.6197%" y="277" width="1.5258%" height="15" fill="rgb(227,97,0)" fg:x="312" fg:w="13"/><text x="36.8697%" y="287.50"></text></g><g><title>[unknown] (12 samples, 1.41%)</title><rect x="36.7371%" y="261" width="1.4085%" height="15" fill="rgb(234,150,53)" fg:x="313" fg:w="12"/><text x="36.9871%" y="271.50"></text></g><g><title>[unknown] (12 samples, 1.41%)</title><rect x="36.7371%" y="245" width="1.4085%" height="15" fill="rgb(228,201,54)" fg:x="313" fg:w="12"/><text x="36.9871%" y="255.50"></text></g><g><title>[unknown] (11 samples, 1.29%)</title><rect x="36.8545%" y="229" width="1.2911%" height="15" fill="rgb(222,22,37)" fg:x="314" fg:w="11"/><text x="37.1045%" y="239.50"></text></g><g><title>[unknown] (10 samples, 1.17%)</title><rect x="36.9718%" y="213" width="1.1737%" height="15" fill="rgb(237,53,32)" fg:x="315" fg:w="10"/><text x="37.2218%" y="223.50"></text></g><g><title>[unknown] (9 samples, 1.06%)</title><rect x="37.0892%" y="197" width="1.0563%" height="15" fill="rgb(233,25,53)" fg:x="316" fg:w="9"/><text x="37.3392%" y="207.50"></text></g><g><title>[unknown] (9 samples, 1.06%)</title><rect x="37.0892%" y="181" width="1.0563%" height="15" fill="rgb(210,40,34)" fg:x="316" fg:w="9"/><text x="37.3392%" y="191.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="37.9108%" y="165" width="0.2347%" height="15" fill="rgb(241,220,44)" fg:x="323" fg:w="2"/><text x="38.1608%" y="175.50"></text></g><g><title>mi_page_extend_free (8 samples, 0.94%)</title><rect x="38.1455%" y="293" width="0.9390%" height="15" fill="rgb(235,28,35)" fg:x="325" fg:w="8"/><text x="38.3955%" y="303.50"></text></g><g><title>mi_page_extend_free (8 samples, 0.94%)</title><rect x="38.1455%" y="277" width="0.9390%" height="15" fill="rgb(210,56,17)" fg:x="325" fg:w="8"/><text x="38.3955%" y="287.50"></text></g><g><title>mi_page_free_list_extend (8 samples, 0.94%)</title><rect x="38.1455%" y="261" width="0.9390%" height="15" fill="rgb(224,130,29)" fg:x="325" fg:w="8"/><text x="38.3955%" y="271.50"></text></g><g><title>mi_block_set_next (8 samples, 0.94%)</title><rect x="38.1455%" y="245" width="0.9390%" height="15" fill="rgb(235,212,8)" fg:x="325" fg:w="8"/><text x="38.3955%" y="255.50"></text></g><g><title>mi_block_set_nextx (8 samples, 0.94%)</title><rect x="38.1455%" y="229" width="0.9390%" height="15" fill="rgb(223,33,50)" fg:x="325" fg:w="8"/><text x="38.3955%" y="239.50"></text></g><g><title>[unknown] (8 samples, 0.94%)</title><rect x="38.1455%" y="213" width="0.9390%" height="15" fill="rgb(219,149,13)" fg:x="325" fg:w="8"/><text x="38.3955%" y="223.50"></text></g><g><title>_mi_memcpy_aligned (38 samples, 4.46%)</title><rect x="34.7418%" y="405" width="4.4601%" height="15" fill="rgb(250,156,29)" fg:x="296" fg:w="38"/><text x="34.9918%" y="415.50">_mi_m..</text></g><g><title>_mi_memcpy (38 samples, 4.46%)</title><rect x="34.7418%" y="389" width="4.4601%" height="15" fill="rgb(216,193,19)" fg:x="296" fg:w="38"/><text x="34.9918%" y="399.50">_mi_m..</text></g><g><title>memcpy (38 samples, 4.46%)</title><rect x="34.7418%" y="373" width="4.4601%" height="15" fill="rgb(216,135,14)" fg:x="296" fg:w="38"/><text x="34.9918%" y="383.50">memcpy</text></g><g><title>_mi_malloc_generic (9 samples, 1.06%)</title><rect x="38.1455%" y="357" width="1.0563%" height="15" fill="rgb(241,47,5)" fg:x="325" fg:w="9"/><text x="38.3955%" y="367.50"></text></g><g><title>mi_find_page (9 samples, 1.06%)</title><rect x="38.1455%" y="341" width="1.0563%" height="15" fill="rgb(233,42,35)" fg:x="325" fg:w="9"/><text x="38.3955%" y="351.50"></text></g><g><title>mi_find_free_page (9 samples, 1.06%)</title><rect x="38.1455%" y="325" width="1.0563%" height="15" fill="rgb(231,13,6)" fg:x="325" fg:w="9"/><text x="38.3955%" y="335.50"></text></g><g><title>mi_page_queue_find_free_ex (9 samples, 1.06%)</title><rect x="38.1455%" y="309" width="1.0563%" height="15" fill="rgb(207,181,40)" fg:x="325" fg:w="9"/><text x="38.3955%" y="319.50"></text></g><g><title>mi_page_fresh (1 samples, 0.12%)</title><rect x="39.0845%" y="293" width="0.1174%" height="15" fill="rgb(254,173,49)" fg:x="333" fg:w="1"/><text x="39.3345%" y="303.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.12%)</title><rect x="39.0845%" y="277" width="0.1174%" height="15" fill="rgb(221,1,38)" fg:x="333" fg:w="1"/><text x="39.3345%" y="287.50"></text></g><g><title>mi_page_init (1 samples, 0.12%)</title><rect x="39.0845%" y="261" width="0.1174%" height="15" fill="rgb(206,124,46)" fg:x="333" fg:w="1"/><text x="39.3345%" y="271.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.12%)</title><rect x="39.0845%" y="245" width="0.1174%" height="15" fill="rgb(249,21,11)" fg:x="333" fg:w="1"/><text x="39.3345%" y="255.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.12%)</title><rect x="39.0845%" y="229" width="0.1174%" height="15" fill="rgb(222,201,40)" fg:x="333" fg:w="1"/><text x="39.3345%" y="239.50"></text></g><g><title>mi_page_free_list_extend (1 samples, 0.12%)</title><rect x="39.0845%" y="213" width="0.1174%" height="15" fill="rgb(235,61,29)" fg:x="333" fg:w="1"/><text x="39.3345%" y="223.50"></text></g><g><title>mi_block_set_next (1 samples, 0.12%)</title><rect x="39.0845%" y="197" width="0.1174%" height="15" fill="rgb(219,207,3)" fg:x="333" fg:w="1"/><text x="39.3345%" y="207.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.12%)</title><rect x="39.0845%" y="181" width="0.1174%" height="15" fill="rgb(222,56,46)" fg:x="333" fg:w="1"/><text x="39.3345%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="39.0845%" y="165" width="0.1174%" height="15" fill="rgb(239,76,54)" fg:x="333" fg:w="1"/><text x="39.3345%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="39.2019%" y="389" width="0.1174%" height="15" fill="rgb(231,124,27)" fg:x="334" fg:w="1"/><text x="39.4519%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="39.2019%" y="373" width="0.1174%" height="15" fill="rgb(249,195,6)" fg:x="334" fg:w="1"/><text x="39.4519%" y="383.50"></text></g><g><title>_mi_page_free_collect (1 samples, 0.12%)</title><rect x="39.3192%" y="341" width="0.1174%" height="15" fill="rgb(237,174,47)" fg:x="335" fg:w="1"/><text x="39.5692%" y="351.50"></text></g><g><title>_mi_page_start (1 samples, 0.12%)</title><rect x="39.7887%" y="277" width="0.1174%" height="15" fill="rgb(206,201,31)" fg:x="339" fg:w="1"/><text x="40.0387%" y="287.50"></text></g><g><title>_mi_segment_page_start (1 samples, 0.12%)</title><rect x="39.7887%" y="261" width="0.1174%" height="15" fill="rgb(231,57,52)" fg:x="339" fg:w="1"/><text x="40.0387%" y="271.50"></text></g><g><title>mi_page_extend_free (27 samples, 3.17%)</title><rect x="39.4366%" y="325" width="3.1690%" height="15" fill="rgb(248,177,22)" fg:x="336" fg:w="27"/><text x="39.6866%" y="335.50">mi_..</text></g><g><title>mi_page_extend_free (27 samples, 3.17%)</title><rect x="39.4366%" y="309" width="3.1690%" height="15" fill="rgb(215,211,37)" fg:x="336" fg:w="27"/><text x="39.6866%" y="319.50">mi_..</text></g><g><title>mi_page_free_list_extend (27 samples, 3.17%)</title><rect x="39.4366%" y="293" width="3.1690%" height="15" fill="rgb(241,128,51)" fg:x="336" fg:w="27"/><text x="39.6866%" y="303.50">mi_..</text></g><g><title>mi_block_set_next (23 samples, 2.70%)</title><rect x="39.9061%" y="277" width="2.6995%" height="15" fill="rgb(227,165,31)" fg:x="340" fg:w="23"/><text x="40.1561%" y="287.50">mi..</text></g><g><title>mi_block_set_nextx (23 samples, 2.70%)</title><rect x="39.9061%" y="261" width="2.6995%" height="15" fill="rgb(228,167,24)" fg:x="340" fg:w="23"/><text x="40.1561%" y="271.50">mi..</text></g><g><title>[unknown] (21 samples, 2.46%)</title><rect x="40.1408%" y="245" width="2.4648%" height="15" fill="rgb(228,143,12)" fg:x="342" fg:w="21"/><text x="40.3908%" y="255.50">[u..</text></g><g><title>[unknown] (21 samples, 2.46%)</title><rect x="40.1408%" y="229" width="2.4648%" height="15" fill="rgb(249,149,8)" fg:x="342" fg:w="21"/><text x="40.3908%" y="239.50">[u..</text></g><g><title>[unknown] (21 samples, 2.46%)</title><rect x="40.1408%" y="213" width="2.4648%" height="15" fill="rgb(243,35,44)" fg:x="342" fg:w="21"/><text x="40.3908%" y="223.50">[u..</text></g><g><title>[unknown] (19 samples, 2.23%)</title><rect x="40.3756%" y="197" width="2.2300%" height="15" fill="rgb(246,89,9)" fg:x="344" fg:w="19"/><text x="40.6256%" y="207.50">[..</text></g><g><title>[unknown] (19 samples, 2.23%)</title><rect x="40.3756%" y="181" width="2.2300%" height="15" fill="rgb(233,213,13)" fg:x="344" fg:w="19"/><text x="40.6256%" y="191.50">[..</text></g><g><title>[unknown] (12 samples, 1.41%)</title><rect x="41.1972%" y="165" width="1.4085%" height="15" fill="rgb(233,141,41)" fg:x="351" fg:w="12"/><text x="41.4472%" y="175.50"></text></g><g><title>[unknown] (12 samples, 1.41%)</title><rect x="41.1972%" y="149" width="1.4085%" height="15" fill="rgb(239,167,4)" fg:x="351" fg:w="12"/><text x="41.4472%" y="159.50"></text></g><g><title>[unknown] (11 samples, 1.29%)</title><rect x="41.3146%" y="133" width="1.2911%" height="15" fill="rgb(209,217,16)" fg:x="352" fg:w="11"/><text x="41.5646%" y="143.50"></text></g><g><title>[unknown] (11 samples, 1.29%)</title><rect x="41.3146%" y="117" width="1.2911%" height="15" fill="rgb(219,88,35)" fg:x="352" fg:w="11"/><text x="41.5646%" y="127.50"></text></g><g><title>[unknown] (11 samples, 1.29%)</title><rect x="41.3146%" y="101" width="1.2911%" height="15" fill="rgb(220,193,23)" fg:x="352" fg:w="11"/><text x="41.5646%" y="111.50"></text></g><g><title>[unknown] (11 samples, 1.29%)</title><rect x="41.3146%" y="85" width="1.2911%" height="15" fill="rgb(230,90,52)" fg:x="352" fg:w="11"/><text x="41.5646%" y="95.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="42.3709%" y="69" width="0.2347%" height="15" fill="rgb(252,106,19)" fg:x="361" fg:w="2"/><text x="42.6209%" y="79.50"></text></g><g><title>_mi_page_start (1 samples, 0.12%)</title><rect x="42.6056%" y="229" width="0.1174%" height="15" fill="rgb(206,74,20)" fg:x="363" fg:w="1"/><text x="42.8556%" y="239.50"></text></g><g><title>mi_page_init (2 samples, 0.23%)</title><rect x="42.6056%" y="293" width="0.2347%" height="15" fill="rgb(230,138,44)" fg:x="363" fg:w="2"/><text x="42.8556%" y="303.50"></text></g><g><title>mi_page_extend_free (2 samples, 0.23%)</title><rect x="42.6056%" y="277" width="0.2347%" height="15" fill="rgb(235,182,43)" fg:x="363" fg:w="2"/><text x="42.8556%" y="287.50"></text></g><g><title>mi_page_extend_free (2 samples, 0.23%)</title><rect x="42.6056%" y="261" width="0.2347%" height="15" fill="rgb(242,16,51)" fg:x="363" fg:w="2"/><text x="42.8556%" y="271.50"></text></g><g><title>mi_page_free_list_extend (2 samples, 0.23%)</title><rect x="42.6056%" y="245" width="0.2347%" height="15" fill="rgb(248,9,4)" fg:x="363" fg:w="2"/><text x="42.8556%" y="255.50"></text></g><g><title>mi_block_set_next (1 samples, 0.12%)</title><rect x="42.7230%" y="229" width="0.1174%" height="15" fill="rgb(210,31,22)" fg:x="364" fg:w="1"/><text x="42.9730%" y="239.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.12%)</title><rect x="42.7230%" y="213" width="0.1174%" height="15" fill="rgb(239,54,39)" fg:x="364" fg:w="1"/><text x="42.9730%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="42.7230%" y="197" width="0.1174%" height="15" fill="rgb(230,99,41)" fg:x="364" fg:w="1"/><text x="42.9730%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="42.7230%" y="181" width="0.1174%" height="15" fill="rgb(253,106,12)" fg:x="364" fg:w="1"/><text x="42.9730%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="42.7230%" y="165" width="0.1174%" height="15" fill="rgb(213,46,41)" fg:x="364" fg:w="1"/><text x="42.9730%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="42.7230%" y="149" width="0.1174%" height="15" fill="rgb(215,133,35)" fg:x="364" fg:w="1"/><text x="42.9730%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="42.7230%" y="133" width="0.1174%" height="15" fill="rgb(213,28,5)" fg:x="364" fg:w="1"/><text x="42.9730%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="42.7230%" y="117" width="0.1174%" height="15" fill="rgb(215,77,49)" fg:x="364" fg:w="1"/><text x="42.9730%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="42.7230%" y="101" width="0.1174%" height="15" fill="rgb(248,100,22)" fg:x="364" fg:w="1"/><text x="42.9730%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="42.7230%" y="85" width="0.1174%" height="15" fill="rgb(208,67,9)" fg:x="364" fg:w="1"/><text x="42.9730%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="42.7230%" y="69" width="0.1174%" height="15" fill="rgb(219,133,21)" fg:x="364" fg:w="1"/><text x="42.9730%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="42.7230%" y="53" width="0.1174%" height="15" fill="rgb(246,46,29)" fg:x="364" fg:w="1"/><text x="42.9730%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="42.7230%" y="37" width="0.1174%" height="15" fill="rgb(246,185,52)" fg:x="364" fg:w="1"/><text x="42.9730%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (71 samples, 8.33%)</title><rect x="34.6244%" y="485" width="8.3333%" height="15" fill="rgb(252,136,11)" fg:x="295" fg:w="71"/><text x="34.8744%" y="495.50">alloc::raw_v..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (70 samples, 8.22%)</title><rect x="34.7418%" y="469" width="8.2160%" height="15" fill="rgb(219,138,53)" fg:x="296" fg:w="70"/><text x="34.9918%" y="479.50">&lt;alloc::all..</text></g><g><title>alloc::alloc::Global::grow_impl (70 samples, 8.22%)</title><rect x="34.7418%" y="453" width="8.2160%" height="15" fill="rgb(211,51,23)" fg:x="296" fg:w="70"/><text x="34.9918%" y="463.50">alloc::allo..</text></g><g><title>alloc::alloc::realloc (70 samples, 8.22%)</title><rect x="34.7418%" y="437" width="8.2160%" height="15" fill="rgb(247,221,28)" fg:x="296" fg:w="70"/><text x="34.9918%" y="447.50">alloc::allo..</text></g><g><title>_mi_heap_realloc_zero (70 samples, 8.22%)</title><rect x="34.7418%" y="421" width="8.2160%" height="15" fill="rgb(251,222,45)" fg:x="296" fg:w="70"/><text x="34.9918%" y="431.50">_mi_heap_re..</text></g><g><title>mi_heap_malloc (32 samples, 3.76%)</title><rect x="39.2019%" y="405" width="3.7559%" height="15" fill="rgb(217,162,53)" fg:x="334" fg:w="32"/><text x="39.4519%" y="415.50">mi_h..</text></g><g><title>_mi_malloc_generic (31 samples, 3.64%)</title><rect x="39.3192%" y="389" width="3.6385%" height="15" fill="rgb(229,93,14)" fg:x="335" fg:w="31"/><text x="39.5692%" y="399.50">_mi_..</text></g><g><title>mi_find_page (31 samples, 3.64%)</title><rect x="39.3192%" y="373" width="3.6385%" height="15" fill="rgb(209,67,49)" fg:x="335" fg:w="31"/><text x="39.5692%" y="383.50">mi_f..</text></g><g><title>mi_find_free_page (31 samples, 3.64%)</title><rect x="39.3192%" y="357" width="3.6385%" height="15" fill="rgb(213,87,29)" fg:x="335" fg:w="31"/><text x="39.5692%" y="367.50">mi_f..</text></g><g><title>mi_page_queue_find_free_ex (30 samples, 3.52%)</title><rect x="39.4366%" y="341" width="3.5211%" height="15" fill="rgb(205,151,52)" fg:x="336" fg:w="30"/><text x="39.6866%" y="351.50">mi_..</text></g><g><title>mi_page_fresh (3 samples, 0.35%)</title><rect x="42.6056%" y="325" width="0.3521%" height="15" fill="rgb(253,215,39)" fg:x="363" fg:w="3"/><text x="42.8556%" y="335.50"></text></g><g><title>mi_page_fresh_alloc (3 samples, 0.35%)</title><rect x="42.6056%" y="309" width="0.3521%" height="15" fill="rgb(221,220,41)" fg:x="363" fg:w="3"/><text x="42.8556%" y="319.50"></text></g><g><title>mi_segments_page_alloc (1 samples, 0.12%)</title><rect x="42.8404%" y="293" width="0.1174%" height="15" fill="rgb(218,133,21)" fg:x="365" fg:w="1"/><text x="43.0904%" y="303.50"></text></g><g><title>mi_segments_page_find_and_allocate (1 samples, 0.12%)</title><rect x="42.8404%" y="277" width="0.1174%" height="15" fill="rgb(221,193,43)" fg:x="365" fg:w="1"/><text x="43.0904%" y="287.50"></text></g><g><title>mi_segment_span_allocate (1 samples, 0.12%)</title><rect x="42.8404%" y="261" width="0.1174%" height="15" fill="rgb(240,128,52)" fg:x="365" fg:w="1"/><text x="43.0904%" y="271.50"></text></g><g><title>mi_segment_ensure_committed (1 samples, 0.12%)</title><rect x="42.8404%" y="245" width="0.1174%" height="15" fill="rgb(253,114,12)" fg:x="365" fg:w="1"/><text x="43.0904%" y="255.50"></text></g><g><title>mi_segment_commitx (1 samples, 0.12%)</title><rect x="42.8404%" y="229" width="0.1174%" height="15" fill="rgb(215,223,47)" fg:x="365" fg:w="1"/><text x="43.0904%" y="239.50"></text></g><g><title>mi_commit_mask_clear (1 samples, 0.12%)</title><rect x="42.8404%" y="213" width="0.1174%" height="15" fill="rgb(248,225,23)" fg:x="365" fg:w="1"/><text x="43.0904%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (77 samples, 9.04%)</title><rect x="34.0376%" y="597" width="9.0376%" height="15" fill="rgb(250,108,0)" fg:x="290" fg:w="77"/><text x="34.2876%" y="607.50">&lt;alloc::vec::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (77 samples, 9.04%)</title><rect x="34.0376%" y="581" width="9.0376%" height="15" fill="rgb(228,208,7)" fg:x="290" fg:w="77"/><text x="34.2876%" y="591.50">&lt;alloc::vec::..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (77 samples, 9.04%)</title><rect x="34.0376%" y="565" width="9.0376%" height="15" fill="rgb(244,45,10)" fg:x="290" fg:w="77"/><text x="34.2876%" y="575.50">alloc::vec::V..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (77 samples, 9.04%)</title><rect x="34.0376%" y="549" width="9.0376%" height="15" fill="rgb(207,125,25)" fg:x="290" fg:w="77"/><text x="34.2876%" y="559.50">alloc::vec::V..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (77 samples, 9.04%)</title><rect x="34.0376%" y="533" width="9.0376%" height="15" fill="rgb(210,195,18)" fg:x="290" fg:w="77"/><text x="34.2876%" y="543.50">alloc::raw_ve..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (73 samples, 8.57%)</title><rect x="34.5070%" y="517" width="8.5681%" height="15" fill="rgb(249,80,12)" fg:x="294" fg:w="73"/><text x="34.7570%" y="527.50">alloc::raw_v..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (73 samples, 8.57%)</title><rect x="34.5070%" y="501" width="8.5681%" height="15" fill="rgb(221,65,9)" fg:x="294" fg:w="73"/><text x="34.7570%" y="511.50">alloc::raw_v..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.12%)</title><rect x="42.9577%" y="485" width="0.1174%" height="15" fill="rgb(235,49,36)" fg:x="366" fg:w="1"/><text x="43.2077%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.12%)</title><rect x="42.9577%" y="469" width="0.1174%" height="15" fill="rgb(225,32,20)" fg:x="366" fg:w="1"/><text x="43.2077%" y="479.50"></text></g><g><title>[libc.so.6] (8 samples, 0.94%)</title><rect x="43.0751%" y="597" width="0.9390%" height="15" fill="rgb(215,141,46)" fg:x="367" fg:w="8"/><text x="43.3251%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="43.3099%" y="581" width="0.7042%" height="15" fill="rgb(250,160,47)" fg:x="369" fg:w="6"/><text x="43.5599%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="43.3099%" y="565" width="0.7042%" height="15" fill="rgb(216,222,40)" fg:x="369" fg:w="6"/><text x="43.5599%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="43.3099%" y="549" width="0.7042%" height="15" fill="rgb(234,217,39)" fg:x="369" fg:w="6"/><text x="43.5599%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="43.3099%" y="533" width="0.7042%" height="15" fill="rgb(207,178,40)" fg:x="369" fg:w="6"/><text x="43.5599%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.59%)</title><rect x="43.4272%" y="517" width="0.5869%" height="15" fill="rgb(221,136,13)" fg:x="370" fg:w="5"/><text x="43.6772%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.35%)</title><rect x="43.6620%" y="501" width="0.3521%" height="15" fill="rgb(249,199,10)" fg:x="372" fg:w="3"/><text x="43.9120%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.35%)</title><rect x="43.6620%" y="485" width="0.3521%" height="15" fill="rgb(249,222,13)" fg:x="372" fg:w="3"/><text x="43.9120%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.35%)</title><rect x="43.6620%" y="469" width="0.3521%" height="15" fill="rgb(244,185,38)" fg:x="372" fg:w="3"/><text x="43.9120%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.35%)</title><rect x="43.6620%" y="453" width="0.3521%" height="15" fill="rgb(236,202,9)" fg:x="372" fg:w="3"/><text x="43.9120%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="43.7793%" y="437" width="0.2347%" height="15" fill="rgb(250,229,37)" fg:x="373" fg:w="2"/><text x="44.0293%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="43.7793%" y="421" width="0.2347%" height="15" fill="rgb(206,174,23)" fg:x="373" fg:w="2"/><text x="44.0293%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.12%)</title><rect x="44.0141%" y="597" width="0.1174%" height="15" fill="rgb(211,33,43)" fg:x="375" fg:w="1"/><text x="44.2641%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.12%)</title><rect x="44.0141%" y="581" width="0.1174%" height="15" fill="rgb(245,58,50)" fg:x="375" fg:w="1"/><text x="44.2641%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.12%)</title><rect x="44.0141%" y="565" width="0.1174%" height="15" fill="rgb(244,68,36)" fg:x="375" fg:w="1"/><text x="44.2641%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.12%)</title><rect x="44.0141%" y="549" width="0.1174%" height="15" fill="rgb(232,229,15)" fg:x="375" fg:w="1"/><text x="44.2641%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.12%)</title><rect x="44.0141%" y="533" width="0.1174%" height="15" fill="rgb(254,30,23)" fg:x="375" fg:w="1"/><text x="44.2641%" y="543.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.12%)</title><rect x="44.0141%" y="517" width="0.1174%" height="15" fill="rgb(235,160,14)" fg:x="375" fg:w="1"/><text x="44.2641%" y="527.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.12%)</title><rect x="44.0141%" y="501" width="0.1174%" height="15" fill="rgb(212,155,44)" fg:x="375" fg:w="1"/><text x="44.2641%" y="511.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.12%)</title><rect x="44.0141%" y="485" width="0.1174%" height="15" fill="rgb(226,2,50)" fg:x="375" fg:w="1"/><text x="44.2641%" y="495.50"></text></g><g><title>mi_find_page (1 samples, 0.12%)</title><rect x="44.0141%" y="469" width="0.1174%" height="15" fill="rgb(234,177,6)" fg:x="375" fg:w="1"/><text x="44.2641%" y="479.50"></text></g><g><title>mi_find_free_page (1 samples, 0.12%)</title><rect x="44.0141%" y="453" width="0.1174%" height="15" fill="rgb(217,24,9)" fg:x="375" fg:w="1"/><text x="44.2641%" y="463.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.12%)</title><rect x="44.0141%" y="437" width="0.1174%" height="15" fill="rgb(220,13,46)" fg:x="375" fg:w="1"/><text x="44.2641%" y="447.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.12%)</title><rect x="44.0141%" y="421" width="0.1174%" height="15" fill="rgb(239,221,27)" fg:x="375" fg:w="1"/><text x="44.2641%" y="431.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.12%)</title><rect x="44.0141%" y="405" width="0.1174%" height="15" fill="rgb(222,198,25)" fg:x="375" fg:w="1"/><text x="44.2641%" y="415.50"></text></g><g><title>mi_page_free_list_extend (1 samples, 0.12%)</title><rect x="44.0141%" y="389" width="0.1174%" height="15" fill="rgb(211,99,13)" fg:x="375" fg:w="1"/><text x="44.2641%" y="399.50"></text></g><g><title>mi_block_set_next (1 samples, 0.12%)</title><rect x="44.0141%" y="373" width="0.1174%" height="15" fill="rgb(232,111,31)" fg:x="375" fg:w="1"/><text x="44.2641%" y="383.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.12%)</title><rect x="44.0141%" y="357" width="0.1174%" height="15" fill="rgb(245,82,37)" fg:x="375" fg:w="1"/><text x="44.2641%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="44.0141%" y="341" width="0.1174%" height="15" fill="rgb(227,149,46)" fg:x="375" fg:w="1"/><text x="44.2641%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="44.1315%" y="485" width="0.1174%" height="15" fill="rgb(218,36,50)" fg:x="376" fg:w="1"/><text x="44.3815%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="44.1315%" y="469" width="0.1174%" height="15" fill="rgb(226,80,48)" fg:x="376" fg:w="1"/><text x="44.3815%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.23%)</title><rect x="44.1315%" y="597" width="0.2347%" height="15" fill="rgb(238,224,15)" fg:x="376" fg:w="2"/><text x="44.3815%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.23%)</title><rect x="44.1315%" y="581" width="0.2347%" height="15" fill="rgb(241,136,10)" fg:x="376" fg:w="2"/><text x="44.3815%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.23%)</title><rect x="44.1315%" y="565" width="0.2347%" height="15" fill="rgb(208,32,45)" fg:x="376" fg:w="2"/><text x="44.3815%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.23%)</title><rect x="44.1315%" y="549" width="0.2347%" height="15" fill="rgb(207,135,9)" fg:x="376" fg:w="2"/><text x="44.3815%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.23%)</title><rect x="44.1315%" y="533" width="0.2347%" height="15" fill="rgb(206,86,44)" fg:x="376" fg:w="2"/><text x="44.3815%" y="543.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.23%)</title><rect x="44.1315%" y="517" width="0.2347%" height="15" fill="rgb(245,177,15)" fg:x="376" fg:w="2"/><text x="44.3815%" y="527.50"></text></g><g><title>_mi_heap_realloc_zero (2 samples, 0.23%)</title><rect x="44.1315%" y="501" width="0.2347%" height="15" fill="rgb(206,64,50)" fg:x="376" fg:w="2"/><text x="44.3815%" y="511.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.12%)</title><rect x="44.2488%" y="485" width="0.1174%" height="15" fill="rgb(234,36,40)" fg:x="377" fg:w="1"/><text x="44.4988%" y="495.50"></text></g><g><title>mi_find_page (1 samples, 0.12%)</title><rect x="44.2488%" y="469" width="0.1174%" height="15" fill="rgb(213,64,8)" fg:x="377" fg:w="1"/><text x="44.4988%" y="479.50"></text></g><g><title>mi_find_free_page (1 samples, 0.12%)</title><rect x="44.2488%" y="453" width="0.1174%" height="15" fill="rgb(210,75,36)" fg:x="377" fg:w="1"/><text x="44.4988%" y="463.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.12%)</title><rect x="44.2488%" y="437" width="0.1174%" height="15" fill="rgb(229,88,21)" fg:x="377" fg:w="1"/><text x="44.4988%" y="447.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.12%)</title><rect x="44.2488%" y="421" width="0.1174%" height="15" fill="rgb(252,204,47)" fg:x="377" fg:w="1"/><text x="44.4988%" y="431.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.12%)</title><rect x="44.2488%" y="405" width="0.1174%" height="15" fill="rgb(208,77,27)" fg:x="377" fg:w="1"/><text x="44.4988%" y="415.50"></text></g><g><title>mi_page_free_list_extend (1 samples, 0.12%)</title><rect x="44.2488%" y="389" width="0.1174%" height="15" fill="rgb(221,76,26)" fg:x="377" fg:w="1"/><text x="44.4988%" y="399.50"></text></g><g><title>mi_block_set_next (1 samples, 0.12%)</title><rect x="44.2488%" y="373" width="0.1174%" height="15" fill="rgb(225,139,18)" fg:x="377" fg:w="1"/><text x="44.4988%" y="383.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.12%)</title><rect x="44.2488%" y="357" width="0.1174%" height="15" fill="rgb(230,137,11)" fg:x="377" fg:w="1"/><text x="44.4988%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="44.2488%" y="341" width="0.1174%" height="15" fill="rgb(212,28,1)" fg:x="377" fg:w="1"/><text x="44.4988%" y="351.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.12%)</title><rect x="44.3662%" y="597" width="0.1174%" height="15" fill="rgb(248,164,17)" fg:x="378" fg:w="1"/><text x="44.6162%" y="607.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.12%)</title><rect x="44.3662%" y="581" width="0.1174%" height="15" fill="rgb(222,171,42)" fg:x="378" fg:w="1"/><text x="44.6162%" y="591.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="45.7746%" y="581" width="0.1174%" height="15" fill="rgb(243,84,45)" fg:x="390" fg:w="1"/><text x="46.0246%" y="591.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.12%)</title><rect x="45.8920%" y="581" width="0.1174%" height="15" fill="rgb(252,49,23)" fg:x="391" fg:w="1"/><text x="46.1420%" y="591.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::len (1 samples, 0.12%)</title><rect x="45.8920%" y="565" width="0.1174%" height="15" fill="rgb(215,19,7)" fg:x="391" fg:w="1"/><text x="46.1420%" y="575.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (1 samples, 0.12%)</title><rect x="45.8920%" y="549" width="0.1174%" height="15" fill="rgb(238,81,41)" fg:x="391" fg:w="1"/><text x="46.1420%" y="559.50"></text></g><g><title>__rg_realloc (1 samples, 0.12%)</title><rect x="46.5962%" y="469" width="0.1174%" height="15" fill="rgb(210,199,37)" fg:x="397" fg:w="1"/><text x="46.8462%" y="479.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::realloc (1 samples, 0.12%)</title><rect x="46.5962%" y="453" width="0.1174%" height="15" fill="rgb(244,192,49)" fg:x="397" fg:w="1"/><text x="46.8462%" y="463.50"></text></g><g><title>mimalloc::may_use_unaligned_api (1 samples, 0.12%)</title><rect x="46.5962%" y="437" width="0.1174%" height="15" fill="rgb(226,211,11)" fg:x="397" fg:w="1"/><text x="46.8462%" y="447.50"></text></g><g><title>_mi_memcpy_aligned (3 samples, 0.35%)</title><rect x="46.7136%" y="453" width="0.3521%" height="15" fill="rgb(236,162,54)" fg:x="398" fg:w="3"/><text x="46.9636%" y="463.50"></text></g><g><title>_mi_memcpy (3 samples, 0.35%)</title><rect x="46.7136%" y="437" width="0.3521%" height="15" fill="rgb(220,229,9)" fg:x="398" fg:w="3"/><text x="46.9636%" y="447.50"></text></g><g><title>memcpy (3 samples, 0.35%)</title><rect x="46.7136%" y="421" width="0.3521%" height="15" fill="rgb(250,87,22)" fg:x="398" fg:w="3"/><text x="46.9636%" y="431.50"></text></g><g><title>[libc.so.6] (3 samples, 0.35%)</title><rect x="46.7136%" y="405" width="0.3521%" height="15" fill="rgb(239,43,17)" fg:x="398" fg:w="3"/><text x="46.9636%" y="415.50"></text></g><g><title>_mi_usable_size (1 samples, 0.12%)</title><rect x="47.0657%" y="453" width="0.1174%" height="15" fill="rgb(231,177,25)" fg:x="401" fg:w="1"/><text x="47.3157%" y="463.50"></text></g><g><title>_mi_segment_page_of (1 samples, 0.12%)</title><rect x="47.0657%" y="437" width="0.1174%" height="15" fill="rgb(219,179,1)" fg:x="401" fg:w="1"/><text x="47.3157%" y="447.50"></text></g><g><title>mi_slice_first (1 samples, 0.12%)</title><rect x="47.0657%" y="421" width="0.1174%" height="15" fill="rgb(238,219,53)" fg:x="401" fg:w="1"/><text x="47.3157%" y="431.50"></text></g><g><title>_mi_deferred_free (1 samples, 0.12%)</title><rect x="47.1831%" y="421" width="0.1174%" height="15" fill="rgb(232,167,36)" fg:x="402" fg:w="1"/><text x="47.4331%" y="431.50"></text></g><g><title>_mi_page_free_collect (2 samples, 0.23%)</title><rect x="47.4178%" y="389" width="0.2347%" height="15" fill="rgb(244,19,51)" fg:x="404" fg:w="2"/><text x="47.6678%" y="399.50"></text></g><g><title>_mi_malloc_generic (5 samples, 0.59%)</title><rect x="47.1831%" y="437" width="0.5869%" height="15" fill="rgb(224,6,22)" fg:x="402" fg:w="5"/><text x="47.4331%" y="447.50"></text></g><g><title>mi_find_page (4 samples, 0.47%)</title><rect x="47.3005%" y="421" width="0.4695%" height="15" fill="rgb(224,145,5)" fg:x="403" fg:w="4"/><text x="47.5505%" y="431.50"></text></g><g><title>mi_find_free_page (4 samples, 0.47%)</title><rect x="47.3005%" y="405" width="0.4695%" height="15" fill="rgb(234,130,49)" fg:x="403" fg:w="4"/><text x="47.5505%" y="415.50"></text></g><g><title>mi_page_queue (1 samples, 0.12%)</title><rect x="47.6526%" y="389" width="0.1174%" height="15" fill="rgb(254,6,2)" fg:x="406" fg:w="1"/><text x="47.9026%" y="399.50"></text></g><g><title>_mi_heap_realloc_zero (12 samples, 1.41%)</title><rect x="46.7136%" y="469" width="1.4085%" height="15" fill="rgb(208,96,46)" fg:x="398" fg:w="12"/><text x="46.9636%" y="479.50"></text></g><g><title>mi_heap_malloc (8 samples, 0.94%)</title><rect x="47.1831%" y="453" width="0.9390%" height="15" fill="rgb(239,3,39)" fg:x="402" fg:w="8"/><text x="47.4331%" y="463.50"></text></g><g><title>mi_heap_malloc_small (3 samples, 0.35%)</title><rect x="47.7700%" y="437" width="0.3521%" height="15" fill="rgb(233,210,1)" fg:x="407" fg:w="3"/><text x="48.0200%" y="447.50"></text></g><g><title>_mi_page_malloc (3 samples, 0.35%)</title><rect x="47.7700%" y="421" width="0.3521%" height="15" fill="rgb(244,137,37)" fg:x="407" fg:w="3"/><text x="48.0200%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (14 samples, 1.64%)</title><rect x="46.5962%" y="517" width="1.6432%" height="15" fill="rgb(240,136,2)" fg:x="397" fg:w="14"/><text x="46.8462%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (14 samples, 1.64%)</title><rect x="46.5962%" y="501" width="1.6432%" height="15" fill="rgb(239,18,37)" fg:x="397" fg:w="14"/><text x="46.8462%" y="511.50"></text></g><g><title>alloc::alloc::realloc (14 samples, 1.64%)</title><rect x="46.5962%" y="485" width="1.6432%" height="15" fill="rgb(218,185,22)" fg:x="397" fg:w="14"/><text x="46.8462%" y="495.50"></text></g><g><title>mi_realloc (1 samples, 0.12%)</title><rect x="48.1221%" y="469" width="0.1174%" height="15" fill="rgb(225,218,4)" fg:x="410" fg:w="1"/><text x="48.3721%" y="479.50"></text></g><g><title>mi_get_default_heap (1 samples, 0.12%)</title><rect x="48.1221%" y="453" width="0.1174%" height="15" fill="rgb(230,182,32)" fg:x="410" fg:w="1"/><text x="48.3721%" y="463.50"></text></g><g><title>__rust_alloc (1 samples, 0.12%)</title><rect x="48.2394%" y="517" width="0.1174%" height="15" fill="rgb(242,56,43)" fg:x="411" fg:w="1"/><text x="48.4894%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.12%)</title><rect x="48.3568%" y="517" width="0.1174%" height="15" fill="rgb(233,99,24)" fg:x="412" fg:w="1"/><text x="48.6068%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (23 samples, 2.70%)</title><rect x="46.1268%" y="565" width="2.6995%" height="15" fill="rgb(234,209,42)" fg:x="393" fg:w="23"/><text x="46.3768%" y="575.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (23 samples, 2.70%)</title><rect x="46.1268%" y="549" width="2.6995%" height="15" fill="rgb(227,7,12)" fg:x="393" fg:w="23"/><text x="46.3768%" y="559.50">al..</text></g><g><title>alloc::raw_vec::finish_grow (22 samples, 2.58%)</title><rect x="46.2441%" y="533" width="2.5822%" height="15" fill="rgb(245,203,43)" fg:x="394" fg:w="22"/><text x="46.4941%" y="543.50">al..</text></g><g><title>mi_malloc (3 samples, 0.35%)</title><rect x="48.4742%" y="517" width="0.3521%" height="15" fill="rgb(238,205,33)" fg:x="413" fg:w="3"/><text x="48.7242%" y="527.50"></text></g><g><title>mi_heap_malloc (3 samples, 0.35%)</title><rect x="48.4742%" y="501" width="0.3521%" height="15" fill="rgb(231,56,7)" fg:x="413" fg:w="3"/><text x="48.7242%" y="511.50"></text></g><g><title>mi_heap_malloc_small (2 samples, 0.23%)</title><rect x="48.5915%" y="485" width="0.2347%" height="15" fill="rgb(244,186,29)" fg:x="414" fg:w="2"/><text x="48.8415%" y="495.50"></text></g><g><title>_mi_page_malloc (2 samples, 0.23%)</title><rect x="48.5915%" y="469" width="0.2347%" height="15" fill="rgb(234,111,31)" fg:x="414" fg:w="2"/><text x="48.8415%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (39 samples, 4.58%)</title><rect x="48.8263%" y="565" width="4.5775%" height="15" fill="rgb(241,149,10)" fg:x="416" fg:w="39"/><text x="49.0763%" y="575.50">core:..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (39 samples, 4.58%)</title><rect x="48.8263%" y="549" width="4.5775%" height="15" fill="rgb(249,206,44)" fg:x="416" fg:w="39"/><text x="49.0763%" y="559.50">core:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (73 samples, 8.57%)</title><rect x="46.0094%" y="581" width="8.5681%" height="15" fill="rgb(251,153,30)" fg:x="392" fg:w="73"/><text x="46.2594%" y="591.50">alloc::vec::..</text></g><g><title>core::ptr::write (10 samples, 1.17%)</title><rect x="53.4038%" y="565" width="1.1737%" height="15" fill="rgb(239,152,38)" fg:x="455" fg:w="10"/><text x="53.6538%" y="575.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_boolie (6 samples, 0.70%)</title><rect x="54.8122%" y="549" width="0.7042%" height="15" fill="rgb(249,139,47)" fg:x="467" fg:w="6"/><text x="55.0622%" y="559.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bit (6 samples, 0.70%)</title><rect x="54.8122%" y="533" width="0.7042%" height="15" fill="rgb(244,64,35)" fg:x="467" fg:w="6"/><text x="55.0622%" y="543.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (6 samples, 0.70%)</title><rect x="54.8122%" y="517" width="0.7042%" height="15" fill="rgb(216,46,15)" fg:x="467" fg:w="6"/><text x="55.0622%" y="527.50"></text></g><g><title>bitter::LittleEndianReader::has_data_for_unaligned_loads (1 samples, 0.12%)</title><rect x="55.3991%" y="501" width="0.1174%" height="15" fill="rgb(250,74,19)" fg:x="472" fg:w="1"/><text x="55.6491%" y="511.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_inx (12 samples, 1.41%)</title><rect x="54.5775%" y="565" width="1.4085%" height="15" fill="rgb(249,42,33)" fg:x="465" fg:w="12"/><text x="54.8275%" y="575.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (4 samples, 0.47%)</title><rect x="55.5164%" y="549" width="0.4695%" height="15" fill="rgb(242,149,17)" fg:x="473" fg:w="4"/><text x="55.7664%" y="559.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (4 samples, 0.47%)</title><rect x="55.5164%" y="533" width="0.4695%" height="15" fill="rgb(244,29,21)" fg:x="473" fg:w="4"/><text x="55.7664%" y="543.50"></text></g><g><title>bitter::LittleEndianReader::refill (1 samples, 0.12%)</title><rect x="55.8685%" y="517" width="0.1174%" height="15" fill="rgb(220,130,37)" fg:x="476" fg:w="1"/><text x="56.1185%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.12%)</title><rect x="55.8685%" y="501" width="0.1174%" height="15" fill="rgb(211,67,2)" fg:x="476" fg:w="1"/><text x="56.1185%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.12%)</title><rect x="55.8685%" y="485" width="0.1174%" height="15" fill="rgb(235,68,52)" fg:x="476" fg:w="1"/><text x="56.1185%" y="495.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::parse_indicies (17 samples, 2.00%)</title><rect x="54.5775%" y="581" width="1.9953%" height="15" fill="rgb(246,142,3)" fg:x="465" fg:w="17"/><text x="54.8275%" y="591.50">d..</text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (5 samples, 0.59%)</title><rect x="55.9859%" y="565" width="0.5869%" height="15" fill="rgb(241,25,7)" fg:x="477" fg:w="5"/><text x="56.2359%" y="575.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (3 samples, 0.35%)</title><rect x="56.2207%" y="549" width="0.3521%" height="15" fill="rgb(242,119,39)" fg:x="479" fg:w="3"/><text x="56.4707%" y="559.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (2 samples, 0.23%)</title><rect x="56.3380%" y="533" width="0.2347%" height="15" fill="rgb(241,98,45)" fg:x="480" fg:w="2"/><text x="56.5880%" y="543.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_special_float (8 samples, 0.94%)</title><rect x="58.2160%" y="549" width="0.9390%" height="15" fill="rgb(254,28,30)" fg:x="496" fg:w="8"/><text x="58.4660%" y="559.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_f32 (4 samples, 0.47%)</title><rect x="58.6854%" y="533" width="0.4695%" height="15" fill="rgb(241,142,54)" fg:x="500" fg:w="4"/><text x="58.9354%" y="543.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_u32 (4 samples, 0.47%)</title><rect x="58.6854%" y="517" width="0.4695%" height="15" fill="rgb(222,85,15)" fg:x="500" fg:w="4"/><text x="58.9354%" y="527.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (4 samples, 0.47%)</title><rect x="58.6854%" y="501" width="0.4695%" height="15" fill="rgb(210,85,47)" fg:x="500" fg:w="4"/><text x="58.9354%" y="511.50"></text></g><g><title>bitter::LittleEndianReader::refill (1 samples, 0.12%)</title><rect x="59.0376%" y="485" width="0.1174%" height="15" fill="rgb(224,206,25)" fg:x="503" fg:w="1"/><text x="59.2876%" y="495.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_float (13 samples, 1.53%)</title><rect x="57.8638%" y="565" width="1.5258%" height="15" fill="rgb(243,201,19)" fg:x="493" fg:w="13"/><text x="58.1138%" y="575.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (2 samples, 0.23%)</title><rect x="59.1549%" y="549" width="0.2347%" height="15" fill="rgb(236,59,4)" fg:x="504" fg:w="2"/><text x="59.4049%" y="559.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.12%)</title><rect x="59.2723%" y="533" width="0.1174%" height="15" fill="rgb(254,179,45)" fg:x="505" fg:w="1"/><text x="59.5223%" y="543.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_int (2 samples, 0.23%)</title><rect x="59.3897%" y="565" width="0.2347%" height="15" fill="rgb(226,14,10)" fg:x="506" fg:w="2"/><text x="59.6397%" y="575.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (1 samples, 0.12%)</title><rect x="59.5070%" y="549" width="0.1174%" height="15" fill="rgb(244,27,41)" fg:x="507" fg:w="1"/><text x="59.7570%" y="559.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_vec (3 samples, 0.35%)</title><rect x="59.6244%" y="565" width="0.3521%" height="15" fill="rgb(235,35,32)" fg:x="508" fg:w="3"/><text x="59.8744%" y="575.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_float (3 samples, 0.35%)</title><rect x="59.6244%" y="549" width="0.3521%" height="15" fill="rgb(218,68,31)" fg:x="508" fg:w="3"/><text x="59.8744%" y="559.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_special_float (1 samples, 0.12%)</title><rect x="59.8592%" y="533" width="0.1174%" height="15" fill="rgb(207,120,37)" fg:x="510" fg:w="1"/><text x="60.1092%" y="543.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_bit_coord (1 samples, 0.12%)</title><rect x="59.8592%" y="517" width="0.1174%" height="15" fill="rgb(227,98,0)" fg:x="510" fg:w="1"/><text x="60.1092%" y="527.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode (36 samples, 4.23%)</title><rect x="56.5728%" y="581" width="4.2254%" height="15" fill="rgb(207,7,3)" fg:x="482" fg:w="36"/><text x="56.8228%" y="591.50">demop..</text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_vec_xy (7 samples, 0.82%)</title><rect x="59.9765%" y="565" width="0.8216%" height="15" fill="rgb(206,98,19)" fg:x="511" fg:w="7"/><text x="60.2265%" y="575.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_float (6 samples, 0.70%)</title><rect x="60.0939%" y="549" width="0.7042%" height="15" fill="rgb(217,5,26)" fg:x="512" fg:w="6"/><text x="60.3439%" y="559.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_special_float (4 samples, 0.47%)</title><rect x="60.3286%" y="533" width="0.4695%" height="15" fill="rgb(235,190,38)" fg:x="514" fg:w="4"/><text x="60.5786%" y="543.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_f32 (4 samples, 0.47%)</title><rect x="60.3286%" y="517" width="0.4695%" height="15" fill="rgb(247,86,24)" fg:x="514" fg:w="4"/><text x="60.5786%" y="527.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_u32 (4 samples, 0.47%)</title><rect x="60.3286%" y="501" width="0.4695%" height="15" fill="rgb(205,101,16)" fg:x="514" fg:w="4"/><text x="60.5786%" y="511.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (4 samples, 0.47%)</title><rect x="60.3286%" y="485" width="0.4695%" height="15" fill="rgb(246,168,33)" fg:x="514" fg:w="4"/><text x="60.5786%" y="495.50"></text></g><g><title>bitter::LittleEndianReader::refill (2 samples, 0.23%)</title><rect x="60.5634%" y="469" width="0.2347%" height="15" fill="rgb(231,114,1)" fg:x="516" fg:w="2"/><text x="60.8134%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub (2 samples, 0.23%)</title><rect x="60.5634%" y="453" width="0.2347%" height="15" fill="rgb(207,184,53)" fg:x="516" fg:w="2"/><text x="60.8134%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.23%)</title><rect x="60.5634%" y="437" width="0.2347%" height="15" fill="rgb(224,95,51)" fg:x="516" fg:w="2"/><text x="60.8134%" y="447.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.12%)</title><rect x="60.7981%" y="533" width="0.1174%" height="15" fill="rgb(212,188,45)" fg:x="518" fg:w="1"/><text x="61.0481%" y="543.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::hash_one (1 samples, 0.12%)</title><rect x="60.7981%" y="517" width="0.1174%" height="15" fill="rgb(223,154,38)" fg:x="518" fg:w="1"/><text x="61.0481%" y="527.50"></text></g><g><title>ahash::random_state::RandomState::hash_one (1 samples, 0.12%)</title><rect x="60.7981%" y="501" width="0.1174%" height="15" fill="rgb(251,22,52)" fg:x="518" fg:w="1"/><text x="61.0481%" y="511.50"></text></g><g><title>&lt;T as ahash::specialize::CallHasher&gt;::get_hash (1 samples, 0.12%)</title><rect x="60.7981%" y="485" width="0.1174%" height="15" fill="rgb(229,209,22)" fg:x="518" fg:w="1"/><text x="61.0481%" y="495.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.12%)</title><rect x="60.7981%" y="469" width="0.1174%" height="15" fill="rgb(234,138,34)" fg:x="518" fg:w="1"/><text x="61.0481%" y="479.50"></text></g><g><title>ahash::operations::aesdec (1 samples, 0.12%)</title><rect x="60.7981%" y="453" width="0.1174%" height="15" fill="rgb(212,95,11)" fg:x="518" fg:w="1"/><text x="61.0481%" y="463.50"></text></g><g><title>core::core_arch::x86::aes::_mm_aesdec_si128 (1 samples, 0.12%)</title><rect x="60.7981%" y="437" width="0.1174%" height="15" fill="rgb(240,179,47)" fg:x="518" fg:w="1"/><text x="61.0481%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="61.1502%" y="485" width="0.1174%" height="15" fill="rgb(240,163,11)" fg:x="521" fg:w="1"/><text x="61.4002%" y="495.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.12%)</title><rect x="61.1502%" y="469" width="0.1174%" height="15" fill="rgb(236,37,12)" fg:x="521" fg:w="1"/><text x="61.4002%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.23%)</title><rect x="61.2676%" y="485" width="0.2347%" height="15" fill="rgb(232,164,16)" fg:x="522" fg:w="2"/><text x="61.5176%" y="495.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (2 samples, 0.23%)</title><rect x="61.2676%" y="469" width="0.2347%" height="15" fill="rgb(244,205,15)" fg:x="522" fg:w="2"/><text x="61.5176%" y="479.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (2 samples, 0.23%)</title><rect x="61.2676%" y="453" width="0.2347%" height="15" fill="rgb(223,117,47)" fg:x="522" fg:w="2"/><text x="61.5176%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.23%)</title><rect x="61.2676%" y="437" width="0.2347%" height="15" fill="rgb(244,107,35)" fg:x="522" fg:w="2"/><text x="61.5176%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.23%)</title><rect x="61.2676%" y="421" width="0.2347%" height="15" fill="rgb(205,140,8)" fg:x="522" fg:w="2"/><text x="61.5176%" y="431.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.23%)</title><rect x="61.5023%" y="485" width="0.2347%" height="15" fill="rgb(228,84,46)" fg:x="524" fg:w="2"/><text x="61.7523%" y="495.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::parse_ent_props (148 samples, 17.37%)</title><rect x="44.4836%" y="597" width="17.3709%" height="15" fill="rgb(254,188,9)" fg:x="379" fg:w="148"/><text x="44.7336%" y="607.50">demoparser::parsing::demo_p..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 1.06%)</title><rect x="60.7981%" y="581" width="1.0563%" height="15" fill="rgb(206,112,54)" fg:x="518" fg:w="9"/><text x="61.0481%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9 samples, 1.06%)</title><rect x="60.7981%" y="565" width="1.0563%" height="15" fill="rgb(216,84,49)" fg:x="518" fg:w="9"/><text x="61.0481%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 1.06%)</title><rect x="60.7981%" y="549" width="1.0563%" height="15" fill="rgb(214,194,35)" fg:x="518" fg:w="9"/><text x="61.0481%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8 samples, 0.94%)</title><rect x="60.9155%" y="533" width="0.9390%" height="15" fill="rgb(249,28,3)" fg:x="519" fg:w="8"/><text x="61.1655%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.94%)</title><rect x="60.9155%" y="517" width="0.9390%" height="15" fill="rgb(222,56,52)" fg:x="519" fg:w="8"/><text x="61.1655%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (8 samples, 0.94%)</title><rect x="60.9155%" y="501" width="0.9390%" height="15" fill="rgb(245,217,50)" fg:x="519" fg:w="8"/><text x="61.1655%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.12%)</title><rect x="61.7371%" y="485" width="0.1174%" height="15" fill="rgb(213,201,24)" fg:x="526" fg:w="1"/><text x="61.9871%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.12%)</title><rect x="61.7371%" y="469" width="0.1174%" height="15" fill="rgb(248,116,28)" fg:x="526" fg:w="1"/><text x="61.9871%" y="479.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.12%)</title><rect x="61.8545%" y="565" width="0.1174%" height="15" fill="rgb(219,72,43)" fg:x="527" fg:w="1"/><text x="62.1045%" y="575.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_boolie (2 samples, 0.23%)</title><rect x="61.8545%" y="597" width="0.2347%" height="15" fill="rgb(209,138,14)" fg:x="527" fg:w="2"/><text x="62.1045%" y="607.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bit (2 samples, 0.23%)</title><rect x="61.8545%" y="581" width="0.2347%" height="15" fill="rgb(222,18,33)" fg:x="527" fg:w="2"/><text x="62.1045%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.12%)</title><rect x="61.9718%" y="565" width="0.1174%" height="15" fill="rgb(213,199,7)" fg:x="528" fg:w="1"/><text x="62.2218%" y="575.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_u_bit_var (1 samples, 0.12%)</title><rect x="62.0892%" y="597" width="0.1174%" height="15" fill="rgb(250,110,10)" fg:x="529" fg:w="1"/><text x="62.3392%" y="607.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (1 samples, 0.12%)</title><rect x="62.0892%" y="581" width="0.1174%" height="15" fill="rgb(248,123,6)" fg:x="529" fg:w="1"/><text x="62.3392%" y="591.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.12%)</title><rect x="62.0892%" y="565" width="0.1174%" height="15" fill="rgb(206,91,31)" fg:x="529" fg:w="1"/><text x="62.3392%" y="575.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::_parse_packet_entities (248 samples, 29.11%)</title><rect x="33.8028%" y="613" width="29.1080%" height="15" fill="rgb(211,154,13)" fg:x="288" fg:w="248"/><text x="34.0528%" y="623.50">demoparser::parsing::demo_parsing::entities::&lt;i..</text></g><g><title>mi_free (6 samples, 0.70%)</title><rect x="62.2066%" y="597" width="0.7042%" height="15" fill="rgb(225,148,7)" fg:x="530" fg:w="6"/><text x="62.4566%" y="607.50"></text></g><g><title>_mi_thread_id (1 samples, 0.12%)</title><rect x="62.7934%" y="581" width="0.1174%" height="15" fill="rgb(220,160,43)" fg:x="535" fg:w="1"/><text x="63.0434%" y="591.50"></text></g><g><title>mi_tls_slot (1 samples, 0.12%)</title><rect x="62.7934%" y="565" width="0.1174%" height="15" fill="rgb(213,52,39)" fg:x="535" fg:w="1"/><text x="63.0434%" y="575.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.12%)</title><rect x="63.1455%" y="565" width="0.1174%" height="15" fill="rgb(243,137,7)" fg:x="538" fg:w="1"/><text x="63.3955%" y="575.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bool (2 samples, 0.23%)</title><rect x="63.2629%" y="565" width="0.2347%" height="15" fill="rgb(230,79,13)" fg:x="539" fg:w="2"/><text x="63.5129%" y="575.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.12%)</title><rect x="63.3803%" y="549" width="0.1174%" height="15" fill="rgb(247,105,23)" fg:x="540" fg:w="1"/><text x="63.6303%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (1 samples, 0.12%)</title><rect x="63.4977%" y="501" width="0.1174%" height="15" fill="rgb(223,179,41)" fg:x="541" fg:w="1"/><text x="63.7477%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (1 samples, 0.12%)</title><rect x="63.4977%" y="485" width="0.1174%" height="15" fill="rgb(218,9,34)" fg:x="541" fg:w="1"/><text x="63.7477%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (1 samples, 0.12%)</title><rect x="63.4977%" y="469" width="0.1174%" height="15" fill="rgb(222,106,8)" fg:x="541" fg:w="1"/><text x="63.7477%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (1 samples, 0.12%)</title><rect x="63.4977%" y="453" width="0.1174%" height="15" fill="rgb(211,220,0)" fg:x="541" fg:w="1"/><text x="63.7477%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.12%)</title><rect x="63.4977%" y="437" width="0.1174%" height="15" fill="rgb(229,52,16)" fg:x="541" fg:w="1"/><text x="63.7477%" y="447.50"></text></g><g><title>mi_malloc (1 samples, 0.12%)</title><rect x="63.4977%" y="421" width="0.1174%" height="15" fill="rgb(212,155,18)" fg:x="541" fg:w="1"/><text x="63.7477%" y="431.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.12%)</title><rect x="63.4977%" y="405" width="0.1174%" height="15" fill="rgb(242,21,14)" fg:x="541" fg:w="1"/><text x="63.7477%" y="415.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.12%)</title><rect x="63.4977%" y="389" width="0.1174%" height="15" fill="rgb(222,19,48)" fg:x="541" fg:w="1"/><text x="63.7477%" y="399.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.12%)</title><rect x="63.4977%" y="373" width="0.1174%" height="15" fill="rgb(232,45,27)" fg:x="541" fg:w="1"/><text x="63.7477%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.12%)</title><rect x="63.6150%" y="501" width="0.1174%" height="15" fill="rgb(249,103,42)" fg:x="542" fg:w="1"/><text x="63.8650%" y="511.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (7 samples, 0.82%)</title><rect x="63.4977%" y="533" width="0.8216%" height="15" fill="rgb(246,81,33)" fg:x="541" fg:w="7"/><text x="63.7477%" y="543.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (7 samples, 0.82%)</title><rect x="63.4977%" y="517" width="0.8216%" height="15" fill="rgb(252,33,42)" fg:x="541" fg:w="7"/><text x="63.7477%" y="527.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact (5 samples, 0.59%)</title><rect x="63.7324%" y="501" width="0.5869%" height="15" fill="rgb(209,212,41)" fg:x="543" fg:w="5"/><text x="63.9824%" y="511.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::read_bytes (5 samples, 0.59%)</title><rect x="63.7324%" y="485" width="0.5869%" height="15" fill="rgb(207,154,6)" fg:x="543" fg:w="5"/><text x="63.9824%" y="495.50"></text></g><g><title>protobuf::misc::maybe_uninit_write_slice (5 samples, 0.59%)</title><rect x="63.7324%" y="469" width="0.5869%" height="15" fill="rgb(223,64,47)" fg:x="543" fg:w="5"/><text x="63.9824%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (5 samples, 0.59%)</title><rect x="63.7324%" y="453" width="0.5869%" height="15" fill="rgb(211,161,38)" fg:x="543" fg:w="5"/><text x="63.9824%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.59%)</title><rect x="63.7324%" y="437" width="0.5869%" height="15" fill="rgb(219,138,40)" fg:x="543" fg:w="5"/><text x="63.9824%" y="447.50"></text></g><g><title>[libc.so.6] (4 samples, 0.47%)</title><rect x="63.8498%" y="421" width="0.4695%" height="15" fill="rgb(241,228,46)" fg:x="544" fg:w="4"/><text x="64.0998%" y="431.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes (8 samples, 0.94%)</title><rect x="63.4977%" y="565" width="0.9390%" height="15" fill="rgb(223,209,38)" fg:x="541" fg:w="8"/><text x="63.7477%" y="575.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (8 samples, 0.94%)</title><rect x="63.4977%" y="549" width="0.9390%" height="15" fill="rgb(236,164,45)" fg:x="541" fg:w="8"/><text x="63.7477%" y="559.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32 (1 samples, 0.12%)</title><rect x="64.3192%" y="533" width="0.1174%" height="15" fill="rgb(231,15,5)" fg:x="548" fg:w="1"/><text x="64.5692%" y="543.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_packet_entities (263 samples, 30.87%)</title><rect x="33.8028%" y="629" width="30.8685%" height="15" fill="rgb(252,35,15)" fg:x="288" fg:w="263"/><text x="34.0528%" y="639.50">demoparser::parsing::demo_parsing::entities::&lt;impl..</text></g><g><title>protobuf::message::Message::parse_from_bytes (15 samples, 1.76%)</title><rect x="62.9108%" y="613" width="1.7606%" height="15" fill="rgb(248,181,18)" fg:x="536" fg:w="15"/><text x="63.1608%" y="623.50"></text></g><g><title>protobuf::message::Message::parse_from (15 samples, 1.76%)</title><rect x="62.9108%" y="597" width="1.7606%" height="15" fill="rgb(233,39,42)" fg:x="536" fg:w="15"/><text x="63.1608%" y="607.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_PacketEntities as protobuf::message::Message&gt;::merge_from (14 samples, 1.64%)</title><rect x="63.0282%" y="581" width="1.6432%" height="15" fill="rgb(238,110,33)" fg:x="537" fg:w="14"/><text x="63.2782%" y="591.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (2 samples, 0.23%)</title><rect x="64.4366%" y="565" width="0.2347%" height="15" fill="rgb(233,195,10)" fg:x="549" fg:w="2"/><text x="64.6866%" y="575.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (2 samples, 0.23%)</title><rect x="64.4366%" y="549" width="0.2347%" height="15" fill="rgb(254,105,3)" fg:x="549" fg:w="2"/><text x="64.6866%" y="559.50"></text></g><g><title>protobuf::varint::decode::decode_varint32 (2 samples, 0.23%)</title><rect x="64.4366%" y="533" width="0.2347%" height="15" fill="rgb(221,225,9)" fg:x="549" fg:w="2"/><text x="64.6866%" y="543.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (2 samples, 0.23%)</title><rect x="64.4366%" y="517" width="0.2347%" height="15" fill="rgb(224,227,45)" fg:x="549" fg:w="2"/><text x="64.6866%" y="527.50"></text></g><g><title>&lt;u32 as protobuf::varint::decode::DecodeVarint&gt;::from_u64 (1 samples, 0.12%)</title><rect x="64.5540%" y="501" width="0.1174%" height="15" fill="rgb(229,198,43)" fg:x="550" fg:w="1"/><text x="64.8040%" y="511.50"></text></g><g><title>demoparser::parsing::demo_parsing::stringtables::&lt;impl demoparser::parsing::parser::Parser&gt;::create_string_table (1 samples, 0.12%)</title><rect x="64.6714%" y="629" width="0.1174%" height="15" fill="rgb(206,209,35)" fg:x="551" fg:w="1"/><text x="64.9214%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.12%)</title><rect x="64.6714%" y="613" width="0.1174%" height="15" fill="rgb(245,195,53)" fg:x="551" fg:w="1"/><text x="64.9214%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.12%)</title><rect x="64.6714%" y="597" width="0.1174%" height="15" fill="rgb(240,92,26)" fg:x="551" fg:w="1"/><text x="64.9214%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.12%)</title><rect x="64.6714%" y="581" width="0.1174%" height="15" fill="rgb(207,40,23)" fg:x="551" fg:w="1"/><text x="64.9214%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.12%)</title><rect x="64.6714%" y="565" width="0.1174%" height="15" fill="rgb(223,111,35)" fg:x="551" fg:w="1"/><text x="64.9214%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.12%)</title><rect x="64.6714%" y="549" width="0.1174%" height="15" fill="rgb(229,147,28)" fg:x="551" fg:w="1"/><text x="64.9214%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.12%)</title><rect x="64.6714%" y="533" width="0.1174%" height="15" fill="rgb(211,29,28)" fg:x="551" fg:w="1"/><text x="64.9214%" y="543.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.12%)</title><rect x="64.6714%" y="517" width="0.1174%" height="15" fill="rgb(228,72,33)" fg:x="551" fg:w="1"/><text x="64.9214%" y="527.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.12%)</title><rect x="64.6714%" y="501" width="0.1174%" height="15" fill="rgb(205,214,31)" fg:x="551" fg:w="1"/><text x="64.9214%" y="511.50"></text></g><g><title>_mi_memcpy_aligned (1 samples, 0.12%)</title><rect x="64.6714%" y="485" width="0.1174%" height="15" fill="rgb(224,111,15)" fg:x="551" fg:w="1"/><text x="64.9214%" y="495.50"></text></g><g><title>_mi_memcpy (1 samples, 0.12%)</title><rect x="64.6714%" y="469" width="0.1174%" height="15" fill="rgb(253,21,26)" fg:x="551" fg:w="1"/><text x="64.9214%" y="479.50"></text></g><g><title>memcpy (1 samples, 0.12%)</title><rect x="64.6714%" y="453" width="0.1174%" height="15" fill="rgb(245,139,43)" fg:x="551" fg:w="1"/><text x="64.9214%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="64.6714%" y="437" width="0.1174%" height="15" fill="rgb(252,170,7)" fg:x="551" fg:w="1"/><text x="64.9214%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="64.6714%" y="421" width="0.1174%" height="15" fill="rgb(231,118,14)" fg:x="551" fg:w="1"/><text x="64.9214%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.12%)</title><rect x="64.7887%" y="613" width="0.1174%" height="15" fill="rgb(238,83,0)" fg:x="552" fg:w="1"/><text x="65.0387%" y="623.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes (4 samples, 0.47%)</title><rect x="65.0235%" y="565" width="0.4695%" height="15" fill="rgb(221,39,39)" fg:x="554" fg:w="4"/><text x="65.2735%" y="575.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (4 samples, 0.47%)</title><rect x="65.0235%" y="549" width="0.4695%" height="15" fill="rgb(222,119,46)" fg:x="554" fg:w="4"/><text x="65.2735%" y="559.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (4 samples, 0.47%)</title><rect x="65.0235%" y="533" width="0.4695%" height="15" fill="rgb(222,165,49)" fg:x="554" fg:w="4"/><text x="65.2735%" y="543.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (3 samples, 0.35%)</title><rect x="65.1408%" y="517" width="0.3521%" height="15" fill="rgb(219,113,52)" fg:x="555" fg:w="3"/><text x="65.3908%" y="527.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact (3 samples, 0.35%)</title><rect x="65.1408%" y="501" width="0.3521%" height="15" fill="rgb(214,7,15)" fg:x="555" fg:w="3"/><text x="65.3908%" y="511.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::read_bytes (3 samples, 0.35%)</title><rect x="65.1408%" y="485" width="0.3521%" height="15" fill="rgb(235,32,4)" fg:x="555" fg:w="3"/><text x="65.3908%" y="495.50"></text></g><g><title>protobuf::misc::maybe_uninit_write_slice (3 samples, 0.35%)</title><rect x="65.1408%" y="469" width="0.3521%" height="15" fill="rgb(238,90,54)" fg:x="555" fg:w="3"/><text x="65.3908%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (3 samples, 0.35%)</title><rect x="65.1408%" y="453" width="0.3521%" height="15" fill="rgb(213,208,19)" fg:x="555" fg:w="3"/><text x="65.3908%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.35%)</title><rect x="65.1408%" y="437" width="0.3521%" height="15" fill="rgb(233,156,4)" fg:x="555" fg:w="3"/><text x="65.3908%" y="447.50"></text></g><g><title>[libc.so.6] (3 samples, 0.35%)</title><rect x="65.1408%" y="421" width="0.3521%" height="15" fill="rgb(207,194,5)" fg:x="555" fg:w="3"/><text x="65.3908%" y="431.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int32 (1 samples, 0.12%)</title><rect x="65.4930%" y="565" width="0.1174%" height="15" fill="rgb(206,111,30)" fg:x="558" fg:w="1"/><text x="65.7430%" y="575.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_EntityMsg as protobuf::message::Message&gt;::merge_from (7 samples, 0.82%)</title><rect x="65.0235%" y="581" width="0.8216%" height="15" fill="rgb(243,70,54)" fg:x="554" fg:w="7"/><text x="65.2735%" y="591.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (2 samples, 0.23%)</title><rect x="65.6103%" y="565" width="0.2347%" height="15" fill="rgb(242,28,8)" fg:x="559" fg:w="2"/><text x="65.8603%" y="575.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (2 samples, 0.23%)</title><rect x="65.6103%" y="549" width="0.2347%" height="15" fill="rgb(219,106,18)" fg:x="559" fg:w="2"/><text x="65.8603%" y="559.50"></text></g><g><title>protobuf::varint::decode::decode_varint32 (2 samples, 0.23%)</title><rect x="65.6103%" y="533" width="0.2347%" height="15" fill="rgb(244,222,10)" fg:x="559" fg:w="2"/><text x="65.8603%" y="543.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (2 samples, 0.23%)</title><rect x="65.6103%" y="517" width="0.2347%" height="15" fill="rgb(236,179,52)" fg:x="559" fg:w="2"/><text x="65.8603%" y="527.50"></text></g><g><title>&lt;u32 as protobuf::varint::decode::DecodeVarint&gt;::from_u64 (1 samples, 0.12%)</title><rect x="65.7277%" y="501" width="0.1174%" height="15" fill="rgb(213,23,39)" fg:x="560" fg:w="1"/><text x="65.9777%" y="511.50"></text></g><g><title>demoparser::parsing::create_output::&lt;impl demoparser::parsing::parser::Parser&gt;::other_outputs (479 samples, 56.22%)</title><rect x="9.8592%" y="837" width="56.2207%" height="15" fill="rgb(238,48,10)" fg:x="84" fg:w="479"/><text x="10.1092%" y="847.50">demoparser::parsing::create_output::&lt;impl demoparser::parsing::parser::Parser&gt;::other_outputs</text></g><g><title>demoparser::parsing::parser::Parser::parse_blueprints (277 samples, 32.51%)</title><rect x="33.5681%" y="821" width="32.5117%" height="15" fill="rgb(251,196,23)" fg:x="286" fg:w="277"/><text x="33.8181%" y="831.50">demoparser::parsing::parser::Parser::parse_blueprints</text></g><g><title>core::iter::traits::iterator::Iterator::collect (277 samples, 32.51%)</title><rect x="33.5681%" y="805" width="32.5117%" height="15" fill="rgb(250,152,24)" fg:x="286" fg:w="277"/><text x="33.8181%" y="815.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (277 samples, 32.51%)</title><rect x="33.5681%" y="789" width="32.5117%" height="15" fill="rgb(209,150,17)" fg:x="286" fg:w="277"/><text x="33.8181%" y="799.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::F..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (277 samples, 32.51%)</title><rect x="33.5681%" y="773" width="32.5117%" height="15" fill="rgb(234,202,34)" fg:x="286" fg:w="277"/><text x="33.8181%" y="783.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::Sp..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (277 samples, 32.51%)</title><rect x="33.5681%" y="757" width="32.5117%" height="15" fill="rgb(253,148,53)" fg:x="286" fg:w="277"/><text x="33.8181%" y="767.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nes..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (277 samples, 32.51%)</title><rect x="33.5681%" y="741" width="32.5117%" height="15" fill="rgb(218,129,16)" fg:x="286" fg:w="277"/><text x="33.8181%" y="751.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::Spe..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (277 samples, 32.51%)</title><rect x="33.5681%" y="725" width="32.5117%" height="15" fill="rgb(216,85,19)" fg:x="286" fg:w="277"/><text x="33.8181%" y="735.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (277 samples, 32.51%)</title><rect x="33.5681%" y="709" width="32.5117%" height="15" fill="rgb(235,228,7)" fg:x="286" fg:w="277"/><text x="33.8181%" y="719.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::t..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (277 samples, 32.51%)</title><rect x="33.5681%" y="693" width="32.5117%" height="15" fill="rgb(245,175,0)" fg:x="286" fg:w="277"/><text x="33.8181%" y="703.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (277 samples, 32.51%)</title><rect x="33.5681%" y="677" width="32.5117%" height="15" fill="rgb(208,168,36)" fg:x="286" fg:w="277"/><text x="33.8181%" y="687.50">core::iter::adapters::map::map_fold::{{closure}}</text></g><g><title>demoparser::parsing::parser::Parser::parse_blueprints::{{closure}} (276 samples, 32.39%)</title><rect x="33.6854%" y="661" width="32.3944%" height="15" fill="rgb(246,171,24)" fg:x="287" fg:w="276"/><text x="33.9354%" y="671.50">demoparser::parsing::parser::Parser::parse_blueprint..</text></g><g><title>demoparser::parsing::parser::Parser::msg_handler (275 samples, 32.28%)</title><rect x="33.8028%" y="645" width="32.2770%" height="15" fill="rgb(215,142,24)" fg:x="288" fg:w="275"/><text x="34.0528%" y="655.50">demoparser::parsing::parser::Parser::msg_handler</text></g><g><title>demoparser::parsing::demo_parsing::stringtables::&lt;impl demoparser::parsing::parser::Parser&gt;::update_string_table_msg (11 samples, 1.29%)</title><rect x="64.7887%" y="629" width="1.2911%" height="15" fill="rgb(250,187,7)" fg:x="552" fg:w="11"/><text x="65.0387%" y="639.50"></text></g><g><title>protobuf::message::Message::parse_from_bytes (10 samples, 1.17%)</title><rect x="64.9061%" y="613" width="1.1737%" height="15" fill="rgb(228,66,33)" fg:x="553" fg:w="10"/><text x="65.1561%" y="623.50"></text></g><g><title>protobuf::message::Message::parse_from (9 samples, 1.06%)</title><rect x="65.0235%" y="597" width="1.0563%" height="15" fill="rgb(234,215,21)" fg:x="554" fg:w="9"/><text x="65.2735%" y="607.50"></text></g><g><title>protobuf::message::Message::check_initialized (2 samples, 0.23%)</title><rect x="65.8451%" y="581" width="0.2347%" height="15" fill="rgb(222,191,20)" fg:x="561" fg:w="2"/><text x="66.0951%" y="591.50"></text></g><g><title>&lt;M as protobuf::message_dyn::MessageDyn&gt;::is_initialized_dyn (2 samples, 0.23%)</title><rect x="65.8451%" y="565" width="0.2347%" height="15" fill="rgb(245,79,54)" fg:x="561" fg:w="2"/><text x="66.0951%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.12%)</title><rect x="66.0798%" y="677" width="0.1174%" height="15" fill="rgb(240,10,37)" fg:x="563" fg:w="1"/><text x="66.3298%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (1 samples, 0.12%)</title><rect x="66.0798%" y="661" width="0.1174%" height="15" fill="rgb(214,192,32)" fg:x="563" fg:w="1"/><text x="66.3298%" y="671.50"></text></g><g><title>core::ptr::write (1 samples, 0.12%)</title><rect x="66.0798%" y="645" width="0.1174%" height="15" fill="rgb(209,36,54)" fg:x="563" fg:w="1"/><text x="66.3298%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="66.0798%" y="629" width="0.1174%" height="15" fill="rgb(220,10,11)" fg:x="563" fg:w="1"/><text x="66.3298%" y="639.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.12%)</title><rect x="66.3146%" y="629" width="0.1174%" height="15" fill="rgb(221,106,17)" fg:x="565" fg:w="1"/><text x="66.5646%" y="639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.12%)</title><rect x="66.3146%" y="613" width="0.1174%" height="15" fill="rgb(251,142,44)" fg:x="565" fg:w="1"/><text x="66.5646%" y="623.50"></text></g><g><title>[libc.so.6] (2 samples, 0.23%)</title><rect x="66.5493%" y="533" width="0.2347%" height="15" fill="rgb(238,13,15)" fg:x="567" fg:w="2"/><text x="66.7993%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="66.5493%" y="517" width="0.2347%" height="15" fill="rgb(208,107,27)" fg:x="567" fg:w="2"/><text x="66.7993%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.12%)</title><rect x="66.7840%" y="533" width="0.1174%" height="15" fill="rgb(205,136,37)" fg:x="569" fg:w="1"/><text x="67.0340%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.12%)</title><rect x="66.7840%" y="517" width="0.1174%" height="15" fill="rgb(250,205,27)" fg:x="569" fg:w="1"/><text x="67.0340%" y="527.50"></text></g><g><title>[libc.so.6] (25 samples, 2.93%)</title><rect x="67.1362%" y="373" width="2.9343%" height="15" fill="rgb(210,80,43)" fg:x="572" fg:w="25"/><text x="67.3862%" y="383.50">[l..</text></g><g><title>[unknown] (18 samples, 2.11%)</title><rect x="67.9577%" y="357" width="2.1127%" height="15" fill="rgb(247,160,36)" fg:x="579" fg:w="18"/><text x="68.2077%" y="367.50">[..</text></g><g><title>[unknown] (18 samples, 2.11%)</title><rect x="67.9577%" y="341" width="2.1127%" height="15" fill="rgb(234,13,49)" fg:x="579" fg:w="18"/><text x="68.2077%" y="351.50">[..</text></g><g><title>[unknown] (18 samples, 2.11%)</title><rect x="67.9577%" y="325" width="2.1127%" height="15" fill="rgb(234,122,0)" fg:x="579" fg:w="18"/><text x="68.2077%" y="335.50">[..</text></g><g><title>[unknown] (18 samples, 2.11%)</title><rect x="67.9577%" y="309" width="2.1127%" height="15" fill="rgb(207,146,38)" fg:x="579" fg:w="18"/><text x="68.2077%" y="319.50">[..</text></g><g><title>[unknown] (17 samples, 2.00%)</title><rect x="68.0751%" y="293" width="1.9953%" height="15" fill="rgb(207,177,25)" fg:x="580" fg:w="17"/><text x="68.3251%" y="303.50">[..</text></g><g><title>[unknown] (16 samples, 1.88%)</title><rect x="68.1925%" y="277" width="1.8779%" height="15" fill="rgb(211,178,42)" fg:x="581" fg:w="16"/><text x="68.4425%" y="287.50">[..</text></g><g><title>[unknown] (16 samples, 1.88%)</title><rect x="68.1925%" y="261" width="1.8779%" height="15" fill="rgb(230,69,54)" fg:x="581" fg:w="16"/><text x="68.4425%" y="271.50">[..</text></g><g><title>[unknown] (15 samples, 1.76%)</title><rect x="68.3099%" y="245" width="1.7606%" height="15" fill="rgb(214,135,41)" fg:x="582" fg:w="15"/><text x="68.5599%" y="255.50"></text></g><g><title>[unknown] (14 samples, 1.64%)</title><rect x="68.4272%" y="229" width="1.6432%" height="15" fill="rgb(237,67,25)" fg:x="583" fg:w="14"/><text x="68.6772%" y="239.50"></text></g><g><title>[unknown] (13 samples, 1.53%)</title><rect x="68.5446%" y="213" width="1.5258%" height="15" fill="rgb(222,189,50)" fg:x="584" fg:w="13"/><text x="68.7946%" y="223.50"></text></g><g><title>[unknown] (12 samples, 1.41%)</title><rect x="68.6620%" y="197" width="1.4085%" height="15" fill="rgb(245,148,34)" fg:x="585" fg:w="12"/><text x="68.9120%" y="207.50"></text></g><g><title>[unknown] (4 samples, 0.47%)</title><rect x="69.6009%" y="181" width="0.4695%" height="15" fill="rgb(222,29,6)" fg:x="593" fg:w="4"/><text x="69.8509%" y="191.50"></text></g><g><title>mi_page_extend_free (6 samples, 0.70%)</title><rect x="70.0704%" y="309" width="0.7042%" height="15" fill="rgb(221,189,43)" fg:x="597" fg:w="6"/><text x="70.3204%" y="319.50"></text></g><g><title>mi_page_extend_free (6 samples, 0.70%)</title><rect x="70.0704%" y="293" width="0.7042%" height="15" fill="rgb(207,36,27)" fg:x="597" fg:w="6"/><text x="70.3204%" y="303.50"></text></g><g><title>mi_page_free_list_extend (6 samples, 0.70%)</title><rect x="70.0704%" y="277" width="0.7042%" height="15" fill="rgb(217,90,24)" fg:x="597" fg:w="6"/><text x="70.3204%" y="287.50"></text></g><g><title>mi_block_set_next (6 samples, 0.70%)</title><rect x="70.0704%" y="261" width="0.7042%" height="15" fill="rgb(224,66,35)" fg:x="597" fg:w="6"/><text x="70.3204%" y="271.50"></text></g><g><title>mi_block_set_nextx (6 samples, 0.70%)</title><rect x="70.0704%" y="245" width="0.7042%" height="15" fill="rgb(221,13,50)" fg:x="597" fg:w="6"/><text x="70.3204%" y="255.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="70.0704%" y="229" width="0.7042%" height="15" fill="rgb(236,68,49)" fg:x="597" fg:w="6"/><text x="70.3204%" y="239.50"></text></g><g><title>_mi_memcpy_aligned (35 samples, 4.11%)</title><rect x="67.1362%" y="421" width="4.1080%" height="15" fill="rgb(229,146,28)" fg:x="572" fg:w="35"/><text x="67.3862%" y="431.50">_mi_..</text></g><g><title>_mi_memcpy (35 samples, 4.11%)</title><rect x="67.1362%" y="405" width="4.1080%" height="15" fill="rgb(225,31,38)" fg:x="572" fg:w="35"/><text x="67.3862%" y="415.50">_mi_..</text></g><g><title>memcpy (35 samples, 4.11%)</title><rect x="67.1362%" y="389" width="4.1080%" height="15" fill="rgb(250,208,3)" fg:x="572" fg:w="35"/><text x="67.3862%" y="399.50">memc..</text></g><g><title>_mi_malloc_generic (10 samples, 1.17%)</title><rect x="70.0704%" y="373" width="1.1737%" height="15" fill="rgb(246,54,23)" fg:x="597" fg:w="10"/><text x="70.3204%" y="383.50"></text></g><g><title>mi_find_page (10 samples, 1.17%)</title><rect x="70.0704%" y="357" width="1.1737%" height="15" fill="rgb(243,76,11)" fg:x="597" fg:w="10"/><text x="70.3204%" y="367.50"></text></g><g><title>mi_find_free_page (10 samples, 1.17%)</title><rect x="70.0704%" y="341" width="1.1737%" height="15" fill="rgb(245,21,50)" fg:x="597" fg:w="10"/><text x="70.3204%" y="351.50"></text></g><g><title>mi_page_queue_find_free_ex (10 samples, 1.17%)</title><rect x="70.0704%" y="325" width="1.1737%" height="15" fill="rgb(228,9,43)" fg:x="597" fg:w="10"/><text x="70.3204%" y="335.50"></text></g><g><title>mi_page_fresh (4 samples, 0.47%)</title><rect x="70.7746%" y="309" width="0.4695%" height="15" fill="rgb(208,100,47)" fg:x="603" fg:w="4"/><text x="71.0246%" y="319.50"></text></g><g><title>mi_page_fresh_alloc (4 samples, 0.47%)</title><rect x="70.7746%" y="293" width="0.4695%" height="15" fill="rgb(232,26,8)" fg:x="603" fg:w="4"/><text x="71.0246%" y="303.50"></text></g><g><title>mi_page_init (4 samples, 0.47%)</title><rect x="70.7746%" y="277" width="0.4695%" height="15" fill="rgb(216,166,38)" fg:x="603" fg:w="4"/><text x="71.0246%" y="287.50"></text></g><g><title>mi_page_extend_free (4 samples, 0.47%)</title><rect x="70.7746%" y="261" width="0.4695%" height="15" fill="rgb(251,202,51)" fg:x="603" fg:w="4"/><text x="71.0246%" y="271.50"></text></g><g><title>mi_page_extend_free (4 samples, 0.47%)</title><rect x="70.7746%" y="245" width="0.4695%" height="15" fill="rgb(254,216,34)" fg:x="603" fg:w="4"/><text x="71.0246%" y="255.50"></text></g><g><title>mi_page_free_list_extend (4 samples, 0.47%)</title><rect x="70.7746%" y="229" width="0.4695%" height="15" fill="rgb(251,32,27)" fg:x="603" fg:w="4"/><text x="71.0246%" y="239.50"></text></g><g><title>mi_block_set_next (4 samples, 0.47%)</title><rect x="70.7746%" y="213" width="0.4695%" height="15" fill="rgb(208,127,28)" fg:x="603" fg:w="4"/><text x="71.0246%" y="223.50"></text></g><g><title>mi_block_set_nextx (4 samples, 0.47%)</title><rect x="70.7746%" y="197" width="0.4695%" height="15" fill="rgb(224,137,22)" fg:x="603" fg:w="4"/><text x="71.0246%" y="207.50"></text></g><g><title>[unknown] (4 samples, 0.47%)</title><rect x="70.7746%" y="181" width="0.4695%" height="15" fill="rgb(254,70,32)" fg:x="603" fg:w="4"/><text x="71.0246%" y="191.50"></text></g><g><title>[libc.so.6] (3 samples, 0.35%)</title><rect x="71.2441%" y="405" width="0.3521%" height="15" fill="rgb(229,75,37)" fg:x="607" fg:w="3"/><text x="71.4941%" y="415.50"></text></g><g><title>[unknown] (3 samples, 0.35%)</title><rect x="71.2441%" y="389" width="0.3521%" height="15" fill="rgb(252,64,23)" fg:x="607" fg:w="3"/><text x="71.4941%" y="399.50"></text></g><g><title>_mi_deferred_free (1 samples, 0.12%)</title><rect x="71.5962%" y="389" width="0.1174%" height="15" fill="rgb(232,162,48)" fg:x="610" fg:w="1"/><text x="71.8462%" y="399.50"></text></g><g><title>_mi_page_malloc (3 samples, 0.35%)</title><rect x="71.7136%" y="389" width="0.3521%" height="15" fill="rgb(246,160,12)" fg:x="611" fg:w="3"/><text x="71.9636%" y="399.50"></text></g><g><title>_mi_page_free_collect (1 samples, 0.12%)</title><rect x="72.3005%" y="357" width="0.1174%" height="15" fill="rgb(247,166,0)" fg:x="616" fg:w="1"/><text x="72.5505%" y="367.50"></text></g><g><title>mi_page_extend_free (24 samples, 2.82%)</title><rect x="72.6526%" y="341" width="2.8169%" height="15" fill="rgb(249,219,21)" fg:x="619" fg:w="24"/><text x="72.9026%" y="351.50">mi..</text></g><g><title>mi_page_extend_free (24 samples, 2.82%)</title><rect x="72.6526%" y="325" width="2.8169%" height="15" fill="rgb(205,209,3)" fg:x="619" fg:w="24"/><text x="72.9026%" y="335.50">mi..</text></g><g><title>mi_page_free_list_extend (23 samples, 2.70%)</title><rect x="72.7700%" y="309" width="2.6995%" height="15" fill="rgb(243,44,1)" fg:x="620" fg:w="23"/><text x="73.0200%" y="319.50">mi..</text></g><g><title>mi_block_set_next (21 samples, 2.46%)</title><rect x="73.0047%" y="293" width="2.4648%" height="15" fill="rgb(206,159,16)" fg:x="622" fg:w="21"/><text x="73.2547%" y="303.50">mi..</text></g><g><title>mi_block_set_nextx (21 samples, 2.46%)</title><rect x="73.0047%" y="277" width="2.4648%" height="15" fill="rgb(244,77,30)" fg:x="622" fg:w="21"/><text x="73.2547%" y="287.50">mi..</text></g><g><title>[unknown] (19 samples, 2.23%)</title><rect x="73.2394%" y="261" width="2.2300%" height="15" fill="rgb(218,69,12)" fg:x="624" fg:w="19"/><text x="73.4894%" y="271.50">[..</text></g><g><title>[unknown] (19 samples, 2.23%)</title><rect x="73.2394%" y="245" width="2.2300%" height="15" fill="rgb(212,87,7)" fg:x="624" fg:w="19"/><text x="73.4894%" y="255.50">[..</text></g><g><title>[unknown] (17 samples, 2.00%)</title><rect x="73.4742%" y="229" width="1.9953%" height="15" fill="rgb(245,114,25)" fg:x="626" fg:w="17"/><text x="73.7242%" y="239.50">[..</text></g><g><title>[unknown] (17 samples, 2.00%)</title><rect x="73.4742%" y="213" width="1.9953%" height="15" fill="rgb(210,61,42)" fg:x="626" fg:w="17"/><text x="73.7242%" y="223.50">[..</text></g><g><title>[unknown] (17 samples, 2.00%)</title><rect x="73.4742%" y="197" width="1.9953%" height="15" fill="rgb(211,52,33)" fg:x="626" fg:w="17"/><text x="73.7242%" y="207.50">[..</text></g><g><title>[unknown] (17 samples, 2.00%)</title><rect x="73.4742%" y="181" width="1.9953%" height="15" fill="rgb(234,58,33)" fg:x="626" fg:w="17"/><text x="73.7242%" y="191.50">[..</text></g><g><title>[unknown] (17 samples, 2.00%)</title><rect x="73.4742%" y="165" width="1.9953%" height="15" fill="rgb(220,115,36)" fg:x="626" fg:w="17"/><text x="73.7242%" y="175.50">[..</text></g><g><title>[unknown] (16 samples, 1.88%)</title><rect x="73.5915%" y="149" width="1.8779%" height="15" fill="rgb(243,153,54)" fg:x="627" fg:w="16"/><text x="73.8415%" y="159.50">[..</text></g><g><title>[unknown] (15 samples, 1.76%)</title><rect x="73.7089%" y="133" width="1.7606%" height="15" fill="rgb(251,47,18)" fg:x="628" fg:w="15"/><text x="73.9589%" y="143.50"></text></g><g><title>[unknown] (14 samples, 1.64%)</title><rect x="73.8263%" y="117" width="1.6432%" height="15" fill="rgb(242,102,42)" fg:x="629" fg:w="14"/><text x="74.0763%" y="127.50"></text></g><g><title>[unknown] (13 samples, 1.53%)</title><rect x="73.9437%" y="101" width="1.5258%" height="15" fill="rgb(234,31,38)" fg:x="630" fg:w="13"/><text x="74.1937%" y="111.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="75.2347%" y="85" width="0.2347%" height="15" fill="rgb(221,117,51)" fg:x="641" fg:w="2"/><text x="75.4847%" y="95.50"></text></g><g><title>mi_page_init (6 samples, 0.70%)</title><rect x="75.4695%" y="309" width="0.7042%" height="15" fill="rgb(212,20,18)" fg:x="643" fg:w="6"/><text x="75.7195%" y="319.50"></text></g><g><title>mi_page_extend_free (5 samples, 0.59%)</title><rect x="75.5869%" y="293" width="0.5869%" height="15" fill="rgb(245,133,36)" fg:x="644" fg:w="5"/><text x="75.8369%" y="303.50"></text></g><g><title>mi_page_extend_free (5 samples, 0.59%)</title><rect x="75.5869%" y="277" width="0.5869%" height="15" fill="rgb(212,6,19)" fg:x="644" fg:w="5"/><text x="75.8369%" y="287.50"></text></g><g><title>mi_page_free_list_extend (5 samples, 0.59%)</title><rect x="75.5869%" y="261" width="0.5869%" height="15" fill="rgb(218,1,36)" fg:x="644" fg:w="5"/><text x="75.8369%" y="271.50"></text></g><g><title>mi_block_set_next (4 samples, 0.47%)</title><rect x="75.7042%" y="245" width="0.4695%" height="15" fill="rgb(246,84,54)" fg:x="645" fg:w="4"/><text x="75.9542%" y="255.50"></text></g><g><title>mi_block_set_nextx (4 samples, 0.47%)</title><rect x="75.7042%" y="229" width="0.4695%" height="15" fill="rgb(242,110,6)" fg:x="645" fg:w="4"/><text x="75.9542%" y="239.50"></text></g><g><title>[unknown] (4 samples, 0.47%)</title><rect x="75.7042%" y="213" width="0.4695%" height="15" fill="rgb(214,47,5)" fg:x="645" fg:w="4"/><text x="75.9542%" y="223.50"></text></g><g><title>[unknown] (4 samples, 0.47%)</title><rect x="75.7042%" y="197" width="0.4695%" height="15" fill="rgb(218,159,25)" fg:x="645" fg:w="4"/><text x="75.9542%" y="207.50"></text></g><g><title>[unknown] (4 samples, 0.47%)</title><rect x="75.7042%" y="181" width="0.4695%" height="15" fill="rgb(215,211,28)" fg:x="645" fg:w="4"/><text x="75.9542%" y="191.50"></text></g><g><title>[unknown] (4 samples, 0.47%)</title><rect x="75.7042%" y="165" width="0.4695%" height="15" fill="rgb(238,59,32)" fg:x="645" fg:w="4"/><text x="75.9542%" y="175.50"></text></g><g><title>[unknown] (4 samples, 0.47%)</title><rect x="75.7042%" y="149" width="0.4695%" height="15" fill="rgb(226,82,3)" fg:x="645" fg:w="4"/><text x="75.9542%" y="159.50"></text></g><g><title>[unknown] (4 samples, 0.47%)</title><rect x="75.7042%" y="133" width="0.4695%" height="15" fill="rgb(240,164,32)" fg:x="645" fg:w="4"/><text x="75.9542%" y="143.50"></text></g><g><title>[unknown] (4 samples, 0.47%)</title><rect x="75.7042%" y="117" width="0.4695%" height="15" fill="rgb(232,46,7)" fg:x="645" fg:w="4"/><text x="75.9542%" y="127.50"></text></g><g><title>[unknown] (4 samples, 0.47%)</title><rect x="75.7042%" y="101" width="0.4695%" height="15" fill="rgb(229,129,53)" fg:x="645" fg:w="4"/><text x="75.9542%" y="111.50"></text></g><g><title>[unknown] (3 samples, 0.35%)</title><rect x="75.8216%" y="85" width="0.3521%" height="15" fill="rgb(234,188,29)" fg:x="646" fg:w="3"/><text x="76.0716%" y="95.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="75.9390%" y="69" width="0.2347%" height="15" fill="rgb(246,141,4)" fg:x="647" fg:w="2"/><text x="76.1890%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="76.0563%" y="53" width="0.1174%" height="15" fill="rgb(229,23,39)" fg:x="648" fg:w="1"/><text x="76.3063%" y="63.50"></text></g><g><title>_mi_malloc_generic (40 samples, 4.69%)</title><rect x="71.5962%" y="405" width="4.6948%" height="15" fill="rgb(206,12,3)" fg:x="610" fg:w="40"/><text x="71.8462%" y="415.50">_mi_m..</text></g><g><title>mi_find_page (36 samples, 4.23%)</title><rect x="72.0657%" y="389" width="4.2254%" height="15" fill="rgb(252,226,20)" fg:x="614" fg:w="36"/><text x="72.3157%" y="399.50">mi_fi..</text></g><g><title>mi_find_free_page (36 samples, 4.23%)</title><rect x="72.0657%" y="373" width="4.2254%" height="15" fill="rgb(216,123,35)" fg:x="614" fg:w="36"/><text x="72.3157%" y="383.50">mi_fi..</text></g><g><title>mi_page_queue_find_free_ex (33 samples, 3.87%)</title><rect x="72.4178%" y="357" width="3.8732%" height="15" fill="rgb(212,68,40)" fg:x="617" fg:w="33"/><text x="72.6678%" y="367.50">mi_p..</text></g><g><title>mi_page_fresh (7 samples, 0.82%)</title><rect x="75.4695%" y="341" width="0.8216%" height="15" fill="rgb(254,125,32)" fg:x="643" fg:w="7"/><text x="75.7195%" y="351.50"></text></g><g><title>mi_page_fresh_alloc (7 samples, 0.82%)</title><rect x="75.4695%" y="325" width="0.8216%" height="15" fill="rgb(253,97,22)" fg:x="643" fg:w="7"/><text x="75.7195%" y="335.50"></text></g><g><title>mi_segments_page_alloc (1 samples, 0.12%)</title><rect x="76.1737%" y="309" width="0.1174%" height="15" fill="rgb(241,101,14)" fg:x="649" fg:w="1"/><text x="76.4237%" y="319.50"></text></g><g><title>mi_segments_page_find_and_allocate (1 samples, 0.12%)</title><rect x="76.1737%" y="293" width="0.1174%" height="15" fill="rgb(238,103,29)" fg:x="649" fg:w="1"/><text x="76.4237%" y="303.50"></text></g><g><title>mi_segment_slice_split (1 samples, 0.12%)</title><rect x="76.1737%" y="277" width="0.1174%" height="15" fill="rgb(233,195,47)" fg:x="649" fg:w="1"/><text x="76.4237%" y="287.50"></text></g><g><title>mi_segment_span_free (1 samples, 0.12%)</title><rect x="76.1737%" y="261" width="0.1174%" height="15" fill="rgb(246,218,30)" fg:x="649" fg:w="1"/><text x="76.4237%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (79 samples, 9.27%)</title><rect x="67.1362%" y="501" width="9.2723%" height="15" fill="rgb(219,145,47)" fg:x="572" fg:w="79"/><text x="67.3862%" y="511.50">alloc::raw_ve..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (79 samples, 9.27%)</title><rect x="67.1362%" y="485" width="9.2723%" height="15" fill="rgb(243,12,26)" fg:x="572" fg:w="79"/><text x="67.3862%" y="495.50">&lt;alloc::alloc..</text></g><g><title>alloc::alloc::Global::grow_impl (79 samples, 9.27%)</title><rect x="67.1362%" y="469" width="9.2723%" height="15" fill="rgb(214,87,16)" fg:x="572" fg:w="79"/><text x="67.3862%" y="479.50">alloc::alloc:..</text></g><g><title>alloc::alloc::realloc (79 samples, 9.27%)</title><rect x="67.1362%" y="453" width="9.2723%" height="15" fill="rgb(208,99,42)" fg:x="572" fg:w="79"/><text x="67.3862%" y="463.50">alloc::alloc:..</text></g><g><title>_mi_heap_realloc_zero (79 samples, 9.27%)</title><rect x="67.1362%" y="437" width="9.2723%" height="15" fill="rgb(253,99,2)" fg:x="572" fg:w="79"/><text x="67.3862%" y="447.50">_mi_heap_real..</text></g><g><title>mi_heap_malloc (44 samples, 5.16%)</title><rect x="71.2441%" y="421" width="5.1643%" height="15" fill="rgb(220,168,23)" fg:x="607" fg:w="44"/><text x="71.4941%" y="431.50">mi_hea..</text></g><g><title>mi_heap_malloc_small (1 samples, 0.12%)</title><rect x="76.2911%" y="405" width="0.1174%" height="15" fill="rgb(242,38,24)" fg:x="650" fg:w="1"/><text x="76.5411%" y="415.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.12%)</title><rect x="76.2911%" y="389" width="0.1174%" height="15" fill="rgb(225,182,9)" fg:x="650" fg:w="1"/><text x="76.5411%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (85 samples, 9.98%)</title><rect x="66.5493%" y="613" width="9.9765%" height="15" fill="rgb(243,178,37)" fg:x="567" fg:w="85"/><text x="66.7993%" y="623.50">&lt;alloc::vec::V..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (85 samples, 9.98%)</title><rect x="66.5493%" y="597" width="9.9765%" height="15" fill="rgb(232,139,19)" fg:x="567" fg:w="85"/><text x="66.7993%" y="607.50">&lt;alloc::vec::V..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (85 samples, 9.98%)</title><rect x="66.5493%" y="581" width="9.9765%" height="15" fill="rgb(225,201,24)" fg:x="567" fg:w="85"/><text x="66.7993%" y="591.50">alloc::vec::Ve..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (85 samples, 9.98%)</title><rect x="66.5493%" y="565" width="9.9765%" height="15" fill="rgb(221,47,46)" fg:x="567" fg:w="85"/><text x="66.7993%" y="575.50">alloc::vec::Ve..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (85 samples, 9.98%)</title><rect x="66.5493%" y="549" width="9.9765%" height="15" fill="rgb(249,23,13)" fg:x="567" fg:w="85"/><text x="66.7993%" y="559.50">alloc::raw_vec..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (82 samples, 9.62%)</title><rect x="66.9014%" y="533" width="9.6244%" height="15" fill="rgb(219,9,5)" fg:x="570" fg:w="82"/><text x="67.1514%" y="543.50">alloc::raw_vec..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (80 samples, 9.39%)</title><rect x="67.1362%" y="517" width="9.3897%" height="15" fill="rgb(254,171,16)" fg:x="572" fg:w="80"/><text x="67.3862%" y="527.50">alloc::raw_ve..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.12%)</title><rect x="76.4085%" y="501" width="0.1174%" height="15" fill="rgb(230,171,20)" fg:x="651" fg:w="1"/><text x="76.6585%" y="511.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.12%)</title><rect x="76.4085%" y="485" width="0.1174%" height="15" fill="rgb(210,71,41)" fg:x="651" fg:w="1"/><text x="76.6585%" y="495.50"></text></g><g><title>[libc.so.6] (14 samples, 1.64%)</title><rect x="76.5258%" y="613" width="1.6432%" height="15" fill="rgb(206,173,20)" fg:x="652" fg:w="14"/><text x="76.7758%" y="623.50"></text></g><g><title>[unknown] (13 samples, 1.53%)</title><rect x="76.6432%" y="597" width="1.5258%" height="15" fill="rgb(233,88,34)" fg:x="653" fg:w="13"/><text x="76.8932%" y="607.50"></text></g><g><title>[unknown] (12 samples, 1.41%)</title><rect x="76.7606%" y="581" width="1.4085%" height="15" fill="rgb(223,209,46)" fg:x="654" fg:w="12"/><text x="77.0106%" y="591.50"></text></g><g><title>[unknown] (12 samples, 1.41%)</title><rect x="76.7606%" y="565" width="1.4085%" height="15" fill="rgb(250,43,18)" fg:x="654" fg:w="12"/><text x="77.0106%" y="575.50"></text></g><g><title>[unknown] (12 samples, 1.41%)</title><rect x="76.7606%" y="549" width="1.4085%" height="15" fill="rgb(208,13,10)" fg:x="654" fg:w="12"/><text x="77.0106%" y="559.50"></text></g><g><title>[unknown] (12 samples, 1.41%)</title><rect x="76.7606%" y="533" width="1.4085%" height="15" fill="rgb(212,200,36)" fg:x="654" fg:w="12"/><text x="77.0106%" y="543.50"></text></g><g><title>[unknown] (9 samples, 1.06%)</title><rect x="77.1127%" y="517" width="1.0563%" height="15" fill="rgb(225,90,30)" fg:x="657" fg:w="9"/><text x="77.3627%" y="527.50"></text></g><g><title>[unknown] (9 samples, 1.06%)</title><rect x="77.1127%" y="501" width="1.0563%" height="15" fill="rgb(236,182,39)" fg:x="657" fg:w="9"/><text x="77.3627%" y="511.50"></text></g><g><title>[unknown] (9 samples, 1.06%)</title><rect x="77.1127%" y="485" width="1.0563%" height="15" fill="rgb(212,144,35)" fg:x="657" fg:w="9"/><text x="77.3627%" y="495.50"></text></g><g><title>[unknown] (9 samples, 1.06%)</title><rect x="77.1127%" y="469" width="1.0563%" height="15" fill="rgb(228,63,44)" fg:x="657" fg:w="9"/><text x="77.3627%" y="479.50"></text></g><g><title>[unknown] (7 samples, 0.82%)</title><rect x="77.3474%" y="453" width="0.8216%" height="15" fill="rgb(228,109,6)" fg:x="659" fg:w="7"/><text x="77.5974%" y="463.50"></text></g><g><title>[unknown] (7 samples, 0.82%)</title><rect x="77.3474%" y="437" width="0.8216%" height="15" fill="rgb(238,117,24)" fg:x="659" fg:w="7"/><text x="77.5974%" y="447.50"></text></g><g><title>[unknown] (3 samples, 0.35%)</title><rect x="77.8169%" y="421" width="0.3521%" height="15" fill="rgb(242,26,26)" fg:x="663" fg:w="3"/><text x="78.0669%" y="431.50"></text></g><g><title>__rg_dealloc (1 samples, 0.12%)</title><rect x="78.1690%" y="613" width="0.1174%" height="15" fill="rgb(221,92,48)" fg:x="666" fg:w="1"/><text x="78.4190%" y="623.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.12%)</title><rect x="78.1690%" y="597" width="0.1174%" height="15" fill="rgb(209,209,32)" fg:x="666" fg:w="1"/><text x="78.4190%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.12%)</title><rect x="78.2864%" y="613" width="0.1174%" height="15" fill="rgb(221,70,22)" fg:x="667" fg:w="1"/><text x="78.5364%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.12%)</title><rect x="78.2864%" y="597" width="0.1174%" height="15" fill="rgb(248,145,5)" fg:x="667" fg:w="1"/><text x="78.5364%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.12%)</title><rect x="78.2864%" y="581" width="0.1174%" height="15" fill="rgb(226,116,26)" fg:x="667" fg:w="1"/><text x="78.5364%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.12%)</title><rect x="78.2864%" y="565" width="0.1174%" height="15" fill="rgb(244,5,17)" fg:x="667" fg:w="1"/><text x="78.5364%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.12%)</title><rect x="78.2864%" y="549" width="0.1174%" height="15" fill="rgb(252,159,33)" fg:x="667" fg:w="1"/><text x="78.5364%" y="559.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.12%)</title><rect x="78.2864%" y="533" width="0.1174%" height="15" fill="rgb(206,71,0)" fg:x="667" fg:w="1"/><text x="78.5364%" y="543.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.12%)</title><rect x="78.2864%" y="517" width="0.1174%" height="15" fill="rgb(233,118,54)" fg:x="667" fg:w="1"/><text x="78.5364%" y="527.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="78.2864%" y="501" width="0.1174%" height="15" fill="rgb(234,83,48)" fg:x="667" fg:w="1"/><text x="78.5364%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="78.2864%" y="485" width="0.1174%" height="15" fill="rgb(228,3,54)" fg:x="667" fg:w="1"/><text x="78.5364%" y="495.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="80.2817%" y="597" width="0.1174%" height="15" fill="rgb(226,155,13)" fg:x="684" fg:w="1"/><text x="80.5317%" y="607.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (3 samples, 0.35%)</title><rect x="80.3991%" y="597" width="0.3521%" height="15" fill="rgb(241,28,37)" fg:x="685" fg:w="3"/><text x="80.6491%" y="607.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::len (1 samples, 0.12%)</title><rect x="80.6338%" y="581" width="0.1174%" height="15" fill="rgb(233,93,10)" fg:x="687" fg:w="1"/><text x="80.8838%" y="591.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (1 samples, 0.12%)</title><rect x="80.6338%" y="565" width="0.1174%" height="15" fill="rgb(225,113,19)" fg:x="687" fg:w="1"/><text x="80.8838%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.12%)</title><rect x="81.1033%" y="549" width="0.1174%" height="15" fill="rgb(241,2,18)" fg:x="691" fg:w="1"/><text x="81.3533%" y="559.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.12%)</title><rect x="81.1033%" y="533" width="0.1174%" height="15" fill="rgb(228,207,21)" fg:x="691" fg:w="1"/><text x="81.3533%" y="543.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.12%)</title><rect x="81.1033%" y="517" width="0.1174%" height="15" fill="rgb(213,211,35)" fg:x="691" fg:w="1"/><text x="81.3533%" y="527.50"></text></g><g><title>__rg_realloc (1 samples, 0.12%)</title><rect x="81.3380%" y="485" width="0.1174%" height="15" fill="rgb(209,83,10)" fg:x="693" fg:w="1"/><text x="81.5880%" y="495.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::realloc (1 samples, 0.12%)</title><rect x="81.3380%" y="469" width="0.1174%" height="15" fill="rgb(209,164,1)" fg:x="693" fg:w="1"/><text x="81.5880%" y="479.50"></text></g><g><title>mimalloc::may_use_unaligned_api (1 samples, 0.12%)</title><rect x="81.3380%" y="453" width="0.1174%" height="15" fill="rgb(213,184,43)" fg:x="693" fg:w="1"/><text x="81.5880%" y="463.50"></text></g><g><title>__rust_realloc (1 samples, 0.12%)</title><rect x="81.4554%" y="485" width="0.1174%" height="15" fill="rgb(231,61,34)" fg:x="694" fg:w="1"/><text x="81.7054%" y="495.50"></text></g><g><title>_mi_memcpy_aligned (4 samples, 0.47%)</title><rect x="81.6901%" y="469" width="0.4695%" height="15" fill="rgb(235,75,3)" fg:x="696" fg:w="4"/><text x="81.9401%" y="479.50"></text></g><g><title>_mi_memcpy (4 samples, 0.47%)</title><rect x="81.6901%" y="453" width="0.4695%" height="15" fill="rgb(220,106,47)" fg:x="696" fg:w="4"/><text x="81.9401%" y="463.50"></text></g><g><title>memcpy (4 samples, 0.47%)</title><rect x="81.6901%" y="437" width="0.4695%" height="15" fill="rgb(210,196,33)" fg:x="696" fg:w="4"/><text x="81.9401%" y="447.50"></text></g><g><title>[libc.so.6] (4 samples, 0.47%)</title><rect x="81.6901%" y="421" width="0.4695%" height="15" fill="rgb(229,154,42)" fg:x="696" fg:w="4"/><text x="81.9401%" y="431.50"></text></g><g><title>mi_free (2 samples, 0.23%)</title><rect x="82.1596%" y="469" width="0.2347%" height="15" fill="rgb(228,114,26)" fg:x="700" fg:w="2"/><text x="82.4096%" y="479.50"></text></g><g><title>mi_checked_ptr_segment (1 samples, 0.12%)</title><rect x="82.2770%" y="453" width="0.1174%" height="15" fill="rgb(208,144,1)" fg:x="701" fg:w="1"/><text x="82.5270%" y="463.50"></text></g><g><title>_mi_malloc_generic (2 samples, 0.23%)</title><rect x="82.5117%" y="453" width="0.2347%" height="15" fill="rgb(239,112,37)" fg:x="703" fg:w="2"/><text x="82.7617%" y="463.50"></text></g><g><title>mi_find_page (2 samples, 0.23%)</title><rect x="82.5117%" y="437" width="0.2347%" height="15" fill="rgb(210,96,50)" fg:x="703" fg:w="2"/><text x="82.7617%" y="447.50"></text></g><g><title>mi_find_free_page (2 samples, 0.23%)</title><rect x="82.5117%" y="421" width="0.2347%" height="15" fill="rgb(222,178,2)" fg:x="703" fg:w="2"/><text x="82.7617%" y="431.50"></text></g><g><title>_mi_page_free_collect (2 samples, 0.23%)</title><rect x="82.5117%" y="405" width="0.2347%" height="15" fill="rgb(226,74,18)" fg:x="703" fg:w="2"/><text x="82.7617%" y="415.50"></text></g><g><title>_mi_heap_realloc_zero (11 samples, 1.29%)</title><rect x="81.5728%" y="485" width="1.2911%" height="15" fill="rgb(225,67,54)" fg:x="695" fg:w="11"/><text x="81.8228%" y="495.50"></text></g><g><title>mi_heap_malloc (4 samples, 0.47%)</title><rect x="82.3944%" y="469" width="0.4695%" height="15" fill="rgb(251,92,32)" fg:x="702" fg:w="4"/><text x="82.6444%" y="479.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.12%)</title><rect x="82.7465%" y="453" width="0.1174%" height="15" fill="rgb(228,149,22)" fg:x="705" fg:w="1"/><text x="82.9965%" y="463.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.12%)</title><rect x="82.7465%" y="437" width="0.1174%" height="15" fill="rgb(243,54,13)" fg:x="705" fg:w="1"/><text x="82.9965%" y="447.50"></text></g><g><title>mi_heap_realloc (1 samples, 0.12%)</title><rect x="82.8638%" y="485" width="0.1174%" height="15" fill="rgb(243,180,28)" fg:x="706" fg:w="1"/><text x="83.1138%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (15 samples, 1.76%)</title><rect x="81.3380%" y="533" width="1.7606%" height="15" fill="rgb(208,167,24)" fg:x="693" fg:w="15"/><text x="81.5880%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (15 samples, 1.76%)</title><rect x="81.3380%" y="517" width="1.7606%" height="15" fill="rgb(245,73,45)" fg:x="693" fg:w="15"/><text x="81.5880%" y="527.50"></text></g><g><title>alloc::alloc::realloc (15 samples, 1.76%)</title><rect x="81.3380%" y="501" width="1.7606%" height="15" fill="rgb(237,203,48)" fg:x="693" fg:w="15"/><text x="81.5880%" y="511.50"></text></g><g><title>mi_realloc (1 samples, 0.12%)</title><rect x="82.9812%" y="485" width="0.1174%" height="15" fill="rgb(211,197,16)" fg:x="707" fg:w="1"/><text x="83.2312%" y="495.50"></text></g><g><title>mi_get_default_heap (1 samples, 0.12%)</title><rect x="82.9812%" y="469" width="0.1174%" height="15" fill="rgb(243,99,51)" fg:x="707" fg:w="1"/><text x="83.2312%" y="479.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.12%)</title><rect x="83.0986%" y="533" width="0.1174%" height="15" fill="rgb(215,123,29)" fg:x="708" fg:w="1"/><text x="83.3486%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (18 samples, 2.11%)</title><rect x="81.2207%" y="549" width="2.1127%" height="15" fill="rgb(239,186,37)" fg:x="692" fg:w="18"/><text x="81.4707%" y="559.50">a..</text></g><g><title>mi_malloc (1 samples, 0.12%)</title><rect x="83.2160%" y="533" width="0.1174%" height="15" fill="rgb(252,136,39)" fg:x="709" fg:w="1"/><text x="83.4660%" y="543.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.12%)</title><rect x="83.2160%" y="517" width="0.1174%" height="15" fill="rgb(223,213,32)" fg:x="709" fg:w="1"/><text x="83.4660%" y="527.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.12%)</title><rect x="83.2160%" y="501" width="0.1174%" height="15" fill="rgb(233,115,5)" fg:x="709" fg:w="1"/><text x="83.4660%" y="511.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.12%)</title><rect x="83.2160%" y="485" width="0.1174%" height="15" fill="rgb(207,226,44)" fg:x="709" fg:w="1"/><text x="83.4660%" y="495.50"></text></g><g><title>core::cmp::max (1 samples, 0.12%)</title><rect x="83.3333%" y="549" width="0.1174%" height="15" fill="rgb(208,126,0)" fg:x="710" fg:w="1"/><text x="83.5833%" y="559.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.12%)</title><rect x="83.3333%" y="533" width="0.1174%" height="15" fill="rgb(244,66,21)" fg:x="710" fg:w="1"/><text x="83.5833%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (23 samples, 2.70%)</title><rect x="80.8685%" y="581" width="2.6995%" height="15" fill="rgb(222,97,12)" fg:x="689" fg:w="23"/><text x="81.1185%" y="591.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (23 samples, 2.70%)</title><rect x="80.8685%" y="565" width="2.6995%" height="15" fill="rgb(219,213,19)" fg:x="689" fg:w="23"/><text x="81.1185%" y="575.50">al..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.12%)</title><rect x="83.4507%" y="549" width="0.1174%" height="15" fill="rgb(252,169,30)" fg:x="711" fg:w="1"/><text x="83.7007%" y="559.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.12%)</title><rect x="83.4507%" y="533" width="0.1174%" height="15" fill="rgb(206,32,51)" fg:x="711" fg:w="1"/><text x="83.7007%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (23 samples, 2.70%)</title><rect x="83.5681%" y="581" width="2.6995%" height="15" fill="rgb(250,172,42)" fg:x="712" fg:w="23"/><text x="83.8181%" y="591.50">co..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (23 samples, 2.70%)</title><rect x="83.5681%" y="565" width="2.6995%" height="15" fill="rgb(209,34,43)" fg:x="712" fg:w="23"/><text x="83.8181%" y="575.50">co..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (64 samples, 7.51%)</title><rect x="80.7512%" y="597" width="7.5117%" height="15" fill="rgb(223,11,35)" fg:x="688" fg:w="64"/><text x="81.0012%" y="607.50">alloc::vec..</text></g><g><title>core::ptr::write (17 samples, 2.00%)</title><rect x="86.2676%" y="581" width="1.9953%" height="15" fill="rgb(251,219,26)" fg:x="735" fg:w="17"/><text x="86.5176%" y="591.50">c..</text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_boolie (3 samples, 0.35%)</title><rect x="88.9671%" y="565" width="0.3521%" height="15" fill="rgb(231,119,3)" fg:x="758" fg:w="3"/><text x="89.2171%" y="575.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bit (3 samples, 0.35%)</title><rect x="88.9671%" y="549" width="0.3521%" height="15" fill="rgb(216,97,11)" fg:x="758" fg:w="3"/><text x="89.2171%" y="559.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (3 samples, 0.35%)</title><rect x="88.9671%" y="533" width="0.3521%" height="15" fill="rgb(223,59,9)" fg:x="758" fg:w="3"/><text x="89.2171%" y="543.50"></text></g><g><title>bitter::LittleEndianReader::refill (1 samples, 0.12%)</title><rect x="89.2019%" y="517" width="0.1174%" height="15" fill="rgb(233,93,31)" fg:x="760" fg:w="1"/><text x="89.4519%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.12%)</title><rect x="89.2019%" y="501" width="0.1174%" height="15" fill="rgb(239,81,33)" fg:x="760" fg:w="1"/><text x="89.4519%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.12%)</title><rect x="89.2019%" y="485" width="0.1174%" height="15" fill="rgb(213,120,34)" fg:x="760" fg:w="1"/><text x="89.4519%" y="495.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::peek (1 samples, 0.12%)</title><rect x="90.1408%" y="533" width="0.1174%" height="15" fill="rgb(243,49,53)" fg:x="768" fg:w="1"/><text x="90.3908%" y="543.50"></text></g><g><title>bitter::LittleEndianReader::peek_ (1 samples, 0.12%)</title><rect x="90.1408%" y="517" width="0.1174%" height="15" fill="rgb(247,216,33)" fg:x="768" fg:w="1"/><text x="90.3908%" y="527.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_inx (17 samples, 2.00%)</title><rect x="88.6150%" y="581" width="1.9953%" height="15" fill="rgb(226,26,14)" fg:x="755" fg:w="17"/><text x="88.8650%" y="591.50">d..</text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (11 samples, 1.29%)</title><rect x="89.3192%" y="565" width="1.2911%" height="15" fill="rgb(215,49,53)" fg:x="761" fg:w="11"/><text x="89.5692%" y="575.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (11 samples, 1.29%)</title><rect x="89.3192%" y="549" width="1.2911%" height="15" fill="rgb(245,162,40)" fg:x="761" fg:w="11"/><text x="89.5692%" y="559.50"></text></g><g><title>bitter::LittleEndianReader::refill (3 samples, 0.35%)</title><rect x="90.2582%" y="533" width="0.3521%" height="15" fill="rgb(229,68,17)" fg:x="769" fg:w="3"/><text x="90.5082%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.23%)</title><rect x="90.3756%" y="517" width="0.2347%" height="15" fill="rgb(213,182,10)" fg:x="770" fg:w="2"/><text x="90.6256%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.23%)</title><rect x="90.3756%" y="501" width="0.2347%" height="15" fill="rgb(245,125,30)" fg:x="770" fg:w="2"/><text x="90.6256%" y="511.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::parse_indicies (28 samples, 3.29%)</title><rect x="88.2629%" y="597" width="3.2864%" height="15" fill="rgb(232,202,2)" fg:x="752" fg:w="28"/><text x="88.5129%" y="607.50">dem..</text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (8 samples, 0.94%)</title><rect x="90.6103%" y="581" width="0.9390%" height="15" fill="rgb(237,140,51)" fg:x="772" fg:w="8"/><text x="90.8603%" y="591.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (4 samples, 0.47%)</title><rect x="91.0798%" y="565" width="0.4695%" height="15" fill="rgb(236,157,25)" fg:x="776" fg:w="4"/><text x="91.3298%" y="575.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (2 samples, 0.23%)</title><rect x="91.3146%" y="549" width="0.2347%" height="15" fill="rgb(219,209,0)" fg:x="778" fg:w="2"/><text x="91.5646%" y="559.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_array (1 samples, 0.12%)</title><rect x="92.8404%" y="581" width="0.1174%" height="15" fill="rgb(240,116,54)" fg:x="791" fg:w="1"/><text x="93.0904%" y="591.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1 samples, 0.12%)</title><rect x="92.8404%" y="565" width="0.1174%" height="15" fill="rgb(216,10,36)" fg:x="791" fg:w="1"/><text x="93.0904%" y="575.50"></text></g><g><title>protobuf::text_format::print::fmt (1 samples, 0.12%)</title><rect x="92.8404%" y="549" width="0.1174%" height="15" fill="rgb(222,72,44)" fg:x="791" fg:w="1"/><text x="93.0904%" y="559.50"></text></g><g><title>protobuf::text_format::print::print_to_string_internal (1 samples, 0.12%)</title><rect x="92.8404%" y="533" width="0.1174%" height="15" fill="rgb(232,159,9)" fg:x="791" fg:w="1"/><text x="93.0904%" y="543.50"></text></g><g><title>protobuf::text_format::print::print_to_internal (1 samples, 0.12%)</title><rect x="92.8404%" y="517" width="0.1174%" height="15" fill="rgb(210,39,32)" fg:x="791" fg:w="1"/><text x="93.0904%" y="527.50"></text></g><g><title>protobuf::reflect::field::FieldDescriptor::name (1 samples, 0.12%)</title><rect x="92.8404%" y="501" width="0.1174%" height="15" fill="rgb(216,194,45)" fg:x="791" fg:w="1"/><text x="93.0904%" y="511.50"></text></g><g><title>protobuf::descriptor::FieldDescriptorProto::name (1 samples, 0.12%)</title><rect x="92.8404%" y="485" width="0.1174%" height="15" fill="rgb(218,18,35)" fg:x="791" fg:w="1"/><text x="93.0904%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.12%)</title><rect x="92.8404%" y="469" width="0.1174%" height="15" fill="rgb(207,83,51)" fg:x="791" fg:w="1"/><text x="93.0904%" y="479.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_special_float (2 samples, 0.23%)</title><rect x="93.3099%" y="565" width="0.2347%" height="15" fill="rgb(225,63,43)" fg:x="795" fg:w="2"/><text x="93.5599%" y="575.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_f32 (1 samples, 0.12%)</title><rect x="93.4272%" y="549" width="0.1174%" height="15" fill="rgb(207,57,36)" fg:x="796" fg:w="1"/><text x="93.6772%" y="559.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_u32 (1 samples, 0.12%)</title><rect x="93.4272%" y="533" width="0.1174%" height="15" fill="rgb(216,99,33)" fg:x="796" fg:w="1"/><text x="93.6772%" y="543.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.12%)</title><rect x="93.4272%" y="517" width="0.1174%" height="15" fill="rgb(225,42,16)" fg:x="796" fg:w="1"/><text x="93.6772%" y="527.50"></text></g><g><title>bitter::LittleEndianReader::refill (1 samples, 0.12%)</title><rect x="93.4272%" y="501" width="0.1174%" height="15" fill="rgb(220,201,45)" fg:x="796" fg:w="1"/><text x="93.6772%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub (1 samples, 0.12%)</title><rect x="93.4272%" y="485" width="0.1174%" height="15" fill="rgb(225,33,4)" fg:x="796" fg:w="1"/><text x="93.6772%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.12%)</title><rect x="93.4272%" y="469" width="0.1174%" height="15" fill="rgb(224,33,50)" fg:x="796" fg:w="1"/><text x="93.6772%" y="479.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_float (6 samples, 0.70%)</title><rect x="92.9577%" y="581" width="0.7042%" height="15" fill="rgb(246,198,51)" fg:x="792" fg:w="6"/><text x="93.2077%" y="591.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (1 samples, 0.12%)</title><rect x="93.5446%" y="565" width="0.1174%" height="15" fill="rgb(205,22,4)" fg:x="797" fg:w="1"/><text x="93.7946%" y="575.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.12%)</title><rect x="93.5446%" y="549" width="0.1174%" height="15" fill="rgb(206,3,8)" fg:x="797" fg:w="1"/><text x="93.7946%" y="559.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_int (4 samples, 0.47%)</title><rect x="93.6620%" y="581" width="0.4695%" height="15" fill="rgb(251,23,15)" fg:x="798" fg:w="4"/><text x="93.9120%" y="591.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (3 samples, 0.35%)</title><rect x="93.7793%" y="565" width="0.3521%" height="15" fill="rgb(252,88,28)" fg:x="799" fg:w="3"/><text x="94.0293%" y="575.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.12%)</title><rect x="94.0141%" y="549" width="0.1174%" height="15" fill="rgb(212,127,14)" fg:x="801" fg:w="1"/><text x="94.2641%" y="559.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_vec (2 samples, 0.23%)</title><rect x="94.1315%" y="581" width="0.2347%" height="15" fill="rgb(247,145,37)" fg:x="802" fg:w="2"/><text x="94.3815%" y="591.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_float (2 samples, 0.23%)</title><rect x="94.1315%" y="565" width="0.2347%" height="15" fill="rgb(209,117,53)" fg:x="802" fg:w="2"/><text x="94.3815%" y="575.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_special_float (1 samples, 0.12%)</title><rect x="94.2488%" y="549" width="0.1174%" height="15" fill="rgb(212,90,42)" fg:x="803" fg:w="1"/><text x="94.4988%" y="559.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_bit_coord (1 samples, 0.12%)</title><rect x="94.2488%" y="533" width="0.1174%" height="15" fill="rgb(218,164,37)" fg:x="803" fg:w="1"/><text x="94.4988%" y="543.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode (29 samples, 3.40%)</title><rect x="91.5493%" y="597" width="3.4038%" height="15" fill="rgb(246,65,34)" fg:x="780" fg:w="29"/><text x="91.7993%" y="607.50">dem..</text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_vec_xy (5 samples, 0.59%)</title><rect x="94.3662%" y="581" width="0.5869%" height="15" fill="rgb(231,100,33)" fg:x="804" fg:w="5"/><text x="94.6162%" y="591.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_float (5 samples, 0.59%)</title><rect x="94.3662%" y="565" width="0.5869%" height="15" fill="rgb(228,126,14)" fg:x="804" fg:w="5"/><text x="94.6162%" y="575.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_special_float (5 samples, 0.59%)</title><rect x="94.3662%" y="549" width="0.5869%" height="15" fill="rgb(215,173,21)" fg:x="804" fg:w="5"/><text x="94.6162%" y="559.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_f32 (4 samples, 0.47%)</title><rect x="94.4836%" y="533" width="0.4695%" height="15" fill="rgb(210,6,40)" fg:x="805" fg:w="4"/><text x="94.7336%" y="543.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_u32 (4 samples, 0.47%)</title><rect x="94.4836%" y="517" width="0.4695%" height="15" fill="rgb(212,48,18)" fg:x="805" fg:w="4"/><text x="94.7336%" y="527.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (4 samples, 0.47%)</title><rect x="94.4836%" y="501" width="0.4695%" height="15" fill="rgb(230,214,11)" fg:x="805" fg:w="4"/><text x="94.7336%" y="511.50"></text></g><g><title>bitter::LittleEndianReader::refill (1 samples, 0.12%)</title><rect x="94.8357%" y="485" width="0.1174%" height="15" fill="rgb(254,105,39)" fg:x="808" fg:w="1"/><text x="95.0857%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub (1 samples, 0.12%)</title><rect x="94.8357%" y="469" width="0.1174%" height="15" fill="rgb(245,158,5)" fg:x="808" fg:w="1"/><text x="95.0857%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.12%)</title><rect x="94.8357%" y="453" width="0.1174%" height="15" fill="rgb(249,208,11)" fg:x="808" fg:w="1"/><text x="95.0857%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.23%)</title><rect x="94.9531%" y="549" width="0.2347%" height="15" fill="rgb(210,39,28)" fg:x="809" fg:w="2"/><text x="95.2031%" y="559.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::hash_one (2 samples, 0.23%)</title><rect x="94.9531%" y="533" width="0.2347%" height="15" fill="rgb(211,56,53)" fg:x="809" fg:w="2"/><text x="95.2031%" y="543.50"></text></g><g><title>ahash::random_state::RandomState::hash_one (2 samples, 0.23%)</title><rect x="94.9531%" y="517" width="0.2347%" height="15" fill="rgb(226,201,30)" fg:x="809" fg:w="2"/><text x="95.2031%" y="527.50"></text></g><g><title>&lt;T as ahash::specialize::CallHasher&gt;::get_hash (2 samples, 0.23%)</title><rect x="94.9531%" y="501" width="0.2347%" height="15" fill="rgb(239,101,34)" fg:x="809" fg:w="2"/><text x="95.2031%" y="511.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::finish (2 samples, 0.23%)</title><rect x="94.9531%" y="485" width="0.2347%" height="15" fill="rgb(226,209,5)" fg:x="809" fg:w="2"/><text x="95.2031%" y="495.50"></text></g><g><title>&lt;u128 as ahash::convert::Convert&lt;[u64: 2]&gt;&gt;::convert (1 samples, 0.12%)</title><rect x="95.0704%" y="469" width="0.1174%" height="15" fill="rgb(250,105,47)" fg:x="810" fg:w="1"/><text x="95.3204%" y="479.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::parse_ent_props (147 samples, 17.25%)</title><rect x="78.4038%" y="613" width="17.2535%" height="15" fill="rgb(230,72,3)" fg:x="668" fg:w="147"/><text x="78.6538%" y="623.50">demoparser::parsing::demo_p..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.70%)</title><rect x="94.9531%" y="597" width="0.7042%" height="15" fill="rgb(232,218,39)" fg:x="809" fg:w="6"/><text x="95.2031%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.70%)</title><rect x="94.9531%" y="581" width="0.7042%" height="15" fill="rgb(248,166,6)" fg:x="809" fg:w="6"/><text x="95.2031%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.70%)</title><rect x="94.9531%" y="565" width="0.7042%" height="15" fill="rgb(247,89,20)" fg:x="809" fg:w="6"/><text x="95.2031%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.47%)</title><rect x="95.1878%" y="549" width="0.4695%" height="15" fill="rgb(248,130,54)" fg:x="811" fg:w="4"/><text x="95.4378%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.47%)</title><rect x="95.1878%" y="533" width="0.4695%" height="15" fill="rgb(234,196,4)" fg:x="811" fg:w="4"/><text x="95.4378%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (4 samples, 0.47%)</title><rect x="95.1878%" y="517" width="0.4695%" height="15" fill="rgb(250,143,31)" fg:x="811" fg:w="4"/><text x="95.4378%" y="527.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.23%)</title><rect x="95.4225%" y="501" width="0.2347%" height="15" fill="rgb(211,110,34)" fg:x="813" fg:w="2"/><text x="95.6725%" y="511.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_u_bit_var (1 samples, 0.12%)</title><rect x="95.6573%" y="613" width="0.1174%" height="15" fill="rgb(215,124,48)" fg:x="815" fg:w="1"/><text x="95.9073%" y="623.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (1 samples, 0.12%)</title><rect x="95.6573%" y="597" width="0.1174%" height="15" fill="rgb(216,46,13)" fg:x="815" fg:w="1"/><text x="95.9073%" y="607.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.12%)</title><rect x="95.6573%" y="581" width="0.1174%" height="15" fill="rgb(205,184,25)" fg:x="815" fg:w="1"/><text x="95.9073%" y="591.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::_parse_packet_entities (251 samples, 29.46%)</title><rect x="66.4319%" y="629" width="29.4601%" height="15" fill="rgb(228,1,10)" fg:x="566" fg:w="251"/><text x="66.6819%" y="639.50">demoparser::parsing::demo_parsing::entities::&lt;i..</text></g><g><title>mi_free (1 samples, 0.12%)</title><rect x="95.7746%" y="613" width="0.1174%" height="15" fill="rgb(213,116,27)" fg:x="816" fg:w="1"/><text x="96.0246%" y="623.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.12%)</title><rect x="96.2441%" y="581" width="0.1174%" height="15" fill="rgb(241,95,50)" fg:x="820" fg:w="1"/><text x="96.4941%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (1 samples, 0.12%)</title><rect x="96.3615%" y="517" width="0.1174%" height="15" fill="rgb(238,48,32)" fg:x="821" fg:w="1"/><text x="96.6115%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (1 samples, 0.12%)</title><rect x="96.3615%" y="501" width="0.1174%" height="15" fill="rgb(235,113,49)" fg:x="821" fg:w="1"/><text x="96.6115%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (1 samples, 0.12%)</title><rect x="96.3615%" y="485" width="0.1174%" height="15" fill="rgb(205,127,43)" fg:x="821" fg:w="1"/><text x="96.6115%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (1 samples, 0.12%)</title><rect x="96.3615%" y="469" width="0.1174%" height="15" fill="rgb(250,162,2)" fg:x="821" fg:w="1"/><text x="96.6115%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.12%)</title><rect x="96.3615%" y="453" width="0.1174%" height="15" fill="rgb(220,13,41)" fg:x="821" fg:w="1"/><text x="96.6115%" y="463.50"></text></g><g><title>mi_malloc (1 samples, 0.12%)</title><rect x="96.3615%" y="437" width="0.1174%" height="15" fill="rgb(249,221,25)" fg:x="821" fg:w="1"/><text x="96.6115%" y="447.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.12%)</title><rect x="96.3615%" y="421" width="0.1174%" height="15" fill="rgb(215,208,19)" fg:x="821" fg:w="1"/><text x="96.6115%" y="431.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.12%)</title><rect x="96.3615%" y="405" width="0.1174%" height="15" fill="rgb(236,175,2)" fg:x="821" fg:w="1"/><text x="96.6115%" y="415.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.12%)</title><rect x="96.3615%" y="389" width="0.1174%" height="15" fill="rgb(241,52,2)" fg:x="821" fg:w="1"/><text x="96.6115%" y="399.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes (4 samples, 0.47%)</title><rect x="96.3615%" y="581" width="0.4695%" height="15" fill="rgb(248,140,14)" fg:x="821" fg:w="4"/><text x="96.6115%" y="591.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (4 samples, 0.47%)</title><rect x="96.3615%" y="565" width="0.4695%" height="15" fill="rgb(253,22,42)" fg:x="821" fg:w="4"/><text x="96.6115%" y="575.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (4 samples, 0.47%)</title><rect x="96.3615%" y="549" width="0.4695%" height="15" fill="rgb(234,61,47)" fg:x="821" fg:w="4"/><text x="96.6115%" y="559.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (4 samples, 0.47%)</title><rect x="96.3615%" y="533" width="0.4695%" height="15" fill="rgb(208,226,15)" fg:x="821" fg:w="4"/><text x="96.6115%" y="543.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact (3 samples, 0.35%)</title><rect x="96.4789%" y="517" width="0.3521%" height="15" fill="rgb(217,221,4)" fg:x="822" fg:w="3"/><text x="96.7289%" y="527.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::read_bytes (3 samples, 0.35%)</title><rect x="96.4789%" y="501" width="0.3521%" height="15" fill="rgb(212,174,34)" fg:x="822" fg:w="3"/><text x="96.7289%" y="511.50"></text></g><g><title>protobuf::misc::maybe_uninit_write_slice (3 samples, 0.35%)</title><rect x="96.4789%" y="485" width="0.3521%" height="15" fill="rgb(253,83,4)" fg:x="822" fg:w="3"/><text x="96.7289%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (3 samples, 0.35%)</title><rect x="96.4789%" y="469" width="0.3521%" height="15" fill="rgb(250,195,49)" fg:x="822" fg:w="3"/><text x="96.7289%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.35%)</title><rect x="96.4789%" y="453" width="0.3521%" height="15" fill="rgb(241,192,25)" fg:x="822" fg:w="3"/><text x="96.7289%" y="463.50"></text></g><g><title>[libc.so.6] (3 samples, 0.35%)</title><rect x="96.4789%" y="437" width="0.3521%" height="15" fill="rgb(208,124,10)" fg:x="822" fg:w="3"/><text x="96.7289%" y="447.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::consume (1 samples, 0.12%)</title><rect x="96.9484%" y="549" width="0.1174%" height="15" fill="rgb(222,33,0)" fg:x="826" fg:w="1"/><text x="97.1984%" y="559.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::consume (1 samples, 0.12%)</title><rect x="96.9484%" y="533" width="0.1174%" height="15" fill="rgb(234,209,28)" fg:x="826" fg:w="1"/><text x="97.1984%" y="543.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::remaining_in_buf (1 samples, 0.12%)</title><rect x="97.0657%" y="549" width="0.1174%" height="15" fill="rgb(224,11,23)" fg:x="827" fg:w="1"/><text x="97.3157%" y="559.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::remaining_in_buf (1 samples, 0.12%)</title><rect x="97.0657%" y="533" width="0.1174%" height="15" fill="rgb(232,99,1)" fg:x="827" fg:w="1"/><text x="97.3157%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.12%)</title><rect x="97.0657%" y="517" width="0.1174%" height="15" fill="rgb(237,95,45)" fg:x="827" fg:w="1"/><text x="97.3157%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.12%)</title><rect x="97.0657%" y="501" width="0.1174%" height="15" fill="rgb(208,109,11)" fg:x="827" fg:w="1"/><text x="97.3157%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.12%)</title><rect x="97.0657%" y="485" width="0.1174%" height="15" fill="rgb(216,190,48)" fg:x="827" fg:w="1"/><text x="97.3157%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.12%)</title><rect x="97.0657%" y="469" width="0.1174%" height="15" fill="rgb(251,171,36)" fg:x="827" fg:w="1"/><text x="97.3157%" y="479.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_packet_entities (265 samples, 31.10%)</title><rect x="66.1972%" y="645" width="31.1033%" height="15" fill="rgb(230,62,22)" fg:x="564" fg:w="265"/><text x="66.4472%" y="655.50">demoparser::parsing::demo_parsing::entities::&lt;impl..</text></g><g><title>protobuf::message::Message::parse_from_bytes (12 samples, 1.41%)</title><rect x="95.8920%" y="629" width="1.4085%" height="15" fill="rgb(225,114,35)" fg:x="817" fg:w="12"/><text x="96.1420%" y="639.50"></text></g><g><title>protobuf::message::Message::parse_from (11 samples, 1.29%)</title><rect x="96.0094%" y="613" width="1.2911%" height="15" fill="rgb(215,118,42)" fg:x="818" fg:w="11"/><text x="96.2594%" y="623.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_PacketEntities as protobuf::message::Message&gt;::merge_from (11 samples, 1.29%)</title><rect x="96.0094%" y="597" width="1.2911%" height="15" fill="rgb(243,119,21)" fg:x="818" fg:w="11"/><text x="96.2594%" y="607.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (4 samples, 0.47%)</title><rect x="96.8310%" y="581" width="0.4695%" height="15" fill="rgb(252,177,53)" fg:x="825" fg:w="4"/><text x="97.0810%" y="591.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (4 samples, 0.47%)</title><rect x="96.8310%" y="565" width="0.4695%" height="15" fill="rgb(237,209,29)" fg:x="825" fg:w="4"/><text x="97.0810%" y="575.50"></text></g><g><title>protobuf::varint::decode::decode_varint32 (1 samples, 0.12%)</title><rect x="97.1831%" y="549" width="0.1174%" height="15" fill="rgb(212,65,23)" fg:x="828" fg:w="1"/><text x="97.4331%" y="559.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (1 samples, 0.12%)</title><rect x="97.1831%" y="533" width="0.1174%" height="15" fill="rgb(230,222,46)" fg:x="828" fg:w="1"/><text x="97.4331%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.12%)</title><rect x="97.4178%" y="613" width="0.1174%" height="15" fill="rgb(215,135,32)" fg:x="830" fg:w="1"/><text x="97.6678%" y="623.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.12%)</title><rect x="97.5352%" y="581" width="0.1174%" height="15" fill="rgb(246,101,22)" fg:x="831" fg:w="1"/><text x="97.7852%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (1 samples, 0.12%)</title><rect x="97.6526%" y="517" width="0.1174%" height="15" fill="rgb(206,107,13)" fg:x="832" fg:w="1"/><text x="97.9026%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (1 samples, 0.12%)</title><rect x="97.6526%" y="501" width="0.1174%" height="15" fill="rgb(250,100,44)" fg:x="832" fg:w="1"/><text x="97.9026%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (1 samples, 0.12%)</title><rect x="97.6526%" y="485" width="0.1174%" height="15" fill="rgb(231,147,38)" fg:x="832" fg:w="1"/><text x="97.9026%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (1 samples, 0.12%)</title><rect x="97.6526%" y="469" width="0.1174%" height="15" fill="rgb(229,8,40)" fg:x="832" fg:w="1"/><text x="97.9026%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.12%)</title><rect x="97.6526%" y="453" width="0.1174%" height="15" fill="rgb(221,135,30)" fg:x="832" fg:w="1"/><text x="97.9026%" y="463.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes (4 samples, 0.47%)</title><rect x="97.6526%" y="581" width="0.4695%" height="15" fill="rgb(249,193,18)" fg:x="832" fg:w="4"/><text x="97.9026%" y="591.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (4 samples, 0.47%)</title><rect x="97.6526%" y="565" width="0.4695%" height="15" fill="rgb(209,133,39)" fg:x="832" fg:w="4"/><text x="97.9026%" y="575.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (4 samples, 0.47%)</title><rect x="97.6526%" y="549" width="0.4695%" height="15" fill="rgb(232,100,14)" fg:x="832" fg:w="4"/><text x="97.9026%" y="559.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (4 samples, 0.47%)</title><rect x="97.6526%" y="533" width="0.4695%" height="15" fill="rgb(224,185,1)" fg:x="832" fg:w="4"/><text x="97.9026%" y="543.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact (3 samples, 0.35%)</title><rect x="97.7700%" y="517" width="0.3521%" height="15" fill="rgb(223,139,8)" fg:x="833" fg:w="3"/><text x="98.0200%" y="527.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::read_bytes (3 samples, 0.35%)</title><rect x="97.7700%" y="501" width="0.3521%" height="15" fill="rgb(232,213,38)" fg:x="833" fg:w="3"/><text x="98.0200%" y="511.50"></text></g><g><title>protobuf::misc::maybe_uninit_write_slice (3 samples, 0.35%)</title><rect x="97.7700%" y="485" width="0.3521%" height="15" fill="rgb(207,94,22)" fg:x="833" fg:w="3"/><text x="98.0200%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (3 samples, 0.35%)</title><rect x="97.7700%" y="469" width="0.3521%" height="15" fill="rgb(219,183,54)" fg:x="833" fg:w="3"/><text x="98.0200%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.35%)</title><rect x="97.7700%" y="453" width="0.3521%" height="15" fill="rgb(216,185,54)" fg:x="833" fg:w="3"/><text x="98.0200%" y="463.50"></text></g><g><title>[libc.so.6] (3 samples, 0.35%)</title><rect x="97.7700%" y="437" width="0.3521%" height="15" fill="rgb(254,217,39)" fg:x="833" fg:w="3"/><text x="98.0200%" y="447.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_blueprints (277 samples, 32.51%)</title><rect x="66.0798%" y="837" width="32.5117%" height="15" fill="rgb(240,178,23)" fg:x="563" fg:w="277"/><text x="66.3298%" y="847.50">demoparser::parsing::parser::Parser::parse_blueprints</text></g><g><title>core::iter::traits::iterator::Iterator::collect (277 samples, 32.51%)</title><rect x="66.0798%" y="821" width="32.5117%" height="15" fill="rgb(218,11,47)" fg:x="563" fg:w="277"/><text x="66.3298%" y="831.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (277 samples, 32.51%)</title><rect x="66.0798%" y="805" width="32.5117%" height="15" fill="rgb(218,51,51)" fg:x="563" fg:w="277"/><text x="66.3298%" y="815.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::F..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (277 samples, 32.51%)</title><rect x="66.0798%" y="789" width="32.5117%" height="15" fill="rgb(238,126,27)" fg:x="563" fg:w="277"/><text x="66.3298%" y="799.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::Sp..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (277 samples, 32.51%)</title><rect x="66.0798%" y="773" width="32.5117%" height="15" fill="rgb(249,202,22)" fg:x="563" fg:w="277"/><text x="66.3298%" y="783.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nes..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (277 samples, 32.51%)</title><rect x="66.0798%" y="757" width="32.5117%" height="15" fill="rgb(254,195,49)" fg:x="563" fg:w="277"/><text x="66.3298%" y="767.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::Spe..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (277 samples, 32.51%)</title><rect x="66.0798%" y="741" width="32.5117%" height="15" fill="rgb(208,123,14)" fg:x="563" fg:w="277"/><text x="66.3298%" y="751.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (277 samples, 32.51%)</title><rect x="66.0798%" y="725" width="32.5117%" height="15" fill="rgb(224,200,8)" fg:x="563" fg:w="277"/><text x="66.3298%" y="735.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::t..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (277 samples, 32.51%)</title><rect x="66.0798%" y="709" width="32.5117%" height="15" fill="rgb(217,61,36)" fg:x="563" fg:w="277"/><text x="66.3298%" y="719.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (277 samples, 32.51%)</title><rect x="66.0798%" y="693" width="32.5117%" height="15" fill="rgb(206,35,45)" fg:x="563" fg:w="277"/><text x="66.3298%" y="703.50">core::iter::adapters::map::map_fold::{{closure}}</text></g><g><title>demoparser::parsing::parser::Parser::parse_blueprints::{{closure}} (276 samples, 32.39%)</title><rect x="66.1972%" y="677" width="32.3944%" height="15" fill="rgb(217,65,33)" fg:x="564" fg:w="276"/><text x="66.4472%" y="687.50">demoparser::parsing::parser::Parser::parse_blueprint..</text></g><g><title>demoparser::parsing::parser::Parser::msg_handler (276 samples, 32.39%)</title><rect x="66.1972%" y="661" width="32.3944%" height="15" fill="rgb(222,158,48)" fg:x="564" fg:w="276"/><text x="66.4472%" y="671.50">demoparser::parsing::parser::Parser::msg_handler</text></g><g><title>demoparser::parsing::demo_parsing::stringtables::&lt;impl demoparser::parsing::parser::Parser&gt;::update_string_table_msg (11 samples, 1.29%)</title><rect x="97.3005%" y="645" width="1.2911%" height="15" fill="rgb(254,2,54)" fg:x="829" fg:w="11"/><text x="97.5505%" y="655.50"></text></g><g><title>protobuf::message::Message::parse_from_bytes (11 samples, 1.29%)</title><rect x="97.3005%" y="629" width="1.2911%" height="15" fill="rgb(250,143,38)" fg:x="829" fg:w="11"/><text x="97.5505%" y="639.50"></text></g><g><title>protobuf::message::Message::parse_from (9 samples, 1.06%)</title><rect x="97.5352%" y="613" width="1.0563%" height="15" fill="rgb(248,25,0)" fg:x="831" fg:w="9"/><text x="97.7852%" y="623.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_EntityMsg as protobuf::message::Message&gt;::merge_from (9 samples, 1.06%)</title><rect x="97.5352%" y="597" width="1.0563%" height="15" fill="rgb(206,152,27)" fg:x="831" fg:w="9"/><text x="97.7852%" y="607.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (4 samples, 0.47%)</title><rect x="98.1221%" y="581" width="0.4695%" height="15" fill="rgb(240,77,30)" fg:x="836" fg:w="4"/><text x="98.3721%" y="591.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (4 samples, 0.47%)</title><rect x="98.1221%" y="565" width="0.4695%" height="15" fill="rgb(231,5,3)" fg:x="836" fg:w="4"/><text x="98.3721%" y="575.50"></text></g><g><title>protobuf::varint::decode::decode_varint32 (3 samples, 0.35%)</title><rect x="98.2394%" y="549" width="0.3521%" height="15" fill="rgb(207,226,32)" fg:x="837" fg:w="3"/><text x="98.4894%" y="559.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (3 samples, 0.35%)</title><rect x="98.2394%" y="533" width="0.3521%" height="15" fill="rgb(222,207,47)" fg:x="837" fg:w="3"/><text x="98.4894%" y="543.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bytes::ByteReader::read_frame (1 samples, 0.12%)</title><rect x="98.5915%" y="821" width="0.1174%" height="15" fill="rgb(229,115,45)" fg:x="840" fg:w="1"/><text x="98.8415%" y="831.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bytes::ByteReader::read_byte (1 samples, 0.12%)</title><rect x="98.5915%" y="805" width="0.1174%" height="15" fill="rgb(224,191,6)" fg:x="840" fg:w="1"/><text x="98.8415%" y="815.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_datatable (1 samples, 0.12%)</title><rect x="98.7089%" y="805" width="0.1174%" height="15" fill="rgb(230,227,24)" fg:x="841" fg:w="1"/><text x="98.9589%" y="815.50"></text></g><g><title>protobuf::message::Message::parse_from_bytes (1 samples, 0.12%)</title><rect x="98.7089%" y="789" width="0.1174%" height="15" fill="rgb(228,80,19)" fg:x="841" fg:w="1"/><text x="98.9589%" y="799.50"></text></g><g><title>protobuf::message::Message::parse_from (1 samples, 0.12%)</title><rect x="98.7089%" y="773" width="0.1174%" height="15" fill="rgb(247,229,0)" fg:x="841" fg:w="1"/><text x="98.9589%" y="783.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_SendTable as protobuf::message::Message&gt;::merge_from (1 samples, 0.12%)</title><rect x="98.7089%" y="757" width="0.1174%" height="15" fill="rgb(237,194,15)" fg:x="841" fg:w="1"/><text x="98.9589%" y="767.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_message (1 samples, 0.12%)</title><rect x="98.7089%" y="741" width="0.1174%" height="15" fill="rgb(219,203,20)" fg:x="841" fg:w="1"/><text x="98.9589%" y="751.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::merge_message (1 samples, 0.12%)</title><rect x="98.7089%" y="725" width="0.1174%" height="15" fill="rgb(234,128,8)" fg:x="841" fg:w="1"/><text x="98.9589%" y="735.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_send_table::Sendprop_t as protobuf::message::Message&gt;::merge_from (1 samples, 0.12%)</title><rect x="98.7089%" y="709" width="0.1174%" height="15" fill="rgb(248,202,8)" fg:x="841" fg:w="1"/><text x="98.9589%" y="719.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string (1 samples, 0.12%)</title><rect x="98.7089%" y="693" width="0.1174%" height="15" fill="rgb(206,104,37)" fg:x="841" fg:w="1"/><text x="98.9589%" y="703.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string_into (1 samples, 0.12%)</title><rect x="98.7089%" y="677" width="0.1174%" height="15" fill="rgb(223,8,27)" fg:x="841" fg:w="1"/><text x="98.9589%" y="687.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (1 samples, 0.12%)</title><rect x="98.7089%" y="661" width="0.1174%" height="15" fill="rgb(216,217,28)" fg:x="841" fg:w="1"/><text x="98.9589%" y="671.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (1 samples, 0.12%)</title><rect x="98.7089%" y="645" width="0.1174%" height="15" fill="rgb(249,199,1)" fg:x="841" fg:w="1"/><text x="98.9589%" y="655.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (1 samples, 0.12%)</title><rect x="98.7089%" y="629" width="0.1174%" height="15" fill="rgb(240,85,17)" fg:x="841" fg:w="1"/><text x="98.9589%" y="639.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact (1 samples, 0.12%)</title><rect x="98.7089%" y="613" width="0.1174%" height="15" fill="rgb(206,108,45)" fg:x="841" fg:w="1"/><text x="98.9589%" y="623.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::read_bytes (1 samples, 0.12%)</title><rect x="98.7089%" y="597" width="0.1174%" height="15" fill="rgb(245,210,41)" fg:x="841" fg:w="1"/><text x="98.9589%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.12%)</title><rect x="98.8263%" y="773" width="0.1174%" height="15" fill="rgb(206,13,37)" fg:x="842" fg:w="1"/><text x="99.0763%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.12%)</title><rect x="98.8263%" y="757" width="0.1174%" height="15" fill="rgb(250,61,18)" fg:x="842" fg:w="1"/><text x="99.0763%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.12%)</title><rect x="98.8263%" y="741" width="0.1174%" height="15" fill="rgb(235,172,48)" fg:x="842" fg:w="1"/><text x="99.0763%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.12%)</title><rect x="98.8263%" y="725" width="0.1174%" height="15" fill="rgb(249,201,17)" fg:x="842" fg:w="1"/><text x="99.0763%" y="735.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.12%)</title><rect x="98.8263%" y="709" width="0.1174%" height="15" fill="rgb(219,208,6)" fg:x="842" fg:w="1"/><text x="99.0763%" y="719.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.12%)</title><rect x="98.8263%" y="693" width="0.1174%" height="15" fill="rgb(248,31,23)" fg:x="842" fg:w="1"/><text x="99.0763%" y="703.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.12%)</title><rect x="98.8263%" y="677" width="0.1174%" height="15" fill="rgb(245,15,42)" fg:x="842" fg:w="1"/><text x="99.0763%" y="687.50"></text></g><g><title>_mi_memcpy_aligned (1 samples, 0.12%)</title><rect x="98.8263%" y="661" width="0.1174%" height="15" fill="rgb(222,217,39)" fg:x="842" fg:w="1"/><text x="99.0763%" y="671.50"></text></g><g><title>_mi_memcpy (1 samples, 0.12%)</title><rect x="98.8263%" y="645" width="0.1174%" height="15" fill="rgb(210,219,27)" fg:x="842" fg:w="1"/><text x="99.0763%" y="655.50"></text></g><g><title>memcpy (1 samples, 0.12%)</title><rect x="98.8263%" y="629" width="0.1174%" height="15" fill="rgb(252,166,36)" fg:x="842" fg:w="1"/><text x="99.0763%" y="639.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="98.8263%" y="613" width="0.1174%" height="15" fill="rgb(245,132,34)" fg:x="842" fg:w="1"/><text x="99.0763%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.23%)</title><rect x="98.8263%" y="789" width="0.2347%" height="15" fill="rgb(236,54,3)" fg:x="842" fg:w="2"/><text x="99.0763%" y="799.50"></text></g><g><title>core::ptr::write (1 samples, 0.12%)</title><rect x="98.9437%" y="773" width="0.1174%" height="15" fill="rgb(241,173,43)" fg:x="843" fg:w="1"/><text x="99.1937%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="98.9437%" y="757" width="0.1174%" height="15" fill="rgb(215,190,9)" fg:x="843" fg:w="1"/><text x="99.1937%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="98.9437%" y="741" width="0.1174%" height="15" fill="rgb(242,101,16)" fg:x="843" fg:w="1"/><text x="99.1937%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="98.9437%" y="725" width="0.1174%" height="15" fill="rgb(223,190,21)" fg:x="843" fg:w="1"/><text x="99.1937%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="98.9437%" y="709" width="0.1174%" height="15" fill="rgb(215,228,25)" fg:x="843" fg:w="1"/><text x="99.1937%" y="719.50"></text></g><g><title>__libc_start_main_impl (811 samples, 95.19%)</title><rect x="4.1080%" y="1301" width="95.1878%" height="15" fill="rgb(225,36,22)" fg:x="35" fg:w="811"/><text x="4.3580%" y="1311.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (811 samples, 95.19%)</title><rect x="4.1080%" y="1285" width="95.1878%" height="15" fill="rgb(251,106,46)" fg:x="35" fg:w="811"/><text x="4.3580%" y="1295.50">__libc_start_call_main</text></g><g><title>main (786 samples, 92.25%)</title><rect x="7.0423%" y="1269" width="92.2535%" height="15" fill="rgb(208,90,1)" fg:x="60" fg:w="786"/><text x="7.2923%" y="1279.50">main</text></g><g><title>std::rt::lang_start_internal (786 samples, 92.25%)</title><rect x="7.0423%" y="1253" width="92.2535%" height="15" fill="rgb(243,10,4)" fg:x="60" fg:w="786"/><text x="7.2923%" y="1263.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (786 samples, 92.25%)</title><rect x="7.0423%" y="1237" width="92.2535%" height="15" fill="rgb(212,137,27)" fg:x="60" fg:w="786"/><text x="7.2923%" y="1247.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (786 samples, 92.25%)</title><rect x="7.0423%" y="1221" width="92.2535%" height="15" fill="rgb(231,220,49)" fg:x="60" fg:w="786"/><text x="7.2923%" y="1231.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (786 samples, 92.25%)</title><rect x="7.0423%" y="1205" width="92.2535%" height="15" fill="rgb(237,96,20)" fg:x="60" fg:w="786"/><text x="7.2923%" y="1215.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (786 samples, 92.25%)</title><rect x="7.0423%" y="1189" width="92.2535%" height="15" fill="rgb(239,229,30)" fg:x="60" fg:w="786"/><text x="7.2923%" y="1199.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (786 samples, 92.25%)</title><rect x="7.0423%" y="1173" width="92.2535%" height="15" fill="rgb(219,65,33)" fg:x="60" fg:w="786"/><text x="7.2923%" y="1183.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (786 samples, 92.25%)</title><rect x="7.0423%" y="1157" width="92.2535%" height="15" fill="rgb(243,134,7)" fg:x="60" fg:w="786"/><text x="7.2923%" y="1167.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (786 samples, 92.25%)</title><rect x="7.0423%" y="1141" width="92.2535%" height="15" fill="rgb(216,177,54)" fg:x="60" fg:w="786"/><text x="7.2923%" y="1151.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (786 samples, 92.25%)</title><rect x="7.0423%" y="1125" width="92.2535%" height="15" fill="rgb(211,160,20)" fg:x="60" fg:w="786"/><text x="7.2923%" y="1135.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (786 samples, 92.25%)</title><rect x="7.0423%" y="1109" width="92.2535%" height="15" fill="rgb(239,85,39)" fg:x="60" fg:w="786"/><text x="7.2923%" y="1119.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (786 samples, 92.25%)</title><rect x="7.0423%" y="1093" width="92.2535%" height="15" fill="rgb(232,125,22)" fg:x="60" fg:w="786"/><text x="7.2923%" y="1103.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (786 samples, 92.25%)</title><rect x="7.0423%" y="1077" width="92.2535%" height="15" fill="rgb(244,57,34)" fg:x="60" fg:w="786"/><text x="7.2923%" y="1087.50">core::ops::function::FnOnce::call_once</text></g><g><title>demoparser::main (786 samples, 92.25%)</title><rect x="7.0423%" y="1061" width="92.2535%" height="15" fill="rgb(214,203,32)" fg:x="60" fg:w="786"/><text x="7.2923%" y="1071.50">demoparser::main</text></g><g><title>core::iter::traits::iterator::Iterator::collect (786 samples, 92.25%)</title><rect x="7.0423%" y="1045" width="92.2535%" height="15" fill="rgb(207,58,43)" fg:x="60" fg:w="786"/><text x="7.2923%" y="1055.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (786 samples, 92.25%)</title><rect x="7.0423%" y="1029" width="92.2535%" height="15" fill="rgb(215,193,15)" fg:x="60" fg:w="786"/><text x="7.2923%" y="1039.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (786 samples, 92.25%)</title><rect x="7.0423%" y="1013" width="92.2535%" height="15" fill="rgb(232,15,44)" fg:x="60" fg:w="786"/><text x="7.2923%" y="1023.50">alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (786 samples, 92.25%)</title><rect x="7.0423%" y="997" width="92.2535%" height="15" fill="rgb(212,3,48)" fg:x="60" fg:w="786"/><text x="7.2923%" y="1007.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (786 samples, 92.25%)</title><rect x="7.0423%" y="981" width="92.2535%" height="15" fill="rgb(218,128,7)" fg:x="60" fg:w="786"/><text x="7.2923%" y="991.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (786 samples, 92.25%)</title><rect x="7.0423%" y="965" width="92.2535%" height="15" fill="rgb(226,216,39)" fg:x="60" fg:w="786"/><text x="7.2923%" y="975.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (786 samples, 92.25%)</title><rect x="7.0423%" y="949" width="92.2535%" height="15" fill="rgb(243,47,51)" fg:x="60" fg:w="786"/><text x="7.2923%" y="959.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::traits::iterator::Iterator::fold (786 samples, 92.25%)</title><rect x="7.0423%" y="933" width="92.2535%" height="15" fill="rgb(241,183,40)" fg:x="60" fg:w="786"/><text x="7.2923%" y="943.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (786 samples, 92.25%)</title><rect x="7.0423%" y="917" width="92.2535%" height="15" fill="rgb(231,217,32)" fg:x="60" fg:w="786"/><text x="7.2923%" y="927.50">core::iter::adapters::map::map_fold::{{closure}}</text></g><g><title>demoparser::main::{{closure}} (786 samples, 92.25%)</title><rect x="7.0423%" y="901" width="92.2535%" height="15" fill="rgb(229,61,38)" fg:x="60" fg:w="786"/><text x="7.2923%" y="911.50">demoparser::main::{{closure}}</text></g><g><title>demoparser::parse_demo (786 samples, 92.25%)</title><rect x="7.0423%" y="885" width="92.2535%" height="15" fill="rgb(225,210,5)" fg:x="60" fg:w="786"/><text x="7.2923%" y="895.50">demoparser::parse_demo</text></g><g><title>demoparser::parsing::parser::Parser::start_parsing (785 samples, 92.14%)</title><rect x="7.1596%" y="869" width="92.1362%" height="15" fill="rgb(231,79,45)" fg:x="61" fg:w="785"/><text x="7.4096%" y="879.50">demoparser::parsing::parser::Parser::start_parsing</text></g><g><title>demoparser::parsing::create_output::&lt;impl demoparser::parsing::parser::Parser&gt;::compute_jobs_with_cache (784 samples, 92.02%)</title><rect x="7.2770%" y="853" width="92.0188%" height="15" fill="rgb(224,100,7)" fg:x="62" fg:w="784"/><text x="7.5270%" y="863.50">demoparser::parsing::create_output::&lt;impl demoparser::parsing::parser::Parser&gt;::compute_jobs_with_cache</text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (6 samples, 0.70%)</title><rect x="98.5915%" y="837" width="0.7042%" height="15" fill="rgb(241,198,18)" fg:x="840" fg:w="6"/><text x="98.8415%" y="847.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_cmd (5 samples, 0.59%)</title><rect x="98.7089%" y="821" width="0.5869%" height="15" fill="rgb(252,97,53)" fg:x="841" fg:w="5"/><text x="98.9589%" y="831.50"></text></g><g><title>demoparser::parsing::parser::Parser::messages_from_packet (4 samples, 0.47%)</title><rect x="98.8263%" y="805" width="0.4695%" height="15" fill="rgb(220,88,7)" fg:x="842" fg:w="4"/><text x="99.0763%" y="815.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bytes::ByteReader::read_varint (2 samples, 0.23%)</title><rect x="99.0610%" y="789" width="0.2347%" height="15" fill="rgb(213,176,14)" fg:x="844" fg:w="2"/><text x="99.3110%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="99.1784%" y="773" width="0.1174%" height="15" fill="rgb(246,73,7)" fg:x="845" fg:w="1"/><text x="99.4284%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="99.1784%" y="757" width="0.1174%" height="15" fill="rgb(245,64,36)" fg:x="845" fg:w="1"/><text x="99.4284%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="99.1784%" y="741" width="0.1174%" height="15" fill="rgb(245,80,10)" fg:x="845" fg:w="1"/><text x="99.4284%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="99.1784%" y="725" width="0.1174%" height="15" fill="rgb(232,107,50)" fg:x="845" fg:w="1"/><text x="99.4284%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="99.1784%" y="709" width="0.1174%" height="15" fill="rgb(253,3,0)" fg:x="845" fg:w="1"/><text x="99.4284%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="99.1784%" y="693" width="0.1174%" height="15" fill="rgb(212,99,53)" fg:x="845" fg:w="1"/><text x="99.4284%" y="703.50"></text></g><g><title>demoparser (847 samples, 99.41%)</title><rect x="0.0000%" y="1333" width="99.4131%" height="15" fill="rgb(249,111,54)" fg:x="0" fg:w="847"/><text x="0.2500%" y="1343.50">demoparser</text></g><g><title>_start (812 samples, 95.31%)</title><rect x="4.1080%" y="1317" width="95.3052%" height="15" fill="rgb(249,55,30)" fg:x="35" fg:w="812"/><text x="4.3580%" y="1327.50">_start</text></g><g><title>_dl_start (1 samples, 0.12%)</title><rect x="99.2958%" y="1301" width="0.1174%" height="15" fill="rgb(237,47,42)" fg:x="846" fg:w="1"/><text x="99.5458%" y="1311.50"></text></g><g><title>_dl_start_final (1 samples, 0.12%)</title><rect x="99.2958%" y="1285" width="0.1174%" height="15" fill="rgb(211,20,18)" fg:x="846" fg:w="1"/><text x="99.5458%" y="1295.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.12%)</title><rect x="99.2958%" y="1269" width="0.1174%" height="15" fill="rgb(231,203,46)" fg:x="846" fg:w="1"/><text x="99.5458%" y="1279.50"></text></g><g><title>dl_main (1 samples, 0.12%)</title><rect x="99.2958%" y="1253" width="0.1174%" height="15" fill="rgb(237,142,3)" fg:x="846" fg:w="1"/><text x="99.5458%" y="1263.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.12%)</title><rect x="99.2958%" y="1237" width="0.1174%" height="15" fill="rgb(241,107,1)" fg:x="846" fg:w="1"/><text x="99.5458%" y="1247.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.12%)</title><rect x="99.2958%" y="1221" width="0.1174%" height="15" fill="rgb(229,83,13)" fg:x="846" fg:w="1"/><text x="99.5458%" y="1231.50"></text></g><g><title>elf_machine_rela_relative (1 samples, 0.12%)</title><rect x="99.2958%" y="1205" width="0.1174%" height="15" fill="rgb(241,91,40)" fg:x="846" fg:w="1"/><text x="99.5458%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="99.2958%" y="1189" width="0.1174%" height="15" fill="rgb(225,3,45)" fg:x="846" fg:w="1"/><text x="99.5458%" y="1199.50"></text></g><g><title>all (852 samples, 100%)</title><rect x="0.0000%" y="1349" width="100.0000%" height="15" fill="rgb(244,223,14)" fg:x="0" fg:w="852"/><text x="0.2500%" y="1359.50"></text></g><g><title>perf-exec (5 samples, 0.59%)</title><rect x="99.4131%" y="1333" width="0.5869%" height="15" fill="rgb(224,124,37)" fg:x="847" fg:w="5"/><text x="99.6631%" y="1343.50"></text></g><g><title>[unknown] (5 samples, 0.59%)</title><rect x="99.4131%" y="1317" width="0.5869%" height="15" fill="rgb(251,171,30)" fg:x="847" fg:w="5"/><text x="99.6631%" y="1327.50"></text></g><g><title>[unknown] (5 samples, 0.59%)</title><rect x="99.4131%" y="1301" width="0.5869%" height="15" fill="rgb(236,46,54)" fg:x="847" fg:w="5"/><text x="99.6631%" y="1311.50"></text></g><g><title>[unknown] (5 samples, 0.59%)</title><rect x="99.4131%" y="1285" width="0.5869%" height="15" fill="rgb(245,213,5)" fg:x="847" fg:w="5"/><text x="99.6631%" y="1295.50"></text></g><g><title>[unknown] (5 samples, 0.59%)</title><rect x="99.4131%" y="1269" width="0.5869%" height="15" fill="rgb(230,144,27)" fg:x="847" fg:w="5"/><text x="99.6631%" y="1279.50"></text></g><g><title>[unknown] (5 samples, 0.59%)</title><rect x="99.4131%" y="1253" width="0.5869%" height="15" fill="rgb(220,86,6)" fg:x="847" fg:w="5"/><text x="99.6631%" y="1263.50"></text></g><g><title>[unknown] (5 samples, 0.59%)</title><rect x="99.4131%" y="1237" width="0.5869%" height="15" fill="rgb(240,20,13)" fg:x="847" fg:w="5"/><text x="99.6631%" y="1247.50"></text></g><g><title>[unknown] (5 samples, 0.59%)</title><rect x="99.4131%" y="1221" width="0.5869%" height="15" fill="rgb(217,89,34)" fg:x="847" fg:w="5"/><text x="99.6631%" y="1231.50"></text></g><g><title>[unknown] (5 samples, 0.59%)</title><rect x="99.4131%" y="1205" width="0.5869%" height="15" fill="rgb(229,13,5)" fg:x="847" fg:w="5"/><text x="99.6631%" y="1215.50"></text></g><g><title>[unknown] (5 samples, 0.59%)</title><rect x="99.4131%" y="1189" width="0.5869%" height="15" fill="rgb(244,67,35)" fg:x="847" fg:w="5"/><text x="99.6631%" y="1199.50"></text></g><g><title>[unknown] (5 samples, 0.59%)</title><rect x="99.4131%" y="1173" width="0.5869%" height="15" fill="rgb(221,40,2)" fg:x="847" fg:w="5"/><text x="99.6631%" y="1183.50"></text></g></svg></svg>