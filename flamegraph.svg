<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1398" onload="init(evt)" viewBox="0 0 1200 1398" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1398" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1381.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1381.00"> </text><svg id="frames" x="10" width="1180" total_samples="910"><g><title>[[heap]] (1 samples, 0.11%)</title><rect x="0.0000%" y="1317" width="0.1099%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1327.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="0.0000%" y="1301" width="0.1099%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1311.50"></text></g><g><title>__GI___libc_write (1 samples, 0.11%)</title><rect x="0.0000%" y="1285" width="0.1099%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1295.50"></text></g><g><title>__GI___libc_write (1 samples, 0.11%)</title><rect x="0.0000%" y="1269" width="0.1099%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="0.0000%" y="1253" width="0.1099%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1263.50"></text></g><g><title>[unknown] (87 samples, 9.56%)</title><rect x="4.0659%" y="1301" width="9.5604%" height="15" fill="rgb(232,128,0)" fg:x="37" fg:w="87"/><text x="4.3159%" y="1311.50">[unknown]</text></g><g><title>[unknown] (87 samples, 9.56%)</title><rect x="4.0659%" y="1285" width="9.5604%" height="15" fill="rgb(207,160,47)" fg:x="37" fg:w="87"/><text x="4.3159%" y="1295.50">[unknown]</text></g><g><title>[unknown] (82 samples, 9.01%)</title><rect x="4.6154%" y="1269" width="9.0110%" height="15" fill="rgb(228,23,34)" fg:x="42" fg:w="82"/><text x="4.8654%" y="1279.50">[unknown]</text></g><g><title>[unknown] (77 samples, 8.46%)</title><rect x="5.1648%" y="1253" width="8.4615%" height="15" fill="rgb(218,30,26)" fg:x="47" fg:w="77"/><text x="5.4148%" y="1263.50">[unknown]</text></g><g><title>[unknown] (21 samples, 2.31%)</title><rect x="11.3187%" y="1237" width="2.3077%" height="15" fill="rgb(220,122,19)" fg:x="103" fg:w="21"/><text x="11.5687%" y="1247.50">[..</text></g><g><title>[unknown] (16 samples, 1.76%)</title><rect x="11.8681%" y="1221" width="1.7582%" height="15" fill="rgb(250,228,42)" fg:x="108" fg:w="16"/><text x="12.1181%" y="1231.50"></text></g><g><title>[unknown] (16 samples, 1.76%)</title><rect x="11.8681%" y="1205" width="1.7582%" height="15" fill="rgb(240,193,28)" fg:x="108" fg:w="16"/><text x="12.1181%" y="1215.50"></text></g><g><title>[unknown] (11 samples, 1.21%)</title><rect x="12.4176%" y="1189" width="1.2088%" height="15" fill="rgb(216,20,37)" fg:x="113" fg:w="11"/><text x="12.6676%" y="1199.50"></text></g><g><title>[unknown] (6 samples, 0.66%)</title><rect x="12.9670%" y="1173" width="0.6593%" height="15" fill="rgb(206,188,39)" fg:x="118" fg:w="6"/><text x="13.2170%" y="1183.50"></text></g><g><title>[unknown] (5 samples, 0.55%)</title><rect x="13.0769%" y="1157" width="0.5495%" height="15" fill="rgb(217,207,13)" fg:x="119" fg:w="5"/><text x="13.3269%" y="1167.50"></text></g><g><title>[unknown] (5 samples, 0.55%)</title><rect x="13.0769%" y="1141" width="0.5495%" height="15" fill="rgb(231,73,38)" fg:x="119" fg:w="5"/><text x="13.3269%" y="1151.50"></text></g><g><title>[unknown] (5 samples, 0.55%)</title><rect x="13.0769%" y="1125" width="0.5495%" height="15" fill="rgb(225,20,46)" fg:x="119" fg:w="5"/><text x="13.3269%" y="1135.50"></text></g><g><title>[unknown] (5 samples, 0.55%)</title><rect x="13.0769%" y="1109" width="0.5495%" height="15" fill="rgb(210,31,41)" fg:x="119" fg:w="5"/><text x="13.3269%" y="1119.50"></text></g><g><title>[unknown] (5 samples, 0.55%)</title><rect x="13.0769%" y="1093" width="0.5495%" height="15" fill="rgb(221,200,47)" fg:x="119" fg:w="5"/><text x="13.3269%" y="1103.50"></text></g><g><title>[unknown] (5 samples, 0.55%)</title><rect x="13.0769%" y="1077" width="0.5495%" height="15" fill="rgb(226,26,5)" fg:x="119" fg:w="5"/><text x="13.3269%" y="1087.50"></text></g><g><title>[unknown] (4 samples, 0.44%)</title><rect x="13.1868%" y="1061" width="0.4396%" height="15" fill="rgb(249,33,26)" fg:x="120" fg:w="4"/><text x="13.4368%" y="1071.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="13.4066%" y="1045" width="0.2198%" height="15" fill="rgb(235,183,28)" fg:x="122" fg:w="2"/><text x="13.6566%" y="1055.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="13.4066%" y="1029" width="0.2198%" height="15" fill="rgb(221,5,38)" fg:x="122" fg:w="2"/><text x="13.6566%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="13.5165%" y="1013" width="0.1099%" height="15" fill="rgb(247,18,42)" fg:x="123" fg:w="1"/><text x="13.7665%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="13.5165%" y="997" width="0.1099%" height="15" fill="rgb(241,131,45)" fg:x="123" fg:w="1"/><text x="13.7665%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="13.5165%" y="981" width="0.1099%" height="15" fill="rgb(249,31,29)" fg:x="123" fg:w="1"/><text x="13.7665%" y="991.50"></text></g><g><title>[unknown] (124 samples, 13.63%)</title><rect x="0.1099%" y="1317" width="13.6264%" height="15" fill="rgb(225,111,53)" fg:x="1" fg:w="124"/><text x="0.3599%" y="1327.50">[unknown]</text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="13.6264%" y="1301" width="0.1099%" height="15" fill="rgb(238,160,17)" fg:x="124" fg:w="1"/><text x="13.8764%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="13.6264%" y="1285" width="0.1099%" height="15" fill="rgb(214,148,48)" fg:x="124" fg:w="1"/><text x="13.8764%" y="1295.50"></text></g><g><title>rseq_register_current_thread (1 samples, 0.11%)</title><rect x="13.7363%" y="1285" width="0.1099%" height="15" fill="rgb(232,36,49)" fg:x="125" fg:w="1"/><text x="13.9863%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="13.7363%" y="1269" width="0.1099%" height="15" fill="rgb(209,103,24)" fg:x="125" fg:w="1"/><text x="13.9863%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="13.7363%" y="1253" width="0.1099%" height="15" fill="rgb(229,88,8)" fg:x="125" fg:w="1"/><text x="13.9863%" y="1263.50"></text></g><g><title>rayon_core::registry::WorkerThread::take_local_job (6 samples, 0.66%)</title><rect x="13.8462%" y="1029" width="0.6593%" height="15" fill="rgb(213,181,19)" fg:x="126" fg:w="6"/><text x="14.0962%" y="1039.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (6 samples, 0.66%)</title><rect x="13.8462%" y="1013" width="0.6593%" height="15" fill="rgb(254,191,54)" fg:x="126" fg:w="6"/><text x="14.0962%" y="1023.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (6 samples, 0.66%)</title><rect x="13.8462%" y="997" width="0.6593%" height="15" fill="rgb(241,83,37)" fg:x="126" fg:w="6"/><text x="14.0962%" y="1007.50"></text></g><g><title>crossbeam_epoch::default::with_handle (6 samples, 0.66%)</title><rect x="13.8462%" y="981" width="0.6593%" height="15" fill="rgb(233,36,39)" fg:x="126" fg:w="6"/><text x="14.0962%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.66%)</title><rect x="13.8462%" y="965" width="0.6593%" height="15" fill="rgb(226,3,54)" fg:x="126" fg:w="6"/><text x="14.0962%" y="975.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (6 samples, 0.66%)</title><rect x="13.8462%" y="949" width="0.6593%" height="15" fill="rgb(245,192,40)" fg:x="126" fg:w="6"/><text x="14.0962%" y="959.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (6 samples, 0.66%)</title><rect x="13.8462%" y="933" width="0.6593%" height="15" fill="rgb(238,167,29)" fg:x="126" fg:w="6"/><text x="14.0962%" y="943.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (6 samples, 0.66%)</title><rect x="13.8462%" y="917" width="0.6593%" height="15" fill="rgb(232,182,51)" fg:x="126" fg:w="6"/><text x="14.0962%" y="927.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit::{{closure}} (6 samples, 0.66%)</title><rect x="13.8462%" y="901" width="0.6593%" height="15" fill="rgb(231,60,39)" fg:x="126" fg:w="6"/><text x="14.0962%" y="911.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__init (6 samples, 0.66%)</title><rect x="13.8462%" y="885" width="0.6593%" height="15" fill="rgb(208,69,12)" fg:x="126" fg:w="6"/><text x="14.0962%" y="895.50"></text></g><g><title>crossbeam_epoch::internal::Local::register (6 samples, 0.66%)</title><rect x="13.8462%" y="869" width="0.6593%" height="15" fill="rgb(235,93,37)" fg:x="126" fg:w="6"/><text x="14.0962%" y="879.50"></text></g><g><title>&lt;crossbeam_epoch::collector::Collector as core::clone::Clone&gt;::clone (6 samples, 0.66%)</title><rect x="13.8462%" y="853" width="0.6593%" height="15" fill="rgb(213,116,39)" fg:x="126" fg:w="6"/><text x="14.0962%" y="863.50"></text></g><g><title>__rust_probestack (6 samples, 0.66%)</title><rect x="13.8462%" y="837" width="0.6593%" height="15" fill="rgb(222,207,29)" fg:x="126" fg:w="6"/><text x="14.0962%" y="847.50"></text></g><g><title>[unknown] (6 samples, 0.66%)</title><rect x="13.8462%" y="821" width="0.6593%" height="15" fill="rgb(206,96,30)" fg:x="126" fg:w="6"/><text x="14.0962%" y="831.50"></text></g><g><title>[unknown] (6 samples, 0.66%)</title><rect x="13.8462%" y="805" width="0.6593%" height="15" fill="rgb(218,138,4)" fg:x="126" fg:w="6"/><text x="14.0962%" y="815.50"></text></g><g><title>[unknown] (6 samples, 0.66%)</title><rect x="13.8462%" y="789" width="0.6593%" height="15" fill="rgb(250,191,14)" fg:x="126" fg:w="6"/><text x="14.0962%" y="799.50"></text></g><g><title>[unknown] (6 samples, 0.66%)</title><rect x="13.8462%" y="773" width="0.6593%" height="15" fill="rgb(239,60,40)" fg:x="126" fg:w="6"/><text x="14.0962%" y="783.50"></text></g><g><title>[unknown] (6 samples, 0.66%)</title><rect x="13.8462%" y="757" width="0.6593%" height="15" fill="rgb(206,27,48)" fg:x="126" fg:w="6"/><text x="14.0962%" y="767.50"></text></g><g><title>[unknown] (6 samples, 0.66%)</title><rect x="13.8462%" y="741" width="0.6593%" height="15" fill="rgb(225,35,8)" fg:x="126" fg:w="6"/><text x="14.0962%" y="751.50"></text></g><g><title>[unknown] (6 samples, 0.66%)</title><rect x="13.8462%" y="725" width="0.6593%" height="15" fill="rgb(250,213,24)" fg:x="126" fg:w="6"/><text x="14.0962%" y="735.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.11%)</title><rect x="14.5055%" y="1013" width="0.1099%" height="15" fill="rgb(247,123,22)" fg:x="132" fg:w="1"/><text x="14.7555%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="14.5055%" y="997" width="0.1099%" height="15" fill="rgb(231,138,38)" fg:x="132" fg:w="1"/><text x="14.7555%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="14.5055%" y="981" width="0.1099%" height="15" fill="rgb(231,145,46)" fg:x="132" fg:w="1"/><text x="14.7555%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="14.5055%" y="965" width="0.1099%" height="15" fill="rgb(251,118,11)" fg:x="132" fg:w="1"/><text x="14.7555%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="14.5055%" y="949" width="0.1099%" height="15" fill="rgb(217,147,25)" fg:x="132" fg:w="1"/><text x="14.7555%" y="959.50"></text></g><g><title>std::panic::catch_unwind (85 samples, 9.34%)</title><rect x="13.8462%" y="1205" width="9.3407%" height="15" fill="rgb(247,81,37)" fg:x="126" fg:w="85"/><text x="14.0962%" y="1215.50">std::panic::c..</text></g><g><title>std::panicking::try (85 samples, 9.34%)</title><rect x="13.8462%" y="1189" width="9.3407%" height="15" fill="rgb(209,12,38)" fg:x="126" fg:w="85"/><text x="14.0962%" y="1199.50">std::panickin..</text></g><g><title>std::panicking::try::do_call (85 samples, 9.34%)</title><rect x="13.8462%" y="1173" width="9.3407%" height="15" fill="rgb(227,1,9)" fg:x="126" fg:w="85"/><text x="14.0962%" y="1183.50">std::panickin..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (85 samples, 9.34%)</title><rect x="13.8462%" y="1157" width="9.3407%" height="15" fill="rgb(248,47,43)" fg:x="126" fg:w="85"/><text x="14.0962%" y="1167.50">&lt;core::panic:..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (85 samples, 9.34%)</title><rect x="13.8462%" y="1141" width="9.3407%" height="15" fill="rgb(221,10,30)" fg:x="126" fg:w="85"/><text x="14.0962%" y="1151.50">std::thread::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (85 samples, 9.34%)</title><rect x="13.8462%" y="1125" width="9.3407%" height="15" fill="rgb(210,229,1)" fg:x="126" fg:w="85"/><text x="14.0962%" y="1135.50">std::sys_comm..</text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (85 samples, 9.34%)</title><rect x="13.8462%" y="1109" width="9.3407%" height="15" fill="rgb(222,148,37)" fg:x="126" fg:w="85"/><text x="14.0962%" y="1119.50">&lt;rayon_core::..</text></g><g><title>rayon_core::registry::ThreadBuilder::run (85 samples, 9.34%)</title><rect x="13.8462%" y="1093" width="9.3407%" height="15" fill="rgb(234,67,33)" fg:x="126" fg:w="85"/><text x="14.0962%" y="1103.50">rayon_core::r..</text></g><g><title>rayon_core::registry::main_loop (85 samples, 9.34%)</title><rect x="13.8462%" y="1077" width="9.3407%" height="15" fill="rgb(247,98,35)" fg:x="126" fg:w="85"/><text x="14.0962%" y="1087.50">rayon_core::r..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (85 samples, 9.34%)</title><rect x="13.8462%" y="1061" width="9.3407%" height="15" fill="rgb(247,138,52)" fg:x="126" fg:w="85"/><text x="14.0962%" y="1071.50">rayon_core::r..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (85 samples, 9.34%)</title><rect x="13.8462%" y="1045" width="9.3407%" height="15" fill="rgb(213,79,30)" fg:x="126" fg:w="85"/><text x="14.0962%" y="1055.50">rayon_core::r..</text></g><g><title>rayon_core::sleep::Sleep::no_work_found (79 samples, 8.68%)</title><rect x="14.5055%" y="1029" width="8.6813%" height="15" fill="rgb(246,177,23)" fg:x="132" fg:w="79"/><text x="14.7555%" y="1039.50">rayon_core::..</text></g><g><title>rayon_core::sleep::Sleep::sleep (78 samples, 8.57%)</title><rect x="14.6154%" y="1013" width="8.5714%" height="15" fill="rgb(230,62,27)" fg:x="133" fg:w="78"/><text x="14.8654%" y="1023.50">rayon_core::..</text></g><g><title>std::sync::condvar::Condvar::wait (78 samples, 8.57%)</title><rect x="14.6154%" y="997" width="8.5714%" height="15" fill="rgb(216,154,8)" fg:x="133" fg:w="78"/><text x="14.8654%" y="1007.50">std::sync::c..</text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (78 samples, 8.57%)</title><rect x="14.6154%" y="981" width="8.5714%" height="15" fill="rgb(244,35,45)" fg:x="133" fg:w="78"/><text x="14.8654%" y="991.50">std::sys::un..</text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (78 samples, 8.57%)</title><rect x="14.6154%" y="965" width="8.5714%" height="15" fill="rgb(251,115,12)" fg:x="133" fg:w="78"/><text x="14.8654%" y="975.50">std::sys::un..</text></g><g><title>std::sys::unix::futex::futex_wait (78 samples, 8.57%)</title><rect x="14.6154%" y="949" width="8.5714%" height="15" fill="rgb(240,54,50)" fg:x="133" fg:w="78"/><text x="14.8654%" y="959.50">std::sys::un..</text></g><g><title>syscall (78 samples, 8.57%)</title><rect x="14.6154%" y="933" width="8.5714%" height="15" fill="rgb(233,84,52)" fg:x="133" fg:w="78"/><text x="14.8654%" y="943.50">syscall</text></g><g><title>[unknown] (78 samples, 8.57%)</title><rect x="14.6154%" y="917" width="8.5714%" height="15" fill="rgb(207,117,47)" fg:x="133" fg:w="78"/><text x="14.8654%" y="927.50">[unknown]</text></g><g><title>[unknown] (78 samples, 8.57%)</title><rect x="14.6154%" y="901" width="8.5714%" height="15" fill="rgb(249,43,39)" fg:x="133" fg:w="78"/><text x="14.8654%" y="911.50">[unknown]</text></g><g><title>[unknown] (78 samples, 8.57%)</title><rect x="14.6154%" y="885" width="8.5714%" height="15" fill="rgb(209,38,44)" fg:x="133" fg:w="78"/><text x="14.8654%" y="895.50">[unknown]</text></g><g><title>[unknown] (78 samples, 8.57%)</title><rect x="14.6154%" y="869" width="8.5714%" height="15" fill="rgb(236,212,23)" fg:x="133" fg:w="78"/><text x="14.8654%" y="879.50">[unknown]</text></g><g><title>[unknown] (72 samples, 7.91%)</title><rect x="15.2747%" y="853" width="7.9121%" height="15" fill="rgb(242,79,21)" fg:x="139" fg:w="72"/><text x="15.5247%" y="863.50">[unknown]</text></g><g><title>[unknown] (72 samples, 7.91%)</title><rect x="15.2747%" y="837" width="7.9121%" height="15" fill="rgb(211,96,35)" fg:x="139" fg:w="72"/><text x="15.5247%" y="847.50">[unknown]</text></g><g><title>[unknown] (72 samples, 7.91%)</title><rect x="15.2747%" y="821" width="7.9121%" height="15" fill="rgb(253,215,40)" fg:x="139" fg:w="72"/><text x="15.5247%" y="831.50">[unknown]</text></g><g><title>[unknown] (66 samples, 7.25%)</title><rect x="15.9341%" y="805" width="7.2527%" height="15" fill="rgb(211,81,21)" fg:x="145" fg:w="66"/><text x="16.1841%" y="815.50">[unknown]</text></g><g><title>[unknown] (50 samples, 5.49%)</title><rect x="17.6923%" y="789" width="5.4945%" height="15" fill="rgb(208,190,38)" fg:x="161" fg:w="50"/><text x="17.9423%" y="799.50">[unknow..</text></g><g><title>[unknown] (50 samples, 5.49%)</title><rect x="17.6923%" y="773" width="5.4945%" height="15" fill="rgb(235,213,38)" fg:x="161" fg:w="50"/><text x="17.9423%" y="783.50">[unknow..</text></g><g><title>[unknown] (18 samples, 1.98%)</title><rect x="21.2088%" y="757" width="1.9780%" height="15" fill="rgb(237,122,38)" fg:x="193" fg:w="18"/><text x="21.4588%" y="767.50">[..</text></g><g><title>[unknown] (18 samples, 1.98%)</title><rect x="21.2088%" y="741" width="1.9780%" height="15" fill="rgb(244,218,35)" fg:x="193" fg:w="18"/><text x="21.4588%" y="751.50">[..</text></g><g><title>[unknown] (7 samples, 0.77%)</title><rect x="23.1868%" y="1045" width="0.7692%" height="15" fill="rgb(240,68,47)" fg:x="211" fg:w="7"/><text x="23.4368%" y="1055.50"></text></g><g><title>[unknown] (7 samples, 0.77%)</title><rect x="23.1868%" y="1029" width="0.7692%" height="15" fill="rgb(210,16,53)" fg:x="211" fg:w="7"/><text x="23.4368%" y="1039.50"></text></g><g><title>[unknown] (7 samples, 0.77%)</title><rect x="23.1868%" y="1013" width="0.7692%" height="15" fill="rgb(235,124,12)" fg:x="211" fg:w="7"/><text x="23.4368%" y="1023.50"></text></g><g><title>[unknown] (7 samples, 0.77%)</title><rect x="23.1868%" y="997" width="0.7692%" height="15" fill="rgb(224,169,11)" fg:x="211" fg:w="7"/><text x="23.4368%" y="1007.50"></text></g><g><title>[unknown] (7 samples, 0.77%)</title><rect x="23.1868%" y="981" width="0.7692%" height="15" fill="rgb(250,166,2)" fg:x="211" fg:w="7"/><text x="23.4368%" y="991.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="23.7363%" y="965" width="0.2198%" height="15" fill="rgb(242,216,29)" fg:x="216" fg:w="2"/><text x="23.9863%" y="975.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="23.7363%" y="949" width="0.2198%" height="15" fill="rgb(230,116,27)" fg:x="216" fg:w="2"/><text x="23.9863%" y="959.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="23.7363%" y="933" width="0.2198%" height="15" fill="rgb(228,99,48)" fg:x="216" fg:w="2"/><text x="23.9863%" y="943.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="23.7363%" y="917" width="0.2198%" height="15" fill="rgb(253,11,6)" fg:x="216" fg:w="2"/><text x="23.9863%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="23.8462%" y="901" width="0.1099%" height="15" fill="rgb(247,143,39)" fg:x="217" fg:w="1"/><text x="24.0962%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="23.8462%" y="885" width="0.1099%" height="15" fill="rgb(236,97,10)" fg:x="217" fg:w="1"/><text x="24.0962%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="23.8462%" y="869" width="0.1099%" height="15" fill="rgb(233,208,19)" fg:x="217" fg:w="1"/><text x="24.0962%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="23.8462%" y="853" width="0.1099%" height="15" fill="rgb(216,164,2)" fg:x="217" fg:w="1"/><text x="24.0962%" y="863.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.11%)</title><rect x="23.9560%" y="1045" width="0.1099%" height="15" fill="rgb(220,129,5)" fg:x="218" fg:w="1"/><text x="24.2060%" y="1055.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.11%)</title><rect x="23.9560%" y="1029" width="0.1099%" height="15" fill="rgb(242,17,10)" fg:x="218" fg:w="1"/><text x="24.2060%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="23.9560%" y="1013" width="0.1099%" height="15" fill="rgb(242,107,0)" fg:x="218" fg:w="1"/><text x="24.2060%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="23.9560%" y="997" width="0.1099%" height="15" fill="rgb(251,28,31)" fg:x="218" fg:w="1"/><text x="24.2060%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="23.9560%" y="981" width="0.1099%" height="15" fill="rgb(233,223,10)" fg:x="218" fg:w="1"/><text x="24.2060%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="23.9560%" y="965" width="0.1099%" height="15" fill="rgb(215,21,27)" fg:x="218" fg:w="1"/><text x="24.2060%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="23.9560%" y="949" width="0.1099%" height="15" fill="rgb(232,23,21)" fg:x="218" fg:w="1"/><text x="24.2060%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="23.9560%" y="933" width="0.1099%" height="15" fill="rgb(244,5,23)" fg:x="218" fg:w="1"/><text x="24.2060%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="23.9560%" y="917" width="0.1099%" height="15" fill="rgb(226,81,46)" fg:x="218" fg:w="1"/><text x="24.2060%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="23.9560%" y="901" width="0.1099%" height="15" fill="rgb(247,70,30)" fg:x="218" fg:w="1"/><text x="24.2060%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="23.9560%" y="885" width="0.1099%" height="15" fill="rgb(212,68,19)" fg:x="218" fg:w="1"/><text x="24.2060%" y="895.50"></text></g><g><title>__GI___libc_malloc (10 samples, 1.10%)</title><rect x="23.1868%" y="1173" width="1.0989%" height="15" fill="rgb(240,187,13)" fg:x="211" fg:w="10"/><text x="23.4368%" y="1183.50"></text></g><g><title>tcache_init (10 samples, 1.10%)</title><rect x="23.1868%" y="1157" width="1.0989%" height="15" fill="rgb(223,113,26)" fg:x="211" fg:w="10"/><text x="23.4368%" y="1167.50"></text></g><g><title>tcache_init (10 samples, 1.10%)</title><rect x="23.1868%" y="1141" width="1.0989%" height="15" fill="rgb(206,192,2)" fg:x="211" fg:w="10"/><text x="23.4368%" y="1151.50"></text></g><g><title>arena_get2 (10 samples, 1.10%)</title><rect x="23.1868%" y="1125" width="1.0989%" height="15" fill="rgb(241,108,4)" fg:x="211" fg:w="10"/><text x="23.4368%" y="1135.50"></text></g><g><title>arena_get2 (10 samples, 1.10%)</title><rect x="23.1868%" y="1109" width="1.0989%" height="15" fill="rgb(247,173,49)" fg:x="211" fg:w="10"/><text x="23.4368%" y="1119.50"></text></g><g><title>_int_new_arena (10 samples, 1.10%)</title><rect x="23.1868%" y="1093" width="1.0989%" height="15" fill="rgb(224,114,35)" fg:x="211" fg:w="10"/><text x="23.4368%" y="1103.50"></text></g><g><title>new_heap (10 samples, 1.10%)</title><rect x="23.1868%" y="1077" width="1.0989%" height="15" fill="rgb(245,159,27)" fg:x="211" fg:w="10"/><text x="23.4368%" y="1087.50"></text></g><g><title>alloc_new_heap (10 samples, 1.10%)</title><rect x="23.1868%" y="1061" width="1.0989%" height="15" fill="rgb(245,172,44)" fg:x="211" fg:w="10"/><text x="23.4368%" y="1071.50"></text></g><g><title>__GI___munmap (2 samples, 0.22%)</title><rect x="24.0659%" y="1045" width="0.2198%" height="15" fill="rgb(236,23,11)" fg:x="219" fg:w="2"/><text x="24.3159%" y="1055.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="24.0659%" y="1029" width="0.2198%" height="15" fill="rgb(205,117,38)" fg:x="219" fg:w="2"/><text x="24.3159%" y="1039.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="24.0659%" y="1013" width="0.2198%" height="15" fill="rgb(237,72,25)" fg:x="219" fg:w="2"/><text x="24.3159%" y="1023.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="24.0659%" y="997" width="0.2198%" height="15" fill="rgb(244,70,9)" fg:x="219" fg:w="2"/><text x="24.3159%" y="1007.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="24.0659%" y="981" width="0.2198%" height="15" fill="rgb(217,125,39)" fg:x="219" fg:w="2"/><text x="24.3159%" y="991.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="24.0659%" y="965" width="0.2198%" height="15" fill="rgb(235,36,10)" fg:x="219" fg:w="2"/><text x="24.3159%" y="975.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="24.0659%" y="949" width="0.2198%" height="15" fill="rgb(251,123,47)" fg:x="219" fg:w="2"/><text x="24.3159%" y="959.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="24.0659%" y="933" width="0.2198%" height="15" fill="rgb(221,13,13)" fg:x="219" fg:w="2"/><text x="24.3159%" y="943.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (96 samples, 10.55%)</title><rect x="13.8462%" y="1269" width="10.5495%" height="15" fill="rgb(238,131,9)" fg:x="126" fg:w="96"/><text x="14.0962%" y="1279.50">&lt;alloc::boxed::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (96 samples, 10.55%)</title><rect x="13.8462%" y="1253" width="10.5495%" height="15" fill="rgb(211,50,8)" fg:x="126" fg:w="96"/><text x="14.0962%" y="1263.50">&lt;alloc::boxed::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (96 samples, 10.55%)</title><rect x="13.8462%" y="1237" width="10.5495%" height="15" fill="rgb(245,182,24)" fg:x="126" fg:w="96"/><text x="14.0962%" y="1247.50">core::ops::func..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (96 samples, 10.55%)</title><rect x="13.8462%" y="1221" width="10.5495%" height="15" fill="rgb(242,14,37)" fg:x="126" fg:w="96"/><text x="14.0962%" y="1231.50">std::thread::Bu..</text></g><g><title>std::sys::unix::thread::guard::current (11 samples, 1.21%)</title><rect x="23.1868%" y="1205" width="1.2088%" height="15" fill="rgb(246,228,12)" fg:x="211" fg:w="11"/><text x="23.4368%" y="1215.50"></text></g><g><title>__pthread_getattr_np (11 samples, 1.21%)</title><rect x="23.1868%" y="1189" width="1.2088%" height="15" fill="rgb(213,55,15)" fg:x="211" fg:w="11"/><text x="23.4368%" y="1199.50"></text></g><g><title>__GI___pthread_getaffinity_np (1 samples, 0.11%)</title><rect x="24.2857%" y="1173" width="0.1099%" height="15" fill="rgb(209,9,3)" fg:x="221" fg:w="1"/><text x="24.5357%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="24.2857%" y="1157" width="0.1099%" height="15" fill="rgb(230,59,30)" fg:x="221" fg:w="1"/><text x="24.5357%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="24.2857%" y="1141" width="0.1099%" height="15" fill="rgb(209,121,21)" fg:x="221" fg:w="1"/><text x="24.5357%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="24.2857%" y="1125" width="0.1099%" height="15" fill="rgb(220,109,13)" fg:x="221" fg:w="1"/><text x="24.5357%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="24.2857%" y="1109" width="0.1099%" height="15" fill="rgb(232,18,1)" fg:x="221" fg:w="1"/><text x="24.5357%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="24.2857%" y="1093" width="0.1099%" height="15" fill="rgb(215,41,42)" fg:x="221" fg:w="1"/><text x="24.5357%" y="1103.50"></text></g><g><title>__GI___mmap64 (10 samples, 1.10%)</title><rect x="24.3956%" y="1205" width="1.0989%" height="15" fill="rgb(224,123,36)" fg:x="222" fg:w="10"/><text x="24.6456%" y="1215.50"></text></g><g><title>__GI___mmap64 (10 samples, 1.10%)</title><rect x="24.3956%" y="1189" width="1.0989%" height="15" fill="rgb(240,125,3)" fg:x="222" fg:w="10"/><text x="24.6456%" y="1199.50"></text></g><g><title>[unknown] (10 samples, 1.10%)</title><rect x="24.3956%" y="1173" width="1.0989%" height="15" fill="rgb(205,98,50)" fg:x="222" fg:w="10"/><text x="24.6456%" y="1183.50"></text></g><g><title>[unknown] (10 samples, 1.10%)</title><rect x="24.3956%" y="1157" width="1.0989%" height="15" fill="rgb(205,185,37)" fg:x="222" fg:w="10"/><text x="24.6456%" y="1167.50"></text></g><g><title>[unknown] (10 samples, 1.10%)</title><rect x="24.3956%" y="1141" width="1.0989%" height="15" fill="rgb(238,207,15)" fg:x="222" fg:w="10"/><text x="24.6456%" y="1151.50"></text></g><g><title>[unknown] (10 samples, 1.10%)</title><rect x="24.3956%" y="1125" width="1.0989%" height="15" fill="rgb(213,199,42)" fg:x="222" fg:w="10"/><text x="24.6456%" y="1135.50"></text></g><g><title>[unknown] (10 samples, 1.10%)</title><rect x="24.3956%" y="1109" width="1.0989%" height="15" fill="rgb(235,201,11)" fg:x="222" fg:w="10"/><text x="24.6456%" y="1119.50"></text></g><g><title>[unknown] (10 samples, 1.10%)</title><rect x="24.3956%" y="1093" width="1.0989%" height="15" fill="rgb(207,46,11)" fg:x="222" fg:w="10"/><text x="24.6456%" y="1103.50"></text></g><g><title>[unknown] (10 samples, 1.10%)</title><rect x="24.3956%" y="1077" width="1.0989%" height="15" fill="rgb(241,35,35)" fg:x="222" fg:w="10"/><text x="24.6456%" y="1087.50"></text></g><g><title>[unknown] (9 samples, 0.99%)</title><rect x="24.5055%" y="1061" width="0.9890%" height="15" fill="rgb(243,32,47)" fg:x="223" fg:w="9"/><text x="24.7555%" y="1071.50"></text></g><g><title>[unknown] (7 samples, 0.77%)</title><rect x="24.7253%" y="1045" width="0.7692%" height="15" fill="rgb(247,202,23)" fg:x="225" fg:w="7"/><text x="24.9753%" y="1055.50"></text></g><g><title>[unknown] (6 samples, 0.66%)</title><rect x="24.8352%" y="1029" width="0.6593%" height="15" fill="rgb(219,102,11)" fg:x="226" fg:w="6"/><text x="25.0852%" y="1039.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="25.2747%" y="1013" width="0.2198%" height="15" fill="rgb(243,110,44)" fg:x="230" fg:w="2"/><text x="25.5247%" y="1023.50"></text></g><g><title>__clone3 (111 samples, 12.20%)</title><rect x="13.7363%" y="1317" width="12.1978%" height="15" fill="rgb(222,74,54)" fg:x="125" fg:w="111"/><text x="13.9863%" y="1327.50">__clone3</text></g><g><title>start_thread (111 samples, 12.20%)</title><rect x="13.7363%" y="1301" width="12.1978%" height="15" fill="rgb(216,99,12)" fg:x="125" fg:w="111"/><text x="13.9863%" y="1311.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (110 samples, 12.09%)</title><rect x="13.8462%" y="1285" width="12.0879%" height="15" fill="rgb(226,22,26)" fg:x="126" fg:w="110"/><text x="14.0962%" y="1295.50">std::sys::unix::th..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (14 samples, 1.54%)</title><rect x="24.3956%" y="1269" width="1.5385%" height="15" fill="rgb(217,163,10)" fg:x="222" fg:w="14"/><text x="24.6456%" y="1279.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (14 samples, 1.54%)</title><rect x="24.3956%" y="1253" width="1.5385%" height="15" fill="rgb(213,25,53)" fg:x="222" fg:w="14"/><text x="24.6456%" y="1263.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (14 samples, 1.54%)</title><rect x="24.3956%" y="1237" width="1.5385%" height="15" fill="rgb(252,105,26)" fg:x="222" fg:w="14"/><text x="24.6456%" y="1247.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (14 samples, 1.54%)</title><rect x="24.3956%" y="1221" width="1.5385%" height="15" fill="rgb(220,39,43)" fg:x="222" fg:w="14"/><text x="24.6456%" y="1231.50"></text></g><g><title>__GI___mprotect (4 samples, 0.44%)</title><rect x="25.4945%" y="1205" width="0.4396%" height="15" fill="rgb(229,68,48)" fg:x="232" fg:w="4"/><text x="25.7445%" y="1215.50"></text></g><g><title>[unknown] (4 samples, 0.44%)</title><rect x="25.4945%" y="1189" width="0.4396%" height="15" fill="rgb(252,8,32)" fg:x="232" fg:w="4"/><text x="25.7445%" y="1199.50"></text></g><g><title>[unknown] (4 samples, 0.44%)</title><rect x="25.4945%" y="1173" width="0.4396%" height="15" fill="rgb(223,20,43)" fg:x="232" fg:w="4"/><text x="25.7445%" y="1183.50"></text></g><g><title>[unknown] (4 samples, 0.44%)</title><rect x="25.4945%" y="1157" width="0.4396%" height="15" fill="rgb(229,81,49)" fg:x="232" fg:w="4"/><text x="25.7445%" y="1167.50"></text></g><g><title>[unknown] (4 samples, 0.44%)</title><rect x="25.4945%" y="1141" width="0.4396%" height="15" fill="rgb(236,28,36)" fg:x="232" fg:w="4"/><text x="25.7445%" y="1151.50"></text></g><g><title>[unknown] (4 samples, 0.44%)</title><rect x="25.4945%" y="1125" width="0.4396%" height="15" fill="rgb(249,185,26)" fg:x="232" fg:w="4"/><text x="25.7445%" y="1135.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="25.6044%" y="1109" width="0.3297%" height="15" fill="rgb(249,174,33)" fg:x="233" fg:w="3"/><text x="25.8544%" y="1119.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="25.7143%" y="1093" width="0.2198%" height="15" fill="rgb(233,201,37)" fg:x="234" fg:w="2"/><text x="25.9643%" y="1103.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="25.7143%" y="1077" width="0.2198%" height="15" fill="rgb(221,78,26)" fg:x="234" fg:w="2"/><text x="25.9643%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="25.8242%" y="1061" width="0.1099%" height="15" fill="rgb(250,127,30)" fg:x="235" fg:w="1"/><text x="26.0742%" y="1071.50"></text></g><g><title>&lt;std::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="25.9341%" y="1045" width="0.1099%" height="15" fill="rgb(230,49,44)" fg:x="236" fg:w="1"/><text x="26.1841%" y="1055.50"></text></g><g><title>&lt;std::sys::unix::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="25.9341%" y="1029" width="0.1099%" height="15" fill="rgb(229,67,23)" fg:x="236" fg:w="1"/><text x="26.1841%" y="1039.50"></text></g><g><title>__GI___readdir64 (1 samples, 0.11%)</title><rect x="25.9341%" y="1013" width="0.1099%" height="15" fill="rgb(249,83,47)" fg:x="236" fg:w="1"/><text x="26.1841%" y="1023.50"></text></g><g><title>__GI___getdents64 (1 samples, 0.11%)</title><rect x="25.9341%" y="997" width="0.1099%" height="15" fill="rgb(215,43,3)" fg:x="236" fg:w="1"/><text x="26.1841%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="25.9341%" y="981" width="0.1099%" height="15" fill="rgb(238,154,13)" fg:x="236" fg:w="1"/><text x="26.1841%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="25.9341%" y="965" width="0.1099%" height="15" fill="rgb(219,56,2)" fg:x="236" fg:w="1"/><text x="26.1841%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="25.9341%" y="949" width="0.1099%" height="15" fill="rgb(233,0,4)" fg:x="236" fg:w="1"/><text x="26.1841%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="25.9341%" y="933" width="0.1099%" height="15" fill="rgb(235,30,7)" fg:x="236" fg:w="1"/><text x="26.1841%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="25.9341%" y="917" width="0.1099%" height="15" fill="rgb(250,79,13)" fg:x="236" fg:w="1"/><text x="26.1841%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="25.9341%" y="901" width="0.1099%" height="15" fill="rgb(211,146,34)" fg:x="236" fg:w="1"/><text x="26.1841%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="25.9341%" y="885" width="0.1099%" height="15" fill="rgb(228,22,38)" fg:x="236" fg:w="1"/><text x="26.1841%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;memmap2::Mmap&gt;&gt; (1 samples, 0.11%)</title><rect x="26.0440%" y="645" width="0.1099%" height="15" fill="rgb(235,168,5)" fg:x="237" fg:w="1"/><text x="26.2940%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="26.0440%" y="629" width="0.1099%" height="15" fill="rgb(221,155,16)" fg:x="237" fg:w="1"/><text x="26.2940%" y="639.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.11%)</title><rect x="26.0440%" y="613" width="0.1099%" height="15" fill="rgb(215,215,53)" fg:x="237" fg:w="1"/><text x="26.2940%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;memmap2::Mmap&gt; (1 samples, 0.11%)</title><rect x="26.0440%" y="597" width="0.1099%" height="15" fill="rgb(223,4,10)" fg:x="237" fg:w="1"/><text x="26.2940%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;memmap2::os::MmapInner&gt; (1 samples, 0.11%)</title><rect x="26.0440%" y="581" width="0.1099%" height="15" fill="rgb(234,103,6)" fg:x="237" fg:w="1"/><text x="26.2940%" y="591.50"></text></g><g><title>__GI___munmap (1 samples, 0.11%)</title><rect x="26.0440%" y="565" width="0.1099%" height="15" fill="rgb(227,97,0)" fg:x="237" fg:w="1"/><text x="26.2940%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="26.0440%" y="549" width="0.1099%" height="15" fill="rgb(234,150,53)" fg:x="237" fg:w="1"/><text x="26.2940%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="26.0440%" y="533" width="0.1099%" height="15" fill="rgb(228,201,54)" fg:x="237" fg:w="1"/><text x="26.2940%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="26.0440%" y="517" width="0.1099%" height="15" fill="rgb(222,22,37)" fg:x="237" fg:w="1"/><text x="26.2940%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="26.0440%" y="501" width="0.1099%" height="15" fill="rgb(237,53,32)" fg:x="237" fg:w="1"/><text x="26.2940%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="26.0440%" y="485" width="0.1099%" height="15" fill="rgb(233,25,53)" fg:x="237" fg:w="1"/><text x="26.2940%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="26.0440%" y="469" width="0.1099%" height="15" fill="rgb(210,40,34)" fg:x="237" fg:w="1"/><text x="26.2940%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="26.0440%" y="453" width="0.1099%" height="15" fill="rgb(241,220,44)" fg:x="237" fg:w="1"/><text x="26.2940%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="26.0440%" y="437" width="0.1099%" height="15" fill="rgb(235,28,35)" fg:x="237" fg:w="1"/><text x="26.2940%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="26.0440%" y="421" width="0.1099%" height="15" fill="rgb(210,56,17)" fg:x="237" fg:w="1"/><text x="26.2940%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="26.0440%" y="405" width="0.1099%" height="15" fill="rgb(224,130,29)" fg:x="237" fg:w="1"/><text x="26.2940%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="26.0440%" y="389" width="0.1099%" height="15" fill="rgb(235,212,8)" fg:x="237" fg:w="1"/><text x="26.2940%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="26.0440%" y="373" width="0.1099%" height="15" fill="rgb(223,33,50)" fg:x="237" fg:w="1"/><text x="26.2940%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="26.0440%" y="357" width="0.1099%" height="15" fill="rgb(219,149,13)" fg:x="237" fg:w="1"/><text x="26.2940%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="26.0440%" y="341" width="0.1099%" height="15" fill="rgb(250,156,29)" fg:x="237" fg:w="1"/><text x="26.2940%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="26.0440%" y="325" width="0.1099%" height="15" fill="rgb(216,193,19)" fg:x="237" fg:w="1"/><text x="26.2940%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="26.0440%" y="309" width="0.1099%" height="15" fill="rgb(216,135,14)" fg:x="237" fg:w="1"/><text x="26.2940%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser::Parser&gt; (2 samples, 0.22%)</title><rect x="26.0440%" y="661" width="0.2198%" height="15" fill="rgb(241,47,5)" fg:x="237" fg:w="2"/><text x="26.2940%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser_settings::Maps&gt; (1 samples, 0.11%)</title><rect x="26.1538%" y="645" width="0.1099%" height="15" fill="rgb(233,42,35)" fg:x="238" fg:w="1"/><text x="26.4038%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u16,demoparser::parsing::demo_parsing::data_table::ServerClass,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.11%)</title><rect x="26.1538%" y="629" width="0.1099%" height="15" fill="rgb(231,13,6)" fg:x="238" fg:w="1"/><text x="26.4038%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u16,demoparser::parsing::demo_parsing::data_table::ServerClass,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.11%)</title><rect x="26.1538%" y="613" width="0.1099%" height="15" fill="rgb(207,181,40)" fg:x="238" fg:w="1"/><text x="26.4038%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u16,demoparser::parsing::demo_parsing::data_table::ServerClass)&gt;&gt; (1 samples, 0.11%)</title><rect x="26.1538%" y="597" width="0.1099%" height="15" fill="rgb(254,173,49)" fg:x="238" fg:w="1"/><text x="26.4038%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="26.1538%" y="581" width="0.1099%" height="15" fill="rgb(221,1,38)" fg:x="238" fg:w="1"/><text x="26.4038%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.11%)</title><rect x="26.1538%" y="565" width="0.1099%" height="15" fill="rgb(206,124,46)" fg:x="238" fg:w="1"/><text x="26.4038%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.11%)</title><rect x="26.1538%" y="549" width="0.1099%" height="15" fill="rgb(249,21,11)" fg:x="238" fg:w="1"/><text x="26.4038%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.11%)</title><rect x="26.1538%" y="533" width="0.1099%" height="15" fill="rgb(222,201,40)" fg:x="238" fg:w="1"/><text x="26.4038%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u16,demoparser::parsing::demo_parsing::data_table::ServerClass)&gt; (1 samples, 0.11%)</title><rect x="26.1538%" y="517" width="0.1099%" height="15" fill="rgb(235,61,29)" fg:x="238" fg:w="1"/><text x="26.4038%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::data_table::ServerClass&gt; (1 samples, 0.11%)</title><rect x="26.1538%" y="501" width="0.1099%" height="15" fill="rgb(219,207,3)" fg:x="238" fg:w="1"/><text x="26.4038%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::demo_parsing::entities::Prop&gt;&gt; (1 samples, 0.11%)</title><rect x="26.1538%" y="485" width="0.1099%" height="15" fill="rgb(222,56,46)" fg:x="238" fg:w="1"/><text x="26.4038%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="26.1538%" y="469" width="0.1099%" height="15" fill="rgb(239,76,54)" fg:x="238" fg:w="1"/><text x="26.4038%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::demo_parsing::entities::Prop]&gt; (1 samples, 0.11%)</title><rect x="26.1538%" y="453" width="0.1099%" height="15" fill="rgb(231,124,27)" fg:x="238" fg:w="1"/><text x="26.4038%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::entities::Prop&gt; (1 samples, 0.11%)</title><rect x="26.1538%" y="437" width="0.1099%" height="15" fill="rgb(249,195,6)" fg:x="238" fg:w="1"/><text x="26.4038%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.11%)</title><rect x="26.1538%" y="421" width="0.1099%" height="15" fill="rgb(237,174,47)" fg:x="238" fg:w="1"/><text x="26.4038%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.11%)</title><rect x="26.1538%" y="405" width="0.1099%" height="15" fill="rgb(206,201,31)" fg:x="238" fg:w="1"/><text x="26.4038%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.11%)</title><rect x="26.1538%" y="389" width="0.1099%" height="15" fill="rgb(231,57,52)" fg:x="238" fg:w="1"/><text x="26.4038%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="26.1538%" y="373" width="0.1099%" height="15" fill="rgb(248,177,22)" fg:x="238" fg:w="1"/><text x="26.4038%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.11%)</title><rect x="26.1538%" y="357" width="0.1099%" height="15" fill="rgb(215,211,37)" fg:x="238" fg:w="1"/><text x="26.4038%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.11%)</title><rect x="26.1538%" y="341" width="0.1099%" height="15" fill="rgb(241,128,51)" fg:x="238" fg:w="1"/><text x="26.4038%" y="351.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="26.1538%" y="325" width="0.1099%" height="15" fill="rgb(227,165,31)" fg:x="238" fg:w="1"/><text x="26.4038%" y="335.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="26.1538%" y="309" width="0.1099%" height="15" fill="rgb(228,167,24)" fg:x="238" fg:w="1"/><text x="26.4038%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::cache::cache_writer::WriteCache&gt; (6 samples, 0.66%)</title><rect x="26.2637%" y="629" width="0.6593%" height="15" fill="rgb(228,143,12)" fg:x="239" fg:w="6"/><text x="26.5137%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;demoparser::parsing::demo_parsing::entities_cache_only::EntityIndicies&gt;&gt;&gt; (6 samples, 0.66%)</title><rect x="26.2637%" y="613" width="0.6593%" height="15" fill="rgb(249,149,8)" fg:x="239" fg:w="6"/><text x="26.5137%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.66%)</title><rect x="26.2637%" y="597" width="0.6593%" height="15" fill="rgb(243,35,44)" fg:x="239" fg:w="6"/><text x="26.5137%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;demoparser::parsing::demo_parsing::entities_cache_only::EntityIndicies&gt;]&gt; (6 samples, 0.66%)</title><rect x="26.2637%" y="581" width="0.6593%" height="15" fill="rgb(246,89,9)" fg:x="239" fg:w="6"/><text x="26.5137%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::demo_parsing::entities_cache_only::EntityIndicies&gt;&gt; (6 samples, 0.66%)</title><rect x="26.2637%" y="565" width="0.6593%" height="15" fill="rgb(233,213,13)" fg:x="239" fg:w="6"/><text x="26.5137%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.66%)</title><rect x="26.2637%" y="549" width="0.6593%" height="15" fill="rgb(233,141,41)" fg:x="239" fg:w="6"/><text x="26.5137%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::demo_parsing::entities_cache_only::EntityIndicies]&gt; (6 samples, 0.66%)</title><rect x="26.2637%" y="533" width="0.6593%" height="15" fill="rgb(239,167,4)" fg:x="239" fg:w="6"/><text x="26.5137%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::entities_cache_only::EntityIndicies&gt; (6 samples, 0.66%)</title><rect x="26.2637%" y="517" width="0.6593%" height="15" fill="rgb(209,217,16)" fg:x="239" fg:w="6"/><text x="26.5137%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[i32: 32]&gt;&gt; (6 samples, 0.66%)</title><rect x="26.2637%" y="501" width="0.6593%" height="15" fill="rgb(219,88,35)" fg:x="239" fg:w="6"/><text x="26.5137%" y="511.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.66%)</title><rect x="26.2637%" y="485" width="0.6593%" height="15" fill="rgb(220,193,23)" fg:x="239" fg:w="6"/><text x="26.5137%" y="495.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (6 samples, 0.66%)</title><rect x="26.2637%" y="469" width="0.6593%" height="15" fill="rgb(230,90,52)" fg:x="239" fg:w="6"/><text x="26.5137%" y="479.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.11%)</title><rect x="26.9231%" y="581" width="0.1099%" height="15" fill="rgb(252,106,19)" fg:x="245" fg:w="1"/><text x="27.1731%" y="591.50"></text></g><g><title>zip::write::&lt;impl zip::write::zip_writer::ZipWriter&lt;W&gt;&gt;::finish_file (1 samples, 0.11%)</title><rect x="27.0330%" y="581" width="0.1099%" height="15" fill="rgb(206,74,20)" fg:x="246" fg:w="1"/><text x="27.2830%" y="591.50"></text></g><g><title>zip::write::GenericZipWriter&lt;W&gt;::switch_to (1 samples, 0.11%)</title><rect x="27.0330%" y="565" width="0.1099%" height="15" fill="rgb(230,138,44)" fg:x="246" fg:w="1"/><text x="27.2830%" y="575.50"></text></g><g><title>zstd::stream::write::Encoder&lt;W&gt;::finish (1 samples, 0.11%)</title><rect x="27.0330%" y="549" width="0.1099%" height="15" fill="rgb(235,182,43)" fg:x="246" fg:w="1"/><text x="27.2830%" y="559.50"></text></g><g><title>zstd::stream::write::Encoder&lt;W&gt;::try_finish (1 samples, 0.11%)</title><rect x="27.0330%" y="533" width="0.1099%" height="15" fill="rgb(242,16,51)" fg:x="246" fg:w="1"/><text x="27.2830%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;zstd::stream::raw::Encoder&gt; (1 samples, 0.11%)</title><rect x="27.0330%" y="517" width="0.1099%" height="15" fill="rgb(248,9,4)" fg:x="246" fg:w="1"/><text x="27.2830%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;zstd_safe::CCtx&gt; (1 samples, 0.11%)</title><rect x="27.0330%" y="501" width="0.1099%" height="15" fill="rgb(210,31,22)" fg:x="246" fg:w="1"/><text x="27.2830%" y="511.50"></text></g><g><title>ZSTD_freeCCtx (1 samples, 0.11%)</title><rect x="27.0330%" y="485" width="0.1099%" height="15" fill="rgb(239,54,39)" fg:x="246" fg:w="1"/><text x="27.2830%" y="495.50"></text></g><g><title>ZSTD_freeCCtxContent (1 samples, 0.11%)</title><rect x="27.0330%" y="469" width="0.1099%" height="15" fill="rgb(230,99,41)" fg:x="246" fg:w="1"/><text x="27.2830%" y="479.50"></text></g><g><title>ZSTD_cwksp_free (1 samples, 0.11%)</title><rect x="27.0330%" y="453" width="0.1099%" height="15" fill="rgb(253,106,12)" fg:x="246" fg:w="1"/><text x="27.2830%" y="463.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="27.0330%" y="437" width="0.1099%" height="15" fill="rgb(213,46,41)" fg:x="246" fg:w="1"/><text x="27.2830%" y="447.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="27.0330%" y="421" width="0.1099%" height="15" fill="rgb(215,133,35)" fg:x="246" fg:w="1"/><text x="27.2830%" y="431.50"></text></g><g><title>systrim (1 samples, 0.11%)</title><rect x="27.0330%" y="405" width="0.1099%" height="15" fill="rgb(213,28,5)" fg:x="246" fg:w="1"/><text x="27.2830%" y="415.50"></text></g><g><title>__glibc_morecore (1 samples, 0.11%)</title><rect x="27.0330%" y="389" width="0.1099%" height="15" fill="rgb(215,77,49)" fg:x="246" fg:w="1"/><text x="27.2830%" y="399.50"></text></g><g><title>__GI___sbrk (1 samples, 0.11%)</title><rect x="27.0330%" y="373" width="0.1099%" height="15" fill="rgb(248,100,22)" fg:x="246" fg:w="1"/><text x="27.2830%" y="383.50"></text></g><g><title>__GI___sbrk (1 samples, 0.11%)</title><rect x="27.0330%" y="357" width="0.1099%" height="15" fill="rgb(208,67,9)" fg:x="246" fg:w="1"/><text x="27.2830%" y="367.50"></text></g><g><title>__brk (1 samples, 0.11%)</title><rect x="27.0330%" y="341" width="0.1099%" height="15" fill="rgb(219,133,21)" fg:x="246" fg:w="1"/><text x="27.2830%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="27.0330%" y="325" width="0.1099%" height="15" fill="rgb(246,46,29)" fg:x="246" fg:w="1"/><text x="27.2830%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="27.0330%" y="309" width="0.1099%" height="15" fill="rgb(246,185,52)" fg:x="246" fg:w="1"/><text x="27.2830%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="27.0330%" y="293" width="0.1099%" height="15" fill="rgb(252,136,11)" fg:x="246" fg:w="1"/><text x="27.2830%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="27.0330%" y="277" width="0.1099%" height="15" fill="rgb(219,138,53)" fg:x="246" fg:w="1"/><text x="27.2830%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="27.0330%" y="261" width="0.1099%" height="15" fill="rgb(211,51,23)" fg:x="246" fg:w="1"/><text x="27.2830%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="27.0330%" y="245" width="0.1099%" height="15" fill="rgb(247,221,28)" fg:x="246" fg:w="1"/><text x="27.2830%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="27.0330%" y="229" width="0.1099%" height="15" fill="rgb(251,222,45)" fg:x="246" fg:w="1"/><text x="27.2830%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="27.0330%" y="213" width="0.1099%" height="15" fill="rgb(217,162,53)" fg:x="246" fg:w="1"/><text x="27.2830%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="27.0330%" y="197" width="0.1099%" height="15" fill="rgb(229,93,14)" fg:x="246" fg:w="1"/><text x="27.2830%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="27.0330%" y="181" width="0.1099%" height="15" fill="rgb(209,67,49)" fg:x="246" fg:w="1"/><text x="27.2830%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="27.0330%" y="165" width="0.1099%" height="15" fill="rgb(213,87,29)" fg:x="246" fg:w="1"/><text x="27.2830%" y="175.50"></text></g><g><title>__GI___libc_write (20 samples, 2.20%)</title><rect x="27.3626%" y="485" width="2.1978%" height="15" fill="rgb(205,151,52)" fg:x="249" fg:w="20"/><text x="27.6126%" y="495.50">_..</text></g><g><title>__GI___libc_write (20 samples, 2.20%)</title><rect x="27.3626%" y="469" width="2.1978%" height="15" fill="rgb(253,215,39)" fg:x="249" fg:w="20"/><text x="27.6126%" y="479.50">_..</text></g><g><title>[unknown] (20 samples, 2.20%)</title><rect x="27.3626%" y="453" width="2.1978%" height="15" fill="rgb(221,220,41)" fg:x="249" fg:w="20"/><text x="27.6126%" y="463.50">[..</text></g><g><title>[unknown] (20 samples, 2.20%)</title><rect x="27.3626%" y="437" width="2.1978%" height="15" fill="rgb(218,133,21)" fg:x="249" fg:w="20"/><text x="27.6126%" y="447.50">[..</text></g><g><title>[unknown] (20 samples, 2.20%)</title><rect x="27.3626%" y="421" width="2.1978%" height="15" fill="rgb(221,193,43)" fg:x="249" fg:w="20"/><text x="27.6126%" y="431.50">[..</text></g><g><title>[unknown] (20 samples, 2.20%)</title><rect x="27.3626%" y="405" width="2.1978%" height="15" fill="rgb(240,128,52)" fg:x="249" fg:w="20"/><text x="27.6126%" y="415.50">[..</text></g><g><title>[unknown] (20 samples, 2.20%)</title><rect x="27.3626%" y="389" width="2.1978%" height="15" fill="rgb(253,114,12)" fg:x="249" fg:w="20"/><text x="27.6126%" y="399.50">[..</text></g><g><title>[unknown] (20 samples, 2.20%)</title><rect x="27.3626%" y="373" width="2.1978%" height="15" fill="rgb(215,223,47)" fg:x="249" fg:w="20"/><text x="27.6126%" y="383.50">[..</text></g><g><title>[unknown] (20 samples, 2.20%)</title><rect x="27.3626%" y="357" width="2.1978%" height="15" fill="rgb(248,225,23)" fg:x="249" fg:w="20"/><text x="27.6126%" y="367.50">[..</text></g><g><title>[unknown] (19 samples, 2.09%)</title><rect x="27.4725%" y="341" width="2.0879%" height="15" fill="rgb(250,108,0)" fg:x="250" fg:w="19"/><text x="27.7225%" y="351.50">[..</text></g><g><title>[unknown] (18 samples, 1.98%)</title><rect x="27.5824%" y="325" width="1.9780%" height="15" fill="rgb(228,208,7)" fg:x="251" fg:w="18"/><text x="27.8324%" y="335.50">[..</text></g><g><title>[unknown] (17 samples, 1.87%)</title><rect x="27.6923%" y="309" width="1.8681%" height="15" fill="rgb(244,45,10)" fg:x="252" fg:w="17"/><text x="27.9423%" y="319.50">[..</text></g><g><title>[unknown] (13 samples, 1.43%)</title><rect x="28.1319%" y="293" width="1.4286%" height="15" fill="rgb(207,125,25)" fg:x="256" fg:w="13"/><text x="28.3819%" y="303.50"></text></g><g><title>[unknown] (11 samples, 1.21%)</title><rect x="28.3516%" y="277" width="1.2088%" height="15" fill="rgb(210,195,18)" fg:x="258" fg:w="11"/><text x="28.6016%" y="287.50"></text></g><g><title>[unknown] (9 samples, 0.99%)</title><rect x="28.5714%" y="261" width="0.9890%" height="15" fill="rgb(249,80,12)" fg:x="260" fg:w="9"/><text x="28.8214%" y="271.50"></text></g><g><title>[unknown] (9 samples, 0.99%)</title><rect x="28.5714%" y="245" width="0.9890%" height="15" fill="rgb(221,65,9)" fg:x="260" fg:w="9"/><text x="28.8214%" y="255.50"></text></g><g><title>[unknown] (9 samples, 0.99%)</title><rect x="28.5714%" y="229" width="0.9890%" height="15" fill="rgb(235,49,36)" fg:x="260" fg:w="9"/><text x="28.8214%" y="239.50"></text></g><g><title>[unknown] (7 samples, 0.77%)</title><rect x="28.7912%" y="213" width="0.7692%" height="15" fill="rgb(225,32,20)" fg:x="262" fg:w="7"/><text x="29.0412%" y="223.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="29.2308%" y="197" width="0.3297%" height="15" fill="rgb(215,141,46)" fg:x="266" fg:w="3"/><text x="29.4808%" y="207.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="29.3407%" y="181" width="0.2198%" height="15" fill="rgb(250,160,47)" fg:x="267" fg:w="2"/><text x="29.5907%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="29.4505%" y="165" width="0.1099%" height="15" fill="rgb(216,222,40)" fg:x="268" fg:w="1"/><text x="29.7005%" y="175.50"></text></g><g><title>byteorder::io::WriteBytesExt::write_u16 (22 samples, 2.42%)</title><rect x="27.2527%" y="565" width="2.4176%" height="15" fill="rgb(234,217,39)" fg:x="248" fg:w="22"/><text x="27.5027%" y="575.50">by..</text></g><g><title>std::io::Write::write_all (22 samples, 2.42%)</title><rect x="27.2527%" y="549" width="2.4176%" height="15" fill="rgb(207,178,40)" fg:x="248" fg:w="22"/><text x="27.5027%" y="559.50">st..</text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (21 samples, 2.31%)</title><rect x="27.3626%" y="533" width="2.3077%" height="15" fill="rgb(221,136,13)" fg:x="249" fg:w="21"/><text x="27.6126%" y="543.50">s..</text></g><g><title>std::sys::unix::net::Socket::write (21 samples, 2.31%)</title><rect x="27.3626%" y="517" width="2.3077%" height="15" fill="rgb(249,199,10)" fg:x="249" fg:w="21"/><text x="27.6126%" y="527.50">s..</text></g><g><title>std::sys::unix::fd::FileDesc::write (21 samples, 2.31%)</title><rect x="27.3626%" y="501" width="2.3077%" height="15" fill="rgb(249,222,13)" fg:x="249" fg:w="21"/><text x="27.6126%" y="511.50">s..</text></g><g><title>std::sys::unix::cvt (1 samples, 0.11%)</title><rect x="29.5604%" y="485" width="0.1099%" height="15" fill="rgb(244,185,38)" fg:x="269" fg:w="1"/><text x="29.8104%" y="495.50"></text></g><g><title>byteorder::io::WriteBytesExt::write_u32 (9 samples, 0.99%)</title><rect x="29.6703%" y="565" width="0.9890%" height="15" fill="rgb(236,202,9)" fg:x="270" fg:w="9"/><text x="29.9203%" y="575.50"></text></g><g><title>std::io::Write::write_all (9 samples, 0.99%)</title><rect x="29.6703%" y="549" width="0.9890%" height="15" fill="rgb(250,229,37)" fg:x="270" fg:w="9"/><text x="29.9203%" y="559.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (9 samples, 0.99%)</title><rect x="29.6703%" y="533" width="0.9890%" height="15" fill="rgb(206,174,23)" fg:x="270" fg:w="9"/><text x="29.9203%" y="543.50"></text></g><g><title>std::sys::unix::net::Socket::write (9 samples, 0.99%)</title><rect x="29.6703%" y="517" width="0.9890%" height="15" fill="rgb(211,33,43)" fg:x="270" fg:w="9"/><text x="29.9203%" y="527.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (9 samples, 0.99%)</title><rect x="29.6703%" y="501" width="0.9890%" height="15" fill="rgb(245,58,50)" fg:x="270" fg:w="9"/><text x="29.9203%" y="511.50"></text></g><g><title>__GI___libc_write (9 samples, 0.99%)</title><rect x="29.6703%" y="485" width="0.9890%" height="15" fill="rgb(244,68,36)" fg:x="270" fg:w="9"/><text x="29.9203%" y="495.50"></text></g><g><title>__GI___libc_write (9 samples, 0.99%)</title><rect x="29.6703%" y="469" width="0.9890%" height="15" fill="rgb(232,229,15)" fg:x="270" fg:w="9"/><text x="29.9203%" y="479.50"></text></g><g><title>[unknown] (9 samples, 0.99%)</title><rect x="29.6703%" y="453" width="0.9890%" height="15" fill="rgb(254,30,23)" fg:x="270" fg:w="9"/><text x="29.9203%" y="463.50"></text></g><g><title>[unknown] (9 samples, 0.99%)</title><rect x="29.6703%" y="437" width="0.9890%" height="15" fill="rgb(235,160,14)" fg:x="270" fg:w="9"/><text x="29.9203%" y="447.50"></text></g><g><title>[unknown] (9 samples, 0.99%)</title><rect x="29.6703%" y="421" width="0.9890%" height="15" fill="rgb(212,155,44)" fg:x="270" fg:w="9"/><text x="29.9203%" y="431.50"></text></g><g><title>[unknown] (8 samples, 0.88%)</title><rect x="29.7802%" y="405" width="0.8791%" height="15" fill="rgb(226,2,50)" fg:x="271" fg:w="8"/><text x="30.0302%" y="415.50"></text></g><g><title>[unknown] (8 samples, 0.88%)</title><rect x="29.7802%" y="389" width="0.8791%" height="15" fill="rgb(234,177,6)" fg:x="271" fg:w="8"/><text x="30.0302%" y="399.50"></text></g><g><title>[unknown] (8 samples, 0.88%)</title><rect x="29.7802%" y="373" width="0.8791%" height="15" fill="rgb(217,24,9)" fg:x="271" fg:w="8"/><text x="30.0302%" y="383.50"></text></g><g><title>[unknown] (7 samples, 0.77%)</title><rect x="29.8901%" y="357" width="0.7692%" height="15" fill="rgb(220,13,46)" fg:x="272" fg:w="7"/><text x="30.1401%" y="367.50"></text></g><g><title>[unknown] (7 samples, 0.77%)</title><rect x="29.8901%" y="341" width="0.7692%" height="15" fill="rgb(239,221,27)" fg:x="272" fg:w="7"/><text x="30.1401%" y="351.50"></text></g><g><title>[unknown] (7 samples, 0.77%)</title><rect x="29.8901%" y="325" width="0.7692%" height="15" fill="rgb(222,198,25)" fg:x="272" fg:w="7"/><text x="30.1401%" y="335.50"></text></g><g><title>[unknown] (6 samples, 0.66%)</title><rect x="30.0000%" y="309" width="0.6593%" height="15" fill="rgb(211,99,13)" fg:x="273" fg:w="6"/><text x="30.2500%" y="319.50"></text></g><g><title>[unknown] (6 samples, 0.66%)</title><rect x="30.0000%" y="293" width="0.6593%" height="15" fill="rgb(232,111,31)" fg:x="273" fg:w="6"/><text x="30.2500%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.55%)</title><rect x="30.1099%" y="277" width="0.5495%" height="15" fill="rgb(245,82,37)" fg:x="274" fg:w="5"/><text x="30.3599%" y="287.50"></text></g><g><title>[unknown] (5 samples, 0.55%)</title><rect x="30.1099%" y="261" width="0.5495%" height="15" fill="rgb(227,149,46)" fg:x="274" fg:w="5"/><text x="30.3599%" y="271.50"></text></g><g><title>[unknown] (5 samples, 0.55%)</title><rect x="30.1099%" y="245" width="0.5495%" height="15" fill="rgb(218,36,50)" fg:x="274" fg:w="5"/><text x="30.3599%" y="255.50"></text></g><g><title>[unknown] (4 samples, 0.44%)</title><rect x="30.2198%" y="229" width="0.4396%" height="15" fill="rgb(226,80,48)" fg:x="275" fg:w="4"/><text x="30.4698%" y="239.50"></text></g><g><title>[unknown] (4 samples, 0.44%)</title><rect x="30.2198%" y="213" width="0.4396%" height="15" fill="rgb(238,224,15)" fg:x="275" fg:w="4"/><text x="30.4698%" y="223.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="30.3297%" y="197" width="0.3297%" height="15" fill="rgb(241,136,10)" fg:x="276" fg:w="3"/><text x="30.5797%" y="207.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="30.4396%" y="181" width="0.2198%" height="15" fill="rgb(208,32,45)" fg:x="277" fg:w="2"/><text x="30.6896%" y="191.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="30.4396%" y="165" width="0.2198%" height="15" fill="rgb(207,135,9)" fg:x="277" fg:w="2"/><text x="30.6896%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="30.5495%" y="149" width="0.1099%" height="15" fill="rgb(206,86,44)" fg:x="278" fg:w="1"/><text x="30.7995%" y="159.50"></text></g><g><title>core::mem::drop (43 samples, 4.73%)</title><rect x="26.2637%" y="645" width="4.7253%" height="15" fill="rgb(245,177,15)" fg:x="239" fg:w="43"/><text x="26.5137%" y="655.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;zip::write::zip_writer::ZipWriter&lt;std::fs::File&gt;&gt; (37 samples, 4.07%)</title><rect x="26.9231%" y="629" width="4.0659%" height="15" fill="rgb(206,64,50)" fg:x="245" fg:w="37"/><text x="27.1731%" y="639.50">core..</text></g><g><title>zip::write::&lt;impl core::ops::drop::Drop for zip::write::zip_writer::ZipWriter&lt;W&gt;&gt;::drop (37 samples, 4.07%)</title><rect x="26.9231%" y="613" width="4.0659%" height="15" fill="rgb(234,36,40)" fg:x="245" fg:w="37"/><text x="27.1731%" y="623.50">zip:..</text></g><g><title>zip::write::&lt;impl zip::write::zip_writer::ZipWriter&lt;W&gt;&gt;::finalize (37 samples, 4.07%)</title><rect x="26.9231%" y="597" width="4.0659%" height="15" fill="rgb(213,64,8)" fg:x="245" fg:w="37"/><text x="27.1731%" y="607.50">zip:..</text></g><g><title>zip::write::write_central_directory_header (35 samples, 3.85%)</title><rect x="27.1429%" y="581" width="3.8462%" height="15" fill="rgb(210,75,36)" fg:x="247" fg:w="35"/><text x="27.3929%" y="591.50">zip:..</text></g><g><title>std::io::Write::write_all (3 samples, 0.33%)</title><rect x="30.6593%" y="565" width="0.3297%" height="15" fill="rgb(229,88,21)" fg:x="279" fg:w="3"/><text x="30.9093%" y="575.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (2 samples, 0.22%)</title><rect x="30.7692%" y="549" width="0.2198%" height="15" fill="rgb(252,204,47)" fg:x="280" fg:w="2"/><text x="31.0192%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::write (2 samples, 0.22%)</title><rect x="30.7692%" y="533" width="0.2198%" height="15" fill="rgb(208,77,27)" fg:x="280" fg:w="2"/><text x="31.0192%" y="543.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (2 samples, 0.22%)</title><rect x="30.7692%" y="517" width="0.2198%" height="15" fill="rgb(221,76,26)" fg:x="280" fg:w="2"/><text x="31.0192%" y="527.50"></text></g><g><title>__GI___libc_write (2 samples, 0.22%)</title><rect x="30.7692%" y="501" width="0.2198%" height="15" fill="rgb(225,139,18)" fg:x="280" fg:w="2"/><text x="31.0192%" y="511.50"></text></g><g><title>__GI___libc_write (2 samples, 0.22%)</title><rect x="30.7692%" y="485" width="0.2198%" height="15" fill="rgb(230,137,11)" fg:x="280" fg:w="2"/><text x="31.0192%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="30.7692%" y="469" width="0.2198%" height="15" fill="rgb(212,28,1)" fg:x="280" fg:w="2"/><text x="31.0192%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="30.7692%" y="453" width="0.2198%" height="15" fill="rgb(248,164,17)" fg:x="280" fg:w="2"/><text x="31.0192%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="30.7692%" y="437" width="0.2198%" height="15" fill="rgb(222,171,42)" fg:x="280" fg:w="2"/><text x="31.0192%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="30.7692%" y="421" width="0.2198%" height="15" fill="rgb(243,84,45)" fg:x="280" fg:w="2"/><text x="31.0192%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="30.7692%" y="405" width="0.2198%" height="15" fill="rgb(252,49,23)" fg:x="280" fg:w="2"/><text x="31.0192%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="30.7692%" y="389" width="0.2198%" height="15" fill="rgb(215,19,7)" fg:x="280" fg:w="2"/><text x="31.0192%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="30.7692%" y="373" width="0.2198%" height="15" fill="rgb(238,81,41)" fg:x="280" fg:w="2"/><text x="31.0192%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="30.7692%" y="357" width="0.2198%" height="15" fill="rgb(210,199,37)" fg:x="280" fg:w="2"/><text x="31.0192%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="30.7692%" y="341" width="0.2198%" height="15" fill="rgb(244,192,49)" fg:x="280" fg:w="2"/><text x="31.0192%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="30.7692%" y="325" width="0.2198%" height="15" fill="rgb(226,211,11)" fg:x="280" fg:w="2"/><text x="31.0192%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="30.7692%" y="309" width="0.2198%" height="15" fill="rgb(236,162,54)" fg:x="280" fg:w="2"/><text x="31.0192%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="30.7692%" y="293" width="0.2198%" height="15" fill="rgb(220,229,9)" fg:x="280" fg:w="2"/><text x="31.0192%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="30.7692%" y="277" width="0.2198%" height="15" fill="rgb(250,87,22)" fg:x="280" fg:w="2"/><text x="31.0192%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="30.7692%" y="261" width="0.2198%" height="15" fill="rgb(239,43,17)" fg:x="280" fg:w="2"/><text x="31.0192%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="30.7692%" y="245" width="0.2198%" height="15" fill="rgb(231,177,25)" fg:x="280" fg:w="2"/><text x="31.0192%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="30.7692%" y="229" width="0.2198%" height="15" fill="rgb(219,179,1)" fg:x="280" fg:w="2"/><text x="31.0192%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="30.8791%" y="213" width="0.1099%" height="15" fill="rgb(238,219,53)" fg:x="281" fg:w="1"/><text x="31.1291%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="30.8791%" y="197" width="0.1099%" height="15" fill="rgb(232,167,36)" fg:x="281" fg:w="1"/><text x="31.1291%" y="207.50"></text></g><g><title>byteorder::io::ReadBytesExt::read_u16 (4 samples, 0.44%)</title><rect x="30.9890%" y="581" width="0.4396%" height="15" fill="rgb(244,19,51)" fg:x="282" fg:w="4"/><text x="31.2390%" y="591.50"></text></g><g><title>std::io::Read::read_exact (4 samples, 0.44%)</title><rect x="30.9890%" y="565" width="0.4396%" height="15" fill="rgb(224,6,22)" fg:x="282" fg:w="4"/><text x="31.2390%" y="575.50"></text></g><g><title>std::io::default_read_exact (4 samples, 0.44%)</title><rect x="30.9890%" y="549" width="0.4396%" height="15" fill="rgb(224,145,5)" fg:x="282" fg:w="4"/><text x="31.2390%" y="559.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (4 samples, 0.44%)</title><rect x="30.9890%" y="533" width="0.4396%" height="15" fill="rgb(234,130,49)" fg:x="282" fg:w="4"/><text x="31.2390%" y="543.50"></text></g><g><title>std::sys::unix::fs::File::read (4 samples, 0.44%)</title><rect x="30.9890%" y="517" width="0.4396%" height="15" fill="rgb(254,6,2)" fg:x="282" fg:w="4"/><text x="31.2390%" y="527.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (4 samples, 0.44%)</title><rect x="30.9890%" y="501" width="0.4396%" height="15" fill="rgb(208,96,46)" fg:x="282" fg:w="4"/><text x="31.2390%" y="511.50"></text></g><g><title>__GI___libc_read (4 samples, 0.44%)</title><rect x="30.9890%" y="485" width="0.4396%" height="15" fill="rgb(239,3,39)" fg:x="282" fg:w="4"/><text x="31.2390%" y="495.50"></text></g><g><title>__GI___libc_read (4 samples, 0.44%)</title><rect x="30.9890%" y="469" width="0.4396%" height="15" fill="rgb(233,210,1)" fg:x="282" fg:w="4"/><text x="31.2390%" y="479.50"></text></g><g><title>[unknown] (4 samples, 0.44%)</title><rect x="30.9890%" y="453" width="0.4396%" height="15" fill="rgb(244,137,37)" fg:x="282" fg:w="4"/><text x="31.2390%" y="463.50"></text></g><g><title>[unknown] (4 samples, 0.44%)</title><rect x="30.9890%" y="437" width="0.4396%" height="15" fill="rgb(240,136,2)" fg:x="282" fg:w="4"/><text x="31.2390%" y="447.50"></text></g><g><title>[unknown] (4 samples, 0.44%)</title><rect x="30.9890%" y="421" width="0.4396%" height="15" fill="rgb(239,18,37)" fg:x="282" fg:w="4"/><text x="31.2390%" y="431.50"></text></g><g><title>[unknown] (4 samples, 0.44%)</title><rect x="30.9890%" y="405" width="0.4396%" height="15" fill="rgb(218,185,22)" fg:x="282" fg:w="4"/><text x="31.2390%" y="415.50"></text></g><g><title>[unknown] (4 samples, 0.44%)</title><rect x="30.9890%" y="389" width="0.4396%" height="15" fill="rgb(225,218,4)" fg:x="282" fg:w="4"/><text x="31.2390%" y="399.50"></text></g><g><title>[unknown] (4 samples, 0.44%)</title><rect x="30.9890%" y="373" width="0.4396%" height="15" fill="rgb(230,182,32)" fg:x="282" fg:w="4"/><text x="31.2390%" y="383.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="31.0989%" y="357" width="0.3297%" height="15" fill="rgb(242,56,43)" fg:x="283" fg:w="3"/><text x="31.3489%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.3187%" y="341" width="0.1099%" height="15" fill="rgb(233,99,24)" fg:x="285" fg:w="1"/><text x="31.5687%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.3187%" y="325" width="0.1099%" height="15" fill="rgb(234,209,42)" fg:x="285" fg:w="1"/><text x="31.5687%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.3187%" y="309" width="0.1099%" height="15" fill="rgb(227,7,12)" fg:x="285" fg:w="1"/><text x="31.5687%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.3187%" y="293" width="0.1099%" height="15" fill="rgb(245,203,43)" fg:x="285" fg:w="1"/><text x="31.5687%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.3187%" y="277" width="0.1099%" height="15" fill="rgb(238,205,33)" fg:x="285" fg:w="1"/><text x="31.5687%" y="287.50"></text></g><g><title>demoparser::parsing::cache::cache_reader::ReadCache::get_cache_if_exists (6 samples, 0.66%)</title><rect x="30.9890%" y="645" width="0.6593%" height="15" fill="rgb(231,56,7)" fg:x="282" fg:w="6"/><text x="31.2390%" y="655.50"></text></g><g><title>demoparser::parsing::cache::cache_reader::ReadCache::new (6 samples, 0.66%)</title><rect x="30.9890%" y="629" width="0.6593%" height="15" fill="rgb(244,186,29)" fg:x="282" fg:w="6"/><text x="31.2390%" y="639.50"></text></g><g><title>zip::read::&lt;impl zip::read::zip_archive::ZipArchive&lt;R&gt;&gt;::new (6 samples, 0.66%)</title><rect x="30.9890%" y="613" width="0.6593%" height="15" fill="rgb(234,111,31)" fg:x="282" fg:w="6"/><text x="31.2390%" y="623.50"></text></g><g><title>zip::read::central_header_to_zip_file (6 samples, 0.66%)</title><rect x="30.9890%" y="597" width="0.6593%" height="15" fill="rgb(241,149,10)" fg:x="282" fg:w="6"/><text x="31.2390%" y="607.50"></text></g><g><title>byteorder::io::ReadBytesExt::read_u32 (2 samples, 0.22%)</title><rect x="31.4286%" y="581" width="0.2198%" height="15" fill="rgb(249,206,44)" fg:x="286" fg:w="2"/><text x="31.6786%" y="591.50"></text></g><g><title>std::io::Read::read_exact (2 samples, 0.22%)</title><rect x="31.4286%" y="565" width="0.2198%" height="15" fill="rgb(251,153,30)" fg:x="286" fg:w="2"/><text x="31.6786%" y="575.50"></text></g><g><title>std::io::default_read_exact (2 samples, 0.22%)</title><rect x="31.4286%" y="549" width="0.2198%" height="15" fill="rgb(239,152,38)" fg:x="286" fg:w="2"/><text x="31.6786%" y="559.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (2 samples, 0.22%)</title><rect x="31.4286%" y="533" width="0.2198%" height="15" fill="rgb(249,139,47)" fg:x="286" fg:w="2"/><text x="31.6786%" y="543.50"></text></g><g><title>std::sys::unix::fs::File::read (2 samples, 0.22%)</title><rect x="31.4286%" y="517" width="0.2198%" height="15" fill="rgb(244,64,35)" fg:x="286" fg:w="2"/><text x="31.6786%" y="527.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (2 samples, 0.22%)</title><rect x="31.4286%" y="501" width="0.2198%" height="15" fill="rgb(216,46,15)" fg:x="286" fg:w="2"/><text x="31.6786%" y="511.50"></text></g><g><title>__GI___libc_read (2 samples, 0.22%)</title><rect x="31.4286%" y="485" width="0.2198%" height="15" fill="rgb(250,74,19)" fg:x="286" fg:w="2"/><text x="31.6786%" y="495.50"></text></g><g><title>__GI___libc_read (2 samples, 0.22%)</title><rect x="31.4286%" y="469" width="0.2198%" height="15" fill="rgb(249,42,33)" fg:x="286" fg:w="2"/><text x="31.6786%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="31.4286%" y="453" width="0.2198%" height="15" fill="rgb(242,149,17)" fg:x="286" fg:w="2"/><text x="31.6786%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="31.4286%" y="437" width="0.2198%" height="15" fill="rgb(244,29,21)" fg:x="286" fg:w="2"/><text x="31.6786%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="31.4286%" y="421" width="0.2198%" height="15" fill="rgb(220,130,37)" fg:x="286" fg:w="2"/><text x="31.6786%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="31.4286%" y="405" width="0.2198%" height="15" fill="rgb(211,67,2)" fg:x="286" fg:w="2"/><text x="31.6786%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="31.4286%" y="389" width="0.2198%" height="15" fill="rgb(235,68,52)" fg:x="286" fg:w="2"/><text x="31.6786%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="31.4286%" y="373" width="0.2198%" height="15" fill="rgb(246,142,3)" fg:x="286" fg:w="2"/><text x="31.6786%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="31.4286%" y="357" width="0.2198%" height="15" fill="rgb(241,25,7)" fg:x="286" fg:w="2"/><text x="31.6786%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="31.4286%" y="341" width="0.2198%" height="15" fill="rgb(242,119,39)" fg:x="286" fg:w="2"/><text x="31.6786%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="31.4286%" y="325" width="0.2198%" height="15" fill="rgb(241,98,45)" fg:x="286" fg:w="2"/><text x="31.6786%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="31.4286%" y="309" width="0.2198%" height="15" fill="rgb(254,28,30)" fg:x="286" fg:w="2"/><text x="31.6786%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.5385%" y="293" width="0.1099%" height="15" fill="rgb(241,142,54)" fg:x="287" fg:w="1"/><text x="31.7885%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.5385%" y="277" width="0.1099%" height="15" fill="rgb(222,85,15)" fg:x="287" fg:w="1"/><text x="31.7885%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.5385%" y="261" width="0.1099%" height="15" fill="rgb(210,85,47)" fg:x="287" fg:w="1"/><text x="31.7885%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.11%)</title><rect x="31.6484%" y="597" width="0.1099%" height="15" fill="rgb(224,206,25)" fg:x="288" fg:w="1"/><text x="31.8984%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.11%)</title><rect x="31.6484%" y="581" width="0.1099%" height="15" fill="rgb(243,201,19)" fg:x="288" fg:w="1"/><text x="31.8984%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.11%)</title><rect x="31.6484%" y="565" width="0.1099%" height="15" fill="rgb(236,59,4)" fg:x="288" fg:w="1"/><text x="31.8984%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.11%)</title><rect x="31.6484%" y="549" width="0.1099%" height="15" fill="rgb(254,179,45)" fg:x="288" fg:w="1"/><text x="31.8984%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.11%)</title><rect x="31.6484%" y="533" width="0.1099%" height="15" fill="rgb(226,14,10)" fg:x="288" fg:w="1"/><text x="31.8984%" y="543.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.11%)</title><rect x="31.6484%" y="517" width="0.1099%" height="15" fill="rgb(244,27,41)" fg:x="288" fg:w="1"/><text x="31.8984%" y="527.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="31.6484%" y="501" width="0.1099%" height="15" fill="rgb(235,35,32)" fg:x="288" fg:w="1"/><text x="31.8984%" y="511.50"></text></g><g><title>_int_realloc (1 samples, 0.11%)</title><rect x="31.6484%" y="485" width="0.1099%" height="15" fill="rgb(218,68,31)" fg:x="288" fg:w="1"/><text x="31.8984%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.11%)</title><rect x="31.6484%" y="469" width="0.1099%" height="15" fill="rgb(207,120,37)" fg:x="288" fg:w="1"/><text x="31.8984%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.6484%" y="453" width="0.1099%" height="15" fill="rgb(227,98,0)" fg:x="288" fg:w="1"/><text x="31.8984%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.6484%" y="437" width="0.1099%" height="15" fill="rgb(207,7,3)" fg:x="288" fg:w="1"/><text x="31.8984%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.6484%" y="421" width="0.1099%" height="15" fill="rgb(206,98,19)" fg:x="288" fg:w="1"/><text x="31.8984%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.6484%" y="405" width="0.1099%" height="15" fill="rgb(217,5,26)" fg:x="288" fg:w="1"/><text x="31.8984%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.6484%" y="389" width="0.1099%" height="15" fill="rgb(235,190,38)" fg:x="288" fg:w="1"/><text x="31.8984%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.6484%" y="373" width="0.1099%" height="15" fill="rgb(247,86,24)" fg:x="288" fg:w="1"/><text x="31.8984%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.6484%" y="357" width="0.1099%" height="15" fill="rgb(205,101,16)" fg:x="288" fg:w="1"/><text x="31.8984%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.6484%" y="341" width="0.1099%" height="15" fill="rgb(246,168,33)" fg:x="288" fg:w="1"/><text x="31.8984%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.6484%" y="325" width="0.1099%" height="15" fill="rgb(231,114,1)" fg:x="288" fg:w="1"/><text x="31.8984%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.6484%" y="309" width="0.1099%" height="15" fill="rgb(207,184,53)" fg:x="288" fg:w="1"/><text x="31.8984%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.6484%" y="293" width="0.1099%" height="15" fill="rgb(224,95,51)" fg:x="288" fg:w="1"/><text x="31.8984%" y="303.50"></text></g><g><title>demoparser::parsing::cache::cache_writer::WriteCache::filter_per_result (2 samples, 0.22%)</title><rect x="31.6484%" y="629" width="0.2198%" height="15" fill="rgb(212,188,45)" fg:x="288" fg:w="2"/><text x="31.8984%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.22%)</title><rect x="31.6484%" y="613" width="0.2198%" height="15" fill="rgb(223,154,38)" fg:x="288" fg:w="2"/><text x="31.8984%" y="623.50"></text></g><g><title>core::ptr::write (1 samples, 0.11%)</title><rect x="31.7582%" y="597" width="0.1099%" height="15" fill="rgb(251,22,52)" fg:x="289" fg:w="1"/><text x="32.0082%" y="607.50"></text></g><g><title>demoparser::parsing::cache::cache_writer::WriteCache::new (3 samples, 0.33%)</title><rect x="31.6484%" y="645" width="0.3297%" height="15" fill="rgb(229,209,22)" fg:x="288" fg:w="3"/><text x="31.8984%" y="655.50"></text></g><g><title>std::fs::File::create (1 samples, 0.11%)</title><rect x="31.8681%" y="629" width="0.1099%" height="15" fill="rgb(234,138,34)" fg:x="290" fg:w="1"/><text x="32.1181%" y="639.50"></text></g><g><title>std::fs::OpenOptions::open (1 samples, 0.11%)</title><rect x="31.8681%" y="613" width="0.1099%" height="15" fill="rgb(212,95,11)" fg:x="290" fg:w="1"/><text x="32.1181%" y="623.50"></text></g><g><title>std::fs::OpenOptions::_open (1 samples, 0.11%)</title><rect x="31.8681%" y="597" width="0.1099%" height="15" fill="rgb(240,179,47)" fg:x="290" fg:w="1"/><text x="32.1181%" y="607.50"></text></g><g><title>std::sys::unix::fs::File::open (1 samples, 0.11%)</title><rect x="31.8681%" y="581" width="0.1099%" height="15" fill="rgb(240,163,11)" fg:x="290" fg:w="1"/><text x="32.1181%" y="591.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (1 samples, 0.11%)</title><rect x="31.8681%" y="565" width="0.1099%" height="15" fill="rgb(236,37,12)" fg:x="290" fg:w="1"/><text x="32.1181%" y="575.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.11%)</title><rect x="31.8681%" y="549" width="0.1099%" height="15" fill="rgb(232,164,16)" fg:x="290" fg:w="1"/><text x="32.1181%" y="559.50"></text></g><g><title>std::sys::unix::fs::File::open::{{closure}} (1 samples, 0.11%)</title><rect x="31.8681%" y="533" width="0.1099%" height="15" fill="rgb(244,205,15)" fg:x="290" fg:w="1"/><text x="32.1181%" y="543.50"></text></g><g><title>std::sys::unix::fs::File::open_c (1 samples, 0.11%)</title><rect x="31.8681%" y="517" width="0.1099%" height="15" fill="rgb(223,117,47)" fg:x="290" fg:w="1"/><text x="32.1181%" y="527.50"></text></g><g><title>std::sys::unix::cvt_r (1 samples, 0.11%)</title><rect x="31.8681%" y="501" width="0.1099%" height="15" fill="rgb(244,107,35)" fg:x="290" fg:w="1"/><text x="32.1181%" y="511.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (1 samples, 0.11%)</title><rect x="31.8681%" y="485" width="0.1099%" height="15" fill="rgb(205,140,8)" fg:x="290" fg:w="1"/><text x="32.1181%" y="495.50"></text></g><g><title>__libc_open64 (1 samples, 0.11%)</title><rect x="31.8681%" y="469" width="0.1099%" height="15" fill="rgb(228,84,46)" fg:x="290" fg:w="1"/><text x="32.1181%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.8681%" y="453" width="0.1099%" height="15" fill="rgb(254,188,9)" fg:x="290" fg:w="1"/><text x="32.1181%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.8681%" y="437" width="0.1099%" height="15" fill="rgb(206,112,54)" fg:x="290" fg:w="1"/><text x="32.1181%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.8681%" y="421" width="0.1099%" height="15" fill="rgb(216,84,49)" fg:x="290" fg:w="1"/><text x="32.1181%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.8681%" y="405" width="0.1099%" height="15" fill="rgb(214,194,35)" fg:x="290" fg:w="1"/><text x="32.1181%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.8681%" y="389" width="0.1099%" height="15" fill="rgb(249,28,3)" fg:x="290" fg:w="1"/><text x="32.1181%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.8681%" y="373" width="0.1099%" height="15" fill="rgb(222,56,52)" fg:x="290" fg:w="1"/><text x="32.1181%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.33%)</title><rect x="32.1978%" y="613" width="0.3297%" height="15" fill="rgb(245,217,50)" fg:x="293" fg:w="3"/><text x="32.4478%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="32.5275%" y="613" width="0.1099%" height="15" fill="rgb(213,201,24)" fg:x="296" fg:w="1"/><text x="32.7775%" y="623.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="32.5275%" y="597" width="0.1099%" height="15" fill="rgb(248,116,28)" fg:x="296" fg:w="1"/><text x="32.7775%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="32.5275%" y="581" width="0.1099%" height="15" fill="rgb(219,72,43)" fg:x="296" fg:w="1"/><text x="32.7775%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.33%)</title><rect x="32.8571%" y="597" width="0.3297%" height="15" fill="rgb(209,138,14)" fg:x="299" fg:w="3"/><text x="33.1071%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.33%)</title><rect x="32.8571%" y="581" width="0.3297%" height="15" fill="rgb(222,18,33)" fg:x="299" fg:w="3"/><text x="33.1071%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.33%)</title><rect x="32.8571%" y="565" width="0.3297%" height="15" fill="rgb(213,199,7)" fg:x="299" fg:w="3"/><text x="33.1071%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.33%)</title><rect x="32.8571%" y="549" width="0.3297%" height="15" fill="rgb(250,110,10)" fg:x="299" fg:w="3"/><text x="33.1071%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.33%)</title><rect x="32.8571%" y="533" width="0.3297%" height="15" fill="rgb(248,123,6)" fg:x="299" fg:w="3"/><text x="33.1071%" y="543.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.33%)</title><rect x="32.8571%" y="517" width="0.3297%" height="15" fill="rgb(206,91,31)" fg:x="299" fg:w="3"/><text x="33.1071%" y="527.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.33%)</title><rect x="32.8571%" y="501" width="0.3297%" height="15" fill="rgb(211,154,13)" fg:x="299" fg:w="3"/><text x="33.1071%" y="511.50"></text></g><g><title>_int_realloc (3 samples, 0.33%)</title><rect x="32.8571%" y="485" width="0.3297%" height="15" fill="rgb(225,148,7)" fg:x="299" fg:w="3"/><text x="33.1071%" y="495.50"></text></g><g><title>[libc.so.6] (3 samples, 0.33%)</title><rect x="32.8571%" y="469" width="0.3297%" height="15" fill="rgb(220,160,43)" fg:x="299" fg:w="3"/><text x="33.1071%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="32.9670%" y="453" width="0.2198%" height="15" fill="rgb(213,52,39)" fg:x="300" fg:w="2"/><text x="33.2170%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="32.9670%" y="437" width="0.2198%" height="15" fill="rgb(243,137,7)" fg:x="300" fg:w="2"/><text x="33.2170%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="33.0769%" y="421" width="0.1099%" height="15" fill="rgb(230,79,13)" fg:x="301" fg:w="1"/><text x="33.3269%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="33.0769%" y="405" width="0.1099%" height="15" fill="rgb(247,105,23)" fg:x="301" fg:w="1"/><text x="33.3269%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="33.0769%" y="389" width="0.1099%" height="15" fill="rgb(223,179,41)" fg:x="301" fg:w="1"/><text x="33.3269%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="33.0769%" y="373" width="0.1099%" height="15" fill="rgb(218,9,34)" fg:x="301" fg:w="1"/><text x="33.3269%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="33.0769%" y="357" width="0.1099%" height="15" fill="rgb(222,106,8)" fg:x="301" fg:w="1"/><text x="33.3269%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="33.0769%" y="341" width="0.1099%" height="15" fill="rgb(211,220,0)" fg:x="301" fg:w="1"/><text x="33.3269%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="33.0769%" y="325" width="0.1099%" height="15" fill="rgb(229,52,16)" fg:x="301" fg:w="1"/><text x="33.3269%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="33.0769%" y="309" width="0.1099%" height="15" fill="rgb(212,155,18)" fg:x="301" fg:w="1"/><text x="33.3269%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="33.0769%" y="293" width="0.1099%" height="15" fill="rgb(242,21,14)" fg:x="301" fg:w="1"/><text x="33.3269%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (21 samples, 2.31%)</title><rect x="32.6374%" y="613" width="2.3077%" height="15" fill="rgb(222,19,48)" fg:x="297" fg:w="21"/><text x="32.8874%" y="623.50">a..</text></g><g><title>core::ptr::write (16 samples, 1.76%)</title><rect x="33.1868%" y="597" width="1.7582%" height="15" fill="rgb(232,45,27)" fg:x="302" fg:w="16"/><text x="33.4368%" y="607.50"></text></g><g><title>[unknown] (11 samples, 1.21%)</title><rect x="33.7363%" y="581" width="1.2088%" height="15" fill="rgb(249,103,42)" fg:x="307" fg:w="11"/><text x="33.9863%" y="591.50"></text></g><g><title>[unknown] (9 samples, 0.99%)</title><rect x="33.9560%" y="565" width="0.9890%" height="15" fill="rgb(246,81,33)" fg:x="309" fg:w="9"/><text x="34.2060%" y="575.50"></text></g><g><title>[unknown] (9 samples, 0.99%)</title><rect x="33.9560%" y="549" width="0.9890%" height="15" fill="rgb(252,33,42)" fg:x="309" fg:w="9"/><text x="34.2060%" y="559.50"></text></g><g><title>[unknown] (9 samples, 0.99%)</title><rect x="33.9560%" y="533" width="0.9890%" height="15" fill="rgb(209,212,41)" fg:x="309" fg:w="9"/><text x="34.2060%" y="543.50"></text></g><g><title>[unknown] (8 samples, 0.88%)</title><rect x="34.0659%" y="517" width="0.8791%" height="15" fill="rgb(207,154,6)" fg:x="310" fg:w="8"/><text x="34.3159%" y="527.50"></text></g><g><title>[unknown] (7 samples, 0.77%)</title><rect x="34.1758%" y="501" width="0.7692%" height="15" fill="rgb(223,64,47)" fg:x="311" fg:w="7"/><text x="34.4258%" y="511.50"></text></g><g><title>[unknown] (7 samples, 0.77%)</title><rect x="34.1758%" y="485" width="0.7692%" height="15" fill="rgb(211,161,38)" fg:x="311" fg:w="7"/><text x="34.4258%" y="495.50"></text></g><g><title>[unknown] (7 samples, 0.77%)</title><rect x="34.1758%" y="469" width="0.7692%" height="15" fill="rgb(219,138,40)" fg:x="311" fg:w="7"/><text x="34.4258%" y="479.50"></text></g><g><title>[unknown] (7 samples, 0.77%)</title><rect x="34.1758%" y="453" width="0.7692%" height="15" fill="rgb(241,228,46)" fg:x="311" fg:w="7"/><text x="34.4258%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.55%)</title><rect x="34.3956%" y="437" width="0.5495%" height="15" fill="rgb(223,209,38)" fg:x="313" fg:w="5"/><text x="34.6456%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.55%)</title><rect x="34.3956%" y="421" width="0.5495%" height="15" fill="rgb(236,164,45)" fg:x="313" fg:w="5"/><text x="34.6456%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::cache::cache_writer::CacheEntry&gt;&gt; (3 samples, 0.33%)</title><rect x="34.9451%" y="613" width="0.3297%" height="15" fill="rgb(231,15,5)" fg:x="318" fg:w="3"/><text x="35.1951%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;demoparser::parsing::cache::cache_writer::CacheEntry&gt;&gt; (3 samples, 0.33%)</title><rect x="34.9451%" y="597" width="0.3297%" height="15" fill="rgb(252,35,15)" fg:x="318" fg:w="3"/><text x="35.1951%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.33%)</title><rect x="34.9451%" y="581" width="0.3297%" height="15" fill="rgb(248,181,18)" fg:x="318" fg:w="3"/><text x="35.1951%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.33%)</title><rect x="34.9451%" y="565" width="0.3297%" height="15" fill="rgb(233,39,42)" fg:x="318" fg:w="3"/><text x="35.1951%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.33%)</title><rect x="34.9451%" y="549" width="0.3297%" height="15" fill="rgb(238,110,33)" fg:x="318" fg:w="3"/><text x="35.1951%" y="559.50"></text></g><g><title>__GI___libc_free (3 samples, 0.33%)</title><rect x="34.9451%" y="533" width="0.3297%" height="15" fill="rgb(233,195,10)" fg:x="318" fg:w="3"/><text x="35.1951%" y="543.50"></text></g><g><title>__GI___munmap (3 samples, 0.33%)</title><rect x="34.9451%" y="517" width="0.3297%" height="15" fill="rgb(254,105,3)" fg:x="318" fg:w="3"/><text x="35.1951%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="34.9451%" y="501" width="0.3297%" height="15" fill="rgb(221,225,9)" fg:x="318" fg:w="3"/><text x="35.1951%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="34.9451%" y="485" width="0.3297%" height="15" fill="rgb(224,227,45)" fg:x="318" fg:w="3"/><text x="35.1951%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="34.9451%" y="469" width="0.3297%" height="15" fill="rgb(229,198,43)" fg:x="318" fg:w="3"/><text x="35.1951%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="34.9451%" y="453" width="0.3297%" height="15" fill="rgb(206,209,35)" fg:x="318" fg:w="3"/><text x="35.1951%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="34.9451%" y="437" width="0.3297%" height="15" fill="rgb(245,195,53)" fg:x="318" fg:w="3"/><text x="35.1951%" y="447.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="34.9451%" y="421" width="0.3297%" height="15" fill="rgb(240,92,26)" fg:x="318" fg:w="3"/><text x="35.1951%" y="431.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="34.9451%" y="405" width="0.3297%" height="15" fill="rgb(207,40,23)" fg:x="318" fg:w="3"/><text x="35.1951%" y="415.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="34.9451%" y="389" width="0.3297%" height="15" fill="rgb(223,111,35)" fg:x="318" fg:w="3"/><text x="35.1951%" y="399.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="34.9451%" y="373" width="0.3297%" height="15" fill="rgb(229,147,28)" fg:x="318" fg:w="3"/><text x="35.1951%" y="383.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="34.9451%" y="357" width="0.3297%" height="15" fill="rgb(211,29,28)" fg:x="318" fg:w="3"/><text x="35.1951%" y="367.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="34.9451%" y="341" width="0.3297%" height="15" fill="rgb(228,72,33)" fg:x="318" fg:w="3"/><text x="35.1951%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="35.1648%" y="325" width="0.1099%" height="15" fill="rgb(205,214,31)" fg:x="320" fg:w="1"/><text x="35.4148%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="35.1648%" y="309" width="0.1099%" height="15" fill="rgb(224,111,15)" fg:x="320" fg:w="1"/><text x="35.4148%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="35.1648%" y="293" width="0.1099%" height="15" fill="rgb(253,21,26)" fg:x="320" fg:w="1"/><text x="35.4148%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="35.1648%" y="277" width="0.1099%" height="15" fill="rgb(245,139,43)" fg:x="320" fg:w="1"/><text x="35.4148%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (25 samples, 2.75%)</title><rect x="35.2747%" y="613" width="2.7473%" height="15" fill="rgb(252,170,7)" fg:x="321" fg:w="25"/><text x="35.5247%" y="623.50">co..</text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (25 samples, 2.75%)</title><rect x="35.2747%" y="597" width="2.7473%" height="15" fill="rgb(231,118,14)" fg:x="321" fg:w="25"/><text x="35.5247%" y="607.50">&lt;T..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (25 samples, 2.75%)</title><rect x="35.2747%" y="581" width="2.7473%" height="15" fill="rgb(238,83,0)" fg:x="321" fg:w="25"/><text x="35.5247%" y="591.50">&lt;c..</text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (4 samples, 0.44%)</title><rect x="37.5824%" y="565" width="0.4396%" height="15" fill="rgb(221,39,39)" fg:x="342" fg:w="4"/><text x="37.8324%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for i32&gt;::eq (4 samples, 0.44%)</title><rect x="37.5824%" y="549" width="0.4396%" height="15" fill="rgb(222,119,46)" fg:x="342" fg:w="4"/><text x="37.8324%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.22%)</title><rect x="38.5714%" y="565" width="0.2198%" height="15" fill="rgb(222,165,49)" fg:x="351" fg:w="2"/><text x="38.8214%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.22%)</title><rect x="38.5714%" y="549" width="0.2198%" height="15" fill="rgb(219,113,52)" fg:x="351" fg:w="2"/><text x="38.8214%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.22%)</title><rect x="38.5714%" y="533" width="0.2198%" height="15" fill="rgb(214,7,15)" fg:x="351" fg:w="2"/><text x="38.8214%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.22%)</title><rect x="38.5714%" y="517" width="0.2198%" height="15" fill="rgb(235,32,4)" fg:x="351" fg:w="2"/><text x="38.8214%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.22%)</title><rect x="38.5714%" y="501" width="0.2198%" height="15" fill="rgb(238,90,54)" fg:x="351" fg:w="2"/><text x="38.8214%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.22%)</title><rect x="38.5714%" y="485" width="0.2198%" height="15" fill="rgb(213,208,19)" fg:x="351" fg:w="2"/><text x="38.8214%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.22%)</title><rect x="38.5714%" y="469" width="0.2198%" height="15" fill="rgb(233,156,4)" fg:x="351" fg:w="2"/><text x="38.8214%" y="479.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.22%)</title><rect x="38.5714%" y="453" width="0.2198%" height="15" fill="rgb(207,194,5)" fg:x="351" fg:w="2"/><text x="38.8214%" y="463.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.22%)</title><rect x="38.5714%" y="437" width="0.2198%" height="15" fill="rgb(206,111,30)" fg:x="351" fg:w="2"/><text x="38.8214%" y="447.50"></text></g><g><title>_int_realloc (2 samples, 0.22%)</title><rect x="38.5714%" y="421" width="0.2198%" height="15" fill="rgb(243,70,54)" fg:x="351" fg:w="2"/><text x="38.8214%" y="431.50"></text></g><g><title>[libc.so.6] (2 samples, 0.22%)</title><rect x="38.5714%" y="405" width="0.2198%" height="15" fill="rgb(242,28,8)" fg:x="351" fg:w="2"/><text x="38.8214%" y="415.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold::flatten::{{closure}} (6 samples, 0.66%)</title><rect x="38.7912%" y="437" width="0.6593%" height="15" fill="rgb(219,106,18)" fg:x="353" fg:w="6"/><text x="39.0412%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (6 samples, 0.66%)</title><rect x="38.7912%" y="421" width="0.6593%" height="15" fill="rgb(244,222,10)" fg:x="353" fg:w="6"/><text x="39.0412%" y="431.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.55%)</title><rect x="38.9011%" y="405" width="0.5495%" height="15" fill="rgb(236,179,52)" fg:x="354" fg:w="5"/><text x="39.1511%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::by_ref_sized::ByRefSized&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.55%)</title><rect x="38.9011%" y="389" width="0.5495%" height="15" fill="rgb(213,23,39)" fg:x="354" fg:w="5"/><text x="39.1511%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.55%)</title><rect x="38.9011%" y="373" width="0.5495%" height="15" fill="rgb(238,48,10)" fg:x="354" fg:w="5"/><text x="39.1511%" y="383.50"></text></g><g><title>&lt;core::const_closure::ConstFnMutClosure&lt;&amp;mut A,Function&gt; as core::ops::function::FnMut&lt;ClosureArguments&gt;&gt;::call_mut (5 samples, 0.55%)</title><rect x="38.9011%" y="357" width="0.5495%" height="15" fill="rgb(251,196,23)" fg:x="354" fg:w="5"/><text x="39.1511%" y="367.50"></text></g><g><title>core::ops::function::Fn::call (5 samples, 0.55%)</title><rect x="38.9011%" y="341" width="0.5495%" height="15" fill="rgb(250,152,24)" fg:x="354" fg:w="5"/><text x="39.1511%" y="351.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2_imp (5 samples, 0.55%)</title><rect x="38.9011%" y="325" width="0.5495%" height="15" fill="rgb(209,150,17)" fg:x="354" fg:w="5"/><text x="39.1511%" y="335.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (5 samples, 0.55%)</title><rect x="38.9011%" y="309" width="0.5495%" height="15" fill="rgb(234,202,34)" fg:x="354" fg:w="5"/><text x="39.1511%" y="319.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.55%)</title><rect x="38.9011%" y="293" width="0.5495%" height="15" fill="rgb(253,148,53)" fg:x="354" fg:w="5"/><text x="39.1511%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (5 samples, 0.55%)</title><rect x="38.9011%" y="277" width="0.5495%" height="15" fill="rgb(218,129,16)" fg:x="354" fg:w="5"/><text x="39.1511%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (5 samples, 0.55%)</title><rect x="38.9011%" y="261" width="0.5495%" height="15" fill="rgb(216,85,19)" fg:x="354" fg:w="5"/><text x="39.1511%" y="271.50"></text></g><g><title>core::ptr::write (5 samples, 0.55%)</title><rect x="38.9011%" y="245" width="0.5495%" height="15" fill="rgb(235,228,7)" fg:x="354" fg:w="5"/><text x="39.1511%" y="255.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.11%)</title><rect x="39.4505%" y="357" width="0.1099%" height="15" fill="rgb(245,175,0)" fg:x="359" fg:w="1"/><text x="39.7005%" y="367.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::hash_one (1 samples, 0.11%)</title><rect x="39.4505%" y="341" width="0.1099%" height="15" fill="rgb(208,168,36)" fg:x="359" fg:w="1"/><text x="39.7005%" y="351.50"></text></g><g><title>ahash::random_state::RandomState::hash_one (1 samples, 0.11%)</title><rect x="39.4505%" y="325" width="0.1099%" height="15" fill="rgb(246,171,24)" fg:x="359" fg:w="1"/><text x="39.7005%" y="335.50"></text></g><g><title>&lt;T as ahash::specialize::CallHasher&gt;::get_hash (1 samples, 0.11%)</title><rect x="39.4505%" y="309" width="0.1099%" height="15" fill="rgb(215,142,24)" fg:x="359" fg:w="1"/><text x="39.7005%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.11%)</title><rect x="39.4505%" y="293" width="0.1099%" height="15" fill="rgb(250,187,7)" fg:x="359" fg:w="1"/><text x="39.7005%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.11%)</title><rect x="39.4505%" y="277" width="0.1099%" height="15" fill="rgb(228,66,33)" fg:x="359" fg:w="1"/><text x="39.7005%" y="287.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::write_u32 (1 samples, 0.11%)</title><rect x="39.4505%" y="261" width="0.1099%" height="15" fill="rgb(234,215,21)" fg:x="359" fg:w="1"/><text x="39.7005%" y="271.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.11%)</title><rect x="39.4505%" y="245" width="0.1099%" height="15" fill="rgb(222,191,20)" fg:x="359" fg:w="1"/><text x="39.7005%" y="255.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::write_u128 (1 samples, 0.11%)</title><rect x="39.4505%" y="229" width="0.1099%" height="15" fill="rgb(245,79,54)" fg:x="359" fg:w="1"/><text x="39.7005%" y="239.50"></text></g><g><title>ahash::aes_hash::AHasher::hash_in (1 samples, 0.11%)</title><rect x="39.4505%" y="213" width="0.1099%" height="15" fill="rgb(240,10,37)" fg:x="359" fg:w="1"/><text x="39.7005%" y="223.50"></text></g><g><title>ahash::operations::shuffle_and_add (1 samples, 0.11%)</title><rect x="39.4505%" y="197" width="0.1099%" height="15" fill="rgb(214,192,32)" fg:x="359" fg:w="1"/><text x="39.7005%" y="207.50"></text></g><g><title>ahash::operations::add_by_64s (1 samples, 0.11%)</title><rect x="39.4505%" y="181" width="0.1099%" height="15" fill="rgb(209,36,54)" fg:x="359" fg:w="1"/><text x="39.7005%" y="191.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi64 (1 samples, 0.11%)</title><rect x="39.4505%" y="165" width="0.1099%" height="15" fill="rgb(220,10,11)" fg:x="359" fg:w="1"/><text x="39.7005%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (17 samples, 1.87%)</title><rect x="38.5714%" y="597" width="1.8681%" height="15" fill="rgb(221,106,17)" fg:x="351" fg:w="17"/><text x="38.8214%" y="607.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (17 samples, 1.87%)</title><rect x="38.5714%" y="581" width="1.8681%" height="15" fill="rgb(251,142,44)" fg:x="351" fg:w="17"/><text x="38.8214%" y="591.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (15 samples, 1.65%)</title><rect x="38.7912%" y="565" width="1.6484%" height="15" fill="rgb(238,13,15)" fg:x="353" fg:w="15"/><text x="39.0412%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 1.65%)</title><rect x="38.7912%" y="549" width="1.6484%" height="15" fill="rgb(208,107,27)" fg:x="353" fg:w="15"/><text x="39.0412%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 1.65%)</title><rect x="38.7912%" y="533" width="1.6484%" height="15" fill="rgb(205,136,37)" fg:x="353" fg:w="15"/><text x="39.0412%" y="543.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (15 samples, 1.65%)</title><rect x="38.7912%" y="517" width="1.6484%" height="15" fill="rgb(250,205,27)" fg:x="353" fg:w="15"/><text x="39.0412%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 1.65%)</title><rect x="38.7912%" y="501" width="1.6484%" height="15" fill="rgb(210,80,43)" fg:x="353" fg:w="15"/><text x="39.0412%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 1.65%)</title><rect x="38.7912%" y="485" width="1.6484%" height="15" fill="rgb(247,160,36)" fg:x="353" fg:w="15"/><text x="39.0412%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (15 samples, 1.65%)</title><rect x="38.7912%" y="469" width="1.6484%" height="15" fill="rgb(234,13,49)" fg:x="353" fg:w="15"/><text x="39.0412%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (15 samples, 1.65%)</title><rect x="38.7912%" y="453" width="1.6484%" height="15" fill="rgb(234,122,0)" fg:x="353" fg:w="15"/><text x="39.0412%" y="463.50"></text></g><g><title>demoparser::parsing::cache::cache_writer::WriteCache::write_bytes_to_zip::{{closure}} (9 samples, 0.99%)</title><rect x="39.4505%" y="437" width="0.9890%" height="15" fill="rgb(207,146,38)" fg:x="359" fg:w="9"/><text x="39.7005%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (9 samples, 0.99%)</title><rect x="39.4505%" y="421" width="0.9890%" height="15" fill="rgb(207,177,25)" fg:x="359" fg:w="9"/><text x="39.7005%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.99%)</title><rect x="39.4505%" y="405" width="0.9890%" height="15" fill="rgb(211,178,42)" fg:x="359" fg:w="9"/><text x="39.7005%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9 samples, 0.99%)</title><rect x="39.4505%" y="389" width="0.9890%" height="15" fill="rgb(230,69,54)" fg:x="359" fg:w="9"/><text x="39.7005%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.99%)</title><rect x="39.4505%" y="373" width="0.9890%" height="15" fill="rgb(214,135,41)" fg:x="359" fg:w="9"/><text x="39.7005%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8 samples, 0.88%)</title><rect x="39.5604%" y="357" width="0.8791%" height="15" fill="rgb(237,67,25)" fg:x="360" fg:w="8"/><text x="39.8104%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.88%)</title><rect x="39.5604%" y="341" width="0.8791%" height="15" fill="rgb(222,189,50)" fg:x="360" fg:w="8"/><text x="39.8104%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (8 samples, 0.88%)</title><rect x="39.5604%" y="325" width="0.8791%" height="15" fill="rgb(245,148,34)" fg:x="360" fg:w="8"/><text x="39.8104%" y="335.50"></text></g><g><title>&lt;itertools::groupbylazy::Group&lt;K,I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 4.62%)</title><rect x="40.4396%" y="597" width="4.6154%" height="15" fill="rgb(222,29,6)" fg:x="368" fg:w="42"/><text x="40.6896%" y="607.50">&lt;iter..</text></g><g><title>itertools::groupbylazy::GroupBy&lt;K,I,F&gt;::step (41 samples, 4.51%)</title><rect x="40.5495%" y="581" width="4.5055%" height="15" fill="rgb(221,189,43)" fg:x="369" fg:w="41"/><text x="40.7995%" y="591.50">itert..</text></g><g><title>itertools::groupbylazy::GroupInner&lt;K,I,F&gt;::step (41 samples, 4.51%)</title><rect x="40.5495%" y="565" width="4.5055%" height="15" fill="rgb(207,36,27)" fg:x="369" fg:w="41"/><text x="40.7995%" y="575.50">itert..</text></g><g><title>itertools::groupbylazy::GroupInner&lt;K,I,F&gt;::step_current (39 samples, 4.29%)</title><rect x="40.7692%" y="549" width="4.2857%" height="15" fill="rgb(217,90,24)" fg:x="371" fg:w="39"/><text x="41.0192%" y="559.50">itert..</text></g><g><title>itertools::groupbylazy::GroupInner&lt;K,I,F&gt;::next_element (1 samples, 0.11%)</title><rect x="44.9451%" y="533" width="0.1099%" height="15" fill="rgb(224,66,35)" fg:x="409" fg:w="1"/><text x="45.1951%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="44.9451%" y="517" width="0.1099%" height="15" fill="rgb(221,13,50)" fg:x="409" fg:w="1"/><text x="45.1951%" y="527.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.11%)</title><rect x="45.0549%" y="581" width="0.1099%" height="15" fill="rgb(236,68,49)" fg:x="410" fg:w="1"/><text x="45.3049%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (20 samples, 2.20%)</title><rect x="45.1648%" y="581" width="2.1978%" height="15" fill="rgb(229,146,28)" fg:x="411" fg:w="20"/><text x="45.4148%" y="591.50">c..</text></g><g><title>&lt;itertools::groupbylazy::Groups&lt;K,I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (20 samples, 2.20%)</title><rect x="45.1648%" y="565" width="2.1978%" height="15" fill="rgb(225,31,38)" fg:x="411" fg:w="20"/><text x="45.4148%" y="575.50">&lt;..</text></g><g><title>itertools::groupbylazy::GroupInner&lt;K,I,F&gt;::group_key (20 samples, 2.20%)</title><rect x="45.1648%" y="549" width="2.1978%" height="15" fill="rgb(250,208,3)" fg:x="411" fg:w="20"/><text x="45.4148%" y="559.50">i..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::ne (20 samples, 2.20%)</title><rect x="45.1648%" y="533" width="2.1978%" height="15" fill="rgb(246,54,23)" fg:x="411" fg:w="20"/><text x="45.4148%" y="543.50">c..</text></g><g><title>&lt;itertools::groupbylazy::Groups&lt;K,I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 2.53%)</title><rect x="45.0549%" y="597" width="2.5275%" height="15" fill="rgb(243,76,11)" fg:x="410" fg:w="23"/><text x="45.3049%" y="607.50">&lt;i..</text></g><g><title>itertools::groupbylazy::GroupInner&lt;K,I,F&gt;::step (2 samples, 0.22%)</title><rect x="47.3626%" y="581" width="0.2198%" height="15" fill="rgb(245,21,50)" fg:x="431" fg:w="2"/><text x="47.6126%" y="591.50"></text></g><g><title>itertools::groupbylazy::GroupInner&lt;K,I,F&gt;::step_current (1 samples, 0.11%)</title><rect x="47.4725%" y="565" width="0.1099%" height="15" fill="rgb(228,9,43)" fg:x="432" fg:w="1"/><text x="47.7225%" y="575.50"></text></g><g><title>core::slice::sort::partition (2 samples, 0.22%)</title><rect x="47.5824%" y="549" width="0.2198%" height="15" fill="rgb(208,100,47)" fg:x="433" fg:w="2"/><text x="47.8324%" y="559.50"></text></g><g><title>core::slice::sort::partition_in_blocks (2 samples, 0.22%)</title><rect x="47.5824%" y="533" width="0.2198%" height="15" fill="rgb(232,26,8)" fg:x="433" fg:w="2"/><text x="47.8324%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.22%)</title><rect x="47.5824%" y="517" width="0.2198%" height="15" fill="rgb(216,166,38)" fg:x="433" fg:w="2"/><text x="47.8324%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.22%)</title><rect x="47.5824%" y="501" width="0.2198%" height="15" fill="rgb(251,202,51)" fg:x="433" fg:w="2"/><text x="47.8324%" y="511.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.11%)</title><rect x="47.8022%" y="533" width="0.1099%" height="15" fill="rgb(254,216,34)" fg:x="435" fg:w="1"/><text x="48.0522%" y="543.50"></text></g><g><title>core::slice::sort::partition_equal (1 samples, 0.11%)</title><rect x="47.9121%" y="533" width="0.1099%" height="15" fill="rgb(251,32,27)" fg:x="436" fg:w="1"/><text x="48.1621%" y="543.50"></text></g><g><title>core::ptr::swap (1 samples, 0.11%)</title><rect x="47.9121%" y="517" width="0.1099%" height="15" fill="rgb(208,127,28)" fg:x="436" fg:w="1"/><text x="48.1621%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="47.9121%" y="501" width="0.1099%" height="15" fill="rgb(224,137,22)" fg:x="436" fg:w="1"/><text x="48.1621%" y="511.50"></text></g><g><title>core::slice::sort::partition (3 samples, 0.33%)</title><rect x="48.0220%" y="517" width="0.3297%" height="15" fill="rgb(254,70,32)" fg:x="437" fg:w="3"/><text x="48.2720%" y="527.50"></text></g><g><title>core::slice::sort::partition_in_blocks (3 samples, 0.33%)</title><rect x="48.0220%" y="501" width="0.3297%" height="15" fill="rgb(229,75,37)" fg:x="437" fg:w="3"/><text x="48.2720%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.22%)</title><rect x="48.1319%" y="485" width="0.2198%" height="15" fill="rgb(252,64,23)" fg:x="438" fg:w="2"/><text x="48.3819%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.22%)</title><rect x="48.1319%" y="469" width="0.2198%" height="15" fill="rgb(232,162,48)" fg:x="438" fg:w="2"/><text x="48.3819%" y="479.50"></text></g><g><title>core::slice::sort::partition_equal (1 samples, 0.11%)</title><rect x="48.3516%" y="517" width="0.1099%" height="15" fill="rgb(246,160,12)" fg:x="440" fg:w="1"/><text x="48.6016%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.11%)</title><rect x="48.3516%" y="501" width="0.1099%" height="15" fill="rgb(247,166,0)" fg:x="440" fg:w="1"/><text x="48.6016%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.11%)</title><rect x="48.3516%" y="485" width="0.1099%" height="15" fill="rgb(249,219,21)" fg:x="440" fg:w="1"/><text x="48.6016%" y="495.50"></text></g><g><title>core::slice::sort::choose_pivot (1 samples, 0.11%)</title><rect x="48.4615%" y="501" width="0.1099%" height="15" fill="rgb(205,209,3)" fg:x="441" fg:w="1"/><text x="48.7115%" y="511.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (1 samples, 0.11%)</title><rect x="48.4615%" y="485" width="0.1099%" height="15" fill="rgb(243,44,1)" fg:x="441" fg:w="1"/><text x="48.7115%" y="495.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (1 samples, 0.11%)</title><rect x="48.4615%" y="469" width="0.1099%" height="15" fill="rgb(206,159,16)" fg:x="441" fg:w="1"/><text x="48.7115%" y="479.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (1 samples, 0.11%)</title><rect x="48.4615%" y="453" width="0.1099%" height="15" fill="rgb(244,77,30)" fg:x="441" fg:w="1"/><text x="48.7115%" y="463.50"></text></g><g><title>core::slice::sort::partition (1 samples, 0.11%)</title><rect x="48.5714%" y="501" width="0.1099%" height="15" fill="rgb(218,69,12)" fg:x="442" fg:w="1"/><text x="48.8214%" y="511.50"></text></g><g><title>core::slice::sort::partition_in_blocks (1 samples, 0.11%)</title><rect x="48.5714%" y="485" width="0.1099%" height="15" fill="rgb(212,87,7)" fg:x="442" fg:w="1"/><text x="48.8214%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key::{{closure}} (1 samples, 0.11%)</title><rect x="48.5714%" y="469" width="0.1099%" height="15" fill="rgb(245,114,25)" fg:x="442" fg:w="1"/><text x="48.8214%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i16&gt;::lt (1 samples, 0.11%)</title><rect x="48.5714%" y="453" width="0.1099%" height="15" fill="rgb(210,61,42)" fg:x="442" fg:w="1"/><text x="48.8214%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key (11 samples, 1.21%)</title><rect x="47.5824%" y="597" width="1.2088%" height="15" fill="rgb(211,52,33)" fg:x="433" fg:w="11"/><text x="47.8324%" y="607.50"></text></g><g><title>core::slice::sort::quicksort (11 samples, 1.21%)</title><rect x="47.5824%" y="581" width="1.2088%" height="15" fill="rgb(234,58,33)" fg:x="433" fg:w="11"/><text x="47.8324%" y="591.50"></text></g><g><title>core::slice::sort::recurse (11 samples, 1.21%)</title><rect x="47.5824%" y="565" width="1.2088%" height="15" fill="rgb(220,115,36)" fg:x="433" fg:w="11"/><text x="47.8324%" y="575.50"></text></g><g><title>core::slice::sort::recurse (9 samples, 0.99%)</title><rect x="47.8022%" y="549" width="0.9890%" height="15" fill="rgb(243,153,54)" fg:x="435" fg:w="9"/><text x="48.0522%" y="559.50"></text></g><g><title>core::slice::sort::recurse (7 samples, 0.77%)</title><rect x="48.0220%" y="533" width="0.7692%" height="15" fill="rgb(251,47,18)" fg:x="437" fg:w="7"/><text x="48.2720%" y="543.50"></text></g><g><title>core::slice::sort::recurse (3 samples, 0.33%)</title><rect x="48.4615%" y="517" width="0.3297%" height="15" fill="rgb(242,102,42)" fg:x="441" fg:w="3"/><text x="48.7115%" y="527.50"></text></g><g><title>core::slice::sort::partition_equal (1 samples, 0.11%)</title><rect x="48.6813%" y="501" width="0.1099%" height="15" fill="rgb(234,31,38)" fg:x="443" fg:w="1"/><text x="48.9313%" y="511.50"></text></g><g><title>core::ptr::swap (1 samples, 0.11%)</title><rect x="48.6813%" y="485" width="0.1099%" height="15" fill="rgb(221,117,51)" fg:x="443" fg:w="1"/><text x="48.9313%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="48.6813%" y="469" width="0.1099%" height="15" fill="rgb(212,20,18)" fg:x="443" fg:w="1"/><text x="48.9313%" y="479.50"></text></g><g><title>ZSTD_CCtx_init_compressStream2 (4 samples, 0.44%)</title><rect x="48.7912%" y="421" width="0.4396%" height="15" fill="rgb(245,133,36)" fg:x="444" fg:w="4"/><text x="49.0412%" y="431.50"></text></g><g><title>ZSTD_compressBegin_internal (4 samples, 0.44%)</title><rect x="48.7912%" y="405" width="0.4396%" height="15" fill="rgb(212,6,19)" fg:x="444" fg:w="4"/><text x="49.0412%" y="415.50"></text></g><g><title>ZSTD_resetCCtx_internal (4 samples, 0.44%)</title><rect x="48.7912%" y="389" width="0.4396%" height="15" fill="rgb(218,1,36)" fg:x="444" fg:w="4"/><text x="49.0412%" y="399.50"></text></g><g><title>ZSTD_reset_matchState (4 samples, 0.44%)</title><rect x="48.7912%" y="373" width="0.4396%" height="15" fill="rgb(246,84,54)" fg:x="444" fg:w="4"/><text x="49.0412%" y="383.50"></text></g><g><title>ZSTD_cwksp_clean_tables (4 samples, 0.44%)</title><rect x="48.7912%" y="357" width="0.4396%" height="15" fill="rgb(242,110,6)" fg:x="444" fg:w="4"/><text x="49.0412%" y="367.50"></text></g><g><title>[libc.so.6] (4 samples, 0.44%)</title><rect x="48.7912%" y="341" width="0.4396%" height="15" fill="rgb(214,47,5)" fg:x="444" fg:w="4"/><text x="49.0412%" y="351.50"></text></g><g><title>ZSTD_buildSeqStore (1 samples, 0.11%)</title><rect x="49.2308%" y="341" width="0.1099%" height="15" fill="rgb(218,159,25)" fg:x="448" fg:w="1"/><text x="49.4808%" y="351.50"></text></g><g><title>ZSTD_compressBlock_doubleFast (1 samples, 0.11%)</title><rect x="49.2308%" y="325" width="0.1099%" height="15" fill="rgb(215,211,28)" fg:x="448" fg:w="1"/><text x="49.4808%" y="335.50"></text></g><g><title>ZSTD_compressBlock_doubleFast_noDict_5 (1 samples, 0.11%)</title><rect x="49.2308%" y="309" width="0.1099%" height="15" fill="rgb(238,59,32)" fg:x="448" fg:w="1"/><text x="49.4808%" y="319.50"></text></g><g><title>ZSTD_compressBlock_doubleFast_noDict_generic (1 samples, 0.11%)</title><rect x="49.2308%" y="293" width="0.1099%" height="15" fill="rgb(226,82,3)" fg:x="448" fg:w="1"/><text x="49.4808%" y="303.50"></text></g><g><title>ZSTD_storeSeq (1 samples, 0.11%)</title><rect x="49.2308%" y="277" width="0.1099%" height="15" fill="rgb(240,164,32)" fg:x="448" fg:w="1"/><text x="49.4808%" y="287.50"></text></g><g><title>ZSTD_wildcopy (1 samples, 0.11%)</title><rect x="49.2308%" y="261" width="0.1099%" height="15" fill="rgb(232,46,7)" fg:x="448" fg:w="1"/><text x="49.4808%" y="271.50"></text></g><g><title>zstd::stream::zio::writer::Writer&lt;W,D&gt;::with_buffer (7 samples, 0.77%)</title><rect x="48.7912%" y="517" width="0.7692%" height="15" fill="rgb(229,129,53)" fg:x="444" fg:w="7"/><text x="49.0412%" y="527.50"></text></g><g><title>&lt;zstd::stream::zio::writer::Writer&lt;W,D&gt; as std::io::Write&gt;::write::{{closure}} (7 samples, 0.77%)</title><rect x="48.7912%" y="501" width="0.7692%" height="15" fill="rgb(234,188,29)" fg:x="444" fg:w="7"/><text x="49.0412%" y="511.50"></text></g><g><title>&lt;zstd::stream::raw::Encoder as zstd::stream::raw::Operation&gt;::run (7 samples, 0.77%)</title><rect x="48.7912%" y="485" width="0.7692%" height="15" fill="rgb(246,141,4)" fg:x="444" fg:w="7"/><text x="49.0412%" y="495.50"></text></g><g><title>zstd_safe::CCtx::compress_stream (7 samples, 0.77%)</title><rect x="48.7912%" y="469" width="0.7692%" height="15" fill="rgb(229,23,39)" fg:x="444" fg:w="7"/><text x="49.0412%" y="479.50"></text></g><g><title>ZSTD_compressStream (7 samples, 0.77%)</title><rect x="48.7912%" y="453" width="0.7692%" height="15" fill="rgb(206,12,3)" fg:x="444" fg:w="7"/><text x="49.0412%" y="463.50"></text></g><g><title>ZSTD_compressStream2 (7 samples, 0.77%)</title><rect x="48.7912%" y="437" width="0.7692%" height="15" fill="rgb(252,226,20)" fg:x="444" fg:w="7"/><text x="49.0412%" y="447.50"></text></g><g><title>ZSTD_compressStream_generic (3 samples, 0.33%)</title><rect x="49.2308%" y="421" width="0.3297%" height="15" fill="rgb(216,123,35)" fg:x="448" fg:w="3"/><text x="49.4808%" y="431.50"></text></g><g><title>ZSTD_compressContinue (3 samples, 0.33%)</title><rect x="49.2308%" y="405" width="0.3297%" height="15" fill="rgb(212,68,40)" fg:x="448" fg:w="3"/><text x="49.4808%" y="415.50"></text></g><g><title>ZSTD_compressContinue_internal (3 samples, 0.33%)</title><rect x="49.2308%" y="389" width="0.3297%" height="15" fill="rgb(254,125,32)" fg:x="448" fg:w="3"/><text x="49.4808%" y="399.50"></text></g><g><title>ZSTD_compress_frameChunk (3 samples, 0.33%)</title><rect x="49.2308%" y="373" width="0.3297%" height="15" fill="rgb(253,97,22)" fg:x="448" fg:w="3"/><text x="49.4808%" y="383.50"></text></g><g><title>ZSTD_compressBlock_internal (3 samples, 0.33%)</title><rect x="49.2308%" y="357" width="0.3297%" height="15" fill="rgb(241,101,14)" fg:x="448" fg:w="3"/><text x="49.4808%" y="367.50"></text></g><g><title>ZSTD_entropyCompressSeqStore (2 samples, 0.22%)</title><rect x="49.3407%" y="341" width="0.2198%" height="15" fill="rgb(238,103,29)" fg:x="449" fg:w="2"/><text x="49.5907%" y="351.50"></text></g><g><title>ZSTD_entropyCompressSeqStore_internal (2 samples, 0.22%)</title><rect x="49.3407%" y="325" width="0.2198%" height="15" fill="rgb(233,195,47)" fg:x="449" fg:w="2"/><text x="49.5907%" y="335.50"></text></g><g><title>ZSTD_compressLiterals (2 samples, 0.22%)</title><rect x="49.3407%" y="309" width="0.2198%" height="15" fill="rgb(246,218,30)" fg:x="449" fg:w="2"/><text x="49.5907%" y="319.50"></text></g><g><title>HUF_compress4X_repeat (2 samples, 0.22%)</title><rect x="49.3407%" y="293" width="0.2198%" height="15" fill="rgb(219,145,47)" fg:x="449" fg:w="2"/><text x="49.5907%" y="303.50"></text></g><g><title>HUF_compress_internal (2 samples, 0.22%)</title><rect x="49.3407%" y="277" width="0.2198%" height="15" fill="rgb(243,12,26)" fg:x="449" fg:w="2"/><text x="49.5907%" y="287.50"></text></g><g><title>HIST_count_parallel_wksp (2 samples, 0.22%)</title><rect x="49.3407%" y="261" width="0.2198%" height="15" fill="rgb(214,87,16)" fg:x="449" fg:w="2"/><text x="49.5907%" y="271.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write (8 samples, 0.88%)</title><rect x="48.7912%" y="565" width="0.8791%" height="15" fill="rgb(208,99,42)" fg:x="444" fg:w="8"/><text x="49.0412%" y="575.50"></text></g><g><title>&lt;zstd::stream::write::Encoder&lt;W&gt; as std::io::Write&gt;::write (8 samples, 0.88%)</title><rect x="48.7912%" y="549" width="0.8791%" height="15" fill="rgb(253,99,2)" fg:x="444" fg:w="8"/><text x="49.0412%" y="559.50"></text></g><g><title>&lt;zstd::stream::zio::writer::Writer&lt;W,D&gt; as std::io::Write&gt;::write (8 samples, 0.88%)</title><rect x="48.7912%" y="533" width="0.8791%" height="15" fill="rgb(220,168,23)" fg:x="444" fg:w="8"/><text x="49.0412%" y="543.50"></text></g><g><title>zstd::stream::zio::writer::Writer&lt;W,D&gt;::write_from_offset (1 samples, 0.11%)</title><rect x="49.5604%" y="517" width="0.1099%" height="15" fill="rgb(242,38,24)" fg:x="451" fg:w="1"/><text x="49.8104%" y="527.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (1 samples, 0.11%)</title><rect x="49.5604%" y="501" width="0.1099%" height="15" fill="rgb(225,182,9)" fg:x="451" fg:w="1"/><text x="49.8104%" y="511.50"></text></g><g><title>std::sys::unix::net::Socket::write (1 samples, 0.11%)</title><rect x="49.5604%" y="485" width="0.1099%" height="15" fill="rgb(243,178,37)" fg:x="451" fg:w="1"/><text x="49.8104%" y="495.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.11%)</title><rect x="49.5604%" y="469" width="0.1099%" height="15" fill="rgb(232,139,19)" fg:x="451" fg:w="1"/><text x="49.8104%" y="479.50"></text></g><g><title>__GI___libc_write (1 samples, 0.11%)</title><rect x="49.5604%" y="453" width="0.1099%" height="15" fill="rgb(225,201,24)" fg:x="451" fg:w="1"/><text x="49.8104%" y="463.50"></text></g><g><title>__GI___libc_write (1 samples, 0.11%)</title><rect x="49.5604%" y="437" width="0.1099%" height="15" fill="rgb(221,47,46)" fg:x="451" fg:w="1"/><text x="49.8104%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="49.5604%" y="421" width="0.1099%" height="15" fill="rgb(249,23,13)" fg:x="451" fg:w="1"/><text x="49.8104%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="49.5604%" y="405" width="0.1099%" height="15" fill="rgb(219,9,5)" fg:x="451" fg:w="1"/><text x="49.8104%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="49.5604%" y="389" width="0.1099%" height="15" fill="rgb(254,171,16)" fg:x="451" fg:w="1"/><text x="49.8104%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="49.5604%" y="373" width="0.1099%" height="15" fill="rgb(230,171,20)" fg:x="451" fg:w="1"/><text x="49.8104%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="49.5604%" y="357" width="0.1099%" height="15" fill="rgb(210,71,41)" fg:x="451" fg:w="1"/><text x="49.8104%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="49.5604%" y="341" width="0.1099%" height="15" fill="rgb(206,173,20)" fg:x="451" fg:w="1"/><text x="49.8104%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="49.5604%" y="325" width="0.1099%" height="15" fill="rgb(233,88,34)" fg:x="451" fg:w="1"/><text x="49.8104%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="49.5604%" y="309" width="0.1099%" height="15" fill="rgb(223,209,46)" fg:x="451" fg:w="1"/><text x="49.8104%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="49.5604%" y="293" width="0.1099%" height="15" fill="rgb(250,43,18)" fg:x="451" fg:w="1"/><text x="49.8104%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="49.5604%" y="277" width="0.1099%" height="15" fill="rgb(208,13,10)" fg:x="451" fg:w="1"/><text x="49.8104%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="49.5604%" y="261" width="0.1099%" height="15" fill="rgb(212,200,36)" fg:x="451" fg:w="1"/><text x="49.8104%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="49.5604%" y="245" width="0.1099%" height="15" fill="rgb(225,90,30)" fg:x="451" fg:w="1"/><text x="49.8104%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="49.5604%" y="229" width="0.1099%" height="15" fill="rgb(236,182,39)" fg:x="451" fg:w="1"/><text x="49.8104%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="49.5604%" y="213" width="0.1099%" height="15" fill="rgb(212,144,35)" fg:x="451" fg:w="1"/><text x="49.8104%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="49.5604%" y="197" width="0.1099%" height="15" fill="rgb(228,63,44)" fg:x="451" fg:w="1"/><text x="49.8104%" y="207.50"></text></g><g><title>std::io::Write::write_all (9 samples, 0.99%)</title><rect x="48.7912%" y="597" width="0.9890%" height="15" fill="rgb(228,109,6)" fg:x="444" fg:w="9"/><text x="49.0412%" y="607.50"></text></g><g><title>zip::write::&lt;impl std::io::Write for zip::write::zip_writer::ZipWriter&lt;W&gt;&gt;::write (9 samples, 0.99%)</title><rect x="48.7912%" y="581" width="0.9890%" height="15" fill="rgb(238,117,24)" fg:x="444" fg:w="9"/><text x="49.0412%" y="591.50"></text></g><g><title>zip::write::ZipWriterStats::update (1 samples, 0.11%)</title><rect x="49.6703%" y="565" width="0.1099%" height="15" fill="rgb(242,26,26)" fg:x="452" fg:w="1"/><text x="49.9203%" y="575.50"></text></g><g><title>crc32fast::specialized::pclmulqdq::State::update (1 samples, 0.11%)</title><rect x="49.6703%" y="549" width="0.1099%" height="15" fill="rgb(221,92,48)" fg:x="452" fg:w="1"/><text x="49.9203%" y="559.50"></text></g><g><title>crc32fast::specialized::pclmulqdq::calculate (1 samples, 0.11%)</title><rect x="49.6703%" y="533" width="0.1099%" height="15" fill="rgb(209,209,32)" fg:x="452" fg:w="1"/><text x="49.9203%" y="543.50"></text></g><g><title>crc32fast::specialized::pclmulqdq::reduce128 (1 samples, 0.11%)</title><rect x="49.6703%" y="517" width="0.1099%" height="15" fill="rgb(221,70,22)" fg:x="452" fg:w="1"/><text x="49.9203%" y="527.50"></text></g><g><title>core::core_arch::x86::pclmulqdq::_mm_clmulepi64_si128 (1 samples, 0.11%)</title><rect x="49.6703%" y="501" width="0.1099%" height="15" fill="rgb(248,145,5)" fg:x="452" fg:w="1"/><text x="49.9203%" y="511.50"></text></g><g><title>zip::types::AtomicU64::get_mut (1 samples, 0.11%)</title><rect x="49.7802%" y="565" width="0.1099%" height="15" fill="rgb(226,116,26)" fg:x="453" fg:w="1"/><text x="50.0302%" y="575.50"></text></g><g><title>ZSTD_buildSeqStore (1 samples, 0.11%)</title><rect x="49.8901%" y="309" width="0.1099%" height="15" fill="rgb(244,5,17)" fg:x="454" fg:w="1"/><text x="50.1401%" y="319.50"></text></g><g><title>ZSTD_compressBlock_doubleFast (1 samples, 0.11%)</title><rect x="49.8901%" y="293" width="0.1099%" height="15" fill="rgb(252,159,33)" fg:x="454" fg:w="1"/><text x="50.1401%" y="303.50"></text></g><g><title>ZSTD_compressBlock_doubleFast_noDict_5 (1 samples, 0.11%)</title><rect x="49.8901%" y="277" width="0.1099%" height="15" fill="rgb(206,71,0)" fg:x="454" fg:w="1"/><text x="50.1401%" y="287.50"></text></g><g><title>ZSTD_compressBlock_doubleFast_noDict_generic (1 samples, 0.11%)</title><rect x="49.8901%" y="261" width="0.1099%" height="15" fill="rgb(233,118,54)" fg:x="454" fg:w="1"/><text x="50.1401%" y="271.50"></text></g><g><title>ZSTD_buildSequencesStatistics (2 samples, 0.22%)</title><rect x="50.0000%" y="277" width="0.2198%" height="15" fill="rgb(234,83,48)" fg:x="455" fg:w="2"/><text x="50.2500%" y="287.50"></text></g><g><title>ZSTD_buildCTable (2 samples, 0.22%)</title><rect x="50.0000%" y="261" width="0.2198%" height="15" fill="rgb(228,3,54)" fg:x="455" fg:w="2"/><text x="50.2500%" y="271.50"></text></g><g><title>FSE_buildCTable_wksp (2 samples, 0.22%)</title><rect x="50.0000%" y="245" width="0.2198%" height="15" fill="rgb(226,155,13)" fg:x="455" fg:w="2"/><text x="50.2500%" y="255.50"></text></g><g><title>HUF_compress1X_repeat (1 samples, 0.11%)</title><rect x="50.2198%" y="261" width="0.1099%" height="15" fill="rgb(241,28,37)" fg:x="457" fg:w="1"/><text x="50.4698%" y="271.50"></text></g><g><title>HUF_compress_internal (1 samples, 0.11%)</title><rect x="50.2198%" y="245" width="0.1099%" height="15" fill="rgb(233,93,10)" fg:x="457" fg:w="1"/><text x="50.4698%" y="255.50"></text></g><g><title>HUF_buildCTable_wksp (1 samples, 0.11%)</title><rect x="50.2198%" y="229" width="0.1099%" height="15" fill="rgb(225,113,19)" fg:x="457" fg:w="1"/><text x="50.4698%" y="239.50"></text></g><g><title>HUF_sort (1 samples, 0.11%)</title><rect x="50.2198%" y="213" width="0.1099%" height="15" fill="rgb(241,2,18)" fg:x="457" fg:w="1"/><text x="50.4698%" y="223.50"></text></g><g><title>zstd::stream::zio::writer::Writer&lt;W,D&gt;::with_buffer (5 samples, 0.55%)</title><rect x="49.8901%" y="485" width="0.5495%" height="15" fill="rgb(228,207,21)" fg:x="454" fg:w="5"/><text x="50.1401%" y="495.50"></text></g><g><title>zstd::stream::zio::writer::Writer&lt;W,D&gt;::finish::{{closure}} (5 samples, 0.55%)</title><rect x="49.8901%" y="469" width="0.5495%" height="15" fill="rgb(213,211,35)" fg:x="454" fg:w="5"/><text x="50.1401%" y="479.50"></text></g><g><title>&lt;zstd::stream::raw::Encoder as zstd::stream::raw::Operation&gt;::finish (5 samples, 0.55%)</title><rect x="49.8901%" y="453" width="0.5495%" height="15" fill="rgb(209,83,10)" fg:x="454" fg:w="5"/><text x="50.1401%" y="463.50"></text></g><g><title>zstd_safe::CCtx::end_stream (5 samples, 0.55%)</title><rect x="49.8901%" y="437" width="0.5495%" height="15" fill="rgb(209,164,1)" fg:x="454" fg:w="5"/><text x="50.1401%" y="447.50"></text></g><g><title>ZSTD_endStream (5 samples, 0.55%)</title><rect x="49.8901%" y="421" width="0.5495%" height="15" fill="rgb(213,184,43)" fg:x="454" fg:w="5"/><text x="50.1401%" y="431.50"></text></g><g><title>ZSTD_compressStream2 (5 samples, 0.55%)</title><rect x="49.8901%" y="405" width="0.5495%" height="15" fill="rgb(231,61,34)" fg:x="454" fg:w="5"/><text x="50.1401%" y="415.50"></text></g><g><title>ZSTD_compressStream_generic (5 samples, 0.55%)</title><rect x="49.8901%" y="389" width="0.5495%" height="15" fill="rgb(235,75,3)" fg:x="454" fg:w="5"/><text x="50.1401%" y="399.50"></text></g><g><title>ZSTD_compressEnd (5 samples, 0.55%)</title><rect x="49.8901%" y="373" width="0.5495%" height="15" fill="rgb(220,106,47)" fg:x="454" fg:w="5"/><text x="50.1401%" y="383.50"></text></g><g><title>ZSTD_compressContinue_internal (5 samples, 0.55%)</title><rect x="49.8901%" y="357" width="0.5495%" height="15" fill="rgb(210,196,33)" fg:x="454" fg:w="5"/><text x="50.1401%" y="367.50"></text></g><g><title>ZSTD_compress_frameChunk (5 samples, 0.55%)</title><rect x="49.8901%" y="341" width="0.5495%" height="15" fill="rgb(229,154,42)" fg:x="454" fg:w="5"/><text x="50.1401%" y="351.50"></text></g><g><title>ZSTD_compressBlock_internal (5 samples, 0.55%)</title><rect x="49.8901%" y="325" width="0.5495%" height="15" fill="rgb(228,114,26)" fg:x="454" fg:w="5"/><text x="50.1401%" y="335.50"></text></g><g><title>ZSTD_entropyCompressSeqStore (4 samples, 0.44%)</title><rect x="50.0000%" y="309" width="0.4396%" height="15" fill="rgb(208,144,1)" fg:x="455" fg:w="4"/><text x="50.2500%" y="319.50"></text></g><g><title>ZSTD_entropyCompressSeqStore_internal (4 samples, 0.44%)</title><rect x="50.0000%" y="293" width="0.4396%" height="15" fill="rgb(239,112,37)" fg:x="455" fg:w="4"/><text x="50.2500%" y="303.50"></text></g><g><title>ZSTD_compressLiterals (2 samples, 0.22%)</title><rect x="50.2198%" y="277" width="0.2198%" height="15" fill="rgb(210,96,50)" fg:x="457" fg:w="2"/><text x="50.4698%" y="287.50"></text></g><g><title>HUF_compress4X_repeat (1 samples, 0.11%)</title><rect x="50.3297%" y="261" width="0.1099%" height="15" fill="rgb(222,178,2)" fg:x="458" fg:w="1"/><text x="50.5797%" y="271.50"></text></g><g><title>HUF_compress_internal (1 samples, 0.11%)</title><rect x="50.3297%" y="245" width="0.1099%" height="15" fill="rgb(226,74,18)" fg:x="458" fg:w="1"/><text x="50.5797%" y="255.50"></text></g><g><title>HUF_writeCTable_wksp (1 samples, 0.11%)</title><rect x="50.3297%" y="229" width="0.1099%" height="15" fill="rgb(225,67,54)" fg:x="458" fg:w="1"/><text x="50.5797%" y="239.50"></text></g><g><title>HUF_compressWeights (1 samples, 0.11%)</title><rect x="50.3297%" y="213" width="0.1099%" height="15" fill="rgb(251,92,32)" fg:x="458" fg:w="1"/><text x="50.5797%" y="223.50"></text></g><g><title>FSE_compress_usingCTable_generic (1 samples, 0.11%)</title><rect x="50.3297%" y="197" width="0.1099%" height="15" fill="rgb(228,149,22)" fg:x="458" fg:w="1"/><text x="50.5797%" y="207.50"></text></g><g><title>FSE_encodeSymbol (1 samples, 0.11%)</title><rect x="50.3297%" y="181" width="0.1099%" height="15" fill="rgb(243,54,13)" fg:x="458" fg:w="1"/><text x="50.5797%" y="191.50"></text></g><g><title>BIT_addBits (1 samples, 0.11%)</title><rect x="50.3297%" y="165" width="0.1099%" height="15" fill="rgb(243,180,28)" fg:x="458" fg:w="1"/><text x="50.5797%" y="175.50"></text></g><g><title>zip::write::GenericZipWriter&lt;W&gt;::switch_to (6 samples, 0.66%)</title><rect x="49.8901%" y="549" width="0.6593%" height="15" fill="rgb(208,167,24)" fg:x="454" fg:w="6"/><text x="50.1401%" y="559.50"></text></g><g><title>zstd::stream::write::Encoder&lt;W&gt;::finish (6 samples, 0.66%)</title><rect x="49.8901%" y="533" width="0.6593%" height="15" fill="rgb(245,73,45)" fg:x="454" fg:w="6"/><text x="50.1401%" y="543.50"></text></g><g><title>zstd::stream::write::Encoder&lt;W&gt;::try_finish (6 samples, 0.66%)</title><rect x="49.8901%" y="517" width="0.6593%" height="15" fill="rgb(237,203,48)" fg:x="454" fg:w="6"/><text x="50.1401%" y="527.50"></text></g><g><title>zstd::stream::zio::writer::Writer&lt;W,D&gt;::finish (6 samples, 0.66%)</title><rect x="49.8901%" y="501" width="0.6593%" height="15" fill="rgb(211,197,16)" fg:x="454" fg:w="6"/><text x="50.1401%" y="511.50"></text></g><g><title>zstd::stream::zio::writer::Writer&lt;W,D&gt;::write_from_offset (1 samples, 0.11%)</title><rect x="50.4396%" y="485" width="0.1099%" height="15" fill="rgb(243,99,51)" fg:x="459" fg:w="1"/><text x="50.6896%" y="495.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (1 samples, 0.11%)</title><rect x="50.4396%" y="469" width="0.1099%" height="15" fill="rgb(215,123,29)" fg:x="459" fg:w="1"/><text x="50.6896%" y="479.50"></text></g><g><title>std::sys::unix::net::Socket::write (1 samples, 0.11%)</title><rect x="50.4396%" y="453" width="0.1099%" height="15" fill="rgb(239,186,37)" fg:x="459" fg:w="1"/><text x="50.6896%" y="463.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.11%)</title><rect x="50.4396%" y="437" width="0.1099%" height="15" fill="rgb(252,136,39)" fg:x="459" fg:w="1"/><text x="50.6896%" y="447.50"></text></g><g><title>__GI___libc_write (1 samples, 0.11%)</title><rect x="50.4396%" y="421" width="0.1099%" height="15" fill="rgb(223,213,32)" fg:x="459" fg:w="1"/><text x="50.6896%" y="431.50"></text></g><g><title>__GI___libc_write (1 samples, 0.11%)</title><rect x="50.4396%" y="405" width="0.1099%" height="15" fill="rgb(233,115,5)" fg:x="459" fg:w="1"/><text x="50.6896%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="50.4396%" y="389" width="0.1099%" height="15" fill="rgb(207,226,44)" fg:x="459" fg:w="1"/><text x="50.6896%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="50.4396%" y="373" width="0.1099%" height="15" fill="rgb(208,126,0)" fg:x="459" fg:w="1"/><text x="50.6896%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="50.4396%" y="357" width="0.1099%" height="15" fill="rgb(244,66,21)" fg:x="459" fg:w="1"/><text x="50.6896%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="50.4396%" y="341" width="0.1099%" height="15" fill="rgb(222,97,12)" fg:x="459" fg:w="1"/><text x="50.6896%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="50.4396%" y="325" width="0.1099%" height="15" fill="rgb(219,213,19)" fg:x="459" fg:w="1"/><text x="50.6896%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="50.4396%" y="309" width="0.1099%" height="15" fill="rgb(252,169,30)" fg:x="459" fg:w="1"/><text x="50.6896%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="50.4396%" y="293" width="0.1099%" height="15" fill="rgb(206,32,51)" fg:x="459" fg:w="1"/><text x="50.6896%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="50.4396%" y="277" width="0.1099%" height="15" fill="rgb(250,172,42)" fg:x="459" fg:w="1"/><text x="50.6896%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="50.4396%" y="261" width="0.1099%" height="15" fill="rgb(209,34,43)" fg:x="459" fg:w="1"/><text x="50.6896%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="50.4396%" y="245" width="0.1099%" height="15" fill="rgb(223,11,35)" fg:x="459" fg:w="1"/><text x="50.6896%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="50.4396%" y="229" width="0.1099%" height="15" fill="rgb(251,219,26)" fg:x="459" fg:w="1"/><text x="50.6896%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="50.4396%" y="213" width="0.1099%" height="15" fill="rgb(231,119,3)" fg:x="459" fg:w="1"/><text x="50.6896%" y="223.50"></text></g><g><title>zip::write::&lt;impl zip::write::zip_writer::ZipWriter&lt;W&gt;&gt;::finish_file (7 samples, 0.77%)</title><rect x="49.8901%" y="565" width="0.7692%" height="15" fill="rgb(216,97,11)" fg:x="454" fg:w="7"/><text x="50.1401%" y="575.50"></text></g><g><title>zip::write::update_local_file_header (1 samples, 0.11%)</title><rect x="50.5495%" y="549" width="0.1099%" height="15" fill="rgb(223,59,9)" fg:x="460" fg:w="1"/><text x="50.7995%" y="559.50"></text></g><g><title>byteorder::io::WriteBytesExt::write_u32 (1 samples, 0.11%)</title><rect x="50.5495%" y="533" width="0.1099%" height="15" fill="rgb(233,93,31)" fg:x="460" fg:w="1"/><text x="50.7995%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.11%)</title><rect x="50.5495%" y="517" width="0.1099%" height="15" fill="rgb(239,81,33)" fg:x="460" fg:w="1"/><text x="50.7995%" y="527.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (1 samples, 0.11%)</title><rect x="50.5495%" y="501" width="0.1099%" height="15" fill="rgb(213,120,34)" fg:x="460" fg:w="1"/><text x="50.7995%" y="511.50"></text></g><g><title>std::sys::unix::net::Socket::write (1 samples, 0.11%)</title><rect x="50.5495%" y="485" width="0.1099%" height="15" fill="rgb(243,49,53)" fg:x="460" fg:w="1"/><text x="50.7995%" y="495.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.11%)</title><rect x="50.5495%" y="469" width="0.1099%" height="15" fill="rgb(247,216,33)" fg:x="460" fg:w="1"/><text x="50.7995%" y="479.50"></text></g><g><title>__GI___libc_write (1 samples, 0.11%)</title><rect x="50.5495%" y="453" width="0.1099%" height="15" fill="rgb(226,26,14)" fg:x="460" fg:w="1"/><text x="50.7995%" y="463.50"></text></g><g><title>__GI___libc_write (1 samples, 0.11%)</title><rect x="50.5495%" y="437" width="0.1099%" height="15" fill="rgb(215,49,53)" fg:x="460" fg:w="1"/><text x="50.7995%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="50.5495%" y="421" width="0.1099%" height="15" fill="rgb(245,162,40)" fg:x="460" fg:w="1"/><text x="50.7995%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="50.5495%" y="405" width="0.1099%" height="15" fill="rgb(229,68,17)" fg:x="460" fg:w="1"/><text x="50.7995%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="50.5495%" y="389" width="0.1099%" height="15" fill="rgb(213,182,10)" fg:x="460" fg:w="1"/><text x="50.7995%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="50.5495%" y="373" width="0.1099%" height="15" fill="rgb(245,125,30)" fg:x="460" fg:w="1"/><text x="50.7995%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="50.5495%" y="357" width="0.1099%" height="15" fill="rgb(232,202,2)" fg:x="460" fg:w="1"/><text x="50.7995%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="50.5495%" y="341" width="0.1099%" height="15" fill="rgb(237,140,51)" fg:x="460" fg:w="1"/><text x="50.7995%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="50.5495%" y="325" width="0.1099%" height="15" fill="rgb(236,157,25)" fg:x="460" fg:w="1"/><text x="50.7995%" y="335.50"></text></g><g><title>byteorder::io::WriteBytesExt::write_u16 (8 samples, 0.88%)</title><rect x="50.6593%" y="549" width="0.8791%" height="15" fill="rgb(219,209,0)" fg:x="461" fg:w="8"/><text x="50.9093%" y="559.50"></text></g><g><title>std::io::Write::write_all (8 samples, 0.88%)</title><rect x="50.6593%" y="533" width="0.8791%" height="15" fill="rgb(240,116,54)" fg:x="461" fg:w="8"/><text x="50.9093%" y="543.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (8 samples, 0.88%)</title><rect x="50.6593%" y="517" width="0.8791%" height="15" fill="rgb(216,10,36)" fg:x="461" fg:w="8"/><text x="50.9093%" y="527.50"></text></g><g><title>std::sys::unix::net::Socket::write (8 samples, 0.88%)</title><rect x="50.6593%" y="501" width="0.8791%" height="15" fill="rgb(222,72,44)" fg:x="461" fg:w="8"/><text x="50.9093%" y="511.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (8 samples, 0.88%)</title><rect x="50.6593%" y="485" width="0.8791%" height="15" fill="rgb(232,159,9)" fg:x="461" fg:w="8"/><text x="50.9093%" y="495.50"></text></g><g><title>__GI___libc_write (8 samples, 0.88%)</title><rect x="50.6593%" y="469" width="0.8791%" height="15" fill="rgb(210,39,32)" fg:x="461" fg:w="8"/><text x="50.9093%" y="479.50"></text></g><g><title>__GI___libc_write (8 samples, 0.88%)</title><rect x="50.6593%" y="453" width="0.8791%" height="15" fill="rgb(216,194,45)" fg:x="461" fg:w="8"/><text x="50.9093%" y="463.50"></text></g><g><title>[unknown] (8 samples, 0.88%)</title><rect x="50.6593%" y="437" width="0.8791%" height="15" fill="rgb(218,18,35)" fg:x="461" fg:w="8"/><text x="50.9093%" y="447.50"></text></g><g><title>[unknown] (7 samples, 0.77%)</title><rect x="50.7692%" y="421" width="0.7692%" height="15" fill="rgb(207,83,51)" fg:x="462" fg:w="7"/><text x="51.0192%" y="431.50"></text></g><g><title>[unknown] (7 samples, 0.77%)</title><rect x="50.7692%" y="405" width="0.7692%" height="15" fill="rgb(225,63,43)" fg:x="462" fg:w="7"/><text x="51.0192%" y="415.50"></text></g><g><title>[unknown] (7 samples, 0.77%)</title><rect x="50.7692%" y="389" width="0.7692%" height="15" fill="rgb(207,57,36)" fg:x="462" fg:w="7"/><text x="51.0192%" y="399.50"></text></g><g><title>[unknown] (7 samples, 0.77%)</title><rect x="50.7692%" y="373" width="0.7692%" height="15" fill="rgb(216,99,33)" fg:x="462" fg:w="7"/><text x="51.0192%" y="383.50"></text></g><g><title>[unknown] (7 samples, 0.77%)</title><rect x="50.7692%" y="357" width="0.7692%" height="15" fill="rgb(225,42,16)" fg:x="462" fg:w="7"/><text x="51.0192%" y="367.50"></text></g><g><title>[unknown] (7 samples, 0.77%)</title><rect x="50.7692%" y="341" width="0.7692%" height="15" fill="rgb(220,201,45)" fg:x="462" fg:w="7"/><text x="51.0192%" y="351.50"></text></g><g><title>[unknown] (7 samples, 0.77%)</title><rect x="50.7692%" y="325" width="0.7692%" height="15" fill="rgb(225,33,4)" fg:x="462" fg:w="7"/><text x="51.0192%" y="335.50"></text></g><g><title>[unknown] (7 samples, 0.77%)</title><rect x="50.7692%" y="309" width="0.7692%" height="15" fill="rgb(224,33,50)" fg:x="462" fg:w="7"/><text x="51.0192%" y="319.50"></text></g><g><title>[unknown] (6 samples, 0.66%)</title><rect x="50.8791%" y="293" width="0.6593%" height="15" fill="rgb(246,198,51)" fg:x="463" fg:w="6"/><text x="51.1291%" y="303.50"></text></g><g><title>[unknown] (6 samples, 0.66%)</title><rect x="50.8791%" y="277" width="0.6593%" height="15" fill="rgb(205,22,4)" fg:x="463" fg:w="6"/><text x="51.1291%" y="287.50"></text></g><g><title>[unknown] (4 samples, 0.44%)</title><rect x="51.0989%" y="261" width="0.4396%" height="15" fill="rgb(206,3,8)" fg:x="465" fg:w="4"/><text x="51.3489%" y="271.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="51.2088%" y="245" width="0.3297%" height="15" fill="rgb(251,23,15)" fg:x="466" fg:w="3"/><text x="51.4588%" y="255.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="51.2088%" y="229" width="0.3297%" height="15" fill="rgb(252,88,28)" fg:x="466" fg:w="3"/><text x="51.4588%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="51.4286%" y="213" width="0.1099%" height="15" fill="rgb(212,127,14)" fg:x="468" fg:w="1"/><text x="51.6786%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="51.4286%" y="197" width="0.1099%" height="15" fill="rgb(247,145,37)" fg:x="468" fg:w="1"/><text x="51.6786%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="51.4286%" y="181" width="0.1099%" height="15" fill="rgb(209,117,53)" fg:x="468" fg:w="1"/><text x="51.6786%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="51.4286%" y="165" width="0.1099%" height="15" fill="rgb(212,90,42)" fg:x="468" fg:w="1"/><text x="51.6786%" y="175.50"></text></g><g><title>demoparser::parsing::cache::cache_writer::WriteCache::write_bytes_to_zip (125 samples, 13.74%)</title><rect x="38.0220%" y="613" width="13.7363%" height="15" fill="rgb(218,164,37)" fg:x="346" fg:w="125"/><text x="38.2720%" y="623.50">demoparser::parsing::..</text></g><g><title>zip::write::&lt;impl zip::write::zip_writer::ZipWriter&lt;W&gt;&gt;::start_file (18 samples, 1.98%)</title><rect x="49.7802%" y="597" width="1.9780%" height="15" fill="rgb(246,65,34)" fg:x="453" fg:w="18"/><text x="50.0302%" y="607.50">z..</text></g><g><title>zip::write::&lt;impl zip::write::zip_writer::ZipWriter&lt;W&gt;&gt;::start_entry (18 samples, 1.98%)</title><rect x="49.7802%" y="581" width="1.9780%" height="15" fill="rgb(231,100,33)" fg:x="453" fg:w="18"/><text x="50.0302%" y="591.50">z..</text></g><g><title>zip::write::write_local_file_header (10 samples, 1.10%)</title><rect x="50.6593%" y="565" width="1.0989%" height="15" fill="rgb(228,126,14)" fg:x="461" fg:w="10"/><text x="50.9093%" y="575.50"></text></g><g><title>byteorder::io::WriteBytesExt::write_u32 (2 samples, 0.22%)</title><rect x="51.5385%" y="549" width="0.2198%" height="15" fill="rgb(215,173,21)" fg:x="469" fg:w="2"/><text x="51.7885%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.22%)</title><rect x="51.5385%" y="533" width="0.2198%" height="15" fill="rgb(210,6,40)" fg:x="469" fg:w="2"/><text x="51.7885%" y="543.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (2 samples, 0.22%)</title><rect x="51.5385%" y="517" width="0.2198%" height="15" fill="rgb(212,48,18)" fg:x="469" fg:w="2"/><text x="51.7885%" y="527.50"></text></g><g><title>std::sys::unix::net::Socket::write (2 samples, 0.22%)</title><rect x="51.5385%" y="501" width="0.2198%" height="15" fill="rgb(230,214,11)" fg:x="469" fg:w="2"/><text x="51.7885%" y="511.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (2 samples, 0.22%)</title><rect x="51.5385%" y="485" width="0.2198%" height="15" fill="rgb(254,105,39)" fg:x="469" fg:w="2"/><text x="51.7885%" y="495.50"></text></g><g><title>__GI___libc_write (2 samples, 0.22%)</title><rect x="51.5385%" y="469" width="0.2198%" height="15" fill="rgb(245,158,5)" fg:x="469" fg:w="2"/><text x="51.7885%" y="479.50"></text></g><g><title>__GI___libc_write (2 samples, 0.22%)</title><rect x="51.5385%" y="453" width="0.2198%" height="15" fill="rgb(249,208,11)" fg:x="469" fg:w="2"/><text x="51.7885%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="51.5385%" y="437" width="0.2198%" height="15" fill="rgb(210,39,28)" fg:x="469" fg:w="2"/><text x="51.7885%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="51.5385%" y="421" width="0.2198%" height="15" fill="rgb(211,56,53)" fg:x="469" fg:w="2"/><text x="51.7885%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="51.5385%" y="405" width="0.2198%" height="15" fill="rgb(226,201,30)" fg:x="469" fg:w="2"/><text x="51.7885%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="51.5385%" y="389" width="0.2198%" height="15" fill="rgb(239,101,34)" fg:x="469" fg:w="2"/><text x="51.7885%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="51.5385%" y="373" width="0.2198%" height="15" fill="rgb(226,209,5)" fg:x="469" fg:w="2"/><text x="51.7885%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="51.5385%" y="357" width="0.2198%" height="15" fill="rgb(250,105,47)" fg:x="469" fg:w="2"/><text x="51.7885%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="51.5385%" y="341" width="0.2198%" height="15" fill="rgb(230,72,3)" fg:x="469" fg:w="2"/><text x="51.7885%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="51.5385%" y="325" width="0.2198%" height="15" fill="rgb(232,218,39)" fg:x="469" fg:w="2"/><text x="51.7885%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="51.5385%" y="309" width="0.2198%" height="15" fill="rgb(248,166,6)" fg:x="469" fg:w="2"/><text x="51.7885%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="51.6484%" y="293" width="0.1099%" height="15" fill="rgb(247,89,20)" fg:x="470" fg:w="1"/><text x="51.8984%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="51.6484%" y="277" width="0.1099%" height="15" fill="rgb(248,130,54)" fg:x="470" fg:w="1"/><text x="51.8984%" y="287.50"></text></g><g><title>demoparser::parsing::cache::cache_writer::WriteCache::to_str_name_rules_prop (1 samples, 0.11%)</title><rect x="51.7582%" y="597" width="0.1099%" height="15" fill="rgb(234,196,4)" fg:x="471" fg:w="1"/><text x="52.0082%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.11%)</title><rect x="51.7582%" y="581" width="0.1099%" height="15" fill="rgb(250,143,31)" fg:x="471" fg:w="1"/><text x="52.0082%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.11%)</title><rect x="51.7582%" y="565" width="0.1099%" height="15" fill="rgb(211,110,34)" fg:x="471" fg:w="1"/><text x="52.0082%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.11%)</title><rect x="51.7582%" y="549" width="0.1099%" height="15" fill="rgb(215,124,48)" fg:x="471" fg:w="1"/><text x="52.0082%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.11%)</title><rect x="51.7582%" y="533" width="0.1099%" height="15" fill="rgb(216,46,13)" fg:x="471" fg:w="1"/><text x="52.0082%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.11%)</title><rect x="51.7582%" y="517" width="0.1099%" height="15" fill="rgb(205,184,25)" fg:x="471" fg:w="1"/><text x="52.0082%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.11%)</title><rect x="51.7582%" y="501" width="0.1099%" height="15" fill="rgb(228,1,10)" fg:x="471" fg:w="1"/><text x="52.0082%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.11%)</title><rect x="51.7582%" y="485" width="0.1099%" height="15" fill="rgb(213,116,27)" fg:x="471" fg:w="1"/><text x="52.0082%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.11%)</title><rect x="51.7582%" y="469" width="0.1099%" height="15" fill="rgb(241,95,50)" fg:x="471" fg:w="1"/><text x="52.0082%" y="479.50"></text></g><g><title>ZSTD_cwksp_reserve_buffer (1 samples, 0.11%)</title><rect x="51.8681%" y="357" width="0.1099%" height="15" fill="rgb(238,48,32)" fg:x="472" fg:w="1"/><text x="52.1181%" y="367.50"></text></g><g><title>ZSTD_cwksp_reserve_internal (1 samples, 0.11%)</title><rect x="51.8681%" y="341" width="0.1099%" height="15" fill="rgb(235,113,49)" fg:x="472" fg:w="1"/><text x="52.1181%" y="351.50"></text></g><g><title>ZSTD_cwksp_reserve_internal_buffer_space (1 samples, 0.11%)</title><rect x="51.8681%" y="325" width="0.1099%" height="15" fill="rgb(205,127,43)" fg:x="472" fg:w="1"/><text x="52.1181%" y="335.50"></text></g><g><title>std::io::Write::write_all (11 samples, 1.21%)</title><rect x="51.8681%" y="581" width="1.2088%" height="15" fill="rgb(250,162,2)" fg:x="472" fg:w="11"/><text x="52.1181%" y="591.50"></text></g><g><title>zip::write::&lt;impl std::io::Write for zip::write::zip_writer::ZipWriter&lt;W&gt;&gt;::write (11 samples, 1.21%)</title><rect x="51.8681%" y="565" width="1.2088%" height="15" fill="rgb(220,13,41)" fg:x="472" fg:w="11"/><text x="52.1181%" y="575.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write (11 samples, 1.21%)</title><rect x="51.8681%" y="549" width="1.2088%" height="15" fill="rgb(249,221,25)" fg:x="472" fg:w="11"/><text x="52.1181%" y="559.50"></text></g><g><title>&lt;zstd::stream::write::Encoder&lt;W&gt; as std::io::Write&gt;::write (11 samples, 1.21%)</title><rect x="51.8681%" y="533" width="1.2088%" height="15" fill="rgb(215,208,19)" fg:x="472" fg:w="11"/><text x="52.1181%" y="543.50"></text></g><g><title>&lt;zstd::stream::zio::writer::Writer&lt;W,D&gt; as std::io::Write&gt;::write (11 samples, 1.21%)</title><rect x="51.8681%" y="517" width="1.2088%" height="15" fill="rgb(236,175,2)" fg:x="472" fg:w="11"/><text x="52.1181%" y="527.50"></text></g><g><title>zstd::stream::zio::writer::Writer&lt;W,D&gt;::with_buffer (11 samples, 1.21%)</title><rect x="51.8681%" y="501" width="1.2088%" height="15" fill="rgb(241,52,2)" fg:x="472" fg:w="11"/><text x="52.1181%" y="511.50"></text></g><g><title>&lt;zstd::stream::zio::writer::Writer&lt;W,D&gt; as std::io::Write&gt;::write::{{closure}} (11 samples, 1.21%)</title><rect x="51.8681%" y="485" width="1.2088%" height="15" fill="rgb(248,140,14)" fg:x="472" fg:w="11"/><text x="52.1181%" y="495.50"></text></g><g><title>&lt;zstd::stream::raw::Encoder as zstd::stream::raw::Operation&gt;::run (11 samples, 1.21%)</title><rect x="51.8681%" y="469" width="1.2088%" height="15" fill="rgb(253,22,42)" fg:x="472" fg:w="11"/><text x="52.1181%" y="479.50"></text></g><g><title>zstd_safe::CCtx::compress_stream (11 samples, 1.21%)</title><rect x="51.8681%" y="453" width="1.2088%" height="15" fill="rgb(234,61,47)" fg:x="472" fg:w="11"/><text x="52.1181%" y="463.50"></text></g><g><title>ZSTD_compressStream (11 samples, 1.21%)</title><rect x="51.8681%" y="437" width="1.2088%" height="15" fill="rgb(208,226,15)" fg:x="472" fg:w="11"/><text x="52.1181%" y="447.50"></text></g><g><title>ZSTD_compressStream2 (11 samples, 1.21%)</title><rect x="51.8681%" y="421" width="1.2088%" height="15" fill="rgb(217,221,4)" fg:x="472" fg:w="11"/><text x="52.1181%" y="431.50"></text></g><g><title>ZSTD_CCtx_init_compressStream2 (11 samples, 1.21%)</title><rect x="51.8681%" y="405" width="1.2088%" height="15" fill="rgb(212,174,34)" fg:x="472" fg:w="11"/><text x="52.1181%" y="415.50"></text></g><g><title>ZSTD_compressBegin_internal (11 samples, 1.21%)</title><rect x="51.8681%" y="389" width="1.2088%" height="15" fill="rgb(253,83,4)" fg:x="472" fg:w="11"/><text x="52.1181%" y="399.50"></text></g><g><title>ZSTD_resetCCtx_internal (11 samples, 1.21%)</title><rect x="51.8681%" y="373" width="1.2088%" height="15" fill="rgb(250,195,49)" fg:x="472" fg:w="11"/><text x="52.1181%" y="383.50"></text></g><g><title>ZSTD_reset_matchState (10 samples, 1.10%)</title><rect x="51.9780%" y="357" width="1.0989%" height="15" fill="rgb(241,192,25)" fg:x="473" fg:w="10"/><text x="52.2280%" y="367.50"></text></g><g><title>ZSTD_cwksp_clean_tables (10 samples, 1.10%)</title><rect x="51.9780%" y="341" width="1.0989%" height="15" fill="rgb(208,124,10)" fg:x="473" fg:w="10"/><text x="52.2280%" y="351.50"></text></g><g><title>[libc.so.6] (10 samples, 1.10%)</title><rect x="51.9780%" y="325" width="1.0989%" height="15" fill="rgb(222,33,0)" fg:x="473" fg:w="10"/><text x="52.2280%" y="335.50"></text></g><g><title>ZSTD_buildSequencesStatistics (2 samples, 0.22%)</title><rect x="53.1868%" y="261" width="0.2198%" height="15" fill="rgb(234,209,28)" fg:x="484" fg:w="2"/><text x="53.4368%" y="271.50"></text></g><g><title>ZSTD_buildCTable (2 samples, 0.22%)</title><rect x="53.1868%" y="245" width="0.2198%" height="15" fill="rgb(224,11,23)" fg:x="484" fg:w="2"/><text x="53.4368%" y="255.50"></text></g><g><title>FSE_buildCTable_wksp (2 samples, 0.22%)</title><rect x="53.1868%" y="229" width="0.2198%" height="15" fill="rgb(232,99,1)" fg:x="484" fg:w="2"/><text x="53.4368%" y="239.50"></text></g><g><title>HUF_compress1X_repeat (1 samples, 0.11%)</title><rect x="53.4066%" y="245" width="0.1099%" height="15" fill="rgb(237,95,45)" fg:x="486" fg:w="1"/><text x="53.6566%" y="255.50"></text></g><g><title>HUF_compress_internal (1 samples, 0.11%)</title><rect x="53.4066%" y="229" width="0.1099%" height="15" fill="rgb(208,109,11)" fg:x="486" fg:w="1"/><text x="53.6566%" y="239.50"></text></g><g><title>HUF_buildCTable_wksp (1 samples, 0.11%)</title><rect x="53.4066%" y="213" width="0.1099%" height="15" fill="rgb(216,190,48)" fg:x="486" fg:w="1"/><text x="53.6566%" y="223.50"></text></g><g><title>HUF_buildCTableFromTree (1 samples, 0.11%)</title><rect x="53.4066%" y="197" width="0.1099%" height="15" fill="rgb(251,171,36)" fg:x="486" fg:w="1"/><text x="53.6566%" y="207.50"></text></g><g><title>zstd::stream::zio::writer::Writer&lt;W,D&gt;::with_buffer (5 samples, 0.55%)</title><rect x="53.0769%" y="469" width="0.5495%" height="15" fill="rgb(230,62,22)" fg:x="483" fg:w="5"/><text x="53.3269%" y="479.50"></text></g><g><title>zstd::stream::zio::writer::Writer&lt;W,D&gt;::finish::{{closure}} (5 samples, 0.55%)</title><rect x="53.0769%" y="453" width="0.5495%" height="15" fill="rgb(225,114,35)" fg:x="483" fg:w="5"/><text x="53.3269%" y="463.50"></text></g><g><title>&lt;zstd::stream::raw::Encoder as zstd::stream::raw::Operation&gt;::finish (5 samples, 0.55%)</title><rect x="53.0769%" y="437" width="0.5495%" height="15" fill="rgb(215,118,42)" fg:x="483" fg:w="5"/><text x="53.3269%" y="447.50"></text></g><g><title>zstd_safe::CCtx::end_stream (5 samples, 0.55%)</title><rect x="53.0769%" y="421" width="0.5495%" height="15" fill="rgb(243,119,21)" fg:x="483" fg:w="5"/><text x="53.3269%" y="431.50"></text></g><g><title>ZSTD_endStream (5 samples, 0.55%)</title><rect x="53.0769%" y="405" width="0.5495%" height="15" fill="rgb(252,177,53)" fg:x="483" fg:w="5"/><text x="53.3269%" y="415.50"></text></g><g><title>ZSTD_compressStream2 (5 samples, 0.55%)</title><rect x="53.0769%" y="389" width="0.5495%" height="15" fill="rgb(237,209,29)" fg:x="483" fg:w="5"/><text x="53.3269%" y="399.50"></text></g><g><title>ZSTD_compressStream_generic (5 samples, 0.55%)</title><rect x="53.0769%" y="373" width="0.5495%" height="15" fill="rgb(212,65,23)" fg:x="483" fg:w="5"/><text x="53.3269%" y="383.50"></text></g><g><title>ZSTD_compressEnd (5 samples, 0.55%)</title><rect x="53.0769%" y="357" width="0.5495%" height="15" fill="rgb(230,222,46)" fg:x="483" fg:w="5"/><text x="53.3269%" y="367.50"></text></g><g><title>ZSTD_compressContinue_internal (5 samples, 0.55%)</title><rect x="53.0769%" y="341" width="0.5495%" height="15" fill="rgb(215,135,32)" fg:x="483" fg:w="5"/><text x="53.3269%" y="351.50"></text></g><g><title>ZSTD_compress_frameChunk (5 samples, 0.55%)</title><rect x="53.0769%" y="325" width="0.5495%" height="15" fill="rgb(246,101,22)" fg:x="483" fg:w="5"/><text x="53.3269%" y="335.50"></text></g><g><title>ZSTD_compressBlock_internal (5 samples, 0.55%)</title><rect x="53.0769%" y="309" width="0.5495%" height="15" fill="rgb(206,107,13)" fg:x="483" fg:w="5"/><text x="53.3269%" y="319.50"></text></g><g><title>ZSTD_entropyCompressSeqStore (4 samples, 0.44%)</title><rect x="53.1868%" y="293" width="0.4396%" height="15" fill="rgb(250,100,44)" fg:x="484" fg:w="4"/><text x="53.4368%" y="303.50"></text></g><g><title>ZSTD_entropyCompressSeqStore_internal (4 samples, 0.44%)</title><rect x="53.1868%" y="277" width="0.4396%" height="15" fill="rgb(231,147,38)" fg:x="484" fg:w="4"/><text x="53.4368%" y="287.50"></text></g><g><title>ZSTD_compressLiterals (2 samples, 0.22%)</title><rect x="53.4066%" y="261" width="0.2198%" height="15" fill="rgb(229,8,40)" fg:x="486" fg:w="2"/><text x="53.6566%" y="271.50"></text></g><g><title>HUF_compress4X_repeat (1 samples, 0.11%)</title><rect x="53.5165%" y="245" width="0.1099%" height="15" fill="rgb(221,135,30)" fg:x="487" fg:w="1"/><text x="53.7665%" y="255.50"></text></g><g><title>HUF_compress_internal (1 samples, 0.11%)</title><rect x="53.5165%" y="229" width="0.1099%" height="15" fill="rgb(249,193,18)" fg:x="487" fg:w="1"/><text x="53.7665%" y="239.50"></text></g><g><title>HUF_buildCTable_wksp (1 samples, 0.11%)</title><rect x="53.5165%" y="213" width="0.1099%" height="15" fill="rgb(209,133,39)" fg:x="487" fg:w="1"/><text x="53.7665%" y="223.50"></text></g><g><title>HUF_sort (1 samples, 0.11%)</title><rect x="53.5165%" y="197" width="0.1099%" height="15" fill="rgb(232,100,14)" fg:x="487" fg:w="1"/><text x="53.7665%" y="207.50"></text></g><g><title>zip::write::GenericZipWriter&lt;W&gt;::switch_to (6 samples, 0.66%)</title><rect x="53.0769%" y="533" width="0.6593%" height="15" fill="rgb(224,185,1)" fg:x="483" fg:w="6"/><text x="53.3269%" y="543.50"></text></g><g><title>zstd::stream::write::Encoder&lt;W&gt;::finish (6 samples, 0.66%)</title><rect x="53.0769%" y="517" width="0.6593%" height="15" fill="rgb(223,139,8)" fg:x="483" fg:w="6"/><text x="53.3269%" y="527.50"></text></g><g><title>zstd::stream::write::Encoder&lt;W&gt;::try_finish (6 samples, 0.66%)</title><rect x="53.0769%" y="501" width="0.6593%" height="15" fill="rgb(232,213,38)" fg:x="483" fg:w="6"/><text x="53.3269%" y="511.50"></text></g><g><title>zstd::stream::zio::writer::Writer&lt;W,D&gt;::finish (6 samples, 0.66%)</title><rect x="53.0769%" y="485" width="0.6593%" height="15" fill="rgb(207,94,22)" fg:x="483" fg:w="6"/><text x="53.3269%" y="495.50"></text></g><g><title>zstd::stream::zio::writer::Writer&lt;W,D&gt;::write_from_offset (1 samples, 0.11%)</title><rect x="53.6264%" y="469" width="0.1099%" height="15" fill="rgb(219,183,54)" fg:x="488" fg:w="1"/><text x="53.8764%" y="479.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (1 samples, 0.11%)</title><rect x="53.6264%" y="453" width="0.1099%" height="15" fill="rgb(216,185,54)" fg:x="488" fg:w="1"/><text x="53.8764%" y="463.50"></text></g><g><title>std::sys::unix::net::Socket::write (1 samples, 0.11%)</title><rect x="53.6264%" y="437" width="0.1099%" height="15" fill="rgb(254,217,39)" fg:x="488" fg:w="1"/><text x="53.8764%" y="447.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.11%)</title><rect x="53.6264%" y="421" width="0.1099%" height="15" fill="rgb(240,178,23)" fg:x="488" fg:w="1"/><text x="53.8764%" y="431.50"></text></g><g><title>__GI___libc_write (1 samples, 0.11%)</title><rect x="53.6264%" y="405" width="0.1099%" height="15" fill="rgb(218,11,47)" fg:x="488" fg:w="1"/><text x="53.8764%" y="415.50"></text></g><g><title>__GI___libc_write (1 samples, 0.11%)</title><rect x="53.6264%" y="389" width="0.1099%" height="15" fill="rgb(218,51,51)" fg:x="488" fg:w="1"/><text x="53.8764%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="53.6264%" y="373" width="0.1099%" height="15" fill="rgb(238,126,27)" fg:x="488" fg:w="1"/><text x="53.8764%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="53.6264%" y="357" width="0.1099%" height="15" fill="rgb(249,202,22)" fg:x="488" fg:w="1"/><text x="53.8764%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="53.6264%" y="341" width="0.1099%" height="15" fill="rgb(254,195,49)" fg:x="488" fg:w="1"/><text x="53.8764%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="53.6264%" y="325" width="0.1099%" height="15" fill="rgb(208,123,14)" fg:x="488" fg:w="1"/><text x="53.8764%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="53.6264%" y="309" width="0.1099%" height="15" fill="rgb(224,200,8)" fg:x="488" fg:w="1"/><text x="53.8764%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="53.6264%" y="293" width="0.1099%" height="15" fill="rgb(217,61,36)" fg:x="488" fg:w="1"/><text x="53.8764%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="53.6264%" y="277" width="0.1099%" height="15" fill="rgb(206,35,45)" fg:x="488" fg:w="1"/><text x="53.8764%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="53.6264%" y="261" width="0.1099%" height="15" fill="rgb(217,65,33)" fg:x="488" fg:w="1"/><text x="53.8764%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="53.6264%" y="245" width="0.1099%" height="15" fill="rgb(222,158,48)" fg:x="488" fg:w="1"/><text x="53.8764%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="53.6264%" y="229" width="0.1099%" height="15" fill="rgb(254,2,54)" fg:x="488" fg:w="1"/><text x="53.8764%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="53.6264%" y="213" width="0.1099%" height="15" fill="rgb(250,143,38)" fg:x="488" fg:w="1"/><text x="53.8764%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="53.6264%" y="197" width="0.1099%" height="15" fill="rgb(248,25,0)" fg:x="488" fg:w="1"/><text x="53.8764%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="53.6264%" y="181" width="0.1099%" height="15" fill="rgb(206,152,27)" fg:x="488" fg:w="1"/><text x="53.8764%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="53.6264%" y="165" width="0.1099%" height="15" fill="rgb(240,77,30)" fg:x="488" fg:w="1"/><text x="53.8764%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="53.6264%" y="149" width="0.1099%" height="15" fill="rgb(231,5,3)" fg:x="488" fg:w="1"/><text x="53.8764%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="53.6264%" y="133" width="0.1099%" height="15" fill="rgb(207,226,32)" fg:x="488" fg:w="1"/><text x="53.8764%" y="143.50"></text></g><g><title>zip::write::&lt;impl zip::write::zip_writer::ZipWriter&lt;W&gt;&gt;::finish_file (10 samples, 1.10%)</title><rect x="53.0769%" y="549" width="1.0989%" height="15" fill="rgb(222,207,47)" fg:x="483" fg:w="10"/><text x="53.3269%" y="559.50"></text></g><g><title>zip::write::update_local_file_header (4 samples, 0.44%)</title><rect x="53.7363%" y="533" width="0.4396%" height="15" fill="rgb(229,115,45)" fg:x="489" fg:w="4"/><text x="53.9863%" y="543.50"></text></g><g><title>byteorder::io::WriteBytesExt::write_u32 (4 samples, 0.44%)</title><rect x="53.7363%" y="517" width="0.4396%" height="15" fill="rgb(224,191,6)" fg:x="489" fg:w="4"/><text x="53.9863%" y="527.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.44%)</title><rect x="53.7363%" y="501" width="0.4396%" height="15" fill="rgb(230,227,24)" fg:x="489" fg:w="4"/><text x="53.9863%" y="511.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (4 samples, 0.44%)</title><rect x="53.7363%" y="485" width="0.4396%" height="15" fill="rgb(228,80,19)" fg:x="489" fg:w="4"/><text x="53.9863%" y="495.50"></text></g><g><title>std::sys::unix::net::Socket::write (4 samples, 0.44%)</title><rect x="53.7363%" y="469" width="0.4396%" height="15" fill="rgb(247,229,0)" fg:x="489" fg:w="4"/><text x="53.9863%" y="479.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (4 samples, 0.44%)</title><rect x="53.7363%" y="453" width="0.4396%" height="15" fill="rgb(237,194,15)" fg:x="489" fg:w="4"/><text x="53.9863%" y="463.50"></text></g><g><title>__GI___libc_write (4 samples, 0.44%)</title><rect x="53.7363%" y="437" width="0.4396%" height="15" fill="rgb(219,203,20)" fg:x="489" fg:w="4"/><text x="53.9863%" y="447.50"></text></g><g><title>__GI___libc_write (4 samples, 0.44%)</title><rect x="53.7363%" y="421" width="0.4396%" height="15" fill="rgb(234,128,8)" fg:x="489" fg:w="4"/><text x="53.9863%" y="431.50"></text></g><g><title>[unknown] (4 samples, 0.44%)</title><rect x="53.7363%" y="405" width="0.4396%" height="15" fill="rgb(248,202,8)" fg:x="489" fg:w="4"/><text x="53.9863%" y="415.50"></text></g><g><title>[unknown] (4 samples, 0.44%)</title><rect x="53.7363%" y="389" width="0.4396%" height="15" fill="rgb(206,104,37)" fg:x="489" fg:w="4"/><text x="53.9863%" y="399.50"></text></g><g><title>[unknown] (4 samples, 0.44%)</title><rect x="53.7363%" y="373" width="0.4396%" height="15" fill="rgb(223,8,27)" fg:x="489" fg:w="4"/><text x="53.9863%" y="383.50"></text></g><g><title>[unknown] (4 samples, 0.44%)</title><rect x="53.7363%" y="357" width="0.4396%" height="15" fill="rgb(216,217,28)" fg:x="489" fg:w="4"/><text x="53.9863%" y="367.50"></text></g><g><title>[unknown] (4 samples, 0.44%)</title><rect x="53.7363%" y="341" width="0.4396%" height="15" fill="rgb(249,199,1)" fg:x="489" fg:w="4"/><text x="53.9863%" y="351.50"></text></g><g><title>[unknown] (4 samples, 0.44%)</title><rect x="53.7363%" y="325" width="0.4396%" height="15" fill="rgb(240,85,17)" fg:x="489" fg:w="4"/><text x="53.9863%" y="335.50"></text></g><g><title>[unknown] (4 samples, 0.44%)</title><rect x="53.7363%" y="309" width="0.4396%" height="15" fill="rgb(206,108,45)" fg:x="489" fg:w="4"/><text x="53.9863%" y="319.50"></text></g><g><title>[unknown] (4 samples, 0.44%)</title><rect x="53.7363%" y="293" width="0.4396%" height="15" fill="rgb(245,210,41)" fg:x="489" fg:w="4"/><text x="53.9863%" y="303.50"></text></g><g><title>[unknown] (4 samples, 0.44%)</title><rect x="53.7363%" y="277" width="0.4396%" height="15" fill="rgb(206,13,37)" fg:x="489" fg:w="4"/><text x="53.9863%" y="287.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="53.8462%" y="261" width="0.3297%" height="15" fill="rgb(250,61,18)" fg:x="490" fg:w="3"/><text x="54.0962%" y="271.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="53.8462%" y="245" width="0.3297%" height="15" fill="rgb(235,172,48)" fg:x="490" fg:w="3"/><text x="54.0962%" y="255.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="53.8462%" y="229" width="0.3297%" height="15" fill="rgb(249,201,17)" fg:x="490" fg:w="3"/><text x="54.0962%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="54.0659%" y="213" width="0.1099%" height="15" fill="rgb(219,208,6)" fg:x="492" fg:w="1"/><text x="54.3159%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="54.0659%" y="197" width="0.1099%" height="15" fill="rgb(248,31,23)" fg:x="492" fg:w="1"/><text x="54.3159%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="54.0659%" y="181" width="0.1099%" height="15" fill="rgb(245,15,42)" fg:x="492" fg:w="1"/><text x="54.3159%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="54.0659%" y="165" width="0.1099%" height="15" fill="rgb(222,217,39)" fg:x="492" fg:w="1"/><text x="54.3159%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="54.0659%" y="149" width="0.1099%" height="15" fill="rgb(210,219,27)" fg:x="492" fg:w="1"/><text x="54.3159%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="54.0659%" y="133" width="0.1099%" height="15" fill="rgb(252,166,36)" fg:x="492" fg:w="1"/><text x="54.3159%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="54.0659%" y="117" width="0.1099%" height="15" fill="rgb(245,132,34)" fg:x="492" fg:w="1"/><text x="54.3159%" y="127.50"></text></g><g><title>byteorder::io::WriteBytesExt::write_u16 (10 samples, 1.10%)</title><rect x="54.1758%" y="533" width="1.0989%" height="15" fill="rgb(236,54,3)" fg:x="493" fg:w="10"/><text x="54.4258%" y="543.50"></text></g><g><title>std::io::Write::write_all (10 samples, 1.10%)</title><rect x="54.1758%" y="517" width="1.0989%" height="15" fill="rgb(241,173,43)" fg:x="493" fg:w="10"/><text x="54.4258%" y="527.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (10 samples, 1.10%)</title><rect x="54.1758%" y="501" width="1.0989%" height="15" fill="rgb(215,190,9)" fg:x="493" fg:w="10"/><text x="54.4258%" y="511.50"></text></g><g><title>std::sys::unix::net::Socket::write (10 samples, 1.10%)</title><rect x="54.1758%" y="485" width="1.0989%" height="15" fill="rgb(242,101,16)" fg:x="493" fg:w="10"/><text x="54.4258%" y="495.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (10 samples, 1.10%)</title><rect x="54.1758%" y="469" width="1.0989%" height="15" fill="rgb(223,190,21)" fg:x="493" fg:w="10"/><text x="54.4258%" y="479.50"></text></g><g><title>__GI___libc_write (10 samples, 1.10%)</title><rect x="54.1758%" y="453" width="1.0989%" height="15" fill="rgb(215,228,25)" fg:x="493" fg:w="10"/><text x="54.4258%" y="463.50"></text></g><g><title>__GI___libc_write (10 samples, 1.10%)</title><rect x="54.1758%" y="437" width="1.0989%" height="15" fill="rgb(225,36,22)" fg:x="493" fg:w="10"/><text x="54.4258%" y="447.50"></text></g><g><title>[unknown] (10 samples, 1.10%)</title><rect x="54.1758%" y="421" width="1.0989%" height="15" fill="rgb(251,106,46)" fg:x="493" fg:w="10"/><text x="54.4258%" y="431.50"></text></g><g><title>[unknown] (10 samples, 1.10%)</title><rect x="54.1758%" y="405" width="1.0989%" height="15" fill="rgb(208,90,1)" fg:x="493" fg:w="10"/><text x="54.4258%" y="415.50"></text></g><g><title>[unknown] (10 samples, 1.10%)</title><rect x="54.1758%" y="389" width="1.0989%" height="15" fill="rgb(243,10,4)" fg:x="493" fg:w="10"/><text x="54.4258%" y="399.50"></text></g><g><title>[unknown] (10 samples, 1.10%)</title><rect x="54.1758%" y="373" width="1.0989%" height="15" fill="rgb(212,137,27)" fg:x="493" fg:w="10"/><text x="54.4258%" y="383.50"></text></g><g><title>[unknown] (10 samples, 1.10%)</title><rect x="54.1758%" y="357" width="1.0989%" height="15" fill="rgb(231,220,49)" fg:x="493" fg:w="10"/><text x="54.4258%" y="367.50"></text></g><g><title>[unknown] (10 samples, 1.10%)</title><rect x="54.1758%" y="341" width="1.0989%" height="15" fill="rgb(237,96,20)" fg:x="493" fg:w="10"/><text x="54.4258%" y="351.50"></text></g><g><title>[unknown] (9 samples, 0.99%)</title><rect x="54.2857%" y="325" width="0.9890%" height="15" fill="rgb(239,229,30)" fg:x="494" fg:w="9"/><text x="54.5357%" y="335.50"></text></g><g><title>[unknown] (8 samples, 0.88%)</title><rect x="54.3956%" y="309" width="0.8791%" height="15" fill="rgb(219,65,33)" fg:x="495" fg:w="8"/><text x="54.6456%" y="319.50"></text></g><g><title>[unknown] (6 samples, 0.66%)</title><rect x="54.6154%" y="293" width="0.6593%" height="15" fill="rgb(243,134,7)" fg:x="497" fg:w="6"/><text x="54.8654%" y="303.50"></text></g><g><title>[unknown] (6 samples, 0.66%)</title><rect x="54.6154%" y="277" width="0.6593%" height="15" fill="rgb(216,177,54)" fg:x="497" fg:w="6"/><text x="54.8654%" y="287.50"></text></g><g><title>[unknown] (6 samples, 0.66%)</title><rect x="54.6154%" y="261" width="0.6593%" height="15" fill="rgb(211,160,20)" fg:x="497" fg:w="6"/><text x="54.8654%" y="271.50"></text></g><g><title>[unknown] (6 samples, 0.66%)</title><rect x="54.6154%" y="245" width="0.6593%" height="15" fill="rgb(239,85,39)" fg:x="497" fg:w="6"/><text x="54.8654%" y="255.50"></text></g><g><title>[unknown] (6 samples, 0.66%)</title><rect x="54.6154%" y="229" width="0.6593%" height="15" fill="rgb(232,125,22)" fg:x="497" fg:w="6"/><text x="54.8654%" y="239.50"></text></g><g><title>[unknown] (4 samples, 0.44%)</title><rect x="54.8352%" y="213" width="0.4396%" height="15" fill="rgb(244,57,34)" fg:x="499" fg:w="4"/><text x="55.0852%" y="223.50"></text></g><g><title>[unknown] (4 samples, 0.44%)</title><rect x="54.8352%" y="197" width="0.4396%" height="15" fill="rgb(214,203,32)" fg:x="499" fg:w="4"/><text x="55.0852%" y="207.50"></text></g><g><title>[unknown] (4 samples, 0.44%)</title><rect x="54.8352%" y="181" width="0.4396%" height="15" fill="rgb(207,58,43)" fg:x="499" fg:w="4"/><text x="55.0852%" y="191.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="55.0549%" y="165" width="0.2198%" height="15" fill="rgb(215,193,15)" fg:x="501" fg:w="2"/><text x="55.3049%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="55.1648%" y="149" width="0.1099%" height="15" fill="rgb(232,15,44)" fg:x="502" fg:w="1"/><text x="55.4148%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="55.1648%" y="133" width="0.1099%" height="15" fill="rgb(212,3,48)" fg:x="502" fg:w="1"/><text x="55.4148%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="55.1648%" y="117" width="0.1099%" height="15" fill="rgb(218,128,7)" fg:x="502" fg:w="1"/><text x="55.4148%" y="127.50"></text></g><g><title>byteorder::io::WriteBytesExt::write_u32 (1 samples, 0.11%)</title><rect x="55.2747%" y="533" width="0.1099%" height="15" fill="rgb(226,216,39)" fg:x="503" fg:w="1"/><text x="55.5247%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.11%)</title><rect x="55.2747%" y="517" width="0.1099%" height="15" fill="rgb(243,47,51)" fg:x="503" fg:w="1"/><text x="55.5247%" y="527.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (1 samples, 0.11%)</title><rect x="55.2747%" y="501" width="0.1099%" height="15" fill="rgb(241,183,40)" fg:x="503" fg:w="1"/><text x="55.5247%" y="511.50"></text></g><g><title>std::sys::unix::net::Socket::write (1 samples, 0.11%)</title><rect x="55.2747%" y="485" width="0.1099%" height="15" fill="rgb(231,217,32)" fg:x="503" fg:w="1"/><text x="55.5247%" y="495.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.11%)</title><rect x="55.2747%" y="469" width="0.1099%" height="15" fill="rgb(229,61,38)" fg:x="503" fg:w="1"/><text x="55.5247%" y="479.50"></text></g><g><title>__GI___libc_write (1 samples, 0.11%)</title><rect x="55.2747%" y="453" width="0.1099%" height="15" fill="rgb(225,210,5)" fg:x="503" fg:w="1"/><text x="55.5247%" y="463.50"></text></g><g><title>__GI___libc_write (1 samples, 0.11%)</title><rect x="55.2747%" y="437" width="0.1099%" height="15" fill="rgb(231,79,45)" fg:x="503" fg:w="1"/><text x="55.5247%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="55.2747%" y="421" width="0.1099%" height="15" fill="rgb(224,100,7)" fg:x="503" fg:w="1"/><text x="55.5247%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="55.2747%" y="405" width="0.1099%" height="15" fill="rgb(241,198,18)" fg:x="503" fg:w="1"/><text x="55.5247%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="55.2747%" y="389" width="0.1099%" height="15" fill="rgb(252,97,53)" fg:x="503" fg:w="1"/><text x="55.5247%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="55.2747%" y="373" width="0.1099%" height="15" fill="rgb(220,88,7)" fg:x="503" fg:w="1"/><text x="55.5247%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="55.2747%" y="357" width="0.1099%" height="15" fill="rgb(213,176,14)" fg:x="503" fg:w="1"/><text x="55.5247%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="55.2747%" y="341" width="0.1099%" height="15" fill="rgb(246,73,7)" fg:x="503" fg:w="1"/><text x="55.5247%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="55.2747%" y="325" width="0.1099%" height="15" fill="rgb(245,64,36)" fg:x="503" fg:w="1"/><text x="55.5247%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="55.2747%" y="309" width="0.1099%" height="15" fill="rgb(245,80,10)" fg:x="503" fg:w="1"/><text x="55.5247%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="55.2747%" y="293" width="0.1099%" height="15" fill="rgb(232,107,50)" fg:x="503" fg:w="1"/><text x="55.5247%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="55.2747%" y="277" width="0.1099%" height="15" fill="rgb(253,3,0)" fg:x="503" fg:w="1"/><text x="55.5247%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="55.2747%" y="261" width="0.1099%" height="15" fill="rgb(212,99,53)" fg:x="503" fg:w="1"/><text x="55.5247%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="55.2747%" y="245" width="0.1099%" height="15" fill="rgb(249,111,54)" fg:x="503" fg:w="1"/><text x="55.5247%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="55.2747%" y="229" width="0.1099%" height="15" fill="rgb(249,55,30)" fg:x="503" fg:w="1"/><text x="55.5247%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="55.2747%" y="213" width="0.1099%" height="15" fill="rgb(237,47,42)" fg:x="503" fg:w="1"/><text x="55.5247%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="55.2747%" y="197" width="0.1099%" height="15" fill="rgb(211,20,18)" fg:x="503" fg:w="1"/><text x="55.5247%" y="207.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.11%)</title><rect x="55.3846%" y="533" width="0.1099%" height="15" fill="rgb(231,203,46)" fg:x="504" fg:w="1"/><text x="55.6346%" y="543.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (1 samples, 0.11%)</title><rect x="55.3846%" y="517" width="0.1099%" height="15" fill="rgb(237,142,3)" fg:x="504" fg:w="1"/><text x="55.6346%" y="527.50"></text></g><g><title>std::sys::unix::net::Socket::write (1 samples, 0.11%)</title><rect x="55.3846%" y="501" width="0.1099%" height="15" fill="rgb(241,107,1)" fg:x="504" fg:w="1"/><text x="55.6346%" y="511.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.11%)</title><rect x="55.3846%" y="485" width="0.1099%" height="15" fill="rgb(229,83,13)" fg:x="504" fg:w="1"/><text x="55.6346%" y="495.50"></text></g><g><title>__GI___libc_write (1 samples, 0.11%)</title><rect x="55.3846%" y="469" width="0.1099%" height="15" fill="rgb(241,91,40)" fg:x="504" fg:w="1"/><text x="55.6346%" y="479.50"></text></g><g><title>__GI___libc_write (1 samples, 0.11%)</title><rect x="55.3846%" y="453" width="0.1099%" height="15" fill="rgb(225,3,45)" fg:x="504" fg:w="1"/><text x="55.6346%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="55.3846%" y="437" width="0.1099%" height="15" fill="rgb(244,223,14)" fg:x="504" fg:w="1"/><text x="55.6346%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="55.3846%" y="421" width="0.1099%" height="15" fill="rgb(224,124,37)" fg:x="504" fg:w="1"/><text x="55.6346%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="55.3846%" y="405" width="0.1099%" height="15" fill="rgb(251,171,30)" fg:x="504" fg:w="1"/><text x="55.6346%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="55.3846%" y="389" width="0.1099%" height="15" fill="rgb(236,46,54)" fg:x="504" fg:w="1"/><text x="55.6346%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="55.3846%" y="373" width="0.1099%" height="15" fill="rgb(245,213,5)" fg:x="504" fg:w="1"/><text x="55.6346%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="55.3846%" y="357" width="0.1099%" height="15" fill="rgb(230,144,27)" fg:x="504" fg:w="1"/><text x="55.6346%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="55.3846%" y="341" width="0.1099%" height="15" fill="rgb(220,86,6)" fg:x="504" fg:w="1"/><text x="55.6346%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="55.3846%" y="325" width="0.1099%" height="15" fill="rgb(240,20,13)" fg:x="504" fg:w="1"/><text x="55.6346%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="55.3846%" y="309" width="0.1099%" height="15" fill="rgb(217,89,34)" fg:x="504" fg:w="1"/><text x="55.6346%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="55.3846%" y="293" width="0.1099%" height="15" fill="rgb(229,13,5)" fg:x="504" fg:w="1"/><text x="55.6346%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="55.3846%" y="277" width="0.1099%" height="15" fill="rgb(244,67,35)" fg:x="504" fg:w="1"/><text x="55.6346%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="55.3846%" y="261" width="0.1099%" height="15" fill="rgb(221,40,2)" fg:x="504" fg:w="1"/><text x="55.6346%" y="271.50"></text></g><g><title>zip::write::&lt;impl zip::write::zip_writer::ZipWriter&lt;W&gt;&gt;::start_entry (23 samples, 2.53%)</title><rect x="53.0769%" y="565" width="2.5275%" height="15" fill="rgb(237,157,21)" fg:x="483" fg:w="23"/><text x="53.3269%" y="575.50">zi..</text></g><g><title>zip::write::write_local_file_header (13 samples, 1.43%)</title><rect x="54.1758%" y="549" width="1.4286%" height="15" fill="rgb(222,94,11)" fg:x="493" fg:w="13"/><text x="54.4258%" y="559.50"></text></g><g><title>zip::types::DateTime::datepart (1 samples, 0.11%)</title><rect x="55.4945%" y="533" width="0.1099%" height="15" fill="rgb(249,113,6)" fg:x="505" fg:w="1"/><text x="55.7445%" y="543.50"></text></g><g><title>demoparser::parsing::cache::cache_writer::WriteCache::write_bytes_to_zip (35 samples, 3.85%)</title><rect x="51.8681%" y="597" width="3.8462%" height="15" fill="rgb(238,137,36)" fg:x="472" fg:w="35"/><text x="52.1181%" y="607.50">demo..</text></g><g><title>zip::write::&lt;impl zip::write::zip_writer::ZipWriter&lt;W&gt;&gt;::start_file (24 samples, 2.64%)</title><rect x="53.0769%" y="581" width="2.6374%" height="15" fill="rgb(210,102,26)" fg:x="483" fg:w="24"/><text x="53.3269%" y="591.50">zi..</text></g><g><title>zip::write::GenericZipWriter&lt;W&gt;::switch_to (1 samples, 0.11%)</title><rect x="55.6044%" y="565" width="0.1099%" height="15" fill="rgb(218,30,30)" fg:x="506" fg:w="1"/><text x="55.8544%" y="575.50"></text></g><g><title>zstd::stream::write::Encoder&lt;W&gt;::new (1 samples, 0.11%)</title><rect x="55.6044%" y="549" width="0.1099%" height="15" fill="rgb(214,67,26)" fg:x="506" fg:w="1"/><text x="55.8544%" y="559.50"></text></g><g><title>zstd::stream::write::Encoder&lt;W&gt;::with_dictionary (1 samples, 0.11%)</title><rect x="55.6044%" y="533" width="0.1099%" height="15" fill="rgb(251,9,53)" fg:x="506" fg:w="1"/><text x="55.8544%" y="543.50"></text></g><g><title>zstd::stream::raw::Encoder::with_dictionary (1 samples, 0.11%)</title><rect x="55.6044%" y="517" width="0.1099%" height="15" fill="rgb(228,204,25)" fg:x="506" fg:w="1"/><text x="55.8544%" y="527.50"></text></g><g><title>&lt;zstd_safe::CCtx as core::default::Default&gt;::default (1 samples, 0.11%)</title><rect x="55.6044%" y="501" width="0.1099%" height="15" fill="rgb(207,153,8)" fg:x="506" fg:w="1"/><text x="55.8544%" y="511.50"></text></g><g><title>zstd_safe::CCtx::create (1 samples, 0.11%)</title><rect x="55.6044%" y="485" width="0.1099%" height="15" fill="rgb(242,9,16)" fg:x="506" fg:w="1"/><text x="55.8544%" y="495.50"></text></g><g><title>zstd_safe::CCtx::try_create (1 samples, 0.11%)</title><rect x="55.6044%" y="469" width="0.1099%" height="15" fill="rgb(217,211,10)" fg:x="506" fg:w="1"/><text x="55.8544%" y="479.50"></text></g><g><title>ZSTD_createCCtx (1 samples, 0.11%)</title><rect x="55.6044%" y="453" width="0.1099%" height="15" fill="rgb(219,228,52)" fg:x="506" fg:w="1"/><text x="55.8544%" y="463.50"></text></g><g><title>ZSTD_createCCtx_advanced (1 samples, 0.11%)</title><rect x="55.6044%" y="437" width="0.1099%" height="15" fill="rgb(231,92,29)" fg:x="506" fg:w="1"/><text x="55.8544%" y="447.50"></text></g><g><title>ZSTD_initCCtx (1 samples, 0.11%)</title><rect x="55.6044%" y="421" width="0.1099%" height="15" fill="rgb(232,8,23)" fg:x="506" fg:w="1"/><text x="55.8544%" y="431.50"></text></g><g><title>demoparser::parsing::cache::cache_writer::WriteCache::write_others (37 samples, 4.07%)</title><rect x="51.7582%" y="613" width="4.0659%" height="15" fill="rgb(216,211,34)" fg:x="471" fg:w="37"/><text x="52.0082%" y="623.50">demo..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.11%)</title><rect x="55.7143%" y="597" width="0.1099%" height="15" fill="rgb(236,151,0)" fg:x="507" fg:w="1"/><text x="55.9643%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.11%)</title><rect x="55.7143%" y="581" width="0.1099%" height="15" fill="rgb(209,168,3)" fg:x="507" fg:w="1"/><text x="55.9643%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.11%)</title><rect x="55.7143%" y="565" width="0.1099%" height="15" fill="rgb(208,129,28)" fg:x="507" fg:w="1"/><text x="55.9643%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.11%)</title><rect x="55.7143%" y="549" width="0.1099%" height="15" fill="rgb(229,78,22)" fg:x="507" fg:w="1"/><text x="55.9643%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.11%)</title><rect x="55.7143%" y="533" width="0.1099%" height="15" fill="rgb(228,187,13)" fg:x="507" fg:w="1"/><text x="55.9643%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.11%)</title><rect x="55.7143%" y="517" width="0.1099%" height="15" fill="rgb(240,119,24)" fg:x="507" fg:w="1"/><text x="55.9643%" y="527.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.11%)</title><rect x="55.7143%" y="501" width="0.1099%" height="15" fill="rgb(209,194,42)" fg:x="507" fg:w="1"/><text x="55.9643%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.44%)</title><rect x="55.8242%" y="517" width="0.4396%" height="15" fill="rgb(247,200,46)" fg:x="508" fg:w="4"/><text x="56.0742%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 1.10%)</title><rect x="56.9231%" y="453" width="1.0989%" height="15" fill="rgb(218,76,16)" fg:x="518" fg:w="10"/><text x="57.1731%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 1.10%)</title><rect x="56.9231%" y="437" width="1.0989%" height="15" fill="rgb(225,21,48)" fg:x="518" fg:w="10"/><text x="57.1731%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 1.10%)</title><rect x="56.9231%" y="421" width="1.0989%" height="15" fill="rgb(239,223,50)" fg:x="518" fg:w="10"/><text x="57.1731%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (10 samples, 1.10%)</title><rect x="56.9231%" y="405" width="1.0989%" height="15" fill="rgb(244,45,21)" fg:x="518" fg:w="10"/><text x="57.1731%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (10 samples, 1.10%)</title><rect x="56.9231%" y="389" width="1.0989%" height="15" fill="rgb(232,33,43)" fg:x="518" fg:w="10"/><text x="57.1731%" y="399.50"></text></g><g><title>alloc::alloc::realloc (10 samples, 1.10%)</title><rect x="56.9231%" y="373" width="1.0989%" height="15" fill="rgb(209,8,3)" fg:x="518" fg:w="10"/><text x="57.1731%" y="383.50"></text></g><g><title>__GI___libc_realloc (10 samples, 1.10%)</title><rect x="56.9231%" y="357" width="1.0989%" height="15" fill="rgb(214,25,53)" fg:x="518" fg:w="10"/><text x="57.1731%" y="367.50"></text></g><g><title>_int_realloc (10 samples, 1.10%)</title><rect x="56.9231%" y="341" width="1.0989%" height="15" fill="rgb(254,186,54)" fg:x="518" fg:w="10"/><text x="57.1731%" y="351.50"></text></g><g><title>[libc.so.6] (10 samples, 1.10%)</title><rect x="56.9231%" y="325" width="1.0989%" height="15" fill="rgb(208,174,49)" fg:x="518" fg:w="10"/><text x="57.1731%" y="335.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="57.6923%" y="309" width="0.3297%" height="15" fill="rgb(233,191,51)" fg:x="525" fg:w="3"/><text x="57.9423%" y="319.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="57.6923%" y="293" width="0.3297%" height="15" fill="rgb(222,134,10)" fg:x="525" fg:w="3"/><text x="57.9423%" y="303.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="57.6923%" y="277" width="0.3297%" height="15" fill="rgb(230,226,20)" fg:x="525" fg:w="3"/><text x="57.9423%" y="287.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="57.6923%" y="261" width="0.3297%" height="15" fill="rgb(251,111,25)" fg:x="525" fg:w="3"/><text x="57.9423%" y="271.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="57.6923%" y="245" width="0.3297%" height="15" fill="rgb(224,40,46)" fg:x="525" fg:w="3"/><text x="57.9423%" y="255.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="57.6923%" y="229" width="0.3297%" height="15" fill="rgb(236,108,47)" fg:x="525" fg:w="3"/><text x="57.9423%" y="239.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="57.6923%" y="213" width="0.3297%" height="15" fill="rgb(234,93,0)" fg:x="525" fg:w="3"/><text x="57.9423%" y="223.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="57.6923%" y="197" width="0.3297%" height="15" fill="rgb(224,213,32)" fg:x="525" fg:w="3"/><text x="57.9423%" y="207.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="57.8022%" y="181" width="0.2198%" height="15" fill="rgb(251,11,48)" fg:x="526" fg:w="2"/><text x="58.0522%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="57.9121%" y="165" width="0.1099%" height="15" fill="rgb(236,173,5)" fg:x="527" fg:w="1"/><text x="58.1621%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="57.9121%" y="149" width="0.1099%" height="15" fill="rgb(230,95,12)" fg:x="527" fg:w="1"/><text x="58.1621%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (19 samples, 2.09%)</title><rect x="56.2637%" y="469" width="2.0879%" height="15" fill="rgb(232,209,1)" fg:x="512" fg:w="19"/><text x="56.5137%" y="479.50">a..</text></g><g><title>core::ptr::write (3 samples, 0.33%)</title><rect x="58.0220%" y="453" width="0.3297%" height="15" fill="rgb(232,6,1)" fg:x="528" fg:w="3"/><text x="58.2720%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="58.0220%" y="437" width="0.3297%" height="15" fill="rgb(210,224,50)" fg:x="528" fg:w="3"/><text x="58.2720%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="58.1319%" y="421" width="0.2198%" height="15" fill="rgb(228,127,35)" fg:x="529" fg:w="2"/><text x="58.3819%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="58.1319%" y="405" width="0.2198%" height="15" fill="rgb(245,102,45)" fg:x="529" fg:w="2"/><text x="58.3819%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="58.1319%" y="389" width="0.2198%" height="15" fill="rgb(214,1,49)" fg:x="529" fg:w="2"/><text x="58.3819%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="58.1319%" y="373" width="0.2198%" height="15" fill="rgb(226,163,40)" fg:x="529" fg:w="2"/><text x="58.3819%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="58.2418%" y="357" width="0.1099%" height="15" fill="rgb(239,212,28)" fg:x="530" fg:w="1"/><text x="58.4918%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="58.2418%" y="341" width="0.1099%" height="15" fill="rgb(220,20,13)" fg:x="530" fg:w="1"/><text x="58.4918%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="58.2418%" y="325" width="0.1099%" height="15" fill="rgb(210,164,35)" fg:x="530" fg:w="1"/><text x="58.4918%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="58.2418%" y="309" width="0.1099%" height="15" fill="rgb(248,109,41)" fg:x="530" fg:w="1"/><text x="58.4918%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="58.2418%" y="293" width="0.1099%" height="15" fill="rgb(238,23,50)" fg:x="530" fg:w="1"/><text x="58.4918%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="58.2418%" y="277" width="0.1099%" height="15" fill="rgb(211,48,49)" fg:x="530" fg:w="1"/><text x="58.4918%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.11%)</title><rect x="58.5714%" y="341" width="0.1099%" height="15" fill="rgb(223,36,21)" fg:x="533" fg:w="1"/><text x="58.8214%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.33%)</title><rect x="58.5714%" y="357" width="0.3297%" height="15" fill="rgb(207,123,46)" fg:x="533" fg:w="3"/><text x="58.8214%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.22%)</title><rect x="58.6813%" y="341" width="0.2198%" height="15" fill="rgb(240,218,32)" fg:x="534" fg:w="2"/><text x="58.9313%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.11%)</title><rect x="59.1209%" y="341" width="0.1099%" height="15" fill="rgb(252,5,43)" fg:x="538" fg:w="1"/><text x="59.3709%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.99%)</title><rect x="58.3516%" y="405" width="0.9890%" height="15" fill="rgb(252,84,19)" fg:x="531" fg:w="9"/><text x="58.6016%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.99%)</title><rect x="58.3516%" y="389" width="0.9890%" height="15" fill="rgb(243,152,39)" fg:x="531" fg:w="9"/><text x="58.6016%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.99%)</title><rect x="58.3516%" y="373" width="0.9890%" height="15" fill="rgb(234,160,15)" fg:x="531" fg:w="9"/><text x="58.6016%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.44%)</title><rect x="58.9011%" y="357" width="0.4396%" height="15" fill="rgb(237,34,20)" fg:x="536" fg:w="4"/><text x="59.1511%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.11%)</title><rect x="59.2308%" y="341" width="0.1099%" height="15" fill="rgb(229,97,13)" fg:x="539" fg:w="1"/><text x="59.4808%" y="351.50"></text></g><g><title>hashbrown::map::make_insert_hash (27 samples, 2.97%)</title><rect x="58.3516%" y="437" width="2.9670%" height="15" fill="rgb(234,71,50)" fg:x="531" fg:w="27"/><text x="58.6016%" y="447.50">has..</text></g><g><title>core::hash::BuildHasher::hash_one (27 samples, 2.97%)</title><rect x="58.3516%" y="421" width="2.9670%" height="15" fill="rgb(253,155,4)" fg:x="531" fg:w="27"/><text x="58.6016%" y="431.50">cor..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (18 samples, 1.98%)</title><rect x="59.3407%" y="405" width="1.9780%" height="15" fill="rgb(222,185,37)" fg:x="540" fg:w="18"/><text x="59.5907%" y="415.50">c..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (18 samples, 1.98%)</title><rect x="59.3407%" y="389" width="1.9780%" height="15" fill="rgb(251,177,13)" fg:x="540" fg:w="18"/><text x="59.5907%" y="399.50">c..</text></g><g><title>core::hash::Hasher::write_i32 (18 samples, 1.98%)</title><rect x="59.3407%" y="373" width="1.9780%" height="15" fill="rgb(250,179,40)" fg:x="540" fg:w="18"/><text x="59.5907%" y="383.50">c..</text></g><g><title>core::hash::Hasher::write_u32 (18 samples, 1.98%)</title><rect x="59.3407%" y="357" width="1.9780%" height="15" fill="rgb(242,44,2)" fg:x="540" fg:w="18"/><text x="59.5907%" y="367.50">c..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (18 samples, 1.98%)</title><rect x="59.3407%" y="341" width="1.9780%" height="15" fill="rgb(216,177,13)" fg:x="540" fg:w="18"/><text x="59.5907%" y="351.50">&lt;..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (18 samples, 1.98%)</title><rect x="59.3407%" y="325" width="1.9780%" height="15" fill="rgb(216,106,43)" fg:x="540" fg:w="18"/><text x="59.5907%" y="335.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (18 samples, 1.98%)</title><rect x="59.3407%" y="309" width="1.9780%" height="15" fill="rgb(216,183,2)" fg:x="540" fg:w="18"/><text x="59.5907%" y="319.50">&lt;..</text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.11%)</title><rect x="61.2088%" y="293" width="0.1099%" height="15" fill="rgb(249,75,3)" fg:x="557" fg:w="1"/><text x="61.4588%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.11%)</title><rect x="61.9780%" y="389" width="0.1099%" height="15" fill="rgb(219,67,39)" fg:x="564" fg:w="1"/><text x="62.2280%" y="399.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.11%)</title><rect x="61.9780%" y="373" width="0.1099%" height="15" fill="rgb(253,228,2)" fg:x="564" fg:w="1"/><text x="62.2280%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.11%)</title><rect x="61.9780%" y="357" width="0.1099%" height="15" fill="rgb(235,138,27)" fg:x="564" fg:w="1"/><text x="62.2280%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.11%)</title><rect x="61.9780%" y="341" width="0.1099%" height="15" fill="rgb(236,97,51)" fg:x="564" fg:w="1"/><text x="62.2280%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (3 samples, 0.33%)</title><rect x="61.9780%" y="405" width="0.3297%" height="15" fill="rgb(240,80,30)" fg:x="564" fg:w="3"/><text x="62.2280%" y="415.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (2 samples, 0.22%)</title><rect x="62.0879%" y="389" width="0.2198%" height="15" fill="rgb(230,178,19)" fg:x="565" fg:w="2"/><text x="62.3379%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for i32&gt;::eq (2 samples, 0.22%)</title><rect x="62.0879%" y="373" width="0.2198%" height="15" fill="rgb(210,190,27)" fg:x="565" fg:w="2"/><text x="62.3379%" y="383.50"></text></g><g><title>hashbrown::raw::h2 (3 samples, 0.33%)</title><rect x="62.3077%" y="405" width="0.3297%" height="15" fill="rgb(222,107,31)" fg:x="567" fg:w="3"/><text x="62.5577%" y="415.50"></text></g><g><title>itertools::Itertools::into_group_map_by (63 samples, 6.92%)</title><rect x="55.8242%" y="613" width="6.9231%" height="15" fill="rgb(216,127,34)" fg:x="508" fg:w="63"/><text x="56.0742%" y="623.50">itertools..</text></g><g><title>itertools::group_map::into_group_map_by (63 samples, 6.92%)</title><rect x="55.8242%" y="597" width="6.9231%" height="15" fill="rgb(234,116,52)" fg:x="508" fg:w="63"/><text x="56.0742%" y="607.50">itertools..</text></g><g><title>itertools::group_map::into_group_map (63 samples, 6.92%)</title><rect x="55.8242%" y="581" width="6.9231%" height="15" fill="rgb(222,124,15)" fg:x="508" fg:w="63"/><text x="56.0742%" y="591.50">itertools..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (63 samples, 6.92%)</title><rect x="55.8242%" y="565" width="6.9231%" height="15" fill="rgb(231,179,28)" fg:x="508" fg:w="63"/><text x="56.0742%" y="575.50">core::ite..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (63 samples, 6.92%)</title><rect x="55.8242%" y="549" width="6.9231%" height="15" fill="rgb(226,93,45)" fg:x="508" fg:w="63"/><text x="56.0742%" y="559.50">&lt;core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (63 samples, 6.92%)</title><rect x="55.8242%" y="533" width="6.9231%" height="15" fill="rgb(215,8,51)" fg:x="508" fg:w="63"/><text x="56.0742%" y="543.50">core::ite..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (59 samples, 6.48%)</title><rect x="56.2637%" y="517" width="6.4835%" height="15" fill="rgb(223,106,5)" fg:x="512" fg:w="59"/><text x="56.5137%" y="527.50">core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (59 samples, 6.48%)</title><rect x="56.2637%" y="501" width="6.4835%" height="15" fill="rgb(250,191,5)" fg:x="512" fg:w="59"/><text x="56.5137%" y="511.50">core::it..</text></g><g><title>itertools::group_map::into_group_map::{{closure}} (59 samples, 6.48%)</title><rect x="56.2637%" y="485" width="6.4835%" height="15" fill="rgb(242,132,44)" fg:x="512" fg:w="59"/><text x="56.5137%" y="495.50">itertool..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (40 samples, 4.40%)</title><rect x="58.3516%" y="469" width="4.3956%" height="15" fill="rgb(251,152,29)" fg:x="531" fg:w="40"/><text x="58.6016%" y="479.50">std::..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (40 samples, 4.40%)</title><rect x="58.3516%" y="453" width="4.3956%" height="15" fill="rgb(218,179,5)" fg:x="531" fg:w="40"/><text x="58.6016%" y="463.50">hashb..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 1.43%)</title><rect x="61.3187%" y="437" width="1.4286%" height="15" fill="rgb(227,67,19)" fg:x="558" fg:w="13"/><text x="61.5687%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (13 samples, 1.43%)</title><rect x="61.3187%" y="421" width="1.4286%" height="15" fill="rgb(233,119,31)" fg:x="558" fg:w="13"/><text x="61.5687%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.11%)</title><rect x="62.6374%" y="405" width="0.1099%" height="15" fill="rgb(241,120,22)" fg:x="570" fg:w="1"/><text x="62.8874%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.11%)</title><rect x="62.6374%" y="389" width="0.1099%" height="15" fill="rgb(224,102,30)" fg:x="570" fg:w="1"/><text x="62.8874%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="63.2967%" y="517" width="0.1099%" height="15" fill="rgb(210,164,37)" fg:x="576" fg:w="1"/><text x="63.5467%" y="527.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.11%)</title><rect x="63.2967%" y="501" width="0.1099%" height="15" fill="rgb(226,191,16)" fg:x="576" fg:w="1"/><text x="63.5467%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (4 samples, 0.44%)</title><rect x="63.4066%" y="517" width="0.4396%" height="15" fill="rgb(214,40,45)" fg:x="577" fg:w="4"/><text x="63.6566%" y="527.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (4 samples, 0.44%)</title><rect x="63.4066%" y="501" width="0.4396%" height="15" fill="rgb(244,29,26)" fg:x="577" fg:w="4"/><text x="63.6566%" y="511.50"></text></g><g><title>hashbrown::raw::h2 (3 samples, 0.33%)</title><rect x="63.8462%" y="517" width="0.3297%" height="15" fill="rgb(216,16,5)" fg:x="581" fg:w="3"/><text x="64.0962%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.11%)</title><rect x="64.1758%" y="517" width="0.1099%" height="15" fill="rgb(249,76,35)" fg:x="584" fg:w="1"/><text x="64.4258%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.11%)</title><rect x="64.1758%" y="501" width="0.1099%" height="15" fill="rgb(207,11,44)" fg:x="584" fg:w="1"/><text x="64.4258%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.1758%" y="485" width="0.1099%" height="15" fill="rgb(228,190,49)" fg:x="584" fg:w="1"/><text x="64.4258%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.1758%" y="469" width="0.1099%" height="15" fill="rgb(214,173,12)" fg:x="584" fg:w="1"/><text x="64.4258%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.1758%" y="453" width="0.1099%" height="15" fill="rgb(218,26,35)" fg:x="584" fg:w="1"/><text x="64.4258%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.1758%" y="437" width="0.1099%" height="15" fill="rgb(220,200,19)" fg:x="584" fg:w="1"/><text x="64.4258%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.1758%" y="421" width="0.1099%" height="15" fill="rgb(239,95,49)" fg:x="584" fg:w="1"/><text x="64.4258%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.1758%" y="405" width="0.1099%" height="15" fill="rgb(235,85,53)" fg:x="584" fg:w="1"/><text x="64.4258%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.1758%" y="389" width="0.1099%" height="15" fill="rgb(233,133,31)" fg:x="584" fg:w="1"/><text x="64.4258%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.1758%" y="373" width="0.1099%" height="15" fill="rgb(218,25,20)" fg:x="584" fg:w="1"/><text x="64.4258%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.1758%" y="357" width="0.1099%" height="15" fill="rgb(252,210,38)" fg:x="584" fg:w="1"/><text x="64.4258%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.1758%" y="341" width="0.1099%" height="15" fill="rgb(242,134,21)" fg:x="584" fg:w="1"/><text x="64.4258%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.1758%" y="325" width="0.1099%" height="15" fill="rgb(213,28,48)" fg:x="584" fg:w="1"/><text x="64.4258%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.1758%" y="309" width="0.1099%" height="15" fill="rgb(250,196,2)" fg:x="584" fg:w="1"/><text x="64.4258%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.1758%" y="293" width="0.1099%" height="15" fill="rgb(227,5,17)" fg:x="584" fg:w="1"/><text x="64.4258%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.1758%" y="277" width="0.1099%" height="15" fill="rgb(221,226,24)" fg:x="584" fg:w="1"/><text x="64.4258%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.1758%" y="261" width="0.1099%" height="15" fill="rgb(211,5,48)" fg:x="584" fg:w="1"/><text x="64.4258%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.1758%" y="245" width="0.1099%" height="15" fill="rgb(219,150,6)" fg:x="584" fg:w="1"/><text x="64.4258%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.1758%" y="229" width="0.1099%" height="15" fill="rgb(251,46,16)" fg:x="584" fg:w="1"/><text x="64.4258%" y="239.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (16 samples, 1.76%)</title><rect x="62.7473%" y="613" width="1.7582%" height="15" fill="rgb(220,204,40)" fg:x="571" fg:w="16"/><text x="62.9973%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (16 samples, 1.76%)</title><rect x="62.7473%" y="597" width="1.7582%" height="15" fill="rgb(211,85,2)" fg:x="571" fg:w="16"/><text x="62.9973%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (16 samples, 1.76%)</title><rect x="62.7473%" y="581" width="1.7582%" height="15" fill="rgb(229,17,7)" fg:x="571" fg:w="16"/><text x="62.9973%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (14 samples, 1.54%)</title><rect x="62.9670%" y="565" width="1.5385%" height="15" fill="rgb(239,72,28)" fg:x="573" fg:w="14"/><text x="63.2170%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (14 samples, 1.54%)</title><rect x="62.9670%" y="549" width="1.5385%" height="15" fill="rgb(230,47,54)" fg:x="573" fg:w="14"/><text x="63.2170%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (14 samples, 1.54%)</title><rect x="62.9670%" y="533" width="1.5385%" height="15" fill="rgb(214,50,8)" fg:x="573" fg:w="14"/><text x="63.2170%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (2 samples, 0.22%)</title><rect x="64.2857%" y="517" width="0.2198%" height="15" fill="rgb(216,198,43)" fg:x="585" fg:w="2"/><text x="64.5357%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.22%)</title><rect x="64.2857%" y="501" width="0.2198%" height="15" fill="rgb(234,20,35)" fg:x="585" fg:w="2"/><text x="64.5357%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.22%)</title><rect x="64.2857%" y="485" width="0.2198%" height="15" fill="rgb(254,45,19)" fg:x="585" fg:w="2"/><text x="64.5357%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.22%)</title><rect x="64.6154%" y="581" width="0.2198%" height="15" fill="rgb(219,14,44)" fg:x="588" fg:w="2"/><text x="64.8654%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.22%)</title><rect x="64.6154%" y="565" width="0.2198%" height="15" fill="rgb(217,220,26)" fg:x="588" fg:w="2"/><text x="64.8654%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.22%)</title><rect x="64.6154%" y="549" width="0.2198%" height="15" fill="rgb(213,158,28)" fg:x="588" fg:w="2"/><text x="64.8654%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket_ptr (1 samples, 0.11%)</title><rect x="64.8352%" y="501" width="0.1099%" height="15" fill="rgb(252,51,52)" fg:x="590" fg:w="1"/><text x="65.0852%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (6 samples, 0.66%)</title><rect x="64.5055%" y="613" width="0.6593%" height="15" fill="rgb(246,89,16)" fg:x="587" fg:w="6"/><text x="64.7555%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.66%)</title><rect x="64.5055%" y="597" width="0.6593%" height="15" fill="rgb(216,158,49)" fg:x="587" fg:w="6"/><text x="64.7555%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.33%)</title><rect x="64.8352%" y="581" width="0.3297%" height="15" fill="rgb(236,107,19)" fg:x="590" fg:w="3"/><text x="65.0852%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.33%)</title><rect x="64.8352%" y="565" width="0.3297%" height="15" fill="rgb(228,185,30)" fg:x="590" fg:w="3"/><text x="65.0852%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.33%)</title><rect x="64.8352%" y="549" width="0.3297%" height="15" fill="rgb(246,134,8)" fg:x="590" fg:w="3"/><text x="65.0852%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (3 samples, 0.33%)</title><rect x="64.8352%" y="533" width="0.3297%" height="15" fill="rgb(214,143,50)" fg:x="590" fg:w="3"/><text x="65.0852%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (3 samples, 0.33%)</title><rect x="64.8352%" y="517" width="0.3297%" height="15" fill="rgb(228,75,8)" fg:x="590" fg:w="3"/><text x="65.0852%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (2 samples, 0.22%)</title><rect x="64.9451%" y="501" width="0.2198%" height="15" fill="rgb(207,175,4)" fg:x="591" fg:w="2"/><text x="65.1951%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (2 samples, 0.22%)</title><rect x="64.9451%" y="485" width="0.2198%" height="15" fill="rgb(205,108,24)" fg:x="591" fg:w="2"/><text x="65.1951%" y="495.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.11%)</title><rect x="65.0549%" y="469" width="0.1099%" height="15" fill="rgb(244,120,49)" fg:x="592" fg:w="1"/><text x="65.3049%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="66.4835%" y="389" width="0.1099%" height="15" fill="rgb(223,47,38)" fg:x="605" fg:w="1"/><text x="66.7335%" y="399.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.11%)</title><rect x="66.5934%" y="389" width="0.1099%" height="15" fill="rgb(229,179,11)" fg:x="606" fg:w="1"/><text x="66.8434%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.11%)</title><rect x="66.5934%" y="373" width="0.1099%" height="15" fill="rgb(231,122,1)" fg:x="606" fg:w="1"/><text x="66.8434%" y="383.50"></text></g><g><title>miniz_oxide::deflate::core::DictOxide::find_match (66 samples, 7.25%)</title><rect x="66.7033%" y="389" width="7.2527%" height="15" fill="rgb(245,119,9)" fg:x="607" fg:w="66"/><text x="66.9533%" y="399.50">miniz_oxid..</text></g><g><title>miniz_oxide::deflate::core::DictOxide::read_as_u16 (6 samples, 0.66%)</title><rect x="73.2967%" y="373" width="0.6593%" height="15" fill="rgb(241,163,25)" fg:x="667" fg:w="6"/><text x="73.5467%" y="383.50"></text></g><g><title>miniz_oxide::deflate::core::read_u16_le (6 samples, 0.66%)</title><rect x="73.2967%" y="357" width="0.6593%" height="15" fill="rgb(217,214,3)" fg:x="667" fg:w="6"/><text x="73.5467%" y="367.50"></text></g><g><title>miniz_oxide::deflate::core::flush_block (1 samples, 0.11%)</title><rect x="73.9560%" y="389" width="0.1099%" height="15" fill="rgb(240,86,28)" fg:x="673" fg:w="1"/><text x="74.2060%" y="399.50"></text></g><g><title>miniz_oxide::deflate::core::compress_block (1 samples, 0.11%)</title><rect x="73.9560%" y="373" width="0.1099%" height="15" fill="rgb(215,47,9)" fg:x="673" fg:w="1"/><text x="74.2060%" y="383.50"></text></g><g><title>miniz_oxide::deflate::core::compress_lz_codes (1 samples, 0.11%)</title><rect x="73.9560%" y="357" width="0.1099%" height="15" fill="rgb(252,25,45)" fg:x="673" fg:w="1"/><text x="74.2060%" y="367.50"></text></g><g><title>miniz_oxide::deflate::core::record_literal (1 samples, 0.11%)</title><rect x="74.0659%" y="389" width="0.1099%" height="15" fill="rgb(251,164,9)" fg:x="674" fg:w="1"/><text x="74.3159%" y="399.50"></text></g><g><title>&lt;flate2::mem::Compress as flate2::zio::Ops&gt;::run_vec (85 samples, 9.34%)</title><rect x="65.1648%" y="517" width="9.3407%" height="15" fill="rgb(233,194,0)" fg:x="593" fg:w="85"/><text x="65.4148%" y="527.50">&lt;flate2::mem:..</text></g><g><title>flate2::mem::Compress::compress_vec (85 samples, 9.34%)</title><rect x="65.1648%" y="501" width="9.3407%" height="15" fill="rgb(249,111,24)" fg:x="593" fg:w="85"/><text x="65.4148%" y="511.50">flate2::mem::..</text></g><g><title>flate2::mem::Compress::compress (85 samples, 9.34%)</title><rect x="65.1648%" y="485" width="9.3407%" height="15" fill="rgb(250,223,3)" fg:x="593" fg:w="85"/><text x="65.4148%" y="495.50">flate2::mem::..</text></g><g><title>&lt;flate2::ffi::rust::Deflate as flate2::ffi::DeflateBackend&gt;::compress (85 samples, 9.34%)</title><rect x="65.1648%" y="469" width="9.3407%" height="15" fill="rgb(236,178,37)" fg:x="593" fg:w="85"/><text x="65.4148%" y="479.50">&lt;flate2::ffi:..</text></g><g><title>miniz_oxide::deflate::stream::deflate (85 samples, 9.34%)</title><rect x="65.1648%" y="453" width="9.3407%" height="15" fill="rgb(241,158,50)" fg:x="593" fg:w="85"/><text x="65.4148%" y="463.50">miniz_oxide::..</text></g><g><title>miniz_oxide::deflate::core::compress (85 samples, 9.34%)</title><rect x="65.1648%" y="437" width="9.3407%" height="15" fill="rgb(213,121,41)" fg:x="593" fg:w="85"/><text x="65.4148%" y="447.50">miniz_oxide::..</text></g><g><title>miniz_oxide::deflate::core::compress_inner (85 samples, 9.34%)</title><rect x="65.1648%" y="421" width="9.3407%" height="15" fill="rgb(240,92,3)" fg:x="593" fg:w="85"/><text x="65.4148%" y="431.50">miniz_oxide::..</text></g><g><title>miniz_oxide::deflate::core::compress_normal (85 samples, 9.34%)</title><rect x="65.1648%" y="405" width="9.3407%" height="15" fill="rgb(205,123,3)" fg:x="593" fg:w="85"/><text x="65.4148%" y="415.50">miniz_oxide::..</text></g><g><title>miniz_oxide::deflate::core::record_match (3 samples, 0.33%)</title><rect x="74.1758%" y="389" width="0.3297%" height="15" fill="rgb(205,97,47)" fg:x="675" fg:w="3"/><text x="74.4258%" y="399.50"></text></g><g><title>miniz_oxide::deflate::core::LZOxide::write_code (2 samples, 0.22%)</title><rect x="74.2857%" y="373" width="0.2198%" height="15" fill="rgb(247,152,14)" fg:x="676" fg:w="2"/><text x="74.5357%" y="383.50"></text></g><g><title>demoparser::parsing::cache::cache_writer::WriteCache::write_all_caches (388 samples, 42.64%)</title><rect x="31.9780%" y="645" width="42.6374%" height="15" fill="rgb(248,195,53)" fg:x="291" fg:w="388"/><text x="32.2280%" y="655.50">demoparser::parsing::cache::cache_writer::WriteCache::write_all_caches</text></g><g><title>demoparser::parsing::cache::cache_writer::WriteCache::write_packet_ents (388 samples, 42.64%)</title><rect x="31.9780%" y="629" width="42.6374%" height="15" fill="rgb(226,201,16)" fg:x="291" fg:w="388"/><text x="32.2280%" y="639.50">demoparser::parsing::cache::cache_writer::WriteCache::write_packet_ents</text></g><g><title>std::io::Write::write_all (86 samples, 9.45%)</title><rect x="65.1648%" y="613" width="9.4505%" height="15" fill="rgb(205,98,0)" fg:x="593" fg:w="86"/><text x="65.4148%" y="623.50">std::io::Write..</text></g><g><title>zip::write::&lt;impl std::io::Write for zip::write::zip_writer::ZipWriter&lt;W&gt;&gt;::write (86 samples, 9.45%)</title><rect x="65.1648%" y="597" width="9.4505%" height="15" fill="rgb(214,191,48)" fg:x="593" fg:w="86"/><text x="65.4148%" y="607.50">zip::write::&lt;i..</text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write (86 samples, 9.45%)</title><rect x="65.1648%" y="581" width="9.4505%" height="15" fill="rgb(237,112,39)" fg:x="593" fg:w="86"/><text x="65.4148%" y="591.50">std::io::impls..</text></g><g><title>&lt;flate2::deflate::write::DeflateEncoder&lt;W&gt; as std::io::Write&gt;::write (86 samples, 9.45%)</title><rect x="65.1648%" y="565" width="9.4505%" height="15" fill="rgb(247,203,27)" fg:x="593" fg:w="86"/><text x="65.4148%" y="575.50">&lt;flate2::defla..</text></g><g><title>&lt;flate2::zio::Writer&lt;W,D&gt; as std::io::Write&gt;::write (86 samples, 9.45%)</title><rect x="65.1648%" y="549" width="9.4505%" height="15" fill="rgb(235,124,28)" fg:x="593" fg:w="86"/><text x="65.4148%" y="559.50">&lt;flate2::zio::..</text></g><g><title>flate2::zio::Writer&lt;W,D&gt;::write_with_status (86 samples, 9.45%)</title><rect x="65.1648%" y="533" width="9.4505%" height="15" fill="rgb(208,207,46)" fg:x="593" fg:w="86"/><text x="65.4148%" y="543.50">flate2::zio::W..</text></g><g><title>flate2::zio::Writer&lt;W,D&gt;::dump (1 samples, 0.11%)</title><rect x="74.5055%" y="517" width="0.1099%" height="15" fill="rgb(234,176,4)" fg:x="678" fg:w="1"/><text x="74.7555%" y="527.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (1 samples, 0.11%)</title><rect x="74.5055%" y="501" width="0.1099%" height="15" fill="rgb(230,133,28)" fg:x="678" fg:w="1"/><text x="74.7555%" y="511.50"></text></g><g><title>std::sys::unix::net::Socket::write (1 samples, 0.11%)</title><rect x="74.5055%" y="485" width="0.1099%" height="15" fill="rgb(211,137,40)" fg:x="678" fg:w="1"/><text x="74.7555%" y="495.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.11%)</title><rect x="74.5055%" y="469" width="0.1099%" height="15" fill="rgb(254,35,13)" fg:x="678" fg:w="1"/><text x="74.7555%" y="479.50"></text></g><g><title>__GI___libc_write (1 samples, 0.11%)</title><rect x="74.5055%" y="453" width="0.1099%" height="15" fill="rgb(225,49,51)" fg:x="678" fg:w="1"/><text x="74.7555%" y="463.50"></text></g><g><title>__GI___libc_write (1 samples, 0.11%)</title><rect x="74.5055%" y="437" width="0.1099%" height="15" fill="rgb(251,10,15)" fg:x="678" fg:w="1"/><text x="74.7555%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="74.5055%" y="421" width="0.1099%" height="15" fill="rgb(228,207,15)" fg:x="678" fg:w="1"/><text x="74.7555%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="74.5055%" y="405" width="0.1099%" height="15" fill="rgb(241,99,19)" fg:x="678" fg:w="1"/><text x="74.7555%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="74.5055%" y="389" width="0.1099%" height="15" fill="rgb(207,104,49)" fg:x="678" fg:w="1"/><text x="74.7555%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="74.5055%" y="373" width="0.1099%" height="15" fill="rgb(234,99,18)" fg:x="678" fg:w="1"/><text x="74.7555%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="74.5055%" y="357" width="0.1099%" height="15" fill="rgb(213,191,49)" fg:x="678" fg:w="1"/><text x="74.7555%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="74.5055%" y="341" width="0.1099%" height="15" fill="rgb(210,226,19)" fg:x="678" fg:w="1"/><text x="74.7555%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="74.5055%" y="325" width="0.1099%" height="15" fill="rgb(229,97,18)" fg:x="678" fg:w="1"/><text x="74.7555%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="74.5055%" y="309" width="0.1099%" height="15" fill="rgb(211,167,15)" fg:x="678" fg:w="1"/><text x="74.7555%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="74.5055%" y="293" width="0.1099%" height="15" fill="rgb(210,169,34)" fg:x="678" fg:w="1"/><text x="74.7555%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="74.5055%" y="277" width="0.1099%" height="15" fill="rgb(241,121,31)" fg:x="678" fg:w="1"/><text x="74.7555%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="74.5055%" y="261" width="0.1099%" height="15" fill="rgb(232,40,11)" fg:x="678" fg:w="1"/><text x="74.7555%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="74.5055%" y="245" width="0.1099%" height="15" fill="rgb(205,86,26)" fg:x="678" fg:w="1"/><text x="74.7555%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="74.5055%" y="229" width="0.1099%" height="15" fill="rgb(231,126,28)" fg:x="678" fg:w="1"/><text x="74.7555%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="74.5055%" y="213" width="0.1099%" height="15" fill="rgb(219,221,18)" fg:x="678" fg:w="1"/><text x="74.7555%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="74.5055%" y="197" width="0.1099%" height="15" fill="rgb(211,40,0)" fg:x="678" fg:w="1"/><text x="74.7555%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="74.5055%" y="181" width="0.1099%" height="15" fill="rgb(239,85,43)" fg:x="678" fg:w="1"/><text x="74.7555%" y="191.50"></text></g><g><title>[unknown] (20 samples, 2.20%)</title><rect x="75.6044%" y="245" width="2.1978%" height="15" fill="rgb(231,55,21)" fg:x="688" fg:w="20"/><text x="75.8544%" y="255.50">[..</text></g><g><title>[unknown] (17 samples, 1.87%)</title><rect x="75.9341%" y="229" width="1.8681%" height="15" fill="rgb(225,184,43)" fg:x="691" fg:w="17"/><text x="76.1841%" y="239.50">[..</text></g><g><title>[unknown] (17 samples, 1.87%)</title><rect x="75.9341%" y="213" width="1.8681%" height="15" fill="rgb(251,158,41)" fg:x="691" fg:w="17"/><text x="76.1841%" y="223.50">[..</text></g><g><title>[unknown] (17 samples, 1.87%)</title><rect x="75.9341%" y="197" width="1.8681%" height="15" fill="rgb(234,159,37)" fg:x="691" fg:w="17"/><text x="76.1841%" y="207.50">[..</text></g><g><title>[unknown] (16 samples, 1.76%)</title><rect x="76.0440%" y="181" width="1.7582%" height="15" fill="rgb(216,204,22)" fg:x="692" fg:w="16"/><text x="76.2940%" y="191.50"></text></g><g><title>[unknown] (15 samples, 1.65%)</title><rect x="76.1538%" y="165" width="1.6484%" height="15" fill="rgb(214,17,3)" fg:x="693" fg:w="15"/><text x="76.4038%" y="175.50"></text></g><g><title>[unknown] (14 samples, 1.54%)</title><rect x="76.2637%" y="149" width="1.5385%" height="15" fill="rgb(212,111,17)" fg:x="694" fg:w="14"/><text x="76.5137%" y="159.50"></text></g><g><title>[unknown] (14 samples, 1.54%)</title><rect x="76.2637%" y="133" width="1.5385%" height="15" fill="rgb(221,157,24)" fg:x="694" fg:w="14"/><text x="76.5137%" y="143.50"></text></g><g><title>[unknown] (14 samples, 1.54%)</title><rect x="76.2637%" y="117" width="1.5385%" height="15" fill="rgb(252,16,13)" fg:x="694" fg:w="14"/><text x="76.5137%" y="127.50"></text></g><g><title>[unknown] (13 samples, 1.43%)</title><rect x="76.3736%" y="101" width="1.4286%" height="15" fill="rgb(221,62,2)" fg:x="695" fg:w="13"/><text x="76.6236%" y="111.50"></text></g><g><title>[unknown] (13 samples, 1.43%)</title><rect x="76.3736%" y="85" width="1.4286%" height="15" fill="rgb(247,87,22)" fg:x="695" fg:w="13"/><text x="76.6236%" y="95.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="77.4725%" y="69" width="0.3297%" height="15" fill="rgb(215,73,9)" fg:x="705" fg:w="3"/><text x="77.7225%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="77.8022%" y="229" width="0.1099%" height="15" fill="rgb(207,175,33)" fg:x="708" fg:w="1"/><text x="78.0522%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="77.8022%" y="213" width="0.1099%" height="15" fill="rgb(243,129,54)" fg:x="708" fg:w="1"/><text x="78.0522%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="77.8022%" y="197" width="0.1099%" height="15" fill="rgb(227,119,45)" fg:x="708" fg:w="1"/><text x="78.0522%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="77.8022%" y="181" width="0.1099%" height="15" fill="rgb(205,109,36)" fg:x="708" fg:w="1"/><text x="78.0522%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="77.8022%" y="165" width="0.1099%" height="15" fill="rgb(205,6,39)" fg:x="708" fg:w="1"/><text x="78.0522%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="77.8022%" y="149" width="0.1099%" height="15" fill="rgb(221,32,16)" fg:x="708" fg:w="1"/><text x="78.0522%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="77.8022%" y="133" width="0.1099%" height="15" fill="rgb(228,144,50)" fg:x="708" fg:w="1"/><text x="78.0522%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="77.8022%" y="117" width="0.1099%" height="15" fill="rgb(229,201,53)" fg:x="708" fg:w="1"/><text x="78.0522%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="77.8022%" y="101" width="0.1099%" height="15" fill="rgb(249,153,27)" fg:x="708" fg:w="1"/><text x="78.0522%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="77.8022%" y="85" width="0.1099%" height="15" fill="rgb(227,106,25)" fg:x="708" fg:w="1"/><text x="78.0522%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="77.8022%" y="69" width="0.1099%" height="15" fill="rgb(230,65,29)" fg:x="708" fg:w="1"/><text x="78.0522%" y="79.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (24 samples, 2.64%)</title><rect x="75.3846%" y="389" width="2.6374%" height="15" fill="rgb(221,57,46)" fg:x="686" fg:w="24"/><text x="75.6346%" y="399.50">al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (24 samples, 2.64%)</title><rect x="75.3846%" y="373" width="2.6374%" height="15" fill="rgb(229,161,17)" fg:x="686" fg:w="24"/><text x="75.6346%" y="383.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (24 samples, 2.64%)</title><rect x="75.3846%" y="357" width="2.6374%" height="15" fill="rgb(222,213,11)" fg:x="686" fg:w="24"/><text x="75.6346%" y="367.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (24 samples, 2.64%)</title><rect x="75.3846%" y="341" width="2.6374%" height="15" fill="rgb(235,35,13)" fg:x="686" fg:w="24"/><text x="75.6346%" y="351.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 2.64%)</title><rect x="75.3846%" y="325" width="2.6374%" height="15" fill="rgb(233,158,34)" fg:x="686" fg:w="24"/><text x="75.6346%" y="335.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 2.64%)</title><rect x="75.3846%" y="309" width="2.6374%" height="15" fill="rgb(215,151,48)" fg:x="686" fg:w="24"/><text x="75.6346%" y="319.50">al..</text></g><g><title>alloc::alloc::alloc (24 samples, 2.64%)</title><rect x="75.3846%" y="293" width="2.6374%" height="15" fill="rgb(229,84,14)" fg:x="686" fg:w="24"/><text x="75.6346%" y="303.50">al..</text></g><g><title>__GI___libc_malloc (24 samples, 2.64%)</title><rect x="75.3846%" y="277" width="2.6374%" height="15" fill="rgb(229,68,14)" fg:x="686" fg:w="24"/><text x="75.6346%" y="287.50">__..</text></g><g><title>_int_malloc (24 samples, 2.64%)</title><rect x="75.3846%" y="261" width="2.6374%" height="15" fill="rgb(243,106,26)" fg:x="686" fg:w="24"/><text x="75.6346%" y="271.50">_i..</text></g><g><title>sysmalloc (2 samples, 0.22%)</title><rect x="77.8022%" y="245" width="0.2198%" height="15" fill="rgb(206,45,38)" fg:x="708" fg:w="2"/><text x="78.0522%" y="255.50"></text></g><g><title>__glibc_morecore (1 samples, 0.11%)</title><rect x="77.9121%" y="229" width="0.1099%" height="15" fill="rgb(226,6,15)" fg:x="709" fg:w="1"/><text x="78.1621%" y="239.50"></text></g><g><title>__GI___sbrk (1 samples, 0.11%)</title><rect x="77.9121%" y="213" width="0.1099%" height="15" fill="rgb(232,22,54)" fg:x="709" fg:w="1"/><text x="78.1621%" y="223.50"></text></g><g><title>__GI___sbrk (1 samples, 0.11%)</title><rect x="77.9121%" y="197" width="0.1099%" height="15" fill="rgb(229,222,32)" fg:x="709" fg:w="1"/><text x="78.1621%" y="207.50"></text></g><g><title>__brk (1 samples, 0.11%)</title><rect x="77.9121%" y="181" width="0.1099%" height="15" fill="rgb(228,62,29)" fg:x="709" fg:w="1"/><text x="78.1621%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="77.9121%" y="165" width="0.1099%" height="15" fill="rgb(251,103,34)" fg:x="709" fg:w="1"/><text x="78.1621%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;demoparser::parsing::variants::PropData&gt;&gt; (2 samples, 0.22%)</title><rect x="79.4505%" y="373" width="0.2198%" height="15" fill="rgb(233,12,30)" fg:x="723" fg:w="2"/><text x="79.7005%" y="383.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_boolie (6 samples, 0.66%)</title><rect x="83.6264%" y="341" width="0.6593%" height="15" fill="rgb(238,52,0)" fg:x="761" fg:w="6"/><text x="83.8764%" y="351.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bit (6 samples, 0.66%)</title><rect x="83.6264%" y="325" width="0.6593%" height="15" fill="rgb(223,98,5)" fg:x="761" fg:w="6"/><text x="83.8764%" y="335.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (6 samples, 0.66%)</title><rect x="83.6264%" y="309" width="0.6593%" height="15" fill="rgb(228,75,37)" fg:x="761" fg:w="6"/><text x="83.8764%" y="319.50"></text></g><g><title>bitter::LittleEndianReader::refill (1 samples, 0.11%)</title><rect x="84.1758%" y="293" width="0.1099%" height="15" fill="rgb(205,115,49)" fg:x="766" fg:w="1"/><text x="84.4258%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.11%)</title><rect x="84.1758%" y="277" width="0.1099%" height="15" fill="rgb(250,154,43)" fg:x="766" fg:w="1"/><text x="84.4258%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.11%)</title><rect x="84.1758%" y="261" width="0.1099%" height="15" fill="rgb(226,43,29)" fg:x="766" fg:w="1"/><text x="84.4258%" y="271.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::consume (1 samples, 0.11%)</title><rect x="84.9451%" y="309" width="0.1099%" height="15" fill="rgb(249,228,39)" fg:x="773" fg:w="1"/><text x="85.1951%" y="319.50"></text></g><g><title>bitter::LittleEndianReader::consume_ (1 samples, 0.11%)</title><rect x="84.9451%" y="293" width="0.1099%" height="15" fill="rgb(216,79,43)" fg:x="773" fg:w="1"/><text x="85.1951%" y="303.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::peek (1 samples, 0.11%)</title><rect x="85.0549%" y="309" width="0.1099%" height="15" fill="rgb(228,95,12)" fg:x="774" fg:w="1"/><text x="85.3049%" y="319.50"></text></g><g><title>bitter::LittleEndianReader::peek_ (1 samples, 0.11%)</title><rect x="85.0549%" y="293" width="0.1099%" height="15" fill="rgb(249,221,15)" fg:x="774" fg:w="1"/><text x="85.3049%" y="303.50"></text></g><g><title>bitter::LittleEndianReader::has_data_for_unaligned_loads (3 samples, 0.33%)</title><rect x="85.1648%" y="309" width="0.3297%" height="15" fill="rgb(233,34,13)" fg:x="775" fg:w="3"/><text x="85.4148%" y="319.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_inx (50 samples, 5.49%)</title><rect x="80.1099%" y="357" width="5.4945%" height="15" fill="rgb(214,103,39)" fg:x="729" fg:w="50"/><text x="80.3599%" y="367.50">demopar..</text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (12 samples, 1.32%)</title><rect x="84.2857%" y="341" width="1.3187%" height="15" fill="rgb(251,126,39)" fg:x="767" fg:w="12"/><text x="84.5357%" y="351.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (9 samples, 0.99%)</title><rect x="84.6154%" y="325" width="0.9890%" height="15" fill="rgb(214,216,36)" fg:x="770" fg:w="9"/><text x="84.8654%" y="335.50"></text></g><g><title>bitter::LittleEndianReader::refill (1 samples, 0.11%)</title><rect x="85.4945%" y="309" width="0.1099%" height="15" fill="rgb(220,221,8)" fg:x="778" fg:w="1"/><text x="85.7445%" y="319.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities_cache_only::parse_indicies (57 samples, 6.26%)</title><rect x="79.6703%" y="373" width="6.2637%" height="15" fill="rgb(240,216,3)" fg:x="725" fg:w="57"/><text x="79.9203%" y="383.50">demopars..</text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (3 samples, 0.33%)</title><rect x="85.6044%" y="357" width="0.3297%" height="15" fill="rgb(232,218,17)" fg:x="779" fg:w="3"/><text x="85.8544%" y="367.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::peek (1 samples, 0.11%)</title><rect x="90.6593%" y="277" width="0.1099%" height="15" fill="rgb(229,163,45)" fg:x="825" fg:w="1"/><text x="90.9093%" y="287.50"></text></g><g><title>bitter::LittleEndianReader::peek_ (1 samples, 0.11%)</title><rect x="90.6593%" y="261" width="0.1099%" height="15" fill="rgb(231,110,42)" fg:x="825" fg:w="1"/><text x="90.9093%" y="271.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_special_float (6 samples, 0.66%)</title><rect x="90.2198%" y="341" width="0.6593%" height="15" fill="rgb(208,170,48)" fg:x="821" fg:w="6"/><text x="90.4698%" y="351.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_f32 (2 samples, 0.22%)</title><rect x="90.6593%" y="325" width="0.2198%" height="15" fill="rgb(239,116,25)" fg:x="825" fg:w="2"/><text x="90.9093%" y="335.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_u32 (2 samples, 0.22%)</title><rect x="90.6593%" y="309" width="0.2198%" height="15" fill="rgb(219,200,50)" fg:x="825" fg:w="2"/><text x="90.9093%" y="319.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (2 samples, 0.22%)</title><rect x="90.6593%" y="293" width="0.2198%" height="15" fill="rgb(245,200,0)" fg:x="825" fg:w="2"/><text x="90.9093%" y="303.50"></text></g><g><title>bitter::LittleEndianReader::has_data_for_unaligned_loads (1 samples, 0.11%)</title><rect x="90.7692%" y="277" width="0.1099%" height="15" fill="rgb(245,119,33)" fg:x="826" fg:w="1"/><text x="91.0192%" y="287.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::peek (1 samples, 0.11%)</title><rect x="91.0989%" y="309" width="0.1099%" height="15" fill="rgb(231,125,12)" fg:x="829" fg:w="1"/><text x="91.3489%" y="319.50"></text></g><g><title>bitter::LittleEndianReader::peek_ (1 samples, 0.11%)</title><rect x="91.0989%" y="293" width="0.1099%" height="15" fill="rgb(216,96,41)" fg:x="829" fg:w="1"/><text x="91.3489%" y="303.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_float (20 samples, 2.20%)</title><rect x="89.1209%" y="357" width="2.1978%" height="15" fill="rgb(248,43,45)" fg:x="811" fg:w="20"/><text x="89.3709%" y="367.50">d..</text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (4 samples, 0.44%)</title><rect x="90.8791%" y="341" width="0.4396%" height="15" fill="rgb(217,222,7)" fg:x="827" fg:w="4"/><text x="91.1291%" y="351.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (2 samples, 0.22%)</title><rect x="91.0989%" y="325" width="0.2198%" height="15" fill="rgb(233,28,6)" fg:x="829" fg:w="2"/><text x="91.3489%" y="335.50"></text></g><g><title>bitter::LittleEndianReader::has_data_for_unaligned_loads (1 samples, 0.11%)</title><rect x="91.2088%" y="309" width="0.1099%" height="15" fill="rgb(231,218,15)" fg:x="830" fg:w="1"/><text x="91.4588%" y="319.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (2 samples, 0.22%)</title><rect x="91.4286%" y="341" width="0.2198%" height="15" fill="rgb(226,171,48)" fg:x="832" fg:w="2"/><text x="91.6786%" y="351.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.11%)</title><rect x="91.5385%" y="325" width="0.1099%" height="15" fill="rgb(235,201,9)" fg:x="833" fg:w="1"/><text x="91.7885%" y="335.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_int (4 samples, 0.44%)</title><rect x="91.3187%" y="357" width="0.4396%" height="15" fill="rgb(217,80,15)" fg:x="831" fg:w="4"/><text x="91.5687%" y="367.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_sbit_long (1 samples, 0.11%)</title><rect x="91.6484%" y="341" width="0.1099%" height="15" fill="rgb(219,152,8)" fg:x="834" fg:w="1"/><text x="91.8984%" y="351.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (1 samples, 0.11%)</title><rect x="91.6484%" y="325" width="0.1099%" height="15" fill="rgb(243,107,38)" fg:x="834" fg:w="1"/><text x="91.8984%" y="335.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.11%)</title><rect x="91.6484%" y="309" width="0.1099%" height="15" fill="rgb(231,17,5)" fg:x="834" fg:w="1"/><text x="91.8984%" y="319.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_vec (4 samples, 0.44%)</title><rect x="91.7582%" y="357" width="0.4396%" height="15" fill="rgb(209,25,54)" fg:x="835" fg:w="4"/><text x="92.0082%" y="367.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_float (4 samples, 0.44%)</title><rect x="91.7582%" y="341" width="0.4396%" height="15" fill="rgb(219,0,2)" fg:x="835" fg:w="4"/><text x="92.0082%" y="351.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_special_float (4 samples, 0.44%)</title><rect x="91.7582%" y="325" width="0.4396%" height="15" fill="rgb(246,9,5)" fg:x="835" fg:w="4"/><text x="92.0082%" y="335.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_bit_coord (4 samples, 0.44%)</title><rect x="91.7582%" y="309" width="0.4396%" height="15" fill="rgb(226,159,4)" fg:x="835" fg:w="4"/><text x="92.0082%" y="319.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (2 samples, 0.22%)</title><rect x="91.9780%" y="293" width="0.2198%" height="15" fill="rgb(219,175,34)" fg:x="837" fg:w="2"/><text x="92.2280%" y="303.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (2 samples, 0.22%)</title><rect x="91.9780%" y="277" width="0.2198%" height="15" fill="rgb(236,10,46)" fg:x="837" fg:w="2"/><text x="92.2280%" y="287.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::peek (1 samples, 0.11%)</title><rect x="92.0879%" y="261" width="0.1099%" height="15" fill="rgb(240,211,16)" fg:x="838" fg:w="1"/><text x="92.3379%" y="271.50"></text></g><g><title>bitter::LittleEndianReader::peek_ (1 samples, 0.11%)</title><rect x="92.0879%" y="245" width="0.1099%" height="15" fill="rgb(205,3,43)" fg:x="838" fg:w="1"/><text x="92.3379%" y="255.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode (62 samples, 6.81%)</title><rect x="85.9341%" y="373" width="6.8132%" height="15" fill="rgb(245,7,22)" fg:x="782" fg:w="62"/><text x="86.1841%" y="383.50">demoparse..</text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_vec_xy (5 samples, 0.55%)</title><rect x="92.1978%" y="357" width="0.5495%" height="15" fill="rgb(239,132,32)" fg:x="839" fg:w="5"/><text x="92.4478%" y="367.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_float (4 samples, 0.44%)</title><rect x="92.3077%" y="341" width="0.4396%" height="15" fill="rgb(228,202,34)" fg:x="840" fg:w="4"/><text x="92.5577%" y="351.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_special_float (1 samples, 0.11%)</title><rect x="92.6374%" y="325" width="0.1099%" height="15" fill="rgb(254,200,22)" fg:x="843" fg:w="1"/><text x="92.8874%" y="335.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.11%)</title><rect x="92.7473%" y="277" width="0.1099%" height="15" fill="rgb(219,10,39)" fg:x="844" fg:w="1"/><text x="92.9973%" y="287.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities_cache_only::parse_ent_props_indicies (136 samples, 14.95%)</title><rect x="78.0220%" y="389" width="14.9451%" height="15" fill="rgb(226,210,39)" fg:x="710" fg:w="136"/><text x="78.2720%" y="399.50">demoparser::parsing::de..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.22%)</title><rect x="92.7473%" y="373" width="0.2198%" height="15" fill="rgb(208,219,16)" fg:x="844" fg:w="2"/><text x="92.9973%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.22%)</title><rect x="92.7473%" y="357" width="0.2198%" height="15" fill="rgb(216,158,51)" fg:x="844" fg:w="2"/><text x="92.9973%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.22%)</title><rect x="92.7473%" y="341" width="0.2198%" height="15" fill="rgb(233,14,44)" fg:x="844" fg:w="2"/><text x="92.9973%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.22%)</title><rect x="92.7473%" y="325" width="0.2198%" height="15" fill="rgb(237,97,39)" fg:x="844" fg:w="2"/><text x="92.9973%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.22%)</title><rect x="92.7473%" y="309" width="0.2198%" height="15" fill="rgb(218,198,43)" fg:x="844" fg:w="2"/><text x="92.9973%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.22%)</title><rect x="92.7473%" y="293" width="0.2198%" height="15" fill="rgb(231,104,20)" fg:x="844" fg:w="2"/><text x="92.9973%" y="303.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.11%)</title><rect x="92.8571%" y="277" width="0.1099%" height="15" fill="rgb(254,36,13)" fg:x="845" fg:w="1"/><text x="93.1071%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.11%)</title><rect x="92.8571%" y="261" width="0.1099%" height="15" fill="rgb(248,14,50)" fg:x="845" fg:w="1"/><text x="93.1071%" y="271.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities_cache_only::&lt;impl demoparser::parsing::parser::Parser&gt;::_parse_packet_entities_indicies (170 samples, 18.68%)</title><rect x="74.6154%" y="405" width="18.6813%" height="15" fill="rgb(217,107,29)" fg:x="679" fg:w="170"/><text x="74.8654%" y="415.50">demoparser::parsing::demo_par..</text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_u_bit_var (3 samples, 0.33%)</title><rect x="92.9670%" y="389" width="0.3297%" height="15" fill="rgb(251,169,33)" fg:x="846" fg:w="3"/><text x="93.2170%" y="399.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (2 samples, 0.22%)</title><rect x="93.0769%" y="373" width="0.2198%" height="15" fill="rgb(217,108,32)" fg:x="847" fg:w="2"/><text x="93.3269%" y="383.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.11%)</title><rect x="93.1868%" y="357" width="0.1099%" height="15" fill="rgb(219,66,42)" fg:x="848" fg:w="1"/><text x="93.4368%" y="367.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bool (1 samples, 0.11%)</title><rect x="93.2967%" y="357" width="0.1099%" height="15" fill="rgb(206,180,7)" fg:x="849" fg:w="1"/><text x="93.5467%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (1 samples, 0.11%)</title><rect x="93.4066%" y="293" width="0.1099%" height="15" fill="rgb(208,226,31)" fg:x="850" fg:w="1"/><text x="93.6566%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (1 samples, 0.11%)</title><rect x="93.4066%" y="277" width="0.1099%" height="15" fill="rgb(218,26,49)" fg:x="850" fg:w="1"/><text x="93.6566%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (1 samples, 0.11%)</title><rect x="93.4066%" y="261" width="0.1099%" height="15" fill="rgb(233,197,48)" fg:x="850" fg:w="1"/><text x="93.6566%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (1 samples, 0.11%)</title><rect x="93.4066%" y="245" width="0.1099%" height="15" fill="rgb(252,181,51)" fg:x="850" fg:w="1"/><text x="93.6566%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.11%)</title><rect x="93.4066%" y="229" width="0.1099%" height="15" fill="rgb(253,90,19)" fg:x="850" fg:w="1"/><text x="93.6566%" y="239.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="93.4066%" y="213" width="0.1099%" height="15" fill="rgb(215,171,30)" fg:x="850" fg:w="1"/><text x="93.6566%" y="223.50"></text></g><g><title>tcache_get (1 samples, 0.11%)</title><rect x="93.4066%" y="197" width="0.1099%" height="15" fill="rgb(214,222,9)" fg:x="850" fg:w="1"/><text x="93.6566%" y="207.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes (9 samples, 0.99%)</title><rect x="93.4066%" y="357" width="0.9890%" height="15" fill="rgb(223,3,22)" fg:x="850" fg:w="9"/><text x="93.6566%" y="367.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (9 samples, 0.99%)</title><rect x="93.4066%" y="341" width="0.9890%" height="15" fill="rgb(225,196,46)" fg:x="850" fg:w="9"/><text x="93.6566%" y="351.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (9 samples, 0.99%)</title><rect x="93.4066%" y="325" width="0.9890%" height="15" fill="rgb(209,110,37)" fg:x="850" fg:w="9"/><text x="93.6566%" y="335.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (9 samples, 0.99%)</title><rect x="93.4066%" y="309" width="0.9890%" height="15" fill="rgb(249,89,12)" fg:x="850" fg:w="9"/><text x="93.6566%" y="319.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact (8 samples, 0.88%)</title><rect x="93.5165%" y="293" width="0.8791%" height="15" fill="rgb(226,27,33)" fg:x="851" fg:w="8"/><text x="93.7665%" y="303.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::read_bytes (8 samples, 0.88%)</title><rect x="93.5165%" y="277" width="0.8791%" height="15" fill="rgb(213,82,22)" fg:x="851" fg:w="8"/><text x="93.7665%" y="287.50"></text></g><g><title>protobuf::misc::maybe_uninit_write_slice (8 samples, 0.88%)</title><rect x="93.5165%" y="261" width="0.8791%" height="15" fill="rgb(248,140,0)" fg:x="851" fg:w="8"/><text x="93.7665%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (8 samples, 0.88%)</title><rect x="93.5165%" y="245" width="0.8791%" height="15" fill="rgb(228,106,3)" fg:x="851" fg:w="8"/><text x="93.7665%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.88%)</title><rect x="93.5165%" y="229" width="0.8791%" height="15" fill="rgb(209,23,37)" fg:x="851" fg:w="8"/><text x="93.7665%" y="239.50"></text></g><g><title>[libc.so.6] (8 samples, 0.88%)</title><rect x="93.5165%" y="213" width="0.8791%" height="15" fill="rgb(241,93,50)" fg:x="851" fg:w="8"/><text x="93.7665%" y="223.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int32 (1 samples, 0.11%)</title><rect x="94.3956%" y="357" width="0.1099%" height="15" fill="rgb(253,46,43)" fg:x="859" fg:w="1"/><text x="94.6456%" y="367.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int64 (1 samples, 0.11%)</title><rect x="94.3956%" y="341" width="0.1099%" height="15" fill="rgb(226,206,43)" fg:x="859" fg:w="1"/><text x="94.6456%" y="351.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (1 samples, 0.11%)</title><rect x="94.3956%" y="325" width="0.1099%" height="15" fill="rgb(217,54,7)" fg:x="859" fg:w="1"/><text x="94.6456%" y="335.50"></text></g><g><title>protobuf::varint::decode::decode_varint64 (1 samples, 0.11%)</title><rect x="94.3956%" y="309" width="0.1099%" height="15" fill="rgb(223,5,52)" fg:x="859" fg:w="1"/><text x="94.6456%" y="319.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (1 samples, 0.11%)</title><rect x="94.3956%" y="293" width="0.1099%" height="15" fill="rgb(206,52,46)" fg:x="859" fg:w="1"/><text x="94.6456%" y="303.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_packet_entities (183 samples, 20.11%)</title><rect x="74.6154%" y="437" width="20.1099%" height="15" fill="rgb(253,136,11)" fg:x="679" fg:w="183"/><text x="74.8654%" y="447.50">demoparser::parsing::demo_parsin..</text></g><g><title>demoparser::parsing::demo_parsing::entities_cache_only::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_packet_entities_indicies (183 samples, 20.11%)</title><rect x="74.6154%" y="421" width="20.1099%" height="15" fill="rgb(208,106,33)" fg:x="679" fg:w="183"/><text x="74.8654%" y="431.50">demoparser::parsing::demo_parsin..</text></g><g><title>protobuf::message::Message::parse_from_bytes (13 samples, 1.43%)</title><rect x="93.2967%" y="405" width="1.4286%" height="15" fill="rgb(206,54,4)" fg:x="849" fg:w="13"/><text x="93.5467%" y="415.50"></text></g><g><title>protobuf::message::Message::parse_from (13 samples, 1.43%)</title><rect x="93.2967%" y="389" width="1.4286%" height="15" fill="rgb(213,3,15)" fg:x="849" fg:w="13"/><text x="93.5467%" y="399.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_PacketEntities as protobuf::message::Message&gt;::merge_from (13 samples, 1.43%)</title><rect x="93.2967%" y="373" width="1.4286%" height="15" fill="rgb(252,211,39)" fg:x="849" fg:w="13"/><text x="93.5467%" y="383.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (2 samples, 0.22%)</title><rect x="94.5055%" y="357" width="0.2198%" height="15" fill="rgb(223,6,36)" fg:x="860" fg:w="2"/><text x="94.7555%" y="367.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (2 samples, 0.22%)</title><rect x="94.5055%" y="341" width="0.2198%" height="15" fill="rgb(252,169,45)" fg:x="860" fg:w="2"/><text x="94.7555%" y="351.50"></text></g><g><title>protobuf::varint::decode::decode_varint32 (2 samples, 0.22%)</title><rect x="94.5055%" y="325" width="0.2198%" height="15" fill="rgb(212,48,26)" fg:x="860" fg:w="2"/><text x="94.7555%" y="335.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (2 samples, 0.22%)</title><rect x="94.5055%" y="309" width="0.2198%" height="15" fill="rgb(251,102,48)" fg:x="860" fg:w="2"/><text x="94.7555%" y="319.50"></text></g><g><title>&lt;u32 as protobuf::varint::decode::DecodeVarint&gt;::from_u64 (1 samples, 0.11%)</title><rect x="94.6154%" y="293" width="0.1099%" height="15" fill="rgb(243,208,16)" fg:x="861" fg:w="1"/><text x="94.8654%" y="303.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.11%)</title><rect x="94.7253%" y="357" width="0.1099%" height="15" fill="rgb(219,96,24)" fg:x="862" fg:w="1"/><text x="94.9753%" y="367.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::hash_one (1 samples, 0.11%)</title><rect x="94.7253%" y="341" width="0.1099%" height="15" fill="rgb(219,33,29)" fg:x="862" fg:w="1"/><text x="94.9753%" y="351.50"></text></g><g><title>ahash::random_state::RandomState::hash_one (1 samples, 0.11%)</title><rect x="94.7253%" y="325" width="0.1099%" height="15" fill="rgb(223,176,5)" fg:x="862" fg:w="1"/><text x="94.9753%" y="335.50"></text></g><g><title>&lt;T as ahash::specialize::CallHasher&gt;::get_hash (1 samples, 0.11%)</title><rect x="94.7253%" y="309" width="0.1099%" height="15" fill="rgb(228,140,14)" fg:x="862" fg:w="1"/><text x="94.9753%" y="319.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.11%)</title><rect x="94.7253%" y="293" width="0.1099%" height="15" fill="rgb(217,179,31)" fg:x="862" fg:w="1"/><text x="94.9753%" y="303.50"></text></g><g><title>ahash::operations::aesenc (1 samples, 0.11%)</title><rect x="94.7253%" y="277" width="0.1099%" height="15" fill="rgb(230,9,30)" fg:x="862" fg:w="1"/><text x="94.9753%" y="287.50"></text></g><g><title>core::core_arch::x86::aes::_mm_aesenc_si128 (1 samples, 0.11%)</title><rect x="94.7253%" y="261" width="0.1099%" height="15" fill="rgb(230,136,20)" fg:x="862" fg:w="1"/><text x="94.9753%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (2 samples, 0.22%)</title><rect x="94.7253%" y="421" width="0.2198%" height="15" fill="rgb(215,210,22)" fg:x="862" fg:w="2"/><text x="94.9753%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.22%)</title><rect x="94.7253%" y="405" width="0.2198%" height="15" fill="rgb(218,43,5)" fg:x="862" fg:w="2"/><text x="94.9753%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.22%)</title><rect x="94.7253%" y="389" width="0.2198%" height="15" fill="rgb(216,11,5)" fg:x="862" fg:w="2"/><text x="94.9753%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.22%)</title><rect x="94.7253%" y="373" width="0.2198%" height="15" fill="rgb(209,82,29)" fg:x="862" fg:w="2"/><text x="94.9753%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.11%)</title><rect x="94.8352%" y="357" width="0.1099%" height="15" fill="rgb(244,115,12)" fg:x="863" fg:w="1"/><text x="95.0852%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.11%)</title><rect x="94.8352%" y="341" width="0.1099%" height="15" fill="rgb(222,82,18)" fg:x="863" fg:w="1"/><text x="95.0852%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.11%)</title><rect x="94.8352%" y="325" width="0.1099%" height="15" fill="rgb(249,227,8)" fg:x="863" fg:w="1"/><text x="95.0852%" y="335.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.11%)</title><rect x="94.9451%" y="373" width="0.1099%" height="15" fill="rgb(253,141,45)" fg:x="864" fg:w="1"/><text x="95.1951%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.0549%" y="229" width="0.1099%" height="15" fill="rgb(234,184,4)" fg:x="865" fg:w="1"/><text x="95.3049%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.0549%" y="213" width="0.1099%" height="15" fill="rgb(218,194,23)" fg:x="865" fg:w="1"/><text x="95.3049%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.0549%" y="197" width="0.1099%" height="15" fill="rgb(235,66,41)" fg:x="865" fg:w="1"/><text x="95.3049%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.0549%" y="181" width="0.1099%" height="15" fill="rgb(245,217,1)" fg:x="865" fg:w="1"/><text x="95.3049%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.0549%" y="165" width="0.1099%" height="15" fill="rgb(229,91,1)" fg:x="865" fg:w="1"/><text x="95.3049%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.0549%" y="149" width="0.1099%" height="15" fill="rgb(207,101,30)" fg:x="865" fg:w="1"/><text x="95.3049%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.0549%" y="133" width="0.1099%" height="15" fill="rgb(223,82,49)" fg:x="865" fg:w="1"/><text x="95.3049%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.0549%" y="117" width="0.1099%" height="15" fill="rgb(218,167,17)" fg:x="865" fg:w="1"/><text x="95.3049%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.0549%" y="101" width="0.1099%" height="15" fill="rgb(208,103,14)" fg:x="865" fg:w="1"/><text x="95.3049%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.0549%" y="85" width="0.1099%" height="15" fill="rgb(238,20,8)" fg:x="865" fg:w="1"/><text x="95.3049%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.0549%" y="69" width="0.1099%" height="15" fill="rgb(218,80,54)" fg:x="865" fg:w="1"/><text x="95.3049%" y="79.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (7 samples, 0.77%)</title><rect x="95.0549%" y="357" width="0.7692%" height="15" fill="rgb(240,144,17)" fg:x="865" fg:w="7"/><text x="95.3049%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.77%)</title><rect x="95.0549%" y="341" width="0.7692%" height="15" fill="rgb(245,27,50)" fg:x="865" fg:w="7"/><text x="95.3049%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.77%)</title><rect x="95.0549%" y="325" width="0.7692%" height="15" fill="rgb(251,51,7)" fg:x="865" fg:w="7"/><text x="95.3049%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.77%)</title><rect x="95.0549%" y="309" width="0.7692%" height="15" fill="rgb(245,217,29)" fg:x="865" fg:w="7"/><text x="95.3049%" y="319.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.77%)</title><rect x="95.0549%" y="293" width="0.7692%" height="15" fill="rgb(221,176,29)" fg:x="865" fg:w="7"/><text x="95.3049%" y="303.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.77%)</title><rect x="95.0549%" y="277" width="0.7692%" height="15" fill="rgb(212,180,24)" fg:x="865" fg:w="7"/><text x="95.3049%" y="287.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.77%)</title><rect x="95.0549%" y="261" width="0.7692%" height="15" fill="rgb(254,24,2)" fg:x="865" fg:w="7"/><text x="95.3049%" y="271.50"></text></g><g><title>_int_realloc (7 samples, 0.77%)</title><rect x="95.0549%" y="245" width="0.7692%" height="15" fill="rgb(230,100,2)" fg:x="865" fg:w="7"/><text x="95.3049%" y="255.50"></text></g><g><title>_int_malloc (6 samples, 0.66%)</title><rect x="95.1648%" y="229" width="0.6593%" height="15" fill="rgb(219,142,25)" fg:x="866" fg:w="6"/><text x="95.4148%" y="239.50"></text></g><g><title>[unknown] (5 samples, 0.55%)</title><rect x="95.2747%" y="213" width="0.5495%" height="15" fill="rgb(240,73,43)" fg:x="867" fg:w="5"/><text x="95.5247%" y="223.50"></text></g><g><title>[unknown] (5 samples, 0.55%)</title><rect x="95.2747%" y="197" width="0.5495%" height="15" fill="rgb(214,114,15)" fg:x="867" fg:w="5"/><text x="95.5247%" y="207.50"></text></g><g><title>[unknown] (5 samples, 0.55%)</title><rect x="95.2747%" y="181" width="0.5495%" height="15" fill="rgb(207,130,4)" fg:x="867" fg:w="5"/><text x="95.5247%" y="191.50"></text></g><g><title>[unknown] (5 samples, 0.55%)</title><rect x="95.2747%" y="165" width="0.5495%" height="15" fill="rgb(221,25,40)" fg:x="867" fg:w="5"/><text x="95.5247%" y="175.50"></text></g><g><title>[unknown] (5 samples, 0.55%)</title><rect x="95.2747%" y="149" width="0.5495%" height="15" fill="rgb(241,184,7)" fg:x="867" fg:w="5"/><text x="95.5247%" y="159.50"></text></g><g><title>[unknown] (4 samples, 0.44%)</title><rect x="95.3846%" y="133" width="0.4396%" height="15" fill="rgb(235,159,4)" fg:x="868" fg:w="4"/><text x="95.6346%" y="143.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="95.4945%" y="117" width="0.3297%" height="15" fill="rgb(214,87,48)" fg:x="869" fg:w="3"/><text x="95.7445%" y="127.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="95.4945%" y="101" width="0.3297%" height="15" fill="rgb(246,198,24)" fg:x="869" fg:w="3"/><text x="95.7445%" y="111.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="95.4945%" y="85" width="0.3297%" height="15" fill="rgb(209,66,40)" fg:x="869" fg:w="3"/><text x="95.7445%" y="95.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="95.4945%" y="69" width="0.3297%" height="15" fill="rgb(233,147,39)" fg:x="869" fg:w="3"/><text x="95.7445%" y="79.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="95.4945%" y="53" width="0.3297%" height="15" fill="rgb(231,145,52)" fg:x="869" fg:w="3"/><text x="95.7445%" y="63.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="95.4945%" y="37" width="0.3297%" height="15" fill="rgb(206,20,26)" fg:x="869" fg:w="3"/><text x="95.7445%" y="47.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.88%)</title><rect x="95.0549%" y="373" width="0.8791%" height="15" fill="rgb(238,220,4)" fg:x="865" fg:w="8"/><text x="95.3049%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.11%)</title><rect x="95.8242%" y="357" width="0.1099%" height="15" fill="rgb(252,195,42)" fg:x="872" fg:w="1"/><text x="96.0742%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.11%)</title><rect x="95.8242%" y="341" width="0.1099%" height="15" fill="rgb(209,10,6)" fg:x="872" fg:w="1"/><text x="96.0742%" y="351.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_game_event::Key_t as protobuf::message::Message&gt;::merge_from (3 samples, 0.33%)</title><rect x="96.0440%" y="341" width="0.3297%" height="15" fill="rgb(229,3,52)" fg:x="874" fg:w="3"/><text x="96.2940%" y="351.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string (1 samples, 0.11%)</title><rect x="96.2637%" y="325" width="0.1099%" height="15" fill="rgb(253,49,37)" fg:x="876" fg:w="1"/><text x="96.5137%" y="335.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string_into (1 samples, 0.11%)</title><rect x="96.2637%" y="309" width="0.1099%" height="15" fill="rgb(240,103,49)" fg:x="876" fg:w="1"/><text x="96.5137%" y="319.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (1 samples, 0.11%)</title><rect x="96.2637%" y="293" width="0.1099%" height="15" fill="rgb(250,182,30)" fg:x="876" fg:w="1"/><text x="96.5137%" y="303.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32 (1 samples, 0.11%)</title><rect x="96.2637%" y="277" width="0.1099%" height="15" fill="rgb(248,8,30)" fg:x="876" fg:w="1"/><text x="96.5137%" y="287.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::consume (1 samples, 0.11%)</title><rect x="96.4835%" y="325" width="0.1099%" height="15" fill="rgb(237,120,30)" fg:x="878" fg:w="1"/><text x="96.7335%" y="335.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::consume (1 samples, 0.11%)</title><rect x="96.4835%" y="309" width="0.1099%" height="15" fill="rgb(221,146,34)" fg:x="878" fg:w="1"/><text x="96.7335%" y="319.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_message (7 samples, 0.77%)</title><rect x="95.9341%" y="373" width="0.7692%" height="15" fill="rgb(242,55,13)" fg:x="873" fg:w="7"/><text x="96.1841%" y="383.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::merge_message (7 samples, 0.77%)</title><rect x="95.9341%" y="357" width="0.7692%" height="15" fill="rgb(242,112,31)" fg:x="873" fg:w="7"/><text x="96.1841%" y="367.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (3 samples, 0.33%)</title><rect x="96.3736%" y="341" width="0.3297%" height="15" fill="rgb(249,192,27)" fg:x="877" fg:w="3"/><text x="96.6236%" y="351.50"></text></g><g><title>protobuf::varint::decode::decode_varint64 (1 samples, 0.11%)</title><rect x="96.5934%" y="325" width="0.1099%" height="15" fill="rgb(208,204,44)" fg:x="879" fg:w="1"/><text x="96.8434%" y="335.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (1 samples, 0.11%)</title><rect x="96.5934%" y="309" width="0.1099%" height="15" fill="rgb(208,93,54)" fg:x="879" fg:w="1"/><text x="96.8434%" y="319.50"></text></g><g><title>demoparser::parsing::demo_parsing::game_events::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_game_events (19 samples, 2.09%)</title><rect x="94.7253%" y="437" width="2.0879%" height="15" fill="rgb(242,1,31)" fg:x="862" fg:w="19"/><text x="94.9753%" y="447.50">d..</text></g><g><title>protobuf::message::Message::parse_from_bytes (17 samples, 1.87%)</title><rect x="94.9451%" y="421" width="1.8681%" height="15" fill="rgb(241,83,25)" fg:x="864" fg:w="17"/><text x="95.1951%" y="431.50">p..</text></g><g><title>protobuf::message::Message::parse_from (17 samples, 1.87%)</title><rect x="94.9451%" y="405" width="1.8681%" height="15" fill="rgb(205,169,50)" fg:x="864" fg:w="17"/><text x="95.1951%" y="415.50">p..</text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_GameEvent as protobuf::message::Message&gt;::merge_from (17 samples, 1.87%)</title><rect x="94.9451%" y="389" width="1.8681%" height="15" fill="rgb(239,186,37)" fg:x="864" fg:w="17"/><text x="95.1951%" y="399.50">&lt;..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (1 samples, 0.11%)</title><rect x="96.7033%" y="373" width="0.1099%" height="15" fill="rgb(205,221,10)" fg:x="880" fg:w="1"/><text x="96.9533%" y="383.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (1 samples, 0.11%)</title><rect x="96.7033%" y="357" width="0.1099%" height="15" fill="rgb(218,196,15)" fg:x="880" fg:w="1"/><text x="96.9533%" y="367.50"></text></g><g><title>protobuf::varint::decode::decode_varint32 (1 samples, 0.11%)</title><rect x="96.7033%" y="341" width="0.1099%" height="15" fill="rgb(218,196,35)" fg:x="880" fg:w="1"/><text x="96.9533%" y="351.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (1 samples, 0.11%)</title><rect x="96.7033%" y="325" width="0.1099%" height="15" fill="rgb(233,63,24)" fg:x="880" fg:w="1"/><text x="96.9533%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;csgoproto::netmessages::CSVCMsg_PacketEntities&gt; (2 samples, 0.22%)</title><rect x="96.8132%" y="421" width="0.2198%" height="15" fill="rgb(225,8,4)" fg:x="881" fg:w="2"/><text x="97.0632%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (2 samples, 0.22%)</title><rect x="96.8132%" y="405" width="0.2198%" height="15" fill="rgb(234,105,35)" fg:x="881" fg:w="2"/><text x="97.0632%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.22%)</title><rect x="96.8132%" y="389" width="0.2198%" height="15" fill="rgb(236,21,32)" fg:x="881" fg:w="2"/><text x="97.0632%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.22%)</title><rect x="96.8132%" y="373" width="0.2198%" height="15" fill="rgb(228,109,6)" fg:x="881" fg:w="2"/><text x="97.0632%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.22%)</title><rect x="96.8132%" y="357" width="0.2198%" height="15" fill="rgb(229,215,31)" fg:x="881" fg:w="2"/><text x="97.0632%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.22%)</title><rect x="96.8132%" y="341" width="0.2198%" height="15" fill="rgb(221,52,54)" fg:x="881" fg:w="2"/><text x="97.0632%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.22%)</title><rect x="96.8132%" y="325" width="0.2198%" height="15" fill="rgb(252,129,43)" fg:x="881" fg:w="2"/><text x="97.0632%" y="335.50"></text></g><g><title>__GI___libc_free (2 samples, 0.22%)</title><rect x="96.8132%" y="309" width="0.2198%" height="15" fill="rgb(248,183,27)" fg:x="881" fg:w="2"/><text x="97.0632%" y="319.50"></text></g><g><title>_int_free (2 samples, 0.22%)</title><rect x="96.8132%" y="293" width="0.2198%" height="15" fill="rgb(250,0,22)" fg:x="881" fg:w="2"/><text x="97.0632%" y="303.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.11%)</title><rect x="97.0330%" y="421" width="0.1099%" height="15" fill="rgb(213,166,10)" fg:x="883" fg:w="1"/><text x="97.2830%" y="431.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes (3 samples, 0.33%)</title><rect x="97.5824%" y="373" width="0.3297%" height="15" fill="rgb(207,163,36)" fg:x="888" fg:w="3"/><text x="97.8324%" y="383.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (3 samples, 0.33%)</title><rect x="97.5824%" y="357" width="0.3297%" height="15" fill="rgb(208,122,22)" fg:x="888" fg:w="3"/><text x="97.8324%" y="367.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (2 samples, 0.22%)</title><rect x="97.6923%" y="341" width="0.2198%" height="15" fill="rgb(207,104,49)" fg:x="889" fg:w="2"/><text x="97.9423%" y="351.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (2 samples, 0.22%)</title><rect x="97.6923%" y="325" width="0.2198%" height="15" fill="rgb(248,211,50)" fg:x="889" fg:w="2"/><text x="97.9423%" y="335.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact (2 samples, 0.22%)</title><rect x="97.6923%" y="309" width="0.2198%" height="15" fill="rgb(217,13,45)" fg:x="889" fg:w="2"/><text x="97.9423%" y="319.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::read_bytes (2 samples, 0.22%)</title><rect x="97.6923%" y="293" width="0.2198%" height="15" fill="rgb(211,216,49)" fg:x="889" fg:w="2"/><text x="97.9423%" y="303.50"></text></g><g><title>protobuf::misc::maybe_uninit_write_slice (2 samples, 0.22%)</title><rect x="97.6923%" y="277" width="0.2198%" height="15" fill="rgb(221,58,53)" fg:x="889" fg:w="2"/><text x="97.9423%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (2 samples, 0.22%)</title><rect x="97.6923%" y="261" width="0.2198%" height="15" fill="rgb(220,112,41)" fg:x="889" fg:w="2"/><text x="97.9423%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.22%)</title><rect x="97.6923%" y="245" width="0.2198%" height="15" fill="rgb(236,38,28)" fg:x="889" fg:w="2"/><text x="97.9423%" y="255.50"></text></g><g><title>[libc.so.6] (2 samples, 0.22%)</title><rect x="97.6923%" y="229" width="0.2198%" height="15" fill="rgb(227,195,22)" fg:x="889" fg:w="2"/><text x="97.9423%" y="239.50"></text></g><g><title>demoparser::parsing::create_output::create_output::&lt;impl demoparser::parsing::parser::Parser&gt;::compute_jobs_no_cache (213 samples, 23.41%)</title><rect x="74.6154%" y="645" width="23.4066%" height="15" fill="rgb(214,55,33)" fg:x="679" fg:w="213"/><text x="74.8654%" y="655.50">demoparser::parsing::create_output::c..</text></g><g><title>demoparser::parsing::parser::Parser::parse_blueprints (213 samples, 23.41%)</title><rect x="74.6154%" y="629" width="23.4066%" height="15" fill="rgb(248,80,13)" fg:x="679" fg:w="213"/><text x="74.8654%" y="639.50">demoparser::parsing::parser::Parser::..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (213 samples, 23.41%)</title><rect x="74.6154%" y="613" width="23.4066%" height="15" fill="rgb(238,52,6)" fg:x="679" fg:w="213"/><text x="74.8654%" y="623.50">core::iter::traits::iterator::Iterato..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (213 samples, 23.41%)</title><rect x="74.6154%" y="597" width="23.4066%" height="15" fill="rgb(224,198,47)" fg:x="679" fg:w="213"/><text x="74.8654%" y="607.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::tr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (213 samples, 23.41%)</title><rect x="74.6154%" y="581" width="23.4066%" height="15" fill="rgb(233,171,20)" fg:x="679" fg:w="213"/><text x="74.8654%" y="591.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::sp..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (213 samples, 23.41%)</title><rect x="74.6154%" y="565" width="23.4066%" height="15" fill="rgb(241,30,25)" fg:x="679" fg:w="213"/><text x="74.8654%" y="575.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::sp..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (213 samples, 23.41%)</title><rect x="74.6154%" y="549" width="23.4066%" height="15" fill="rgb(207,171,38)" fg:x="679" fg:w="213"/><text x="74.8654%" y="559.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (213 samples, 23.41%)</title><rect x="74.6154%" y="533" width="23.4066%" height="15" fill="rgb(234,70,1)" fg:x="679" fg:w="213"/><text x="74.8654%" y="543.50">core::iter::traits::iterator::Iterato..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (213 samples, 23.41%)</title><rect x="74.6154%" y="517" width="23.4066%" height="15" fill="rgb(232,178,18)" fg:x="679" fg:w="213"/><text x="74.8654%" y="527.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; ..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (213 samples, 23.41%)</title><rect x="74.6154%" y="501" width="23.4066%" height="15" fill="rgb(241,78,40)" fg:x="679" fg:w="213"/><text x="74.8654%" y="511.50">core::iter::traits::iterator::Iterato..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (213 samples, 23.41%)</title><rect x="74.6154%" y="485" width="23.4066%" height="15" fill="rgb(222,35,25)" fg:x="679" fg:w="213"/><text x="74.8654%" y="495.50">core::iter::adapters::map::map_fold::..</text></g><g><title>demoparser::parsing::parser::Parser::parse_blueprints::{{closure}} (213 samples, 23.41%)</title><rect x="74.6154%" y="469" width="23.4066%" height="15" fill="rgb(207,92,16)" fg:x="679" fg:w="213"/><text x="74.8654%" y="479.50">demoparser::parsing::parser::Parser::..</text></g><g><title>demoparser::parsing::parser::Parser::msg_handler (213 samples, 23.41%)</title><rect x="74.6154%" y="453" width="23.4066%" height="15" fill="rgb(216,59,51)" fg:x="679" fg:w="213"/><text x="74.8654%" y="463.50">demoparser::parsing::parser::Parser::..</text></g><g><title>demoparser::parsing::demo_parsing::stringtables::&lt;impl demoparser::parsing::parser::Parser&gt;::update_string_table_msg (11 samples, 1.21%)</title><rect x="96.8132%" y="437" width="1.2088%" height="15" fill="rgb(213,80,28)" fg:x="881" fg:w="11"/><text x="97.0632%" y="447.50"></text></g><g><title>protobuf::message::Message::parse_from_bytes (8 samples, 0.88%)</title><rect x="97.1429%" y="421" width="0.8791%" height="15" fill="rgb(220,93,7)" fg:x="884" fg:w="8"/><text x="97.3929%" y="431.50"></text></g><g><title>protobuf::message::Message::parse_from (6 samples, 0.66%)</title><rect x="97.3626%" y="405" width="0.6593%" height="15" fill="rgb(225,24,44)" fg:x="886" fg:w="6"/><text x="97.6126%" y="415.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_EntityMsg as protobuf::message::Message&gt;::merge_from (4 samples, 0.44%)</title><rect x="97.5824%" y="389" width="0.4396%" height="15" fill="rgb(243,74,40)" fg:x="888" fg:w="4"/><text x="97.8324%" y="399.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (1 samples, 0.11%)</title><rect x="97.9121%" y="373" width="0.1099%" height="15" fill="rgb(228,39,7)" fg:x="891" fg:w="1"/><text x="98.1621%" y="383.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (1 samples, 0.11%)</title><rect x="97.9121%" y="357" width="0.1099%" height="15" fill="rgb(227,79,8)" fg:x="891" fg:w="1"/><text x="98.1621%" y="367.50"></text></g><g><title>protobuf::varint::decode::decode_varint32 (1 samples, 0.11%)</title><rect x="97.9121%" y="341" width="0.1099%" height="15" fill="rgb(236,58,11)" fg:x="891" fg:w="1"/><text x="98.1621%" y="351.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (1 samples, 0.11%)</title><rect x="97.9121%" y="325" width="0.1099%" height="15" fill="rgb(249,63,35)" fg:x="891" fg:w="1"/><text x="98.1621%" y="335.50"></text></g><g><title>&lt;u32 as protobuf::varint::decode::DecodeVarint&gt;::from_u64 (1 samples, 0.11%)</title><rect x="97.9121%" y="309" width="0.1099%" height="15" fill="rgb(252,114,16)" fg:x="891" fg:w="1"/><text x="98.1621%" y="319.50"></text></g><g><title>demoparser::parsing::create_output::game_events::&lt;impl demoparser::parsing::parser::Parser&gt;::series_from_events (1 samples, 0.11%)</title><rect x="98.0220%" y="613" width="0.1099%" height="15" fill="rgb(254,151,24)" fg:x="892" fg:w="1"/><text x="98.2720%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::demo_parsing::game_events::NameDataPair&gt;&gt; (1 samples, 0.11%)</title><rect x="98.0220%" y="597" width="0.1099%" height="15" fill="rgb(253,54,39)" fg:x="892" fg:w="1"/><text x="98.2720%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;demoparser::parsing::demo_parsing::game_events::NameDataPair&gt;&gt; (1 samples, 0.11%)</title><rect x="98.0220%" y="581" width="0.1099%" height="15" fill="rgb(243,25,45)" fg:x="892" fg:w="1"/><text x="98.2720%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="98.0220%" y="565" width="0.1099%" height="15" fill="rgb(234,134,9)" fg:x="892" fg:w="1"/><text x="98.2720%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.11%)</title><rect x="98.0220%" y="549" width="0.1099%" height="15" fill="rgb(227,166,31)" fg:x="892" fg:w="1"/><text x="98.2720%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.11%)</title><rect x="98.0220%" y="533" width="0.1099%" height="15" fill="rgb(245,143,41)" fg:x="892" fg:w="1"/><text x="98.2720%" y="543.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="98.0220%" y="517" width="0.1099%" height="15" fill="rgb(238,181,32)" fg:x="892" fg:w="1"/><text x="98.2720%" y="527.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="98.0220%" y="501" width="0.1099%" height="15" fill="rgb(224,113,18)" fg:x="892" fg:w="1"/><text x="98.2720%" y="511.50"></text></g><g><title>malloc_consolidate (1 samples, 0.11%)</title><rect x="98.0220%" y="485" width="0.1099%" height="15" fill="rgb(240,229,28)" fg:x="892" fg:w="1"/><text x="98.2720%" y="495.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_packet_entities (1 samples, 0.11%)</title><rect x="98.1319%" y="421" width="0.1099%" height="15" fill="rgb(250,185,3)" fg:x="893" fg:w="1"/><text x="98.3819%" y="431.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::_parse_packet_entities (1 samples, 0.11%)</title><rect x="98.1319%" y="405" width="0.1099%" height="15" fill="rgb(212,59,25)" fg:x="893" fg:w="1"/><text x="98.3819%" y="415.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::parse_ent_props (1 samples, 0.11%)</title><rect x="98.1319%" y="389" width="0.1099%" height="15" fill="rgb(221,87,20)" fg:x="893" fg:w="1"/><text x="98.3819%" y="399.50"></text></g><g><title>demoparser::parsing::create_output::game_events::&lt;impl demoparser::parsing::parser::Parser&gt;::get_game_events (3 samples, 0.33%)</title><rect x="98.0220%" y="629" width="0.3297%" height="15" fill="rgb(213,74,28)" fg:x="892" fg:w="3"/><text x="98.2720%" y="639.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_blueprints (2 samples, 0.22%)</title><rect x="98.1319%" y="613" width="0.2198%" height="15" fill="rgb(224,132,34)" fg:x="893" fg:w="2"/><text x="98.3819%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.22%)</title><rect x="98.1319%" y="597" width="0.2198%" height="15" fill="rgb(222,101,24)" fg:x="893" fg:w="2"/><text x="98.3819%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.22%)</title><rect x="98.1319%" y="581" width="0.2198%" height="15" fill="rgb(254,142,4)" fg:x="893" fg:w="2"/><text x="98.3819%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.22%)</title><rect x="98.1319%" y="565" width="0.2198%" height="15" fill="rgb(230,229,49)" fg:x="893" fg:w="2"/><text x="98.3819%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.22%)</title><rect x="98.1319%" y="549" width="0.2198%" height="15" fill="rgb(238,70,47)" fg:x="893" fg:w="2"/><text x="98.3819%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.22%)</title><rect x="98.1319%" y="533" width="0.2198%" height="15" fill="rgb(231,160,17)" fg:x="893" fg:w="2"/><text x="98.3819%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.22%)</title><rect x="98.1319%" y="517" width="0.2198%" height="15" fill="rgb(218,68,53)" fg:x="893" fg:w="2"/><text x="98.3819%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.22%)</title><rect x="98.1319%" y="501" width="0.2198%" height="15" fill="rgb(236,111,10)" fg:x="893" fg:w="2"/><text x="98.3819%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.22%)</title><rect x="98.1319%" y="485" width="0.2198%" height="15" fill="rgb(224,34,41)" fg:x="893" fg:w="2"/><text x="98.3819%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.22%)</title><rect x="98.1319%" y="469" width="0.2198%" height="15" fill="rgb(241,118,19)" fg:x="893" fg:w="2"/><text x="98.3819%" y="479.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_blueprints::{{closure}} (2 samples, 0.22%)</title><rect x="98.1319%" y="453" width="0.2198%" height="15" fill="rgb(238,129,25)" fg:x="893" fg:w="2"/><text x="98.3819%" y="463.50"></text></g><g><title>demoparser::parsing::parser::Parser::msg_handler (2 samples, 0.22%)</title><rect x="98.1319%" y="437" width="0.2198%" height="15" fill="rgb(238,22,31)" fg:x="893" fg:w="2"/><text x="98.3819%" y="447.50"></text></g><g><title>demoparser::parsing::demo_parsing::game_events::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_game_events (1 samples, 0.11%)</title><rect x="98.2418%" y="421" width="0.1099%" height="15" fill="rgb(222,174,48)" fg:x="894" fg:w="1"/><text x="98.4918%" y="431.50"></text></g><g><title>demoparser::parsing::demo_parsing::game_events::gen_name_val_pairs (1 samples, 0.11%)</title><rect x="98.2418%" y="405" width="0.1099%" height="15" fill="rgb(206,152,40)" fg:x="894" fg:w="1"/><text x="98.4918%" y="415.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.11%)</title><rect x="98.2418%" y="389" width="0.1099%" height="15" fill="rgb(218,99,54)" fg:x="894" fg:w="1"/><text x="98.4918%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.11%)</title><rect x="98.2418%" y="373" width="0.1099%" height="15" fill="rgb(220,174,26)" fg:x="894" fg:w="1"/><text x="98.4918%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="98.2418%" y="357" width="0.1099%" height="15" fill="rgb(245,116,9)" fg:x="894" fg:w="1"/><text x="98.4918%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.11%)</title><rect x="98.2418%" y="341" width="0.1099%" height="15" fill="rgb(209,72,35)" fg:x="894" fg:w="1"/><text x="98.4918%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="98.2418%" y="325" width="0.1099%" height="15" fill="rgb(226,126,21)" fg:x="894" fg:w="1"/><text x="98.4918%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.11%)</title><rect x="98.2418%" y="309" width="0.1099%" height="15" fill="rgb(227,192,1)" fg:x="894" fg:w="1"/><text x="98.4918%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="98.2418%" y="293" width="0.1099%" height="15" fill="rgb(237,180,29)" fg:x="894" fg:w="1"/><text x="98.4918%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="98.2418%" y="277" width="0.1099%" height="15" fill="rgb(230,197,35)" fg:x="894" fg:w="1"/><text x="98.4918%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="98.2418%" y="261" width="0.1099%" height="15" fill="rgb(246,193,31)" fg:x="894" fg:w="1"/><text x="98.4918%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="98.2418%" y="245" width="0.1099%" height="15" fill="rgb(241,36,4)" fg:x="894" fg:w="1"/><text x="98.4918%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="98.2418%" y="229" width="0.1099%" height="15" fill="rgb(241,130,17)" fg:x="894" fg:w="1"/><text x="98.4918%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="98.2418%" y="213" width="0.1099%" height="15" fill="rgb(206,137,32)" fg:x="894" fg:w="1"/><text x="98.4918%" y="223.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="98.2418%" y="197" width="0.1099%" height="15" fill="rgb(237,228,51)" fg:x="894" fg:w="1"/><text x="98.4918%" y="207.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="98.2418%" y="181" width="0.1099%" height="15" fill="rgb(243,6,42)" fg:x="894" fg:w="1"/><text x="98.4918%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.22%)</title><rect x="98.3516%" y="613" width="0.2198%" height="15" fill="rgb(251,74,28)" fg:x="895" fg:w="2"/><text x="98.6016%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.22%)</title><rect x="98.3516%" y="597" width="0.2198%" height="15" fill="rgb(218,20,49)" fg:x="895" fg:w="2"/><text x="98.6016%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.22%)</title><rect x="98.3516%" y="581" width="0.2198%" height="15" fill="rgb(238,28,14)" fg:x="895" fg:w="2"/><text x="98.6016%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.22%)</title><rect x="98.3516%" y="565" width="0.2198%" height="15" fill="rgb(229,40,46)" fg:x="895" fg:w="2"/><text x="98.6016%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.22%)</title><rect x="98.3516%" y="549" width="0.2198%" height="15" fill="rgb(244,195,20)" fg:x="895" fg:w="2"/><text x="98.6016%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.22%)</title><rect x="98.3516%" y="533" width="0.2198%" height="15" fill="rgb(253,56,35)" fg:x="895" fg:w="2"/><text x="98.6016%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.22%)</title><rect x="98.3516%" y="517" width="0.2198%" height="15" fill="rgb(210,149,44)" fg:x="895" fg:w="2"/><text x="98.6016%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.22%)</title><rect x="98.3516%" y="501" width="0.2198%" height="15" fill="rgb(240,135,12)" fg:x="895" fg:w="2"/><text x="98.6016%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.22%)</title><rect x="98.3516%" y="485" width="0.2198%" height="15" fill="rgb(251,24,50)" fg:x="895" fg:w="2"/><text x="98.6016%" y="495.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_blueprints::{{closure}} (2 samples, 0.22%)</title><rect x="98.3516%" y="469" width="0.2198%" height="15" fill="rgb(243,200,47)" fg:x="895" fg:w="2"/><text x="98.6016%" y="479.50"></text></g><g><title>demoparser::parsing::parser::Parser::msg_handler (2 samples, 0.22%)</title><rect x="98.3516%" y="453" width="0.2198%" height="15" fill="rgb(224,166,26)" fg:x="895" fg:w="2"/><text x="98.6016%" y="463.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_packet_entities (2 samples, 0.22%)</title><rect x="98.3516%" y="437" width="0.2198%" height="15" fill="rgb(233,0,47)" fg:x="895" fg:w="2"/><text x="98.6016%" y="447.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::_parse_packet_entities (2 samples, 0.22%)</title><rect x="98.3516%" y="421" width="0.2198%" height="15" fill="rgb(253,80,5)" fg:x="895" fg:w="2"/><text x="98.6016%" y="431.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::parse_ent_props (2 samples, 0.22%)</title><rect x="98.3516%" y="405" width="0.2198%" height="15" fill="rgb(214,133,25)" fg:x="895" fg:w="2"/><text x="98.6016%" y="415.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::parse_indicies (2 samples, 0.22%)</title><rect x="98.3516%" y="389" width="0.2198%" height="15" fill="rgb(209,27,14)" fg:x="895" fg:w="2"/><text x="98.6016%" y="399.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_inx (2 samples, 0.22%)</title><rect x="98.3516%" y="373" width="0.2198%" height="15" fill="rgb(219,102,51)" fg:x="895" fg:w="2"/><text x="98.6016%" y="383.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_boolie (1 samples, 0.11%)</title><rect x="98.4615%" y="357" width="0.1099%" height="15" fill="rgb(237,18,16)" fg:x="896" fg:w="1"/><text x="98.7115%" y="367.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bit (1 samples, 0.11%)</title><rect x="98.4615%" y="341" width="0.1099%" height="15" fill="rgb(241,85,17)" fg:x="896" fg:w="1"/><text x="98.7115%" y="351.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.11%)</title><rect x="98.4615%" y="325" width="0.1099%" height="15" fill="rgb(236,90,42)" fg:x="896" fg:w="1"/><text x="98.7115%" y="335.50"></text></g><g><title>demoparser::parsing::create_output::create_output::&lt;impl demoparser::parsing::parser::Parser&gt;::compute_jobs_with_cache (6 samples, 0.66%)</title><rect x="98.0220%" y="645" width="0.6593%" height="15" fill="rgb(249,57,21)" fg:x="892" fg:w="6"/><text x="98.2720%" y="655.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_blueprints (3 samples, 0.33%)</title><rect x="98.3516%" y="629" width="0.3297%" height="15" fill="rgb(243,12,36)" fg:x="895" fg:w="3"/><text x="98.6016%" y="639.50"></text></g><g><title>demoparser::parsing::demo_parsing::game_events::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_game_event_map (1 samples, 0.11%)</title><rect x="98.5714%" y="613" width="0.1099%" height="15" fill="rgb(253,128,47)" fg:x="897" fg:w="1"/><text x="98.8214%" y="623.50"></text></g><g><title>protobuf::message::Message::parse_from_bytes (1 samples, 0.11%)</title><rect x="98.5714%" y="597" width="0.1099%" height="15" fill="rgb(207,33,20)" fg:x="897" fg:w="1"/><text x="98.8214%" y="607.50"></text></g><g><title>protobuf::message::Message::parse_from (1 samples, 0.11%)</title><rect x="98.5714%" y="581" width="0.1099%" height="15" fill="rgb(233,215,35)" fg:x="897" fg:w="1"/><text x="98.8214%" y="591.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_GameEventList as protobuf::message::Message&gt;::merge_from (1 samples, 0.11%)</title><rect x="98.5714%" y="565" width="0.1099%" height="15" fill="rgb(249,188,52)" fg:x="897" fg:w="1"/><text x="98.8214%" y="575.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.11%)</title><rect x="98.5714%" y="549" width="0.1099%" height="15" fill="rgb(225,12,32)" fg:x="897" fg:w="1"/><text x="98.8214%" y="559.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bytes::ByteReader::read_frame (1 samples, 0.11%)</title><rect x="98.6813%" y="629" width="0.1099%" height="15" fill="rgb(247,98,14)" fg:x="898" fg:w="1"/><text x="98.9313%" y="639.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bytes::ByteReader::read_byte (1 samples, 0.11%)</title><rect x="98.6813%" y="613" width="0.1099%" height="15" fill="rgb(247,219,48)" fg:x="898" fg:w="1"/><text x="98.9313%" y="623.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_SendTable as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="98.7912%" y="597" width="0.1099%" height="15" fill="rgb(253,60,48)" fg:x="899" fg:w="1"/><text x="99.0412%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="98.7912%" y="581" width="0.1099%" height="15" fill="rgb(245,15,52)" fg:x="899" fg:w="1"/><text x="99.0412%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.11%)</title><rect x="98.7912%" y="565" width="0.1099%" height="15" fill="rgb(220,133,28)" fg:x="899" fg:w="1"/><text x="99.0412%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="98.7912%" y="549" width="0.1099%" height="15" fill="rgb(217,180,4)" fg:x="899" fg:w="1"/><text x="99.0412%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.11%)</title><rect x="98.7912%" y="533" width="0.1099%" height="15" fill="rgb(251,24,1)" fg:x="899" fg:w="1"/><text x="99.0412%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="98.7912%" y="517" width="0.1099%" height="15" fill="rgb(212,185,49)" fg:x="899" fg:w="1"/><text x="99.0412%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="98.7912%" y="501" width="0.1099%" height="15" fill="rgb(215,175,22)" fg:x="899" fg:w="1"/><text x="99.0412%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="98.7912%" y="485" width="0.1099%" height="15" fill="rgb(250,205,14)" fg:x="899" fg:w="1"/><text x="99.0412%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="98.7912%" y="469" width="0.1099%" height="15" fill="rgb(225,211,22)" fg:x="899" fg:w="1"/><text x="99.0412%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="98.7912%" y="453" width="0.1099%" height="15" fill="rgb(251,179,42)" fg:x="899" fg:w="1"/><text x="99.0412%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="98.7912%" y="437" width="0.1099%" height="15" fill="rgb(208,216,51)" fg:x="899" fg:w="1"/><text x="99.0412%" y="447.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="98.7912%" y="421" width="0.1099%" height="15" fill="rgb(235,36,11)" fg:x="899" fg:w="1"/><text x="99.0412%" y="431.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="98.7912%" y="405" width="0.1099%" height="15" fill="rgb(213,189,28)" fg:x="899" fg:w="1"/><text x="99.0412%" y="415.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_excl_props (1 samples, 0.11%)</title><rect x="98.9011%" y="581" width="0.1099%" height="15" fill="rgb(227,203,42)" fg:x="900" fg:w="1"/><text x="99.1511%" y="591.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_SendTable as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="98.9011%" y="565" width="0.1099%" height="15" fill="rgb(244,72,36)" fg:x="900" fg:w="1"/><text x="99.1511%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="98.9011%" y="549" width="0.1099%" height="15" fill="rgb(213,53,17)" fg:x="900" fg:w="1"/><text x="99.1511%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.11%)</title><rect x="98.9011%" y="533" width="0.1099%" height="15" fill="rgb(207,167,3)" fg:x="900" fg:w="1"/><text x="99.1511%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="98.9011%" y="517" width="0.1099%" height="15" fill="rgb(216,98,30)" fg:x="900" fg:w="1"/><text x="99.1511%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.11%)</title><rect x="98.9011%" y="501" width="0.1099%" height="15" fill="rgb(236,123,15)" fg:x="900" fg:w="1"/><text x="99.1511%" y="511.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_send_table::Sendprop_t as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="98.9011%" y="485" width="0.1099%" height="15" fill="rgb(248,81,50)" fg:x="900" fg:w="1"/><text x="99.1511%" y="495.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="98.9011%" y="469" width="0.1099%" height="15" fill="rgb(214,120,4)" fg:x="900" fg:w="1"/><text x="99.1511%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="98.9011%" y="453" width="0.1099%" height="15" fill="rgb(208,179,34)" fg:x="900" fg:w="1"/><text x="99.1511%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="98.9011%" y="437" width="0.1099%" height="15" fill="rgb(227,140,7)" fg:x="900" fg:w="1"/><text x="99.1511%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.11%)</title><rect x="98.9011%" y="421" width="0.1099%" height="15" fill="rgb(214,22,6)" fg:x="900" fg:w="1"/><text x="99.1511%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="98.9011%" y="405" width="0.1099%" height="15" fill="rgb(207,137,27)" fg:x="900" fg:w="1"/><text x="99.1511%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.11%)</title><rect x="98.9011%" y="389" width="0.1099%" height="15" fill="rgb(210,8,46)" fg:x="900" fg:w="1"/><text x="99.1511%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="98.9011%" y="373" width="0.1099%" height="15" fill="rgb(240,16,54)" fg:x="900" fg:w="1"/><text x="99.1511%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="98.9011%" y="357" width="0.1099%" height="15" fill="rgb(211,209,29)" fg:x="900" fg:w="1"/><text x="99.1511%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="98.9011%" y="341" width="0.1099%" height="15" fill="rgb(226,228,24)" fg:x="900" fg:w="1"/><text x="99.1511%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="98.9011%" y="325" width="0.1099%" height="15" fill="rgb(222,84,9)" fg:x="900" fg:w="1"/><text x="99.1511%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="98.9011%" y="309" width="0.1099%" height="15" fill="rgb(234,203,30)" fg:x="900" fg:w="1"/><text x="99.1511%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="98.9011%" y="293" width="0.1099%" height="15" fill="rgb(238,109,14)" fg:x="900" fg:w="1"/><text x="99.1511%" y="303.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="98.9011%" y="277" width="0.1099%" height="15" fill="rgb(233,206,34)" fg:x="900" fg:w="1"/><text x="99.1511%" y="287.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="98.9011%" y="261" width="0.1099%" height="15" fill="rgb(220,167,47)" fg:x="900" fg:w="1"/><text x="99.1511%" y="271.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::flatten_dt (2 samples, 0.22%)</title><rect x="98.9011%" y="597" width="0.2198%" height="15" fill="rgb(238,105,10)" fg:x="900" fg:w="2"/><text x="99.1511%" y="607.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.11%)</title><rect x="99.0110%" y="581" width="0.1099%" height="15" fill="rgb(213,227,17)" fg:x="901" fg:w="1"/><text x="99.2610%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.11%)</title><rect x="99.0110%" y="565" width="0.1099%" height="15" fill="rgb(217,132,38)" fg:x="901" fg:w="1"/><text x="99.2610%" y="575.50"></text></g><g><title>alloc::slice::merge_sort (1 samples, 0.11%)</title><rect x="99.0110%" y="549" width="0.1099%" height="15" fill="rgb(242,146,4)" fg:x="901" fg:w="1"/><text x="99.2610%" y="559.50"></text></g><g><title>alloc::slice::merge (1 samples, 0.11%)</title><rect x="99.0110%" y="533" width="0.1099%" height="15" fill="rgb(212,61,9)" fg:x="901" fg:w="1"/><text x="99.2610%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="99.0110%" y="517" width="0.1099%" height="15" fill="rgb(247,126,22)" fg:x="901" fg:w="1"/><text x="99.2610%" y="527.50"></text></g><g><title>[libc.so.6] (1 samples, 0.11%)</title><rect x="99.0110%" y="501" width="0.1099%" height="15" fill="rgb(220,196,2)" fg:x="901" fg:w="1"/><text x="99.2610%" y="511.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_datatable (4 samples, 0.44%)</title><rect x="98.7912%" y="613" width="0.4396%" height="15" fill="rgb(208,46,4)" fg:x="899" fg:w="4"/><text x="99.0412%" y="623.50"></text></g><g><title>protobuf::message::Message::parse_from_bytes (1 samples, 0.11%)</title><rect x="99.1209%" y="597" width="0.1099%" height="15" fill="rgb(252,104,46)" fg:x="902" fg:w="1"/><text x="99.3709%" y="607.50"></text></g><g><title>protobuf::message::Message::parse_from (1 samples, 0.11%)</title><rect x="99.1209%" y="581" width="0.1099%" height="15" fill="rgb(237,152,48)" fg:x="902" fg:w="1"/><text x="99.3709%" y="591.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_SendTable as protobuf::message::Message&gt;::merge_from (1 samples, 0.11%)</title><rect x="99.1209%" y="565" width="0.1099%" height="15" fill="rgb(221,59,37)" fg:x="902" fg:w="1"/><text x="99.3709%" y="575.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_message (1 samples, 0.11%)</title><rect x="99.1209%" y="549" width="0.1099%" height="15" fill="rgb(209,202,51)" fg:x="902" fg:w="1"/><text x="99.3709%" y="559.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::merge_message (1 samples, 0.11%)</title><rect x="99.1209%" y="533" width="0.1099%" height="15" fill="rgb(228,81,30)" fg:x="902" fg:w="1"/><text x="99.3709%" y="543.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_send_table::Sendprop_t as protobuf::message::Message&gt;::merge_from (1 samples, 0.11%)</title><rect x="99.1209%" y="517" width="0.1099%" height="15" fill="rgb(227,42,39)" fg:x="902" fg:w="1"/><text x="99.3709%" y="527.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string (1 samples, 0.11%)</title><rect x="99.1209%" y="501" width="0.1099%" height="15" fill="rgb(221,26,2)" fg:x="902" fg:w="1"/><text x="99.3709%" y="511.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string_into (1 samples, 0.11%)</title><rect x="99.1209%" y="485" width="0.1099%" height="15" fill="rgb(254,61,31)" fg:x="902" fg:w="1"/><text x="99.3709%" y="495.50"></text></g><g><title>core::mem::replace (1 samples, 0.11%)</title><rect x="99.1209%" y="469" width="0.1099%" height="15" fill="rgb(222,173,38)" fg:x="902" fg:w="1"/><text x="99.3709%" y="479.50"></text></g><g><title>core::ptr::read (1 samples, 0.11%)</title><rect x="99.1209%" y="453" width="0.1099%" height="15" fill="rgb(218,50,12)" fg:x="902" fg:w="1"/><text x="99.3709%" y="463.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.11%)</title><rect x="99.1209%" y="437" width="0.1099%" height="15" fill="rgb(223,88,40)" fg:x="902" fg:w="1"/><text x="99.3709%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.11%)</title><rect x="99.2308%" y="597" width="0.1099%" height="15" fill="rgb(237,54,19)" fg:x="903" fg:w="1"/><text x="99.4808%" y="607.50"></text></g><g><title>core::ptr::write (1 samples, 0.11%)</title><rect x="99.2308%" y="581" width="0.1099%" height="15" fill="rgb(251,129,25)" fg:x="903" fg:w="1"/><text x="99.4808%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.2308%" y="565" width="0.1099%" height="15" fill="rgb(238,97,19)" fg:x="903" fg:w="1"/><text x="99.4808%" y="575.50"></text></g><g><title>demoparser (905 samples, 99.45%)</title><rect x="0.0000%" y="1333" width="99.4505%" height="15" fill="rgb(240,169,18)" fg:x="0" fg:w="905"/><text x="0.2500%" y="1343.50">demoparser</text></g><g><title>_start (669 samples, 73.52%)</title><rect x="25.9341%" y="1317" width="73.5165%" height="15" fill="rgb(230,187,49)" fg:x="236" fg:w="669"/><text x="26.1841%" y="1327.50">_start</text></g><g><title>__libc_start_main_impl (669 samples, 73.52%)</title><rect x="25.9341%" y="1301" width="73.5165%" height="15" fill="rgb(209,44,26)" fg:x="236" fg:w="669"/><text x="26.1841%" y="1311.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (669 samples, 73.52%)</title><rect x="25.9341%" y="1285" width="73.5165%" height="15" fill="rgb(244,0,6)" fg:x="236" fg:w="669"/><text x="26.1841%" y="1295.50">__libc_start_call_main</text></g><g><title>main (669 samples, 73.52%)</title><rect x="25.9341%" y="1269" width="73.5165%" height="15" fill="rgb(248,18,21)" fg:x="236" fg:w="669"/><text x="26.1841%" y="1279.50">main</text></g><g><title>std::rt::lang_start_internal (669 samples, 73.52%)</title><rect x="25.9341%" y="1253" width="73.5165%" height="15" fill="rgb(245,180,19)" fg:x="236" fg:w="669"/><text x="26.1841%" y="1263.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (669 samples, 73.52%)</title><rect x="25.9341%" y="1237" width="73.5165%" height="15" fill="rgb(252,118,36)" fg:x="236" fg:w="669"/><text x="26.1841%" y="1247.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (669 samples, 73.52%)</title><rect x="25.9341%" y="1221" width="73.5165%" height="15" fill="rgb(210,224,19)" fg:x="236" fg:w="669"/><text x="26.1841%" y="1231.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (669 samples, 73.52%)</title><rect x="25.9341%" y="1205" width="73.5165%" height="15" fill="rgb(218,30,24)" fg:x="236" fg:w="669"/><text x="26.1841%" y="1215.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (669 samples, 73.52%)</title><rect x="25.9341%" y="1189" width="73.5165%" height="15" fill="rgb(219,75,50)" fg:x="236" fg:w="669"/><text x="26.1841%" y="1199.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (669 samples, 73.52%)</title><rect x="25.9341%" y="1173" width="73.5165%" height="15" fill="rgb(234,72,50)" fg:x="236" fg:w="669"/><text x="26.1841%" y="1183.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (669 samples, 73.52%)</title><rect x="25.9341%" y="1157" width="73.5165%" height="15" fill="rgb(219,100,48)" fg:x="236" fg:w="669"/><text x="26.1841%" y="1167.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (669 samples, 73.52%)</title><rect x="25.9341%" y="1141" width="73.5165%" height="15" fill="rgb(253,5,41)" fg:x="236" fg:w="669"/><text x="26.1841%" y="1151.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (669 samples, 73.52%)</title><rect x="25.9341%" y="1125" width="73.5165%" height="15" fill="rgb(247,181,11)" fg:x="236" fg:w="669"/><text x="26.1841%" y="1135.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (669 samples, 73.52%)</title><rect x="25.9341%" y="1109" width="73.5165%" height="15" fill="rgb(222,223,25)" fg:x="236" fg:w="669"/><text x="26.1841%" y="1119.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (669 samples, 73.52%)</title><rect x="25.9341%" y="1093" width="73.5165%" height="15" fill="rgb(214,198,28)" fg:x="236" fg:w="669"/><text x="26.1841%" y="1103.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (669 samples, 73.52%)</title><rect x="25.9341%" y="1077" width="73.5165%" height="15" fill="rgb(230,46,43)" fg:x="236" fg:w="669"/><text x="26.1841%" y="1087.50">core::ops::function::FnOnce::call_once</text></g><g><title>demoparser::main (669 samples, 73.52%)</title><rect x="25.9341%" y="1061" width="73.5165%" height="15" fill="rgb(233,65,53)" fg:x="236" fg:w="669"/><text x="26.1841%" y="1071.50">demoparser::main</text></g><g><title>rayon::iter::ParallelIterator::collect (668 samples, 73.41%)</title><rect x="26.0440%" y="1045" width="73.4066%" height="15" fill="rgb(221,121,27)" fg:x="237" fg:w="668"/><text x="26.2940%" y="1055.50">rayon::iter::ParallelIterator::collect</text></g><g><title>rayon::iter::from_par_iter::&lt;impl rayon::iter::FromParallelIterator&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_par_iter (668 samples, 73.41%)</title><rect x="26.0440%" y="1029" width="73.4066%" height="15" fill="rgb(247,70,47)" fg:x="237" fg:w="668"/><text x="26.2940%" y="1039.50">rayon::iter::from_par_iter::&lt;impl rayon::iter::FromParallelIterator&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_par_iter</text></g><g><title>rayon::iter::from_par_iter::collect_extended (668 samples, 73.41%)</title><rect x="26.0440%" y="1013" width="73.4066%" height="15" fill="rgb(228,85,35)" fg:x="237" fg:w="668"/><text x="26.2940%" y="1023.50">rayon::iter::from_par_iter::collect_extended</text></g><g><title>rayon::iter::extend::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend (668 samples, 73.41%)</title><rect x="26.0440%" y="997" width="73.4066%" height="15" fill="rgb(209,50,18)" fg:x="237" fg:w="668"/><text x="26.2940%" y="1007.50">rayon::iter::extend::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend</text></g><g><title>rayon::iter::collect::special_extend (668 samples, 73.41%)</title><rect x="26.0440%" y="981" width="73.4066%" height="15" fill="rgb(250,19,35)" fg:x="237" fg:w="668"/><text x="26.2940%" y="991.50">rayon::iter::collect::special_extend</text></g><g><title>rayon::iter::collect::collect_with_consumer (668 samples, 73.41%)</title><rect x="26.0440%" y="965" width="73.4066%" height="15" fill="rgb(253,107,29)" fg:x="237" fg:w="668"/><text x="26.2940%" y="975.50">rayon::iter::collect::collect_with_consumer</text></g><g><title>rayon::iter::collect::special_extend::{{closure}} (668 samples, 73.41%)</title><rect x="26.0440%" y="949" width="73.4066%" height="15" fill="rgb(252,179,29)" fg:x="237" fg:w="668"/><text x="26.2940%" y="959.50">rayon::iter::collect::special_extend::{{closure}}</text></g><g><title>&lt;rayon::iter::map::Map&lt;I,F&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (668 samples, 73.41%)</title><rect x="26.0440%" y="933" width="73.4066%" height="15" fill="rgb(238,194,6)" fg:x="237" fg:w="668"/><text x="26.2940%" y="943.50">&lt;rayon::iter::map::Map&lt;I,F&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed</text></g><g><title>&lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (668 samples, 73.41%)</title><rect x="26.0440%" y="917" width="73.4066%" height="15" fill="rgb(238,164,29)" fg:x="237" fg:w="668"/><text x="26.2940%" y="927.50">&lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed</text></g><g><title>rayon::iter::plumbing::bridge (668 samples, 73.41%)</title><rect x="26.0440%" y="901" width="73.4066%" height="15" fill="rgb(224,25,9)" fg:x="237" fg:w="668"/><text x="26.2940%" y="911.50">rayon::iter::plumbing::bridge</text></g><g><title>&lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (668 samples, 73.41%)</title><rect x="26.0440%" y="885" width="73.4066%" height="15" fill="rgb(244,153,23)" fg:x="237" fg:w="668"/><text x="26.2940%" y="895.50">&lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer</text></g><g><title>&lt;rayon::vec::Drain&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (668 samples, 73.41%)</title><rect x="26.0440%" y="869" width="73.4066%" height="15" fill="rgb(212,203,14)" fg:x="237" fg:w="668"/><text x="26.2940%" y="879.50">&lt;rayon::vec::Drain&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer</text></g><g><title>&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (668 samples, 73.41%)</title><rect x="26.0440%" y="853" width="73.4066%" height="15" fill="rgb(220,164,20)" fg:x="237" fg:w="668"/><text x="26.2940%" y="863.50">&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (668 samples, 73.41%)</title><rect x="26.0440%" y="837" width="73.4066%" height="15" fill="rgb(222,203,48)" fg:x="237" fg:w="668"/><text x="26.2940%" y="847.50">rayon::iter::plumbing::bridge_producer_consumer</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (668 samples, 73.41%)</title><rect x="26.0440%" y="821" width="73.4066%" height="15" fill="rgb(215,159,22)" fg:x="237" fg:w="668"/><text x="26.2940%" y="831.50">rayon::iter::plumbing::bridge_producer_consumer::helper</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (668 samples, 73.41%)</title><rect x="26.0440%" y="805" width="73.4066%" height="15" fill="rgb(216,183,47)" fg:x="237" fg:w="668"/><text x="26.2940%" y="815.50">rayon::iter::plumbing::Producer::fold_with</text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (668 samples, 73.41%)</title><rect x="26.0440%" y="789" width="73.4066%" height="15" fill="rgb(229,195,25)" fg:x="237" fg:w="668"/><text x="26.2940%" y="799.50">&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (668 samples, 73.41%)</title><rect x="26.0440%" y="773" width="73.4066%" height="15" fill="rgb(224,132,51)" fg:x="237" fg:w="668"/><text x="26.2940%" y="783.50">rayon::iter::plumbing::Folder::consume_iter</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (668 samples, 73.41%)</title><rect x="26.0440%" y="757" width="73.4066%" height="15" fill="rgb(240,63,7)" fg:x="237" fg:w="668"/><text x="26.2940%" y="767.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next</text></g><g><title>core::option::Option&lt;T&gt;::map (668 samples, 73.41%)</title><rect x="26.0440%" y="741" width="73.4066%" height="15" fill="rgb(249,182,41)" fg:x="237" fg:w="668"/><text x="26.2940%" y="751.50">core::option::Option&lt;T&gt;::map</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (668 samples, 73.41%)</title><rect x="26.0440%" y="725" width="73.4066%" height="15" fill="rgb(243,47,26)" fg:x="237" fg:w="668"/><text x="26.2940%" y="735.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (668 samples, 73.41%)</title><rect x="26.0440%" y="709" width="73.4066%" height="15" fill="rgb(233,48,2)" fg:x="237" fg:w="668"/><text x="26.2940%" y="719.50">core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut</text></g><g><title>demoparser::main::{{closure}} (668 samples, 73.41%)</title><rect x="26.0440%" y="693" width="73.4066%" height="15" fill="rgb(244,165,34)" fg:x="237" fg:w="668"/><text x="26.2940%" y="703.50">demoparser::main::{{closure}}</text></g><g><title>demoparser::parse_demo (668 samples, 73.41%)</title><rect x="26.0440%" y="677" width="73.4066%" height="15" fill="rgb(207,89,7)" fg:x="237" fg:w="668"/><text x="26.2940%" y="687.50">demoparser::parse_demo</text></g><g><title>demoparser::parsing::parser::Parser::start_parsing (666 samples, 73.19%)</title><rect x="26.2637%" y="661" width="73.1868%" height="15" fill="rgb(244,117,36)" fg:x="239" fg:w="666"/><text x="26.5137%" y="671.50">demoparser::parsing::parser::Parser::start_parsing</text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (7 samples, 0.77%)</title><rect x="98.6813%" y="645" width="0.7692%" height="15" fill="rgb(226,144,34)" fg:x="898" fg:w="7"/><text x="98.9313%" y="655.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_cmd (6 samples, 0.66%)</title><rect x="98.7912%" y="629" width="0.6593%" height="15" fill="rgb(213,23,19)" fg:x="899" fg:w="6"/><text x="99.0412%" y="639.50"></text></g><g><title>demoparser::parsing::parser::Parser::messages_from_packet (2 samples, 0.22%)</title><rect x="99.2308%" y="613" width="0.2198%" height="15" fill="rgb(217,75,12)" fg:x="903" fg:w="2"/><text x="99.4808%" y="623.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bytes::ByteReader::read_varint (1 samples, 0.11%)</title><rect x="99.3407%" y="597" width="0.1099%" height="15" fill="rgb(224,159,17)" fg:x="904" fg:w="1"/><text x="99.5907%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3407%" y="581" width="0.1099%" height="15" fill="rgb(217,118,1)" fg:x="904" fg:w="1"/><text x="99.5907%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3407%" y="565" width="0.1099%" height="15" fill="rgb(232,180,48)" fg:x="904" fg:w="1"/><text x="99.5907%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3407%" y="549" width="0.1099%" height="15" fill="rgb(230,27,33)" fg:x="904" fg:w="1"/><text x="99.5907%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3407%" y="533" width="0.1099%" height="15" fill="rgb(205,31,21)" fg:x="904" fg:w="1"/><text x="99.5907%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3407%" y="517" width="0.1099%" height="15" fill="rgb(253,59,4)" fg:x="904" fg:w="1"/><text x="99.5907%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3407%" y="501" width="0.1099%" height="15" fill="rgb(224,201,9)" fg:x="904" fg:w="1"/><text x="99.5907%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3407%" y="485" width="0.1099%" height="15" fill="rgb(229,206,30)" fg:x="904" fg:w="1"/><text x="99.5907%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.3407%" y="469" width="0.1099%" height="15" fill="rgb(212,67,47)" fg:x="904" fg:w="1"/><text x="99.5907%" y="479.50"></text></g><g><title>all (910 samples, 100%)</title><rect x="0.0000%" y="1349" width="100.0000%" height="15" fill="rgb(211,96,50)" fg:x="0" fg:w="910"/><text x="0.2500%" y="1359.50"></text></g><g><title>perf-exec (5 samples, 0.55%)</title><rect x="99.4505%" y="1333" width="0.5495%" height="15" fill="rgb(252,114,18)" fg:x="905" fg:w="5"/><text x="99.7005%" y="1343.50"></text></g><g><title>[unknown] (5 samples, 0.55%)</title><rect x="99.4505%" y="1317" width="0.5495%" height="15" fill="rgb(223,58,37)" fg:x="905" fg:w="5"/><text x="99.7005%" y="1327.50"></text></g><g><title>[unknown] (5 samples, 0.55%)</title><rect x="99.4505%" y="1301" width="0.5495%" height="15" fill="rgb(237,70,4)" fg:x="905" fg:w="5"/><text x="99.7005%" y="1311.50"></text></g><g><title>[unknown] (5 samples, 0.55%)</title><rect x="99.4505%" y="1285" width="0.5495%" height="15" fill="rgb(244,85,46)" fg:x="905" fg:w="5"/><text x="99.7005%" y="1295.50"></text></g><g><title>[unknown] (5 samples, 0.55%)</title><rect x="99.4505%" y="1269" width="0.5495%" height="15" fill="rgb(223,39,52)" fg:x="905" fg:w="5"/><text x="99.7005%" y="1279.50"></text></g><g><title>[unknown] (5 samples, 0.55%)</title><rect x="99.4505%" y="1253" width="0.5495%" height="15" fill="rgb(218,200,14)" fg:x="905" fg:w="5"/><text x="99.7005%" y="1263.50"></text></g><g><title>[unknown] (5 samples, 0.55%)</title><rect x="99.4505%" y="1237" width="0.5495%" height="15" fill="rgb(208,171,16)" fg:x="905" fg:w="5"/><text x="99.7005%" y="1247.50"></text></g><g><title>[unknown] (5 samples, 0.55%)</title><rect x="99.4505%" y="1221" width="0.5495%" height="15" fill="rgb(234,200,18)" fg:x="905" fg:w="5"/><text x="99.7005%" y="1231.50"></text></g><g><title>[unknown] (5 samples, 0.55%)</title><rect x="99.4505%" y="1205" width="0.5495%" height="15" fill="rgb(228,45,11)" fg:x="905" fg:w="5"/><text x="99.7005%" y="1215.50"></text></g><g><title>[unknown] (5 samples, 0.55%)</title><rect x="99.4505%" y="1189" width="0.5495%" height="15" fill="rgb(237,182,11)" fg:x="905" fg:w="5"/><text x="99.7005%" y="1199.50"></text></g><g><title>[unknown] (5 samples, 0.55%)</title><rect x="99.4505%" y="1173" width="0.5495%" height="15" fill="rgb(241,175,49)" fg:x="905" fg:w="5"/><text x="99.7005%" y="1183.50"></text></g></svg></svg>