<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1110" onload="init(evt)" viewBox="0 0 1200 1110" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1110" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1093.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1093.00"> </text><svg id="frames" x="10" width="1180" total_samples="387"><g><title>[unknown] (61 samples, 15.76%)</title><rect x="0.0000%" y="1029" width="15.7623%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="61"/><text x="0.2500%" y="1039.50">[unknown]</text></g><g><title>[unknown] (51 samples, 13.18%)</title><rect x="2.5840%" y="1013" width="13.1783%" height="15" fill="rgb(217,0,24)" fg:x="10" fg:w="51"/><text x="2.8340%" y="1023.50">[unknown]</text></g><g><title>[unknown] (51 samples, 13.18%)</title><rect x="2.5840%" y="997" width="13.1783%" height="15" fill="rgb(221,193,54)" fg:x="10" fg:w="51"/><text x="2.8340%" y="1007.50">[unknown]</text></g><g><title>[unknown] (51 samples, 13.18%)</title><rect x="2.5840%" y="981" width="13.1783%" height="15" fill="rgb(248,212,6)" fg:x="10" fg:w="51"/><text x="2.8340%" y="991.50">[unknown]</text></g><g><title>[unknown] (38 samples, 9.82%)</title><rect x="5.9432%" y="965" width="9.8191%" height="15" fill="rgb(208,68,35)" fg:x="23" fg:w="38"/><text x="6.1932%" y="975.50">[unknown]</text></g><g><title>[unknown] (25 samples, 6.46%)</title><rect x="9.3023%" y="949" width="6.4599%" height="15" fill="rgb(232,128,0)" fg:x="36" fg:w="25"/><text x="9.5523%" y="959.50">[unknown]</text></g><g><title>[unknown] (23 samples, 5.94%)</title><rect x="9.8191%" y="933" width="5.9432%" height="15" fill="rgb(207,160,47)" fg:x="38" fg:w="23"/><text x="10.0691%" y="943.50">[unknown]</text></g><g><title>[unknown] (21 samples, 5.43%)</title><rect x="10.3359%" y="917" width="5.4264%" height="15" fill="rgb(228,23,34)" fg:x="40" fg:w="21"/><text x="10.5859%" y="927.50">[unknow..</text></g><g><title>[unknown] (21 samples, 5.43%)</title><rect x="10.3359%" y="901" width="5.4264%" height="15" fill="rgb(218,30,26)" fg:x="40" fg:w="21"/><text x="10.5859%" y="911.50">[unknow..</text></g><g><title>[unknown] (19 samples, 4.91%)</title><rect x="10.8527%" y="885" width="4.9096%" height="15" fill="rgb(220,122,19)" fg:x="42" fg:w="19"/><text x="11.1027%" y="895.50">[unkno..</text></g><g><title>[unknown] (17 samples, 4.39%)</title><rect x="11.3695%" y="869" width="4.3928%" height="15" fill="rgb(250,228,42)" fg:x="44" fg:w="17"/><text x="11.6195%" y="879.50">[unkn..</text></g><g><title>[unknown] (14 samples, 3.62%)</title><rect x="12.1447%" y="853" width="3.6176%" height="15" fill="rgb(240,193,28)" fg:x="47" fg:w="14"/><text x="12.3947%" y="863.50">[unk..</text></g><g><title>[unknown] (12 samples, 3.10%)</title><rect x="12.6615%" y="837" width="3.1008%" height="15" fill="rgb(216,20,37)" fg:x="49" fg:w="12"/><text x="12.9115%" y="847.50">[un..</text></g><g><title>[unknown] (7 samples, 1.81%)</title><rect x="13.9535%" y="821" width="1.8088%" height="15" fill="rgb(206,188,39)" fg:x="54" fg:w="7"/><text x="14.2035%" y="831.50">[..</text></g><g><title>[unknown] (5 samples, 1.29%)</title><rect x="14.4703%" y="805" width="1.2920%" height="15" fill="rgb(217,207,13)" fg:x="56" fg:w="5"/><text x="14.7203%" y="815.50"></text></g><g><title>[unknown] (4 samples, 1.03%)</title><rect x="14.7287%" y="789" width="1.0336%" height="15" fill="rgb(231,73,38)" fg:x="57" fg:w="4"/><text x="14.9787%" y="799.50"></text></g><g><title>[unknown] (3 samples, 0.78%)</title><rect x="14.9871%" y="773" width="0.7752%" height="15" fill="rgb(225,20,46)" fg:x="58" fg:w="3"/><text x="15.2371%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="15.5039%" y="757" width="0.2584%" height="15" fill="rgb(210,31,41)" fg:x="60" fg:w="1"/><text x="15.7539%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="15.5039%" y="741" width="0.2584%" height="15" fill="rgb(221,200,47)" fg:x="60" fg:w="1"/><text x="15.7539%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="15.5039%" y="725" width="0.2584%" height="15" fill="rgb(226,26,5)" fg:x="60" fg:w="1"/><text x="15.7539%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="15.5039%" y="709" width="0.2584%" height="15" fill="rgb(249,33,26)" fg:x="60" fg:w="1"/><text x="15.7539%" y="719.50"></text></g><g><title>[unknown] (2 samples, 0.52%)</title><rect x="15.7623%" y="1013" width="0.5168%" height="15" fill="rgb(235,183,28)" fg:x="61" fg:w="2"/><text x="16.0123%" y="1023.50"></text></g><g><title>[unknown] (2 samples, 0.52%)</title><rect x="15.7623%" y="997" width="0.5168%" height="15" fill="rgb(221,5,38)" fg:x="61" fg:w="2"/><text x="16.0123%" y="1007.50"></text></g><g><title>[unknown] (2 samples, 0.52%)</title><rect x="15.7623%" y="981" width="0.5168%" height="15" fill="rgb(247,18,42)" fg:x="61" fg:w="2"/><text x="16.0123%" y="991.50"></text></g><g><title>[unknown] (2 samples, 0.52%)</title><rect x="15.7623%" y="965" width="0.5168%" height="15" fill="rgb(241,131,45)" fg:x="61" fg:w="2"/><text x="16.0123%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="16.0207%" y="949" width="0.2584%" height="15" fill="rgb(249,31,29)" fg:x="62" fg:w="1"/><text x="16.2707%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="16.0207%" y="933" width="0.2584%" height="15" fill="rgb(225,111,53)" fg:x="62" fg:w="1"/><text x="16.2707%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="16.2791%" y="997" width="0.2584%" height="15" fill="rgb(238,160,17)" fg:x="63" fg:w="1"/><text x="16.5291%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="16.2791%" y="981" width="0.2584%" height="15" fill="rgb(214,148,48)" fg:x="63" fg:w="1"/><text x="16.5291%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="16.2791%" y="965" width="0.2584%" height="15" fill="rgb(232,36,49)" fg:x="63" fg:w="1"/><text x="16.5291%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="16.2791%" y="949" width="0.2584%" height="15" fill="rgb(209,103,24)" fg:x="63" fg:w="1"/><text x="16.5291%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="16.2791%" y="933" width="0.2584%" height="15" fill="rgb(229,88,8)" fg:x="63" fg:w="1"/><text x="16.5291%" y="943.50"></text></g><g><title>_mi_arena_alloc_aligned (1 samples, 0.26%)</title><rect x="16.5375%" y="485" width="0.2584%" height="15" fill="rgb(213,181,19)" fg:x="64" fg:w="1"/><text x="16.7875%" y="495.50"></text></g><g><title>_mi_os_alloc_aligned (1 samples, 0.26%)</title><rect x="16.5375%" y="469" width="0.2584%" height="15" fill="rgb(254,191,54)" fg:x="64" fg:w="1"/><text x="16.7875%" y="479.50"></text></g><g><title>mi_os_mem_alloc_aligned (1 samples, 0.26%)</title><rect x="16.5375%" y="453" width="0.2584%" height="15" fill="rgb(241,83,37)" fg:x="64" fg:w="1"/><text x="16.7875%" y="463.50"></text></g><g><title>mi_os_mem_alloc (1 samples, 0.26%)</title><rect x="16.5375%" y="437" width="0.2584%" height="15" fill="rgb(233,36,39)" fg:x="64" fg:w="1"/><text x="16.7875%" y="447.50"></text></g><g><title>mi_unix_mmap (1 samples, 0.26%)</title><rect x="16.5375%" y="421" width="0.2584%" height="15" fill="rgb(226,3,54)" fg:x="64" fg:w="1"/><text x="16.7875%" y="431.50"></text></g><g><title>mi_unix_mmapx (1 samples, 0.26%)</title><rect x="16.5375%" y="405" width="0.2584%" height="15" fill="rgb(245,192,40)" fg:x="64" fg:w="1"/><text x="16.7875%" y="415.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.26%)</title><rect x="16.5375%" y="389" width="0.2584%" height="15" fill="rgb(238,167,29)" fg:x="64" fg:w="1"/><text x="16.7875%" y="399.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.26%)</title><rect x="16.5375%" y="373" width="0.2584%" height="15" fill="rgb(232,182,51)" fg:x="64" fg:w="1"/><text x="16.7875%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="16.5375%" y="357" width="0.2584%" height="15" fill="rgb(231,60,39)" fg:x="64" fg:w="1"/><text x="16.7875%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="16.5375%" y="341" width="0.2584%" height="15" fill="rgb(208,69,12)" fg:x="64" fg:w="1"/><text x="16.7875%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="16.5375%" y="325" width="0.2584%" height="15" fill="rgb(235,93,37)" fg:x="64" fg:w="1"/><text x="16.7875%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="16.5375%" y="309" width="0.2584%" height="15" fill="rgb(213,116,39)" fg:x="64" fg:w="1"/><text x="16.7875%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="16.5375%" y="293" width="0.2584%" height="15" fill="rgb(222,207,29)" fg:x="64" fg:w="1"/><text x="16.7875%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="16.5375%" y="277" width="0.2584%" height="15" fill="rgb(206,96,30)" fg:x="64" fg:w="1"/><text x="16.7875%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="16.5375%" y="261" width="0.2584%" height="15" fill="rgb(218,138,4)" fg:x="64" fg:w="1"/><text x="16.7875%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="16.5375%" y="245" width="0.2584%" height="15" fill="rgb(250,191,14)" fg:x="64" fg:w="1"/><text x="16.7875%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="16.5375%" y="229" width="0.2584%" height="15" fill="rgb(239,60,40)" fg:x="64" fg:w="1"/><text x="16.7875%" y="239.50"></text></g><g><title>memset (13 samples, 3.36%)</title><rect x="16.7959%" y="485" width="3.3592%" height="15" fill="rgb(206,27,48)" fg:x="65" fg:w="13"/><text x="17.0459%" y="495.50">mem..</text></g><g><title>[libc.so.6] (13 samples, 3.36%)</title><rect x="16.7959%" y="469" width="3.3592%" height="15" fill="rgb(225,35,8)" fg:x="65" fg:w="13"/><text x="17.0459%" y="479.50">[li..</text></g><g><title>[unknown] (13 samples, 3.36%)</title><rect x="16.7959%" y="453" width="3.3592%" height="15" fill="rgb(250,213,24)" fg:x="65" fg:w="13"/><text x="17.0459%" y="463.50">[un..</text></g><g><title>[unknown] (13 samples, 3.36%)</title><rect x="16.7959%" y="437" width="3.3592%" height="15" fill="rgb(247,123,22)" fg:x="65" fg:w="13"/><text x="17.0459%" y="447.50">[un..</text></g><g><title>[unknown] (13 samples, 3.36%)</title><rect x="16.7959%" y="421" width="3.3592%" height="15" fill="rgb(231,138,38)" fg:x="65" fg:w="13"/><text x="17.0459%" y="431.50">[un..</text></g><g><title>[unknown] (12 samples, 3.10%)</title><rect x="17.0543%" y="405" width="3.1008%" height="15" fill="rgb(231,145,46)" fg:x="66" fg:w="12"/><text x="17.3043%" y="415.50">[un..</text></g><g><title>[unknown] (12 samples, 3.10%)</title><rect x="17.0543%" y="389" width="3.1008%" height="15" fill="rgb(251,118,11)" fg:x="66" fg:w="12"/><text x="17.3043%" y="399.50">[un..</text></g><g><title>[unknown] (9 samples, 2.33%)</title><rect x="17.8295%" y="373" width="2.3256%" height="15" fill="rgb(217,147,25)" fg:x="69" fg:w="9"/><text x="18.0795%" y="383.50">[..</text></g><g><title>[unknown] (8 samples, 2.07%)</title><rect x="18.0879%" y="357" width="2.0672%" height="15" fill="rgb(247,81,37)" fg:x="70" fg:w="8"/><text x="18.3379%" y="367.50">[..</text></g><g><title>[unknown] (7 samples, 1.81%)</title><rect x="18.3463%" y="341" width="1.8088%" height="15" fill="rgb(209,12,38)" fg:x="71" fg:w="7"/><text x="18.5963%" y="351.50">[..</text></g><g><title>[unknown] (7 samples, 1.81%)</title><rect x="18.3463%" y="325" width="1.8088%" height="15" fill="rgb(227,1,9)" fg:x="71" fg:w="7"/><text x="18.5963%" y="335.50">[..</text></g><g><title>[unknown] (5 samples, 1.29%)</title><rect x="18.8630%" y="309" width="1.2920%" height="15" fill="rgb(248,47,43)" fg:x="73" fg:w="5"/><text x="19.1130%" y="319.50"></text></g><g><title>[unknown] (5 samples, 1.29%)</title><rect x="18.8630%" y="293" width="1.2920%" height="15" fill="rgb(221,10,30)" fg:x="73" fg:w="5"/><text x="19.1130%" y="303.50"></text></g><g><title>[unknown] (4 samples, 1.03%)</title><rect x="19.1214%" y="277" width="1.0336%" height="15" fill="rgb(210,229,1)" fg:x="74" fg:w="4"/><text x="19.3714%" y="287.50"></text></g><g><title>[unknown] (3 samples, 0.78%)</title><rect x="19.3798%" y="261" width="0.7752%" height="15" fill="rgb(222,148,37)" fg:x="75" fg:w="3"/><text x="19.6298%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="19.8966%" y="245" width="0.2584%" height="15" fill="rgb(234,67,33)" fg:x="77" fg:w="1"/><text x="20.1466%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="19.8966%" y="229" width="0.2584%" height="15" fill="rgb(247,98,35)" fg:x="77" fg:w="1"/><text x="20.1466%" y="239.50"></text></g><g><title>rayon_core::job::JobFifo::new (22 samples, 5.68%)</title><rect x="16.5375%" y="773" width="5.6848%" height="15" fill="rgb(247,138,52)" fg:x="64" fg:w="22"/><text x="16.7875%" y="783.50">rayon_c..</text></g><g><title>crossbeam_deque::deque::Injector&lt;T&gt;::new (22 samples, 5.68%)</title><rect x="16.5375%" y="757" width="5.6848%" height="15" fill="rgb(213,79,30)" fg:x="64" fg:w="22"/><text x="16.7875%" y="767.50">crossbe..</text></g><g><title>&lt;crossbeam_deque::deque::Injector&lt;T&gt; as core::default::Default&gt;::default (22 samples, 5.68%)</title><rect x="16.5375%" y="741" width="5.6848%" height="15" fill="rgb(246,177,23)" fg:x="64" fg:w="22"/><text x="16.7875%" y="751.50">&lt;crossb..</text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (22 samples, 5.68%)</title><rect x="16.5375%" y="725" width="5.6848%" height="15" fill="rgb(230,62,27)" fg:x="64" fg:w="22"/><text x="16.7875%" y="735.50">alloc::..</text></g><g><title>alloc::alloc::exchange_malloc (22 samples, 5.68%)</title><rect x="16.5375%" y="709" width="5.6848%" height="15" fill="rgb(216,154,8)" fg:x="64" fg:w="22"/><text x="16.7875%" y="719.50">alloc::..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 5.68%)</title><rect x="16.5375%" y="693" width="5.6848%" height="15" fill="rgb(244,35,45)" fg:x="64" fg:w="22"/><text x="16.7875%" y="703.50">&lt;alloc:..</text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 5.68%)</title><rect x="16.5375%" y="677" width="5.6848%" height="15" fill="rgb(251,115,12)" fg:x="64" fg:w="22"/><text x="16.7875%" y="687.50">alloc::..</text></g><g><title>alloc::alloc::alloc (22 samples, 5.68%)</title><rect x="16.5375%" y="661" width="5.6848%" height="15" fill="rgb(240,54,50)" fg:x="64" fg:w="22"/><text x="16.7875%" y="671.50">alloc::..</text></g><g><title>_mi_malloc_generic (22 samples, 5.68%)</title><rect x="16.5375%" y="645" width="5.6848%" height="15" fill="rgb(233,84,52)" fg:x="64" fg:w="22"/><text x="16.7875%" y="655.50">_mi_mal..</text></g><g><title>mi_find_page (22 samples, 5.68%)</title><rect x="16.5375%" y="629" width="5.6848%" height="15" fill="rgb(207,117,47)" fg:x="64" fg:w="22"/><text x="16.7875%" y="639.50">mi_find..</text></g><g><title>mi_find_free_page (22 samples, 5.68%)</title><rect x="16.5375%" y="613" width="5.6848%" height="15" fill="rgb(249,43,39)" fg:x="64" fg:w="22"/><text x="16.7875%" y="623.50">mi_find..</text></g><g><title>mi_page_queue_find_free_ex (22 samples, 5.68%)</title><rect x="16.5375%" y="597" width="5.6848%" height="15" fill="rgb(209,38,44)" fg:x="64" fg:w="22"/><text x="16.7875%" y="607.50">mi_page..</text></g><g><title>mi_page_fresh (22 samples, 5.68%)</title><rect x="16.5375%" y="581" width="5.6848%" height="15" fill="rgb(236,212,23)" fg:x="64" fg:w="22"/><text x="16.7875%" y="591.50">mi_page..</text></g><g><title>mi_page_fresh_alloc (22 samples, 5.68%)</title><rect x="16.5375%" y="565" width="5.6848%" height="15" fill="rgb(242,79,21)" fg:x="64" fg:w="22"/><text x="16.7875%" y="575.50">mi_page..</text></g><g><title>mi_segments_page_alloc (22 samples, 5.68%)</title><rect x="16.5375%" y="549" width="5.6848%" height="15" fill="rgb(211,96,35)" fg:x="64" fg:w="22"/><text x="16.7875%" y="559.50">mi_segm..</text></g><g><title>mi_segment_reclaim_or_alloc (22 samples, 5.68%)</title><rect x="16.5375%" y="533" width="5.6848%" height="15" fill="rgb(253,215,40)" fg:x="64" fg:w="22"/><text x="16.7875%" y="543.50">mi_segm..</text></g><g><title>mi_segment_alloc (22 samples, 5.68%)</title><rect x="16.5375%" y="517" width="5.6848%" height="15" fill="rgb(211,81,21)" fg:x="64" fg:w="22"/><text x="16.7875%" y="527.50">mi_segm..</text></g><g><title>mi_segment_init (22 samples, 5.68%)</title><rect x="16.5375%" y="501" width="5.6848%" height="15" fill="rgb(208,190,38)" fg:x="64" fg:w="22"/><text x="16.7875%" y="511.50">mi_segm..</text></g><g><title>mi_segment_span_allocate (8 samples, 2.07%)</title><rect x="20.1550%" y="485" width="2.0672%" height="15" fill="rgb(235,213,38)" fg:x="78" fg:w="8"/><text x="20.4050%" y="495.50">m..</text></g><g><title>mi_segment_ensure_committed (8 samples, 2.07%)</title><rect x="20.1550%" y="469" width="2.0672%" height="15" fill="rgb(237,122,38)" fg:x="78" fg:w="8"/><text x="20.4050%" y="479.50">m..</text></g><g><title>mi_segment_commitx (8 samples, 2.07%)</title><rect x="20.1550%" y="453" width="2.0672%" height="15" fill="rgb(244,218,35)" fg:x="78" fg:w="8"/><text x="20.4050%" y="463.50">m..</text></g><g><title>_mi_os_commit (8 samples, 2.07%)</title><rect x="20.1550%" y="437" width="2.0672%" height="15" fill="rgb(240,68,47)" fg:x="78" fg:w="8"/><text x="20.4050%" y="447.50">_..</text></g><g><title>mi_os_commitx (8 samples, 2.07%)</title><rect x="20.1550%" y="421" width="2.0672%" height="15" fill="rgb(210,16,53)" fg:x="78" fg:w="8"/><text x="20.4050%" y="431.50">m..</text></g><g><title>__GI___mprotect (8 samples, 2.07%)</title><rect x="20.1550%" y="405" width="2.0672%" height="15" fill="rgb(235,124,12)" fg:x="78" fg:w="8"/><text x="20.4050%" y="415.50">_..</text></g><g><title>[unknown] (8 samples, 2.07%)</title><rect x="20.1550%" y="389" width="2.0672%" height="15" fill="rgb(224,169,11)" fg:x="78" fg:w="8"/><text x="20.4050%" y="399.50">[..</text></g><g><title>[unknown] (8 samples, 2.07%)</title><rect x="20.1550%" y="373" width="2.0672%" height="15" fill="rgb(250,166,2)" fg:x="78" fg:w="8"/><text x="20.4050%" y="383.50">[..</text></g><g><title>[unknown] (8 samples, 2.07%)</title><rect x="20.1550%" y="357" width="2.0672%" height="15" fill="rgb(242,216,29)" fg:x="78" fg:w="8"/><text x="20.4050%" y="367.50">[..</text></g><g><title>[unknown] (8 samples, 2.07%)</title><rect x="20.1550%" y="341" width="2.0672%" height="15" fill="rgb(230,116,27)" fg:x="78" fg:w="8"/><text x="20.4050%" y="351.50">[..</text></g><g><title>[unknown] (8 samples, 2.07%)</title><rect x="20.1550%" y="325" width="2.0672%" height="15" fill="rgb(228,99,48)" fg:x="78" fg:w="8"/><text x="20.4050%" y="335.50">[..</text></g><g><title>[unknown] (8 samples, 2.07%)</title><rect x="20.1550%" y="309" width="2.0672%" height="15" fill="rgb(253,11,6)" fg:x="78" fg:w="8"/><text x="20.4050%" y="319.50">[..</text></g><g><title>[unknown] (8 samples, 2.07%)</title><rect x="20.1550%" y="293" width="2.0672%" height="15" fill="rgb(247,143,39)" fg:x="78" fg:w="8"/><text x="20.4050%" y="303.50">[..</text></g><g><title>[unknown] (7 samples, 1.81%)</title><rect x="20.4134%" y="277" width="1.8088%" height="15" fill="rgb(236,97,10)" fg:x="79" fg:w="7"/><text x="20.6634%" y="287.50">[..</text></g><g><title>[unknown] (7 samples, 1.81%)</title><rect x="20.4134%" y="261" width="1.8088%" height="15" fill="rgb(233,208,19)" fg:x="79" fg:w="7"/><text x="20.6634%" y="271.50">[..</text></g><g><title>[unknown] (6 samples, 1.55%)</title><rect x="20.6718%" y="245" width="1.5504%" height="15" fill="rgb(216,164,2)" fg:x="80" fg:w="6"/><text x="20.9218%" y="255.50"></text></g><g><title>[unknown] (5 samples, 1.29%)</title><rect x="20.9302%" y="229" width="1.2920%" height="15" fill="rgb(220,129,5)" fg:x="81" fg:w="5"/><text x="21.1802%" y="239.50"></text></g><g><title>[unknown] (5 samples, 1.29%)</title><rect x="20.9302%" y="213" width="1.2920%" height="15" fill="rgb(242,17,10)" fg:x="81" fg:w="5"/><text x="21.1802%" y="223.50"></text></g><g><title>[unknown] (4 samples, 1.03%)</title><rect x="21.1886%" y="197" width="1.0336%" height="15" fill="rgb(242,107,0)" fg:x="82" fg:w="4"/><text x="21.4386%" y="207.50"></text></g><g><title>[unknown] (3 samples, 0.78%)</title><rect x="21.4470%" y="181" width="0.7752%" height="15" fill="rgb(251,28,31)" fg:x="83" fg:w="3"/><text x="21.6970%" y="191.50"></text></g><g><title>[unknown] (2 samples, 0.52%)</title><rect x="21.7054%" y="165" width="0.5168%" height="15" fill="rgb(233,223,10)" fg:x="84" fg:w="2"/><text x="21.9554%" y="175.50"></text></g><g><title>[unknown] (2 samples, 0.52%)</title><rect x="21.7054%" y="149" width="0.5168%" height="15" fill="rgb(215,21,27)" fg:x="84" fg:w="2"/><text x="21.9554%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="21.9638%" y="133" width="0.2584%" height="15" fill="rgb(232,23,21)" fg:x="85" fg:w="1"/><text x="22.2138%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="21.9638%" y="117" width="0.2584%" height="15" fill="rgb(244,5,23)" fg:x="85" fg:w="1"/><text x="22.2138%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="21.9638%" y="101" width="0.2584%" height="15" fill="rgb(226,81,46)" fg:x="85" fg:w="1"/><text x="22.2138%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="21.9638%" y="85" width="0.2584%" height="15" fill="rgb(247,70,30)" fg:x="85" fg:w="1"/><text x="22.2138%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="21.9638%" y="69" width="0.2584%" height="15" fill="rgb(212,68,19)" fg:x="85" fg:w="1"/><text x="22.2138%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="21.9638%" y="53" width="0.2584%" height="15" fill="rgb(240,187,13)" fg:x="85" fg:w="1"/><text x="22.2138%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="21.9638%" y="37" width="0.2584%" height="15" fill="rgb(223,113,26)" fg:x="85" fg:w="1"/><text x="22.2138%" y="47.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.26%)</title><rect x="22.2222%" y="741" width="0.2584%" height="15" fill="rgb(206,192,2)" fg:x="86" fg:w="1"/><text x="22.4722%" y="751.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold::{{closure}} (1 samples, 0.26%)</title><rect x="22.2222%" y="725" width="0.2584%" height="15" fill="rgb(241,108,4)" fg:x="86" fg:w="1"/><text x="22.4722%" y="735.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (1 samples, 0.26%)</title><rect x="22.2222%" y="709" width="0.2584%" height="15" fill="rgb(247,173,49)" fg:x="86" fg:w="1"/><text x="22.4722%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.26%)</title><rect x="22.2222%" y="693" width="0.2584%" height="15" fill="rgb(224,114,35)" fg:x="86" fg:w="1"/><text x="22.4722%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.26%)</title><rect x="22.2222%" y="677" width="0.2584%" height="15" fill="rgb(245,159,27)" fg:x="86" fg:w="1"/><text x="22.4722%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.26%)</title><rect x="22.2222%" y="661" width="0.2584%" height="15" fill="rgb(245,172,44)" fg:x="86" fg:w="1"/><text x="22.4722%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.26%)</title><rect x="22.2222%" y="645" width="0.2584%" height="15" fill="rgb(236,23,11)" fg:x="86" fg:w="1"/><text x="22.4722%" y="655.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.26%)</title><rect x="22.2222%" y="629" width="0.2584%" height="15" fill="rgb(205,117,38)" fg:x="86" fg:w="1"/><text x="22.4722%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 0.26%)</title><rect x="22.2222%" y="613" width="0.2584%" height="15" fill="rgb(237,72,25)" fg:x="86" fg:w="1"/><text x="22.4722%" y="623.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (1 samples, 0.26%)</title><rect x="22.2222%" y="597" width="0.2584%" height="15" fill="rgb(244,70,9)" fg:x="86" fg:w="1"/><text x="22.4722%" y="607.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1 samples, 0.26%)</title><rect x="22.2222%" y="581" width="0.2584%" height="15" fill="rgb(217,125,39)" fg:x="86" fg:w="1"/><text x="22.4722%" y="591.50"></text></g><g><title>crossbeam_epoch::default::pin (1 samples, 0.26%)</title><rect x="22.2222%" y="565" width="0.2584%" height="15" fill="rgb(235,36,10)" fg:x="86" fg:w="1"/><text x="22.4722%" y="575.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1 samples, 0.26%)</title><rect x="22.2222%" y="549" width="0.2584%" height="15" fill="rgb(251,123,47)" fg:x="86" fg:w="1"/><text x="22.4722%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.26%)</title><rect x="22.2222%" y="533" width="0.2584%" height="15" fill="rgb(221,13,13)" fg:x="86" fg:w="1"/><text x="22.4722%" y="543.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (1 samples, 0.26%)</title><rect x="22.2222%" y="517" width="0.2584%" height="15" fill="rgb(238,131,9)" fg:x="86" fg:w="1"/><text x="22.4722%" y="527.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (1 samples, 0.26%)</title><rect x="22.2222%" y="501" width="0.2584%" height="15" fill="rgb(211,50,8)" fg:x="86" fg:w="1"/><text x="22.4722%" y="511.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (1 samples, 0.26%)</title><rect x="22.2222%" y="485" width="0.2584%" height="15" fill="rgb(245,182,24)" fg:x="86" fg:w="1"/><text x="22.4722%" y="495.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (1 samples, 0.26%)</title><rect x="22.2222%" y="469" width="0.2584%" height="15" fill="rgb(242,14,37)" fg:x="86" fg:w="1"/><text x="22.4722%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.26%)</title><rect x="22.2222%" y="453" width="0.2584%" height="15" fill="rgb(246,228,12)" fg:x="86" fg:w="1"/><text x="22.4722%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.26%)</title><rect x="22.2222%" y="437" width="0.2584%" height="15" fill="rgb(213,55,15)" fg:x="86" fg:w="1"/><text x="22.4722%" y="447.50"></text></g><g><title>rayon_core::registry::WorkerThread::take_local_job (1 samples, 0.26%)</title><rect x="22.4806%" y="741" width="0.2584%" height="15" fill="rgb(209,9,3)" fg:x="87" fg:w="1"/><text x="22.7306%" y="751.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1 samples, 0.26%)</title><rect x="22.4806%" y="725" width="0.2584%" height="15" fill="rgb(230,59,30)" fg:x="87" fg:w="1"/><text x="22.7306%" y="735.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (1 samples, 0.26%)</title><rect x="22.4806%" y="709" width="0.2584%" height="15" fill="rgb(209,121,21)" fg:x="87" fg:w="1"/><text x="22.7306%" y="719.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1 samples, 0.26%)</title><rect x="22.4806%" y="693" width="0.2584%" height="15" fill="rgb(220,109,13)" fg:x="87" fg:w="1"/><text x="22.7306%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.26%)</title><rect x="22.4806%" y="677" width="0.2584%" height="15" fill="rgb(232,18,1)" fg:x="87" fg:w="1"/><text x="22.7306%" y="687.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (1 samples, 0.26%)</title><rect x="22.4806%" y="661" width="0.2584%" height="15" fill="rgb(215,41,42)" fg:x="87" fg:w="1"/><text x="22.7306%" y="671.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.26%)</title><rect x="22.4806%" y="645" width="0.2584%" height="15" fill="rgb(224,123,36)" fg:x="87" fg:w="1"/><text x="22.7306%" y="655.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (1 samples, 0.26%)</title><rect x="22.4806%" y="629" width="0.2584%" height="15" fill="rgb(240,125,3)" fg:x="87" fg:w="1"/><text x="22.7306%" y="639.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_register_dtor (1 samples, 0.26%)</title><rect x="22.4806%" y="613" width="0.2584%" height="15" fill="rgb(205,98,50)" fg:x="87" fg:w="1"/><text x="22.7306%" y="623.50"></text></g><g><title>__cxa_thread_atexit_impl (1 samples, 0.26%)</title><rect x="22.4806%" y="597" width="0.2584%" height="15" fill="rgb(205,185,37)" fg:x="87" fg:w="1"/><text x="22.7306%" y="607.50"></text></g><g><title>__libc_calloc (1 samples, 0.26%)</title><rect x="22.4806%" y="581" width="0.2584%" height="15" fill="rgb(238,207,15)" fg:x="87" fg:w="1"/><text x="22.7306%" y="591.50"></text></g><g><title>std::panic::catch_unwind (35 samples, 9.04%)</title><rect x="16.5375%" y="917" width="9.0439%" height="15" fill="rgb(213,199,42)" fg:x="64" fg:w="35"/><text x="16.7875%" y="927.50">std::panic::c..</text></g><g><title>std::panicking::try (35 samples, 9.04%)</title><rect x="16.5375%" y="901" width="9.0439%" height="15" fill="rgb(235,201,11)" fg:x="64" fg:w="35"/><text x="16.7875%" y="911.50">std::panickin..</text></g><g><title>std::panicking::try::do_call (35 samples, 9.04%)</title><rect x="16.5375%" y="885" width="9.0439%" height="15" fill="rgb(207,46,11)" fg:x="64" fg:w="35"/><text x="16.7875%" y="895.50">std::panickin..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (35 samples, 9.04%)</title><rect x="16.5375%" y="869" width="9.0439%" height="15" fill="rgb(241,35,35)" fg:x="64" fg:w="35"/><text x="16.7875%" y="879.50">&lt;core::panic:..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (35 samples, 9.04%)</title><rect x="16.5375%" y="853" width="9.0439%" height="15" fill="rgb(243,32,47)" fg:x="64" fg:w="35"/><text x="16.7875%" y="863.50">std::thread::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (35 samples, 9.04%)</title><rect x="16.5375%" y="837" width="9.0439%" height="15" fill="rgb(247,202,23)" fg:x="64" fg:w="35"/><text x="16.7875%" y="847.50">std::sys_comm..</text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (35 samples, 9.04%)</title><rect x="16.5375%" y="821" width="9.0439%" height="15" fill="rgb(219,102,11)" fg:x="64" fg:w="35"/><text x="16.7875%" y="831.50">&lt;rayon_core::..</text></g><g><title>rayon_core::registry::ThreadBuilder::run (35 samples, 9.04%)</title><rect x="16.5375%" y="805" width="9.0439%" height="15" fill="rgb(243,110,44)" fg:x="64" fg:w="35"/><text x="16.7875%" y="815.50">rayon_core::r..</text></g><g><title>rayon_core::registry::main_loop (35 samples, 9.04%)</title><rect x="16.5375%" y="789" width="9.0439%" height="15" fill="rgb(222,74,54)" fg:x="64" fg:w="35"/><text x="16.7875%" y="799.50">rayon_core::r..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (13 samples, 3.36%)</title><rect x="22.2222%" y="773" width="3.3592%" height="15" fill="rgb(216,99,12)" fg:x="86" fg:w="13"/><text x="22.4722%" y="783.50">ray..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (13 samples, 3.36%)</title><rect x="22.2222%" y="757" width="3.3592%" height="15" fill="rgb(226,22,26)" fg:x="86" fg:w="13"/><text x="22.4722%" y="767.50">ray..</text></g><g><title>rayon_core::sleep::Sleep::no_work_found (11 samples, 2.84%)</title><rect x="22.7390%" y="741" width="2.8424%" height="15" fill="rgb(217,163,10)" fg:x="88" fg:w="11"/><text x="22.9890%" y="751.50">ra..</text></g><g><title>rayon_core::sleep::Sleep::sleep (11 samples, 2.84%)</title><rect x="22.7390%" y="725" width="2.8424%" height="15" fill="rgb(213,25,53)" fg:x="88" fg:w="11"/><text x="22.9890%" y="735.50">ra..</text></g><g><title>std::sync::condvar::Condvar::wait (11 samples, 2.84%)</title><rect x="22.7390%" y="709" width="2.8424%" height="15" fill="rgb(252,105,26)" fg:x="88" fg:w="11"/><text x="22.9890%" y="719.50">st..</text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (11 samples, 2.84%)</title><rect x="22.7390%" y="693" width="2.8424%" height="15" fill="rgb(220,39,43)" fg:x="88" fg:w="11"/><text x="22.9890%" y="703.50">st..</text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (11 samples, 2.84%)</title><rect x="22.7390%" y="677" width="2.8424%" height="15" fill="rgb(229,68,48)" fg:x="88" fg:w="11"/><text x="22.9890%" y="687.50">st..</text></g><g><title>std::sys::unix::futex::futex_wait (11 samples, 2.84%)</title><rect x="22.7390%" y="661" width="2.8424%" height="15" fill="rgb(252,8,32)" fg:x="88" fg:w="11"/><text x="22.9890%" y="671.50">st..</text></g><g><title>syscall (11 samples, 2.84%)</title><rect x="22.7390%" y="645" width="2.8424%" height="15" fill="rgb(223,20,43)" fg:x="88" fg:w="11"/><text x="22.9890%" y="655.50">sy..</text></g><g><title>[unknown] (11 samples, 2.84%)</title><rect x="22.7390%" y="629" width="2.8424%" height="15" fill="rgb(229,81,49)" fg:x="88" fg:w="11"/><text x="22.9890%" y="639.50">[u..</text></g><g><title>[unknown] (11 samples, 2.84%)</title><rect x="22.7390%" y="613" width="2.8424%" height="15" fill="rgb(236,28,36)" fg:x="88" fg:w="11"/><text x="22.9890%" y="623.50">[u..</text></g><g><title>[unknown] (11 samples, 2.84%)</title><rect x="22.7390%" y="597" width="2.8424%" height="15" fill="rgb(249,185,26)" fg:x="88" fg:w="11"/><text x="22.9890%" y="607.50">[u..</text></g><g><title>[unknown] (11 samples, 2.84%)</title><rect x="22.7390%" y="581" width="2.8424%" height="15" fill="rgb(249,174,33)" fg:x="88" fg:w="11"/><text x="22.9890%" y="591.50">[u..</text></g><g><title>[unknown] (11 samples, 2.84%)</title><rect x="22.7390%" y="565" width="2.8424%" height="15" fill="rgb(233,201,37)" fg:x="88" fg:w="11"/><text x="22.9890%" y="575.50">[u..</text></g><g><title>[unknown] (9 samples, 2.33%)</title><rect x="23.2558%" y="549" width="2.3256%" height="15" fill="rgb(221,78,26)" fg:x="90" fg:w="9"/><text x="23.5058%" y="559.50">[..</text></g><g><title>[unknown] (9 samples, 2.33%)</title><rect x="23.2558%" y="533" width="2.3256%" height="15" fill="rgb(250,127,30)" fg:x="90" fg:w="9"/><text x="23.5058%" y="543.50">[..</text></g><g><title>[unknown] (9 samples, 2.33%)</title><rect x="23.2558%" y="517" width="2.3256%" height="15" fill="rgb(230,49,44)" fg:x="90" fg:w="9"/><text x="23.5058%" y="527.50">[..</text></g><g><title>[unknown] (9 samples, 2.33%)</title><rect x="23.2558%" y="501" width="2.3256%" height="15" fill="rgb(229,67,23)" fg:x="90" fg:w="9"/><text x="23.5058%" y="511.50">[..</text></g><g><title>[unknown] (7 samples, 1.81%)</title><rect x="23.7726%" y="485" width="1.8088%" height="15" fill="rgb(249,83,47)" fg:x="92" fg:w="7"/><text x="24.0226%" y="495.50">[..</text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="25.3230%" y="469" width="0.2584%" height="15" fill="rgb(215,43,3)" fg:x="98" fg:w="1"/><text x="25.5730%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="25.3230%" y="453" width="0.2584%" height="15" fill="rgb(238,154,13)" fg:x="98" fg:w="1"/><text x="25.5730%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="25.3230%" y="437" width="0.2584%" height="15" fill="rgb(219,56,2)" fg:x="98" fg:w="1"/><text x="25.5730%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="25.3230%" y="421" width="0.2584%" height="15" fill="rgb(233,0,4)" fg:x="98" fg:w="1"/><text x="25.5730%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="25.3230%" y="405" width="0.2584%" height="15" fill="rgb(235,30,7)" fg:x="98" fg:w="1"/><text x="25.5730%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="25.3230%" y="389" width="0.2584%" height="15" fill="rgb(250,79,13)" fg:x="98" fg:w="1"/><text x="25.5730%" y="399.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (36 samples, 9.30%)</title><rect x="16.5375%" y="981" width="9.3023%" height="15" fill="rgb(211,146,34)" fg:x="64" fg:w="36"/><text x="16.7875%" y="991.50">&lt;alloc::boxed..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (36 samples, 9.30%)</title><rect x="16.5375%" y="965" width="9.3023%" height="15" fill="rgb(228,22,38)" fg:x="64" fg:w="36"/><text x="16.7875%" y="975.50">&lt;alloc::boxed..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (36 samples, 9.30%)</title><rect x="16.5375%" y="949" width="9.3023%" height="15" fill="rgb(235,168,5)" fg:x="64" fg:w="36"/><text x="16.7875%" y="959.50">core::ops::fu..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (36 samples, 9.30%)</title><rect x="16.5375%" y="933" width="9.3023%" height="15" fill="rgb(221,155,16)" fg:x="64" fg:w="36"/><text x="16.7875%" y="943.50">std::thread::..</text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.26%)</title><rect x="25.5814%" y="917" width="0.2584%" height="15" fill="rgb(215,215,53)" fg:x="99" fg:w="1"/><text x="25.8314%" y="927.50"></text></g><g><title>__pthread_getattr_np (1 samples, 0.26%)</title><rect x="25.5814%" y="901" width="0.2584%" height="15" fill="rgb(223,4,10)" fg:x="99" fg:w="1"/><text x="25.8314%" y="911.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.26%)</title><rect x="25.5814%" y="885" width="0.2584%" height="15" fill="rgb(234,103,6)" fg:x="99" fg:w="1"/><text x="25.8314%" y="895.50"></text></g><g><title>tcache_init (1 samples, 0.26%)</title><rect x="25.5814%" y="869" width="0.2584%" height="15" fill="rgb(227,97,0)" fg:x="99" fg:w="1"/><text x="25.8314%" y="879.50"></text></g><g><title>tcache_init (1 samples, 0.26%)</title><rect x="25.5814%" y="853" width="0.2584%" height="15" fill="rgb(234,150,53)" fg:x="99" fg:w="1"/><text x="25.8314%" y="863.50"></text></g><g><title>arena_get2 (1 samples, 0.26%)</title><rect x="25.5814%" y="837" width="0.2584%" height="15" fill="rgb(228,201,54)" fg:x="99" fg:w="1"/><text x="25.8314%" y="847.50"></text></g><g><title>arena_get2 (1 samples, 0.26%)</title><rect x="25.5814%" y="821" width="0.2584%" height="15" fill="rgb(222,22,37)" fg:x="99" fg:w="1"/><text x="25.8314%" y="831.50"></text></g><g><title>_int_new_arena (1 samples, 0.26%)</title><rect x="25.5814%" y="805" width="0.2584%" height="15" fill="rgb(237,53,32)" fg:x="99" fg:w="1"/><text x="25.8314%" y="815.50"></text></g><g><title>new_heap (1 samples, 0.26%)</title><rect x="25.5814%" y="789" width="0.2584%" height="15" fill="rgb(233,25,53)" fg:x="99" fg:w="1"/><text x="25.8314%" y="799.50"></text></g><g><title>alloc_new_heap (1 samples, 0.26%)</title><rect x="25.5814%" y="773" width="0.2584%" height="15" fill="rgb(210,40,34)" fg:x="99" fg:w="1"/><text x="25.8314%" y="783.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.26%)</title><rect x="25.5814%" y="757" width="0.2584%" height="15" fill="rgb(241,220,44)" fg:x="99" fg:w="1"/><text x="25.8314%" y="767.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.26%)</title><rect x="25.5814%" y="741" width="0.2584%" height="15" fill="rgb(235,28,35)" fg:x="99" fg:w="1"/><text x="25.8314%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="25.5814%" y="725" width="0.2584%" height="15" fill="rgb(210,56,17)" fg:x="99" fg:w="1"/><text x="25.8314%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="25.5814%" y="709" width="0.2584%" height="15" fill="rgb(224,130,29)" fg:x="99" fg:w="1"/><text x="25.8314%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="25.5814%" y="693" width="0.2584%" height="15" fill="rgb(235,212,8)" fg:x="99" fg:w="1"/><text x="25.8314%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="25.5814%" y="677" width="0.2584%" height="15" fill="rgb(223,33,50)" fg:x="99" fg:w="1"/><text x="25.8314%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="25.5814%" y="661" width="0.2584%" height="15" fill="rgb(219,149,13)" fg:x="99" fg:w="1"/><text x="25.8314%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="25.5814%" y="645" width="0.2584%" height="15" fill="rgb(250,156,29)" fg:x="99" fg:w="1"/><text x="25.8314%" y="655.50"></text></g><g><title>__GI___mmap64 (11 samples, 2.84%)</title><rect x="25.8398%" y="917" width="2.8424%" height="15" fill="rgb(216,193,19)" fg:x="100" fg:w="11"/><text x="26.0898%" y="927.50">__..</text></g><g><title>__GI___mmap64 (11 samples, 2.84%)</title><rect x="25.8398%" y="901" width="2.8424%" height="15" fill="rgb(216,135,14)" fg:x="100" fg:w="11"/><text x="26.0898%" y="911.50">__..</text></g><g><title>[unknown] (11 samples, 2.84%)</title><rect x="25.8398%" y="885" width="2.8424%" height="15" fill="rgb(241,47,5)" fg:x="100" fg:w="11"/><text x="26.0898%" y="895.50">[u..</text></g><g><title>[unknown] (11 samples, 2.84%)</title><rect x="25.8398%" y="869" width="2.8424%" height="15" fill="rgb(233,42,35)" fg:x="100" fg:w="11"/><text x="26.0898%" y="879.50">[u..</text></g><g><title>[unknown] (11 samples, 2.84%)</title><rect x="25.8398%" y="853" width="2.8424%" height="15" fill="rgb(231,13,6)" fg:x="100" fg:w="11"/><text x="26.0898%" y="863.50">[u..</text></g><g><title>[unknown] (11 samples, 2.84%)</title><rect x="25.8398%" y="837" width="2.8424%" height="15" fill="rgb(207,181,40)" fg:x="100" fg:w="11"/><text x="26.0898%" y="847.50">[u..</text></g><g><title>[unknown] (11 samples, 2.84%)</title><rect x="25.8398%" y="821" width="2.8424%" height="15" fill="rgb(254,173,49)" fg:x="100" fg:w="11"/><text x="26.0898%" y="831.50">[u..</text></g><g><title>[unknown] (11 samples, 2.84%)</title><rect x="25.8398%" y="805" width="2.8424%" height="15" fill="rgb(221,1,38)" fg:x="100" fg:w="11"/><text x="26.0898%" y="815.50">[u..</text></g><g><title>[unknown] (11 samples, 2.84%)</title><rect x="25.8398%" y="789" width="2.8424%" height="15" fill="rgb(206,124,46)" fg:x="100" fg:w="11"/><text x="26.0898%" y="799.50">[u..</text></g><g><title>[unknown] (10 samples, 2.58%)</title><rect x="26.0982%" y="773" width="2.5840%" height="15" fill="rgb(249,21,11)" fg:x="101" fg:w="10"/><text x="26.3482%" y="783.50">[u..</text></g><g><title>[unknown] (8 samples, 2.07%)</title><rect x="26.6150%" y="757" width="2.0672%" height="15" fill="rgb(222,201,40)" fg:x="103" fg:w="8"/><text x="26.8650%" y="767.50">[..</text></g><g><title>[unknown] (6 samples, 1.55%)</title><rect x="27.1318%" y="741" width="1.5504%" height="15" fill="rgb(235,61,29)" fg:x="105" fg:w="6"/><text x="27.3818%" y="751.50"></text></g><g><title>[unknown] (2 samples, 0.52%)</title><rect x="28.1654%" y="725" width="0.5168%" height="15" fill="rgb(219,207,3)" fg:x="109" fg:w="2"/><text x="28.4154%" y="735.50"></text></g><g><title>[unknown] (2 samples, 0.52%)</title><rect x="28.1654%" y="709" width="0.5168%" height="15" fill="rgb(222,56,46)" fg:x="109" fg:w="2"/><text x="28.4154%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="28.4238%" y="693" width="0.2584%" height="15" fill="rgb(239,76,54)" fg:x="110" fg:w="1"/><text x="28.6738%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="28.4238%" y="677" width="0.2584%" height="15" fill="rgb(231,124,27)" fg:x="110" fg:w="1"/><text x="28.6738%" y="687.50"></text></g><g><title>__clone3 (52 samples, 13.44%)</title><rect x="15.7623%" y="1029" width="13.4367%" height="15" fill="rgb(249,195,6)" fg:x="61" fg:w="52"/><text x="16.0123%" y="1039.50">__clone3</text></g><g><title>start_thread (50 samples, 12.92%)</title><rect x="16.2791%" y="1013" width="12.9199%" height="15" fill="rgb(237,174,47)" fg:x="63" fg:w="50"/><text x="16.5291%" y="1023.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (49 samples, 12.66%)</title><rect x="16.5375%" y="997" width="12.6615%" height="15" fill="rgb(206,201,31)" fg:x="64" fg:w="49"/><text x="16.7875%" y="1007.50">std::sys::unix::thr..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (13 samples, 3.36%)</title><rect x="25.8398%" y="981" width="3.3592%" height="15" fill="rgb(231,57,52)" fg:x="100" fg:w="13"/><text x="26.0898%" y="991.50">std..</text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (13 samples, 3.36%)</title><rect x="25.8398%" y="965" width="3.3592%" height="15" fill="rgb(248,177,22)" fg:x="100" fg:w="13"/><text x="26.0898%" y="975.50">std..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (13 samples, 3.36%)</title><rect x="25.8398%" y="949" width="3.3592%" height="15" fill="rgb(215,211,37)" fg:x="100" fg:w="13"/><text x="26.0898%" y="959.50">std..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (13 samples, 3.36%)</title><rect x="25.8398%" y="933" width="3.3592%" height="15" fill="rgb(241,128,51)" fg:x="100" fg:w="13"/><text x="26.0898%" y="943.50">std..</text></g><g><title>__GI___mprotect (2 samples, 0.52%)</title><rect x="28.6822%" y="917" width="0.5168%" height="15" fill="rgb(227,165,31)" fg:x="111" fg:w="2"/><text x="28.9322%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="28.9406%" y="901" width="0.2584%" height="15" fill="rgb(228,167,24)" fg:x="112" fg:w="1"/><text x="29.1906%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="28.9406%" y="885" width="0.2584%" height="15" fill="rgb(228,143,12)" fg:x="112" fg:w="1"/><text x="29.1906%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="28.9406%" y="869" width="0.2584%" height="15" fill="rgb(249,149,8)" fg:x="112" fg:w="1"/><text x="29.1906%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="28.9406%" y="853" width="0.2584%" height="15" fill="rgb(243,35,44)" fg:x="112" fg:w="1"/><text x="29.1906%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="28.9406%" y="837" width="0.2584%" height="15" fill="rgb(246,89,9)" fg:x="112" fg:w="1"/><text x="29.1906%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="28.9406%" y="821" width="0.2584%" height="15" fill="rgb(233,213,13)" fg:x="112" fg:w="1"/><text x="29.1906%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="28.9406%" y="805" width="0.2584%" height="15" fill="rgb(233,141,41)" fg:x="112" fg:w="1"/><text x="29.1906%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="28.9406%" y="789" width="0.2584%" height="15" fill="rgb(239,167,4)" fg:x="112" fg:w="1"/><text x="29.1906%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="28.9406%" y="773" width="0.2584%" height="15" fill="rgb(209,217,16)" fg:x="112" fg:w="1"/><text x="29.1906%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="28.9406%" y="757" width="0.2584%" height="15" fill="rgb(219,88,35)" fg:x="112" fg:w="1"/><text x="29.1906%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="28.9406%" y="741" width="0.2584%" height="15" fill="rgb(220,193,23)" fg:x="112" fg:w="1"/><text x="29.1906%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="28.9406%" y="725" width="0.2584%" height="15" fill="rgb(230,90,52)" fg:x="112" fg:w="1"/><text x="29.1906%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="28.9406%" y="709" width="0.2584%" height="15" fill="rgb(252,106,19)" fg:x="112" fg:w="1"/><text x="29.1906%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="28.9406%" y="693" width="0.2584%" height="15" fill="rgb(206,74,20)" fg:x="112" fg:w="1"/><text x="29.1906%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="28.9406%" y="677" width="0.2584%" height="15" fill="rgb(230,138,44)" fg:x="112" fg:w="1"/><text x="29.1906%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (37 samples, 9.56%)</title><rect x="29.1990%" y="581" width="9.5607%" height="15" fill="rgb(235,182,43)" fg:x="113" fg:w="37"/><text x="29.4490%" y="591.50">alloc::sync::A..</text></g><g><title>core::ptr::drop_in_place&lt;memmap2::Mmap&gt; (37 samples, 9.56%)</title><rect x="29.1990%" y="565" width="9.5607%" height="15" fill="rgb(242,16,51)" fg:x="113" fg:w="37"/><text x="29.4490%" y="575.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;memmap2::os::MmapInner&gt; (37 samples, 9.56%)</title><rect x="29.1990%" y="549" width="9.5607%" height="15" fill="rgb(248,9,4)" fg:x="113" fg:w="37"/><text x="29.4490%" y="559.50">core::ptr::dro..</text></g><g><title>__GI___munmap (37 samples, 9.56%)</title><rect x="29.1990%" y="533" width="9.5607%" height="15" fill="rgb(210,31,22)" fg:x="113" fg:w="37"/><text x="29.4490%" y="543.50">__GI___munmap</text></g><g><title>[unknown] (37 samples, 9.56%)</title><rect x="29.1990%" y="517" width="9.5607%" height="15" fill="rgb(239,54,39)" fg:x="113" fg:w="37"/><text x="29.4490%" y="527.50">[unknown]</text></g><g><title>[unknown] (37 samples, 9.56%)</title><rect x="29.1990%" y="501" width="9.5607%" height="15" fill="rgb(230,99,41)" fg:x="113" fg:w="37"/><text x="29.4490%" y="511.50">[unknown]</text></g><g><title>[unknown] (37 samples, 9.56%)</title><rect x="29.1990%" y="485" width="9.5607%" height="15" fill="rgb(253,106,12)" fg:x="113" fg:w="37"/><text x="29.4490%" y="495.50">[unknown]</text></g><g><title>[unknown] (37 samples, 9.56%)</title><rect x="29.1990%" y="469" width="9.5607%" height="15" fill="rgb(213,46,41)" fg:x="113" fg:w="37"/><text x="29.4490%" y="479.50">[unknown]</text></g><g><title>[unknown] (37 samples, 9.56%)</title><rect x="29.1990%" y="453" width="9.5607%" height="15" fill="rgb(215,133,35)" fg:x="113" fg:w="37"/><text x="29.4490%" y="463.50">[unknown]</text></g><g><title>[unknown] (37 samples, 9.56%)</title><rect x="29.1990%" y="437" width="9.5607%" height="15" fill="rgb(213,28,5)" fg:x="113" fg:w="37"/><text x="29.4490%" y="447.50">[unknown]</text></g><g><title>[unknown] (37 samples, 9.56%)</title><rect x="29.1990%" y="421" width="9.5607%" height="15" fill="rgb(215,77,49)" fg:x="113" fg:w="37"/><text x="29.4490%" y="431.50">[unknown]</text></g><g><title>[unknown] (37 samples, 9.56%)</title><rect x="29.1990%" y="405" width="9.5607%" height="15" fill="rgb(248,100,22)" fg:x="113" fg:w="37"/><text x="29.4490%" y="415.50">[unknown]</text></g><g><title>[unknown] (37 samples, 9.56%)</title><rect x="29.1990%" y="389" width="9.5607%" height="15" fill="rgb(208,67,9)" fg:x="113" fg:w="37"/><text x="29.4490%" y="399.50">[unknown]</text></g><g><title>[unknown] (37 samples, 9.56%)</title><rect x="29.1990%" y="373" width="9.5607%" height="15" fill="rgb(219,133,21)" fg:x="113" fg:w="37"/><text x="29.4490%" y="383.50">[unknown]</text></g><g><title>[unknown] (37 samples, 9.56%)</title><rect x="29.1990%" y="357" width="9.5607%" height="15" fill="rgb(246,46,29)" fg:x="113" fg:w="37"/><text x="29.4490%" y="367.50">[unknown]</text></g><g><title>[unknown] (27 samples, 6.98%)</title><rect x="31.7829%" y="341" width="6.9767%" height="15" fill="rgb(246,185,52)" fg:x="123" fg:w="27"/><text x="32.0329%" y="351.50">[unknown]</text></g><g><title>[unknown] (26 samples, 6.72%)</title><rect x="32.0413%" y="325" width="6.7183%" height="15" fill="rgb(252,136,11)" fg:x="124" fg:w="26"/><text x="32.2913%" y="335.50">[unknown]</text></g><g><title>[unknown] (22 samples, 5.68%)</title><rect x="33.0749%" y="309" width="5.6848%" height="15" fill="rgb(219,138,53)" fg:x="128" fg:w="22"/><text x="33.3249%" y="319.50">[unknow..</text></g><g><title>[unknown] (20 samples, 5.17%)</title><rect x="33.5917%" y="293" width="5.1680%" height="15" fill="rgb(211,51,23)" fg:x="130" fg:w="20"/><text x="33.8417%" y="303.50">[unkno..</text></g><g><title>[unknown] (13 samples, 3.36%)</title><rect x="35.4005%" y="277" width="3.3592%" height="15" fill="rgb(247,221,28)" fg:x="137" fg:w="13"/><text x="35.6505%" y="287.50">[un..</text></g><g><title>[unknown] (8 samples, 2.07%)</title><rect x="36.6925%" y="261" width="2.0672%" height="15" fill="rgb(251,222,45)" fg:x="142" fg:w="8"/><text x="36.9425%" y="271.50">[..</text></g><g><title>[unknown] (5 samples, 1.29%)</title><rect x="37.4677%" y="245" width="1.2920%" height="15" fill="rgb(217,162,53)" fg:x="145" fg:w="5"/><text x="37.7177%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="38.5013%" y="229" width="0.2584%" height="15" fill="rgb(229,93,14)" fg:x="149" fg:w="1"/><text x="38.7513%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser_settings::Maps&gt; (1 samples, 0.26%)</title><rect x="38.7597%" y="565" width="0.2584%" height="15" fill="rgb(209,67,49)" fg:x="150" fg:w="1"/><text x="39.0097%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;std::collections::hash::map::HashMap&lt;i32,csgoproto::netmessages::csvcmsg_game_event_list::Descriptor_t,ahash::random_state::RandomState&gt;&gt;&gt; (1 samples, 0.26%)</title><rect x="38.7597%" y="549" width="0.2584%" height="15" fill="rgb(213,87,29)" fg:x="150" fg:w="1"/><text x="39.0097%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;i32,csgoproto::netmessages::csvcmsg_game_event_list::Descriptor_t,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.26%)</title><rect x="38.7597%" y="533" width="0.2584%" height="15" fill="rgb(205,151,52)" fg:x="150" fg:w="1"/><text x="39.0097%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;i32,csgoproto::netmessages::csvcmsg_game_event_list::Descriptor_t,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.26%)</title><rect x="38.7597%" y="517" width="0.2584%" height="15" fill="rgb(253,215,39)" fg:x="150" fg:w="1"/><text x="39.0097%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(i32,csgoproto::netmessages::csvcmsg_game_event_list::Descriptor_t)&gt;&gt; (1 samples, 0.26%)</title><rect x="38.7597%" y="501" width="0.2584%" height="15" fill="rgb(221,220,41)" fg:x="150" fg:w="1"/><text x="39.0097%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.26%)</title><rect x="38.7597%" y="485" width="0.2584%" height="15" fill="rgb(218,133,21)" fg:x="150" fg:w="1"/><text x="39.0097%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.26%)</title><rect x="38.7597%" y="469" width="0.2584%" height="15" fill="rgb(221,193,43)" fg:x="150" fg:w="1"/><text x="39.0097%" y="479.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.26%)</title><rect x="38.7597%" y="453" width="0.2584%" height="15" fill="rgb(240,128,52)" fg:x="150" fg:w="1"/><text x="39.0097%" y="463.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.26%)</title><rect x="38.7597%" y="437" width="0.2584%" height="15" fill="rgb(253,114,12)" fg:x="150" fg:w="1"/><text x="39.0097%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.26%)</title><rect x="38.7597%" y="421" width="0.2584%" height="15" fill="rgb(215,223,47)" fg:x="150" fg:w="1"/><text x="39.0097%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.26%)</title><rect x="38.7597%" y="405" width="0.2584%" height="15" fill="rgb(248,225,23)" fg:x="150" fg:w="1"/><text x="39.0097%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::demo_parsing::entities::EidClsHistoryEntry&gt;&gt; (1 samples, 0.26%)</title><rect x="39.0181%" y="549" width="0.2584%" height="15" fill="rgb(250,108,0)" fg:x="151" fg:w="1"/><text x="39.2681%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;demoparser::parsing::demo_parsing::entities::EidClsHistoryEntry&gt;&gt; (1 samples, 0.26%)</title><rect x="39.0181%" y="533" width="0.2584%" height="15" fill="rgb(228,208,7)" fg:x="151" fg:w="1"/><text x="39.2681%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.26%)</title><rect x="39.0181%" y="517" width="0.2584%" height="15" fill="rgb(244,45,10)" fg:x="151" fg:w="1"/><text x="39.2681%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.26%)</title><rect x="39.0181%" y="501" width="0.2584%" height="15" fill="rgb(207,125,25)" fg:x="151" fg:w="1"/><text x="39.2681%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.26%)</title><rect x="39.0181%" y="485" width="0.2584%" height="15" fill="rgb(210,195,18)" fg:x="151" fg:w="1"/><text x="39.2681%" y="495.50"></text></g><g><title>_mi_page_retire (1 samples, 0.26%)</title><rect x="39.0181%" y="469" width="0.2584%" height="15" fill="rgb(249,80,12)" fg:x="151" fg:w="1"/><text x="39.2681%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser::Parser&gt; (3 samples, 0.78%)</title><rect x="38.7597%" y="581" width="0.7752%" height="15" fill="rgb(221,65,9)" fg:x="150" fg:w="3"/><text x="39.0097%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser_settings::ParserState&gt; (2 samples, 0.52%)</title><rect x="39.0181%" y="565" width="0.5168%" height="15" fill="rgb(235,49,36)" fg:x="151" fg:w="2"/><text x="39.2681%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::demo_parsing::game_events::GameEvent&gt;&gt; (1 samples, 0.26%)</title><rect x="39.2765%" y="549" width="0.2584%" height="15" fill="rgb(225,32,20)" fg:x="152" fg:w="1"/><text x="39.5265%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.26%)</title><rect x="39.2765%" y="533" width="0.2584%" height="15" fill="rgb(215,141,46)" fg:x="152" fg:w="1"/><text x="39.5265%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::demo_parsing::game_events::GameEvent]&gt; (1 samples, 0.26%)</title><rect x="39.2765%" y="517" width="0.2584%" height="15" fill="rgb(250,160,47)" fg:x="152" fg:w="1"/><text x="39.5265%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::game_events::GameEvent&gt; (1 samples, 0.26%)</title><rect x="39.2765%" y="501" width="0.2584%" height="15" fill="rgb(216,222,40)" fg:x="152" fg:w="1"/><text x="39.5265%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::demo_parsing::game_events::NameDataPair&gt;&gt; (1 samples, 0.26%)</title><rect x="39.2765%" y="485" width="0.2584%" height="15" fill="rgb(234,217,39)" fg:x="152" fg:w="1"/><text x="39.5265%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.26%)</title><rect x="39.2765%" y="469" width="0.2584%" height="15" fill="rgb(207,178,40)" fg:x="152" fg:w="1"/><text x="39.5265%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::demo_parsing::game_events::NameDataPair]&gt; (1 samples, 0.26%)</title><rect x="39.2765%" y="453" width="0.2584%" height="15" fill="rgb(221,136,13)" fg:x="152" fg:w="1"/><text x="39.5265%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::game_events::NameDataPair&gt; (1 samples, 0.26%)</title><rect x="39.2765%" y="437" width="0.2584%" height="15" fill="rgb(249,199,10)" fg:x="152" fg:w="1"/><text x="39.5265%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.26%)</title><rect x="39.2765%" y="421" width="0.2584%" height="15" fill="rgb(249,222,13)" fg:x="152" fg:w="1"/><text x="39.5265%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.26%)</title><rect x="39.2765%" y="405" width="0.2584%" height="15" fill="rgb(244,185,38)" fg:x="152" fg:w="1"/><text x="39.5265%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.26%)</title><rect x="39.2765%" y="389" width="0.2584%" height="15" fill="rgb(236,202,9)" fg:x="152" fg:w="1"/><text x="39.5265%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.26%)</title><rect x="39.2765%" y="373" width="0.2584%" height="15" fill="rgb(250,229,37)" fg:x="152" fg:w="1"/><text x="39.5265%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.26%)</title><rect x="39.2765%" y="357" width="0.2584%" height="15" fill="rgb(206,174,23)" fg:x="152" fg:w="1"/><text x="39.5265%" y="367.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.26%)</title><rect x="39.5349%" y="517" width="0.2584%" height="15" fill="rgb(211,33,43)" fg:x="153" fg:w="1"/><text x="39.7849%" y="527.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (1 samples, 0.26%)</title><rect x="39.5349%" y="501" width="0.2584%" height="15" fill="rgb(245,58,50)" fg:x="153" fg:w="1"/><text x="39.7849%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.26%)</title><rect x="39.5349%" y="485" width="0.2584%" height="15" fill="rgb(244,68,36)" fg:x="153" fg:w="1"/><text x="39.7849%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Chunks&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.26%)</title><rect x="39.7933%" y="517" width="0.2584%" height="15" fill="rgb(232,229,15)" fg:x="154" fg:w="1"/><text x="40.0433%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.26%)</title><rect x="41.6021%" y="501" width="0.2584%" height="15" fill="rgb(254,30,23)" fg:x="161" fg:w="1"/><text x="41.8521%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.26%)</title><rect x="41.6021%" y="485" width="0.2584%" height="15" fill="rgb(235,160,14)" fg:x="161" fg:w="1"/><text x="41.8521%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.26%)</title><rect x="41.6021%" y="469" width="0.2584%" height="15" fill="rgb(212,155,44)" fg:x="161" fg:w="1"/><text x="41.8521%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.26%)</title><rect x="41.6021%" y="453" width="0.2584%" height="15" fill="rgb(226,2,50)" fg:x="161" fg:w="1"/><text x="41.8521%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.26%)</title><rect x="41.6021%" y="437" width="0.2584%" height="15" fill="rgb(234,177,6)" fg:x="161" fg:w="1"/><text x="41.8521%" y="447.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.26%)</title><rect x="41.6021%" y="421" width="0.2584%" height="15" fill="rgb(217,24,9)" fg:x="161" fg:w="1"/><text x="41.8521%" y="431.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.26%)</title><rect x="41.6021%" y="405" width="0.2584%" height="15" fill="rgb(220,13,46)" fg:x="161" fg:w="1"/><text x="41.8521%" y="415.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.26%)</title><rect x="41.6021%" y="389" width="0.2584%" height="15" fill="rgb(239,221,27)" fg:x="161" fg:w="1"/><text x="41.8521%" y="399.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.26%)</title><rect x="41.6021%" y="373" width="0.2584%" height="15" fill="rgb(222,198,25)" fg:x="161" fg:w="1"/><text x="41.8521%" y="383.50"></text></g><g><title>mi_find_page (1 samples, 0.26%)</title><rect x="41.6021%" y="357" width="0.2584%" height="15" fill="rgb(211,99,13)" fg:x="161" fg:w="1"/><text x="41.8521%" y="367.50"></text></g><g><title>mi_find_free_page (1 samples, 0.26%)</title><rect x="41.6021%" y="341" width="0.2584%" height="15" fill="rgb(232,111,31)" fg:x="161" fg:w="1"/><text x="41.8521%" y="351.50"></text></g><g><title>_mi_page_free_collect (1 samples, 0.26%)</title><rect x="41.6021%" y="325" width="0.2584%" height="15" fill="rgb(245,82,37)" fg:x="161" fg:w="1"/><text x="41.8521%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.26%)</title><rect x="41.8605%" y="501" width="0.2584%" height="15" fill="rgb(227,149,46)" fg:x="162" fg:w="1"/><text x="42.1105%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.26%)</title><rect x="41.8605%" y="485" width="0.2584%" height="15" fill="rgb(218,36,50)" fg:x="162" fg:w="1"/><text x="42.1105%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 3.10%)</title><rect x="40.0517%" y="517" width="3.1008%" height="15" fill="rgb(226,80,48)" fg:x="155" fg:w="12"/><text x="40.3017%" y="527.50">all..</text></g><g><title>core::ptr::write (4 samples, 1.03%)</title><rect x="42.1189%" y="501" width="1.0336%" height="15" fill="rgb(238,224,15)" fg:x="163" fg:w="4"/><text x="42.3689%" y="511.50"></text></g><g><title>miniz_oxide::inflate::core::decompress (3 samples, 0.78%)</title><rect x="43.9276%" y="309" width="0.7752%" height="15" fill="rgb(241,136,10)" fg:x="170" fg:w="3"/><text x="44.1776%" y="319.50"></text></g><g><title>[libc.so.6] (4 samples, 1.03%)</title><rect x="48.3204%" y="293" width="1.0336%" height="15" fill="rgb(208,32,45)" fg:x="187" fg:w="4"/><text x="48.5704%" y="303.50"></text></g><g><title>miniz_oxide::inflate::core::HuffmanTable::lookup (28 samples, 7.24%)</title><rect x="49.3540%" y="293" width="7.2351%" height="15" fill="rgb(207,135,9)" fg:x="191" fg:w="28"/><text x="49.6040%" y="303.50">miniz_oxid..</text></g><g><title>miniz_oxide::inflate::core::HuffmanTable::fast_lookup (21 samples, 5.43%)</title><rect x="51.1628%" y="277" width="5.4264%" height="15" fill="rgb(206,86,44)" fg:x="198" fg:w="21"/><text x="51.4128%" y="287.50">miniz_o..</text></g><g><title>miniz_oxide::inflate::core::apply_match (1 samples, 0.26%)</title><rect x="56.5891%" y="293" width="0.2584%" height="15" fill="rgb(245,177,15)" fg:x="219" fg:w="1"/><text x="56.8391%" y="303.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.26%)</title><rect x="57.1059%" y="261" width="0.2584%" height="15" fill="rgb(206,64,50)" fg:x="221" fg:w="1"/><text x="57.3559%" y="271.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (1 samples, 0.26%)</title><rect x="57.1059%" y="245" width="0.2584%" height="15" fill="rgb(234,36,40)" fg:x="221" fg:w="1"/><text x="57.3559%" y="255.50"></text></g><g><title>miniz_oxide::inflate::core::decompress (1 samples, 0.26%)</title><rect x="57.1059%" y="229" width="0.2584%" height="15" fill="rgb(213,64,8)" fg:x="221" fg:w="1"/><text x="57.3559%" y="239.50"></text></g><g><title>miniz_oxide::inflate::core::fill_bit_buffer (3 samples, 0.78%)</title><rect x="56.8475%" y="293" width="0.7752%" height="15" fill="rgb(210,75,36)" fg:x="220" fg:w="3"/><text x="57.0975%" y="303.50"></text></g><g><title>miniz_oxide::inflate::core::read_u32_le (2 samples, 0.52%)</title><rect x="57.1059%" y="277" width="0.5168%" height="15" fill="rgb(229,88,21)" fg:x="221" fg:w="2"/><text x="57.3559%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::nth (1 samples, 0.26%)</title><rect x="57.3643%" y="261" width="0.2584%" height="15" fill="rgb(252,204,47)" fg:x="222" fg:w="1"/><text x="57.6143%" y="271.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.26%)</title><rect x="57.3643%" y="245" width="0.2584%" height="15" fill="rgb(208,77,27)" fg:x="222" fg:w="1"/><text x="57.6143%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.26%)</title><rect x="57.3643%" y="229" width="0.2584%" height="15" fill="rgb(221,76,26)" fg:x="222" fg:w="1"/><text x="57.6143%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.26%)</title><rect x="57.3643%" y="213" width="0.2584%" height="15" fill="rgb(225,139,18)" fg:x="222" fg:w="1"/><text x="57.6143%" y="223.50"></text></g><g><title>miniz_oxide::inflate::core::transfer (5 samples, 1.29%)</title><rect x="57.6227%" y="293" width="1.2920%" height="15" fill="rgb(230,137,11)" fg:x="223" fg:w="5"/><text x="57.8727%" y="303.50"></text></g><g><title>miniz_oxide::inflate::core::decompress_fast (56 samples, 14.47%)</title><rect x="44.7028%" y="309" width="14.4703%" height="15" fill="rgb(212,28,1)" fg:x="173" fg:w="56"/><text x="44.9528%" y="319.50">miniz_oxide::inflate::..</text></g><g><title>miniz_oxide::inflate::output_buffer::OutputBuffer::write_byte (1 samples, 0.26%)</title><rect x="58.9147%" y="293" width="0.2584%" height="15" fill="rgb(248,164,17)" fg:x="228" fg:w="1"/><text x="59.1647%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.26%)</title><rect x="59.1731%" y="293" width="0.2584%" height="15" fill="rgb(222,171,42)" fg:x="229" fg:w="1"/><text x="59.4231%" y="303.50"></text></g><g><title>miniz_oxide::inflate::core::init_tree (7 samples, 1.81%)</title><rect x="59.1731%" y="309" width="1.8088%" height="15" fill="rgb(243,84,45)" fg:x="229" fg:w="7"/><text x="59.4231%" y="319.50">m..</text></g><g><title>miniz_oxide::inflate::core::memset (6 samples, 1.55%)</title><rect x="59.4315%" y="293" width="1.5504%" height="15" fill="rgb(252,49,23)" fg:x="230" fg:w="6"/><text x="59.6815%" y="303.50"></text></g><g><title>[libc.so.6] (6 samples, 1.55%)</title><rect x="59.4315%" y="277" width="1.5504%" height="15" fill="rgb(215,19,7)" fg:x="230" fg:w="6"/><text x="59.6815%" y="287.50"></text></g><g><title>[unknown] (6 samples, 1.55%)</title><rect x="59.4315%" y="261" width="1.5504%" height="15" fill="rgb(238,81,41)" fg:x="230" fg:w="6"/><text x="59.6815%" y="271.50"></text></g><g><title>[unknown] (5 samples, 1.29%)</title><rect x="59.6899%" y="245" width="1.2920%" height="15" fill="rgb(210,199,37)" fg:x="231" fg:w="5"/><text x="59.9399%" y="255.50"></text></g><g><title>[unknown] (5 samples, 1.29%)</title><rect x="59.6899%" y="229" width="1.2920%" height="15" fill="rgb(244,192,49)" fg:x="231" fg:w="5"/><text x="59.9399%" y="239.50"></text></g><g><title>[unknown] (5 samples, 1.29%)</title><rect x="59.6899%" y="213" width="1.2920%" height="15" fill="rgb(226,211,11)" fg:x="231" fg:w="5"/><text x="59.9399%" y="223.50"></text></g><g><title>[unknown] (5 samples, 1.29%)</title><rect x="59.6899%" y="197" width="1.2920%" height="15" fill="rgb(236,162,54)" fg:x="231" fg:w="5"/><text x="59.9399%" y="207.50"></text></g><g><title>[unknown] (5 samples, 1.29%)</title><rect x="59.6899%" y="181" width="1.2920%" height="15" fill="rgb(220,229,9)" fg:x="231" fg:w="5"/><text x="59.9399%" y="191.50"></text></g><g><title>[unknown] (5 samples, 1.29%)</title><rect x="59.6899%" y="165" width="1.2920%" height="15" fill="rgb(250,87,22)" fg:x="231" fg:w="5"/><text x="59.9399%" y="175.50"></text></g><g><title>[unknown] (4 samples, 1.03%)</title><rect x="59.9483%" y="149" width="1.0336%" height="15" fill="rgb(239,43,17)" fg:x="232" fg:w="4"/><text x="60.1983%" y="159.50"></text></g><g><title>[unknown] (3 samples, 0.78%)</title><rect x="60.2067%" y="133" width="0.7752%" height="15" fill="rgb(231,177,25)" fg:x="233" fg:w="3"/><text x="60.4567%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="60.7235%" y="117" width="0.2584%" height="15" fill="rgb(219,179,1)" fg:x="235" fg:w="1"/><text x="60.9735%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="60.7235%" y="101" width="0.2584%" height="15" fill="rgb(238,219,53)" fg:x="235" fg:w="1"/><text x="60.9735%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="60.7235%" y="85" width="0.2584%" height="15" fill="rgb(232,167,36)" fg:x="235" fg:w="1"/><text x="60.9735%" y="95.50"></text></g><g><title>&lt;adler::algo::U32X4 as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.26%)</title><rect x="60.9819%" y="261" width="0.2584%" height="15" fill="rgb(244,19,51)" fg:x="236" fg:w="1"/><text x="61.2319%" y="271.50"></text></g><g><title>&lt;u32 as core::ops::arith::AddAssign&lt;&amp;u32&gt;&gt;::add_assign (1 samples, 0.26%)</title><rect x="60.9819%" y="245" width="0.2584%" height="15" fill="rgb(224,6,22)" fg:x="236" fg:w="1"/><text x="61.2319%" y="255.50"></text></g><g><title>&lt;u32 as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.26%)</title><rect x="60.9819%" y="229" width="0.2584%" height="15" fill="rgb(224,145,5)" fg:x="236" fg:w="1"/><text x="61.2319%" y="239.50"></text></g><g><title>miniz_oxide::inflate::core::decompress (71 samples, 18.35%)</title><rect x="43.1525%" y="325" width="18.3463%" height="15" fill="rgb(234,130,49)" fg:x="167" fg:w="71"/><text x="43.4025%" y="335.50">miniz_oxide::inflate::core::d..</text></g><g><title>miniz_oxide::shared::update_adler32 (2 samples, 0.52%)</title><rect x="60.9819%" y="309" width="0.5168%" height="15" fill="rgb(254,6,2)" fg:x="236" fg:w="2"/><text x="61.2319%" y="319.50"></text></g><g><title>adler::Adler32::write_slice (2 samples, 0.52%)</title><rect x="60.9819%" y="293" width="0.5168%" height="15" fill="rgb(208,96,46)" fg:x="236" fg:w="2"/><text x="61.2319%" y="303.50"></text></g><g><title>adler::algo::&lt;impl adler::Adler32&gt;::compute (2 samples, 0.52%)</title><rect x="60.9819%" y="277" width="0.5168%" height="15" fill="rgb(239,3,39)" fg:x="236" fg:w="2"/><text x="61.2319%" y="287.50"></text></g><g><title>adler::algo::U32X4::from (1 samples, 0.26%)</title><rect x="61.2403%" y="261" width="0.2584%" height="15" fill="rgb(233,210,1)" fg:x="237" fg:w="1"/><text x="61.4903%" y="271.50"></text></g><g><title>demoparser::parsing::cache::cache_reader::ReadCache::filter_game_events (86 samples, 22.22%)</title><rect x="39.5349%" y="549" width="22.2222%" height="15" fill="rgb(244,137,37)" fg:x="153" fg:w="86"/><text x="39.7849%" y="559.50">demoparser::parsing::cache::cache_r..</text></g><g><title>demoparser::parsing::cache::cache_reader::ReadCache::read_game_events (86 samples, 22.22%)</title><rect x="39.5349%" y="533" width="22.2222%" height="15" fill="rgb(240,136,2)" fg:x="153" fg:w="86"/><text x="39.7849%" y="543.50">demoparser::parsing::cache::cache_r..</text></g><g><title>demoparser::parsing::cache::cache_reader::ReadCache::read_bytes_from_index (72 samples, 18.60%)</title><rect x="43.1525%" y="517" width="18.6047%" height="15" fill="rgb(239,18,37)" fg:x="167" fg:w="72"/><text x="43.4025%" y="527.50">demoparser::parsing::cache::c..</text></g><g><title>demoparser::parsing::cache::cache_reader::ReadCache::decompress_bytes (72 samples, 18.60%)</title><rect x="43.1525%" y="501" width="18.6047%" height="15" fill="rgb(218,185,22)" fg:x="167" fg:w="72"/><text x="43.4025%" y="511.50">demoparser::parsing::cache::c..</text></g><g><title>std::io::Read::read_to_end (72 samples, 18.60%)</title><rect x="43.1525%" y="485" width="18.6047%" height="15" fill="rgb(225,218,4)" fg:x="167" fg:w="72"/><text x="43.4025%" y="495.50">std::io::Read::read_to_end</text></g><g><title>std::io::default_read_to_end (72 samples, 18.60%)</title><rect x="43.1525%" y="469" width="18.6047%" height="15" fill="rgb(230,182,32)" fg:x="167" fg:w="72"/><text x="43.4025%" y="479.50">std::io::default_read_to_end</text></g><g><title>std::io::Read::read_buf (72 samples, 18.60%)</title><rect x="43.1525%" y="453" width="18.6047%" height="15" fill="rgb(242,56,43)" fg:x="167" fg:w="72"/><text x="43.4025%" y="463.50">std::io::Read::read_buf</text></g><g><title>std::io::default_read_buf (72 samples, 18.60%)</title><rect x="43.1525%" y="437" width="18.6047%" height="15" fill="rgb(233,99,24)" fg:x="167" fg:w="72"/><text x="43.4025%" y="447.50">std::io::default_read_buf</text></g><g><title>std::io::Read::read_buf::{{closure}} (72 samples, 18.60%)</title><rect x="43.1525%" y="421" width="18.6047%" height="15" fill="rgb(234,209,42)" fg:x="167" fg:w="72"/><text x="43.4025%" y="431.50">std::io::Read::read_buf::{{cl..</text></g><g><title>&lt;flate2::zlib::bufread::ZlibDecoder&lt;R&gt; as std::io::Read&gt;::read (72 samples, 18.60%)</title><rect x="43.1525%" y="405" width="18.6047%" height="15" fill="rgb(227,7,12)" fg:x="167" fg:w="72"/><text x="43.4025%" y="415.50">&lt;flate2::zlib::bufread::ZlibD..</text></g><g><title>flate2::zio::read (72 samples, 18.60%)</title><rect x="43.1525%" y="389" width="18.6047%" height="15" fill="rgb(245,203,43)" fg:x="167" fg:w="72"/><text x="43.4025%" y="399.50">flate2::zio::read</text></g><g><title>&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (72 samples, 18.60%)</title><rect x="43.1525%" y="373" width="18.6047%" height="15" fill="rgb(238,205,33)" fg:x="167" fg:w="72"/><text x="43.4025%" y="383.50">&lt;flate2::ffi::rust::Inflate a..</text></g><g><title>miniz_oxide::inflate::stream::inflate (72 samples, 18.60%)</title><rect x="43.1525%" y="357" width="18.6047%" height="15" fill="rgb(231,56,7)" fg:x="167" fg:w="72"/><text x="43.4025%" y="367.50">miniz_oxide::inflate::stream:..</text></g><g><title>miniz_oxide::inflate::stream::inflate_loop (72 samples, 18.60%)</title><rect x="43.1525%" y="341" width="18.6047%" height="15" fill="rgb(244,186,29)" fg:x="167" fg:w="72"/><text x="43.4025%" y="351.50">miniz_oxide::inflate::stream:..</text></g><g><title>miniz_oxide::inflate::stream::push_dict_out (1 samples, 0.26%)</title><rect x="61.4987%" y="325" width="0.2584%" height="15" fill="rgb(234,111,31)" fg:x="238" fg:w="1"/><text x="61.7487%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.26%)</title><rect x="61.4987%" y="309" width="0.2584%" height="15" fill="rgb(241,149,10)" fg:x="238" fg:w="1"/><text x="61.7487%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.26%)</title><rect x="61.4987%" y="293" width="0.2584%" height="15" fill="rgb(249,206,44)" fg:x="238" fg:w="1"/><text x="61.7487%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="61.4987%" y="277" width="0.2584%" height="15" fill="rgb(251,153,30)" fg:x="238" fg:w="1"/><text x="61.7487%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.26%)</title><rect x="61.7571%" y="501" width="0.2584%" height="15" fill="rgb(239,152,38)" fg:x="239" fg:w="1"/><text x="62.0071%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.26%)</title><rect x="61.7571%" y="485" width="0.2584%" height="15" fill="rgb(249,139,47)" fg:x="239" fg:w="1"/><text x="62.0071%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.26%)</title><rect x="61.7571%" y="469" width="0.2584%" height="15" fill="rgb(244,64,35)" fg:x="239" fg:w="1"/><text x="62.0071%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.26%)</title><rect x="61.7571%" y="453" width="0.2584%" height="15" fill="rgb(216,46,15)" fg:x="239" fg:w="1"/><text x="62.0071%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.26%)</title><rect x="61.7571%" y="437" width="0.2584%" height="15" fill="rgb(250,74,19)" fg:x="239" fg:w="1"/><text x="62.0071%" y="447.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.26%)</title><rect x="61.7571%" y="421" width="0.2584%" height="15" fill="rgb(249,42,33)" fg:x="239" fg:w="1"/><text x="62.0071%" y="431.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.26%)</title><rect x="61.7571%" y="405" width="0.2584%" height="15" fill="rgb(242,149,17)" fg:x="239" fg:w="1"/><text x="62.0071%" y="415.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.26%)</title><rect x="61.7571%" y="389" width="0.2584%" height="15" fill="rgb(244,29,21)" fg:x="239" fg:w="1"/><text x="62.0071%" y="399.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.26%)</title><rect x="61.7571%" y="373" width="0.2584%" height="15" fill="rgb(220,130,37)" fg:x="239" fg:w="1"/><text x="62.0071%" y="383.50"></text></g><g><title>mi_find_page (1 samples, 0.26%)</title><rect x="61.7571%" y="357" width="0.2584%" height="15" fill="rgb(211,67,2)" fg:x="239" fg:w="1"/><text x="62.0071%" y="367.50"></text></g><g><title>mi_find_free_page (1 samples, 0.26%)</title><rect x="61.7571%" y="341" width="0.2584%" height="15" fill="rgb(235,68,52)" fg:x="239" fg:w="1"/><text x="62.0071%" y="351.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.26%)</title><rect x="61.7571%" y="325" width="0.2584%" height="15" fill="rgb(246,142,3)" fg:x="239" fg:w="1"/><text x="62.0071%" y="335.50"></text></g><g><title>mi_page_fresh (1 samples, 0.26%)</title><rect x="61.7571%" y="309" width="0.2584%" height="15" fill="rgb(241,25,7)" fg:x="239" fg:w="1"/><text x="62.0071%" y="319.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.26%)</title><rect x="61.7571%" y="293" width="0.2584%" height="15" fill="rgb(242,119,39)" fg:x="239" fg:w="1"/><text x="62.0071%" y="303.50"></text></g><g><title>mi_segments_page_alloc (1 samples, 0.26%)</title><rect x="61.7571%" y="277" width="0.2584%" height="15" fill="rgb(241,98,45)" fg:x="239" fg:w="1"/><text x="62.0071%" y="287.50"></text></g><g><title>mi_segments_page_find_and_allocate (1 samples, 0.26%)</title><rect x="61.7571%" y="261" width="0.2584%" height="15" fill="rgb(254,28,30)" fg:x="239" fg:w="1"/><text x="62.0071%" y="271.50"></text></g><g><title>mi_segment_slice_split (1 samples, 0.26%)</title><rect x="61.7571%" y="245" width="0.2584%" height="15" fill="rgb(241,142,54)" fg:x="239" fg:w="1"/><text x="62.0071%" y="255.50"></text></g><g><title>mi_segment_span_free (1 samples, 0.26%)</title><rect x="61.7571%" y="229" width="0.2584%" height="15" fill="rgb(222,85,15)" fg:x="239" fg:w="1"/><text x="62.0071%" y="239.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bytes::ByteReader::get_byte_readers (2 samples, 0.52%)</title><rect x="61.7571%" y="533" width="0.5168%" height="15" fill="rgb(210,85,47)" fg:x="239" fg:w="2"/><text x="62.0071%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.52%)</title><rect x="61.7571%" y="517" width="0.5168%" height="15" fill="rgb(224,206,25)" fg:x="239" fg:w="2"/><text x="62.0071%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.26%)</title><rect x="62.0155%" y="501" width="0.2584%" height="15" fill="rgb(243,201,19)" fg:x="240" fg:w="1"/><text x="62.2655%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.26%)</title><rect x="62.0155%" y="485" width="0.2584%" height="15" fill="rgb(236,59,4)" fg:x="240" fg:w="1"/><text x="62.2655%" y="495.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bytes::ByteReader::read_frame (28 samples, 7.24%)</title><rect x="62.2739%" y="533" width="7.2351%" height="15" fill="rgb(254,179,45)" fg:x="241" fg:w="28"/><text x="62.5239%" y="543.50">demoparser..</text></g><g><title>demoparser::parsing::demo_parsing::read_bytes::ByteReader::read_byte (28 samples, 7.24%)</title><rect x="62.2739%" y="517" width="7.2351%" height="15" fill="rgb(226,14,10)" fg:x="241" fg:w="28"/><text x="62.5239%" y="527.50">demoparser..</text></g><g><title>[unknown] (26 samples, 6.72%)</title><rect x="62.7907%" y="501" width="6.7183%" height="15" fill="rgb(244,27,41)" fg:x="243" fg:w="26"/><text x="63.0407%" y="511.50">[unknown]</text></g><g><title>[unknown] (24 samples, 6.20%)</title><rect x="63.3075%" y="485" width="6.2016%" height="15" fill="rgb(235,35,32)" fg:x="245" fg:w="24"/><text x="63.5575%" y="495.50">[unknown]</text></g><g><title>[unknown] (24 samples, 6.20%)</title><rect x="63.3075%" y="469" width="6.2016%" height="15" fill="rgb(218,68,31)" fg:x="245" fg:w="24"/><text x="63.5575%" y="479.50">[unknown]</text></g><g><title>[unknown] (24 samples, 6.20%)</title><rect x="63.3075%" y="453" width="6.2016%" height="15" fill="rgb(207,120,37)" fg:x="245" fg:w="24"/><text x="63.5575%" y="463.50">[unknown]</text></g><g><title>[unknown] (23 samples, 5.94%)</title><rect x="63.5659%" y="437" width="5.9432%" height="15" fill="rgb(227,98,0)" fg:x="246" fg:w="23"/><text x="63.8159%" y="447.50">[unknown]</text></g><g><title>[unknown] (23 samples, 5.94%)</title><rect x="63.5659%" y="421" width="5.9432%" height="15" fill="rgb(207,7,3)" fg:x="246" fg:w="23"/><text x="63.8159%" y="431.50">[unknown]</text></g><g><title>[unknown] (23 samples, 5.94%)</title><rect x="63.5659%" y="405" width="5.9432%" height="15" fill="rgb(206,98,19)" fg:x="246" fg:w="23"/><text x="63.8159%" y="415.50">[unknown]</text></g><g><title>[unknown] (22 samples, 5.68%)</title><rect x="63.8243%" y="389" width="5.6848%" height="15" fill="rgb(217,5,26)" fg:x="247" fg:w="22"/><text x="64.0743%" y="399.50">[unknow..</text></g><g><title>[unknown] (22 samples, 5.68%)</title><rect x="63.8243%" y="373" width="5.6848%" height="15" fill="rgb(235,190,38)" fg:x="247" fg:w="22"/><text x="64.0743%" y="383.50">[unknow..</text></g><g><title>[unknown] (22 samples, 5.68%)</title><rect x="63.8243%" y="357" width="5.6848%" height="15" fill="rgb(247,86,24)" fg:x="247" fg:w="22"/><text x="64.0743%" y="367.50">[unknow..</text></g><g><title>[unknown] (5 samples, 1.29%)</title><rect x="68.2171%" y="341" width="1.2920%" height="15" fill="rgb(205,101,16)" fg:x="264" fg:w="5"/><text x="68.4671%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.52%)</title><rect x="68.9922%" y="325" width="0.5168%" height="15" fill="rgb(246,168,33)" fg:x="267" fg:w="2"/><text x="69.2422%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.52%)</title><rect x="68.9922%" y="309" width="0.5168%" height="15" fill="rgb(231,114,1)" fg:x="267" fg:w="2"/><text x="69.2422%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="69.2506%" y="293" width="0.2584%" height="15" fill="rgb(207,184,53)" fg:x="268" fg:w="1"/><text x="69.5006%" y="303.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bytes::ByteReader::read_varint (6 samples, 1.55%)</title><rect x="69.5090%" y="501" width="1.5504%" height="15" fill="rgb(224,95,51)" fg:x="269" fg:w="6"/><text x="69.7590%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (2 samples, 0.52%)</title><rect x="71.0594%" y="469" width="0.5168%" height="15" fill="rgb(212,188,45)" fg:x="275" fg:w="2"/><text x="71.3094%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.52%)</title><rect x="71.0594%" y="453" width="0.5168%" height="15" fill="rgb(223,154,38)" fg:x="275" fg:w="2"/><text x="71.3094%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.52%)</title><rect x="71.0594%" y="437" width="0.5168%" height="15" fill="rgb(251,22,52)" fg:x="275" fg:w="2"/><text x="71.3094%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.52%)</title><rect x="71.0594%" y="421" width="0.5168%" height="15" fill="rgb(229,209,22)" fg:x="275" fg:w="2"/><text x="71.3094%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.52%)</title><rect x="71.0594%" y="405" width="0.5168%" height="15" fill="rgb(234,138,34)" fg:x="275" fg:w="2"/><text x="71.3094%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.52%)</title><rect x="71.0594%" y="389" width="0.5168%" height="15" fill="rgb(212,95,11)" fg:x="275" fg:w="2"/><text x="71.3094%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.52%)</title><rect x="71.0594%" y="373" width="0.5168%" height="15" fill="rgb(240,179,47)" fg:x="275" fg:w="2"/><text x="71.3094%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.26%)</title><rect x="71.5762%" y="469" width="0.2584%" height="15" fill="rgb(240,163,11)" fg:x="277" fg:w="1"/><text x="71.8262%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.26%)</title><rect x="71.5762%" y="453" width="0.2584%" height="15" fill="rgb(236,37,12)" fg:x="277" fg:w="1"/><text x="71.8262%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.26%)</title><rect x="71.5762%" y="437" width="0.2584%" height="15" fill="rgb(232,164,16)" fg:x="277" fg:w="1"/><text x="71.8262%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.26%)</title><rect x="71.5762%" y="421" width="0.2584%" height="15" fill="rgb(244,205,15)" fg:x="277" fg:w="1"/><text x="71.8262%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.26%)</title><rect x="71.5762%" y="405" width="0.2584%" height="15" fill="rgb(223,117,47)" fg:x="277" fg:w="1"/><text x="71.8262%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.26%)</title><rect x="71.5762%" y="389" width="0.2584%" height="15" fill="rgb(244,107,35)" fg:x="277" fg:w="1"/><text x="71.8262%" y="399.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.26%)</title><rect x="71.5762%" y="373" width="0.2584%" height="15" fill="rgb(205,140,8)" fg:x="277" fg:w="1"/><text x="71.8262%" y="383.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.26%)</title><rect x="71.5762%" y="357" width="0.2584%" height="15" fill="rgb(228,84,46)" fg:x="277" fg:w="1"/><text x="71.8262%" y="367.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.26%)</title><rect x="71.5762%" y="341" width="0.2584%" height="15" fill="rgb(254,188,9)" fg:x="277" fg:w="1"/><text x="71.8262%" y="351.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.26%)</title><rect x="71.5762%" y="325" width="0.2584%" height="15" fill="rgb(206,112,54)" fg:x="277" fg:w="1"/><text x="71.8262%" y="335.50"></text></g><g><title>mi_find_page (1 samples, 0.26%)</title><rect x="71.5762%" y="309" width="0.2584%" height="15" fill="rgb(216,84,49)" fg:x="277" fg:w="1"/><text x="71.8262%" y="319.50"></text></g><g><title>mi_find_free_page (1 samples, 0.26%)</title><rect x="71.5762%" y="293" width="0.2584%" height="15" fill="rgb(214,194,35)" fg:x="277" fg:w="1"/><text x="71.8262%" y="303.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.26%)</title><rect x="71.5762%" y="277" width="0.2584%" height="15" fill="rgb(249,28,3)" fg:x="277" fg:w="1"/><text x="71.8262%" y="287.50"></text></g><g><title>_mi_heap_collect_retired (1 samples, 0.26%)</title><rect x="71.5762%" y="261" width="0.2584%" height="15" fill="rgb(222,56,52)" fg:x="277" fg:w="1"/><text x="71.8262%" y="271.50"></text></g><g><title>csgoproto::netmessages::CCLCMsg_VoiceData::sequence_bytes (1 samples, 0.26%)</title><rect x="71.8346%" y="469" width="0.2584%" height="15" fill="rgb(245,217,50)" fg:x="278" fg:w="1"/><text x="72.0846%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.26%)</title><rect x="71.8346%" y="453" width="0.2584%" height="15" fill="rgb(213,201,24)" fg:x="278" fg:w="1"/><text x="72.0846%" y="463.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.26%)</title><rect x="72.0930%" y="453" width="0.2584%" height="15" fill="rgb(248,116,28)" fg:x="279" fg:w="1"/><text x="72.3430%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.26%)</title><rect x="72.0930%" y="437" width="0.2584%" height="15" fill="rgb(219,72,43)" fg:x="279" fg:w="1"/><text x="72.3430%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.26%)</title><rect x="72.0930%" y="421" width="0.2584%" height="15" fill="rgb(209,138,14)" fg:x="279" fg:w="1"/><text x="72.3430%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.26%)</title><rect x="72.0930%" y="405" width="0.2584%" height="15" fill="rgb(222,18,33)" fg:x="279" fg:w="1"/><text x="72.3430%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.26%)</title><rect x="72.0930%" y="389" width="0.2584%" height="15" fill="rgb(213,199,7)" fg:x="279" fg:w="1"/><text x="72.3430%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.26%)</title><rect x="72.0930%" y="373" width="0.2584%" height="15" fill="rgb(250,110,10)" fg:x="279" fg:w="1"/><text x="72.3430%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.26%)</title><rect x="72.0930%" y="357" width="0.2584%" height="15" fill="rgb(248,123,6)" fg:x="279" fg:w="1"/><text x="72.3430%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.26%)</title><rect x="72.0930%" y="341" width="0.2584%" height="15" fill="rgb(206,91,31)" fg:x="279" fg:w="1"/><text x="72.3430%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.26%)</title><rect x="72.0930%" y="325" width="0.2584%" height="15" fill="rgb(211,154,13)" fg:x="279" fg:w="1"/><text x="72.3430%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.26%)</title><rect x="72.0930%" y="309" width="0.2584%" height="15" fill="rgb(225,148,7)" fg:x="279" fg:w="1"/><text x="72.3430%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.26%)</title><rect x="72.0930%" y="293" width="0.2584%" height="15" fill="rgb(220,160,43)" fg:x="279" fg:w="1"/><text x="72.3430%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.26%)</title><rect x="72.0930%" y="277" width="0.2584%" height="15" fill="rgb(213,52,39)" fg:x="279" fg:w="1"/><text x="72.3430%" y="287.50"></text></g><g><title>mi_malloc (1 samples, 0.26%)</title><rect x="72.0930%" y="261" width="0.2584%" height="15" fill="rgb(243,137,7)" fg:x="279" fg:w="1"/><text x="72.3430%" y="271.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.26%)</title><rect x="72.0930%" y="245" width="0.2584%" height="15" fill="rgb(230,79,13)" fg:x="279" fg:w="1"/><text x="72.3430%" y="255.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.26%)</title><rect x="72.0930%" y="229" width="0.2584%" height="15" fill="rgb(247,105,23)" fg:x="279" fg:w="1"/><text x="72.3430%" y="239.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.26%)</title><rect x="72.0930%" y="213" width="0.2584%" height="15" fill="rgb(223,179,41)" fg:x="279" fg:w="1"/><text x="72.3430%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.26%)</title><rect x="72.3514%" y="437" width="0.2584%" height="15" fill="rgb(218,9,34)" fg:x="280" fg:w="1"/><text x="72.6014%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.26%)</title><rect x="72.3514%" y="421" width="0.2584%" height="15" fill="rgb(222,106,8)" fg:x="280" fg:w="1"/><text x="72.6014%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.26%)</title><rect x="72.3514%" y="405" width="0.2584%" height="15" fill="rgb(211,220,0)" fg:x="280" fg:w="1"/><text x="72.6014%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 1.03%)</title><rect x="72.3514%" y="453" width="1.0336%" height="15" fill="rgb(229,52,16)" fg:x="280" fg:w="4"/><text x="72.6014%" y="463.50"></text></g><g><title>core::ptr::write (3 samples, 0.78%)</title><rect x="72.6098%" y="437" width="0.7752%" height="15" fill="rgb(212,155,18)" fg:x="281" fg:w="3"/><text x="72.8598%" y="447.50"></text></g><g><title>demoparser::parsing::demo_parsing::game_events::&lt;impl demoparser::parsing::parser::Parser&gt;::gen_name_val_pairs (7 samples, 1.81%)</title><rect x="72.0930%" y="469" width="1.8088%" height="15" fill="rgb(242,21,14)" fg:x="279" fg:w="7"/><text x="72.3430%" y="479.50">d..</text></g><g><title>demoparser::parsing::demo_parsing::game_events::parse_key (2 samples, 0.52%)</title><rect x="73.3850%" y="453" width="0.5168%" height="15" fill="rgb(222,19,48)" fg:x="284" fg:w="2"/><text x="73.6350%" y="463.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.26%)</title><rect x="73.6434%" y="437" width="0.2584%" height="15" fill="rgb(232,45,27)" fg:x="285" fg:w="1"/><text x="73.8934%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.26%)</title><rect x="73.6434%" y="421" width="0.2584%" height="15" fill="rgb(249,103,42)" fg:x="285" fg:w="1"/><text x="73.8934%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.26%)</title><rect x="73.6434%" y="405" width="0.2584%" height="15" fill="rgb(246,81,33)" fg:x="285" fg:w="1"/><text x="73.8934%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.26%)</title><rect x="73.6434%" y="389" width="0.2584%" height="15" fill="rgb(252,33,42)" fg:x="285" fg:w="1"/><text x="73.8934%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.26%)</title><rect x="73.6434%" y="373" width="0.2584%" height="15" fill="rgb(209,212,41)" fg:x="285" fg:w="1"/><text x="73.8934%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.26%)</title><rect x="73.6434%" y="357" width="0.2584%" height="15" fill="rgb(207,154,6)" fg:x="285" fg:w="1"/><text x="73.8934%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.26%)</title><rect x="73.6434%" y="341" width="0.2584%" height="15" fill="rgb(223,64,47)" fg:x="285" fg:w="1"/><text x="73.8934%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.26%)</title><rect x="73.6434%" y="325" width="0.2584%" height="15" fill="rgb(211,161,38)" fg:x="285" fg:w="1"/><text x="73.8934%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.26%)</title><rect x="73.6434%" y="309" width="0.2584%" height="15" fill="rgb(219,138,40)" fg:x="285" fg:w="1"/><text x="73.8934%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.26%)</title><rect x="73.6434%" y="293" width="0.2584%" height="15" fill="rgb(241,228,46)" fg:x="285" fg:w="1"/><text x="73.8934%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.26%)</title><rect x="73.6434%" y="277" width="0.2584%" height="15" fill="rgb(223,209,38)" fg:x="285" fg:w="1"/><text x="73.8934%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.26%)</title><rect x="73.6434%" y="261" width="0.2584%" height="15" fill="rgb(236,164,45)" fg:x="285" fg:w="1"/><text x="73.8934%" y="271.50"></text></g><g><title>mi_malloc (1 samples, 0.26%)</title><rect x="73.6434%" y="245" width="0.2584%" height="15" fill="rgb(231,15,5)" fg:x="285" fg:w="1"/><text x="73.8934%" y="255.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.26%)</title><rect x="73.6434%" y="229" width="0.2584%" height="15" fill="rgb(252,35,15)" fg:x="285" fg:w="1"/><text x="73.8934%" y="239.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.26%)</title><rect x="73.6434%" y="213" width="0.2584%" height="15" fill="rgb(248,181,18)" fg:x="285" fg:w="1"/><text x="73.8934%" y="223.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.26%)</title><rect x="73.6434%" y="197" width="0.2584%" height="15" fill="rgb(233,39,42)" fg:x="285" fg:w="1"/><text x="73.8934%" y="207.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.52%)</title><rect x="73.9018%" y="453" width="0.5168%" height="15" fill="rgb(238,110,33)" fg:x="286" fg:w="2"/><text x="74.1518%" y="463.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::check_eof (1 samples, 0.26%)</title><rect x="74.4186%" y="453" width="0.2584%" height="15" fill="rgb(233,195,10)" fg:x="288" fg:w="1"/><text x="74.6686%" y="463.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::eof (1 samples, 0.26%)</title><rect x="74.4186%" y="437" width="0.2584%" height="15" fill="rgb(254,105,3)" fg:x="288" fg:w="1"/><text x="74.6686%" y="447.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::eof (1 samples, 0.26%)</title><rect x="74.4186%" y="421" width="0.2584%" height="15" fill="rgb(221,225,9)" fg:x="288" fg:w="1"/><text x="74.6686%" y="431.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::remaining_in_buf_len (1 samples, 0.26%)</title><rect x="74.4186%" y="405" width="0.2584%" height="15" fill="rgb(224,227,45)" fg:x="288" fg:w="1"/><text x="74.6686%" y="415.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::remaining_in_buf (1 samples, 0.26%)</title><rect x="74.4186%" y="389" width="0.2584%" height="15" fill="rgb(229,198,43)" fg:x="288" fg:w="1"/><text x="74.6686%" y="399.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::remaining_in_buf (1 samples, 0.26%)</title><rect x="74.4186%" y="373" width="0.2584%" height="15" fill="rgb(206,209,35)" fg:x="288" fg:w="1"/><text x="74.6686%" y="383.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.52%)</title><rect x="74.6770%" y="421" width="0.5168%" height="15" fill="rgb(245,195,53)" fg:x="289" fg:w="2"/><text x="74.9270%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.78%)</title><rect x="75.1938%" y="405" width="0.7752%" height="15" fill="rgb(240,92,26)" fg:x="291" fg:w="3"/><text x="75.4438%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.52%)</title><rect x="75.4522%" y="389" width="0.5168%" height="15" fill="rgb(207,40,23)" fg:x="292" fg:w="2"/><text x="75.7022%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.52%)</title><rect x="75.4522%" y="373" width="0.5168%" height="15" fill="rgb(223,111,35)" fg:x="292" fg:w="2"/><text x="75.7022%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.26%)</title><rect x="75.7106%" y="357" width="0.2584%" height="15" fill="rgb(229,147,28)" fg:x="293" fg:w="1"/><text x="75.9606%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.26%)</title><rect x="75.7106%" y="341" width="0.2584%" height="15" fill="rgb(211,29,28)" fg:x="293" fg:w="1"/><text x="75.9606%" y="351.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.26%)</title><rect x="75.7106%" y="325" width="0.2584%" height="15" fill="rgb(228,72,33)" fg:x="293" fg:w="1"/><text x="75.9606%" y="335.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.26%)</title><rect x="75.7106%" y="309" width="0.2584%" height="15" fill="rgb(205,214,31)" fg:x="293" fg:w="1"/><text x="75.9606%" y="319.50"></text></g><g><title>mi_free (1 samples, 0.26%)</title><rect x="75.7106%" y="293" width="0.2584%" height="15" fill="rgb(224,111,15)" fg:x="293" fg:w="1"/><text x="75.9606%" y="303.50"></text></g><g><title>_mi_segment_page_of (1 samples, 0.26%)</title><rect x="75.7106%" y="277" width="0.2584%" height="15" fill="rgb(253,21,26)" fg:x="293" fg:w="1"/><text x="75.9606%" y="287.50"></text></g><g><title>mi_slice_first (1 samples, 0.26%)</title><rect x="75.7106%" y="261" width="0.2584%" height="15" fill="rgb(245,139,43)" fg:x="293" fg:w="1"/><text x="75.9606%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (14 samples, 3.62%)</title><rect x="75.1938%" y="421" width="3.6176%" height="15" fill="rgb(252,170,7)" fg:x="291" fg:w="14"/><text x="75.4438%" y="431.50">allo..</text></g><g><title>core::ptr::write (11 samples, 2.84%)</title><rect x="75.9690%" y="405" width="2.8424%" height="15" fill="rgb(231,118,14)" fg:x="294" fg:w="11"/><text x="76.2190%" y="415.50">co..</text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_game_event::Key_t as protobuf::message::Message&gt;::new (1 samples, 0.26%)</title><rect x="79.5866%" y="405" width="0.2584%" height="15" fill="rgb(238,83,0)" fg:x="308" fg:w="1"/><text x="79.8366%" y="415.50"></text></g><g><title>csgoproto::netmessages::csvcmsg_game_event::Key_t::new (1 samples, 0.26%)</title><rect x="79.5866%" y="389" width="0.2584%" height="15" fill="rgb(221,39,39)" fg:x="308" fg:w="1"/><text x="79.8366%" y="399.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_game_event::Key_t as core::default::Default&gt;::default (1 samples, 0.26%)</title><rect x="79.5866%" y="373" width="0.2584%" height="15" fill="rgb(222,119,46)" fg:x="308" fg:w="1"/><text x="79.8366%" y="383.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.78%)</title><rect x="81.3953%" y="373" width="0.7752%" height="15" fill="rgb(222,165,49)" fg:x="315" fg:w="3"/><text x="81.6453%" y="383.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int32 (4 samples, 1.03%)</title><rect x="82.1705%" y="373" width="1.0336%" height="15" fill="rgb(219,113,52)" fg:x="318" fg:w="4"/><text x="82.4205%" y="383.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int64 (4 samples, 1.03%)</title><rect x="82.1705%" y="357" width="1.0336%" height="15" fill="rgb(214,7,15)" fg:x="318" fg:w="4"/><text x="82.4205%" y="367.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (4 samples, 1.03%)</title><rect x="82.1705%" y="341" width="1.0336%" height="15" fill="rgb(235,32,4)" fg:x="318" fg:w="4"/><text x="82.4205%" y="351.50"></text></g><g><title>protobuf::varint::decode::decode_varint64 (3 samples, 0.78%)</title><rect x="82.4289%" y="325" width="0.7752%" height="15" fill="rgb(238,90,54)" fg:x="319" fg:w="3"/><text x="82.6789%" y="335.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (3 samples, 0.78%)</title><rect x="82.4289%" y="309" width="0.7752%" height="15" fill="rgb(213,208,19)" fg:x="319" fg:w="3"/><text x="82.6789%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="82.9457%" y="293" width="0.2584%" height="15" fill="rgb(233,156,4)" fg:x="321" fg:w="1"/><text x="83.1957%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="82.9457%" y="277" width="0.2584%" height="15" fill="rgb(207,194,5)" fg:x="321" fg:w="1"/><text x="83.1957%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="82.9457%" y="261" width="0.2584%" height="15" fill="rgb(206,111,30)" fg:x="321" fg:w="1"/><text x="83.1957%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="82.9457%" y="245" width="0.2584%" height="15" fill="rgb(243,70,54)" fg:x="321" fg:w="1"/><text x="83.1957%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="82.9457%" y="229" width="0.2584%" height="15" fill="rgb(242,28,8)" fg:x="321" fg:w="1"/><text x="83.1957%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="82.9457%" y="213" width="0.2584%" height="15" fill="rgb(219,106,18)" fg:x="321" fg:w="1"/><text x="83.1957%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="82.9457%" y="197" width="0.2584%" height="15" fill="rgb(244,222,10)" fg:x="321" fg:w="1"/><text x="83.1957%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="82.9457%" y="181" width="0.2584%" height="15" fill="rgb(236,179,52)" fg:x="321" fg:w="1"/><text x="83.1957%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="82.9457%" y="165" width="0.2584%" height="15" fill="rgb(213,23,39)" fg:x="321" fg:w="1"/><text x="83.1957%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="82.9457%" y="149" width="0.2584%" height="15" fill="rgb(238,48,10)" fg:x="321" fg:w="1"/><text x="83.1957%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="82.9457%" y="133" width="0.2584%" height="15" fill="rgb(251,196,23)" fg:x="321" fg:w="1"/><text x="83.1957%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="82.9457%" y="117" width="0.2584%" height="15" fill="rgb(250,152,24)" fg:x="321" fg:w="1"/><text x="83.1957%" y="127.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::eof (1 samples, 0.26%)</title><rect x="84.2377%" y="341" width="0.2584%" height="15" fill="rgb(209,150,17)" fg:x="326" fg:w="1"/><text x="84.4877%" y="351.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::eof (1 samples, 0.26%)</title><rect x="84.2377%" y="325" width="0.2584%" height="15" fill="rgb(234,202,34)" fg:x="326" fg:w="1"/><text x="84.4877%" y="335.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::fill_buf (1 samples, 0.26%)</title><rect x="84.2377%" y="309" width="0.2584%" height="15" fill="rgb(253,148,53)" fg:x="326" fg:w="1"/><text x="84.4877%" y="319.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::pos (1 samples, 0.26%)</title><rect x="84.2377%" y="293" width="0.2584%" height="15" fill="rgb(218,129,16)" fg:x="326" fg:w="1"/><text x="84.4877%" y="303.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::pos_within_buf (1 samples, 0.26%)</title><rect x="84.2377%" y="277" width="0.2584%" height="15" fill="rgb(216,85,19)" fg:x="326" fg:w="1"/><text x="84.4877%" y="287.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::consume (2 samples, 0.52%)</title><rect x="84.4961%" y="341" width="0.5168%" height="15" fill="rgb(235,228,7)" fg:x="327" fg:w="2"/><text x="84.7461%" y="351.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::consume (2 samples, 0.52%)</title><rect x="84.4961%" y="325" width="0.5168%" height="15" fill="rgb(245,175,0)" fg:x="327" fg:w="2"/><text x="84.7461%" y="335.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::remaining_in_buf (1 samples, 0.26%)</title><rect x="85.0129%" y="341" width="0.2584%" height="15" fill="rgb(208,168,36)" fg:x="329" fg:w="1"/><text x="85.2629%" y="351.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (1 samples, 0.26%)</title><rect x="85.0129%" y="325" width="0.2584%" height="15" fill="rgb(246,171,24)" fg:x="329" fg:w="1"/><text x="85.2629%" y="335.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (9 samples, 2.33%)</title><rect x="83.2041%" y="373" width="2.3256%" height="15" fill="rgb(215,142,24)" fg:x="322" fg:w="9"/><text x="83.4541%" y="383.50">p..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (9 samples, 2.33%)</title><rect x="83.2041%" y="357" width="2.3256%" height="15" fill="rgb(250,187,7)" fg:x="322" fg:w="9"/><text x="83.4541%" y="367.50">p..</text></g><g><title>protobuf::varint::decode::decode_varint32 (1 samples, 0.26%)</title><rect x="85.2713%" y="341" width="0.2584%" height="15" fill="rgb(228,66,33)" fg:x="330" fg:w="1"/><text x="85.5213%" y="351.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (1 samples, 0.26%)</title><rect x="85.2713%" y="325" width="0.2584%" height="15" fill="rgb(234,215,21)" fg:x="330" fg:w="1"/><text x="85.5213%" y="335.50"></text></g><g><title>&lt;u32 as protobuf::varint::decode::DecodeVarint&gt;::from_u64 (1 samples, 0.26%)</title><rect x="85.2713%" y="309" width="0.2584%" height="15" fill="rgb(222,191,20)" fg:x="330" fg:w="1"/><text x="85.5213%" y="319.50"></text></g><g><title>alloc::string::String::from_utf8 (1 samples, 0.26%)</title><rect x="85.7881%" y="341" width="0.2584%" height="15" fill="rgb(245,79,54)" fg:x="332" fg:w="1"/><text x="86.0381%" y="351.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.26%)</title><rect x="85.7881%" y="325" width="0.2584%" height="15" fill="rgb(240,10,37)" fg:x="332" fg:w="1"/><text x="86.0381%" y="335.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.26%)</title><rect x="85.7881%" y="309" width="0.2584%" height="15" fill="rgb(214,192,32)" fg:x="332" fg:w="1"/><text x="86.0381%" y="319.50"></text></g><g><title>core::mem::replace (1 samples, 0.26%)</title><rect x="86.0465%" y="341" width="0.2584%" height="15" fill="rgb(209,36,54)" fg:x="333" fg:w="1"/><text x="86.2965%" y="351.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (1 samples, 0.26%)</title><rect x="86.3049%" y="325" width="0.2584%" height="15" fill="rgb(220,10,11)" fg:x="334" fg:w="1"/><text x="86.5549%" y="335.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (1 samples, 0.26%)</title><rect x="86.3049%" y="309" width="0.2584%" height="15" fill="rgb(221,106,17)" fg:x="334" fg:w="1"/><text x="86.5549%" y="319.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact (1 samples, 0.26%)</title><rect x="86.3049%" y="293" width="0.2584%" height="15" fill="rgb(251,142,44)" fg:x="334" fg:w="1"/><text x="86.5549%" y="303.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::read_bytes (1 samples, 0.26%)</title><rect x="86.3049%" y="277" width="0.2584%" height="15" fill="rgb(238,13,15)" fg:x="334" fg:w="1"/><text x="86.5549%" y="287.50"></text></g><g><title>protobuf::misc::maybe_uninit_write_slice (1 samples, 0.26%)</title><rect x="86.3049%" y="261" width="0.2584%" height="15" fill="rgb(208,107,27)" fg:x="334" fg:w="1"/><text x="86.5549%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.26%)</title><rect x="86.3049%" y="245" width="0.2584%" height="15" fill="rgb(205,136,37)" fg:x="334" fg:w="1"/><text x="86.5549%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.26%)</title><rect x="86.3049%" y="229" width="0.2584%" height="15" fill="rgb(250,205,27)" fg:x="334" fg:w="1"/><text x="86.5549%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="86.3049%" y="213" width="0.2584%" height="15" fill="rgb(210,80,43)" fg:x="334" fg:w="1"/><text x="86.5549%" y="223.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_game_event::Key_t as protobuf::message::Message&gt;::merge_from (26 samples, 6.72%)</title><rect x="80.1034%" y="389" width="6.7183%" height="15" fill="rgb(247,160,36)" fg:x="310" fg:w="26"/><text x="80.3534%" y="399.50">&lt;csgoprot..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string (5 samples, 1.29%)</title><rect x="85.5297%" y="373" width="1.2920%" height="15" fill="rgb(234,13,49)" fg:x="331" fg:w="5"/><text x="85.7797%" y="383.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string_into (5 samples, 1.29%)</title><rect x="85.5297%" y="357" width="1.2920%" height="15" fill="rgb(234,122,0)" fg:x="331" fg:w="5"/><text x="85.7797%" y="367.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (2 samples, 0.52%)</title><rect x="86.3049%" y="341" width="0.5168%" height="15" fill="rgb(207,146,38)" fg:x="334" fg:w="2"/><text x="86.5549%" y="351.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32 (1 samples, 0.26%)</title><rect x="86.5633%" y="325" width="0.2584%" height="15" fill="rgb(207,177,25)" fg:x="335" fg:w="1"/><text x="86.8133%" y="335.50"></text></g><g><title>protobuf::varint::decode::decode_varint32 (1 samples, 0.26%)</title><rect x="86.5633%" y="309" width="0.2584%" height="15" fill="rgb(211,178,42)" fg:x="335" fg:w="1"/><text x="86.8133%" y="319.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (1 samples, 0.26%)</title><rect x="86.5633%" y="293" width="0.2584%" height="15" fill="rgb(230,69,54)" fg:x="335" fg:w="1"/><text x="86.8133%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="86.5633%" y="277" width="0.2584%" height="15" fill="rgb(214,135,41)" fg:x="335" fg:w="1"/><text x="86.8133%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="86.5633%" y="261" width="0.2584%" height="15" fill="rgb(237,67,25)" fg:x="335" fg:w="1"/><text x="86.8133%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="86.5633%" y="245" width="0.2584%" height="15" fill="rgb(222,189,50)" fg:x="335" fg:w="1"/><text x="86.8133%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="86.5633%" y="229" width="0.2584%" height="15" fill="rgb(245,148,34)" fg:x="335" fg:w="1"/><text x="86.8133%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="86.5633%" y="213" width="0.2584%" height="15" fill="rgb(222,29,6)" fg:x="335" fg:w="1"/><text x="86.8133%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="86.5633%" y="197" width="0.2584%" height="15" fill="rgb(221,189,43)" fg:x="335" fg:w="1"/><text x="86.8133%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="86.5633%" y="181" width="0.2584%" height="15" fill="rgb(207,36,27)" fg:x="335" fg:w="1"/><text x="86.8133%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="86.5633%" y="165" width="0.2584%" height="15" fill="rgb(217,90,24)" fg:x="335" fg:w="1"/><text x="86.8133%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="86.5633%" y="149" width="0.2584%" height="15" fill="rgb(224,66,35)" fg:x="335" fg:w="1"/><text x="86.8133%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="86.5633%" y="133" width="0.2584%" height="15" fill="rgb(221,13,50)" fg:x="335" fg:w="1"/><text x="86.8133%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;protobuf::coded_input_stream::CodedInputStream::merge_message::DecrRecursion&gt; (1 samples, 0.26%)</title><rect x="86.8217%" y="389" width="0.2584%" height="15" fill="rgb(236,68,49)" fg:x="336" fg:w="1"/><text x="87.0717%" y="399.50"></text></g><g><title>&lt;protobuf::coded_input_stream::CodedInputStream::merge_message::DecrRecursion as core::ops::drop::Drop&gt;::drop (1 samples, 0.26%)</title><rect x="86.8217%" y="373" width="0.2584%" height="15" fill="rgb(229,146,28)" fg:x="336" fg:w="1"/><text x="87.0717%" y="383.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::pop_limit (3 samples, 0.78%)</title><rect x="87.0801%" y="389" width="0.7752%" height="15" fill="rgb(225,31,38)" fg:x="337" fg:w="3"/><text x="87.3301%" y="399.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::pop_limit (3 samples, 0.78%)</title><rect x="87.0801%" y="373" width="0.7752%" height="15" fill="rgb(250,208,3)" fg:x="337" fg:w="3"/><text x="87.3301%" y="383.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::update_limit_within_buf (2 samples, 0.52%)</title><rect x="87.3385%" y="357" width="0.5168%" height="15" fill="rgb(246,54,23)" fg:x="338" fg:w="2"/><text x="87.5885%" y="367.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::update_limit (2 samples, 0.52%)</title><rect x="87.3385%" y="341" width="0.5168%" height="15" fill="rgb(243,76,11)" fg:x="338" fg:w="2"/><text x="87.5885%" y="351.50"></text></g><g><title>core::cmp::min (2 samples, 0.52%)</title><rect x="87.3385%" y="325" width="0.5168%" height="15" fill="rgb(245,21,50)" fg:x="338" fg:w="2"/><text x="87.5885%" y="335.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::pop_limit (2 samples, 0.52%)</title><rect x="87.3385%" y="309" width="0.5168%" height="15" fill="rgb(228,9,43)" fg:x="338" fg:w="2"/><text x="87.5885%" y="319.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::consume (1 samples, 0.26%)</title><rect x="88.6305%" y="373" width="0.2584%" height="15" fill="rgb(208,100,47)" fg:x="343" fg:w="1"/><text x="88.8805%" y="383.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::consume (1 samples, 0.26%)</title><rect x="88.6305%" y="357" width="0.2584%" height="15" fill="rgb(232,26,8)" fg:x="343" fg:w="1"/><text x="88.8805%" y="367.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_message (40 samples, 10.34%)</title><rect x="78.8114%" y="421" width="10.3359%" height="15" fill="rgb(216,166,38)" fg:x="305" fg:w="40"/><text x="79.0614%" y="431.50">protobuf::coded..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::merge_message (36 samples, 9.30%)</title><rect x="79.8450%" y="405" width="9.3023%" height="15" fill="rgb(251,202,51)" fg:x="309" fg:w="36"/><text x="80.0950%" y="415.50">protobuf::cod..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (5 samples, 1.29%)</title><rect x="87.8553%" y="389" width="1.2920%" height="15" fill="rgb(254,216,34)" fg:x="340" fg:w="5"/><text x="88.1053%" y="399.50"></text></g><g><title>protobuf::varint::decode::decode_varint64 (1 samples, 0.26%)</title><rect x="88.8889%" y="373" width="0.2584%" height="15" fill="rgb(251,32,27)" fg:x="344" fg:w="1"/><text x="89.1389%" y="383.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (1 samples, 0.26%)</title><rect x="88.8889%" y="357" width="0.2584%" height="15" fill="rgb(208,127,28)" fg:x="344" fg:w="1"/><text x="89.1389%" y="367.50"></text></g><g><title>&lt;u64 as protobuf::varint::decode::DecodeVarint&gt;::from_u64 (1 samples, 0.26%)</title><rect x="88.8889%" y="341" width="0.2584%" height="15" fill="rgb(224,137,22)" fg:x="344" fg:w="1"/><text x="89.1389%" y="351.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::eof (1 samples, 0.26%)</title><rect x="90.1809%" y="389" width="0.2584%" height="15" fill="rgb(254,70,32)" fg:x="349" fg:w="1"/><text x="90.4309%" y="399.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::eof (1 samples, 0.26%)</title><rect x="90.1809%" y="373" width="0.2584%" height="15" fill="rgb(229,75,37)" fg:x="349" fg:w="1"/><text x="90.4309%" y="383.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::fill_buf (1 samples, 0.26%)</title><rect x="90.1809%" y="357" width="0.2584%" height="15" fill="rgb(252,64,23)" fg:x="349" fg:w="1"/><text x="90.4309%" y="367.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::fill_buf_slow (1 samples, 0.26%)</title><rect x="90.1809%" y="341" width="0.2584%" height="15" fill="rgb(232,162,48)" fg:x="349" fg:w="1"/><text x="90.4309%" y="351.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::remaining_in_buf (1 samples, 0.26%)</title><rect x="90.4393%" y="389" width="0.2584%" height="15" fill="rgb(246,160,12)" fg:x="350" fg:w="1"/><text x="90.6893%" y="399.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::remaining_in_buf (1 samples, 0.26%)</title><rect x="90.4393%" y="373" width="0.2584%" height="15" fill="rgb(247,166,0)" fg:x="350" fg:w="1"/><text x="90.6893%" y="383.50"></text></g><g><title>protobuf::message::Message::parse_from (63 samples, 16.28%)</title><rect x="74.6770%" y="453" width="16.2791%" height="15" fill="rgb(249,219,21)" fg:x="289" fg:w="63"/><text x="74.9270%" y="463.50">protobuf::message::Messag..</text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_GameEvent as protobuf::message::Message&gt;::merge_from (63 samples, 16.28%)</title><rect x="74.6770%" y="437" width="16.2791%" height="15" fill="rgb(205,209,3)" fg:x="289" fg:w="63"/><text x="74.9270%" y="447.50">&lt;csgoproto::netmessages::..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (7 samples, 1.81%)</title><rect x="89.1473%" y="421" width="1.8088%" height="15" fill="rgb(243,44,1)" fg:x="345" fg:w="7"/><text x="89.3973%" y="431.50">p..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (7 samples, 1.81%)</title><rect x="89.1473%" y="405" width="1.8088%" height="15" fill="rgb(206,159,16)" fg:x="345" fg:w="7"/><text x="89.3973%" y="415.50">p..</text></g><g><title>protobuf::varint::decode::decode_varint32 (1 samples, 0.26%)</title><rect x="90.6977%" y="389" width="0.2584%" height="15" fill="rgb(244,77,30)" fg:x="351" fg:w="1"/><text x="90.9477%" y="399.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (1 samples, 0.26%)</title><rect x="90.6977%" y="373" width="0.2584%" height="15" fill="rgb(218,69,12)" fg:x="351" fg:w="1"/><text x="90.9477%" y="383.50"></text></g><g><title>&lt;u32 as protobuf::varint::decode::DecodeVarint&gt;::from_u64 (1 samples, 0.26%)</title><rect x="90.6977%" y="357" width="0.2584%" height="15" fill="rgb(212,87,7)" fg:x="351" fg:w="1"/><text x="90.9477%" y="367.50"></text></g><g><title>demoparser::parsing::demo_parsing::game_events::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_game_event (78 samples, 20.16%)</title><rect x="71.0594%" y="485" width="20.1550%" height="15" fill="rgb(245,114,25)" fg:x="275" fg:w="78"/><text x="71.3094%" y="495.50">demoparser::parsing::demo_parsin..</text></g><g><title>protobuf::message::Message::parse_from_bytes (67 samples, 17.31%)</title><rect x="73.9018%" y="469" width="17.3127%" height="15" fill="rgb(210,61,42)" fg:x="286" fg:w="67"/><text x="74.1518%" y="479.50">protobuf::message::Message:..</text></g><g><title>protobuf::message::Message::parse_from_bytes (1 samples, 0.26%)</title><rect x="90.9561%" y="453" width="0.2584%" height="15" fill="rgb(211,52,33)" fg:x="352" fg:w="1"/><text x="91.2061%" y="463.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (115 samples, 29.72%)</title><rect x="61.7571%" y="549" width="29.7158%" height="15" fill="rgb(234,58,33)" fg:x="239" fg:w="115"/><text x="62.0071%" y="559.50">demoparser::parsing::parser::Parser::parse_bytes</text></g><g><title>demoparser::parsing::parser::Parser::parse_cmd (85 samples, 21.96%)</title><rect x="69.5090%" y="533" width="21.9638%" height="15" fill="rgb(220,115,36)" fg:x="269" fg:w="85"/><text x="69.7590%" y="543.50">demoparser::parsing::parser::Parser..</text></g><g><title>demoparser::parsing::parser::Parser::messages_from_packet (85 samples, 21.96%)</title><rect x="69.5090%" y="517" width="21.9638%" height="15" fill="rgb(243,153,54)" fg:x="269" fg:w="85"/><text x="69.7590%" y="527.50">demoparser::parsing::parser::Parser..</text></g><g><title>demoparser::parsing::parser::Parser::msg_handler (79 samples, 20.41%)</title><rect x="71.0594%" y="501" width="20.4134%" height="15" fill="rgb(251,47,18)" fg:x="275" fg:w="79"/><text x="71.3094%" y="511.50">demoparser::parsing::parser::Par..</text></g><g><title>demoparser::parsing::demo_parsing::read_bytes::ByteReader::skip_n_bytes (1 samples, 0.26%)</title><rect x="91.2145%" y="485" width="0.2584%" height="15" fill="rgb(242,102,42)" fg:x="353" fg:w="1"/><text x="91.4645%" y="495.50"></text></g><g><title>flate2::zlib::bufread::ZlibDecoder&lt;R&gt;::new (1 samples, 0.26%)</title><rect x="91.4729%" y="485" width="0.2584%" height="15" fill="rgb(234,31,38)" fg:x="354" fg:w="1"/><text x="91.7229%" y="495.50"></text></g><g><title>flate2::mem::Decompress::new (1 samples, 0.26%)</title><rect x="91.4729%" y="469" width="0.2584%" height="15" fill="rgb(221,117,51)" fg:x="354" fg:w="1"/><text x="91.7229%" y="479.50"></text></g><g><title>&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::make (1 samples, 0.26%)</title><rect x="91.4729%" y="453" width="0.2584%" height="15" fill="rgb(212,20,18)" fg:x="354" fg:w="1"/><text x="91.7229%" y="463.50"></text></g><g><title>miniz_oxide::inflate::stream::InflateState::new_boxed (1 samples, 0.26%)</title><rect x="91.4729%" y="437" width="0.2584%" height="15" fill="rgb(245,133,36)" fg:x="354" fg:w="1"/><text x="91.7229%" y="447.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::default::Default&gt;::default (1 samples, 0.26%)</title><rect x="91.4729%" y="421" width="0.2584%" height="15" fill="rgb(212,6,19)" fg:x="354" fg:w="1"/><text x="91.7229%" y="431.50"></text></g><g><title>&lt;miniz_oxide::inflate::stream::InflateState as core::default::Default&gt;::default (1 samples, 0.26%)</title><rect x="91.4729%" y="405" width="0.2584%" height="15" fill="rgb(218,1,36)" fg:x="354" fg:w="1"/><text x="91.7229%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.26%)</title><rect x="91.4729%" y="389" width="0.2584%" height="15" fill="rgb(246,84,54)" fg:x="354" fg:w="1"/><text x="91.7229%" y="399.50"></text></g><g><title>demoparser::parsing::cache::cache_reader::ReadCache::get_eid_cls_map (2 samples, 0.52%)</title><rect x="91.4729%" y="533" width="0.5168%" height="15" fill="rgb(242,110,6)" fg:x="354" fg:w="2"/><text x="91.7229%" y="543.50"></text></g><g><title>demoparser::parsing::cache::cache_reader::ReadCache::read_bytes_from_index (2 samples, 0.52%)</title><rect x="91.4729%" y="517" width="0.5168%" height="15" fill="rgb(214,47,5)" fg:x="354" fg:w="2"/><text x="91.7229%" y="527.50"></text></g><g><title>demoparser::parsing::cache::cache_reader::ReadCache::decompress_bytes (2 samples, 0.52%)</title><rect x="91.4729%" y="501" width="0.5168%" height="15" fill="rgb(218,159,25)" fg:x="354" fg:w="2"/><text x="91.7229%" y="511.50"></text></g><g><title>std::io::Read::read_to_end (1 samples, 0.26%)</title><rect x="91.7313%" y="485" width="0.2584%" height="15" fill="rgb(215,211,28)" fg:x="355" fg:w="1"/><text x="91.9813%" y="495.50"></text></g><g><title>std::io::default_read_to_end (1 samples, 0.26%)</title><rect x="91.7313%" y="469" width="0.2584%" height="15" fill="rgb(238,59,32)" fg:x="355" fg:w="1"/><text x="91.9813%" y="479.50"></text></g><g><title>std::io::Read::read_buf (1 samples, 0.26%)</title><rect x="91.7313%" y="453" width="0.2584%" height="15" fill="rgb(226,82,3)" fg:x="355" fg:w="1"/><text x="91.9813%" y="463.50"></text></g><g><title>std::io::default_read_buf (1 samples, 0.26%)</title><rect x="91.7313%" y="437" width="0.2584%" height="15" fill="rgb(240,164,32)" fg:x="355" fg:w="1"/><text x="91.9813%" y="447.50"></text></g><g><title>std::io::Read::read_buf::{{closure}} (1 samples, 0.26%)</title><rect x="91.7313%" y="421" width="0.2584%" height="15" fill="rgb(232,46,7)" fg:x="355" fg:w="1"/><text x="91.9813%" y="431.50"></text></g><g><title>&lt;flate2::zlib::bufread::ZlibDecoder&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.26%)</title><rect x="91.7313%" y="405" width="0.2584%" height="15" fill="rgb(229,129,53)" fg:x="355" fg:w="1"/><text x="91.9813%" y="415.50"></text></g><g><title>flate2::zio::read (1 samples, 0.26%)</title><rect x="91.7313%" y="389" width="0.2584%" height="15" fill="rgb(234,188,29)" fg:x="355" fg:w="1"/><text x="91.9813%" y="399.50"></text></g><g><title>&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (1 samples, 0.26%)</title><rect x="91.7313%" y="373" width="0.2584%" height="15" fill="rgb(246,141,4)" fg:x="355" fg:w="1"/><text x="91.9813%" y="383.50"></text></g><g><title>miniz_oxide::inflate::stream::inflate (1 samples, 0.26%)</title><rect x="91.7313%" y="357" width="0.2584%" height="15" fill="rgb(229,23,39)" fg:x="355" fg:w="1"/><text x="91.9813%" y="367.50"></text></g><g><title>miniz_oxide::inflate::stream::inflate_loop (1 samples, 0.26%)</title><rect x="91.7313%" y="341" width="0.2584%" height="15" fill="rgb(206,12,3)" fg:x="355" fg:w="1"/><text x="91.9813%" y="351.50"></text></g><g><title>miniz_oxide::inflate::core::decompress (1 samples, 0.26%)</title><rect x="91.7313%" y="325" width="0.2584%" height="15" fill="rgb(252,226,20)" fg:x="355" fg:w="1"/><text x="91.9813%" y="335.50"></text></g><g><title>miniz_oxide::inflate::core::init_tree (1 samples, 0.26%)</title><rect x="91.7313%" y="309" width="0.2584%" height="15" fill="rgb(216,123,35)" fg:x="355" fg:w="1"/><text x="91.9813%" y="319.50"></text></g><g><title>demoparser::parsing::cache::cache_reader::ReadCache::read_dt_ge_map (1 samples, 0.26%)</title><rect x="91.9897%" y="533" width="0.2584%" height="15" fill="rgb(212,68,40)" fg:x="356" fg:w="1"/><text x="92.2397%" y="543.50"></text></g><g><title>demoparser::parsing::cache::cache_reader::ReadCache::read_bytes_from_index (1 samples, 0.26%)</title><rect x="91.9897%" y="517" width="0.2584%" height="15" fill="rgb(254,125,32)" fg:x="356" fg:w="1"/><text x="92.2397%" y="527.50"></text></g><g><title>demoparser::parsing::cache::cache_reader::ReadCache::decompress_bytes (1 samples, 0.26%)</title><rect x="91.9897%" y="501" width="0.2584%" height="15" fill="rgb(253,97,22)" fg:x="356" fg:w="1"/><text x="92.2397%" y="511.50"></text></g><g><title>std::io::Read::read_to_end (1 samples, 0.26%)</title><rect x="91.9897%" y="485" width="0.2584%" height="15" fill="rgb(241,101,14)" fg:x="356" fg:w="1"/><text x="92.2397%" y="495.50"></text></g><g><title>std::io::default_read_to_end (1 samples, 0.26%)</title><rect x="91.9897%" y="469" width="0.2584%" height="15" fill="rgb(238,103,29)" fg:x="356" fg:w="1"/><text x="92.2397%" y="479.50"></text></g><g><title>std::io::Read::read_buf (1 samples, 0.26%)</title><rect x="91.9897%" y="453" width="0.2584%" height="15" fill="rgb(233,195,47)" fg:x="356" fg:w="1"/><text x="92.2397%" y="463.50"></text></g><g><title>std::io::default_read_buf (1 samples, 0.26%)</title><rect x="91.9897%" y="437" width="0.2584%" height="15" fill="rgb(246,218,30)" fg:x="356" fg:w="1"/><text x="92.2397%" y="447.50"></text></g><g><title>std::io::Read::read_buf::{{closure}} (1 samples, 0.26%)</title><rect x="91.9897%" y="421" width="0.2584%" height="15" fill="rgb(219,145,47)" fg:x="356" fg:w="1"/><text x="92.2397%" y="431.50"></text></g><g><title>&lt;flate2::zlib::bufread::ZlibDecoder&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.26%)</title><rect x="91.9897%" y="405" width="0.2584%" height="15" fill="rgb(243,12,26)" fg:x="356" fg:w="1"/><text x="92.2397%" y="415.50"></text></g><g><title>flate2::zio::read (1 samples, 0.26%)</title><rect x="91.9897%" y="389" width="0.2584%" height="15" fill="rgb(214,87,16)" fg:x="356" fg:w="1"/><text x="92.2397%" y="399.50"></text></g><g><title>&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (1 samples, 0.26%)</title><rect x="91.9897%" y="373" width="0.2584%" height="15" fill="rgb(208,99,42)" fg:x="356" fg:w="1"/><text x="92.2397%" y="383.50"></text></g><g><title>miniz_oxide::inflate::stream::inflate (1 samples, 0.26%)</title><rect x="91.9897%" y="357" width="0.2584%" height="15" fill="rgb(253,99,2)" fg:x="356" fg:w="1"/><text x="92.2397%" y="367.50"></text></g><g><title>miniz_oxide::inflate::stream::inflate_loop (1 samples, 0.26%)</title><rect x="91.9897%" y="341" width="0.2584%" height="15" fill="rgb(220,168,23)" fg:x="356" fg:w="1"/><text x="92.2397%" y="351.50"></text></g><g><title>miniz_oxide::inflate::core::decompress (1 samples, 0.26%)</title><rect x="91.9897%" y="325" width="0.2584%" height="15" fill="rgb(242,38,24)" fg:x="356" fg:w="1"/><text x="92.2397%" y="335.50"></text></g><g><title>miniz_oxide::inflate::core::read_bits (1 samples, 0.26%)</title><rect x="91.9897%" y="309" width="0.2584%" height="15" fill="rgb(225,182,9)" fg:x="356" fg:w="1"/><text x="92.2397%" y="319.50"></text></g><g><title>miniz_oxide::inflate::core::decompress::{{closure}} (1 samples, 0.26%)</title><rect x="91.9897%" y="293" width="0.2584%" height="15" fill="rgb(243,178,37)" fg:x="356" fg:w="1"/><text x="92.2397%" y="303.50"></text></g><g><title>miniz_oxide::inflate::core::init_tree (1 samples, 0.26%)</title><rect x="91.9897%" y="277" width="0.2584%" height="15" fill="rgb(232,139,19)" fg:x="356" fg:w="1"/><text x="92.2397%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.26%)</title><rect x="92.2481%" y="485" width="0.2584%" height="15" fill="rgb(225,201,24)" fg:x="357" fg:w="1"/><text x="92.4981%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.26%)</title><rect x="92.2481%" y="469" width="0.2584%" height="15" fill="rgb(221,47,46)" fg:x="357" fg:w="1"/><text x="92.4981%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.26%)</title><rect x="92.2481%" y="453" width="0.2584%" height="15" fill="rgb(249,23,13)" fg:x="357" fg:w="1"/><text x="92.4981%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.26%)</title><rect x="92.2481%" y="437" width="0.2584%" height="15" fill="rgb(219,9,5)" fg:x="357" fg:w="1"/><text x="92.4981%" y="447.50"></text></g><g><title>demoparser::parsing::cache::cache_reader::ReadCache::read_index (2 samples, 0.52%)</title><rect x="92.2481%" y="533" width="0.5168%" height="15" fill="rgb(254,171,16)" fg:x="357" fg:w="2"/><text x="92.4981%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (2 samples, 0.52%)</title><rect x="92.2481%" y="517" width="0.5168%" height="15" fill="rgb(230,171,20)" fg:x="357" fg:w="2"/><text x="92.4981%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.52%)</title><rect x="92.2481%" y="501" width="0.5168%" height="15" fill="rgb(210,71,41)" fg:x="357" fg:w="2"/><text x="92.4981%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.26%)</title><rect x="92.5065%" y="485" width="0.2584%" height="15" fill="rgb(206,173,20)" fg:x="358" fg:w="1"/><text x="92.7565%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.26%)</title><rect x="92.5065%" y="469" width="0.2584%" height="15" fill="rgb(233,88,34)" fg:x="358" fg:w="1"/><text x="92.7565%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.26%)</title><rect x="92.5065%" y="453" width="0.2584%" height="15" fill="rgb(223,209,46)" fg:x="358" fg:w="1"/><text x="92.7565%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.26%)</title><rect x="92.5065%" y="437" width="0.2584%" height="15" fill="rgb(250,43,18)" fg:x="358" fg:w="1"/><text x="92.7565%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1 samples, 0.26%)</title><rect x="92.5065%" y="421" width="0.2584%" height="15" fill="rgb(208,13,10)" fg:x="358" fg:w="1"/><text x="92.7565%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.26%)</title><rect x="92.5065%" y="405" width="0.2584%" height="15" fill="rgb(212,200,36)" fg:x="358" fg:w="1"/><text x="92.7565%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.26%)</title><rect x="92.5065%" y="389" width="0.2584%" height="15" fill="rgb(225,90,30)" fg:x="358" fg:w="1"/><text x="92.7565%" y="399.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bytes::ByteReader::read_frame (7 samples, 1.81%)</title><rect x="92.7649%" y="517" width="1.8088%" height="15" fill="rgb(236,182,39)" fg:x="359" fg:w="7"/><text x="93.0149%" y="527.50">d..</text></g><g><title>demoparser::parsing::demo_parsing::read_bytes::ByteReader::read_byte (7 samples, 1.81%)</title><rect x="92.7649%" y="501" width="1.8088%" height="15" fill="rgb(212,144,35)" fg:x="359" fg:w="7"/><text x="93.0149%" y="511.50">d..</text></g><g><title>[unknown] (6 samples, 1.55%)</title><rect x="93.0233%" y="485" width="1.5504%" height="15" fill="rgb(228,63,44)" fg:x="360" fg:w="6"/><text x="93.2733%" y="495.50"></text></g><g><title>[unknown] (6 samples, 1.55%)</title><rect x="93.0233%" y="469" width="1.5504%" height="15" fill="rgb(228,109,6)" fg:x="360" fg:w="6"/><text x="93.2733%" y="479.50"></text></g><g><title>[unknown] (6 samples, 1.55%)</title><rect x="93.0233%" y="453" width="1.5504%" height="15" fill="rgb(238,117,24)" fg:x="360" fg:w="6"/><text x="93.2733%" y="463.50"></text></g><g><title>[unknown] (6 samples, 1.55%)</title><rect x="93.0233%" y="437" width="1.5504%" height="15" fill="rgb(242,26,26)" fg:x="360" fg:w="6"/><text x="93.2733%" y="447.50"></text></g><g><title>[unknown] (6 samples, 1.55%)</title><rect x="93.0233%" y="421" width="1.5504%" height="15" fill="rgb(221,92,48)" fg:x="360" fg:w="6"/><text x="93.2733%" y="431.50"></text></g><g><title>[unknown] (6 samples, 1.55%)</title><rect x="93.0233%" y="405" width="1.5504%" height="15" fill="rgb(209,209,32)" fg:x="360" fg:w="6"/><text x="93.2733%" y="415.50"></text></g><g><title>[unknown] (6 samples, 1.55%)</title><rect x="93.0233%" y="389" width="1.5504%" height="15" fill="rgb(221,70,22)" fg:x="360" fg:w="6"/><text x="93.2733%" y="399.50"></text></g><g><title>[unknown] (6 samples, 1.55%)</title><rect x="93.0233%" y="373" width="1.5504%" height="15" fill="rgb(248,145,5)" fg:x="360" fg:w="6"/><text x="93.2733%" y="383.50"></text></g><g><title>[unknown] (6 samples, 1.55%)</title><rect x="93.0233%" y="357" width="1.5504%" height="15" fill="rgb(226,116,26)" fg:x="360" fg:w="6"/><text x="93.2733%" y="367.50"></text></g><g><title>[unknown] (6 samples, 1.55%)</title><rect x="93.0233%" y="341" width="1.5504%" height="15" fill="rgb(244,5,17)" fg:x="360" fg:w="6"/><text x="93.2733%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.52%)</title><rect x="94.0568%" y="325" width="0.5168%" height="15" fill="rgb(252,159,33)" fg:x="364" fg:w="2"/><text x="94.3068%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.52%)</title><rect x="94.0568%" y="309" width="0.5168%" height="15" fill="rgb(206,71,0)" fg:x="364" fg:w="2"/><text x="94.3068%" y="319.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bytes::ByteReader::read_varint (3 samples, 0.78%)</title><rect x="94.5736%" y="485" width="0.7752%" height="15" fill="rgb(233,118,54)" fg:x="366" fg:w="3"/><text x="94.8236%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.26%)</title><rect x="95.3488%" y="405" width="0.2584%" height="15" fill="rgb(234,83,48)" fg:x="369" fg:w="1"/><text x="95.5988%" y="415.50"></text></g><g><title>core::ptr::write (1 samples, 0.26%)</title><rect x="95.3488%" y="389" width="0.2584%" height="15" fill="rgb(228,3,54)" fg:x="369" fg:w="1"/><text x="95.5988%" y="399.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_message (1 samples, 0.26%)</title><rect x="95.6072%" y="405" width="0.2584%" height="15" fill="rgb(226,155,13)" fg:x="370" fg:w="1"/><text x="95.8572%" y="415.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::merge_message (1 samples, 0.26%)</title><rect x="95.6072%" y="389" width="0.2584%" height="15" fill="rgb(241,28,37)" fg:x="370" fg:w="1"/><text x="95.8572%" y="399.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (1 samples, 0.26%)</title><rect x="95.6072%" y="373" width="0.2584%" height="15" fill="rgb(233,93,10)" fg:x="370" fg:w="1"/><text x="95.8572%" y="383.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::consume (1 samples, 0.26%)</title><rect x="95.6072%" y="357" width="0.2584%" height="15" fill="rgb(225,113,19)" fg:x="370" fg:w="1"/><text x="95.8572%" y="367.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::consume (1 samples, 0.26%)</title><rect x="95.6072%" y="341" width="0.2584%" height="15" fill="rgb(241,2,18)" fg:x="370" fg:w="1"/><text x="95.8572%" y="351.50"></text></g><g><title>demoparser::parsing::demo_parsing::game_events::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_game_event (3 samples, 0.78%)</title><rect x="95.3488%" y="469" width="0.7752%" height="15" fill="rgb(228,207,21)" fg:x="369" fg:w="3"/><text x="95.5988%" y="479.50"></text></g><g><title>protobuf::message::Message::parse_from_bytes (3 samples, 0.78%)</title><rect x="95.3488%" y="453" width="0.7752%" height="15" fill="rgb(213,211,35)" fg:x="369" fg:w="3"/><text x="95.5988%" y="463.50"></text></g><g><title>protobuf::message::Message::parse_from (3 samples, 0.78%)</title><rect x="95.3488%" y="437" width="0.7752%" height="15" fill="rgb(209,83,10)" fg:x="369" fg:w="3"/><text x="95.5988%" y="447.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_GameEvent as protobuf::message::Message&gt;::merge_from (3 samples, 0.78%)</title><rect x="95.3488%" y="421" width="0.7752%" height="15" fill="rgb(209,164,1)" fg:x="369" fg:w="3"/><text x="95.5988%" y="431.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (1 samples, 0.26%)</title><rect x="95.8656%" y="405" width="0.2584%" height="15" fill="rgb(213,184,43)" fg:x="371" fg:w="1"/><text x="96.1156%" y="415.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (1 samples, 0.26%)</title><rect x="95.8656%" y="389" width="0.2584%" height="15" fill="rgb(231,61,34)" fg:x="371" fg:w="1"/><text x="96.1156%" y="399.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.26%)</title><rect x="96.1240%" y="357" width="0.2584%" height="15" fill="rgb(235,75,3)" fg:x="372" fg:w="1"/><text x="96.3740%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.26%)</title><rect x="96.3824%" y="341" width="0.2584%" height="15" fill="rgb(220,106,47)" fg:x="373" fg:w="1"/><text x="96.6324%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.26%)</title><rect x="96.3824%" y="325" width="0.2584%" height="15" fill="rgb(210,196,33)" fg:x="373" fg:w="1"/><text x="96.6324%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.26%)</title><rect x="96.3824%" y="309" width="0.2584%" height="15" fill="rgb(229,154,42)" fg:x="373" fg:w="1"/><text x="96.6324%" y="319.50"></text></g><g><title>mi_malloc (1 samples, 0.26%)</title><rect x="96.3824%" y="293" width="0.2584%" height="15" fill="rgb(228,114,26)" fg:x="373" fg:w="1"/><text x="96.6324%" y="303.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.26%)</title><rect x="96.3824%" y="277" width="0.2584%" height="15" fill="rgb(208,144,1)" fg:x="373" fg:w="1"/><text x="96.6324%" y="287.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.26%)</title><rect x="96.3824%" y="261" width="0.2584%" height="15" fill="rgb(239,112,37)" fg:x="373" fg:w="1"/><text x="96.6324%" y="271.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.26%)</title><rect x="96.3824%" y="245" width="0.2584%" height="15" fill="rgb(210,96,50)" fg:x="373" fg:w="1"/><text x="96.6324%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.52%)</title><rect x="96.3824%" y="357" width="0.5168%" height="15" fill="rgb(222,178,2)" fg:x="373" fg:w="2"/><text x="96.6324%" y="367.50"></text></g><g><title>core::ptr::write (1 samples, 0.26%)</title><rect x="96.6408%" y="341" width="0.2584%" height="15" fill="rgb(226,74,18)" fg:x="374" fg:w="1"/><text x="96.8908%" y="351.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.26%)</title><rect x="97.1576%" y="325" width="0.2584%" height="15" fill="rgb(225,67,54)" fg:x="376" fg:w="1"/><text x="97.4076%" y="335.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int32 (1 samples, 0.26%)</title><rect x="97.4160%" y="309" width="0.2584%" height="15" fill="rgb(251,92,32)" fg:x="377" fg:w="1"/><text x="97.6660%" y="319.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int64 (1 samples, 0.26%)</title><rect x="97.4160%" y="293" width="0.2584%" height="15" fill="rgb(228,149,22)" fg:x="377" fg:w="1"/><text x="97.6660%" y="303.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.26%)</title><rect x="97.4160%" y="277" width="0.2584%" height="15" fill="rgb(243,54,13)" fg:x="377" fg:w="1"/><text x="97.6660%" y="287.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (1 samples, 0.26%)</title><rect x="97.6744%" y="309" width="0.2584%" height="15" fill="rgb(243,180,28)" fg:x="378" fg:w="1"/><text x="97.9244%" y="319.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (1 samples, 0.26%)</title><rect x="97.6744%" y="293" width="0.2584%" height="15" fill="rgb(208,167,24)" fg:x="378" fg:w="1"/><text x="97.9244%" y="303.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::eof (1 samples, 0.26%)</title><rect x="97.6744%" y="277" width="0.2584%" height="15" fill="rgb(245,73,45)" fg:x="378" fg:w="1"/><text x="97.9244%" y="287.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::eof (1 samples, 0.26%)</title><rect x="97.6744%" y="261" width="0.2584%" height="15" fill="rgb(237,203,48)" fg:x="378" fg:w="1"/><text x="97.9244%" y="271.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::fill_buf (1 samples, 0.26%)</title><rect x="97.6744%" y="245" width="0.2584%" height="15" fill="rgb(211,197,16)" fg:x="378" fg:w="1"/><text x="97.9244%" y="255.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::pos (1 samples, 0.26%)</title><rect x="97.6744%" y="229" width="0.2584%" height="15" fill="rgb(243,99,51)" fg:x="378" fg:w="1"/><text x="97.9244%" y="239.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_game_event_list::Key_t as protobuf::message::Message&gt;::merge_from (3 samples, 0.78%)</title><rect x="97.4160%" y="325" width="0.7752%" height="15" fill="rgb(215,123,29)" fg:x="377" fg:w="3"/><text x="97.6660%" y="335.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string (1 samples, 0.26%)</title><rect x="97.9328%" y="309" width="0.2584%" height="15" fill="rgb(239,186,37)" fg:x="379" fg:w="1"/><text x="98.1828%" y="319.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string_into (1 samples, 0.26%)</title><rect x="97.9328%" y="293" width="0.2584%" height="15" fill="rgb(252,136,39)" fg:x="379" fg:w="1"/><text x="98.1828%" y="303.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (1 samples, 0.26%)</title><rect x="97.9328%" y="277" width="0.2584%" height="15" fill="rgb(223,213,32)" fg:x="379" fg:w="1"/><text x="98.1828%" y="287.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (1 samples, 0.26%)</title><rect x="97.9328%" y="261" width="0.2584%" height="15" fill="rgb(233,115,5)" fg:x="379" fg:w="1"/><text x="98.1828%" y="271.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (1 samples, 0.26%)</title><rect x="97.9328%" y="245" width="0.2584%" height="15" fill="rgb(207,226,44)" fg:x="379" fg:w="1"/><text x="98.1828%" y="255.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::bytes_until_limit (1 samples, 0.26%)</title><rect x="97.9328%" y="229" width="0.2584%" height="15" fill="rgb(208,126,0)" fg:x="379" fg:w="1"/><text x="98.1828%" y="239.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_message (6 samples, 1.55%)</title><rect x="96.8992%" y="357" width="1.5504%" height="15" fill="rgb(244,66,21)" fg:x="375" fg:w="6"/><text x="97.1492%" y="367.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::merge_message (5 samples, 1.29%)</title><rect x="97.1576%" y="341" width="1.2920%" height="15" fill="rgb(222,97,12)" fg:x="376" fg:w="5"/><text x="97.4076%" y="351.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::push_limit (1 samples, 0.26%)</title><rect x="98.1912%" y="325" width="0.2584%" height="15" fill="rgb(219,213,19)" fg:x="380" fg:w="1"/><text x="98.4412%" y="335.50"></text></g><g><title>demoparser::parsing::parser::Parser::start_parsing (229 samples, 59.17%)</title><rect x="39.5349%" y="581" width="59.1731%" height="15" fill="rgb(252,169,30)" fg:x="153" fg:w="229"/><text x="39.7849%" y="591.50">demoparser::parsing::parser::Parser::start_parsing</text></g><g><title>demoparser::parsing::parser::Parser::speed (229 samples, 59.17%)</title><rect x="39.5349%" y="565" width="59.1731%" height="15" fill="rgb(206,32,51)" fg:x="153" fg:w="229"/><text x="39.7849%" y="575.50">demoparser::parsing::parser::Parser::speed</text></g><g><title>demoparser::parsing::parser::Parser::parse_mandatory_ticks (28 samples, 7.24%)</title><rect x="91.4729%" y="549" width="7.2351%" height="15" fill="rgb(250,172,42)" fg:x="354" fg:w="28"/><text x="91.7229%" y="559.50">demoparser..</text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (23 samples, 5.94%)</title><rect x="92.7649%" y="533" width="5.9432%" height="15" fill="rgb(209,34,43)" fg:x="359" fg:w="23"/><text x="93.0149%" y="543.50">demopars..</text></g><g><title>demoparser::parsing::parser::Parser::parse_cmd (16 samples, 4.13%)</title><rect x="94.5736%" y="517" width="4.1344%" height="15" fill="rgb(223,11,35)" fg:x="366" fg:w="16"/><text x="94.8236%" y="527.50">demop..</text></g><g><title>demoparser::parsing::parser::Parser::messages_from_packet (16 samples, 4.13%)</title><rect x="94.5736%" y="501" width="4.1344%" height="15" fill="rgb(251,219,26)" fg:x="366" fg:w="16"/><text x="94.8236%" y="511.50">demop..</text></g><g><title>demoparser::parsing::parser::Parser::msg_handler (13 samples, 3.36%)</title><rect x="95.3488%" y="485" width="3.3592%" height="15" fill="rgb(231,119,3)" fg:x="369" fg:w="13"/><text x="95.5988%" y="495.50">dem..</text></g><g><title>demoparser::parsing::demo_parsing::game_events::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_game_event_map (10 samples, 2.58%)</title><rect x="96.1240%" y="469" width="2.5840%" height="15" fill="rgb(216,97,11)" fg:x="372" fg:w="10"/><text x="96.3740%" y="479.50">de..</text></g><g><title>protobuf::message::Message::parse_from_bytes (10 samples, 2.58%)</title><rect x="96.1240%" y="453" width="2.5840%" height="15" fill="rgb(223,59,9)" fg:x="372" fg:w="10"/><text x="96.3740%" y="463.50">pr..</text></g><g><title>protobuf::message::Message::parse_from (10 samples, 2.58%)</title><rect x="96.1240%" y="437" width="2.5840%" height="15" fill="rgb(233,93,31)" fg:x="372" fg:w="10"/><text x="96.3740%" y="447.50">pr..</text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_GameEventList as protobuf::message::Message&gt;::merge_from (10 samples, 2.58%)</title><rect x="96.1240%" y="421" width="2.5840%" height="15" fill="rgb(239,81,33)" fg:x="372" fg:w="10"/><text x="96.3740%" y="431.50">&lt;c..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_message (10 samples, 2.58%)</title><rect x="96.1240%" y="405" width="2.5840%" height="15" fill="rgb(213,120,34)" fg:x="372" fg:w="10"/><text x="96.3740%" y="415.50">pr..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::merge_message (10 samples, 2.58%)</title><rect x="96.1240%" y="389" width="2.5840%" height="15" fill="rgb(243,49,53)" fg:x="372" fg:w="10"/><text x="96.3740%" y="399.50">pr..</text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_game_event_list::Descriptor_t as protobuf::message::Message&gt;::merge_from (10 samples, 2.58%)</title><rect x="96.1240%" y="373" width="2.5840%" height="15" fill="rgb(247,216,33)" fg:x="372" fg:w="10"/><text x="96.3740%" y="383.50">&lt;c..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string (1 samples, 0.26%)</title><rect x="98.4496%" y="357" width="0.2584%" height="15" fill="rgb(226,26,14)" fg:x="381" fg:w="1"/><text x="98.6996%" y="367.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string_into (1 samples, 0.26%)</title><rect x="98.4496%" y="341" width="0.2584%" height="15" fill="rgb(215,49,53)" fg:x="381" fg:w="1"/><text x="98.6996%" y="351.50"></text></g><g><title>alloc::string::String::from_utf8 (1 samples, 0.26%)</title><rect x="98.4496%" y="325" width="0.2584%" height="15" fill="rgb(245,162,40)" fg:x="381" fg:w="1"/><text x="98.6996%" y="335.50"></text></g><g><title>__libc_start_main_impl (270 samples, 69.77%)</title><rect x="29.1990%" y="1013" width="69.7674%" height="15" fill="rgb(229,68,17)" fg:x="113" fg:w="270"/><text x="29.4490%" y="1023.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (270 samples, 69.77%)</title><rect x="29.1990%" y="997" width="69.7674%" height="15" fill="rgb(213,182,10)" fg:x="113" fg:w="270"/><text x="29.4490%" y="1007.50">__libc_start_call_main</text></g><g><title>main (270 samples, 69.77%)</title><rect x="29.1990%" y="981" width="69.7674%" height="15" fill="rgb(245,125,30)" fg:x="113" fg:w="270"/><text x="29.4490%" y="991.50">main</text></g><g><title>std::rt::lang_start_internal (270 samples, 69.77%)</title><rect x="29.1990%" y="965" width="69.7674%" height="15" fill="rgb(232,202,2)" fg:x="113" fg:w="270"/><text x="29.4490%" y="975.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (270 samples, 69.77%)</title><rect x="29.1990%" y="949" width="69.7674%" height="15" fill="rgb(237,140,51)" fg:x="113" fg:w="270"/><text x="29.4490%" y="959.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (270 samples, 69.77%)</title><rect x="29.1990%" y="933" width="69.7674%" height="15" fill="rgb(236,157,25)" fg:x="113" fg:w="270"/><text x="29.4490%" y="943.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (270 samples, 69.77%)</title><rect x="29.1990%" y="917" width="69.7674%" height="15" fill="rgb(219,209,0)" fg:x="113" fg:w="270"/><text x="29.4490%" y="927.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (270 samples, 69.77%)</title><rect x="29.1990%" y="901" width="69.7674%" height="15" fill="rgb(240,116,54)" fg:x="113" fg:w="270"/><text x="29.4490%" y="911.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (270 samples, 69.77%)</title><rect x="29.1990%" y="885" width="69.7674%" height="15" fill="rgb(216,10,36)" fg:x="113" fg:w="270"/><text x="29.4490%" y="895.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (270 samples, 69.77%)</title><rect x="29.1990%" y="869" width="69.7674%" height="15" fill="rgb(222,72,44)" fg:x="113" fg:w="270"/><text x="29.4490%" y="879.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (270 samples, 69.77%)</title><rect x="29.1990%" y="853" width="69.7674%" height="15" fill="rgb(232,159,9)" fg:x="113" fg:w="270"/><text x="29.4490%" y="863.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (270 samples, 69.77%)</title><rect x="29.1990%" y="837" width="69.7674%" height="15" fill="rgb(210,39,32)" fg:x="113" fg:w="270"/><text x="29.4490%" y="847.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (270 samples, 69.77%)</title><rect x="29.1990%" y="821" width="69.7674%" height="15" fill="rgb(216,194,45)" fg:x="113" fg:w="270"/><text x="29.4490%" y="831.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (270 samples, 69.77%)</title><rect x="29.1990%" y="805" width="69.7674%" height="15" fill="rgb(218,18,35)" fg:x="113" fg:w="270"/><text x="29.4490%" y="815.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (270 samples, 69.77%)</title><rect x="29.1990%" y="789" width="69.7674%" height="15" fill="rgb(207,83,51)" fg:x="113" fg:w="270"/><text x="29.4490%" y="799.50">core::ops::function::FnOnce::call_once</text></g><g><title>demoparser::main (270 samples, 69.77%)</title><rect x="29.1990%" y="773" width="69.7674%" height="15" fill="rgb(225,63,43)" fg:x="113" fg:w="270"/><text x="29.4490%" y="783.50">demoparser::main</text></g><g><title>core::iter::traits::iterator::Iterator::collect (270 samples, 69.77%)</title><rect x="29.1990%" y="757" width="69.7674%" height="15" fill="rgb(207,57,36)" fg:x="113" fg:w="270"/><text x="29.4490%" y="767.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (270 samples, 69.77%)</title><rect x="29.1990%" y="741" width="69.7674%" height="15" fill="rgb(216,99,33)" fg:x="113" fg:w="270"/><text x="29.4490%" y="751.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (270 samples, 69.77%)</title><rect x="29.1990%" y="725" width="69.7674%" height="15" fill="rgb(225,42,16)" fg:x="113" fg:w="270"/><text x="29.4490%" y="735.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (270 samples, 69.77%)</title><rect x="29.1990%" y="709" width="69.7674%" height="15" fill="rgb(220,201,45)" fg:x="113" fg:w="270"/><text x="29.4490%" y="719.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (270 samples, 69.77%)</title><rect x="29.1990%" y="693" width="69.7674%" height="15" fill="rgb(225,33,4)" fg:x="113" fg:w="270"/><text x="29.4490%" y="703.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (270 samples, 69.77%)</title><rect x="29.1990%" y="677" width="69.7674%" height="15" fill="rgb(224,33,50)" fg:x="113" fg:w="270"/><text x="29.4490%" y="687.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (270 samples, 69.77%)</title><rect x="29.1990%" y="661" width="69.7674%" height="15" fill="rgb(246,198,51)" fg:x="113" fg:w="270"/><text x="29.4490%" y="671.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::traits::iterator::Iterator::fold (270 samples, 69.77%)</title><rect x="29.1990%" y="645" width="69.7674%" height="15" fill="rgb(205,22,4)" fg:x="113" fg:w="270"/><text x="29.4490%" y="655.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (270 samples, 69.77%)</title><rect x="29.1990%" y="629" width="69.7674%" height="15" fill="rgb(206,3,8)" fg:x="113" fg:w="270"/><text x="29.4490%" y="639.50">core::iter::adapters::map::map_fold::{{closure}}</text></g><g><title>demoparser::main::{{closure}} (270 samples, 69.77%)</title><rect x="29.1990%" y="613" width="69.7674%" height="15" fill="rgb(251,23,15)" fg:x="113" fg:w="270"/><text x="29.4490%" y="623.50">demoparser::main::{{closure}}</text></g><g><title>demoparser::parse_demo (270 samples, 69.77%)</title><rect x="29.1990%" y="597" width="69.7674%" height="15" fill="rgb(252,88,28)" fg:x="113" fg:w="270"/><text x="29.4490%" y="607.50">demoparser::parse_demo</text></g><g><title>demoparser::parsing::parser_settings::&lt;impl demoparser::parsing::parser::Parser&gt;::new (1 samples, 0.26%)</title><rect x="98.7080%" y="581" width="0.2584%" height="15" fill="rgb(212,127,14)" fg:x="382" fg:w="1"/><text x="98.9580%" y="591.50"></text></g><g><title>demoparser::parsing::utils::read_file (1 samples, 0.26%)</title><rect x="98.7080%" y="565" width="0.2584%" height="15" fill="rgb(247,145,37)" fg:x="382" fg:w="1"/><text x="98.9580%" y="575.50"></text></g><g><title>demoparser::parsing::utils::create_mmap (1 samples, 0.26%)</title><rect x="98.7080%" y="549" width="0.2584%" height="15" fill="rgb(209,117,53)" fg:x="382" fg:w="1"/><text x="98.9580%" y="559.50"></text></g><g><title>memmap2::MmapOptions::map (1 samples, 0.26%)</title><rect x="98.7080%" y="533" width="0.2584%" height="15" fill="rgb(212,90,42)" fg:x="382" fg:w="1"/><text x="98.9580%" y="543.50"></text></g><g><title>memmap2::os::MmapInner::map (1 samples, 0.26%)</title><rect x="98.7080%" y="517" width="0.2584%" height="15" fill="rgb(218,164,37)" fg:x="382" fg:w="1"/><text x="98.9580%" y="527.50"></text></g><g><title>memmap2::os::MmapInner::new (1 samples, 0.26%)</title><rect x="98.7080%" y="501" width="0.2584%" height="15" fill="rgb(246,65,34)" fg:x="382" fg:w="1"/><text x="98.9580%" y="511.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.26%)</title><rect x="98.7080%" y="485" width="0.2584%" height="15" fill="rgb(231,100,33)" fg:x="382" fg:w="1"/><text x="98.9580%" y="495.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.26%)</title><rect x="98.7080%" y="469" width="0.2584%" height="15" fill="rgb(228,126,14)" fg:x="382" fg:w="1"/><text x="98.9580%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="98.7080%" y="453" width="0.2584%" height="15" fill="rgb(215,173,21)" fg:x="382" fg:w="1"/><text x="98.9580%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="98.7080%" y="437" width="0.2584%" height="15" fill="rgb(210,6,40)" fg:x="382" fg:w="1"/><text x="98.9580%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="98.7080%" y="421" width="0.2584%" height="15" fill="rgb(212,48,18)" fg:x="382" fg:w="1"/><text x="98.9580%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="98.7080%" y="405" width="0.2584%" height="15" fill="rgb(230,214,11)" fg:x="382" fg:w="1"/><text x="98.9580%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="98.7080%" y="389" width="0.2584%" height="15" fill="rgb(254,105,39)" fg:x="382" fg:w="1"/><text x="98.9580%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="98.7080%" y="373" width="0.2584%" height="15" fill="rgb(245,158,5)" fg:x="382" fg:w="1"/><text x="98.9580%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="98.7080%" y="357" width="0.2584%" height="15" fill="rgb(249,208,11)" fg:x="382" fg:w="1"/><text x="98.9580%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="98.7080%" y="341" width="0.2584%" height="15" fill="rgb(210,39,28)" fg:x="382" fg:w="1"/><text x="98.9580%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="98.7080%" y="325" width="0.2584%" height="15" fill="rgb(211,56,53)" fg:x="382" fg:w="1"/><text x="98.9580%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="98.7080%" y="309" width="0.2584%" height="15" fill="rgb(226,201,30)" fg:x="382" fg:w="1"/><text x="98.9580%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="98.7080%" y="293" width="0.2584%" height="15" fill="rgb(239,101,34)" fg:x="382" fg:w="1"/><text x="98.9580%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="98.7080%" y="277" width="0.2584%" height="15" fill="rgb(226,209,5)" fg:x="382" fg:w="1"/><text x="98.9580%" y="287.50"></text></g><g><title>demoparser (384 samples, 99.22%)</title><rect x="0.0000%" y="1045" width="99.2248%" height="15" fill="rgb(250,105,47)" fg:x="0" fg:w="384"/><text x="0.2500%" y="1055.50">demoparser</text></g><g><title>_start (271 samples, 70.03%)</title><rect x="29.1990%" y="1029" width="70.0258%" height="15" fill="rgb(230,72,3)" fg:x="113" fg:w="271"/><text x="29.4490%" y="1039.50">_start</text></g><g><title>_dl_start (1 samples, 0.26%)</title><rect x="98.9664%" y="1013" width="0.2584%" height="15" fill="rgb(232,218,39)" fg:x="383" fg:w="1"/><text x="99.2164%" y="1023.50"></text></g><g><title>_dl_start_final (1 samples, 0.26%)</title><rect x="98.9664%" y="997" width="0.2584%" height="15" fill="rgb(248,166,6)" fg:x="383" fg:w="1"/><text x="99.2164%" y="1007.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.26%)</title><rect x="98.9664%" y="981" width="0.2584%" height="15" fill="rgb(247,89,20)" fg:x="383" fg:w="1"/><text x="99.2164%" y="991.50"></text></g><g><title>dl_main (1 samples, 0.26%)</title><rect x="98.9664%" y="965" width="0.2584%" height="15" fill="rgb(248,130,54)" fg:x="383" fg:w="1"/><text x="99.2164%" y="975.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.26%)</title><rect x="98.9664%" y="949" width="0.2584%" height="15" fill="rgb(234,196,4)" fg:x="383" fg:w="1"/><text x="99.2164%" y="959.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.26%)</title><rect x="98.9664%" y="933" width="0.2584%" height="15" fill="rgb(250,143,31)" fg:x="383" fg:w="1"/><text x="99.2164%" y="943.50"></text></g><g><title>openaux (1 samples, 0.26%)</title><rect x="98.9664%" y="917" width="0.2584%" height="15" fill="rgb(211,110,34)" fg:x="383" fg:w="1"/><text x="99.2164%" y="927.50"></text></g><g><title>_dl_map_object (1 samples, 0.26%)</title><rect x="98.9664%" y="901" width="0.2584%" height="15" fill="rgb(215,124,48)" fg:x="383" fg:w="1"/><text x="99.2164%" y="911.50"></text></g><g><title>_dl_load_cache_lookup (1 samples, 0.26%)</title><rect x="98.9664%" y="885" width="0.2584%" height="15" fill="rgb(216,46,13)" fg:x="383" fg:w="1"/><text x="99.2164%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="98.9664%" y="869" width="0.2584%" height="15" fill="rgb(205,184,25)" fg:x="383" fg:w="1"/><text x="99.2164%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="98.9664%" y="853" width="0.2584%" height="15" fill="rgb(228,1,10)" fg:x="383" fg:w="1"/><text x="99.2164%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="98.9664%" y="837" width="0.2584%" height="15" fill="rgb(213,116,27)" fg:x="383" fg:w="1"/><text x="99.2164%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="98.9664%" y="821" width="0.2584%" height="15" fill="rgb(241,95,50)" fg:x="383" fg:w="1"/><text x="99.2164%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="98.9664%" y="805" width="0.2584%" height="15" fill="rgb(238,48,32)" fg:x="383" fg:w="1"/><text x="99.2164%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="98.9664%" y="789" width="0.2584%" height="15" fill="rgb(235,113,49)" fg:x="383" fg:w="1"/><text x="99.2164%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="98.9664%" y="773" width="0.2584%" height="15" fill="rgb(205,127,43)" fg:x="383" fg:w="1"/><text x="99.2164%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="98.9664%" y="757" width="0.2584%" height="15" fill="rgb(250,162,2)" fg:x="383" fg:w="1"/><text x="99.2164%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="98.9664%" y="741" width="0.2584%" height="15" fill="rgb(220,13,41)" fg:x="383" fg:w="1"/><text x="99.2164%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="98.9664%" y="725" width="0.2584%" height="15" fill="rgb(249,221,25)" fg:x="383" fg:w="1"/><text x="99.2164%" y="735.50"></text></g><g><title>all (387 samples, 100%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(215,208,19)" fg:x="0" fg:w="387"/><text x="0.2500%" y="1071.50"></text></g><g><title>perf-exec (3 samples, 0.78%)</title><rect x="99.2248%" y="1045" width="0.7752%" height="15" fill="rgb(236,175,2)" fg:x="384" fg:w="3"/><text x="99.4748%" y="1055.50"></text></g><g><title>[unknown] (3 samples, 0.78%)</title><rect x="99.2248%" y="1029" width="0.7752%" height="15" fill="rgb(241,52,2)" fg:x="384" fg:w="3"/><text x="99.4748%" y="1039.50"></text></g><g><title>[unknown] (3 samples, 0.78%)</title><rect x="99.2248%" y="1013" width="0.7752%" height="15" fill="rgb(248,140,14)" fg:x="384" fg:w="3"/><text x="99.4748%" y="1023.50"></text></g><g><title>[unknown] (3 samples, 0.78%)</title><rect x="99.2248%" y="997" width="0.7752%" height="15" fill="rgb(253,22,42)" fg:x="384" fg:w="3"/><text x="99.4748%" y="1007.50"></text></g><g><title>[unknown] (3 samples, 0.78%)</title><rect x="99.2248%" y="981" width="0.7752%" height="15" fill="rgb(234,61,47)" fg:x="384" fg:w="3"/><text x="99.4748%" y="991.50"></text></g><g><title>[unknown] (3 samples, 0.78%)</title><rect x="99.2248%" y="965" width="0.7752%" height="15" fill="rgb(208,226,15)" fg:x="384" fg:w="3"/><text x="99.4748%" y="975.50"></text></g><g><title>[unknown] (3 samples, 0.78%)</title><rect x="99.2248%" y="949" width="0.7752%" height="15" fill="rgb(217,221,4)" fg:x="384" fg:w="3"/><text x="99.4748%" y="959.50"></text></g><g><title>[unknown] (3 samples, 0.78%)</title><rect x="99.2248%" y="933" width="0.7752%" height="15" fill="rgb(212,174,34)" fg:x="384" fg:w="3"/><text x="99.4748%" y="943.50"></text></g><g><title>[unknown] (3 samples, 0.78%)</title><rect x="99.2248%" y="917" width="0.7752%" height="15" fill="rgb(253,83,4)" fg:x="384" fg:w="3"/><text x="99.4748%" y="927.50"></text></g><g><title>[unknown] (3 samples, 0.78%)</title><rect x="99.2248%" y="901" width="0.7752%" height="15" fill="rgb(250,195,49)" fg:x="384" fg:w="3"/><text x="99.4748%" y="911.50"></text></g><g><title>[unknown] (3 samples, 0.78%)</title><rect x="99.2248%" y="885" width="0.7752%" height="15" fill="rgb(241,192,25)" fg:x="384" fg:w="3"/><text x="99.4748%" y="895.50"></text></g><g><title>[unknown] (3 samples, 0.78%)</title><rect x="99.2248%" y="869" width="0.7752%" height="15" fill="rgb(208,124,10)" fg:x="384" fg:w="3"/><text x="99.4748%" y="879.50"></text></g><g><title>[unknown] (3 samples, 0.78%)</title><rect x="99.2248%" y="853" width="0.7752%" height="15" fill="rgb(222,33,0)" fg:x="384" fg:w="3"/><text x="99.4748%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="99.7416%" y="837" width="0.2584%" height="15" fill="rgb(234,209,28)" fg:x="386" fg:w="1"/><text x="99.9916%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.26%)</title><rect x="99.7416%" y="821" width="0.2584%" height="15" fill="rgb(224,11,23)" fg:x="386" fg:w="1"/><text x="99.9916%" y="831.50"></text></g></svg></svg>