<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1190" onload="init(evt)" viewBox="0 0 1200 1190" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1190" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1173.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1173.00"> </text><svg id="frames" x="10" width="1180" total_samples="636"><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.16%)</title><rect x="0.0000%" y="1093" width="0.1572%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.16%)</title><rect x="0.0000%" y="1077" width="0.1572%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1087.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.16%)</title><rect x="0.0000%" y="1061" width="0.1572%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1071.50"></text></g><g><title>demoparser::main::{{closure}} (1 samples, 0.16%)</title><rect x="0.0000%" y="1045" width="0.1572%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1055.50"></text></g><g><title>demoparser::parse_demo (1 samples, 0.16%)</title><rect x="0.0000%" y="1029" width="0.1572%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1039.50"></text></g><g><title>demoparser::parsing::parser::Parser::start_parsing (1 samples, 0.16%)</title><rect x="0.0000%" y="1013" width="0.1572%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1023.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (1 samples, 0.16%)</title><rect x="0.0000%" y="997" width="0.1572%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1007.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_cmd (1 samples, 0.16%)</title><rect x="0.0000%" y="981" width="0.1572%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="991.50"></text></g><g><title>demoparser::parsing::parser::Parser::messages_from_packet (1 samples, 0.16%)</title><rect x="0.0000%" y="965" width="0.1572%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="975.50"></text></g><g><title>demoparser::parsing::parser::Parser::msg_handler (1 samples, 0.16%)</title><rect x="0.0000%" y="949" width="0.1572%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="959.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_packet_entities (1 samples, 0.16%)</title><rect x="0.0000%" y="933" width="0.1572%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="943.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::update_entity (1 samples, 0.16%)</title><rect x="0.0000%" y="917" width="0.1572%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="1"/><text x="0.2500%" y="927.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode (1 samples, 0.16%)</title><rect x="0.0000%" y="901" width="0.1572%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="911.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_array (1 samples, 0.16%)</title><rect x="0.0000%" y="885" width="0.1572%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="895.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1 samples, 0.16%)</title><rect x="0.0000%" y="869" width="0.1572%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="1"/><text x="0.2500%" y="879.50"></text></g><g><title>protobuf::text_format::print::fmt (1 samples, 0.16%)</title><rect x="0.0000%" y="853" width="0.1572%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="863.50"></text></g><g><title>protobuf::text_format::print::print_to_string_internal (1 samples, 0.16%)</title><rect x="0.0000%" y="837" width="0.1572%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="1"/><text x="0.2500%" y="847.50"></text></g><g><title>protobuf::text_format::print::print_to_internal (1 samples, 0.16%)</title><rect x="0.0000%" y="821" width="0.1572%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="1"/><text x="0.2500%" y="831.50"></text></g><g><title>&lt;M as protobuf::message_dyn::MessageDyn&gt;::descriptor_dyn (1 samples, 0.16%)</title><rect x="0.0000%" y="805" width="0.1572%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="815.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_send_table::Sendprop_t as protobuf::message_full::MessageFull&gt;::descriptor (1 samples, 0.16%)</title><rect x="0.0000%" y="789" width="0.1572%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="1"/><text x="0.2500%" y="799.50"></text></g><g><title>protobuf::lazy::Lazy&lt;T&gt;::get (1 samples, 0.16%)</title><rect x="0.0000%" y="773" width="0.1572%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="783.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.16%)</title><rect x="0.0000%" y="757" width="0.1572%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="1"/><text x="0.2500%" y="767.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.16%)</title><rect x="0.0000%" y="741" width="0.1572%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="751.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.16%)</title><rect x="0.0000%" y="725" width="0.1572%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="735.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.16%)</title><rect x="0.0000%" y="709" width="0.1572%" height="15" fill="rgb(241,131,45)" fg:x="0" fg:w="1"/><text x="0.2500%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.16%)</title><rect x="0.0000%" y="693" width="0.1572%" height="15" fill="rgb(249,31,29)" fg:x="0" fg:w="1"/><text x="0.2500%" y="703.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.16%)</title><rect x="0.0000%" y="677" width="0.1572%" height="15" fill="rgb(225,111,53)" fg:x="0" fg:w="1"/><text x="0.2500%" y="687.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (1 samples, 0.16%)</title><rect x="0.0000%" y="661" width="0.1572%" height="15" fill="rgb(238,160,17)" fg:x="0" fg:w="1"/><text x="0.2500%" y="671.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_send_table::Sendprop_t as protobuf::message_full::MessageFull&gt;::descriptor::{{closure}} (1 samples, 0.16%)</title><rect x="0.0000%" y="645" width="0.1572%" height="15" fill="rgb(214,148,48)" fg:x="0" fg:w="1"/><text x="0.2500%" y="655.50"></text></g><g><title>csgoproto::netmessages::file_descriptor (1 samples, 0.16%)</title><rect x="0.0000%" y="629" width="0.1572%" height="15" fill="rgb(232,36,49)" fg:x="0" fg:w="1"/><text x="0.2500%" y="639.50"></text></g><g><title>protobuf::lazy::Lazy&lt;T&gt;::get (1 samples, 0.16%)</title><rect x="0.0000%" y="613" width="0.1572%" height="15" fill="rgb(209,103,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="623.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.16%)</title><rect x="0.0000%" y="597" width="0.1572%" height="15" fill="rgb(229,88,8)" fg:x="0" fg:w="1"/><text x="0.2500%" y="607.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.16%)</title><rect x="0.0000%" y="581" width="0.1572%" height="15" fill="rgb(213,181,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="591.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.16%)</title><rect x="0.0000%" y="565" width="0.1572%" height="15" fill="rgb(254,191,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="575.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.16%)</title><rect x="0.0000%" y="549" width="0.1572%" height="15" fill="rgb(241,83,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.16%)</title><rect x="0.0000%" y="533" width="0.1572%" height="15" fill="rgb(233,36,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="543.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.16%)</title><rect x="0.0000%" y="517" width="0.1572%" height="15" fill="rgb(226,3,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="527.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (1 samples, 0.16%)</title><rect x="0.0000%" y="501" width="0.1572%" height="15" fill="rgb(245,192,40)" fg:x="0" fg:w="1"/><text x="0.2500%" y="511.50"></text></g><g><title>csgoproto::netmessages::file_descriptor::{{closure}} (1 samples, 0.16%)</title><rect x="0.0000%" y="485" width="0.1572%" height="15" fill="rgb(238,167,29)" fg:x="0" fg:w="1"/><text x="0.2500%" y="495.50"></text></g><g><title>protobuf::lazy::Lazy&lt;T&gt;::get (1 samples, 0.16%)</title><rect x="0.0000%" y="469" width="0.1572%" height="15" fill="rgb(232,182,51)" fg:x="0" fg:w="1"/><text x="0.2500%" y="479.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.16%)</title><rect x="0.0000%" y="453" width="0.1572%" height="15" fill="rgb(231,60,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="463.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.16%)</title><rect x="0.0000%" y="437" width="0.1572%" height="15" fill="rgb(208,69,12)" fg:x="0" fg:w="1"/><text x="0.2500%" y="447.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.16%)</title><rect x="0.0000%" y="421" width="0.1572%" height="15" fill="rgb(235,93,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="431.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.16%)</title><rect x="0.0000%" y="405" width="0.1572%" height="15" fill="rgb(213,116,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.16%)</title><rect x="0.0000%" y="389" width="0.1572%" height="15" fill="rgb(222,207,29)" fg:x="0" fg:w="1"/><text x="0.2500%" y="399.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.16%)</title><rect x="0.0000%" y="373" width="0.1572%" height="15" fill="rgb(206,96,30)" fg:x="0" fg:w="1"/><text x="0.2500%" y="383.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (1 samples, 0.16%)</title><rect x="0.0000%" y="357" width="0.1572%" height="15" fill="rgb(218,138,4)" fg:x="0" fg:w="1"/><text x="0.2500%" y="367.50"></text></g><g><title>csgoproto::netmessages::file_descriptor::{{closure}}::{{closure}} (1 samples, 0.16%)</title><rect x="0.0000%" y="341" width="0.1572%" height="15" fill="rgb(250,191,14)" fg:x="0" fg:w="1"/><text x="0.2500%" y="351.50"></text></g><g><title>protobuf::reflect::file::generated::GeneratedFileDescriptor::new_generated (1 samples, 0.16%)</title><rect x="0.0000%" y="325" width="0.1572%" height="15" fill="rgb(239,60,40)" fg:x="0" fg:w="1"/><text x="0.2500%" y="335.50"></text></g><g><title>protobuf::reflect::file::index::FileDescriptorCommon::new (1 samples, 0.16%)</title><rect x="0.0000%" y="309" width="0.1572%" height="15" fill="rgb(206,27,48)" fg:x="0" fg:w="1"/><text x="0.2500%" y="319.50"></text></g><g><title>protobuf::reflect::file::index::FileDescriptorCommon::build_message_index (1 samples, 0.16%)</title><rect x="0.0000%" y="293" width="0.1572%" height="15" fill="rgb(225,35,8)" fg:x="0" fg:w="1"/><text x="0.2500%" y="303.50"></text></g><g><title>protobuf::reflect::file::index::FileDescriptorCommon::index_message (1 samples, 0.16%)</title><rect x="0.0000%" y="277" width="0.1572%" height="15" fill="rgb(250,213,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="287.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.16%)</title><rect x="0.0000%" y="261" width="0.1572%" height="15" fill="rgb(247,123,22)" fg:x="0" fg:w="1"/><text x="0.2500%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.16%)</title><rect x="0.0000%" y="245" width="0.1572%" height="15" fill="rgb(231,138,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="255.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.16%)</title><rect x="0.0000%" y="229" width="0.1572%" height="15" fill="rgb(231,145,46)" fg:x="0" fg:w="1"/><text x="0.2500%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.16%)</title><rect x="0.0000%" y="213" width="0.1572%" height="15" fill="rgb(251,118,11)" fg:x="0" fg:w="1"/><text x="0.2500%" y="223.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="0.0000%" y="197" width="0.1572%" height="15" fill="rgb(217,147,25)" fg:x="0" fg:w="1"/><text x="0.2500%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="0.0000%" y="181" width="0.1572%" height="15" fill="rgb(247,81,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="191.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.16%)</title><rect x="0.0000%" y="165" width="0.1572%" height="15" fill="rgb(209,12,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="175.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.16%)</title><rect x="0.0000%" y="149" width="0.1572%" height="15" fill="rgb(227,1,9)" fg:x="0" fg:w="1"/><text x="0.2500%" y="159.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.16%)</title><rect x="0.0000%" y="133" width="0.1572%" height="15" fill="rgb(248,47,43)" fg:x="0" fg:w="1"/><text x="0.2500%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.16%)</title><rect x="0.0000%" y="117" width="0.1572%" height="15" fill="rgb(221,10,30)" fg:x="0" fg:w="1"/><text x="0.2500%" y="127.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.16%)</title><rect x="0.0000%" y="101" width="0.1572%" height="15" fill="rgb(210,229,1)" fg:x="0" fg:w="1"/><text x="0.2500%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="0.0000%" y="85" width="0.1572%" height="15" fill="rgb(222,148,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="95.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.16%)</title><rect x="0.0000%" y="69" width="0.1572%" height="15" fill="rgb(234,67,33)" fg:x="0" fg:w="1"/><text x="0.2500%" y="79.50"></text></g><g><title>demoparser::main (1 samples, 0.16%)</title><rect x="0.1572%" y="1093" width="0.1572%" height="15" fill="rgb(247,98,35)" fg:x="1" fg:w="1"/><text x="0.4072%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.16%)</title><rect x="0.1572%" y="1077" width="0.1572%" height="15" fill="rgb(247,138,52)" fg:x="1" fg:w="1"/><text x="0.4072%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.16%)</title><rect x="0.1572%" y="1061" width="0.1572%" height="15" fill="rgb(213,79,30)" fg:x="1" fg:w="1"/><text x="0.4072%" y="1071.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.16%)</title><rect x="0.1572%" y="1045" width="0.1572%" height="15" fill="rgb(246,177,23)" fg:x="1" fg:w="1"/><text x="0.4072%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.16%)</title><rect x="0.1572%" y="1029" width="0.1572%" height="15" fill="rgb(230,62,27)" fg:x="1" fg:w="1"/><text x="0.4072%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.16%)</title><rect x="0.1572%" y="1013" width="0.1572%" height="15" fill="rgb(216,154,8)" fg:x="1" fg:w="1"/><text x="0.4072%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.16%)</title><rect x="0.1572%" y="997" width="0.1572%" height="15" fill="rgb(244,35,45)" fg:x="1" fg:w="1"/><text x="0.4072%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.16%)</title><rect x="0.1572%" y="981" width="0.1572%" height="15" fill="rgb(251,115,12)" fg:x="1" fg:w="1"/><text x="0.4072%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.16%)</title><rect x="0.1572%" y="965" width="0.1572%" height="15" fill="rgb(240,54,50)" fg:x="1" fg:w="1"/><text x="0.4072%" y="975.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.16%)</title><rect x="0.1572%" y="949" width="0.1572%" height="15" fill="rgb(233,84,52)" fg:x="1" fg:w="1"/><text x="0.4072%" y="959.50"></text></g><g><title>demoparser::main::{{closure}} (1 samples, 0.16%)</title><rect x="0.1572%" y="933" width="0.1572%" height="15" fill="rgb(207,117,47)" fg:x="1" fg:w="1"/><text x="0.4072%" y="943.50"></text></g><g><title>demoparser::parse_demo (1 samples, 0.16%)</title><rect x="0.1572%" y="917" width="0.1572%" height="15" fill="rgb(249,43,39)" fg:x="1" fg:w="1"/><text x="0.4072%" y="927.50"></text></g><g><title>demoparser::parsing::parser::Parser::start_parsing (1 samples, 0.16%)</title><rect x="0.1572%" y="901" width="0.1572%" height="15" fill="rgb(209,38,44)" fg:x="1" fg:w="1"/><text x="0.4072%" y="911.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (1 samples, 0.16%)</title><rect x="0.1572%" y="885" width="0.1572%" height="15" fill="rgb(236,212,23)" fg:x="1" fg:w="1"/><text x="0.4072%" y="895.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_cmd (1 samples, 0.16%)</title><rect x="0.1572%" y="869" width="0.1572%" height="15" fill="rgb(242,79,21)" fg:x="1" fg:w="1"/><text x="0.4072%" y="879.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_datatable (1 samples, 0.16%)</title><rect x="0.1572%" y="853" width="0.1572%" height="15" fill="rgb(211,96,35)" fg:x="1" fg:w="1"/><text x="0.4072%" y="863.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::flatten_dt (1 samples, 0.16%)</title><rect x="0.1572%" y="837" width="0.1572%" height="15" fill="rgb(253,215,40)" fg:x="1" fg:w="1"/><text x="0.4072%" y="847.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.16%)</title><rect x="0.1572%" y="821" width="0.1572%" height="15" fill="rgb(211,81,21)" fg:x="1" fg:w="1"/><text x="0.4072%" y="831.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.16%)</title><rect x="0.1572%" y="805" width="0.1572%" height="15" fill="rgb(208,190,38)" fg:x="1" fg:w="1"/><text x="0.4072%" y="815.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.16%)</title><rect x="0.1572%" y="789" width="0.1572%" height="15" fill="rgb(235,213,38)" fg:x="1" fg:w="1"/><text x="0.4072%" y="799.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.16%)</title><rect x="0.1572%" y="773" width="0.1572%" height="15" fill="rgb(237,122,38)" fg:x="1" fg:w="1"/><text x="0.4072%" y="783.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.16%)</title><rect x="0.1572%" y="757" width="0.1572%" height="15" fill="rgb(244,218,35)" fg:x="1" fg:w="1"/><text x="0.4072%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.16%)</title><rect x="0.1572%" y="741" width="0.1572%" height="15" fill="rgb(240,68,47)" fg:x="1" fg:w="1"/><text x="0.4072%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.16%)</title><rect x="0.1572%" y="725" width="0.1572%" height="15" fill="rgb(210,16,53)" fg:x="1" fg:w="1"/><text x="0.4072%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.16%)</title><rect x="0.1572%" y="709" width="0.1572%" height="15" fill="rgb(235,124,12)" fg:x="1" fg:w="1"/><text x="0.4072%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.16%)</title><rect x="0.1572%" y="693" width="0.1572%" height="15" fill="rgb(224,169,11)" fg:x="1" fg:w="1"/><text x="0.4072%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.16%)</title><rect x="0.1572%" y="677" width="0.1572%" height="15" fill="rgb(250,166,2)" fg:x="1" fg:w="1"/><text x="0.4072%" y="687.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.16%)</title><rect x="0.1572%" y="661" width="0.1572%" height="15" fill="rgb(242,216,29)" fg:x="1" fg:w="1"/><text x="0.4072%" y="671.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.16%)</title><rect x="0.1572%" y="645" width="0.1572%" height="15" fill="rgb(230,116,27)" fg:x="1" fg:w="1"/><text x="0.4072%" y="655.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.16%)</title><rect x="0.1572%" y="629" width="0.1572%" height="15" fill="rgb(228,99,48)" fg:x="1" fg:w="1"/><text x="0.4072%" y="639.50"></text></g><g><title>_mi_memcpy_aligned (1 samples, 0.16%)</title><rect x="0.1572%" y="613" width="0.1572%" height="15" fill="rgb(253,11,6)" fg:x="1" fg:w="1"/><text x="0.4072%" y="623.50"></text></g><g><title>_mi_memcpy (1 samples, 0.16%)</title><rect x="0.1572%" y="597" width="0.1572%" height="15" fill="rgb(247,143,39)" fg:x="1" fg:w="1"/><text x="0.4072%" y="607.50"></text></g><g><title>memcpy (1 samples, 0.16%)</title><rect x="0.1572%" y="581" width="0.1572%" height="15" fill="rgb(236,97,10)" fg:x="1" fg:w="1"/><text x="0.4072%" y="591.50"></text></g><g><title>[libc.so.6] (1 samples, 0.16%)</title><rect x="0.1572%" y="565" width="0.1572%" height="15" fill="rgb(233,208,19)" fg:x="1" fg:w="1"/><text x="0.4072%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.16%)</title><rect x="0.6289%" y="901" width="0.1572%" height="15" fill="rgb(216,164,2)" fg:x="4" fg:w="1"/><text x="0.8789%" y="911.50"></text></g><g><title>alloc::slice::merge_sort (1 samples, 0.16%)</title><rect x="0.6289%" y="885" width="0.1572%" height="15" fill="rgb(220,129,5)" fg:x="4" fg:w="1"/><text x="0.8789%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.16%)</title><rect x="0.6289%" y="869" width="0.1572%" height="15" fill="rgb(242,17,10)" fg:x="4" fg:w="1"/><text x="0.8789%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.16%)</title><rect x="0.6289%" y="853" width="0.1572%" height="15" fill="rgb(242,107,0)" fg:x="4" fg:w="1"/><text x="0.8789%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.16%)</title><rect x="0.6289%" y="837" width="0.1572%" height="15" fill="rgb(251,28,31)" fg:x="4" fg:w="1"/><text x="0.8789%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.16%)</title><rect x="0.6289%" y="821" width="0.1572%" height="15" fill="rgb(233,223,10)" fg:x="4" fg:w="1"/><text x="0.8789%" y="831.50"></text></g><g><title>mi_malloc (1 samples, 0.16%)</title><rect x="0.6289%" y="805" width="0.1572%" height="15" fill="rgb(215,21,27)" fg:x="4" fg:w="1"/><text x="0.8789%" y="815.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.16%)</title><rect x="0.6289%" y="789" width="0.1572%" height="15" fill="rgb(232,23,21)" fg:x="4" fg:w="1"/><text x="0.8789%" y="799.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="0.9434%" y="885" width="0.1572%" height="15" fill="rgb(244,5,23)" fg:x="6" fg:w="1"/><text x="1.1934%" y="895.50"></text></g><g><title>core::ptr::read (1 samples, 0.16%)</title><rect x="0.9434%" y="869" width="0.1572%" height="15" fill="rgb(226,81,46)" fg:x="6" fg:w="1"/><text x="1.1934%" y="879.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.16%)</title><rect x="0.9434%" y="853" width="0.1572%" height="15" fill="rgb(247,70,30)" fg:x="6" fg:w="1"/><text x="1.1934%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.16%)</title><rect x="1.1006%" y="885" width="0.1572%" height="15" fill="rgb(212,68,19)" fg:x="7" fg:w="1"/><text x="1.3506%" y="895.50"></text></g><g><title>alloc::slice::merge_sort (1 samples, 0.16%)</title><rect x="1.1006%" y="869" width="0.1572%" height="15" fill="rgb(240,187,13)" fg:x="7" fg:w="1"/><text x="1.3506%" y="879.50"></text></g><g><title>alloc::slice::merge (1 samples, 0.16%)</title><rect x="1.1006%" y="853" width="0.1572%" height="15" fill="rgb(223,113,26)" fg:x="7" fg:w="1"/><text x="1.3506%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="1.1006%" y="837" width="0.1572%" height="15" fill="rgb(206,192,2)" fg:x="7" fg:w="1"/><text x="1.3506%" y="847.50"></text></g><g><title>[libc.so.6] (1 samples, 0.16%)</title><rect x="1.1006%" y="821" width="0.1572%" height="15" fill="rgb(241,108,4)" fg:x="7" fg:w="1"/><text x="1.3506%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (1 samples, 0.16%)</title><rect x="1.2579%" y="869" width="0.1572%" height="15" fill="rgb(247,173,49)" fg:x="8" fg:w="1"/><text x="1.5079%" y="879.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.16%)</title><rect x="1.2579%" y="853" width="0.1572%" height="15" fill="rgb(224,114,35)" fg:x="8" fg:w="1"/><text x="1.5079%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.16%)</title><rect x="1.2579%" y="837" width="0.1572%" height="15" fill="rgb(245,159,27)" fg:x="8" fg:w="1"/><text x="1.5079%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.16%)</title><rect x="1.2579%" y="821" width="0.1572%" height="15" fill="rgb(245,172,44)" fg:x="8" fg:w="1"/><text x="1.5079%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.16%)</title><rect x="1.2579%" y="805" width="0.1572%" height="15" fill="rgb(236,23,11)" fg:x="8" fg:w="1"/><text x="1.5079%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.16%)</title><rect x="1.2579%" y="789" width="0.1572%" height="15" fill="rgb(205,117,38)" fg:x="8" fg:w="1"/><text x="1.5079%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.16%)</title><rect x="1.2579%" y="773" width="0.1572%" height="15" fill="rgb(237,72,25)" fg:x="8" fg:w="1"/><text x="1.5079%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.16%)</title><rect x="1.2579%" y="757" width="0.1572%" height="15" fill="rgb(244,70,9)" fg:x="8" fg:w="1"/><text x="1.5079%" y="767.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.16%)</title><rect x="1.2579%" y="741" width="0.1572%" height="15" fill="rgb(217,125,39)" fg:x="8" fg:w="1"/><text x="1.5079%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.16%)</title><rect x="1.2579%" y="725" width="0.1572%" height="15" fill="rgb(235,36,10)" fg:x="8" fg:w="1"/><text x="1.5079%" y="735.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.16%)</title><rect x="1.2579%" y="709" width="0.1572%" height="15" fill="rgb(251,123,47)" fg:x="8" fg:w="1"/><text x="1.5079%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.16%)</title><rect x="1.2579%" y="693" width="0.1572%" height="15" fill="rgb(221,13,13)" fg:x="8" fg:w="1"/><text x="1.5079%" y="703.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.16%)</title><rect x="1.2579%" y="677" width="0.1572%" height="15" fill="rgb(238,131,9)" fg:x="8" fg:w="1"/><text x="1.5079%" y="687.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.16%)</title><rect x="1.2579%" y="661" width="0.1572%" height="15" fill="rgb(211,50,8)" fg:x="8" fg:w="1"/><text x="1.5079%" y="671.50"></text></g><g><title>[libc.so.6] (1 samples, 0.16%)</title><rect x="1.2579%" y="645" width="0.1572%" height="15" fill="rgb(245,182,24)" fg:x="8" fg:w="1"/><text x="1.5079%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.16%)</title><rect x="1.4151%" y="869" width="0.1572%" height="15" fill="rgb(242,14,37)" fg:x="9" fg:w="1"/><text x="1.6651%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.16%)</title><rect x="1.4151%" y="853" width="0.1572%" height="15" fill="rgb(246,228,12)" fg:x="9" fg:w="1"/><text x="1.6651%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.16%)</title><rect x="1.4151%" y="837" width="0.1572%" height="15" fill="rgb(213,55,15)" fg:x="9" fg:w="1"/><text x="1.6651%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.16%)</title><rect x="1.4151%" y="821" width="0.1572%" height="15" fill="rgb(209,9,3)" fg:x="9" fg:w="1"/><text x="1.6651%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.16%)</title><rect x="1.4151%" y="805" width="0.1572%" height="15" fill="rgb(230,59,30)" fg:x="9" fg:w="1"/><text x="1.6651%" y="815.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.16%)</title><rect x="1.4151%" y="789" width="0.1572%" height="15" fill="rgb(209,121,21)" fg:x="9" fg:w="1"/><text x="1.6651%" y="799.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.16%)</title><rect x="1.4151%" y="773" width="0.1572%" height="15" fill="rgb(220,109,13)" fg:x="9" fg:w="1"/><text x="1.6651%" y="783.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.16%)</title><rect x="1.4151%" y="757" width="0.1572%" height="15" fill="rgb(232,18,1)" fg:x="9" fg:w="1"/><text x="1.6651%" y="767.50"></text></g><g><title>_mi_memcpy_aligned (1 samples, 0.16%)</title><rect x="1.4151%" y="741" width="0.1572%" height="15" fill="rgb(215,41,42)" fg:x="9" fg:w="1"/><text x="1.6651%" y="751.50"></text></g><g><title>_mi_memcpy (1 samples, 0.16%)</title><rect x="1.4151%" y="725" width="0.1572%" height="15" fill="rgb(224,123,36)" fg:x="9" fg:w="1"/><text x="1.6651%" y="735.50"></text></g><g><title>memcpy (1 samples, 0.16%)</title><rect x="1.4151%" y="709" width="0.1572%" height="15" fill="rgb(240,125,3)" fg:x="9" fg:w="1"/><text x="1.6651%" y="719.50"></text></g><g><title>[libc.so.6] (1 samples, 0.16%)</title><rect x="1.4151%" y="693" width="0.1572%" height="15" fill="rgb(205,98,50)" fg:x="9" fg:w="1"/><text x="1.6651%" y="703.50"></text></g><g><title>demoparser::parse_demo (9 samples, 1.42%)</title><rect x="0.3145%" y="1093" width="1.4151%" height="15" fill="rgb(205,185,37)" fg:x="2" fg:w="9"/><text x="0.5645%" y="1103.50"></text></g><g><title>demoparser::parsing::parser::Parser::start_parsing (9 samples, 1.42%)</title><rect x="0.3145%" y="1077" width="1.4151%" height="15" fill="rgb(238,207,15)" fg:x="2" fg:w="9"/><text x="0.5645%" y="1087.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (9 samples, 1.42%)</title><rect x="0.3145%" y="1061" width="1.4151%" height="15" fill="rgb(213,199,42)" fg:x="2" fg:w="9"/><text x="0.5645%" y="1071.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_cmd (9 samples, 1.42%)</title><rect x="0.3145%" y="1045" width="1.4151%" height="15" fill="rgb(235,201,11)" fg:x="2" fg:w="9"/><text x="0.5645%" y="1055.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_datatable (9 samples, 1.42%)</title><rect x="0.3145%" y="1029" width="1.4151%" height="15" fill="rgb(207,46,11)" fg:x="2" fg:w="9"/><text x="0.5645%" y="1039.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::flatten_dt (9 samples, 1.42%)</title><rect x="0.3145%" y="1013" width="1.4151%" height="15" fill="rgb(241,35,35)" fg:x="2" fg:w="9"/><text x="0.5645%" y="1023.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (9 samples, 1.42%)</title><rect x="0.3145%" y="997" width="1.4151%" height="15" fill="rgb(243,32,47)" fg:x="2" fg:w="9"/><text x="0.5645%" y="1007.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (9 samples, 1.42%)</title><rect x="0.3145%" y="981" width="1.4151%" height="15" fill="rgb(247,202,23)" fg:x="2" fg:w="9"/><text x="0.5645%" y="991.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (9 samples, 1.42%)</title><rect x="0.3145%" y="965" width="1.4151%" height="15" fill="rgb(219,102,11)" fg:x="2" fg:w="9"/><text x="0.5645%" y="975.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (9 samples, 1.42%)</title><rect x="0.3145%" y="949" width="1.4151%" height="15" fill="rgb(243,110,44)" fg:x="2" fg:w="9"/><text x="0.5645%" y="959.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (9 samples, 1.42%)</title><rect x="0.3145%" y="933" width="1.4151%" height="15" fill="rgb(222,74,54)" fg:x="2" fg:w="9"/><text x="0.5645%" y="943.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (9 samples, 1.42%)</title><rect x="0.3145%" y="917" width="1.4151%" height="15" fill="rgb(216,99,12)" fg:x="2" fg:w="9"/><text x="0.5645%" y="927.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (6 samples, 0.94%)</title><rect x="0.7862%" y="901" width="0.9434%" height="15" fill="rgb(226,22,26)" fg:x="5" fg:w="6"/><text x="1.0362%" y="911.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (3 samples, 0.47%)</title><rect x="1.2579%" y="885" width="0.4717%" height="15" fill="rgb(217,163,10)" fg:x="8" fg:w="3"/><text x="1.5079%" y="895.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.16%)</title><rect x="1.5723%" y="869" width="0.1572%" height="15" fill="rgb(213,25,53)" fg:x="10" fg:w="1"/><text x="1.8223%" y="879.50"></text></g><g><title>mi_page_free_list_extend (1 samples, 0.16%)</title><rect x="1.7296%" y="1093" width="0.1572%" height="15" fill="rgb(252,105,26)" fg:x="11" fg:w="1"/><text x="1.9796%" y="1103.50"></text></g><g><title>mi_block_set_next (1 samples, 0.16%)</title><rect x="1.7296%" y="1077" width="0.1572%" height="15" fill="rgb(220,39,43)" fg:x="11" fg:w="1"/><text x="1.9796%" y="1087.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.16%)</title><rect x="1.7296%" y="1061" width="0.1572%" height="15" fill="rgb(229,68,48)" fg:x="11" fg:w="1"/><text x="1.9796%" y="1071.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.16%)</title><rect x="1.7296%" y="1045" width="0.1572%" height="15" fill="rgb(252,8,32)" fg:x="11" fg:w="1"/><text x="1.9796%" y="1055.50"></text></g><g><title>[unknown] (13 samples, 2.04%)</title><rect x="0.0000%" y="1109" width="2.0440%" height="15" fill="rgb(223,20,43)" fg:x="0" fg:w="13"/><text x="0.2500%" y="1119.50">[..</text></g><g><title>std::rt::lang_start_internal (1 samples, 0.16%)</title><rect x="1.8868%" y="1093" width="0.1572%" height="15" fill="rgb(229,81,49)" fg:x="12" fg:w="1"/><text x="2.1368%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.16%)</title><rect x="1.8868%" y="1077" width="0.1572%" height="15" fill="rgb(236,28,36)" fg:x="12" fg:w="1"/><text x="2.1368%" y="1087.50"></text></g><g><title>std::panicking::try (1 samples, 0.16%)</title><rect x="1.8868%" y="1061" width="0.1572%" height="15" fill="rgb(249,185,26)" fg:x="12" fg:w="1"/><text x="2.1368%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.16%)</title><rect x="1.8868%" y="1045" width="0.1572%" height="15" fill="rgb(249,174,33)" fg:x="12" fg:w="1"/><text x="2.1368%" y="1055.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (1 samples, 0.16%)</title><rect x="1.8868%" y="1029" width="0.1572%" height="15" fill="rgb(233,201,37)" fg:x="12" fg:w="1"/><text x="2.1368%" y="1039.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.16%)</title><rect x="1.8868%" y="1013" width="0.1572%" height="15" fill="rgb(221,78,26)" fg:x="12" fg:w="1"/><text x="2.1368%" y="1023.50"></text></g><g><title>std::panicking::try (1 samples, 0.16%)</title><rect x="1.8868%" y="997" width="0.1572%" height="15" fill="rgb(250,127,30)" fg:x="12" fg:w="1"/><text x="2.1368%" y="1007.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.16%)</title><rect x="1.8868%" y="981" width="0.1572%" height="15" fill="rgb(230,49,44)" fg:x="12" fg:w="1"/><text x="2.1368%" y="991.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 0.16%)</title><rect x="1.8868%" y="965" width="0.1572%" height="15" fill="rgb(229,67,23)" fg:x="12" fg:w="1"/><text x="2.1368%" y="975.50"></text></g><g><title>std::rt::lang_start::{{closure}} (1 samples, 0.16%)</title><rect x="1.8868%" y="949" width="0.1572%" height="15" fill="rgb(249,83,47)" fg:x="12" fg:w="1"/><text x="2.1368%" y="959.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.16%)</title><rect x="1.8868%" y="933" width="0.1572%" height="15" fill="rgb(215,43,3)" fg:x="12" fg:w="1"/><text x="2.1368%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.16%)</title><rect x="1.8868%" y="917" width="0.1572%" height="15" fill="rgb(238,154,13)" fg:x="12" fg:w="1"/><text x="2.1368%" y="927.50"></text></g><g><title>demoparser::main (1 samples, 0.16%)</title><rect x="1.8868%" y="901" width="0.1572%" height="15" fill="rgb(219,56,2)" fg:x="12" fg:w="1"/><text x="2.1368%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.16%)</title><rect x="1.8868%" y="885" width="0.1572%" height="15" fill="rgb(233,0,4)" fg:x="12" fg:w="1"/><text x="2.1368%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.16%)</title><rect x="1.8868%" y="869" width="0.1572%" height="15" fill="rgb(235,30,7)" fg:x="12" fg:w="1"/><text x="2.1368%" y="879.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.16%)</title><rect x="1.8868%" y="853" width="0.1572%" height="15" fill="rgb(250,79,13)" fg:x="12" fg:w="1"/><text x="2.1368%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.16%)</title><rect x="1.8868%" y="837" width="0.1572%" height="15" fill="rgb(211,146,34)" fg:x="12" fg:w="1"/><text x="2.1368%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.16%)</title><rect x="1.8868%" y="821" width="0.1572%" height="15" fill="rgb(228,22,38)" fg:x="12" fg:w="1"/><text x="2.1368%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.16%)</title><rect x="1.8868%" y="805" width="0.1572%" height="15" fill="rgb(235,168,5)" fg:x="12" fg:w="1"/><text x="2.1368%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.16%)</title><rect x="1.8868%" y="789" width="0.1572%" height="15" fill="rgb(221,155,16)" fg:x="12" fg:w="1"/><text x="2.1368%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.16%)</title><rect x="1.8868%" y="773" width="0.1572%" height="15" fill="rgb(215,215,53)" fg:x="12" fg:w="1"/><text x="2.1368%" y="783.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.16%)</title><rect x="1.8868%" y="757" width="0.1572%" height="15" fill="rgb(223,4,10)" fg:x="12" fg:w="1"/><text x="2.1368%" y="767.50"></text></g><g><title>demoparser::main::{{closure}} (1 samples, 0.16%)</title><rect x="1.8868%" y="741" width="0.1572%" height="15" fill="rgb(234,103,6)" fg:x="12" fg:w="1"/><text x="2.1368%" y="751.50"></text></g><g><title>demoparser::parse_demo (1 samples, 0.16%)</title><rect x="1.8868%" y="725" width="0.1572%" height="15" fill="rgb(227,97,0)" fg:x="12" fg:w="1"/><text x="2.1368%" y="735.50"></text></g><g><title>demoparser::parsing::parser::Parser::start_parsing (1 samples, 0.16%)</title><rect x="1.8868%" y="709" width="0.1572%" height="15" fill="rgb(234,150,53)" fg:x="12" fg:w="1"/><text x="2.1368%" y="719.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (1 samples, 0.16%)</title><rect x="1.8868%" y="693" width="0.1572%" height="15" fill="rgb(228,201,54)" fg:x="12" fg:w="1"/><text x="2.1368%" y="703.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_cmd (1 samples, 0.16%)</title><rect x="1.8868%" y="677" width="0.1572%" height="15" fill="rgb(222,22,37)" fg:x="12" fg:w="1"/><text x="2.1368%" y="687.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_datatable (1 samples, 0.16%)</title><rect x="1.8868%" y="661" width="0.1572%" height="15" fill="rgb(237,53,32)" fg:x="12" fg:w="1"/><text x="2.1368%" y="671.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::flatten_dt (1 samples, 0.16%)</title><rect x="1.8868%" y="645" width="0.1572%" height="15" fill="rgb(233,25,53)" fg:x="12" fg:w="1"/><text x="2.1368%" y="655.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.16%)</title><rect x="1.8868%" y="629" width="0.1572%" height="15" fill="rgb(210,40,34)" fg:x="12" fg:w="1"/><text x="2.1368%" y="639.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.16%)</title><rect x="1.8868%" y="613" width="0.1572%" height="15" fill="rgb(241,220,44)" fg:x="12" fg:w="1"/><text x="2.1368%" y="623.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.16%)</title><rect x="1.8868%" y="597" width="0.1572%" height="15" fill="rgb(235,28,35)" fg:x="12" fg:w="1"/><text x="2.1368%" y="607.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.16%)</title><rect x="1.8868%" y="581" width="0.1572%" height="15" fill="rgb(210,56,17)" fg:x="12" fg:w="1"/><text x="2.1368%" y="591.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.16%)</title><rect x="1.8868%" y="565" width="0.1572%" height="15" fill="rgb(224,130,29)" fg:x="12" fg:w="1"/><text x="2.1368%" y="575.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.16%)</title><rect x="2.0440%" y="1093" width="0.1572%" height="15" fill="rgb(235,212,8)" fg:x="13" fg:w="1"/><text x="2.2940%" y="1103.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.16%)</title><rect x="2.2013%" y="1061" width="0.1572%" height="15" fill="rgb(223,33,50)" fg:x="14" fg:w="1"/><text x="2.4513%" y="1071.50"></text></g><g><title>up_read (1 samples, 0.16%)</title><rect x="2.2013%" y="1045" width="0.1572%" height="15" fill="rgb(219,149,13)" fg:x="14" fg:w="1"/><text x="2.4513%" y="1055.50"></text></g><g><title>rwsem_wake.isra.0 (1 samples, 0.16%)</title><rect x="2.2013%" y="1029" width="0.1572%" height="15" fill="rgb(250,156,29)" fg:x="14" fg:w="1"/><text x="2.4513%" y="1039.50"></text></g><g><title>rwsem_mark_wake (1 samples, 0.16%)</title><rect x="2.2013%" y="1013" width="0.1572%" height="15" fill="rgb(216,193,19)" fg:x="14" fg:w="1"/><text x="2.4513%" y="1023.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.31%)</title><rect x="2.2013%" y="1093" width="0.3145%" height="15" fill="rgb(216,135,14)" fg:x="14" fg:w="2"/><text x="2.4513%" y="1103.50"></text></g><g><title>exc_page_fault (2 samples, 0.31%)</title><rect x="2.2013%" y="1077" width="0.3145%" height="15" fill="rgb(241,47,5)" fg:x="14" fg:w="2"/><text x="2.4513%" y="1087.50"></text></g><g><title>irqentry_exit (1 samples, 0.16%)</title><rect x="2.3585%" y="1061" width="0.1572%" height="15" fill="rgb(233,42,35)" fg:x="15" fg:w="1"/><text x="2.6085%" y="1071.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.16%)</title><rect x="2.3585%" y="1045" width="0.1572%" height="15" fill="rgb(231,13,6)" fg:x="15" fg:w="1"/><text x="2.6085%" y="1055.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.16%)</title><rect x="2.3585%" y="1029" width="0.1572%" height="15" fill="rgb(207,181,40)" fg:x="15" fg:w="1"/><text x="2.6085%" y="1039.50"></text></g><g><title>switch_fpu_return (1 samples, 0.16%)</title><rect x="2.3585%" y="1013" width="0.1572%" height="15" fill="rgb(254,173,49)" fg:x="15" fg:w="1"/><text x="2.6085%" y="1023.50"></text></g><g><title>restore_fpregs_from_fpstate (1 samples, 0.16%)</title><rect x="2.3585%" y="997" width="0.1572%" height="15" fill="rgb(221,1,38)" fg:x="15" fg:w="1"/><text x="2.6085%" y="1007.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.16%)</title><rect x="2.5157%" y="1093" width="0.1572%" height="15" fill="rgb(206,124,46)" fg:x="16" fg:w="1"/><text x="2.7657%" y="1103.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.16%)</title><rect x="2.5157%" y="1077" width="0.1572%" height="15" fill="rgb(249,21,11)" fg:x="16" fg:w="1"/><text x="2.7657%" y="1087.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.16%)</title><rect x="2.5157%" y="1061" width="0.1572%" height="15" fill="rgb(222,201,40)" fg:x="16" fg:w="1"/><text x="2.7657%" y="1071.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.16%)</title><rect x="2.5157%" y="1045" width="0.1572%" height="15" fill="rgb(235,61,29)" fg:x="16" fg:w="1"/><text x="2.7657%" y="1055.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.16%)</title><rect x="2.5157%" y="1029" width="0.1572%" height="15" fill="rgb(219,207,3)" fg:x="16" fg:w="1"/><text x="2.7657%" y="1039.50"></text></g><g><title>__remove_hrtimer (1 samples, 0.16%)</title><rect x="2.5157%" y="1013" width="0.1572%" height="15" fill="rgb(222,56,46)" fg:x="16" fg:w="1"/><text x="2.7657%" y="1023.50"></text></g><g><title>timerqueue_del (1 samples, 0.16%)</title><rect x="2.5157%" y="997" width="0.1572%" height="15" fill="rgb(239,76,54)" fg:x="16" fg:w="1"/><text x="2.7657%" y="1007.50"></text></g><g><title>dup_task_struct (1 samples, 0.16%)</title><rect x="2.6730%" y="997" width="0.1572%" height="15" fill="rgb(231,124,27)" fg:x="17" fg:w="1"/><text x="2.9230%" y="1007.50"></text></g><g><title>alloc_thread_stack_node (1 samples, 0.16%)</title><rect x="2.6730%" y="981" width="0.1572%" height="15" fill="rgb(249,195,6)" fg:x="17" fg:w="1"/><text x="2.9230%" y="991.50"></text></g><g><title>__vmalloc_node_range (1 samples, 0.16%)</title><rect x="2.6730%" y="965" width="0.1572%" height="15" fill="rgb(237,174,47)" fg:x="17" fg:w="1"/><text x="2.9230%" y="975.50"></text></g><g><title>__get_vm_area_node (1 samples, 0.16%)</title><rect x="2.6730%" y="949" width="0.1572%" height="15" fill="rgb(206,201,31)" fg:x="17" fg:w="1"/><text x="2.9230%" y="959.50"></text></g><g><title>alloc_vmap_area (1 samples, 0.16%)</title><rect x="2.6730%" y="933" width="0.1572%" height="15" fill="rgb(231,57,52)" fg:x="17" fg:w="1"/><text x="2.9230%" y="943.50"></text></g><g><title>insert_vmap_area.constprop.0 (1 samples, 0.16%)</title><rect x="2.6730%" y="917" width="0.1572%" height="15" fill="rgb(248,177,22)" fg:x="17" fg:w="1"/><text x="2.9230%" y="927.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.31%)</title><rect x="2.6730%" y="1093" width="0.3145%" height="15" fill="rgb(215,211,37)" fg:x="17" fg:w="2"/><text x="2.9230%" y="1103.50"></text></g><g><title>do_syscall_64 (2 samples, 0.31%)</title><rect x="2.6730%" y="1077" width="0.3145%" height="15" fill="rgb(241,128,51)" fg:x="17" fg:w="2"/><text x="2.9230%" y="1087.50"></text></g><g><title>__x64_sys_clone3 (2 samples, 0.31%)</title><rect x="2.6730%" y="1061" width="0.3145%" height="15" fill="rgb(227,165,31)" fg:x="17" fg:w="2"/><text x="2.9230%" y="1071.50"></text></g><g><title>__do_sys_clone3 (2 samples, 0.31%)</title><rect x="2.6730%" y="1045" width="0.3145%" height="15" fill="rgb(228,167,24)" fg:x="17" fg:w="2"/><text x="2.9230%" y="1055.50"></text></g><g><title>kernel_clone (2 samples, 0.31%)</title><rect x="2.6730%" y="1029" width="0.3145%" height="15" fill="rgb(228,143,12)" fg:x="17" fg:w="2"/><text x="2.9230%" y="1039.50"></text></g><g><title>copy_process (2 samples, 0.31%)</title><rect x="2.6730%" y="1013" width="0.3145%" height="15" fill="rgb(249,149,8)" fg:x="17" fg:w="2"/><text x="2.9230%" y="1023.50"></text></g><g><title>perf_event_init_task (1 samples, 0.16%)</title><rect x="2.8302%" y="997" width="0.1572%" height="15" fill="rgb(243,35,44)" fg:x="18" fg:w="1"/><text x="3.0802%" y="1007.50"></text></g><g><title>perf_event_init_context (1 samples, 0.16%)</title><rect x="2.8302%" y="981" width="0.1572%" height="15" fill="rgb(246,89,9)" fg:x="18" fg:w="1"/><text x="3.0802%" y="991.50"></text></g><g><title>inherit_task_group.isra.0 (1 samples, 0.16%)</title><rect x="2.8302%" y="965" width="0.1572%" height="15" fill="rgb(233,213,13)" fg:x="18" fg:w="1"/><text x="3.0802%" y="975.50"></text></g><g><title>inherit_event.constprop.0 (1 samples, 0.16%)</title><rect x="2.8302%" y="949" width="0.1572%" height="15" fill="rgb(233,141,41)" fg:x="18" fg:w="1"/><text x="3.0802%" y="959.50"></text></g><g><title>perf_event_alloc (1 samples, 0.16%)</title><rect x="2.8302%" y="933" width="0.1572%" height="15" fill="rgb(239,167,4)" fg:x="18" fg:w="1"/><text x="3.0802%" y="943.50"></text></g><g><title>perf_init_event (1 samples, 0.16%)</title><rect x="2.8302%" y="917" width="0.1572%" height="15" fill="rgb(209,217,16)" fg:x="18" fg:w="1"/><text x="3.0802%" y="927.50"></text></g><g><title>perf_try_init_event (1 samples, 0.16%)</title><rect x="2.8302%" y="901" width="0.1572%" height="15" fill="rgb(219,88,35)" fg:x="18" fg:w="1"/><text x="3.0802%" y="911.50"></text></g><g><title>x86_pmu_event_init (1 samples, 0.16%)</title><rect x="2.8302%" y="885" width="0.1572%" height="15" fill="rgb(220,193,23)" fg:x="18" fg:w="1"/><text x="3.0802%" y="895.50"></text></g><g><title>allocate_fake_cpuc (1 samples, 0.16%)</title><rect x="2.8302%" y="869" width="0.1572%" height="15" fill="rgb(230,90,52)" fg:x="18" fg:w="1"/><text x="3.0802%" y="879.50"></text></g><g><title>memset_erms (1 samples, 0.16%)</title><rect x="2.8302%" y="853" width="0.1572%" height="15" fill="rgb(252,106,19)" fg:x="18" fg:w="1"/><text x="3.0802%" y="863.50"></text></g><g><title>__GI___ctype_init (1 samples, 0.16%)</title><rect x="2.9874%" y="1077" width="0.1572%" height="15" fill="rgb(206,74,20)" fg:x="19" fg:w="1"/><text x="3.2374%" y="1087.50"></text></g><g><title>rwsem_optimistic_spin (1 samples, 0.16%)</title><rect x="3.1447%" y="325" width="0.1572%" height="15" fill="rgb(230,138,44)" fg:x="20" fg:w="1"/><text x="3.3947%" y="335.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.16%)</title><rect x="3.3019%" y="245" width="0.1572%" height="15" fill="rgb(235,182,43)" fg:x="21" fg:w="1"/><text x="3.5519%" y="255.50"></text></g><g><title>_mi_arena_alloc_aligned (3 samples, 0.47%)</title><rect x="3.1447%" y="565" width="0.4717%" height="15" fill="rgb(242,16,51)" fg:x="20" fg:w="3"/><text x="3.3947%" y="575.50"></text></g><g><title>_mi_os_alloc_aligned (3 samples, 0.47%)</title><rect x="3.1447%" y="549" width="0.4717%" height="15" fill="rgb(248,9,4)" fg:x="20" fg:w="3"/><text x="3.3947%" y="559.50"></text></g><g><title>mi_os_mem_alloc_aligned (3 samples, 0.47%)</title><rect x="3.1447%" y="533" width="0.4717%" height="15" fill="rgb(210,31,22)" fg:x="20" fg:w="3"/><text x="3.3947%" y="543.50"></text></g><g><title>mi_os_mem_alloc (3 samples, 0.47%)</title><rect x="3.1447%" y="517" width="0.4717%" height="15" fill="rgb(239,54,39)" fg:x="20" fg:w="3"/><text x="3.3947%" y="527.50"></text></g><g><title>mi_unix_mmap (3 samples, 0.47%)</title><rect x="3.1447%" y="501" width="0.4717%" height="15" fill="rgb(230,99,41)" fg:x="20" fg:w="3"/><text x="3.3947%" y="511.50"></text></g><g><title>mi_unix_mmapx (3 samples, 0.47%)</title><rect x="3.1447%" y="485" width="0.4717%" height="15" fill="rgb(253,106,12)" fg:x="20" fg:w="3"/><text x="3.3947%" y="495.50"></text></g><g><title>__GI___mmap64 (3 samples, 0.47%)</title><rect x="3.1447%" y="469" width="0.4717%" height="15" fill="rgb(213,46,41)" fg:x="20" fg:w="3"/><text x="3.3947%" y="479.50"></text></g><g><title>__GI___mmap64 (3 samples, 0.47%)</title><rect x="3.1447%" y="453" width="0.4717%" height="15" fill="rgb(215,133,35)" fg:x="20" fg:w="3"/><text x="3.3947%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.47%)</title><rect x="3.1447%" y="437" width="0.4717%" height="15" fill="rgb(213,28,5)" fg:x="20" fg:w="3"/><text x="3.3947%" y="447.50"></text></g><g><title>do_syscall_64 (3 samples, 0.47%)</title><rect x="3.1447%" y="421" width="0.4717%" height="15" fill="rgb(215,77,49)" fg:x="20" fg:w="3"/><text x="3.3947%" y="431.50"></text></g><g><title>__x64_sys_mmap (3 samples, 0.47%)</title><rect x="3.1447%" y="405" width="0.4717%" height="15" fill="rgb(248,100,22)" fg:x="20" fg:w="3"/><text x="3.3947%" y="415.50"></text></g><g><title>ksys_mmap_pgoff (3 samples, 0.47%)</title><rect x="3.1447%" y="389" width="0.4717%" height="15" fill="rgb(208,67,9)" fg:x="20" fg:w="3"/><text x="3.3947%" y="399.50"></text></g><g><title>vm_mmap_pgoff (3 samples, 0.47%)</title><rect x="3.1447%" y="373" width="0.4717%" height="15" fill="rgb(219,133,21)" fg:x="20" fg:w="3"/><text x="3.3947%" y="383.50"></text></g><g><title>down_write_killable (3 samples, 0.47%)</title><rect x="3.1447%" y="357" width="0.4717%" height="15" fill="rgb(246,46,29)" fg:x="20" fg:w="3"/><text x="3.3947%" y="367.50"></text></g><g><title>rwsem_down_write_slowpath (3 samples, 0.47%)</title><rect x="3.1447%" y="341" width="0.4717%" height="15" fill="rgb(246,185,52)" fg:x="20" fg:w="3"/><text x="3.3947%" y="351.50"></text></g><g><title>schedule (2 samples, 0.31%)</title><rect x="3.3019%" y="325" width="0.3145%" height="15" fill="rgb(252,136,11)" fg:x="21" fg:w="2"/><text x="3.5519%" y="335.50"></text></g><g><title>__schedule (2 samples, 0.31%)</title><rect x="3.3019%" y="309" width="0.3145%" height="15" fill="rgb(219,138,53)" fg:x="21" fg:w="2"/><text x="3.5519%" y="319.50"></text></g><g><title>pick_next_task (2 samples, 0.31%)</title><rect x="3.3019%" y="293" width="0.3145%" height="15" fill="rgb(211,51,23)" fg:x="21" fg:w="2"/><text x="3.5519%" y="303.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.31%)</title><rect x="3.3019%" y="277" width="0.3145%" height="15" fill="rgb(247,221,28)" fg:x="21" fg:w="2"/><text x="3.5519%" y="287.50"></text></g><g><title>newidle_balance (2 samples, 0.31%)</title><rect x="3.3019%" y="261" width="0.3145%" height="15" fill="rgb(251,222,45)" fg:x="21" fg:w="2"/><text x="3.5519%" y="271.50"></text></g><g><title>load_balance (1 samples, 0.16%)</title><rect x="3.4591%" y="245" width="0.1572%" height="15" fill="rgb(217,162,53)" fg:x="22" fg:w="1"/><text x="3.7091%" y="255.50"></text></g><g><title>find_busiest_group (1 samples, 0.16%)</title><rect x="3.4591%" y="229" width="0.1572%" height="15" fill="rgb(229,93,14)" fg:x="22" fg:w="1"/><text x="3.7091%" y="239.50"></text></g><g><title>update_sd_lb_stats.constprop.0 (1 samples, 0.16%)</title><rect x="3.4591%" y="213" width="0.1572%" height="15" fill="rgb(209,67,49)" fg:x="22" fg:w="1"/><text x="3.7091%" y="223.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.16%)</title><rect x="3.6164%" y="565" width="0.1572%" height="15" fill="rgb(213,87,29)" fg:x="23" fg:w="1"/><text x="3.8664%" y="575.50"></text></g><g><title>exc_page_fault (1 samples, 0.16%)</title><rect x="3.6164%" y="549" width="0.1572%" height="15" fill="rgb(205,151,52)" fg:x="23" fg:w="1"/><text x="3.8664%" y="559.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.16%)</title><rect x="3.6164%" y="533" width="0.1572%" height="15" fill="rgb(253,215,39)" fg:x="23" fg:w="1"/><text x="3.8664%" y="543.50"></text></g><g><title>down_read (1 samples, 0.16%)</title><rect x="3.6164%" y="517" width="0.1572%" height="15" fill="rgb(221,220,41)" fg:x="23" fg:w="1"/><text x="3.8664%" y="527.50"></text></g><g><title>rwsem_down_read_slowpath (1 samples, 0.16%)</title><rect x="3.6164%" y="501" width="0.1572%" height="15" fill="rgb(218,133,21)" fg:x="23" fg:w="1"/><text x="3.8664%" y="511.50"></text></g><g><title>schedule (1 samples, 0.16%)</title><rect x="3.6164%" y="485" width="0.1572%" height="15" fill="rgb(221,193,43)" fg:x="23" fg:w="1"/><text x="3.8664%" y="495.50"></text></g><g><title>__schedule (1 samples, 0.16%)</title><rect x="3.6164%" y="469" width="0.1572%" height="15" fill="rgb(240,128,52)" fg:x="23" fg:w="1"/><text x="3.8664%" y="479.50"></text></g><g><title>dequeue_task (1 samples, 0.16%)</title><rect x="3.6164%" y="453" width="0.1572%" height="15" fill="rgb(253,114,12)" fg:x="23" fg:w="1"/><text x="3.8664%" y="463.50"></text></g><g><title>__sysvec_irq_work (1 samples, 0.16%)</title><rect x="4.5597%" y="453" width="0.1572%" height="15" fill="rgb(215,223,47)" fg:x="29" fg:w="1"/><text x="4.8097%" y="463.50"></text></g><g><title>irq_work_run (1 samples, 0.16%)</title><rect x="4.5597%" y="437" width="0.1572%" height="15" fill="rgb(248,225,23)" fg:x="29" fg:w="1"/><text x="4.8097%" y="447.50"></text></g><g><title>irq_work_run_list (1 samples, 0.16%)</title><rect x="4.5597%" y="421" width="0.1572%" height="15" fill="rgb(250,108,0)" fg:x="29" fg:w="1"/><text x="4.8097%" y="431.50"></text></g><g><title>irq_work_single (1 samples, 0.16%)</title><rect x="4.5597%" y="405" width="0.1572%" height="15" fill="rgb(228,208,7)" fg:x="29" fg:w="1"/><text x="4.8097%" y="415.50"></text></g><g><title>perf_pending_irq (1 samples, 0.16%)</title><rect x="4.5597%" y="389" width="0.1572%" height="15" fill="rgb(244,45,10)" fg:x="29" fg:w="1"/><text x="4.8097%" y="399.50"></text></g><g><title>asm_sysvec_irq_work (2 samples, 0.31%)</title><rect x="4.5597%" y="485" width="0.3145%" height="15" fill="rgb(207,125,25)" fg:x="29" fg:w="2"/><text x="4.8097%" y="495.50"></text></g><g><title>sysvec_irq_work (2 samples, 0.31%)</title><rect x="4.5597%" y="469" width="0.3145%" height="15" fill="rgb(210,195,18)" fg:x="29" fg:w="2"/><text x="4.8097%" y="479.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.16%)</title><rect x="4.7170%" y="453" width="0.1572%" height="15" fill="rgb(249,80,12)" fg:x="30" fg:w="1"/><text x="4.9670%" y="463.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.16%)</title><rect x="4.7170%" y="437" width="0.1572%" height="15" fill="rgb(221,65,9)" fg:x="30" fg:w="1"/><text x="4.9670%" y="447.50"></text></g><g><title>_raw_spin_lock_irq (1 samples, 0.16%)</title><rect x="4.8742%" y="453" width="0.1572%" height="15" fill="rgb(235,49,36)" fg:x="31" fg:w="1"/><text x="5.1242%" y="463.50"></text></g><g><title>native_queued_spin_lock_slowpath (1 samples, 0.16%)</title><rect x="4.8742%" y="437" width="0.1572%" height="15" fill="rgb(225,32,20)" fg:x="31" fg:w="1"/><text x="5.1242%" y="447.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (1 samples, 0.16%)</title><rect x="4.8742%" y="421" width="0.1572%" height="15" fill="rgb(215,141,46)" fg:x="31" fg:w="1"/><text x="5.1242%" y="431.50"></text></g><g><title>dequeue_task (3 samples, 0.47%)</title><rect x="5.0314%" y="421" width="0.4717%" height="15" fill="rgb(250,160,47)" fg:x="32" fg:w="3"/><text x="5.2814%" y="431.50"></text></g><g><title>dequeue_task_fair (3 samples, 0.47%)</title><rect x="5.0314%" y="405" width="0.4717%" height="15" fill="rgb(216,222,40)" fg:x="32" fg:w="3"/><text x="5.2814%" y="415.50"></text></g><g><title>dequeue_entity (1 samples, 0.16%)</title><rect x="5.3459%" y="389" width="0.1572%" height="15" fill="rgb(234,217,39)" fg:x="34" fg:w="1"/><text x="5.5959%" y="399.50"></text></g><g><title>update_curr (1 samples, 0.16%)</title><rect x="5.3459%" y="373" width="0.1572%" height="15" fill="rgb(207,178,40)" fg:x="34" fg:w="1"/><text x="5.5959%" y="383.50"></text></g><g><title>prepare_task_switch (1 samples, 0.16%)</title><rect x="5.5031%" y="421" width="0.1572%" height="15" fill="rgb(221,136,13)" fg:x="35" fg:w="1"/><text x="5.7531%" y="431.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.16%)</title><rect x="5.5031%" y="405" width="0.1572%" height="15" fill="rgb(249,199,10)" fg:x="35" fg:w="1"/><text x="5.7531%" y="415.50"></text></g><g><title>perf_event_context_sched_out (1 samples, 0.16%)</title><rect x="5.5031%" y="389" width="0.1572%" height="15" fill="rgb(249,222,13)" fg:x="35" fg:w="1"/><text x="5.7531%" y="399.50"></text></g><g><title>x86_pmu_disable (1 samples, 0.16%)</title><rect x="5.5031%" y="373" width="0.1572%" height="15" fill="rgb(244,185,38)" fg:x="35" fg:w="1"/><text x="5.7531%" y="383.50"></text></g><g><title>amd_pmu_disable_all (1 samples, 0.16%)</title><rect x="5.5031%" y="357" width="0.1572%" height="15" fill="rgb(236,202,9)" fg:x="35" fg:w="1"/><text x="5.7531%" y="367.50"></text></g><g><title>amd_pmu_test_overflow_topbit (1 samples, 0.16%)</title><rect x="5.5031%" y="341" width="0.1572%" height="15" fill="rgb(250,229,37)" fg:x="35" fg:w="1"/><text x="5.7531%" y="351.50"></text></g><g><title>down_read (6 samples, 0.94%)</title><rect x="4.8742%" y="485" width="0.9434%" height="15" fill="rgb(206,174,23)" fg:x="31" fg:w="6"/><text x="5.1242%" y="495.50"></text></g><g><title>rwsem_down_read_slowpath (6 samples, 0.94%)</title><rect x="4.8742%" y="469" width="0.9434%" height="15" fill="rgb(211,33,43)" fg:x="31" fg:w="6"/><text x="5.1242%" y="479.50"></text></g><g><title>schedule (5 samples, 0.79%)</title><rect x="5.0314%" y="453" width="0.7862%" height="15" fill="rgb(245,58,50)" fg:x="32" fg:w="5"/><text x="5.2814%" y="463.50"></text></g><g><title>__schedule (5 samples, 0.79%)</title><rect x="5.0314%" y="437" width="0.7862%" height="15" fill="rgb(244,68,36)" fg:x="32" fg:w="5"/><text x="5.2814%" y="447.50"></text></g><g><title>psi_task_switch (1 samples, 0.16%)</title><rect x="5.6604%" y="421" width="0.1572%" height="15" fill="rgb(232,229,15)" fg:x="36" fg:w="1"/><text x="5.9104%" y="431.50"></text></g><g><title>psi_group_change (1 samples, 0.16%)</title><rect x="5.6604%" y="405" width="0.1572%" height="15" fill="rgb(254,30,23)" fg:x="36" fg:w="1"/><text x="5.9104%" y="415.50"></text></g><g><title>find_vma (1 samples, 0.16%)</title><rect x="5.8176%" y="485" width="0.1572%" height="15" fill="rgb(235,160,14)" fg:x="37" fg:w="1"/><text x="6.0676%" y="495.50"></text></g><g><title>consume_stock (1 samples, 0.16%)</title><rect x="6.2893%" y="373" width="0.1572%" height="15" fill="rgb(212,155,44)" fg:x="40" fg:w="1"/><text x="6.5393%" y="383.50"></text></g><g><title>charge_memcg (3 samples, 0.47%)</title><rect x="6.2893%" y="405" width="0.4717%" height="15" fill="rgb(226,2,50)" fg:x="40" fg:w="3"/><text x="6.5393%" y="415.50"></text></g><g><title>try_charge_memcg (3 samples, 0.47%)</title><rect x="6.2893%" y="389" width="0.4717%" height="15" fill="rgb(234,177,6)" fg:x="40" fg:w="3"/><text x="6.5393%" y="399.50"></text></g><g><title>page_counter_try_charge (2 samples, 0.31%)</title><rect x="6.4465%" y="373" width="0.3145%" height="15" fill="rgb(217,24,9)" fg:x="41" fg:w="2"/><text x="6.6965%" y="383.50"></text></g><g><title>__mem_cgroup_charge (5 samples, 0.79%)</title><rect x="6.2893%" y="421" width="0.7862%" height="15" fill="rgb(220,13,46)" fg:x="40" fg:w="5"/><text x="6.5393%" y="431.50"></text></g><g><title>get_mem_cgroup_from_mm (2 samples, 0.31%)</title><rect x="6.7610%" y="405" width="0.3145%" height="15" fill="rgb(239,221,27)" fg:x="43" fg:w="2"/><text x="7.0110%" y="415.50"></text></g><g><title>clear_page_erms (4 samples, 0.63%)</title><rect x="7.0755%" y="357" width="0.6289%" height="15" fill="rgb(222,198,25)" fg:x="45" fg:w="4"/><text x="7.3255%" y="367.50"></text></g><g><title>do_anonymous_page (13 samples, 2.04%)</title><rect x="6.2893%" y="437" width="2.0440%" height="15" fill="rgb(211,99,13)" fg:x="40" fg:w="13"/><text x="6.5393%" y="447.50">d..</text></g><g><title>vma_alloc_folio (8 samples, 1.26%)</title><rect x="7.0755%" y="421" width="1.2579%" height="15" fill="rgb(232,111,31)" fg:x="45" fg:w="8"/><text x="7.3255%" y="431.50"></text></g><g><title>__folio_alloc (8 samples, 1.26%)</title><rect x="7.0755%" y="405" width="1.2579%" height="15" fill="rgb(245,82,37)" fg:x="45" fg:w="8"/><text x="7.3255%" y="415.50"></text></g><g><title>__alloc_pages (8 samples, 1.26%)</title><rect x="7.0755%" y="389" width="1.2579%" height="15" fill="rgb(227,149,46)" fg:x="45" fg:w="8"/><text x="7.3255%" y="399.50"></text></g><g><title>get_page_from_freelist (8 samples, 1.26%)</title><rect x="7.0755%" y="373" width="1.2579%" height="15" fill="rgb(218,36,50)" fg:x="45" fg:w="8"/><text x="7.3255%" y="383.50"></text></g><g><title>rmqueue (4 samples, 0.63%)</title><rect x="7.7044%" y="357" width="0.6289%" height="15" fill="rgb(226,80,48)" fg:x="49" fg:w="4"/><text x="7.9544%" y="367.50"></text></g><g><title>rmqueue_pcplist.constprop.0 (4 samples, 0.63%)</title><rect x="7.7044%" y="341" width="0.6289%" height="15" fill="rgb(238,224,15)" fg:x="49" fg:w="4"/><text x="7.9544%" y="351.50"></text></g><g><title>__handle_mm_fault (15 samples, 2.36%)</title><rect x="6.1321%" y="469" width="2.3585%" height="15" fill="rgb(241,136,10)" fg:x="39" fg:w="15"/><text x="6.3821%" y="479.50">_..</text></g><g><title>handle_pte_fault (14 samples, 2.20%)</title><rect x="6.2893%" y="453" width="2.2013%" height="15" fill="rgb(208,32,45)" fg:x="40" fg:w="14"/><text x="6.5393%" y="463.50">h..</text></g><g><title>pfn_pte (1 samples, 0.16%)</title><rect x="8.3333%" y="437" width="0.1572%" height="15" fill="rgb(207,135,9)" fg:x="53" fg:w="1"/><text x="8.5833%" y="447.50"></text></g><g><title>__count_memcg_events (6 samples, 0.94%)</title><rect x="8.6478%" y="453" width="0.9434%" height="15" fill="rgb(206,86,44)" fg:x="55" fg:w="6"/><text x="8.8978%" y="463.50"></text></g><g><title>cgroup_rstat_updated (5 samples, 0.79%)</title><rect x="8.8050%" y="437" width="0.7862%" height="15" fill="rgb(245,177,15)" fg:x="56" fg:w="5"/><text x="9.0550%" y="447.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.16%)</title><rect x="9.4340%" y="421" width="0.1572%" height="15" fill="rgb(206,64,50)" fg:x="60" fg:w="1"/><text x="9.6840%" y="431.50"></text></g><g><title>__raw_spin_lock_irqsave (1 samples, 0.16%)</title><rect x="9.4340%" y="405" width="0.1572%" height="15" fill="rgb(234,36,40)" fg:x="60" fg:w="1"/><text x="9.6840%" y="415.50"></text></g><g><title>handle_mm_fault (24 samples, 3.77%)</title><rect x="5.9748%" y="485" width="3.7736%" height="15" fill="rgb(213,64,8)" fg:x="38" fg:w="24"/><text x="6.2248%" y="495.50">hand..</text></g><g><title>count_memcg_events.constprop.0 (8 samples, 1.26%)</title><rect x="8.4906%" y="469" width="1.2579%" height="15" fill="rgb(210,75,36)" fg:x="54" fg:w="8"/><text x="8.7406%" y="479.50"></text></g><g><title>asm_sysvec_call_function (1 samples, 0.16%)</title><rect x="9.5912%" y="453" width="0.1572%" height="15" fill="rgb(229,88,21)" fg:x="61" fg:w="1"/><text x="9.8412%" y="463.50"></text></g><g><title>sysvec_call_function (1 samples, 0.16%)</title><rect x="9.5912%" y="437" width="0.1572%" height="15" fill="rgb(252,204,47)" fg:x="61" fg:w="1"/><text x="9.8412%" y="447.50"></text></g><g><title>__sysvec_call_function (1 samples, 0.16%)</title><rect x="9.5912%" y="421" width="0.1572%" height="15" fill="rgb(208,77,27)" fg:x="61" fg:w="1"/><text x="9.8412%" y="431.50"></text></g><g><title>generic_smp_call_function_single_interrupt (1 samples, 0.16%)</title><rect x="9.5912%" y="405" width="0.1572%" height="15" fill="rgb(221,76,26)" fg:x="61" fg:w="1"/><text x="9.8412%" y="415.50"></text></g><g><title>__flush_smp_call_function_queue (1 samples, 0.16%)</title><rect x="9.5912%" y="389" width="0.1572%" height="15" fill="rgb(225,139,18)" fg:x="61" fg:w="1"/><text x="9.8412%" y="399.50"></text></g><g><title>flush_tlb_func (1 samples, 0.16%)</title><rect x="9.5912%" y="373" width="0.1572%" height="15" fill="rgb(230,137,11)" fg:x="61" fg:w="1"/><text x="9.8412%" y="383.50"></text></g><g><title>do_user_addr_fault (35 samples, 5.50%)</title><rect x="4.5597%" y="501" width="5.5031%" height="15" fill="rgb(212,28,1)" fg:x="29" fg:w="35"/><text x="4.8097%" y="511.50">do_user..</text></g><g><title>up_read (2 samples, 0.31%)</title><rect x="9.7484%" y="485" width="0.3145%" height="15" fill="rgb(248,164,17)" fg:x="62" fg:w="2"/><text x="9.9984%" y="495.50"></text></g><g><title>rwsem_wake.isra.0 (2 samples, 0.31%)</title><rect x="9.7484%" y="469" width="0.3145%" height="15" fill="rgb(222,171,42)" fg:x="62" fg:w="2"/><text x="9.9984%" y="479.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.31%)</title><rect x="9.7484%" y="453" width="0.3145%" height="15" fill="rgb(243,84,45)" fg:x="62" fg:w="2"/><text x="9.9984%" y="463.50"></text></g><g><title>__raw_spin_lock_irqsave (2 samples, 0.31%)</title><rect x="9.7484%" y="437" width="0.3145%" height="15" fill="rgb(252,49,23)" fg:x="62" fg:w="2"/><text x="9.9984%" y="447.50"></text></g><g><title>exit_to_user_mode_loop (1 samples, 0.16%)</title><rect x="10.0629%" y="453" width="0.1572%" height="15" fill="rgb(215,19,7)" fg:x="64" fg:w="1"/><text x="10.3129%" y="463.50"></text></g><g><title>__rseq_handle_notify_resume (1 samples, 0.16%)</title><rect x="10.0629%" y="437" width="0.1572%" height="15" fill="rgb(238,81,41)" fg:x="64" fg:w="1"/><text x="10.3129%" y="447.50"></text></g><g><title>__put_user_nocheck_8 (1 samples, 0.16%)</title><rect x="10.0629%" y="421" width="0.1572%" height="15" fill="rgb(210,199,37)" fg:x="64" fg:w="1"/><text x="10.3129%" y="431.50"></text></g><g><title>irqentry_exit (2 samples, 0.31%)</title><rect x="10.0629%" y="501" width="0.3145%" height="15" fill="rgb(244,192,49)" fg:x="64" fg:w="2"/><text x="10.3129%" y="511.50"></text></g><g><title>irqentry_exit_to_user_mode (2 samples, 0.31%)</title><rect x="10.0629%" y="485" width="0.3145%" height="15" fill="rgb(226,211,11)" fg:x="64" fg:w="2"/><text x="10.3129%" y="495.50"></text></g><g><title>exit_to_user_mode_prepare (2 samples, 0.31%)</title><rect x="10.0629%" y="469" width="0.3145%" height="15" fill="rgb(236,162,54)" fg:x="64" fg:w="2"/><text x="10.3129%" y="479.50"></text></g><g><title>switch_fpu_return (1 samples, 0.16%)</title><rect x="10.2201%" y="453" width="0.1572%" height="15" fill="rgb(220,229,9)" fg:x="65" fg:w="1"/><text x="10.4701%" y="463.50"></text></g><g><title>restore_fpregs_from_fpstate (1 samples, 0.16%)</title><rect x="10.2201%" y="437" width="0.1572%" height="15" fill="rgb(250,87,22)" fg:x="65" fg:w="1"/><text x="10.4701%" y="447.50"></text></g><g><title>asm_exc_page_fault (42 samples, 6.60%)</title><rect x="3.9308%" y="533" width="6.6038%" height="15" fill="rgb(239,43,17)" fg:x="25" fg:w="42"/><text x="4.1808%" y="543.50">asm_exc_p..</text></g><g><title>exc_page_fault (38 samples, 5.97%)</title><rect x="4.5597%" y="517" width="5.9748%" height="15" fill="rgb(231,177,25)" fg:x="29" fg:w="38"/><text x="4.8097%" y="527.50">exc_page..</text></g><g><title>up_read (1 samples, 0.16%)</title><rect x="10.3774%" y="501" width="0.1572%" height="15" fill="rgb(219,179,1)" fg:x="66" fg:w="1"/><text x="10.6274%" y="511.50"></text></g><g><title>memset (44 samples, 6.92%)</title><rect x="3.7736%" y="565" width="6.9182%" height="15" fill="rgb(238,219,53)" fg:x="24" fg:w="44"/><text x="4.0236%" y="575.50">memset</text></g><g><title>[libc.so.6] (44 samples, 6.92%)</title><rect x="3.7736%" y="549" width="6.9182%" height="15" fill="rgb(232,167,36)" fg:x="24" fg:w="44"/><text x="4.0236%" y="559.50">[libc.so...</text></g><g><title>irq_enter_rcu (1 samples, 0.16%)</title><rect x="10.5346%" y="533" width="0.1572%" height="15" fill="rgb(244,19,51)" fg:x="67" fg:w="1"/><text x="10.7846%" y="543.50"></text></g><g><title>mi_find_page (49 samples, 7.70%)</title><rect x="3.1447%" y="709" width="7.7044%" height="15" fill="rgb(224,6,22)" fg:x="20" fg:w="49"/><text x="3.3947%" y="719.50">mi_find_page</text></g><g><title>mi_find_free_page (49 samples, 7.70%)</title><rect x="3.1447%" y="693" width="7.7044%" height="15" fill="rgb(224,145,5)" fg:x="20" fg:w="49"/><text x="3.3947%" y="703.50">mi_find_fre..</text></g><g><title>mi_page_queue_find_free_ex (49 samples, 7.70%)</title><rect x="3.1447%" y="677" width="7.7044%" height="15" fill="rgb(234,130,49)" fg:x="20" fg:w="49"/><text x="3.3947%" y="687.50">mi_page_que..</text></g><g><title>mi_page_fresh (49 samples, 7.70%)</title><rect x="3.1447%" y="661" width="7.7044%" height="15" fill="rgb(254,6,2)" fg:x="20" fg:w="49"/><text x="3.3947%" y="671.50">mi_page_fre..</text></g><g><title>mi_page_fresh_alloc (49 samples, 7.70%)</title><rect x="3.1447%" y="645" width="7.7044%" height="15" fill="rgb(208,96,46)" fg:x="20" fg:w="49"/><text x="3.3947%" y="655.50">mi_page_fre..</text></g><g><title>mi_segments_page_alloc (49 samples, 7.70%)</title><rect x="3.1447%" y="629" width="7.7044%" height="15" fill="rgb(239,3,39)" fg:x="20" fg:w="49"/><text x="3.3947%" y="639.50">mi_segments..</text></g><g><title>mi_segment_reclaim_or_alloc (49 samples, 7.70%)</title><rect x="3.1447%" y="613" width="7.7044%" height="15" fill="rgb(233,210,1)" fg:x="20" fg:w="49"/><text x="3.3947%" y="623.50">mi_segment_..</text></g><g><title>mi_segment_alloc (49 samples, 7.70%)</title><rect x="3.1447%" y="597" width="7.7044%" height="15" fill="rgb(244,137,37)" fg:x="20" fg:w="49"/><text x="3.3947%" y="607.50">mi_segment_..</text></g><g><title>mi_segment_init (49 samples, 7.70%)</title><rect x="3.1447%" y="581" width="7.7044%" height="15" fill="rgb(240,136,2)" fg:x="20" fg:w="49"/><text x="3.3947%" y="591.50">mi_segment_..</text></g><g><title>mi_segment_span_allocate (1 samples, 0.16%)</title><rect x="10.6918%" y="565" width="0.1572%" height="15" fill="rgb(239,18,37)" fg:x="68" fg:w="1"/><text x="10.9418%" y="575.50"></text></g><g><title>mi_segment_ensure_committed (1 samples, 0.16%)</title><rect x="10.6918%" y="549" width="0.1572%" height="15" fill="rgb(218,185,22)" fg:x="68" fg:w="1"/><text x="10.9418%" y="559.50"></text></g><g><title>mi_segment_commitx (1 samples, 0.16%)</title><rect x="10.6918%" y="533" width="0.1572%" height="15" fill="rgb(225,218,4)" fg:x="68" fg:w="1"/><text x="10.9418%" y="543.50"></text></g><g><title>_mi_os_commit (1 samples, 0.16%)</title><rect x="10.6918%" y="517" width="0.1572%" height="15" fill="rgb(230,182,32)" fg:x="68" fg:w="1"/><text x="10.9418%" y="527.50"></text></g><g><title>mi_os_commitx (1 samples, 0.16%)</title><rect x="10.6918%" y="501" width="0.1572%" height="15" fill="rgb(242,56,43)" fg:x="68" fg:w="1"/><text x="10.9418%" y="511.50"></text></g><g><title>__GI___mprotect (1 samples, 0.16%)</title><rect x="10.6918%" y="485" width="0.1572%" height="15" fill="rgb(233,99,24)" fg:x="68" fg:w="1"/><text x="10.9418%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.16%)</title><rect x="10.6918%" y="469" width="0.1572%" height="15" fill="rgb(234,209,42)" fg:x="68" fg:w="1"/><text x="10.9418%" y="479.50"></text></g><g><title>do_syscall_64 (1 samples, 0.16%)</title><rect x="10.6918%" y="453" width="0.1572%" height="15" fill="rgb(227,7,12)" fg:x="68" fg:w="1"/><text x="10.9418%" y="463.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.16%)</title><rect x="10.6918%" y="437" width="0.1572%" height="15" fill="rgb(245,203,43)" fg:x="68" fg:w="1"/><text x="10.9418%" y="447.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.16%)</title><rect x="10.6918%" y="421" width="0.1572%" height="15" fill="rgb(238,205,33)" fg:x="68" fg:w="1"/><text x="10.9418%" y="431.50"></text></g><g><title>mprotect_fixup (1 samples, 0.16%)</title><rect x="10.6918%" y="405" width="0.1572%" height="15" fill="rgb(231,56,7)" fg:x="68" fg:w="1"/><text x="10.9418%" y="415.50"></text></g><g><title>change_protection (1 samples, 0.16%)</title><rect x="10.6918%" y="389" width="0.1572%" height="15" fill="rgb(244,186,29)" fg:x="68" fg:w="1"/><text x="10.9418%" y="399.50"></text></g><g><title>change_protection_range (1 samples, 0.16%)</title><rect x="10.6918%" y="373" width="0.1572%" height="15" fill="rgb(234,111,31)" fg:x="68" fg:w="1"/><text x="10.9418%" y="383.50"></text></g><g><title>change_pmd_range.isra.0 (1 samples, 0.16%)</title><rect x="10.6918%" y="357" width="0.1572%" height="15" fill="rgb(241,149,10)" fg:x="68" fg:w="1"/><text x="10.9418%" y="367.50"></text></g><g><title>change_pte_range (1 samples, 0.16%)</title><rect x="10.6918%" y="341" width="0.1572%" height="15" fill="rgb(249,206,44)" fg:x="68" fg:w="1"/><text x="10.9418%" y="351.50"></text></g><g><title>get_unmapped_area (1 samples, 0.16%)</title><rect x="11.0063%" y="469" width="0.1572%" height="15" fill="rgb(251,153,30)" fg:x="70" fg:w="1"/><text x="11.2563%" y="479.50"></text></g><g><title>arch_get_unmapped_area_topdown (1 samples, 0.16%)</title><rect x="11.0063%" y="453" width="0.1572%" height="15" fill="rgb(239,152,38)" fg:x="70" fg:w="1"/><text x="11.2563%" y="463.50"></text></g><g><title>vm_unmapped_area (1 samples, 0.16%)</title><rect x="11.0063%" y="437" width="0.1572%" height="15" fill="rgb(249,139,47)" fg:x="70" fg:w="1"/><text x="11.2563%" y="447.50"></text></g><g><title>unmapped_area_topdown (1 samples, 0.16%)</title><rect x="11.0063%" y="421" width="0.1572%" height="15" fill="rgb(244,64,35)" fg:x="70" fg:w="1"/><text x="11.2563%" y="431.50"></text></g><g><title>perf_event_mmap (1 samples, 0.16%)</title><rect x="11.1635%" y="453" width="0.1572%" height="15" fill="rgb(216,46,15)" fg:x="71" fg:w="1"/><text x="11.4135%" y="463.50"></text></g><g><title>perf_event_mmap_event (1 samples, 0.16%)</title><rect x="11.1635%" y="437" width="0.1572%" height="15" fill="rgb(250,74,19)" fg:x="71" fg:w="1"/><text x="11.4135%" y="447.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.16%)</title><rect x="11.1635%" y="421" width="0.1572%" height="15" fill="rgb(249,42,33)" fg:x="71" fg:w="1"/><text x="11.4135%" y="431.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.16%)</title><rect x="11.1635%" y="405" width="0.1572%" height="15" fill="rgb(242,149,17)" fg:x="71" fg:w="1"/><text x="11.4135%" y="415.50"></text></g><g><title>do_mmap (3 samples, 0.47%)</title><rect x="11.0063%" y="485" width="0.4717%" height="15" fill="rgb(244,29,21)" fg:x="70" fg:w="3"/><text x="11.2563%" y="495.50"></text></g><g><title>mmap_region (2 samples, 0.31%)</title><rect x="11.1635%" y="469" width="0.3145%" height="15" fill="rgb(220,130,37)" fg:x="71" fg:w="2"/><text x="11.4135%" y="479.50"></text></g><g><title>vma_merge (1 samples, 0.16%)</title><rect x="11.3208%" y="453" width="0.1572%" height="15" fill="rgb(211,67,2)" fg:x="72" fg:w="1"/><text x="11.5708%" y="463.50"></text></g><g><title>anon_vma_interval_tree_insert (1 samples, 0.16%)</title><rect x="11.3208%" y="437" width="0.1572%" height="15" fill="rgb(235,68,52)" fg:x="72" fg:w="1"/><text x="11.5708%" y="447.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.16%)</title><rect x="11.4780%" y="453" width="0.1572%" height="15" fill="rgb(246,142,3)" fg:x="73" fg:w="1"/><text x="11.7280%" y="463.50"></text></g><g><title>__raw_spin_lock_irqsave (1 samples, 0.16%)</title><rect x="11.4780%" y="437" width="0.1572%" height="15" fill="rgb(241,25,7)" fg:x="73" fg:w="1"/><text x="11.7280%" y="447.50"></text></g><g><title>wake_q_add (1 samples, 0.16%)</title><rect x="11.6352%" y="453" width="0.1572%" height="15" fill="rgb(242,119,39)" fg:x="74" fg:w="1"/><text x="11.8852%" y="463.50"></text></g><g><title>rayon_core::job::JobFifo::new (56 samples, 8.81%)</title><rect x="3.1447%" y="853" width="8.8050%" height="15" fill="rgb(241,98,45)" fg:x="20" fg:w="56"/><text x="3.3947%" y="863.50">rayon_core::..</text></g><g><title>crossbeam_deque::deque::Injector&lt;T&gt;::new (56 samples, 8.81%)</title><rect x="3.1447%" y="837" width="8.8050%" height="15" fill="rgb(254,28,30)" fg:x="20" fg:w="56"/><text x="3.3947%" y="847.50">crossbeam_de..</text></g><g><title>&lt;crossbeam_deque::deque::Injector&lt;T&gt; as core::default::Default&gt;::default (56 samples, 8.81%)</title><rect x="3.1447%" y="821" width="8.8050%" height="15" fill="rgb(241,142,54)" fg:x="20" fg:w="56"/><text x="3.3947%" y="831.50">&lt;crossbeam_d..</text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (56 samples, 8.81%)</title><rect x="3.1447%" y="805" width="8.8050%" height="15" fill="rgb(222,85,15)" fg:x="20" fg:w="56"/><text x="3.3947%" y="815.50">alloc::boxed..</text></g><g><title>alloc::alloc::exchange_malloc (56 samples, 8.81%)</title><rect x="3.1447%" y="789" width="8.8050%" height="15" fill="rgb(210,85,47)" fg:x="20" fg:w="56"/><text x="3.3947%" y="799.50">alloc::alloc..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (56 samples, 8.81%)</title><rect x="3.1447%" y="773" width="8.8050%" height="15" fill="rgb(224,206,25)" fg:x="20" fg:w="56"/><text x="3.3947%" y="783.50">&lt;alloc::allo..</text></g><g><title>alloc::alloc::Global::alloc_impl (56 samples, 8.81%)</title><rect x="3.1447%" y="757" width="8.8050%" height="15" fill="rgb(243,201,19)" fg:x="20" fg:w="56"/><text x="3.3947%" y="767.50">alloc::alloc..</text></g><g><title>alloc::alloc::alloc (56 samples, 8.81%)</title><rect x="3.1447%" y="741" width="8.8050%" height="15" fill="rgb(236,59,4)" fg:x="20" fg:w="56"/><text x="3.3947%" y="751.50">alloc::alloc..</text></g><g><title>_mi_malloc_generic (56 samples, 8.81%)</title><rect x="3.1447%" y="725" width="8.8050%" height="15" fill="rgb(254,179,45)" fg:x="20" fg:w="56"/><text x="3.3947%" y="735.50">_mi_malloc_g..</text></g><g><title>mi_thread_init (7 samples, 1.10%)</title><rect x="10.8491%" y="709" width="1.1006%" height="15" fill="rgb(226,14,10)" fg:x="69" fg:w="7"/><text x="11.0991%" y="719.50"></text></g><g><title>_mi_heap_init (7 samples, 1.10%)</title><rect x="10.8491%" y="693" width="1.1006%" height="15" fill="rgb(244,27,41)" fg:x="69" fg:w="7"/><text x="11.0991%" y="703.50"></text></g><g><title>mi_thread_data_alloc (6 samples, 0.94%)</title><rect x="11.0063%" y="677" width="0.9434%" height="15" fill="rgb(235,35,32)" fg:x="70" fg:w="6"/><text x="11.2563%" y="687.50"></text></g><g><title>_mi_os_alloc (6 samples, 0.94%)</title><rect x="11.0063%" y="661" width="0.9434%" height="15" fill="rgb(218,68,31)" fg:x="70" fg:w="6"/><text x="11.2563%" y="671.50"></text></g><g><title>mi_os_mem_alloc (6 samples, 0.94%)</title><rect x="11.0063%" y="645" width="0.9434%" height="15" fill="rgb(207,120,37)" fg:x="70" fg:w="6"/><text x="11.2563%" y="655.50"></text></g><g><title>mi_unix_mmap (6 samples, 0.94%)</title><rect x="11.0063%" y="629" width="0.9434%" height="15" fill="rgb(227,98,0)" fg:x="70" fg:w="6"/><text x="11.2563%" y="639.50"></text></g><g><title>mi_unix_mmapx (6 samples, 0.94%)</title><rect x="11.0063%" y="613" width="0.9434%" height="15" fill="rgb(207,7,3)" fg:x="70" fg:w="6"/><text x="11.2563%" y="623.50"></text></g><g><title>__GI___mmap64 (6 samples, 0.94%)</title><rect x="11.0063%" y="597" width="0.9434%" height="15" fill="rgb(206,98,19)" fg:x="70" fg:w="6"/><text x="11.2563%" y="607.50"></text></g><g><title>__GI___mmap64 (6 samples, 0.94%)</title><rect x="11.0063%" y="581" width="0.9434%" height="15" fill="rgb(217,5,26)" fg:x="70" fg:w="6"/><text x="11.2563%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.94%)</title><rect x="11.0063%" y="565" width="0.9434%" height="15" fill="rgb(235,190,38)" fg:x="70" fg:w="6"/><text x="11.2563%" y="575.50"></text></g><g><title>do_syscall_64 (6 samples, 0.94%)</title><rect x="11.0063%" y="549" width="0.9434%" height="15" fill="rgb(247,86,24)" fg:x="70" fg:w="6"/><text x="11.2563%" y="559.50"></text></g><g><title>__x64_sys_mmap (6 samples, 0.94%)</title><rect x="11.0063%" y="533" width="0.9434%" height="15" fill="rgb(205,101,16)" fg:x="70" fg:w="6"/><text x="11.2563%" y="543.50"></text></g><g><title>ksys_mmap_pgoff (6 samples, 0.94%)</title><rect x="11.0063%" y="517" width="0.9434%" height="15" fill="rgb(246,168,33)" fg:x="70" fg:w="6"/><text x="11.2563%" y="527.50"></text></g><g><title>vm_mmap_pgoff (6 samples, 0.94%)</title><rect x="11.0063%" y="501" width="0.9434%" height="15" fill="rgb(231,114,1)" fg:x="70" fg:w="6"/><text x="11.2563%" y="511.50"></text></g><g><title>up_write (3 samples, 0.47%)</title><rect x="11.4780%" y="485" width="0.4717%" height="15" fill="rgb(207,184,53)" fg:x="73" fg:w="3"/><text x="11.7280%" y="495.50"></text></g><g><title>rwsem_wake.isra.0 (3 samples, 0.47%)</title><rect x="11.4780%" y="469" width="0.4717%" height="15" fill="rgb(224,95,51)" fg:x="73" fg:w="3"/><text x="11.7280%" y="479.50"></text></g><g><title>wake_up_q (1 samples, 0.16%)</title><rect x="11.7925%" y="453" width="0.1572%" height="15" fill="rgb(212,188,45)" fg:x="75" fg:w="1"/><text x="12.0425%" y="463.50"></text></g><g><title>try_to_wake_up (1 samples, 0.16%)</title><rect x="11.7925%" y="437" width="0.1572%" height="15" fill="rgb(223,154,38)" fg:x="75" fg:w="1"/><text x="12.0425%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.16%)</title><rect x="11.9497%" y="821" width="0.1572%" height="15" fill="rgb(251,22,52)" fg:x="76" fg:w="1"/><text x="12.1997%" y="831.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold::{{closure}} (1 samples, 0.16%)</title><rect x="11.9497%" y="805" width="0.1572%" height="15" fill="rgb(229,209,22)" fg:x="76" fg:w="1"/><text x="12.1997%" y="815.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (1 samples, 0.16%)</title><rect x="11.9497%" y="789" width="0.1572%" height="15" fill="rgb(234,138,34)" fg:x="76" fg:w="1"/><text x="12.1997%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.16%)</title><rect x="11.9497%" y="773" width="0.1572%" height="15" fill="rgb(212,95,11)" fg:x="76" fg:w="1"/><text x="12.1997%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.16%)</title><rect x="11.9497%" y="757" width="0.1572%" height="15" fill="rgb(240,179,47)" fg:x="76" fg:w="1"/><text x="12.1997%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.16%)</title><rect x="11.9497%" y="741" width="0.1572%" height="15" fill="rgb(240,163,11)" fg:x="76" fg:w="1"/><text x="12.1997%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.16%)</title><rect x="11.9497%" y="725" width="0.1572%" height="15" fill="rgb(236,37,12)" fg:x="76" fg:w="1"/><text x="12.1997%" y="735.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.16%)</title><rect x="11.9497%" y="709" width="0.1572%" height="15" fill="rgb(232,164,16)" fg:x="76" fg:w="1"/><text x="12.1997%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 0.16%)</title><rect x="11.9497%" y="693" width="0.1572%" height="15" fill="rgb(244,205,15)" fg:x="76" fg:w="1"/><text x="12.1997%" y="703.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (1 samples, 0.16%)</title><rect x="11.9497%" y="677" width="0.1572%" height="15" fill="rgb(223,117,47)" fg:x="76" fg:w="1"/><text x="12.1997%" y="687.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1 samples, 0.16%)</title><rect x="11.9497%" y="661" width="0.1572%" height="15" fill="rgb(244,107,35)" fg:x="76" fg:w="1"/><text x="12.1997%" y="671.50"></text></g><g><title>crossbeam_epoch::default::pin (1 samples, 0.16%)</title><rect x="11.9497%" y="645" width="0.1572%" height="15" fill="rgb(205,140,8)" fg:x="76" fg:w="1"/><text x="12.1997%" y="655.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1 samples, 0.16%)</title><rect x="11.9497%" y="629" width="0.1572%" height="15" fill="rgb(228,84,46)" fg:x="76" fg:w="1"/><text x="12.1997%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.16%)</title><rect x="11.9497%" y="613" width="0.1572%" height="15" fill="rgb(254,188,9)" fg:x="76" fg:w="1"/><text x="12.1997%" y="623.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (1 samples, 0.16%)</title><rect x="11.9497%" y="597" width="0.1572%" height="15" fill="rgb(206,112,54)" fg:x="76" fg:w="1"/><text x="12.1997%" y="607.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (1 samples, 0.16%)</title><rect x="11.9497%" y="581" width="0.1572%" height="15" fill="rgb(216,84,49)" fg:x="76" fg:w="1"/><text x="12.1997%" y="591.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (1 samples, 0.16%)</title><rect x="11.9497%" y="565" width="0.1572%" height="15" fill="rgb(214,194,35)" fg:x="76" fg:w="1"/><text x="12.1997%" y="575.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (1 samples, 0.16%)</title><rect x="11.9497%" y="549" width="0.1572%" height="15" fill="rgb(249,28,3)" fg:x="76" fg:w="1"/><text x="12.1997%" y="559.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.16%)</title><rect x="11.9497%" y="533" width="0.1572%" height="15" fill="rgb(222,56,52)" fg:x="76" fg:w="1"/><text x="12.1997%" y="543.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.16%)</title><rect x="11.9497%" y="517" width="0.1572%" height="15" fill="rgb(245,217,50)" fg:x="76" fg:w="1"/><text x="12.1997%" y="527.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.16%)</title><rect x="12.1069%" y="805" width="0.1572%" height="15" fill="rgb(213,201,24)" fg:x="77" fg:w="1"/><text x="12.3569%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.16%)</title><rect x="12.1069%" y="789" width="0.1572%" height="15" fill="rgb(248,116,28)" fg:x="77" fg:w="1"/><text x="12.3569%" y="799.50"></text></g><g><title>do_syscall_64 (1 samples, 0.16%)</title><rect x="12.1069%" y="773" width="0.1572%" height="15" fill="rgb(219,72,43)" fg:x="77" fg:w="1"/><text x="12.3569%" y="783.50"></text></g><g><title>__x64_sys_sched_yield (1 samples, 0.16%)</title><rect x="12.1069%" y="757" width="0.1572%" height="15" fill="rgb(209,138,14)" fg:x="77" fg:w="1"/><text x="12.3569%" y="767.50"></text></g><g><title>do_sched_yield (1 samples, 0.16%)</title><rect x="12.1069%" y="741" width="0.1572%" height="15" fill="rgb(222,18,33)" fg:x="77" fg:w="1"/><text x="12.3569%" y="751.50"></text></g><g><title>schedule (1 samples, 0.16%)</title><rect x="12.1069%" y="725" width="0.1572%" height="15" fill="rgb(213,199,7)" fg:x="77" fg:w="1"/><text x="12.3569%" y="735.50"></text></g><g><title>__schedule (1 samples, 0.16%)</title><rect x="12.1069%" y="709" width="0.1572%" height="15" fill="rgb(250,110,10)" fg:x="77" fg:w="1"/><text x="12.3569%" y="719.50"></text></g><g><title>pick_next_task (1 samples, 0.16%)</title><rect x="12.1069%" y="693" width="0.1572%" height="15" fill="rgb(248,123,6)" fg:x="77" fg:w="1"/><text x="12.3569%" y="703.50"></text></g><g><title>pick_next_entity (1 samples, 0.16%)</title><rect x="12.1069%" y="677" width="0.1572%" height="15" fill="rgb(206,91,31)" fg:x="77" fg:w="1"/><text x="12.3569%" y="687.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.31%)</title><rect x="12.7358%" y="629" width="0.3145%" height="15" fill="rgb(211,154,13)" fg:x="81" fg:w="2"/><text x="12.9858%" y="639.50"></text></g><g><title>__x64_sys_futex (8 samples, 1.26%)</title><rect x="12.2642%" y="677" width="1.2579%" height="15" fill="rgb(225,148,7)" fg:x="78" fg:w="8"/><text x="12.5142%" y="687.50"></text></g><g><title>do_futex (5 samples, 0.79%)</title><rect x="12.7358%" y="661" width="0.7862%" height="15" fill="rgb(220,160,43)" fg:x="81" fg:w="5"/><text x="12.9858%" y="671.50"></text></g><g><title>futex_wait (5 samples, 0.79%)</title><rect x="12.7358%" y="645" width="0.7862%" height="15" fill="rgb(213,52,39)" fg:x="81" fg:w="5"/><text x="12.9858%" y="655.50"></text></g><g><title>futex_unqueue (3 samples, 0.47%)</title><rect x="13.0503%" y="629" width="0.4717%" height="15" fill="rgb(243,137,7)" fg:x="83" fg:w="3"/><text x="13.3003%" y="639.50"></text></g><g><title>plist_del (3 samples, 0.47%)</title><rect x="13.0503%" y="613" width="0.4717%" height="15" fill="rgb(230,79,13)" fg:x="83" fg:w="3"/><text x="13.3003%" y="623.50"></text></g><g><title>arch_do_signal_or_restart (1 samples, 0.16%)</title><rect x="13.6792%" y="645" width="0.1572%" height="15" fill="rgb(247,105,23)" fg:x="87" fg:w="1"/><text x="13.9292%" y="655.50"></text></g><g><title>_raw_spin_lock_irq (26 samples, 4.09%)</title><rect x="13.9937%" y="597" width="4.0881%" height="15" fill="rgb(223,179,41)" fg:x="89" fg:w="26"/><text x="14.2437%" y="607.50">_raw..</text></g><g><title>native_queued_spin_lock_slowpath (23 samples, 3.62%)</title><rect x="14.4654%" y="581" width="3.6164%" height="15" fill="rgb(218,9,34)" fg:x="92" fg:w="23"/><text x="14.7154%" y="591.50">nati..</text></g><g><title>native_queued_spin_lock_slowpath.part.0 (23 samples, 3.62%)</title><rect x="14.4654%" y="565" width="3.6164%" height="15" fill="rgb(222,106,8)" fg:x="92" fg:w="23"/><text x="14.7154%" y="575.50">nati..</text></g><g><title>_raw_spin_lock_irq (1 samples, 0.16%)</title><rect x="18.0818%" y="581" width="0.1572%" height="15" fill="rgb(211,220,0)" fg:x="115" fg:w="1"/><text x="18.3318%" y="591.50"></text></g><g><title>_raw_spin_lock_irq (11 samples, 1.73%)</title><rect x="18.3962%" y="565" width="1.7296%" height="15" fill="rgb(229,52,16)" fg:x="117" fg:w="11"/><text x="18.6462%" y="575.50"></text></g><g><title>native_queued_spin_lock_slowpath (11 samples, 1.73%)</title><rect x="18.3962%" y="549" width="1.7296%" height="15" fill="rgb(212,155,18)" fg:x="117" fg:w="11"/><text x="18.6462%" y="559.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (11 samples, 1.73%)</title><rect x="18.3962%" y="533" width="1.7296%" height="15" fill="rgb(242,21,14)" fg:x="117" fg:w="11"/><text x="18.6462%" y="543.50"></text></g><g><title>acct_collect (6 samples, 0.94%)</title><rect x="20.1258%" y="565" width="0.9434%" height="15" fill="rgb(222,19,48)" fg:x="128" fg:w="6"/><text x="20.3758%" y="575.50"></text></g><g><title>_raw_spin_lock_irq (5 samples, 0.79%)</title><rect x="20.2830%" y="549" width="0.7862%" height="15" fill="rgb(232,45,27)" fg:x="129" fg:w="5"/><text x="20.5330%" y="559.50"></text></g><g><title>native_queued_spin_lock_slowpath (4 samples, 0.63%)</title><rect x="20.4403%" y="533" width="0.6289%" height="15" fill="rgb(249,103,42)" fg:x="130" fg:w="4"/><text x="20.6903%" y="543.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (4 samples, 0.63%)</title><rect x="20.4403%" y="517" width="0.6289%" height="15" fill="rgb(246,81,33)" fg:x="130" fg:w="4"/><text x="20.6903%" y="527.50"></text></g><g><title>do_exit (22 samples, 3.46%)</title><rect x="18.2390%" y="581" width="3.4591%" height="15" fill="rgb(252,33,42)" fg:x="116" fg:w="22"/><text x="18.4890%" y="591.50">do_..</text></g><g><title>taskstats_exit (4 samples, 0.63%)</title><rect x="21.0692%" y="565" width="0.6289%" height="15" fill="rgb(209,212,41)" fg:x="134" fg:w="4"/><text x="21.3192%" y="575.50"></text></g><g><title>_raw_spin_lock_irqsave (4 samples, 0.63%)</title><rect x="21.0692%" y="549" width="0.6289%" height="15" fill="rgb(207,154,6)" fg:x="134" fg:w="4"/><text x="21.3192%" y="559.50"></text></g><g><title>__raw_spin_lock_irqsave (4 samples, 0.63%)</title><rect x="21.0692%" y="533" width="0.6289%" height="15" fill="rgb(223,64,47)" fg:x="134" fg:w="4"/><text x="21.3192%" y="543.50"></text></g><g><title>native_queued_spin_lock_slowpath (4 samples, 0.63%)</title><rect x="21.0692%" y="517" width="0.6289%" height="15" fill="rgb(211,161,38)" fg:x="134" fg:w="4"/><text x="21.3192%" y="527.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (4 samples, 0.63%)</title><rect x="21.0692%" y="501" width="0.6289%" height="15" fill="rgb(219,138,40)" fg:x="134" fg:w="4"/><text x="21.3192%" y="511.50"></text></g><g><title>get_signal (51 samples, 8.02%)</title><rect x="13.8365%" y="613" width="8.0189%" height="15" fill="rgb(241,228,46)" fg:x="88" fg:w="51"/><text x="14.0865%" y="623.50">get_signal</text></g><g><title>do_group_exit (24 samples, 3.77%)</title><rect x="18.0818%" y="597" width="3.7736%" height="15" fill="rgb(223,209,38)" fg:x="115" fg:w="24"/><text x="18.3318%" y="607.50">do_g..</text></g><g><title>sync_mm_rss (1 samples, 0.16%)</title><rect x="21.6981%" y="581" width="0.1572%" height="15" fill="rgb(236,164,45)" fg:x="138" fg:w="1"/><text x="21.9481%" y="591.50"></text></g><g><title>std::panic::catch_unwind (121 samples, 19.03%)</title><rect x="3.1447%" y="997" width="19.0252%" height="15" fill="rgb(231,15,5)" fg:x="20" fg:w="121"/><text x="3.3947%" y="1007.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (121 samples, 19.03%)</title><rect x="3.1447%" y="981" width="19.0252%" height="15" fill="rgb(252,35,15)" fg:x="20" fg:w="121"/><text x="3.3947%" y="991.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (121 samples, 19.03%)</title><rect x="3.1447%" y="965" width="19.0252%" height="15" fill="rgb(248,181,18)" fg:x="20" fg:w="121"/><text x="3.3947%" y="975.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (121 samples, 19.03%)</title><rect x="3.1447%" y="949" width="19.0252%" height="15" fill="rgb(233,39,42)" fg:x="20" fg:w="121"/><text x="3.3947%" y="959.50">&lt;core::panic::unwind_safe::Ass..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (121 samples, 19.03%)</title><rect x="3.1447%" y="933" width="19.0252%" height="15" fill="rgb(238,110,33)" fg:x="20" fg:w="121"/><text x="3.3947%" y="943.50">std::thread::Builder::spawn_un..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (121 samples, 19.03%)</title><rect x="3.1447%" y="917" width="19.0252%" height="15" fill="rgb(233,195,10)" fg:x="20" fg:w="121"/><text x="3.3947%" y="927.50">std::sys_common::backtrace::__..</text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (121 samples, 19.03%)</title><rect x="3.1447%" y="901" width="19.0252%" height="15" fill="rgb(254,105,3)" fg:x="20" fg:w="121"/><text x="3.3947%" y="911.50">&lt;rayon_core::registry::Default..</text></g><g><title>rayon_core::registry::ThreadBuilder::run (121 samples, 19.03%)</title><rect x="3.1447%" y="885" width="19.0252%" height="15" fill="rgb(221,225,9)" fg:x="20" fg:w="121"/><text x="3.3947%" y="895.50">rayon_core::registry::ThreadBu..</text></g><g><title>rayon_core::registry::main_loop (121 samples, 19.03%)</title><rect x="3.1447%" y="869" width="19.0252%" height="15" fill="rgb(224,227,45)" fg:x="20" fg:w="121"/><text x="3.3947%" y="879.50">rayon_core::registry::main_loop</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (65 samples, 10.22%)</title><rect x="11.9497%" y="853" width="10.2201%" height="15" fill="rgb(229,198,43)" fg:x="76" fg:w="65"/><text x="12.1997%" y="863.50">rayon_core::reg..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (65 samples, 10.22%)</title><rect x="11.9497%" y="837" width="10.2201%" height="15" fill="rgb(206,209,35)" fg:x="76" fg:w="65"/><text x="12.1997%" y="847.50">rayon_core::reg..</text></g><g><title>rayon_core::sleep::Sleep::no_work_found (64 samples, 10.06%)</title><rect x="12.1069%" y="821" width="10.0629%" height="15" fill="rgb(245,195,53)" fg:x="77" fg:w="64"/><text x="12.3569%" y="831.50">rayon_core::sle..</text></g><g><title>rayon_core::sleep::Sleep::sleep (63 samples, 9.91%)</title><rect x="12.2642%" y="805" width="9.9057%" height="15" fill="rgb(240,92,26)" fg:x="78" fg:w="63"/><text x="12.5142%" y="815.50">rayon_core::sl..</text></g><g><title>std::sync::condvar::Condvar::wait (63 samples, 9.91%)</title><rect x="12.2642%" y="789" width="9.9057%" height="15" fill="rgb(207,40,23)" fg:x="78" fg:w="63"/><text x="12.5142%" y="799.50">std::sync::con..</text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (63 samples, 9.91%)</title><rect x="12.2642%" y="773" width="9.9057%" height="15" fill="rgb(223,111,35)" fg:x="78" fg:w="63"/><text x="12.5142%" y="783.50">std::sys::unix..</text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (63 samples, 9.91%)</title><rect x="12.2642%" y="757" width="9.9057%" height="15" fill="rgb(229,147,28)" fg:x="78" fg:w="63"/><text x="12.5142%" y="767.50">std::sys::unix..</text></g><g><title>std::sys::unix::futex::futex_wait (63 samples, 9.91%)</title><rect x="12.2642%" y="741" width="9.9057%" height="15" fill="rgb(211,29,28)" fg:x="78" fg:w="63"/><text x="12.5142%" y="751.50">std::sys::unix..</text></g><g><title>syscall (63 samples, 9.91%)</title><rect x="12.2642%" y="725" width="9.9057%" height="15" fill="rgb(228,72,33)" fg:x="78" fg:w="63"/><text x="12.5142%" y="735.50">syscall</text></g><g><title>entry_SYSCALL_64_after_hwframe (63 samples, 9.91%)</title><rect x="12.2642%" y="709" width="9.9057%" height="15" fill="rgb(205,214,31)" fg:x="78" fg:w="63"/><text x="12.5142%" y="719.50">entry_SYSCALL_..</text></g><g><title>do_syscall_64 (63 samples, 9.91%)</title><rect x="12.2642%" y="693" width="9.9057%" height="15" fill="rgb(224,111,15)" fg:x="78" fg:w="63"/><text x="12.5142%" y="703.50">do_syscall_64</text></g><g><title>syscall_exit_to_user_mode (55 samples, 8.65%)</title><rect x="13.5220%" y="677" width="8.6478%" height="15" fill="rgb(253,21,26)" fg:x="86" fg:w="55"/><text x="13.7720%" y="687.50">syscall_exit..</text></g><g><title>exit_to_user_mode_prepare (55 samples, 8.65%)</title><rect x="13.5220%" y="661" width="8.6478%" height="15" fill="rgb(245,139,43)" fg:x="86" fg:w="55"/><text x="13.7720%" y="671.50">exit_to_user..</text></g><g><title>exit_to_user_mode_loop (53 samples, 8.33%)</title><rect x="13.8365%" y="645" width="8.3333%" height="15" fill="rgb(252,170,7)" fg:x="88" fg:w="53"/><text x="14.0865%" y="655.50">exit_to_user..</text></g><g><title>arch_do_signal_or_restart (53 samples, 8.33%)</title><rect x="13.8365%" y="629" width="8.3333%" height="15" fill="rgb(231,118,14)" fg:x="88" fg:w="53"/><text x="14.0865%" y="639.50">arch_do_sign..</text></g><g><title>uprobe_deny_signal (2 samples, 0.31%)</title><rect x="21.8553%" y="613" width="0.3145%" height="15" fill="rgb(238,83,0)" fg:x="139" fg:w="2"/><text x="22.1053%" y="623.50"></text></g><g><title>down_write_killable (1 samples, 0.16%)</title><rect x="22.1698%" y="757" width="0.1572%" height="15" fill="rgb(221,39,39)" fg:x="141" fg:w="1"/><text x="22.4198%" y="767.50"></text></g><g><title>rwsem_down_write_slowpath (1 samples, 0.16%)</title><rect x="22.1698%" y="741" width="0.1572%" height="15" fill="rgb(222,119,46)" fg:x="141" fg:w="1"/><text x="22.4198%" y="751.50"></text></g><g><title>rwsem_optimistic_spin (1 samples, 0.16%)</title><rect x="22.1698%" y="725" width="0.1572%" height="15" fill="rgb(222,165,49)" fg:x="141" fg:w="1"/><text x="22.4198%" y="735.50"></text></g><g><title>osq_lock (1 samples, 0.16%)</title><rect x="22.1698%" y="709" width="0.1572%" height="15" fill="rgb(219,113,52)" fg:x="141" fg:w="1"/><text x="22.4198%" y="719.50"></text></g><g><title>__GI___mprotect (2 samples, 0.31%)</title><rect x="22.1698%" y="837" width="0.3145%" height="15" fill="rgb(214,7,15)" fg:x="141" fg:w="2"/><text x="22.4198%" y="847.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.31%)</title><rect x="22.1698%" y="821" width="0.3145%" height="15" fill="rgb(235,32,4)" fg:x="141" fg:w="2"/><text x="22.4198%" y="831.50"></text></g><g><title>do_syscall_64 (2 samples, 0.31%)</title><rect x="22.1698%" y="805" width="0.3145%" height="15" fill="rgb(238,90,54)" fg:x="141" fg:w="2"/><text x="22.4198%" y="815.50"></text></g><g><title>__x64_sys_mprotect (2 samples, 0.31%)</title><rect x="22.1698%" y="789" width="0.3145%" height="15" fill="rgb(213,208,19)" fg:x="141" fg:w="2"/><text x="22.4198%" y="799.50"></text></g><g><title>do_mprotect_pkey (2 samples, 0.31%)</title><rect x="22.1698%" y="773" width="0.3145%" height="15" fill="rgb(233,156,4)" fg:x="141" fg:w="2"/><text x="22.4198%" y="783.50"></text></g><g><title>mprotect_fixup (1 samples, 0.16%)</title><rect x="22.3270%" y="757" width="0.1572%" height="15" fill="rgb(207,194,5)" fg:x="142" fg:w="1"/><text x="22.5770%" y="767.50"></text></g><g><title>split_vma (1 samples, 0.16%)</title><rect x="22.3270%" y="741" width="0.1572%" height="15" fill="rgb(206,111,30)" fg:x="142" fg:w="1"/><text x="22.5770%" y="751.50"></text></g><g><title>__split_vma (1 samples, 0.16%)</title><rect x="22.3270%" y="725" width="0.1572%" height="15" fill="rgb(243,70,54)" fg:x="142" fg:w="1"/><text x="22.5770%" y="735.50"></text></g><g><title>anon_vma_name (1 samples, 0.16%)</title><rect x="22.3270%" y="709" width="0.1572%" height="15" fill="rgb(242,28,8)" fg:x="142" fg:w="1"/><text x="22.5770%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (124 samples, 19.50%)</title><rect x="3.1447%" y="1061" width="19.4969%" height="15" fill="rgb(219,106,18)" fg:x="20" fg:w="124"/><text x="3.3947%" y="1071.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (124 samples, 19.50%)</title><rect x="3.1447%" y="1045" width="19.4969%" height="15" fill="rgb(244,222,10)" fg:x="20" fg:w="124"/><text x="3.3947%" y="1055.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (124 samples, 19.50%)</title><rect x="3.1447%" y="1029" width="19.4969%" height="15" fill="rgb(236,179,52)" fg:x="20" fg:w="124"/><text x="3.3947%" y="1039.50">core::ops::function::FnOnce::ca..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (124 samples, 19.50%)</title><rect x="3.1447%" y="1013" width="19.4969%" height="15" fill="rgb(213,23,39)" fg:x="20" fg:w="124"/><text x="3.3947%" y="1023.50">std::thread::Builder::spawn_unc..</text></g><g><title>std::sys::unix::thread::guard::current (3 samples, 0.47%)</title><rect x="22.1698%" y="997" width="0.4717%" height="15" fill="rgb(238,48,10)" fg:x="141" fg:w="3"/><text x="22.4198%" y="1007.50"></text></g><g><title>__pthread_getattr_np (3 samples, 0.47%)</title><rect x="22.1698%" y="981" width="0.4717%" height="15" fill="rgb(251,196,23)" fg:x="141" fg:w="3"/><text x="22.4198%" y="991.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.47%)</title><rect x="22.1698%" y="965" width="0.4717%" height="15" fill="rgb(250,152,24)" fg:x="141" fg:w="3"/><text x="22.4198%" y="975.50"></text></g><g><title>tcache_init (3 samples, 0.47%)</title><rect x="22.1698%" y="949" width="0.4717%" height="15" fill="rgb(209,150,17)" fg:x="141" fg:w="3"/><text x="22.4198%" y="959.50"></text></g><g><title>tcache_init (3 samples, 0.47%)</title><rect x="22.1698%" y="933" width="0.4717%" height="15" fill="rgb(234,202,34)" fg:x="141" fg:w="3"/><text x="22.4198%" y="943.50"></text></g><g><title>arena_get2 (3 samples, 0.47%)</title><rect x="22.1698%" y="917" width="0.4717%" height="15" fill="rgb(253,148,53)" fg:x="141" fg:w="3"/><text x="22.4198%" y="927.50"></text></g><g><title>arena_get2 (3 samples, 0.47%)</title><rect x="22.1698%" y="901" width="0.4717%" height="15" fill="rgb(218,129,16)" fg:x="141" fg:w="3"/><text x="22.4198%" y="911.50"></text></g><g><title>_int_new_arena (3 samples, 0.47%)</title><rect x="22.1698%" y="885" width="0.4717%" height="15" fill="rgb(216,85,19)" fg:x="141" fg:w="3"/><text x="22.4198%" y="895.50"></text></g><g><title>new_heap (3 samples, 0.47%)</title><rect x="22.1698%" y="869" width="0.4717%" height="15" fill="rgb(235,228,7)" fg:x="141" fg:w="3"/><text x="22.4198%" y="879.50"></text></g><g><title>alloc_new_heap (3 samples, 0.47%)</title><rect x="22.1698%" y="853" width="0.4717%" height="15" fill="rgb(245,175,0)" fg:x="141" fg:w="3"/><text x="22.4198%" y="863.50"></text></g><g><title>__GI___munmap (1 samples, 0.16%)</title><rect x="22.4843%" y="837" width="0.1572%" height="15" fill="rgb(208,168,36)" fg:x="143" fg:w="1"/><text x="22.7343%" y="847.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.16%)</title><rect x="22.4843%" y="821" width="0.1572%" height="15" fill="rgb(246,171,24)" fg:x="143" fg:w="1"/><text x="22.7343%" y="831.50"></text></g><g><title>do_syscall_64 (1 samples, 0.16%)</title><rect x="22.4843%" y="805" width="0.1572%" height="15" fill="rgb(215,142,24)" fg:x="143" fg:w="1"/><text x="22.7343%" y="815.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.16%)</title><rect x="22.4843%" y="789" width="0.1572%" height="15" fill="rgb(250,187,7)" fg:x="143" fg:w="1"/><text x="22.7343%" y="799.50"></text></g><g><title>__vm_munmap (1 samples, 0.16%)</title><rect x="22.4843%" y="773" width="0.1572%" height="15" fill="rgb(228,66,33)" fg:x="143" fg:w="1"/><text x="22.7343%" y="783.50"></text></g><g><title>down_write_killable (1 samples, 0.16%)</title><rect x="22.4843%" y="757" width="0.1572%" height="15" fill="rgb(234,215,21)" fg:x="143" fg:w="1"/><text x="22.7343%" y="767.50"></text></g><g><title>rwsem_down_write_slowpath (1 samples, 0.16%)</title><rect x="22.4843%" y="741" width="0.1572%" height="15" fill="rgb(222,191,20)" fg:x="143" fg:w="1"/><text x="22.7343%" y="751.50"></text></g><g><title>rwsem_optimistic_spin (1 samples, 0.16%)</title><rect x="22.4843%" y="725" width="0.1572%" height="15" fill="rgb(245,79,54)" fg:x="143" fg:w="1"/><text x="22.7343%" y="735.50"></text></g><g><title>osq_lock (1 samples, 0.16%)</title><rect x="22.4843%" y="709" width="0.1572%" height="15" fill="rgb(240,10,37)" fg:x="143" fg:w="1"/><text x="22.7343%" y="719.50"></text></g><g><title>__GI___sigaltstack (1 samples, 0.16%)</title><rect x="22.6415%" y="1029" width="0.1572%" height="15" fill="rgb(214,192,32)" fg:x="144" fg:w="1"/><text x="22.8915%" y="1039.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.16%)</title><rect x="22.6415%" y="1013" width="0.1572%" height="15" fill="rgb(209,36,54)" fg:x="144" fg:w="1"/><text x="22.8915%" y="1023.50"></text></g><g><title>do_syscall_64 (1 samples, 0.16%)</title><rect x="22.6415%" y="997" width="0.1572%" height="15" fill="rgb(220,10,11)" fg:x="144" fg:w="1"/><text x="22.8915%" y="1007.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.16%)</title><rect x="22.6415%" y="981" width="0.1572%" height="15" fill="rgb(221,106,17)" fg:x="144" fg:w="1"/><text x="22.8915%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1 samples, 0.16%)</title><rect x="22.7987%" y="1029" width="0.1572%" height="15" fill="rgb(251,142,44)" fg:x="145" fg:w="1"/><text x="23.0487%" y="1039.50"></text></g><g><title>do_mmap (1 samples, 0.16%)</title><rect x="22.9560%" y="885" width="0.1572%" height="15" fill="rgb(238,13,15)" fg:x="146" fg:w="1"/><text x="23.2060%" y="895.50"></text></g><g><title>mmap_region (1 samples, 0.16%)</title><rect x="22.9560%" y="869" width="0.1572%" height="15" fill="rgb(208,107,27)" fg:x="146" fg:w="1"/><text x="23.2060%" y="879.50"></text></g><g><title>vma_link (1 samples, 0.16%)</title><rect x="22.9560%" y="853" width="0.1572%" height="15" fill="rgb(205,136,37)" fg:x="146" fg:w="1"/><text x="23.2060%" y="863.50"></text></g><g><title>rwsem_optimistic_spin (1 samples, 0.16%)</title><rect x="23.1132%" y="853" width="0.1572%" height="15" fill="rgb(250,205,27)" fg:x="147" fg:w="1"/><text x="23.3632%" y="863.50"></text></g><g><title>osq_lock (1 samples, 0.16%)</title><rect x="23.1132%" y="837" width="0.1572%" height="15" fill="rgb(210,80,43)" fg:x="147" fg:w="1"/><text x="23.3632%" y="847.50"></text></g><g><title>dequeue_task (1 samples, 0.16%)</title><rect x="23.2704%" y="821" width="0.1572%" height="15" fill="rgb(247,160,36)" fg:x="148" fg:w="1"/><text x="23.5204%" y="831.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.16%)</title><rect x="23.2704%" y="805" width="0.1572%" height="15" fill="rgb(234,13,49)" fg:x="148" fg:w="1"/><text x="23.5204%" y="815.50"></text></g><g><title>dequeue_entity (1 samples, 0.16%)</title><rect x="23.2704%" y="789" width="0.1572%" height="15" fill="rgb(234,122,0)" fg:x="148" fg:w="1"/><text x="23.5204%" y="799.50"></text></g><g><title>update_load_avg (1 samples, 0.16%)</title><rect x="23.2704%" y="773" width="0.1572%" height="15" fill="rgb(207,146,38)" fg:x="148" fg:w="1"/><text x="23.5204%" y="783.50"></text></g><g><title>sugov_update_single_freq (1 samples, 0.16%)</title><rect x="23.2704%" y="757" width="0.1572%" height="15" fill="rgb(207,177,25)" fg:x="148" fg:w="1"/><text x="23.5204%" y="767.50"></text></g><g><title>prepare_task_switch (1 samples, 0.16%)</title><rect x="23.4277%" y="821" width="0.1572%" height="15" fill="rgb(211,178,42)" fg:x="149" fg:w="1"/><text x="23.6777%" y="831.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.16%)</title><rect x="23.4277%" y="805" width="0.1572%" height="15" fill="rgb(230,69,54)" fg:x="149" fg:w="1"/><text x="23.6777%" y="815.50"></text></g><g><title>perf_event_context_sched_out (1 samples, 0.16%)</title><rect x="23.4277%" y="789" width="0.1572%" height="15" fill="rgb(214,135,41)" fg:x="149" fg:w="1"/><text x="23.6777%" y="799.50"></text></g><g><title>x86_pmu_disable (1 samples, 0.16%)</title><rect x="23.4277%" y="773" width="0.1572%" height="15" fill="rgb(237,67,25)" fg:x="149" fg:w="1"/><text x="23.6777%" y="783.50"></text></g><g><title>amd_pmu_disable_all (1 samples, 0.16%)</title><rect x="23.4277%" y="757" width="0.1572%" height="15" fill="rgb(222,189,50)" fg:x="149" fg:w="1"/><text x="23.6777%" y="767.50"></text></g><g><title>amd_pmu_check_overflow (1 samples, 0.16%)</title><rect x="23.4277%" y="741" width="0.1572%" height="15" fill="rgb(245,148,34)" fg:x="149" fg:w="1"/><text x="23.6777%" y="751.50"></text></g><g><title>__const_udelay (1 samples, 0.16%)</title><rect x="23.4277%" y="725" width="0.1572%" height="15" fill="rgb(222,29,6)" fg:x="149" fg:w="1"/><text x="23.6777%" y="735.50"></text></g><g><title>delay_halt (1 samples, 0.16%)</title><rect x="23.4277%" y="709" width="0.1572%" height="15" fill="rgb(221,189,43)" fg:x="149" fg:w="1"/><text x="23.6777%" y="719.50"></text></g><g><title>delay_halt.part.0 (1 samples, 0.16%)</title><rect x="23.4277%" y="693" width="0.1572%" height="15" fill="rgb(207,36,27)" fg:x="149" fg:w="1"/><text x="23.6777%" y="703.50"></text></g><g><title>delay_halt_mwaitx (1 samples, 0.16%)</title><rect x="23.4277%" y="677" width="0.1572%" height="15" fill="rgb(217,90,24)" fg:x="149" fg:w="1"/><text x="23.6777%" y="687.50"></text></g><g><title>__GI___mmap64 (5 samples, 0.79%)</title><rect x="22.9560%" y="997" width="0.7862%" height="15" fill="rgb(224,66,35)" fg:x="146" fg:w="5"/><text x="23.2060%" y="1007.50"></text></g><g><title>__GI___mmap64 (5 samples, 0.79%)</title><rect x="22.9560%" y="981" width="0.7862%" height="15" fill="rgb(221,13,50)" fg:x="146" fg:w="5"/><text x="23.2060%" y="991.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.79%)</title><rect x="22.9560%" y="965" width="0.7862%" height="15" fill="rgb(236,68,49)" fg:x="146" fg:w="5"/><text x="23.2060%" y="975.50"></text></g><g><title>do_syscall_64 (5 samples, 0.79%)</title><rect x="22.9560%" y="949" width="0.7862%" height="15" fill="rgb(229,146,28)" fg:x="146" fg:w="5"/><text x="23.2060%" y="959.50"></text></g><g><title>__x64_sys_mmap (5 samples, 0.79%)</title><rect x="22.9560%" y="933" width="0.7862%" height="15" fill="rgb(225,31,38)" fg:x="146" fg:w="5"/><text x="23.2060%" y="943.50"></text></g><g><title>ksys_mmap_pgoff (5 samples, 0.79%)</title><rect x="22.9560%" y="917" width="0.7862%" height="15" fill="rgb(250,208,3)" fg:x="146" fg:w="5"/><text x="23.2060%" y="927.50"></text></g><g><title>vm_mmap_pgoff (5 samples, 0.79%)</title><rect x="22.9560%" y="901" width="0.7862%" height="15" fill="rgb(246,54,23)" fg:x="146" fg:w="5"/><text x="23.2060%" y="911.50"></text></g><g><title>down_write_killable (4 samples, 0.63%)</title><rect x="23.1132%" y="885" width="0.6289%" height="15" fill="rgb(243,76,11)" fg:x="147" fg:w="4"/><text x="23.3632%" y="895.50"></text></g><g><title>rwsem_down_write_slowpath (4 samples, 0.63%)</title><rect x="23.1132%" y="869" width="0.6289%" height="15" fill="rgb(245,21,50)" fg:x="147" fg:w="4"/><text x="23.3632%" y="879.50"></text></g><g><title>schedule (3 samples, 0.47%)</title><rect x="23.2704%" y="853" width="0.4717%" height="15" fill="rgb(228,9,43)" fg:x="148" fg:w="3"/><text x="23.5204%" y="863.50"></text></g><g><title>__schedule (3 samples, 0.47%)</title><rect x="23.2704%" y="837" width="0.4717%" height="15" fill="rgb(208,100,47)" fg:x="148" fg:w="3"/><text x="23.5204%" y="847.50"></text></g><g><title>psi_task_switch (1 samples, 0.16%)</title><rect x="23.5849%" y="821" width="0.1572%" height="15" fill="rgb(232,26,8)" fg:x="150" fg:w="1"/><text x="23.8349%" y="831.50"></text></g><g><title>psi_group_change (1 samples, 0.16%)</title><rect x="23.5849%" y="805" width="0.1572%" height="15" fill="rgb(216,166,38)" fg:x="150" fg:w="1"/><text x="23.8349%" y="815.50"></text></g><g><title>__clone3 (139 samples, 21.86%)</title><rect x="2.0440%" y="1109" width="21.8553%" height="15" fill="rgb(251,202,51)" fg:x="13" fg:w="139"/><text x="2.2940%" y="1119.50">__clone3</text></g><g><title>start_thread (133 samples, 20.91%)</title><rect x="2.9874%" y="1093" width="20.9119%" height="15" fill="rgb(254,216,34)" fg:x="19" fg:w="133"/><text x="3.2374%" y="1103.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (132 samples, 20.75%)</title><rect x="3.1447%" y="1077" width="20.7547%" height="15" fill="rgb(251,32,27)" fg:x="20" fg:w="132"/><text x="3.3947%" y="1087.50">std::sys::unix::thread::Thread::n..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (8 samples, 1.26%)</title><rect x="22.6415%" y="1061" width="1.2579%" height="15" fill="rgb(208,127,28)" fg:x="144" fg:w="8"/><text x="22.8915%" y="1071.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (8 samples, 1.26%)</title><rect x="22.6415%" y="1045" width="1.2579%" height="15" fill="rgb(224,137,22)" fg:x="144" fg:w="8"/><text x="22.8915%" y="1055.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (6 samples, 0.94%)</title><rect x="22.9560%" y="1029" width="0.9434%" height="15" fill="rgb(254,70,32)" fg:x="146" fg:w="6"/><text x="23.2060%" y="1039.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (6 samples, 0.94%)</title><rect x="22.9560%" y="1013" width="0.9434%" height="15" fill="rgb(229,75,37)" fg:x="146" fg:w="6"/><text x="23.2060%" y="1023.50"></text></g><g><title>__GI___sigaltstack (1 samples, 0.16%)</title><rect x="23.7421%" y="997" width="0.1572%" height="15" fill="rgb(252,64,23)" fg:x="151" fg:w="1"/><text x="23.9921%" y="1007.50"></text></g><g><title>__entry_text_start (1 samples, 0.16%)</title><rect x="23.7421%" y="981" width="0.1572%" height="15" fill="rgb(232,162,48)" fg:x="151" fg:w="1"/><text x="23.9921%" y="991.50"></text></g><g><title>__irqentry_text_end (2 samples, 0.31%)</title><rect x="23.8994%" y="1109" width="0.3145%" height="15" fill="rgb(246,160,12)" fg:x="152" fg:w="2"/><text x="24.1494%" y="1119.50"></text></g><g><title>__sysvec_irq_work (1 samples, 0.16%)</title><rect x="24.2138%" y="1109" width="0.1572%" height="15" fill="rgb(247,166,0)" fg:x="154" fg:w="1"/><text x="24.4638%" y="1119.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.16%)</title><rect x="24.3711%" y="789" width="0.1572%" height="15" fill="rgb(249,219,21)" fg:x="155" fg:w="1"/><text x="24.6211%" y="799.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.16%)</title><rect x="24.3711%" y="773" width="0.1572%" height="15" fill="rgb(205,209,3)" fg:x="155" fg:w="1"/><text x="24.6211%" y="783.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.16%)</title><rect x="24.3711%" y="757" width="0.1572%" height="15" fill="rgb(243,44,1)" fg:x="155" fg:w="1"/><text x="24.6211%" y="767.50"></text></g><g><title>release_pages (1 samples, 0.16%)</title><rect x="24.3711%" y="741" width="0.1572%" height="15" fill="rgb(206,159,16)" fg:x="155" fg:w="1"/><text x="24.6211%" y="751.50"></text></g><g><title>free_unref_page_list (1 samples, 0.16%)</title><rect x="24.3711%" y="725" width="0.1572%" height="15" fill="rgb(244,77,30)" fg:x="155" fg:w="1"/><text x="24.6211%" y="735.50"></text></g><g><title>free_unref_page_commit (1 samples, 0.16%)</title><rect x="24.3711%" y="709" width="0.1572%" height="15" fill="rgb(218,69,12)" fg:x="155" fg:w="1"/><text x="24.6211%" y="719.50"></text></g><g><title>free_pcppages_bulk (1 samples, 0.16%)</title><rect x="24.3711%" y="693" width="0.1572%" height="15" fill="rgb(212,87,7)" fg:x="155" fg:w="1"/><text x="24.6211%" y="703.50"></text></g><g><title>__GI_exit (3 samples, 0.47%)</title><rect x="24.3711%" y="1061" width="0.4717%" height="15" fill="rgb(245,114,25)" fg:x="155" fg:w="3"/><text x="24.6211%" y="1071.50"></text></g><g><title>__run_exit_handlers (3 samples, 0.47%)</title><rect x="24.3711%" y="1045" width="0.4717%" height="15" fill="rgb(210,61,42)" fg:x="155" fg:w="3"/><text x="24.6211%" y="1055.50"></text></g><g><title>mi_process_done (3 samples, 0.47%)</title><rect x="24.3711%" y="1029" width="0.4717%" height="15" fill="rgb(211,52,33)" fg:x="155" fg:w="3"/><text x="24.6211%" y="1039.50"></text></g><g><title>mi_process_done (3 samples, 0.47%)</title><rect x="24.3711%" y="1013" width="0.4717%" height="15" fill="rgb(234,58,33)" fg:x="155" fg:w="3"/><text x="24.6211%" y="1023.50"></text></g><g><title>mi_heap_collect_ex (3 samples, 0.47%)</title><rect x="24.3711%" y="997" width="0.4717%" height="15" fill="rgb(220,115,36)" fg:x="155" fg:w="3"/><text x="24.6211%" y="1007.50"></text></g><g><title>mi_segment_cache_purge (3 samples, 0.47%)</title><rect x="24.3711%" y="981" width="0.4717%" height="15" fill="rgb(243,153,54)" fg:x="155" fg:w="3"/><text x="24.6211%" y="991.50"></text></g><g><title>mi_commit_mask_decommit (3 samples, 0.47%)</title><rect x="24.3711%" y="965" width="0.4717%" height="15" fill="rgb(251,47,18)" fg:x="155" fg:w="3"/><text x="24.6211%" y="975.50"></text></g><g><title>_mi_os_decommit (3 samples, 0.47%)</title><rect x="24.3711%" y="949" width="0.4717%" height="15" fill="rgb(242,102,42)" fg:x="155" fg:w="3"/><text x="24.6211%" y="959.50"></text></g><g><title>mi_os_commitx (3 samples, 0.47%)</title><rect x="24.3711%" y="933" width="0.4717%" height="15" fill="rgb(234,31,38)" fg:x="155" fg:w="3"/><text x="24.6211%" y="943.50"></text></g><g><title>__GI_madvise (3 samples, 0.47%)</title><rect x="24.3711%" y="917" width="0.4717%" height="15" fill="rgb(221,117,51)" fg:x="155" fg:w="3"/><text x="24.6211%" y="927.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.47%)</title><rect x="24.3711%" y="901" width="0.4717%" height="15" fill="rgb(212,20,18)" fg:x="155" fg:w="3"/><text x="24.6211%" y="911.50"></text></g><g><title>do_syscall_64 (3 samples, 0.47%)</title><rect x="24.3711%" y="885" width="0.4717%" height="15" fill="rgb(245,133,36)" fg:x="155" fg:w="3"/><text x="24.6211%" y="895.50"></text></g><g><title>__x64_sys_madvise (3 samples, 0.47%)</title><rect x="24.3711%" y="869" width="0.4717%" height="15" fill="rgb(212,6,19)" fg:x="155" fg:w="3"/><text x="24.6211%" y="879.50"></text></g><g><title>do_madvise.part.0 (3 samples, 0.47%)</title><rect x="24.3711%" y="853" width="0.4717%" height="15" fill="rgb(218,1,36)" fg:x="155" fg:w="3"/><text x="24.6211%" y="863.50"></text></g><g><title>madvise_walk_vmas (3 samples, 0.47%)</title><rect x="24.3711%" y="837" width="0.4717%" height="15" fill="rgb(246,84,54)" fg:x="155" fg:w="3"/><text x="24.6211%" y="847.50"></text></g><g><title>madvise_vma_behavior (3 samples, 0.47%)</title><rect x="24.3711%" y="821" width="0.4717%" height="15" fill="rgb(242,110,6)" fg:x="155" fg:w="3"/><text x="24.6211%" y="831.50"></text></g><g><title>zap_page_range (3 samples, 0.47%)</title><rect x="24.3711%" y="805" width="0.4717%" height="15" fill="rgb(214,47,5)" fg:x="155" fg:w="3"/><text x="24.6211%" y="815.50"></text></g><g><title>unmap_single_vma (2 samples, 0.31%)</title><rect x="24.5283%" y="789" width="0.3145%" height="15" fill="rgb(218,159,25)" fg:x="156" fg:w="2"/><text x="24.7783%" y="799.50"></text></g><g><title>unmap_page_range (2 samples, 0.31%)</title><rect x="24.5283%" y="773" width="0.3145%" height="15" fill="rgb(215,211,28)" fg:x="156" fg:w="2"/><text x="24.7783%" y="783.50"></text></g><g><title>zap_pmd_range.isra.0 (2 samples, 0.31%)</title><rect x="24.5283%" y="757" width="0.3145%" height="15" fill="rgb(238,59,32)" fg:x="156" fg:w="2"/><text x="24.7783%" y="767.50"></text></g><g><title>zap_pte_range (2 samples, 0.31%)</title><rect x="24.5283%" y="741" width="0.3145%" height="15" fill="rgb(226,82,3)" fg:x="156" fg:w="2"/><text x="24.7783%" y="751.50"></text></g><g><title>tlb_flush_mmu (1 samples, 0.16%)</title><rect x="24.6855%" y="725" width="0.1572%" height="15" fill="rgb(240,164,32)" fg:x="157" fg:w="1"/><text x="24.9355%" y="735.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.16%)</title><rect x="24.6855%" y="709" width="0.1572%" height="15" fill="rgb(232,46,7)" fg:x="157" fg:w="1"/><text x="24.9355%" y="719.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.16%)</title><rect x="24.6855%" y="693" width="0.1572%" height="15" fill="rgb(229,129,53)" fg:x="157" fg:w="1"/><text x="24.9355%" y="703.50"></text></g><g><title>free_swap_cache (1 samples, 0.16%)</title><rect x="24.6855%" y="677" width="0.1572%" height="15" fill="rgb(234,188,29)" fg:x="157" fg:w="1"/><text x="24.9355%" y="687.50"></text></g><g><title>&lt;std::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="24.8428%" y="837" width="0.1572%" height="15" fill="rgb(246,141,4)" fg:x="158" fg:w="1"/><text x="25.0928%" y="847.50"></text></g><g><title>&lt;std::sys::unix::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="24.8428%" y="821" width="0.1572%" height="15" fill="rgb(229,23,39)" fg:x="158" fg:w="1"/><text x="25.0928%" y="831.50"></text></g><g><title>__GI___readdir64 (1 samples, 0.16%)</title><rect x="24.8428%" y="805" width="0.1572%" height="15" fill="rgb(206,12,3)" fg:x="158" fg:w="1"/><text x="25.0928%" y="815.50"></text></g><g><title>__GI___getdents64 (1 samples, 0.16%)</title><rect x="24.8428%" y="789" width="0.1572%" height="15" fill="rgb(252,226,20)" fg:x="158" fg:w="1"/><text x="25.0928%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.16%)</title><rect x="24.8428%" y="773" width="0.1572%" height="15" fill="rgb(216,123,35)" fg:x="158" fg:w="1"/><text x="25.0928%" y="783.50"></text></g><g><title>do_syscall_64 (1 samples, 0.16%)</title><rect x="24.8428%" y="757" width="0.1572%" height="15" fill="rgb(212,68,40)" fg:x="158" fg:w="1"/><text x="25.0928%" y="767.50"></text></g><g><title>__x64_sys_getdents64 (1 samples, 0.16%)</title><rect x="24.8428%" y="741" width="0.1572%" height="15" fill="rgb(254,125,32)" fg:x="158" fg:w="1"/><text x="25.0928%" y="751.50"></text></g><g><title>iterate_dir (1 samples, 0.16%)</title><rect x="24.8428%" y="725" width="0.1572%" height="15" fill="rgb(253,97,22)" fg:x="158" fg:w="1"/><text x="25.0928%" y="735.50"></text></g><g><title>ext4_readdir (1 samples, 0.16%)</title><rect x="24.8428%" y="709" width="0.1572%" height="15" fill="rgb(241,101,14)" fg:x="158" fg:w="1"/><text x="25.0928%" y="719.50"></text></g><g><title>ext4_dx_readdir (1 samples, 0.16%)</title><rect x="24.8428%" y="693" width="0.1572%" height="15" fill="rgb(238,103,29)" fg:x="158" fg:w="1"/><text x="25.0928%" y="703.50"></text></g><g><title>call_filldir (1 samples, 0.16%)</title><rect x="24.8428%" y="677" width="0.1572%" height="15" fill="rgb(233,195,47)" fg:x="158" fg:w="1"/><text x="25.0928%" y="687.50"></text></g><g><title>filldir64 (1 samples, 0.16%)</title><rect x="24.8428%" y="661" width="0.1572%" height="15" fill="rgb(246,218,30)" fg:x="158" fg:w="1"/><text x="25.0928%" y="671.50"></text></g><g><title>memchr (1 samples, 0.16%)</title><rect x="24.8428%" y="645" width="0.1572%" height="15" fill="rgb(219,145,47)" fg:x="158" fg:w="1"/><text x="25.0928%" y="655.50"></text></g><g><title>mark_page_accessed (1 samples, 0.16%)</title><rect x="25.0000%" y="421" width="0.1572%" height="15" fill="rgb(243,12,26)" fg:x="159" fg:w="1"/><text x="25.2500%" y="431.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.31%)</title><rect x="25.0000%" y="661" width="0.3145%" height="15" fill="rgb(214,87,16)" fg:x="159" fg:w="2"/><text x="25.2500%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;memmap2::Mmap&gt; (2 samples, 0.31%)</title><rect x="25.0000%" y="645" width="0.3145%" height="15" fill="rgb(208,99,42)" fg:x="159" fg:w="2"/><text x="25.2500%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;memmap2::os::MmapInner&gt; (2 samples, 0.31%)</title><rect x="25.0000%" y="629" width="0.3145%" height="15" fill="rgb(253,99,2)" fg:x="159" fg:w="2"/><text x="25.2500%" y="639.50"></text></g><g><title>__GI___munmap (2 samples, 0.31%)</title><rect x="25.0000%" y="613" width="0.3145%" height="15" fill="rgb(220,168,23)" fg:x="159" fg:w="2"/><text x="25.2500%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.31%)</title><rect x="25.0000%" y="597" width="0.3145%" height="15" fill="rgb(242,38,24)" fg:x="159" fg:w="2"/><text x="25.2500%" y="607.50"></text></g><g><title>do_syscall_64 (2 samples, 0.31%)</title><rect x="25.0000%" y="581" width="0.3145%" height="15" fill="rgb(225,182,9)" fg:x="159" fg:w="2"/><text x="25.2500%" y="591.50"></text></g><g><title>__x64_sys_munmap (2 samples, 0.31%)</title><rect x="25.0000%" y="565" width="0.3145%" height="15" fill="rgb(243,178,37)" fg:x="159" fg:w="2"/><text x="25.2500%" y="575.50"></text></g><g><title>__vm_munmap (2 samples, 0.31%)</title><rect x="25.0000%" y="549" width="0.3145%" height="15" fill="rgb(232,139,19)" fg:x="159" fg:w="2"/><text x="25.2500%" y="559.50"></text></g><g><title>__do_munmap (2 samples, 0.31%)</title><rect x="25.0000%" y="533" width="0.3145%" height="15" fill="rgb(225,201,24)" fg:x="159" fg:w="2"/><text x="25.2500%" y="543.50"></text></g><g><title>unmap_region (2 samples, 0.31%)</title><rect x="25.0000%" y="517" width="0.3145%" height="15" fill="rgb(221,47,46)" fg:x="159" fg:w="2"/><text x="25.2500%" y="527.50"></text></g><g><title>unmap_vmas (2 samples, 0.31%)</title><rect x="25.0000%" y="501" width="0.3145%" height="15" fill="rgb(249,23,13)" fg:x="159" fg:w="2"/><text x="25.2500%" y="511.50"></text></g><g><title>unmap_single_vma (2 samples, 0.31%)</title><rect x="25.0000%" y="485" width="0.3145%" height="15" fill="rgb(219,9,5)" fg:x="159" fg:w="2"/><text x="25.2500%" y="495.50"></text></g><g><title>unmap_page_range (2 samples, 0.31%)</title><rect x="25.0000%" y="469" width="0.3145%" height="15" fill="rgb(254,171,16)" fg:x="159" fg:w="2"/><text x="25.2500%" y="479.50"></text></g><g><title>zap_pmd_range.isra.0 (2 samples, 0.31%)</title><rect x="25.0000%" y="453" width="0.3145%" height="15" fill="rgb(230,171,20)" fg:x="159" fg:w="2"/><text x="25.2500%" y="463.50"></text></g><g><title>zap_pte_range (2 samples, 0.31%)</title><rect x="25.0000%" y="437" width="0.3145%" height="15" fill="rgb(210,71,41)" fg:x="159" fg:w="2"/><text x="25.2500%" y="447.50"></text></g><g><title>page_remove_rmap (1 samples, 0.16%)</title><rect x="25.1572%" y="421" width="0.1572%" height="15" fill="rgb(206,173,20)" fg:x="160" fg:w="1"/><text x="25.4072%" y="431.50"></text></g><g><title>page_remove_file_rmap (1 samples, 0.16%)</title><rect x="25.1572%" y="405" width="0.1572%" height="15" fill="rgb(233,88,34)" fg:x="160" fg:w="1"/><text x="25.4072%" y="415.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.16%)</title><rect x="25.1572%" y="389" width="0.1572%" height="15" fill="rgb(223,209,46)" fg:x="160" fg:w="1"/><text x="25.4072%" y="399.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.16%)</title><rect x="25.1572%" y="373" width="0.1572%" height="15" fill="rgb(250,43,18)" fg:x="160" fg:w="1"/><text x="25.4072%" y="383.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.16%)</title><rect x="25.1572%" y="357" width="0.1572%" height="15" fill="rgb(208,13,10)" fg:x="160" fg:w="1"/><text x="25.4072%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser_settings::Maps&gt; (1 samples, 0.16%)</title><rect x="25.3145%" y="645" width="0.1572%" height="15" fill="rgb(212,200,36)" fg:x="161" fg:w="1"/><text x="25.5645%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u16,demoparser::parsing::demo_parsing::data_table::ServerClass,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.16%)</title><rect x="25.3145%" y="629" width="0.1572%" height="15" fill="rgb(225,90,30)" fg:x="161" fg:w="1"/><text x="25.5645%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u16,demoparser::parsing::demo_parsing::data_table::ServerClass,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.16%)</title><rect x="25.3145%" y="613" width="0.1572%" height="15" fill="rgb(236,182,39)" fg:x="161" fg:w="1"/><text x="25.5645%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u16,demoparser::parsing::demo_parsing::data_table::ServerClass)&gt;&gt; (1 samples, 0.16%)</title><rect x="25.3145%" y="597" width="0.1572%" height="15" fill="rgb(212,144,35)" fg:x="161" fg:w="1"/><text x="25.5645%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.16%)</title><rect x="25.3145%" y="581" width="0.1572%" height="15" fill="rgb(228,63,44)" fg:x="161" fg:w="1"/><text x="25.5645%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.16%)</title><rect x="25.3145%" y="565" width="0.1572%" height="15" fill="rgb(228,109,6)" fg:x="161" fg:w="1"/><text x="25.5645%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.16%)</title><rect x="25.3145%" y="549" width="0.1572%" height="15" fill="rgb(238,117,24)" fg:x="161" fg:w="1"/><text x="25.5645%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.16%)</title><rect x="25.3145%" y="533" width="0.1572%" height="15" fill="rgb(242,26,26)" fg:x="161" fg:w="1"/><text x="25.5645%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u16,demoparser::parsing::demo_parsing::data_table::ServerClass)&gt; (1 samples, 0.16%)</title><rect x="25.3145%" y="517" width="0.1572%" height="15" fill="rgb(221,92,48)" fg:x="161" fg:w="1"/><text x="25.5645%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::data_table::ServerClass&gt; (1 samples, 0.16%)</title><rect x="25.3145%" y="501" width="0.1572%" height="15" fill="rgb(209,209,32)" fg:x="161" fg:w="1"/><text x="25.5645%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::demo_parsing::entities::Prop&gt;&gt; (1 samples, 0.16%)</title><rect x="25.3145%" y="485" width="0.1572%" height="15" fill="rgb(221,70,22)" fg:x="161" fg:w="1"/><text x="25.5645%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.16%)</title><rect x="25.3145%" y="469" width="0.1572%" height="15" fill="rgb(248,145,5)" fg:x="161" fg:w="1"/><text x="25.5645%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::demo_parsing::entities::Prop]&gt; (1 samples, 0.16%)</title><rect x="25.3145%" y="453" width="0.1572%" height="15" fill="rgb(226,116,26)" fg:x="161" fg:w="1"/><text x="25.5645%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::entities::Prop&gt; (1 samples, 0.16%)</title><rect x="25.3145%" y="437" width="0.1572%" height="15" fill="rgb(244,5,17)" fg:x="161" fg:w="1"/><text x="25.5645%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.16%)</title><rect x="25.3145%" y="421" width="0.1572%" height="15" fill="rgb(252,159,33)" fg:x="161" fg:w="1"/><text x="25.5645%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.16%)</title><rect x="25.3145%" y="405" width="0.1572%" height="15" fill="rgb(206,71,0)" fg:x="161" fg:w="1"/><text x="25.5645%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.16%)</title><rect x="25.3145%" y="389" width="0.1572%" height="15" fill="rgb(233,118,54)" fg:x="161" fg:w="1"/><text x="25.5645%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::entities::Prop&gt; (1 samples, 0.16%)</title><rect x="25.3145%" y="373" width="0.1572%" height="15" fill="rgb(234,83,48)" fg:x="161" fg:w="1"/><text x="25.5645%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser::Parser&gt; (7 samples, 1.10%)</title><rect x="25.3145%" y="661" width="1.1006%" height="15" fill="rgb(228,3,54)" fg:x="161" fg:w="7"/><text x="25.5645%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser_settings::ParserState&gt; (6 samples, 0.94%)</title><rect x="25.4717%" y="645" width="0.9434%" height="15" fill="rgb(226,155,13)" fg:x="162" fg:w="6"/><text x="25.7217%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;i32&gt;&gt; (6 samples, 0.94%)</title><rect x="25.4717%" y="629" width="0.9434%" height="15" fill="rgb(241,28,37)" fg:x="162" fg:w="6"/><text x="25.7217%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;i32&gt;&gt; (6 samples, 0.94%)</title><rect x="25.4717%" y="613" width="0.9434%" height="15" fill="rgb(233,93,10)" fg:x="162" fg:w="6"/><text x="25.7217%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.94%)</title><rect x="25.4717%" y="597" width="0.9434%" height="15" fill="rgb(225,113,19)" fg:x="162" fg:w="6"/><text x="25.7217%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.94%)</title><rect x="25.4717%" y="581" width="0.9434%" height="15" fill="rgb(241,2,18)" fg:x="162" fg:w="6"/><text x="25.7217%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.94%)</title><rect x="25.4717%" y="565" width="0.9434%" height="15" fill="rgb(228,207,21)" fg:x="162" fg:w="6"/><text x="25.7217%" y="575.50"></text></g><g><title>_mi_os_free_ex (6 samples, 0.94%)</title><rect x="25.4717%" y="549" width="0.9434%" height="15" fill="rgb(213,211,35)" fg:x="162" fg:w="6"/><text x="25.7217%" y="559.50"></text></g><g><title>_mi_os_free_ex (6 samples, 0.94%)</title><rect x="25.4717%" y="533" width="0.9434%" height="15" fill="rgb(209,83,10)" fg:x="162" fg:w="6"/><text x="25.7217%" y="543.50"></text></g><g><title>mi_os_mem_free (6 samples, 0.94%)</title><rect x="25.4717%" y="517" width="0.9434%" height="15" fill="rgb(209,164,1)" fg:x="162" fg:w="6"/><text x="25.7217%" y="527.50"></text></g><g><title>mi_os_mem_free (6 samples, 0.94%)</title><rect x="25.4717%" y="501" width="0.9434%" height="15" fill="rgb(213,184,43)" fg:x="162" fg:w="6"/><text x="25.7217%" y="511.50"></text></g><g><title>__GI___munmap (6 samples, 0.94%)</title><rect x="25.4717%" y="485" width="0.9434%" height="15" fill="rgb(231,61,34)" fg:x="162" fg:w="6"/><text x="25.7217%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.94%)</title><rect x="25.4717%" y="469" width="0.9434%" height="15" fill="rgb(235,75,3)" fg:x="162" fg:w="6"/><text x="25.7217%" y="479.50"></text></g><g><title>do_syscall_64 (6 samples, 0.94%)</title><rect x="25.4717%" y="453" width="0.9434%" height="15" fill="rgb(220,106,47)" fg:x="162" fg:w="6"/><text x="25.7217%" y="463.50"></text></g><g><title>__x64_sys_munmap (6 samples, 0.94%)</title><rect x="25.4717%" y="437" width="0.9434%" height="15" fill="rgb(210,196,33)" fg:x="162" fg:w="6"/><text x="25.7217%" y="447.50"></text></g><g><title>__vm_munmap (6 samples, 0.94%)</title><rect x="25.4717%" y="421" width="0.9434%" height="15" fill="rgb(229,154,42)" fg:x="162" fg:w="6"/><text x="25.7217%" y="431.50"></text></g><g><title>__do_munmap (6 samples, 0.94%)</title><rect x="25.4717%" y="405" width="0.9434%" height="15" fill="rgb(228,114,26)" fg:x="162" fg:w="6"/><text x="25.7217%" y="415.50"></text></g><g><title>unmap_region (6 samples, 0.94%)</title><rect x="25.4717%" y="389" width="0.9434%" height="15" fill="rgb(208,144,1)" fg:x="162" fg:w="6"/><text x="25.7217%" y="399.50"></text></g><g><title>unmap_vmas (6 samples, 0.94%)</title><rect x="25.4717%" y="373" width="0.9434%" height="15" fill="rgb(239,112,37)" fg:x="162" fg:w="6"/><text x="25.7217%" y="383.50"></text></g><g><title>unmap_single_vma (6 samples, 0.94%)</title><rect x="25.4717%" y="357" width="0.9434%" height="15" fill="rgb(210,96,50)" fg:x="162" fg:w="6"/><text x="25.7217%" y="367.50"></text></g><g><title>unmap_page_range (6 samples, 0.94%)</title><rect x="25.4717%" y="341" width="0.9434%" height="15" fill="rgb(222,178,2)" fg:x="162" fg:w="6"/><text x="25.7217%" y="351.50"></text></g><g><title>zap_pmd_range.isra.0 (6 samples, 0.94%)</title><rect x="25.4717%" y="325" width="0.9434%" height="15" fill="rgb(226,74,18)" fg:x="162" fg:w="6"/><text x="25.7217%" y="335.50"></text></g><g><title>zap_pte_range (6 samples, 0.94%)</title><rect x="25.4717%" y="309" width="0.9434%" height="15" fill="rgb(225,67,54)" fg:x="162" fg:w="6"/><text x="25.7217%" y="319.50"></text></g><g><title>tlb_flush_mmu (3 samples, 0.47%)</title><rect x="25.9434%" y="293" width="0.4717%" height="15" fill="rgb(251,92,32)" fg:x="165" fg:w="3"/><text x="26.1934%" y="303.50"></text></g><g><title>tlb_batch_pages_flush (3 samples, 0.47%)</title><rect x="25.9434%" y="277" width="0.4717%" height="15" fill="rgb(228,149,22)" fg:x="165" fg:w="3"/><text x="26.1934%" y="287.50"></text></g><g><title>free_pages_and_swap_cache (3 samples, 0.47%)</title><rect x="25.9434%" y="261" width="0.4717%" height="15" fill="rgb(243,54,13)" fg:x="165" fg:w="3"/><text x="26.1934%" y="271.50"></text></g><g><title>release_pages (3 samples, 0.47%)</title><rect x="25.9434%" y="245" width="0.4717%" height="15" fill="rgb(243,180,28)" fg:x="165" fg:w="3"/><text x="26.1934%" y="255.50"></text></g><g><title>free_unref_page_list (2 samples, 0.31%)</title><rect x="26.1006%" y="229" width="0.3145%" height="15" fill="rgb(208,167,24)" fg:x="166" fg:w="2"/><text x="26.3506%" y="239.50"></text></g><g><title>free_unref_page_commit (2 samples, 0.31%)</title><rect x="26.1006%" y="213" width="0.3145%" height="15" fill="rgb(245,73,45)" fg:x="166" fg:w="2"/><text x="26.3506%" y="223.50"></text></g><g><title>free_pcppages_bulk (2 samples, 0.31%)</title><rect x="26.1006%" y="197" width="0.3145%" height="15" fill="rgb(237,203,48)" fg:x="166" fg:w="2"/><text x="26.3506%" y="207.50"></text></g><g><title>__free_one_page (2 samples, 0.31%)</title><rect x="26.1006%" y="181" width="0.3145%" height="15" fill="rgb(211,197,16)" fg:x="166" fg:w="2"/><text x="26.3506%" y="191.50"></text></g><g><title>clear_page_erms (5 samples, 0.79%)</title><rect x="29.7170%" y="245" width="0.7862%" height="15" fill="rgb(243,99,51)" fg:x="189" fg:w="5"/><text x="29.9670%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (19 samples, 2.99%)</title><rect x="27.9874%" y="549" width="2.9874%" height="15" fill="rgb(215,123,29)" fg:x="178" fg:w="19"/><text x="28.2374%" y="559.50">&lt;al..</text></g><g><title>alloc::alloc::Global::grow_impl (19 samples, 2.99%)</title><rect x="27.9874%" y="533" width="2.9874%" height="15" fill="rgb(239,186,37)" fg:x="178" fg:w="19"/><text x="28.2374%" y="543.50">all..</text></g><g><title>alloc::alloc::realloc (19 samples, 2.99%)</title><rect x="27.9874%" y="517" width="2.9874%" height="15" fill="rgb(252,136,39)" fg:x="178" fg:w="19"/><text x="28.2374%" y="527.50">all..</text></g><g><title>_mi_heap_realloc_zero (19 samples, 2.99%)</title><rect x="27.9874%" y="501" width="2.9874%" height="15" fill="rgb(223,213,32)" fg:x="178" fg:w="19"/><text x="28.2374%" y="511.50">_mi..</text></g><g><title>_mi_memcpy_aligned (19 samples, 2.99%)</title><rect x="27.9874%" y="485" width="2.9874%" height="15" fill="rgb(233,115,5)" fg:x="178" fg:w="19"/><text x="28.2374%" y="495.50">_mi..</text></g><g><title>_mi_memcpy (19 samples, 2.99%)</title><rect x="27.9874%" y="469" width="2.9874%" height="15" fill="rgb(207,226,44)" fg:x="178" fg:w="19"/><text x="28.2374%" y="479.50">_mi..</text></g><g><title>memcpy (19 samples, 2.99%)</title><rect x="27.9874%" y="453" width="2.9874%" height="15" fill="rgb(208,126,0)" fg:x="178" fg:w="19"/><text x="28.2374%" y="463.50">mem..</text></g><g><title>[libc.so.6] (19 samples, 2.99%)</title><rect x="27.9874%" y="437" width="2.9874%" height="15" fill="rgb(244,66,21)" fg:x="178" fg:w="19"/><text x="28.2374%" y="447.50">[li..</text></g><g><title>asm_exc_page_fault (13 samples, 2.04%)</title><rect x="28.9308%" y="421" width="2.0440%" height="15" fill="rgb(222,97,12)" fg:x="184" fg:w="13"/><text x="29.1808%" y="431.50">a..</text></g><g><title>exc_page_fault (8 samples, 1.26%)</title><rect x="29.7170%" y="405" width="1.2579%" height="15" fill="rgb(219,213,19)" fg:x="189" fg:w="8"/><text x="29.9670%" y="415.50"></text></g><g><title>do_user_addr_fault (8 samples, 1.26%)</title><rect x="29.7170%" y="389" width="1.2579%" height="15" fill="rgb(252,169,30)" fg:x="189" fg:w="8"/><text x="29.9670%" y="399.50"></text></g><g><title>handle_mm_fault (8 samples, 1.26%)</title><rect x="29.7170%" y="373" width="1.2579%" height="15" fill="rgb(206,32,51)" fg:x="189" fg:w="8"/><text x="29.9670%" y="383.50"></text></g><g><title>__handle_mm_fault (8 samples, 1.26%)</title><rect x="29.7170%" y="357" width="1.2579%" height="15" fill="rgb(250,172,42)" fg:x="189" fg:w="8"/><text x="29.9670%" y="367.50"></text></g><g><title>handle_pte_fault (8 samples, 1.26%)</title><rect x="29.7170%" y="341" width="1.2579%" height="15" fill="rgb(209,34,43)" fg:x="189" fg:w="8"/><text x="29.9670%" y="351.50"></text></g><g><title>do_anonymous_page (8 samples, 1.26%)</title><rect x="29.7170%" y="325" width="1.2579%" height="15" fill="rgb(223,11,35)" fg:x="189" fg:w="8"/><text x="29.9670%" y="335.50"></text></g><g><title>vma_alloc_folio (8 samples, 1.26%)</title><rect x="29.7170%" y="309" width="1.2579%" height="15" fill="rgb(251,219,26)" fg:x="189" fg:w="8"/><text x="29.9670%" y="319.50"></text></g><g><title>__folio_alloc (8 samples, 1.26%)</title><rect x="29.7170%" y="293" width="1.2579%" height="15" fill="rgb(231,119,3)" fg:x="189" fg:w="8"/><text x="29.9670%" y="303.50"></text></g><g><title>__alloc_pages (8 samples, 1.26%)</title><rect x="29.7170%" y="277" width="1.2579%" height="15" fill="rgb(216,97,11)" fg:x="189" fg:w="8"/><text x="29.9670%" y="287.50"></text></g><g><title>get_page_from_freelist (8 samples, 1.26%)</title><rect x="29.7170%" y="261" width="1.2579%" height="15" fill="rgb(223,59,9)" fg:x="189" fg:w="8"/><text x="29.9670%" y="271.50"></text></g><g><title>rmqueue (3 samples, 0.47%)</title><rect x="30.5031%" y="245" width="0.4717%" height="15" fill="rgb(233,93,31)" fg:x="194" fg:w="3"/><text x="30.7531%" y="255.50"></text></g><g><title>rmqueue_pcplist.constprop.0 (3 samples, 0.47%)</title><rect x="30.5031%" y="229" width="0.4717%" height="15" fill="rgb(239,81,33)" fg:x="194" fg:w="3"/><text x="30.7531%" y="239.50"></text></g><g><title>rmqueue_bulk (2 samples, 0.31%)</title><rect x="30.6604%" y="213" width="0.3145%" height="15" fill="rgb(213,120,34)" fg:x="195" fg:w="2"/><text x="30.9104%" y="223.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.16%)</title><rect x="30.9748%" y="549" width="0.1572%" height="15" fill="rgb(243,49,53)" fg:x="197" fg:w="1"/><text x="31.2248%" y="559.50"></text></g><g><title>mi_find_page (1 samples, 0.16%)</title><rect x="30.9748%" y="533" width="0.1572%" height="15" fill="rgb(247,216,33)" fg:x="197" fg:w="1"/><text x="31.2248%" y="543.50"></text></g><g><title>mi_find_free_page (1 samples, 0.16%)</title><rect x="30.9748%" y="517" width="0.1572%" height="15" fill="rgb(226,26,14)" fg:x="197" fg:w="1"/><text x="31.2248%" y="527.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.16%)</title><rect x="30.9748%" y="501" width="0.1572%" height="15" fill="rgb(215,49,53)" fg:x="197" fg:w="1"/><text x="31.2248%" y="511.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.16%)</title><rect x="30.9748%" y="485" width="0.1572%" height="15" fill="rgb(245,162,40)" fg:x="197" fg:w="1"/><text x="31.2248%" y="495.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.16%)</title><rect x="30.9748%" y="469" width="0.1572%" height="15" fill="rgb(229,68,17)" fg:x="197" fg:w="1"/><text x="31.2248%" y="479.50"></text></g><g><title>mi_page_free_list_extend (1 samples, 0.16%)</title><rect x="30.9748%" y="453" width="0.1572%" height="15" fill="rgb(213,182,10)" fg:x="197" fg:w="1"/><text x="31.2248%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (21 samples, 3.30%)</title><rect x="27.9874%" y="597" width="3.3019%" height="15" fill="rgb(245,125,30)" fg:x="178" fg:w="21"/><text x="28.2374%" y="607.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (21 samples, 3.30%)</title><rect x="27.9874%" y="581" width="3.3019%" height="15" fill="rgb(232,202,2)" fg:x="178" fg:w="21"/><text x="28.2374%" y="591.50">all..</text></g><g><title>alloc::raw_vec::finish_grow (21 samples, 3.30%)</title><rect x="27.9874%" y="565" width="3.3019%" height="15" fill="rgb(237,140,51)" fg:x="178" fg:w="21"/><text x="28.2374%" y="575.50">all..</text></g><g><title>mi_malloc (1 samples, 0.16%)</title><rect x="31.1321%" y="549" width="0.1572%" height="15" fill="rgb(236,157,25)" fg:x="198" fg:w="1"/><text x="31.3821%" y="559.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.16%)</title><rect x="31.1321%" y="533" width="0.1572%" height="15" fill="rgb(219,209,0)" fg:x="198" fg:w="1"/><text x="31.3821%" y="543.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.16%)</title><rect x="31.1321%" y="517" width="0.1572%" height="15" fill="rgb(240,116,54)" fg:x="198" fg:w="1"/><text x="31.3821%" y="527.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.16%)</title><rect x="31.1321%" y="501" width="0.1572%" height="15" fill="rgb(216,10,36)" fg:x="198" fg:w="1"/><text x="31.3821%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.16%)</title><rect x="31.2893%" y="597" width="0.1572%" height="15" fill="rgb(222,72,44)" fg:x="199" fg:w="1"/><text x="31.5393%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.16%)</title><rect x="31.2893%" y="581" width="0.1572%" height="15" fill="rgb(232,159,9)" fg:x="199" fg:w="1"/><text x="31.5393%" y="591.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.16%)</title><rect x="31.4465%" y="597" width="0.1572%" height="15" fill="rgb(210,39,32)" fg:x="200" fg:w="1"/><text x="31.6965%" y="607.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.16%)</title><rect x="31.4465%" y="581" width="0.1572%" height="15" fill="rgb(216,194,45)" fg:x="200" fg:w="1"/><text x="31.6965%" y="591.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.16%)</title><rect x="31.4465%" y="565" width="0.1572%" height="15" fill="rgb(218,18,35)" fg:x="200" fg:w="1"/><text x="31.6965%" y="575.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.16%)</title><rect x="31.4465%" y="549" width="0.1572%" height="15" fill="rgb(207,83,51)" fg:x="200" fg:w="1"/><text x="31.6965%" y="559.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.16%)</title><rect x="31.4465%" y="533" width="0.1572%" height="15" fill="rgb(225,63,43)" fg:x="200" fg:w="1"/><text x="31.6965%" y="543.50"></text></g><g><title>tick_sched_timer (1 samples, 0.16%)</title><rect x="31.4465%" y="517" width="0.1572%" height="15" fill="rgb(207,57,36)" fg:x="200" fg:w="1"/><text x="31.6965%" y="527.50"></text></g><g><title>tick_sched_handle (1 samples, 0.16%)</title><rect x="31.4465%" y="501" width="0.1572%" height="15" fill="rgb(216,99,33)" fg:x="200" fg:w="1"/><text x="31.6965%" y="511.50"></text></g><g><title>update_process_times (1 samples, 0.16%)</title><rect x="31.4465%" y="485" width="0.1572%" height="15" fill="rgb(225,42,16)" fg:x="200" fg:w="1"/><text x="31.6965%" y="495.50"></text></g><g><title>scheduler_tick (1 samples, 0.16%)</title><rect x="31.4465%" y="469" width="0.1572%" height="15" fill="rgb(220,201,45)" fg:x="200" fg:w="1"/><text x="31.6965%" y="479.50"></text></g><g><title>clear_page_erms (3 samples, 0.47%)</title><rect x="37.2642%" y="405" width="0.4717%" height="15" fill="rgb(225,33,4)" fg:x="237" fg:w="3"/><text x="37.5142%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (74 samples, 11.64%)</title><rect x="26.4151%" y="613" width="11.6352%" height="15" fill="rgb(224,33,50)" fg:x="168" fg:w="74"/><text x="26.6651%" y="623.50">alloc::vec::Vec&lt;T..</text></g><g><title>core::ptr::write (41 samples, 6.45%)</title><rect x="31.6038%" y="597" width="6.4465%" height="15" fill="rgb(246,198,51)" fg:x="201" fg:w="41"/><text x="31.8538%" y="607.50">core::pt..</text></g><g><title>asm_exc_page_fault (6 samples, 0.94%)</title><rect x="37.1069%" y="581" width="0.9434%" height="15" fill="rgb(205,22,4)" fg:x="236" fg:w="6"/><text x="37.3569%" y="591.50"></text></g><g><title>exc_page_fault (5 samples, 0.79%)</title><rect x="37.2642%" y="565" width="0.7862%" height="15" fill="rgb(206,3,8)" fg:x="237" fg:w="5"/><text x="37.5142%" y="575.50"></text></g><g><title>do_user_addr_fault (5 samples, 0.79%)</title><rect x="37.2642%" y="549" width="0.7862%" height="15" fill="rgb(251,23,15)" fg:x="237" fg:w="5"/><text x="37.5142%" y="559.50"></text></g><g><title>handle_mm_fault (5 samples, 0.79%)</title><rect x="37.2642%" y="533" width="0.7862%" height="15" fill="rgb(252,88,28)" fg:x="237" fg:w="5"/><text x="37.5142%" y="543.50"></text></g><g><title>__handle_mm_fault (5 samples, 0.79%)</title><rect x="37.2642%" y="517" width="0.7862%" height="15" fill="rgb(212,127,14)" fg:x="237" fg:w="5"/><text x="37.5142%" y="527.50"></text></g><g><title>handle_pte_fault (5 samples, 0.79%)</title><rect x="37.2642%" y="501" width="0.7862%" height="15" fill="rgb(247,145,37)" fg:x="237" fg:w="5"/><text x="37.5142%" y="511.50"></text></g><g><title>do_anonymous_page (5 samples, 0.79%)</title><rect x="37.2642%" y="485" width="0.7862%" height="15" fill="rgb(209,117,53)" fg:x="237" fg:w="5"/><text x="37.5142%" y="495.50"></text></g><g><title>vma_alloc_folio (5 samples, 0.79%)</title><rect x="37.2642%" y="469" width="0.7862%" height="15" fill="rgb(212,90,42)" fg:x="237" fg:w="5"/><text x="37.5142%" y="479.50"></text></g><g><title>__folio_alloc (5 samples, 0.79%)</title><rect x="37.2642%" y="453" width="0.7862%" height="15" fill="rgb(218,164,37)" fg:x="237" fg:w="5"/><text x="37.5142%" y="463.50"></text></g><g><title>__alloc_pages (5 samples, 0.79%)</title><rect x="37.2642%" y="437" width="0.7862%" height="15" fill="rgb(246,65,34)" fg:x="237" fg:w="5"/><text x="37.5142%" y="447.50"></text></g><g><title>get_page_from_freelist (5 samples, 0.79%)</title><rect x="37.2642%" y="421" width="0.7862%" height="15" fill="rgb(231,100,33)" fg:x="237" fg:w="5"/><text x="37.5142%" y="431.50"></text></g><g><title>rmqueue (2 samples, 0.31%)</title><rect x="37.7358%" y="405" width="0.3145%" height="15" fill="rgb(228,126,14)" fg:x="240" fg:w="2"/><text x="37.9858%" y="415.50"></text></g><g><title>rmqueue_pcplist.constprop.0 (1 samples, 0.16%)</title><rect x="37.8931%" y="389" width="0.1572%" height="15" fill="rgb(215,173,21)" fg:x="241" fg:w="1"/><text x="38.1431%" y="399.50"></text></g><g><title>rmqueue_bulk (1 samples, 0.16%)</title><rect x="37.8931%" y="373" width="0.1572%" height="15" fill="rgb(210,6,40)" fg:x="241" fg:w="1"/><text x="38.1431%" y="383.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (1 samples, 0.16%)</title><rect x="38.0503%" y="613" width="0.1572%" height="15" fill="rgb(212,48,18)" fg:x="242" fg:w="1"/><text x="38.3003%" y="623.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (1 samples, 0.16%)</title><rect x="38.0503%" y="597" width="0.1572%" height="15" fill="rgb(230,214,11)" fg:x="242" fg:w="1"/><text x="38.3003%" y="607.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.16%)</title><rect x="38.0503%" y="581" width="0.1572%" height="15" fill="rgb(254,105,39)" fg:x="242" fg:w="1"/><text x="38.3003%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (1 samples, 0.16%)</title><rect x="38.0503%" y="565" width="0.1572%" height="15" fill="rgb(245,158,5)" fg:x="242" fg:w="1"/><text x="38.3003%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.16%)</title><rect x="38.0503%" y="549" width="0.1572%" height="15" fill="rgb(249,208,11)" fg:x="242" fg:w="1"/><text x="38.3003%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.16%)</title><rect x="38.0503%" y="533" width="0.1572%" height="15" fill="rgb(210,39,28)" fg:x="242" fg:w="1"/><text x="38.3003%" y="543.50"></text></g><g><title>core::ptr::write (1 samples, 0.16%)</title><rect x="38.0503%" y="517" width="0.1572%" height="15" fill="rgb(211,56,53)" fg:x="242" fg:w="1"/><text x="38.3003%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.16%)</title><rect x="38.2075%" y="581" width="0.1572%" height="15" fill="rgb(226,201,30)" fg:x="243" fg:w="1"/><text x="38.4575%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="38.2075%" y="565" width="0.1572%" height="15" fill="rgb(239,101,34)" fg:x="243" fg:w="1"/><text x="38.4575%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.16%)</title><rect x="38.2075%" y="549" width="0.1572%" height="15" fill="rgb(226,209,5)" fg:x="243" fg:w="1"/><text x="38.4575%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.16%)</title><rect x="38.2075%" y="533" width="0.1572%" height="15" fill="rgb(250,105,47)" fg:x="243" fg:w="1"/><text x="38.4575%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1 samples, 0.16%)</title><rect x="38.2075%" y="517" width="0.1572%" height="15" fill="rgb(230,72,3)" fg:x="243" fg:w="1"/><text x="38.4575%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="38.2075%" y="501" width="0.1572%" height="15" fill="rgb(232,218,39)" fg:x="243" fg:w="1"/><text x="38.4575%" y="511.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.16%)</title><rect x="38.2075%" y="485" width="0.1572%" height="15" fill="rgb(248,166,6)" fg:x="243" fg:w="1"/><text x="38.4575%" y="495.50"></text></g><g><title>exc_page_fault (1 samples, 0.16%)</title><rect x="38.2075%" y="469" width="0.1572%" height="15" fill="rgb(247,89,20)" fg:x="243" fg:w="1"/><text x="38.4575%" y="479.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.16%)</title><rect x="38.2075%" y="453" width="0.1572%" height="15" fill="rgb(248,130,54)" fg:x="243" fg:w="1"/><text x="38.4575%" y="463.50"></text></g><g><title>handle_mm_fault (1 samples, 0.16%)</title><rect x="38.2075%" y="437" width="0.1572%" height="15" fill="rgb(234,196,4)" fg:x="243" fg:w="1"/><text x="38.4575%" y="447.50"></text></g><g><title>&lt;u128 as ahash::convert::Convert&lt;[u64: 2]&gt;&gt;::convert (4 samples, 0.63%)</title><rect x="38.6792%" y="501" width="0.6289%" height="15" fill="rgb(250,143,31)" fg:x="246" fg:w="4"/><text x="38.9292%" y="511.50"></text></g><g><title>hashbrown::map::make_insert_hash (10 samples, 1.57%)</title><rect x="38.3648%" y="581" width="1.5723%" height="15" fill="rgb(211,110,34)" fg:x="244" fg:w="10"/><text x="38.6148%" y="591.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::hash_one (10 samples, 1.57%)</title><rect x="38.3648%" y="565" width="1.5723%" height="15" fill="rgb(215,124,48)" fg:x="244" fg:w="10"/><text x="38.6148%" y="575.50"></text></g><g><title>ahash::random_state::RandomState::hash_one (10 samples, 1.57%)</title><rect x="38.3648%" y="549" width="1.5723%" height="15" fill="rgb(216,46,13)" fg:x="244" fg:w="10"/><text x="38.6148%" y="559.50"></text></g><g><title>&lt;T as ahash::specialize::CallHasher&gt;::get_hash (10 samples, 1.57%)</title><rect x="38.3648%" y="533" width="1.5723%" height="15" fill="rgb(205,184,25)" fg:x="244" fg:w="10"/><text x="38.6148%" y="543.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::finish (10 samples, 1.57%)</title><rect x="38.3648%" y="517" width="1.5723%" height="15" fill="rgb(228,1,10)" fg:x="244" fg:w="10"/><text x="38.6148%" y="527.50"></text></g><g><title>ahash::operations::aesenc (4 samples, 0.63%)</title><rect x="39.3082%" y="501" width="0.6289%" height="15" fill="rgb(213,116,27)" fg:x="250" fg:w="4"/><text x="39.5582%" y="511.50"></text></g><g><title>core::core_arch::x86::aes::_mm_aesenc_si128 (4 samples, 0.63%)</title><rect x="39.3082%" y="485" width="0.6289%" height="15" fill="rgb(241,95,50)" fg:x="250" fg:w="4"/><text x="39.5582%" y="495.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (1 samples, 0.16%)</title><rect x="39.9371%" y="565" width="0.1572%" height="15" fill="rgb(238,48,32)" fg:x="254" fg:w="1"/><text x="40.1871%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="43.2390%" y="549" width="0.1572%" height="15" fill="rgb(235,113,49)" fg:x="275" fg:w="1"/><text x="43.4890%" y="559.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (3 samples, 0.47%)</title><rect x="43.3962%" y="549" width="0.4717%" height="15" fill="rgb(205,127,43)" fg:x="276" fg:w="3"/><text x="43.6462%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (3 samples, 0.47%)</title><rect x="43.8679%" y="549" width="0.4717%" height="15" fill="rgb(250,162,2)" fg:x="279" fg:w="3"/><text x="44.1179%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (3 samples, 0.47%)</title><rect x="43.8679%" y="533" width="0.4717%" height="15" fill="rgb(220,13,41)" fg:x="279" fg:w="3"/><text x="44.1179%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (3 samples, 0.47%)</title><rect x="43.8679%" y="517" width="0.4717%" height="15" fill="rgb(249,221,25)" fg:x="279" fg:w="3"/><text x="44.1179%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (3 samples, 0.47%)</title><rect x="43.8679%" y="501" width="0.4717%" height="15" fill="rgb(215,208,19)" fg:x="279" fg:w="3"/><text x="44.1179%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.47%)</title><rect x="43.8679%" y="485" width="0.4717%" height="15" fill="rgb(236,175,2)" fg:x="279" fg:w="3"/><text x="44.1179%" y="495.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.16%)</title><rect x="44.3396%" y="549" width="0.1572%" height="15" fill="rgb(241,52,2)" fg:x="282" fg:w="1"/><text x="44.5896%" y="559.50"></text></g><g><title>demoparser::parsing::parser::Parser::indicies_modify (118 samples, 18.55%)</title><rect x="26.4151%" y="629" width="18.5535%" height="15" fill="rgb(248,140,14)" fg:x="168" fg:w="118"/><text x="26.6651%" y="639.50">demoparser::parsing::parser::..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (43 samples, 6.76%)</title><rect x="38.2075%" y="613" width="6.7610%" height="15" fill="rgb(253,22,42)" fg:x="243" fg:w="43"/><text x="38.4575%" y="623.50">std::coll..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (43 samples, 6.76%)</title><rect x="38.2075%" y="597" width="6.7610%" height="15" fill="rgb(234,61,47)" fg:x="243" fg:w="43"/><text x="38.4575%" y="607.50">hashbrown..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (32 samples, 5.03%)</title><rect x="39.9371%" y="581" width="5.0314%" height="15" fill="rgb(208,226,15)" fg:x="254" fg:w="32"/><text x="40.1871%" y="591.50">hashbr..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (31 samples, 4.87%)</title><rect x="40.0943%" y="565" width="4.8742%" height="15" fill="rgb(217,221,4)" fg:x="255" fg:w="31"/><text x="40.3443%" y="575.50">hashbr..</text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.47%)</title><rect x="44.4969%" y="549" width="0.4717%" height="15" fill="rgb(212,174,34)" fg:x="283" fg:w="3"/><text x="44.7469%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.47%)</title><rect x="44.4969%" y="533" width="0.4717%" height="15" fill="rgb(253,83,4)" fg:x="283" fg:w="3"/><text x="44.7469%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.16%)</title><rect x="44.9686%" y="581" width="0.1572%" height="15" fill="rgb(250,195,49)" fg:x="286" fg:w="1"/><text x="45.2186%" y="591.50"></text></g><g><title>core::ptr::swap (1 samples, 0.16%)</title><rect x="44.9686%" y="565" width="0.1572%" height="15" fill="rgb(241,192,25)" fg:x="286" fg:w="1"/><text x="45.2186%" y="575.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.16%)</title><rect x="44.9686%" y="549" width="0.1572%" height="15" fill="rgb(208,124,10)" fg:x="286" fg:w="1"/><text x="45.2186%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.16%)</title><rect x="45.2830%" y="565" width="0.1572%" height="15" fill="rgb(222,33,0)" fg:x="288" fg:w="1"/><text x="45.5330%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.16%)</title><rect x="45.2830%" y="549" width="0.1572%" height="15" fill="rgb(234,209,28)" fg:x="288" fg:w="1"/><text x="45.5330%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.16%)</title><rect x="45.2830%" y="533" width="0.1572%" height="15" fill="rgb(224,11,23)" fg:x="288" fg:w="1"/><text x="45.5330%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.16%)</title><rect x="45.2830%" y="517" width="0.1572%" height="15" fill="rgb(232,99,1)" fg:x="288" fg:w="1"/><text x="45.5330%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.16%)</title><rect x="45.2830%" y="501" width="0.1572%" height="15" fill="rgb(237,95,45)" fg:x="288" fg:w="1"/><text x="45.5330%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.16%)</title><rect x="45.2830%" y="485" width="0.1572%" height="15" fill="rgb(208,109,11)" fg:x="288" fg:w="1"/><text x="45.5330%" y="495.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.16%)</title><rect x="45.2830%" y="469" width="0.1572%" height="15" fill="rgb(216,190,48)" fg:x="288" fg:w="1"/><text x="45.5330%" y="479.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.16%)</title><rect x="45.2830%" y="453" width="0.1572%" height="15" fill="rgb(251,171,36)" fg:x="288" fg:w="1"/><text x="45.5330%" y="463.50"></text></g><g><title>_mi_memcpy_aligned (1 samples, 0.16%)</title><rect x="45.2830%" y="437" width="0.1572%" height="15" fill="rgb(230,62,22)" fg:x="288" fg:w="1"/><text x="45.5330%" y="447.50"></text></g><g><title>_mi_memcpy (1 samples, 0.16%)</title><rect x="45.2830%" y="421" width="0.1572%" height="15" fill="rgb(225,114,35)" fg:x="288" fg:w="1"/><text x="45.5330%" y="431.50"></text></g><g><title>memcpy (1 samples, 0.16%)</title><rect x="45.2830%" y="405" width="0.1572%" height="15" fill="rgb(215,118,42)" fg:x="288" fg:w="1"/><text x="45.5330%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.16%)</title><rect x="45.2830%" y="389" width="0.1572%" height="15" fill="rgb(243,119,21)" fg:x="288" fg:w="1"/><text x="45.5330%" y="399.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.16%)</title><rect x="45.2830%" y="373" width="0.1572%" height="15" fill="rgb(252,177,53)" fg:x="288" fg:w="1"/><text x="45.5330%" y="383.50"></text></g><g><title>exc_page_fault (1 samples, 0.16%)</title><rect x="45.2830%" y="357" width="0.1572%" height="15" fill="rgb(237,209,29)" fg:x="288" fg:w="1"/><text x="45.5330%" y="367.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.16%)</title><rect x="45.2830%" y="341" width="0.1572%" height="15" fill="rgb(212,65,23)" fg:x="288" fg:w="1"/><text x="45.5330%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.31%)</title><rect x="45.5975%" y="549" width="0.3145%" height="15" fill="rgb(230,222,46)" fg:x="290" fg:w="2"/><text x="45.8475%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.31%)</title><rect x="45.5975%" y="533" width="0.3145%" height="15" fill="rgb(215,135,32)" fg:x="290" fg:w="2"/><text x="45.8475%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.31%)</title><rect x="45.5975%" y="517" width="0.3145%" height="15" fill="rgb(246,101,22)" fg:x="290" fg:w="2"/><text x="45.8475%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.31%)</title><rect x="45.5975%" y="501" width="0.3145%" height="15" fill="rgb(206,107,13)" fg:x="290" fg:w="2"/><text x="45.8475%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.31%)</title><rect x="45.5975%" y="485" width="0.3145%" height="15" fill="rgb(250,100,44)" fg:x="290" fg:w="2"/><text x="45.8475%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.31%)</title><rect x="45.5975%" y="469" width="0.3145%" height="15" fill="rgb(231,147,38)" fg:x="290" fg:w="2"/><text x="45.8475%" y="479.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.31%)</title><rect x="45.5975%" y="453" width="0.3145%" height="15" fill="rgb(229,8,40)" fg:x="290" fg:w="2"/><text x="45.8475%" y="463.50"></text></g><g><title>_mi_heap_realloc_zero (2 samples, 0.31%)</title><rect x="45.5975%" y="437" width="0.3145%" height="15" fill="rgb(221,135,30)" fg:x="290" fg:w="2"/><text x="45.8475%" y="447.50"></text></g><g><title>_mi_memcpy_aligned (2 samples, 0.31%)</title><rect x="45.5975%" y="421" width="0.3145%" height="15" fill="rgb(249,193,18)" fg:x="290" fg:w="2"/><text x="45.8475%" y="431.50"></text></g><g><title>_mi_memcpy (2 samples, 0.31%)</title><rect x="45.5975%" y="405" width="0.3145%" height="15" fill="rgb(209,133,39)" fg:x="290" fg:w="2"/><text x="45.8475%" y="415.50"></text></g><g><title>memcpy (2 samples, 0.31%)</title><rect x="45.5975%" y="389" width="0.3145%" height="15" fill="rgb(232,100,14)" fg:x="290" fg:w="2"/><text x="45.8475%" y="399.50"></text></g><g><title>[libc.so.6] (2 samples, 0.31%)</title><rect x="45.5975%" y="373" width="0.3145%" height="15" fill="rgb(224,185,1)" fg:x="290" fg:w="2"/><text x="45.8475%" y="383.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.16%)</title><rect x="45.7547%" y="357" width="0.1572%" height="15" fill="rgb(223,139,8)" fg:x="291" fg:w="1"/><text x="46.0047%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.16%)</title><rect x="45.9119%" y="533" width="0.1572%" height="15" fill="rgb(232,213,38)" fg:x="292" fg:w="1"/><text x="46.1619%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.16%)</title><rect x="45.9119%" y="517" width="0.1572%" height="15" fill="rgb(207,94,22)" fg:x="292" fg:w="1"/><text x="46.1619%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.16%)</title><rect x="45.9119%" y="501" width="0.1572%" height="15" fill="rgb(219,183,54)" fg:x="292" fg:w="1"/><text x="46.1619%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.16%)</title><rect x="45.9119%" y="485" width="0.1572%" height="15" fill="rgb(216,185,54)" fg:x="292" fg:w="1"/><text x="46.1619%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.16%)</title><rect x="45.9119%" y="469" width="0.1572%" height="15" fill="rgb(254,217,39)" fg:x="292" fg:w="1"/><text x="46.1619%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="45.9119%" y="453" width="0.1572%" height="15" fill="rgb(240,178,23)" fg:x="292" fg:w="1"/><text x="46.1619%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="45.9119%" y="437" width="0.1572%" height="15" fill="rgb(218,11,47)" fg:x="292" fg:w="1"/><text x="46.1619%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.16%)</title><rect x="45.9119%" y="421" width="0.1572%" height="15" fill="rgb(218,51,51)" fg:x="292" fg:w="1"/><text x="46.1619%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.16%)</title><rect x="45.9119%" y="405" width="0.1572%" height="15" fill="rgb(238,126,27)" fg:x="292" fg:w="1"/><text x="46.1619%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.16%)</title><rect x="45.9119%" y="389" width="0.1572%" height="15" fill="rgb(249,202,22)" fg:x="292" fg:w="1"/><text x="46.1619%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.16%)</title><rect x="45.9119%" y="373" width="0.1572%" height="15" fill="rgb(254,195,49)" fg:x="292" fg:w="1"/><text x="46.1619%" y="383.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.16%)</title><rect x="45.9119%" y="357" width="0.1572%" height="15" fill="rgb(208,123,14)" fg:x="292" fg:w="1"/><text x="46.1619%" y="367.50"></text></g><g><title>mi_find_page (1 samples, 0.16%)</title><rect x="45.9119%" y="341" width="0.1572%" height="15" fill="rgb(224,200,8)" fg:x="292" fg:w="1"/><text x="46.1619%" y="351.50"></text></g><g><title>mi_find_free_page (1 samples, 0.16%)</title><rect x="45.9119%" y="325" width="0.1572%" height="15" fill="rgb(217,61,36)" fg:x="292" fg:w="1"/><text x="46.1619%" y="335.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.16%)</title><rect x="45.9119%" y="309" width="0.1572%" height="15" fill="rgb(206,35,45)" fg:x="292" fg:w="1"/><text x="46.1619%" y="319.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.16%)</title><rect x="45.9119%" y="293" width="0.1572%" height="15" fill="rgb(217,65,33)" fg:x="292" fg:w="1"/><text x="46.1619%" y="303.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.16%)</title><rect x="45.9119%" y="277" width="0.1572%" height="15" fill="rgb(222,158,48)" fg:x="292" fg:w="1"/><text x="46.1619%" y="287.50"></text></g><g><title>mi_page_free_list_extend (1 samples, 0.16%)</title><rect x="45.9119%" y="261" width="0.1572%" height="15" fill="rgb(254,2,54)" fg:x="292" fg:w="1"/><text x="46.1619%" y="271.50"></text></g><g><title>mi_block_set_next (1 samples, 0.16%)</title><rect x="45.9119%" y="245" width="0.1572%" height="15" fill="rgb(250,143,38)" fg:x="292" fg:w="1"/><text x="46.1619%" y="255.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.16%)</title><rect x="45.9119%" y="229" width="0.1572%" height="15" fill="rgb(248,25,0)" fg:x="292" fg:w="1"/><text x="46.1619%" y="239.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.16%)</title><rect x="45.9119%" y="213" width="0.1572%" height="15" fill="rgb(206,152,27)" fg:x="292" fg:w="1"/><text x="46.1619%" y="223.50"></text></g><g><title>exc_page_fault (1 samples, 0.16%)</title><rect x="45.9119%" y="197" width="0.1572%" height="15" fill="rgb(240,77,30)" fg:x="292" fg:w="1"/><text x="46.1619%" y="207.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.16%)</title><rect x="45.9119%" y="181" width="0.1572%" height="15" fill="rgb(231,5,3)" fg:x="292" fg:w="1"/><text x="46.1619%" y="191.50"></text></g><g><title>handle_mm_fault (1 samples, 0.16%)</title><rect x="45.9119%" y="165" width="0.1572%" height="15" fill="rgb(207,226,32)" fg:x="292" fg:w="1"/><text x="46.1619%" y="175.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.16%)</title><rect x="45.9119%" y="149" width="0.1572%" height="15" fill="rgb(222,207,47)" fg:x="292" fg:w="1"/><text x="46.1619%" y="159.50"></text></g><g><title>handle_pte_fault (1 samples, 0.16%)</title><rect x="45.9119%" y="133" width="0.1572%" height="15" fill="rgb(229,115,45)" fg:x="292" fg:w="1"/><text x="46.1619%" y="143.50"></text></g><g><title>do_anonymous_page (1 samples, 0.16%)</title><rect x="45.9119%" y="117" width="0.1572%" height="15" fill="rgb(224,191,6)" fg:x="292" fg:w="1"/><text x="46.1619%" y="127.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.16%)</title><rect x="45.9119%" y="101" width="0.1572%" height="15" fill="rgb(230,227,24)" fg:x="292" fg:w="1"/><text x="46.1619%" y="111.50"></text></g><g><title>__folio_alloc (1 samples, 0.16%)</title><rect x="45.9119%" y="85" width="0.1572%" height="15" fill="rgb(228,80,19)" fg:x="292" fg:w="1"/><text x="46.1619%" y="95.50"></text></g><g><title>__alloc_pages (1 samples, 0.16%)</title><rect x="45.9119%" y="69" width="0.1572%" height="15" fill="rgb(247,229,0)" fg:x="292" fg:w="1"/><text x="46.1619%" y="79.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.16%)</title><rect x="45.9119%" y="53" width="0.1572%" height="15" fill="rgb(237,194,15)" fg:x="292" fg:w="1"/><text x="46.1619%" y="63.50"></text></g><g><title>clear_page_erms (1 samples, 0.16%)</title><rect x="45.9119%" y="37" width="0.1572%" height="15" fill="rgb(219,203,20)" fg:x="292" fg:w="1"/><text x="46.1619%" y="47.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.16%)</title><rect x="46.0692%" y="533" width="0.1572%" height="15" fill="rgb(234,128,8)" fg:x="293" fg:w="1"/><text x="46.3192%" y="543.50"></text></g><g><title>core::ptr::write (1 samples, 0.16%)</title><rect x="46.0692%" y="517" width="0.1572%" height="15" fill="rgb(248,202,8)" fg:x="293" fg:w="1"/><text x="46.3192%" y="527.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.16%)</title><rect x="46.0692%" y="501" width="0.1572%" height="15" fill="rgb(206,104,37)" fg:x="293" fg:w="1"/><text x="46.3192%" y="511.50"></text></g><g><title>exc_page_fault (1 samples, 0.16%)</title><rect x="46.0692%" y="485" width="0.1572%" height="15" fill="rgb(223,8,27)" fg:x="293" fg:w="1"/><text x="46.3192%" y="495.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.16%)</title><rect x="46.0692%" y="469" width="0.1572%" height="15" fill="rgb(216,217,28)" fg:x="293" fg:w="1"/><text x="46.3192%" y="479.50"></text></g><g><title>handle_mm_fault (1 samples, 0.16%)</title><rect x="46.0692%" y="453" width="0.1572%" height="15" fill="rgb(249,199,1)" fg:x="293" fg:w="1"/><text x="46.3192%" y="463.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.16%)</title><rect x="46.0692%" y="437" width="0.1572%" height="15" fill="rgb(240,85,17)" fg:x="293" fg:w="1"/><text x="46.3192%" y="447.50"></text></g><g><title>handle_pte_fault (1 samples, 0.16%)</title><rect x="46.0692%" y="421" width="0.1572%" height="15" fill="rgb(206,108,45)" fg:x="293" fg:w="1"/><text x="46.3192%" y="431.50"></text></g><g><title>do_anonymous_page (1 samples, 0.16%)</title><rect x="46.0692%" y="405" width="0.1572%" height="15" fill="rgb(245,210,41)" fg:x="293" fg:w="1"/><text x="46.3192%" y="415.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.16%)</title><rect x="46.0692%" y="389" width="0.1572%" height="15" fill="rgb(206,13,37)" fg:x="293" fg:w="1"/><text x="46.3192%" y="399.50"></text></g><g><title>__folio_alloc (1 samples, 0.16%)</title><rect x="46.0692%" y="373" width="0.1572%" height="15" fill="rgb(250,61,18)" fg:x="293" fg:w="1"/><text x="46.3192%" y="383.50"></text></g><g><title>__alloc_pages (1 samples, 0.16%)</title><rect x="46.0692%" y="357" width="0.1572%" height="15" fill="rgb(235,172,48)" fg:x="293" fg:w="1"/><text x="46.3192%" y="367.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.16%)</title><rect x="46.0692%" y="341" width="0.1572%" height="15" fill="rgb(249,201,17)" fg:x="293" fg:w="1"/><text x="46.3192%" y="351.50"></text></g><g><title>clear_page_erms (1 samples, 0.16%)</title><rect x="46.0692%" y="325" width="0.1572%" height="15" fill="rgb(219,208,6)" fg:x="293" fg:w="1"/><text x="46.3192%" y="335.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_datatable (9 samples, 1.42%)</title><rect x="44.9686%" y="613" width="1.4151%" height="15" fill="rgb(248,31,23)" fg:x="286" fg:w="9"/><text x="45.2186%" y="623.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::flatten_dt (9 samples, 1.42%)</title><rect x="44.9686%" y="597" width="1.4151%" height="15" fill="rgb(245,15,42)" fg:x="286" fg:w="9"/><text x="45.2186%" y="607.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (8 samples, 1.26%)</title><rect x="45.1258%" y="581" width="1.2579%" height="15" fill="rgb(222,217,39)" fg:x="287" fg:w="8"/><text x="45.3758%" y="591.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (6 samples, 0.94%)</title><rect x="45.4403%" y="565" width="0.9434%" height="15" fill="rgb(210,219,27)" fg:x="289" fg:w="6"/><text x="45.6903%" y="575.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (3 samples, 0.47%)</title><rect x="45.9119%" y="549" width="0.4717%" height="15" fill="rgb(252,166,36)" fg:x="292" fg:w="3"/><text x="46.1619%" y="559.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.16%)</title><rect x="46.2264%" y="533" width="0.1572%" height="15" fill="rgb(245,132,34)" fg:x="294" fg:w="1"/><text x="46.4764%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.16%)</title><rect x="46.2264%" y="517" width="0.1572%" height="15" fill="rgb(236,54,3)" fg:x="294" fg:w="1"/><text x="46.4764%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.16%)</title><rect x="46.2264%" y="501" width="0.1572%" height="15" fill="rgb(241,173,43)" fg:x="294" fg:w="1"/><text x="46.4764%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.16%)</title><rect x="46.2264%" y="485" width="0.1572%" height="15" fill="rgb(215,190,9)" fg:x="294" fg:w="1"/><text x="46.4764%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.16%)</title><rect x="46.2264%" y="469" width="0.1572%" height="15" fill="rgb(242,101,16)" fg:x="294" fg:w="1"/><text x="46.4764%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.16%)</title><rect x="46.2264%" y="453" width="0.1572%" height="15" fill="rgb(223,190,21)" fg:x="294" fg:w="1"/><text x="46.4764%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.16%)</title><rect x="46.2264%" y="437" width="0.1572%" height="15" fill="rgb(215,228,25)" fg:x="294" fg:w="1"/><text x="46.4764%" y="447.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.16%)</title><rect x="46.2264%" y="421" width="0.1572%" height="15" fill="rgb(225,36,22)" fg:x="294" fg:w="1"/><text x="46.4764%" y="431.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.16%)</title><rect x="46.2264%" y="405" width="0.1572%" height="15" fill="rgb(251,106,46)" fg:x="294" fg:w="1"/><text x="46.4764%" y="415.50"></text></g><g><title>_mi_memcpy_aligned (1 samples, 0.16%)</title><rect x="46.2264%" y="389" width="0.1572%" height="15" fill="rgb(208,90,1)" fg:x="294" fg:w="1"/><text x="46.4764%" y="399.50"></text></g><g><title>_mi_memcpy (1 samples, 0.16%)</title><rect x="46.2264%" y="373" width="0.1572%" height="15" fill="rgb(243,10,4)" fg:x="294" fg:w="1"/><text x="46.4764%" y="383.50"></text></g><g><title>memcpy (1 samples, 0.16%)</title><rect x="46.2264%" y="357" width="0.1572%" height="15" fill="rgb(212,137,27)" fg:x="294" fg:w="1"/><text x="46.4764%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.16%)</title><rect x="46.2264%" y="341" width="0.1572%" height="15" fill="rgb(231,220,49)" fg:x="294" fg:w="1"/><text x="46.4764%" y="351.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bytes::ByteReader::read_i32 (2 samples, 0.31%)</title><rect x="46.3836%" y="597" width="0.3145%" height="15" fill="rgb(237,96,20)" fg:x="295" fg:w="2"/><text x="46.6336%" y="607.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.16%)</title><rect x="46.5409%" y="581" width="0.1572%" height="15" fill="rgb(239,229,30)" fg:x="296" fg:w="1"/><text x="46.7909%" y="591.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (1 samples, 0.16%)</title><rect x="46.5409%" y="565" width="0.1572%" height="15" fill="rgb(219,65,33)" fg:x="296" fg:w="1"/><text x="46.7909%" y="575.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.16%)</title><rect x="46.5409%" y="549" width="0.1572%" height="15" fill="rgb(243,134,7)" fg:x="296" fg:w="1"/><text x="46.7909%" y="559.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.16%)</title><rect x="46.5409%" y="533" width="0.1572%" height="15" fill="rgb(216,177,54)" fg:x="296" fg:w="1"/><text x="46.7909%" y="543.50"></text></g><g><title>exc_page_fault (1 samples, 0.16%)</title><rect x="46.5409%" y="517" width="0.1572%" height="15" fill="rgb(211,160,20)" fg:x="296" fg:w="1"/><text x="46.7909%" y="527.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.16%)</title><rect x="46.5409%" y="501" width="0.1572%" height="15" fill="rgb(239,85,39)" fg:x="296" fg:w="1"/><text x="46.7909%" y="511.50"></text></g><g><title>handle_mm_fault (1 samples, 0.16%)</title><rect x="46.5409%" y="485" width="0.1572%" height="15" fill="rgb(232,125,22)" fg:x="296" fg:w="1"/><text x="46.7909%" y="495.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.16%)</title><rect x="46.5409%" y="469" width="0.1572%" height="15" fill="rgb(244,57,34)" fg:x="296" fg:w="1"/><text x="46.7909%" y="479.50"></text></g><g><title>handle_pte_fault (1 samples, 0.16%)</title><rect x="46.5409%" y="453" width="0.1572%" height="15" fill="rgb(214,203,32)" fg:x="296" fg:w="1"/><text x="46.7909%" y="463.50"></text></g><g><title>do_fault (1 samples, 0.16%)</title><rect x="46.5409%" y="437" width="0.1572%" height="15" fill="rgb(207,58,43)" fg:x="296" fg:w="1"/><text x="46.7909%" y="447.50"></text></g><g><title>do_read_fault (1 samples, 0.16%)</title><rect x="46.5409%" y="421" width="0.1572%" height="15" fill="rgb(215,193,15)" fg:x="296" fg:w="1"/><text x="46.7909%" y="431.50"></text></g><g><title>filemap_map_pages (1 samples, 0.16%)</title><rect x="46.5409%" y="405" width="0.1572%" height="15" fill="rgb(232,15,44)" fg:x="296" fg:w="1"/><text x="46.7909%" y="415.50"></text></g><g><title>do_set_pte (1 samples, 0.16%)</title><rect x="46.5409%" y="389" width="0.1572%" height="15" fill="rgb(212,3,48)" fg:x="296" fg:w="1"/><text x="46.7909%" y="399.50"></text></g><g><title>page_add_file_rmap (1 samples, 0.16%)</title><rect x="46.5409%" y="373" width="0.1572%" height="15" fill="rgb(218,128,7)" fg:x="296" fg:w="1"/><text x="46.7909%" y="383.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.16%)</title><rect x="46.5409%" y="357" width="0.1572%" height="15" fill="rgb(226,216,39)" fg:x="296" fg:w="1"/><text x="46.7909%" y="367.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bytes::ByteReader::read_varint (3 samples, 0.47%)</title><rect x="46.6981%" y="597" width="0.4717%" height="15" fill="rgb(243,47,51)" fg:x="297" fg:w="3"/><text x="46.9481%" y="607.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.16%)</title><rect x="47.0126%" y="581" width="0.1572%" height="15" fill="rgb(241,183,40)" fg:x="299" fg:w="1"/><text x="47.2626%" y="591.50"></text></g><g><title>exc_page_fault (1 samples, 0.16%)</title><rect x="47.0126%" y="565" width="0.1572%" height="15" fill="rgb(231,217,32)" fg:x="299" fg:w="1"/><text x="47.2626%" y="575.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.16%)</title><rect x="47.0126%" y="549" width="0.1572%" height="15" fill="rgb(229,61,38)" fg:x="299" fg:w="1"/><text x="47.2626%" y="559.50"></text></g><g><title>handle_mm_fault (1 samples, 0.16%)</title><rect x="47.0126%" y="533" width="0.1572%" height="15" fill="rgb(225,210,5)" fg:x="299" fg:w="1"/><text x="47.2626%" y="543.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.16%)</title><rect x="47.0126%" y="517" width="0.1572%" height="15" fill="rgb(231,79,45)" fg:x="299" fg:w="1"/><text x="47.2626%" y="527.50"></text></g><g><title>handle_pte_fault (1 samples, 0.16%)</title><rect x="47.0126%" y="501" width="0.1572%" height="15" fill="rgb(224,100,7)" fg:x="299" fg:w="1"/><text x="47.2626%" y="511.50"></text></g><g><title>do_fault (1 samples, 0.16%)</title><rect x="47.0126%" y="485" width="0.1572%" height="15" fill="rgb(241,198,18)" fg:x="299" fg:w="1"/><text x="47.2626%" y="495.50"></text></g><g><title>do_read_fault (1 samples, 0.16%)</title><rect x="47.0126%" y="469" width="0.1572%" height="15" fill="rgb(252,97,53)" fg:x="299" fg:w="1"/><text x="47.2626%" y="479.50"></text></g><g><title>filemap_map_pages (1 samples, 0.16%)</title><rect x="47.0126%" y="453" width="0.1572%" height="15" fill="rgb(220,88,7)" fg:x="299" fg:w="1"/><text x="47.2626%" y="463.50"></text></g><g><title>do_set_pte (1 samples, 0.16%)</title><rect x="47.0126%" y="437" width="0.1572%" height="15" fill="rgb(213,176,14)" fg:x="299" fg:w="1"/><text x="47.2626%" y="447.50"></text></g><g><title>page_add_file_rmap (1 samples, 0.16%)</title><rect x="47.0126%" y="421" width="0.1572%" height="15" fill="rgb(246,73,7)" fg:x="299" fg:w="1"/><text x="47.2626%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.16%)</title><rect x="47.1698%" y="565" width="0.1572%" height="15" fill="rgb(245,64,36)" fg:x="300" fg:w="1"/><text x="47.4198%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3 samples, 0.47%)</title><rect x="49.5283%" y="549" width="0.4717%" height="15" fill="rgb(245,80,10)" fg:x="315" fg:w="3"/><text x="49.7783%" y="559.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3 samples, 0.47%)</title><rect x="49.5283%" y="533" width="0.4717%" height="15" fill="rgb(232,107,50)" fg:x="315" fg:w="3"/><text x="49.7783%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.47%)</title><rect x="49.5283%" y="517" width="0.4717%" height="15" fill="rgb(253,3,0)" fg:x="315" fg:w="3"/><text x="49.7783%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.16%)</title><rect x="50.0000%" y="549" width="0.1572%" height="15" fill="rgb(212,99,53)" fg:x="318" fg:w="1"/><text x="50.2500%" y="559.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.16%)</title><rect x="50.0000%" y="533" width="0.1572%" height="15" fill="rgb(249,111,54)" fg:x="318" fg:w="1"/><text x="50.2500%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.16%)</title><rect x="50.0000%" y="517" width="0.1572%" height="15" fill="rgb(249,55,30)" fg:x="318" fg:w="1"/><text x="50.2500%" y="527.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.16%)</title><rect x="50.1572%" y="549" width="0.1572%" height="15" fill="rgb(237,47,42)" fg:x="319" fg:w="1"/><text x="50.4072%" y="559.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.16%)</title><rect x="50.1572%" y="533" width="0.1572%" height="15" fill="rgb(211,20,18)" fg:x="319" fg:w="1"/><text x="50.4072%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.16%)</title><rect x="50.3145%" y="549" width="0.1572%" height="15" fill="rgb(231,203,46)" fg:x="320" fg:w="1"/><text x="50.5645%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;demoparser::parsing::variants::PropData&gt;&gt; (1 samples, 0.16%)</title><rect x="50.4717%" y="549" width="0.1572%" height="15" fill="rgb(237,142,3)" fg:x="321" fg:w="1"/><text x="50.7217%" y="559.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (1 samples, 0.16%)</title><rect x="50.4717%" y="533" width="0.1572%" height="15" fill="rgb(241,107,1)" fg:x="321" fg:w="1"/><text x="50.7217%" y="543.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_f32 (2 samples, 0.31%)</title><rect x="54.4025%" y="501" width="0.3145%" height="15" fill="rgb(229,83,13)" fg:x="346" fg:w="2"/><text x="54.6525%" y="511.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_special_float (6 samples, 0.94%)</title><rect x="53.9308%" y="517" width="0.9434%" height="15" fill="rgb(241,91,40)" fg:x="343" fg:w="6"/><text x="54.1808%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.16%)</title><rect x="54.7170%" y="501" width="0.1572%" height="15" fill="rgb(225,3,45)" fg:x="348" fg:w="1"/><text x="54.9670%" y="511.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_float (11 samples, 1.73%)</title><rect x="53.6164%" y="533" width="1.7296%" height="15" fill="rgb(244,223,14)" fg:x="341" fg:w="11"/><text x="53.8664%" y="543.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (3 samples, 0.47%)</title><rect x="54.8742%" y="517" width="0.4717%" height="15" fill="rgb(224,124,37)" fg:x="349" fg:w="3"/><text x="55.1242%" y="527.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.16%)</title><rect x="55.1887%" y="501" width="0.1572%" height="15" fill="rgb(251,171,30)" fg:x="351" fg:w="1"/><text x="55.4387%" y="511.50"></text></g><g><title>bitter::LittleEndianReader::has_data_for_unaligned_loads (1 samples, 0.16%)</title><rect x="55.1887%" y="485" width="0.1572%" height="15" fill="rgb(236,46,54)" fg:x="351" fg:w="1"/><text x="55.4387%" y="495.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_int (2 samples, 0.31%)</title><rect x="55.3459%" y="533" width="0.3145%" height="15" fill="rgb(245,213,5)" fg:x="352" fg:w="2"/><text x="55.5959%" y="543.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (2 samples, 0.31%)</title><rect x="55.3459%" y="517" width="0.3145%" height="15" fill="rgb(230,144,27)" fg:x="352" fg:w="2"/><text x="55.5959%" y="527.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (2 samples, 0.31%)</title><rect x="55.3459%" y="501" width="0.3145%" height="15" fill="rgb(220,86,6)" fg:x="352" fg:w="2"/><text x="55.5959%" y="511.50"></text></g><g><title>bitter::LittleEndianReader::read_bits_eof (1 samples, 0.16%)</title><rect x="55.5031%" y="485" width="0.1572%" height="15" fill="rgb(240,20,13)" fg:x="353" fg:w="1"/><text x="55.7531%" y="495.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::peek (1 samples, 0.16%)</title><rect x="55.5031%" y="469" width="0.1572%" height="15" fill="rgb(217,89,34)" fg:x="353" fg:w="1"/><text x="55.7531%" y="479.50"></text></g><g><title>bitter::LittleEndianReader::peek_ (1 samples, 0.16%)</title><rect x="55.5031%" y="453" width="0.1572%" height="15" fill="rgb(229,13,5)" fg:x="353" fg:w="1"/><text x="55.7531%" y="463.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;str&gt; as alloc::string::ToString&gt;::to_string (1 samples, 0.16%)</title><rect x="55.6604%" y="501" width="0.1572%" height="15" fill="rgb(244,67,35)" fg:x="354" fg:w="1"/><text x="55.9104%" y="511.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.16%)</title><rect x="55.6604%" y="485" width="0.1572%" height="15" fill="rgb(221,40,2)" fg:x="354" fg:w="1"/><text x="55.9104%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.16%)</title><rect x="55.6604%" y="469" width="0.1572%" height="15" fill="rgb(237,157,21)" fg:x="354" fg:w="1"/><text x="55.9104%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.16%)</title><rect x="55.6604%" y="453" width="0.1572%" height="15" fill="rgb(222,94,11)" fg:x="354" fg:w="1"/><text x="55.9104%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.16%)</title><rect x="55.6604%" y="437" width="0.1572%" height="15" fill="rgb(249,113,6)" fg:x="354" fg:w="1"/><text x="55.9104%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.16%)</title><rect x="55.6604%" y="421" width="0.1572%" height="15" fill="rgb(238,137,36)" fg:x="354" fg:w="1"/><text x="55.9104%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.16%)</title><rect x="55.6604%" y="405" width="0.1572%" height="15" fill="rgb(210,102,26)" fg:x="354" fg:w="1"/><text x="55.9104%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="55.6604%" y="389" width="0.1572%" height="15" fill="rgb(218,30,30)" fg:x="354" fg:w="1"/><text x="55.9104%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="55.6604%" y="373" width="0.1572%" height="15" fill="rgb(214,67,26)" fg:x="354" fg:w="1"/><text x="55.9104%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.16%)</title><rect x="55.6604%" y="357" width="0.1572%" height="15" fill="rgb(251,9,53)" fg:x="354" fg:w="1"/><text x="55.9104%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.16%)</title><rect x="55.6604%" y="341" width="0.1572%" height="15" fill="rgb(228,204,25)" fg:x="354" fg:w="1"/><text x="55.9104%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.16%)</title><rect x="55.6604%" y="325" width="0.1572%" height="15" fill="rgb(207,153,8)" fg:x="354" fg:w="1"/><text x="55.9104%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.16%)</title><rect x="55.6604%" y="309" width="0.1572%" height="15" fill="rgb(242,9,16)" fg:x="354" fg:w="1"/><text x="55.9104%" y="319.50"></text></g><g><title>mi_malloc (1 samples, 0.16%)</title><rect x="55.6604%" y="293" width="0.1572%" height="15" fill="rgb(217,211,10)" fg:x="354" fg:w="1"/><text x="55.9104%" y="303.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.16%)</title><rect x="55.6604%" y="277" width="0.1572%" height="15" fill="rgb(219,228,52)" fg:x="354" fg:w="1"/><text x="55.9104%" y="287.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.16%)</title><rect x="55.6604%" y="261" width="0.1572%" height="15" fill="rgb(231,92,29)" fg:x="354" fg:w="1"/><text x="55.9104%" y="271.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.16%)</title><rect x="55.6604%" y="245" width="0.1572%" height="15" fill="rgb(232,8,23)" fg:x="354" fg:w="1"/><text x="55.9104%" y="255.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.16%)</title><rect x="55.8176%" y="501" width="0.1572%" height="15" fill="rgb(216,211,34)" fg:x="355" fg:w="1"/><text x="56.0676%" y="511.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="55.8176%" y="485" width="0.1572%" height="15" fill="rgb(236,151,0)" fg:x="355" fg:w="1"/><text x="56.0676%" y="495.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next::safe_get (1 samples, 0.16%)</title><rect x="55.8176%" y="469" width="0.1572%" height="15" fill="rgb(209,168,3)" fg:x="355" fg:w="1"/><text x="56.0676%" y="479.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_string (3 samples, 0.47%)</title><rect x="55.6604%" y="533" width="0.4717%" height="15" fill="rgb(208,129,28)" fg:x="354" fg:w="3"/><text x="55.9104%" y="543.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_string (3 samples, 0.47%)</title><rect x="55.6604%" y="517" width="0.4717%" height="15" fill="rgb(229,78,22)" fg:x="354" fg:w="3"/><text x="55.9104%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.16%)</title><rect x="55.9748%" y="501" width="0.1572%" height="15" fill="rgb(228,187,13)" fg:x="356" fg:w="1"/><text x="56.2248%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.16%)</title><rect x="55.9748%" y="485" width="0.1572%" height="15" fill="rgb(240,119,24)" fg:x="356" fg:w="1"/><text x="56.2248%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.16%)</title><rect x="55.9748%" y="469" width="0.1572%" height="15" fill="rgb(209,194,42)" fg:x="356" fg:w="1"/><text x="56.2248%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.16%)</title><rect x="55.9748%" y="453" width="0.1572%" height="15" fill="rgb(247,200,46)" fg:x="356" fg:w="1"/><text x="56.2248%" y="463.50"></text></g><g><title>__rust_alloc (1 samples, 0.16%)</title><rect x="55.9748%" y="437" width="0.1572%" height="15" fill="rgb(218,76,16)" fg:x="356" fg:w="1"/><text x="56.2248%" y="447.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_bit_cell_coord (1 samples, 0.16%)</title><rect x="56.4465%" y="485" width="0.1572%" height="15" fill="rgb(225,21,48)" fg:x="359" fg:w="1"/><text x="56.6965%" y="495.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_sint_bits (1 samples, 0.16%)</title><rect x="56.4465%" y="469" width="0.1572%" height="15" fill="rgb(239,223,50)" fg:x="359" fg:w="1"/><text x="56.6965%" y="479.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (1 samples, 0.16%)</title><rect x="56.4465%" y="453" width="0.1572%" height="15" fill="rgb(244,45,21)" fg:x="359" fg:w="1"/><text x="56.6965%" y="463.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (1 samples, 0.16%)</title><rect x="56.4465%" y="437" width="0.1572%" height="15" fill="rgb(232,33,43)" fg:x="359" fg:w="1"/><text x="56.6965%" y="447.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_special_float (3 samples, 0.47%)</title><rect x="56.2893%" y="501" width="0.4717%" height="15" fill="rgb(209,8,3)" fg:x="358" fg:w="3"/><text x="56.5393%" y="511.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_bit_coord (1 samples, 0.16%)</title><rect x="56.6038%" y="485" width="0.1572%" height="15" fill="rgb(214,25,53)" fg:x="360" fg:w="1"/><text x="56.8538%" y="495.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (1 samples, 0.16%)</title><rect x="56.6038%" y="469" width="0.1572%" height="15" fill="rgb(254,186,54)" fg:x="360" fg:w="1"/><text x="56.8538%" y="479.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.16%)</title><rect x="56.6038%" y="453" width="0.1572%" height="15" fill="rgb(208,174,49)" fg:x="360" fg:w="1"/><text x="56.8538%" y="463.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_vec (5 samples, 0.79%)</title><rect x="56.1321%" y="533" width="0.7862%" height="15" fill="rgb(233,191,51)" fg:x="357" fg:w="5"/><text x="56.3821%" y="543.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_float (5 samples, 0.79%)</title><rect x="56.1321%" y="517" width="0.7862%" height="15" fill="rgb(222,134,10)" fg:x="357" fg:w="5"/><text x="56.3821%" y="527.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (1 samples, 0.16%)</title><rect x="56.7610%" y="501" width="0.1572%" height="15" fill="rgb(230,226,20)" fg:x="361" fg:w="1"/><text x="57.0110%" y="511.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode (42 samples, 6.60%)</title><rect x="50.6289%" y="549" width="6.6038%" height="15" fill="rgb(251,111,25)" fg:x="322" fg:w="42"/><text x="50.8789%" y="559.50">demoparse..</text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_vec_xy (2 samples, 0.31%)</title><rect x="56.9182%" y="533" width="0.3145%" height="15" fill="rgb(224,40,46)" fg:x="362" fg:w="2"/><text x="57.1682%" y="543.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_float (2 samples, 0.31%)</title><rect x="56.9182%" y="517" width="0.3145%" height="15" fill="rgb(236,108,47)" fg:x="362" fg:w="2"/><text x="57.1682%" y="527.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_special_float (2 samples, 0.31%)</title><rect x="56.9182%" y="501" width="0.3145%" height="15" fill="rgb(234,93,0)" fg:x="362" fg:w="2"/><text x="57.1682%" y="511.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_boolie (3 samples, 0.47%)</title><rect x="57.2327%" y="549" width="0.4717%" height="15" fill="rgb(224,213,32)" fg:x="364" fg:w="3"/><text x="57.4827%" y="559.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bit (3 samples, 0.47%)</title><rect x="57.2327%" y="533" width="0.4717%" height="15" fill="rgb(251,11,48)" fg:x="364" fg:w="3"/><text x="57.4827%" y="543.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (3 samples, 0.47%)</title><rect x="57.2327%" y="517" width="0.4717%" height="15" fill="rgb(236,173,5)" fg:x="364" fg:w="3"/><text x="57.4827%" y="527.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_boolie (7 samples, 1.10%)</title><rect x="60.3774%" y="533" width="1.1006%" height="15" fill="rgb(230,95,12)" fg:x="384" fg:w="7"/><text x="60.6274%" y="543.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bit (7 samples, 1.10%)</title><rect x="60.3774%" y="517" width="1.1006%" height="15" fill="rgb(232,209,1)" fg:x="384" fg:w="7"/><text x="60.6274%" y="527.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (7 samples, 1.10%)</title><rect x="60.3774%" y="501" width="1.1006%" height="15" fill="rgb(232,6,1)" fg:x="384" fg:w="7"/><text x="60.6274%" y="511.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::consume (1 samples, 0.16%)</title><rect x="64.6226%" y="501" width="0.1572%" height="15" fill="rgb(210,224,50)" fg:x="411" fg:w="1"/><text x="64.8726%" y="511.50"></text></g><g><title>bitter::LittleEndianReader::consume_ (1 samples, 0.16%)</title><rect x="64.6226%" y="485" width="0.1572%" height="15" fill="rgb(228,127,35)" fg:x="411" fg:w="1"/><text x="64.8726%" y="495.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (7 samples, 1.10%)</title><rect x="63.9937%" y="517" width="1.1006%" height="15" fill="rgb(245,102,45)" fg:x="407" fg:w="7"/><text x="64.2437%" y="527.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::peek (2 samples, 0.31%)</title><rect x="64.7799%" y="501" width="0.3145%" height="15" fill="rgb(214,1,49)" fg:x="412" fg:w="2"/><text x="65.0299%" y="511.50"></text></g><g><title>bitter::LittleEndianReader::peek_ (2 samples, 0.31%)</title><rect x="64.7799%" y="485" width="0.3145%" height="15" fill="rgb(226,163,40)" fg:x="412" fg:w="2"/><text x="65.0299%" y="495.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_inx (48 samples, 7.55%)</title><rect x="57.7044%" y="549" width="7.5472%" height="15" fill="rgb(239,212,28)" fg:x="367" fg:w="48"/><text x="57.9544%" y="559.50">demoparser..</text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (24 samples, 3.77%)</title><rect x="61.4780%" y="533" width="3.7736%" height="15" fill="rgb(220,20,13)" fg:x="391" fg:w="24"/><text x="61.7280%" y="543.50">demo..</text></g><g><title>__irqentry_text_end (1 samples, 0.16%)</title><rect x="65.0943%" y="517" width="0.1572%" height="15" fill="rgb(210,164,35)" fg:x="414" fg:w="1"/><text x="65.3443%" y="527.50"></text></g><g><title>&lt;u128 as ahash::convert::Convert&lt;[u64: 2]&gt;&gt;::convert (1 samples, 0.16%)</title><rect x="65.4088%" y="421" width="0.1572%" height="15" fill="rgb(248,109,41)" fg:x="416" fg:w="1"/><text x="65.6588%" y="431.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::finish (3 samples, 0.47%)</title><rect x="65.2516%" y="437" width="0.4717%" height="15" fill="rgb(238,23,50)" fg:x="415" fg:w="3"/><text x="65.5016%" y="447.50"></text></g><g><title>ahash::operations::aesenc (1 samples, 0.16%)</title><rect x="65.5660%" y="421" width="0.1572%" height="15" fill="rgb(211,48,49)" fg:x="417" fg:w="1"/><text x="65.8160%" y="431.50"></text></g><g><title>core::core_arch::x86::aes::_mm_aesenc_si128 (1 samples, 0.16%)</title><rect x="65.5660%" y="405" width="0.1572%" height="15" fill="rgb(223,36,21)" fg:x="417" fg:w="1"/><text x="65.8160%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.63%)</title><rect x="65.2516%" y="501" width="0.6289%" height="15" fill="rgb(207,123,46)" fg:x="415" fg:w="4"/><text x="65.5016%" y="511.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::hash_one (4 samples, 0.63%)</title><rect x="65.2516%" y="485" width="0.6289%" height="15" fill="rgb(240,218,32)" fg:x="415" fg:w="4"/><text x="65.5016%" y="495.50"></text></g><g><title>ahash::random_state::RandomState::hash_one (4 samples, 0.63%)</title><rect x="65.2516%" y="469" width="0.6289%" height="15" fill="rgb(252,5,43)" fg:x="415" fg:w="4"/><text x="65.5016%" y="479.50"></text></g><g><title>&lt;T as ahash::specialize::CallHasher&gt;::get_hash (4 samples, 0.63%)</title><rect x="65.2516%" y="453" width="0.6289%" height="15" fill="rgb(252,84,19)" fg:x="415" fg:w="4"/><text x="65.5016%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="65.7233%" y="437" width="0.1572%" height="15" fill="rgb(243,152,39)" fg:x="418" fg:w="1"/><text x="65.9733%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (1 samples, 0.16%)</title><rect x="65.7233%" y="421" width="0.1572%" height="15" fill="rgb(234,160,15)" fg:x="418" fg:w="1"/><text x="65.9733%" y="431.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::write_u16 (1 samples, 0.16%)</title><rect x="65.7233%" y="405" width="0.1572%" height="15" fill="rgb(237,34,20)" fg:x="418" fg:w="1"/><text x="65.9733%" y="415.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.16%)</title><rect x="65.7233%" y="389" width="0.1572%" height="15" fill="rgb(229,97,13)" fg:x="418" fg:w="1"/><text x="65.9733%" y="399.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::write_u128 (1 samples, 0.16%)</title><rect x="65.7233%" y="373" width="0.1572%" height="15" fill="rgb(234,71,50)" fg:x="418" fg:w="1"/><text x="65.9733%" y="383.50"></text></g><g><title>ahash::aes_hash::AHasher::hash_in (1 samples, 0.16%)</title><rect x="65.7233%" y="357" width="0.1572%" height="15" fill="rgb(253,155,4)" fg:x="418" fg:w="1"/><text x="65.9733%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.16%)</title><rect x="66.3522%" y="453" width="0.1572%" height="15" fill="rgb(222,185,37)" fg:x="422" fg:w="1"/><text x="66.6022%" y="463.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.16%)</title><rect x="66.3522%" y="437" width="0.1572%" height="15" fill="rgb(251,177,13)" fg:x="422" fg:w="1"/><text x="66.6022%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u16&gt;::eq (1 samples, 0.16%)</title><rect x="66.3522%" y="421" width="0.1572%" height="15" fill="rgb(250,179,40)" fg:x="422" fg:w="1"/><text x="66.6022%" y="431.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.31%)</title><rect x="66.5094%" y="453" width="0.3145%" height="15" fill="rgb(242,44,2)" fg:x="423" fg:w="2"/><text x="66.7594%" y="463.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::update_entity (125 samples, 19.65%)</title><rect x="47.3270%" y="565" width="19.6541%" height="15" fill="rgb(216,177,13)" fg:x="301" fg:w="125"/><text x="47.5770%" y="575.50">demoparser::parsing::demo_parsi..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (11 samples, 1.73%)</title><rect x="65.2516%" y="549" width="1.7296%" height="15" fill="rgb(216,106,43)" fg:x="415" fg:w="11"/><text x="65.5016%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (11 samples, 1.73%)</title><rect x="65.2516%" y="533" width="1.7296%" height="15" fill="rgb(216,183,2)" fg:x="415" fg:w="11"/><text x="65.5016%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 1.73%)</title><rect x="65.2516%" y="517" width="1.7296%" height="15" fill="rgb(249,75,3)" fg:x="415" fg:w="11"/><text x="65.5016%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (7 samples, 1.10%)</title><rect x="65.8805%" y="501" width="1.1006%" height="15" fill="rgb(219,67,39)" fg:x="419" fg:w="7"/><text x="66.1305%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 1.10%)</title><rect x="65.8805%" y="485" width="1.1006%" height="15" fill="rgb(253,228,2)" fg:x="419" fg:w="7"/><text x="66.1305%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (7 samples, 1.10%)</title><rect x="65.8805%" y="469" width="1.1006%" height="15" fill="rgb(235,138,27)" fg:x="419" fg:w="7"/><text x="66.1305%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.16%)</title><rect x="66.8239%" y="453" width="0.1572%" height="15" fill="rgb(236,97,51)" fg:x="425" fg:w="1"/><text x="67.0739%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.16%)</title><rect x="66.8239%" y="437" width="0.1572%" height="15" fill="rgb(240,80,30)" fg:x="425" fg:w="1"/><text x="67.0739%" y="447.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_boolie (1 samples, 0.16%)</title><rect x="66.9811%" y="565" width="0.1572%" height="15" fill="rgb(230,178,19)" fg:x="426" fg:w="1"/><text x="67.2311%" y="575.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bit (1 samples, 0.16%)</title><rect x="66.9811%" y="549" width="0.1572%" height="15" fill="rgb(210,190,27)" fg:x="426" fg:w="1"/><text x="67.2311%" y="559.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (1 samples, 0.16%)</title><rect x="66.9811%" y="533" width="0.1572%" height="15" fill="rgb(222,107,31)" fg:x="426" fg:w="1"/><text x="67.2311%" y="543.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_u_bit_var (4 samples, 0.63%)</title><rect x="67.1384%" y="565" width="0.6289%" height="15" fill="rgb(216,127,34)" fg:x="427" fg:w="4"/><text x="67.3884%" y="575.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (2 samples, 0.31%)</title><rect x="67.4528%" y="549" width="0.3145%" height="15" fill="rgb(234,116,52)" fg:x="429" fg:w="2"/><text x="67.7028%" y="559.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.16%)</title><rect x="67.6101%" y="533" width="0.1572%" height="15" fill="rgb(222,124,15)" fg:x="430" fg:w="1"/><text x="67.8601%" y="543.50"></text></g><g><title>bitter::LittleEndianReader::has_data_for_unaligned_loads (1 samples, 0.16%)</title><rect x="67.6101%" y="517" width="0.1572%" height="15" fill="rgb(231,179,28)" fg:x="430" fg:w="1"/><text x="67.8601%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;protobuf::coded_input_stream::CodedInputStream&gt; (2 samples, 0.31%)</title><rect x="67.9245%" y="549" width="0.3145%" height="15" fill="rgb(226,93,45)" fg:x="432" fg:w="2"/><text x="68.1745%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;protobuf::coded_input_stream::buf_read_iter::BufReadIter&gt; (2 samples, 0.31%)</title><rect x="67.9245%" y="533" width="0.3145%" height="15" fill="rgb(215,8,51)" fg:x="432" fg:w="2"/><text x="68.1745%" y="543.50"></text></g><g><title>&lt;protobuf::coded_input_stream::buf_read_iter::BufReadIter as core::ops::drop::Drop&gt;::drop (2 samples, 0.31%)</title><rect x="67.9245%" y="517" width="0.3145%" height="15" fill="rgb(223,106,5)" fg:x="432" fg:w="2"/><text x="68.1745%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.16%)</title><rect x="68.3962%" y="517" width="0.1572%" height="15" fill="rgb(250,191,5)" fg:x="435" fg:w="1"/><text x="68.6462%" y="527.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bool (2 samples, 0.31%)</title><rect x="68.5535%" y="517" width="0.3145%" height="15" fill="rgb(242,132,44)" fg:x="436" fg:w="2"/><text x="68.8035%" y="527.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (1 samples, 0.16%)</title><rect x="68.7107%" y="501" width="0.1572%" height="15" fill="rgb(251,152,29)" fg:x="437" fg:w="1"/><text x="68.9607%" y="511.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::remaining_in_buf_len (1 samples, 0.16%)</title><rect x="68.8679%" y="437" width="0.1572%" height="15" fill="rgb(218,179,5)" fg:x="438" fg:w="1"/><text x="69.1179%" y="447.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::remaining_in_buf (1 samples, 0.16%)</title><rect x="68.8679%" y="421" width="0.1572%" height="15" fill="rgb(227,67,19)" fg:x="438" fg:w="1"/><text x="69.1179%" y="431.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::remaining_in_buf (1 samples, 0.16%)</title><rect x="68.8679%" y="405" width="0.1572%" height="15" fill="rgb(233,119,31)" fg:x="438" fg:w="1"/><text x="69.1179%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.16%)</title><rect x="68.8679%" y="389" width="0.1572%" height="15" fill="rgb(241,120,22)" fg:x="438" fg:w="1"/><text x="69.1179%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.16%)</title><rect x="68.8679%" y="373" width="0.1572%" height="15" fill="rgb(224,102,30)" fg:x="438" fg:w="1"/><text x="69.1179%" y="383.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes (4 samples, 0.63%)</title><rect x="68.8679%" y="517" width="0.6289%" height="15" fill="rgb(210,164,37)" fg:x="438" fg:w="4"/><text x="69.1179%" y="527.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (4 samples, 0.63%)</title><rect x="68.8679%" y="501" width="0.6289%" height="15" fill="rgb(226,191,16)" fg:x="438" fg:w="4"/><text x="69.1179%" y="511.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (4 samples, 0.63%)</title><rect x="68.8679%" y="485" width="0.6289%" height="15" fill="rgb(214,40,45)" fg:x="438" fg:w="4"/><text x="69.1179%" y="495.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (4 samples, 0.63%)</title><rect x="68.8679%" y="469" width="0.6289%" height="15" fill="rgb(244,29,26)" fg:x="438" fg:w="4"/><text x="69.1179%" y="479.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact (4 samples, 0.63%)</title><rect x="68.8679%" y="453" width="0.6289%" height="15" fill="rgb(216,16,5)" fg:x="438" fg:w="4"/><text x="69.1179%" y="463.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::read_bytes (3 samples, 0.47%)</title><rect x="69.0252%" y="437" width="0.4717%" height="15" fill="rgb(249,76,35)" fg:x="439" fg:w="3"/><text x="69.2752%" y="447.50"></text></g><g><title>protobuf::misc::maybe_uninit_write_slice (3 samples, 0.47%)</title><rect x="69.0252%" y="421" width="0.4717%" height="15" fill="rgb(207,11,44)" fg:x="439" fg:w="3"/><text x="69.2752%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (3 samples, 0.47%)</title><rect x="69.0252%" y="405" width="0.4717%" height="15" fill="rgb(228,190,49)" fg:x="439" fg:w="3"/><text x="69.2752%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.47%)</title><rect x="69.0252%" y="389" width="0.4717%" height="15" fill="rgb(214,173,12)" fg:x="439" fg:w="3"/><text x="69.2752%" y="399.50"></text></g><g><title>[libc.so.6] (3 samples, 0.47%)</title><rect x="69.0252%" y="373" width="0.4717%" height="15" fill="rgb(218,26,35)" fg:x="439" fg:w="3"/><text x="69.2752%" y="383.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.16%)</title><rect x="69.3396%" y="357" width="0.1572%" height="15" fill="rgb(220,200,19)" fg:x="441" fg:w="1"/><text x="69.5896%" y="367.50"></text></g><g><title>exc_page_fault (1 samples, 0.16%)</title><rect x="69.3396%" y="341" width="0.1572%" height="15" fill="rgb(239,95,49)" fg:x="441" fg:w="1"/><text x="69.5896%" y="351.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.16%)</title><rect x="69.3396%" y="325" width="0.1572%" height="15" fill="rgb(235,85,53)" fg:x="441" fg:w="1"/><text x="69.5896%" y="335.50"></text></g><g><title>handle_mm_fault (1 samples, 0.16%)</title><rect x="69.3396%" y="309" width="0.1572%" height="15" fill="rgb(233,133,31)" fg:x="441" fg:w="1"/><text x="69.5896%" y="319.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.16%)</title><rect x="69.3396%" y="293" width="0.1572%" height="15" fill="rgb(218,25,20)" fg:x="441" fg:w="1"/><text x="69.5896%" y="303.50"></text></g><g><title>handle_pte_fault (1 samples, 0.16%)</title><rect x="69.3396%" y="277" width="0.1572%" height="15" fill="rgb(252,210,38)" fg:x="441" fg:w="1"/><text x="69.5896%" y="287.50"></text></g><g><title>do_fault (1 samples, 0.16%)</title><rect x="69.3396%" y="261" width="0.1572%" height="15" fill="rgb(242,134,21)" fg:x="441" fg:w="1"/><text x="69.5896%" y="271.50"></text></g><g><title>do_read_fault (1 samples, 0.16%)</title><rect x="69.3396%" y="245" width="0.1572%" height="15" fill="rgb(213,28,48)" fg:x="441" fg:w="1"/><text x="69.5896%" y="255.50"></text></g><g><title>filemap_map_pages (1 samples, 0.16%)</title><rect x="69.3396%" y="229" width="0.1572%" height="15" fill="rgb(250,196,2)" fg:x="441" fg:w="1"/><text x="69.5896%" y="239.50"></text></g><g><title>do_set_pte (1 samples, 0.16%)</title><rect x="69.3396%" y="213" width="0.1572%" height="15" fill="rgb(227,5,17)" fg:x="441" fg:w="1"/><text x="69.5896%" y="223.50"></text></g><g><title>page_add_file_rmap (1 samples, 0.16%)</title><rect x="69.3396%" y="197" width="0.1572%" height="15" fill="rgb(221,226,24)" fg:x="441" fg:w="1"/><text x="69.5896%" y="207.50"></text></g><g><title>lock_page_memcg (1 samples, 0.16%)</title><rect x="69.3396%" y="181" width="0.1572%" height="15" fill="rgb(211,5,48)" fg:x="441" fg:w="1"/><text x="69.5896%" y="191.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int32 (1 samples, 0.16%)</title><rect x="69.4969%" y="517" width="0.1572%" height="15" fill="rgb(219,150,6)" fg:x="442" fg:w="1"/><text x="69.7469%" y="527.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int64 (1 samples, 0.16%)</title><rect x="69.4969%" y="501" width="0.1572%" height="15" fill="rgb(251,46,16)" fg:x="442" fg:w="1"/><text x="69.7469%" y="511.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (1 samples, 0.16%)</title><rect x="69.4969%" y="485" width="0.1572%" height="15" fill="rgb(220,204,40)" fg:x="442" fg:w="1"/><text x="69.7469%" y="495.50"></text></g><g><title>protobuf::varint::decode::decode_varint64 (1 samples, 0.16%)</title><rect x="69.4969%" y="469" width="0.1572%" height="15" fill="rgb(211,85,2)" fg:x="442" fg:w="1"/><text x="69.7469%" y="479.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (1 samples, 0.16%)</title><rect x="69.4969%" y="453" width="0.1572%" height="15" fill="rgb(229,17,7)" fg:x="442" fg:w="1"/><text x="69.7469%" y="463.50"></text></g><g><title>protobuf::varint::decode::decode_varint_full (1 samples, 0.16%)</title><rect x="69.4969%" y="437" width="0.1572%" height="15" fill="rgb(239,72,28)" fg:x="442" fg:w="1"/><text x="69.7469%" y="447.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_packet_entities (144 samples, 22.64%)</title><rect x="47.1698%" y="581" width="22.6415%" height="15" fill="rgb(230,47,54)" fg:x="300" fg:w="144"/><text x="47.4198%" y="591.50">demoparser::parsing::demo_parsing::e..</text></g><g><title>protobuf::message::Message::parse_from_bytes (13 samples, 2.04%)</title><rect x="67.7673%" y="565" width="2.0440%" height="15" fill="rgb(214,50,8)" fg:x="431" fg:w="13"/><text x="68.0173%" y="575.50">p..</text></g><g><title>protobuf::message::Message::parse_from (10 samples, 1.57%)</title><rect x="68.2390%" y="549" width="1.5723%" height="15" fill="rgb(216,198,43)" fg:x="434" fg:w="10"/><text x="68.4890%" y="559.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_PacketEntities as protobuf::message::Message&gt;::merge_from (10 samples, 1.57%)</title><rect x="68.2390%" y="533" width="1.5723%" height="15" fill="rgb(234,20,35)" fg:x="434" fg:w="10"/><text x="68.4890%" y="543.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (1 samples, 0.16%)</title><rect x="69.6541%" y="517" width="0.1572%" height="15" fill="rgb(254,45,19)" fg:x="443" fg:w="1"/><text x="69.9041%" y="527.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (1 samples, 0.16%)</title><rect x="69.6541%" y="501" width="0.1572%" height="15" fill="rgb(219,14,44)" fg:x="443" fg:w="1"/><text x="69.9041%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.16%)</title><rect x="69.8113%" y="533" width="0.1572%" height="15" fill="rgb(217,220,26)" fg:x="444" fg:w="1"/><text x="70.0613%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.16%)</title><rect x="69.8113%" y="517" width="0.1572%" height="15" fill="rgb(213,158,28)" fg:x="444" fg:w="1"/><text x="70.0613%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.16%)</title><rect x="69.8113%" y="501" width="0.1572%" height="15" fill="rgb(252,51,52)" fg:x="444" fg:w="1"/><text x="70.0613%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.16%)</title><rect x="69.8113%" y="485" width="0.1572%" height="15" fill="rgb(246,89,16)" fg:x="444" fg:w="1"/><text x="70.0613%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.16%)</title><rect x="69.8113%" y="469" width="0.1572%" height="15" fill="rgb(216,158,49)" fg:x="444" fg:w="1"/><text x="70.0613%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.16%)</title><rect x="69.8113%" y="453" width="0.1572%" height="15" fill="rgb(236,107,19)" fg:x="444" fg:w="1"/><text x="70.0613%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="69.8113%" y="437" width="0.1572%" height="15" fill="rgb(228,185,30)" fg:x="444" fg:w="1"/><text x="70.0613%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.16%)</title><rect x="69.8113%" y="421" width="0.1572%" height="15" fill="rgb(246,134,8)" fg:x="444" fg:w="1"/><text x="70.0613%" y="431.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2 samples, 0.31%)</title><rect x="69.8113%" y="549" width="0.3145%" height="15" fill="rgb(214,143,50)" fg:x="444" fg:w="2"/><text x="70.0613%" y="559.50"></text></g><g><title>alloc::string::String::from_utf8_unchecked (1 samples, 0.16%)</title><rect x="69.9686%" y="533" width="0.1572%" height="15" fill="rgb(228,75,8)" fg:x="445" fg:w="1"/><text x="70.2186%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.16%)</title><rect x="70.1258%" y="533" width="0.1572%" height="15" fill="rgb(207,175,4)" fg:x="446" fg:w="1"/><text x="70.3758%" y="543.50"></text></g><g><title>demoparser::parsing::demo_parsing::game_events::gen_name_val_pairs (4 samples, 0.63%)</title><rect x="69.8113%" y="565" width="0.6289%" height="15" fill="rgb(205,108,24)" fg:x="444" fg:w="4"/><text x="70.0613%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.31%)</title><rect x="70.1258%" y="549" width="0.3145%" height="15" fill="rgb(244,120,49)" fg:x="446" fg:w="2"/><text x="70.3758%" y="559.50"></text></g><g><title>core::ptr::write (1 samples, 0.16%)</title><rect x="70.2830%" y="533" width="0.1572%" height="15" fill="rgb(223,47,38)" fg:x="447" fg:w="1"/><text x="70.5330%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.16%)</title><rect x="70.5975%" y="517" width="0.1572%" height="15" fill="rgb(229,179,11)" fg:x="449" fg:w="1"/><text x="70.8475%" y="527.50"></text></g><g><title>mi_free (1 samples, 0.16%)</title><rect x="70.7547%" y="389" width="0.1572%" height="15" fill="rgb(231,122,1)" fg:x="450" fg:w="1"/><text x="71.0047%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.31%)</title><rect x="70.7547%" y="501" width="0.3145%" height="15" fill="rgb(245,119,9)" fg:x="450" fg:w="2"/><text x="71.0047%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.31%)</title><rect x="70.7547%" y="485" width="0.3145%" height="15" fill="rgb(241,163,25)" fg:x="450" fg:w="2"/><text x="71.0047%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.31%)</title><rect x="70.7547%" y="469" width="0.3145%" height="15" fill="rgb(217,214,3)" fg:x="450" fg:w="2"/><text x="71.0047%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.31%)</title><rect x="70.7547%" y="453" width="0.3145%" height="15" fill="rgb(240,86,28)" fg:x="450" fg:w="2"/><text x="71.0047%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.31%)</title><rect x="70.7547%" y="437" width="0.3145%" height="15" fill="rgb(215,47,9)" fg:x="450" fg:w="2"/><text x="71.0047%" y="447.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.31%)</title><rect x="70.7547%" y="421" width="0.3145%" height="15" fill="rgb(252,25,45)" fg:x="450" fg:w="2"/><text x="71.0047%" y="431.50"></text></g><g><title>_mi_heap_realloc_zero (2 samples, 0.31%)</title><rect x="70.7547%" y="405" width="0.3145%" height="15" fill="rgb(251,164,9)" fg:x="450" fg:w="2"/><text x="71.0047%" y="415.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.16%)</title><rect x="70.9119%" y="389" width="0.1572%" height="15" fill="rgb(233,194,0)" fg:x="451" fg:w="1"/><text x="71.1619%" y="399.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.16%)</title><rect x="70.9119%" y="373" width="0.1572%" height="15" fill="rgb(249,111,24)" fg:x="451" fg:w="1"/><text x="71.1619%" y="383.50"></text></g><g><title>mi_find_page (1 samples, 0.16%)</title><rect x="70.9119%" y="357" width="0.1572%" height="15" fill="rgb(250,223,3)" fg:x="451" fg:w="1"/><text x="71.1619%" y="367.50"></text></g><g><title>mi_find_free_page (1 samples, 0.16%)</title><rect x="70.9119%" y="341" width="0.1572%" height="15" fill="rgb(236,178,37)" fg:x="451" fg:w="1"/><text x="71.1619%" y="351.50"></text></g><g><title>_mi_page_free_collect (1 samples, 0.16%)</title><rect x="70.9119%" y="325" width="0.1572%" height="15" fill="rgb(241,158,50)" fg:x="451" fg:w="1"/><text x="71.1619%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.47%)</title><rect x="70.7547%" y="517" width="0.4717%" height="15" fill="rgb(213,121,41)" fg:x="450" fg:w="3"/><text x="71.0047%" y="527.50"></text></g><g><title>core::ptr::write (1 samples, 0.16%)</title><rect x="71.0692%" y="501" width="0.1572%" height="15" fill="rgb(240,92,3)" fg:x="452" fg:w="1"/><text x="71.3192%" y="511.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_game_event::Key_t as protobuf::message::Message&gt;::merge_from (2 samples, 0.31%)</title><rect x="71.2264%" y="485" width="0.3145%" height="15" fill="rgb(205,123,3)" fg:x="453" fg:w="2"/><text x="71.4764%" y="495.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (2 samples, 0.31%)</title><rect x="71.2264%" y="469" width="0.3145%" height="15" fill="rgb(205,97,47)" fg:x="453" fg:w="2"/><text x="71.4764%" y="479.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (2 samples, 0.31%)</title><rect x="71.2264%" y="453" width="0.3145%" height="15" fill="rgb(247,152,14)" fg:x="453" fg:w="2"/><text x="71.4764%" y="463.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::eof (1 samples, 0.16%)</title><rect x="71.3836%" y="437" width="0.1572%" height="15" fill="rgb(248,195,53)" fg:x="454" fg:w="1"/><text x="71.6336%" y="447.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::eof (1 samples, 0.16%)</title><rect x="71.3836%" y="421" width="0.1572%" height="15" fill="rgb(226,201,16)" fg:x="454" fg:w="1"/><text x="71.6336%" y="431.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::fill_buf (1 samples, 0.16%)</title><rect x="71.3836%" y="405" width="0.1572%" height="15" fill="rgb(205,98,0)" fg:x="454" fg:w="1"/><text x="71.6336%" y="415.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::pos (1 samples, 0.16%)</title><rect x="71.3836%" y="389" width="0.1572%" height="15" fill="rgb(214,191,48)" fg:x="454" fg:w="1"/><text x="71.6336%" y="399.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::pop_limit (1 samples, 0.16%)</title><rect x="71.5409%" y="485" width="0.1572%" height="15" fill="rgb(237,112,39)" fg:x="455" fg:w="1"/><text x="71.7909%" y="495.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::push_limit (1 samples, 0.16%)</title><rect x="71.6981%" y="485" width="0.1572%" height="15" fill="rgb(247,203,27)" fg:x="456" fg:w="1"/><text x="71.9481%" y="495.50"></text></g><g><title>demoparser::parsing::demo_parsing::game_events::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_game_event (14 samples, 2.20%)</title><rect x="69.8113%" y="581" width="2.2013%" height="15" fill="rgb(235,124,28)" fg:x="444" fg:w="14"/><text x="70.0613%" y="591.50">d..</text></g><g><title>protobuf::message::Message::parse_from_bytes (10 samples, 1.57%)</title><rect x="70.4403%" y="565" width="1.5723%" height="15" fill="rgb(208,207,46)" fg:x="448" fg:w="10"/><text x="70.6903%" y="575.50"></text></g><g><title>protobuf::message::Message::parse_from (9 samples, 1.42%)</title><rect x="70.5975%" y="549" width="1.4151%" height="15" fill="rgb(234,176,4)" fg:x="449" fg:w="9"/><text x="70.8475%" y="559.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_GameEvent as protobuf::message::Message&gt;::merge_from (9 samples, 1.42%)</title><rect x="70.5975%" y="533" width="1.4151%" height="15" fill="rgb(230,133,28)" fg:x="449" fg:w="9"/><text x="70.8475%" y="543.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_message (5 samples, 0.79%)</title><rect x="71.2264%" y="517" width="0.7862%" height="15" fill="rgb(211,137,40)" fg:x="453" fg:w="5"/><text x="71.4764%" y="527.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::merge_message (5 samples, 0.79%)</title><rect x="71.2264%" y="501" width="0.7862%" height="15" fill="rgb(254,35,13)" fg:x="453" fg:w="5"/><text x="71.4764%" y="511.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (1 samples, 0.16%)</title><rect x="71.8553%" y="485" width="0.1572%" height="15" fill="rgb(225,49,51)" fg:x="457" fg:w="1"/><text x="72.1053%" y="495.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::remaining_in_buf (1 samples, 0.16%)</title><rect x="71.8553%" y="469" width="0.1572%" height="15" fill="rgb(251,10,15)" fg:x="457" fg:w="1"/><text x="72.1053%" y="479.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::remaining_in_buf (1 samples, 0.16%)</title><rect x="71.8553%" y="453" width="0.1572%" height="15" fill="rgb(228,207,15)" fg:x="457" fg:w="1"/><text x="72.1053%" y="463.50"></text></g><g><title>demoparser::parsing::parser::Parser::msg_handler (159 samples, 25.00%)</title><rect x="47.1698%" y="597" width="25.0000%" height="15" fill="rgb(241,99,19)" fg:x="300" fg:w="159"/><text x="47.4198%" y="607.50">demoparser::parsing::parser::Parser::msg..</text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (1 samples, 0.16%)</title><rect x="72.0126%" y="581" width="0.1572%" height="15" fill="rgb(207,104,49)" fg:x="458" fg:w="1"/><text x="72.2626%" y="591.50"></text></g><g><title>demoparser::parsing::parser::Parser::start_parsing (292 samples, 45.91%)</title><rect x="26.4151%" y="661" width="45.9119%" height="15" fill="rgb(234,99,18)" fg:x="168" fg:w="292"/><text x="26.6651%" y="671.50">demoparser::parsing::parser::Parser::start_parsing</text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (292 samples, 45.91%)</title><rect x="26.4151%" y="645" width="45.9119%" height="15" fill="rgb(213,191,49)" fg:x="168" fg:w="292"/><text x="26.6651%" y="655.50">demoparser::parsing::parser::Parser::parse_bytes</text></g><g><title>demoparser::parsing::parser::Parser::parse_cmd (174 samples, 27.36%)</title><rect x="44.9686%" y="629" width="27.3585%" height="15" fill="rgb(210,226,19)" fg:x="286" fg:w="174"/><text x="45.2186%" y="639.50">demoparser::parsing::parser::Parser::parse_c..</text></g><g><title>demoparser::parsing::parser::Parser::messages_from_packet (165 samples, 25.94%)</title><rect x="46.3836%" y="613" width="25.9434%" height="15" fill="rgb(229,97,18)" fg:x="295" fg:w="165"/><text x="46.6336%" y="623.50">demoparser::parsing::parser::Parser::mess..</text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (1 samples, 0.16%)</title><rect x="72.1698%" y="597" width="0.1572%" height="15" fill="rgb(211,167,15)" fg:x="459" fg:w="1"/><text x="72.4198%" y="607.50"></text></g><g><title>charge_memcg (1 samples, 0.16%)</title><rect x="75.9434%" y="373" width="0.1572%" height="15" fill="rgb(210,169,34)" fg:x="483" fg:w="1"/><text x="76.1934%" y="383.50"></text></g><g><title>try_charge_memcg (1 samples, 0.16%)</title><rect x="75.9434%" y="357" width="0.1572%" height="15" fill="rgb(241,121,31)" fg:x="483" fg:w="1"/><text x="76.1934%" y="367.50"></text></g><g><title>consume_stock (1 samples, 0.16%)</title><rect x="75.9434%" y="341" width="0.1572%" height="15" fill="rgb(232,40,11)" fg:x="483" fg:w="1"/><text x="76.1934%" y="351.50"></text></g><g><title>__mem_cgroup_charge (2 samples, 0.31%)</title><rect x="75.9434%" y="389" width="0.3145%" height="15" fill="rgb(205,86,26)" fg:x="483" fg:w="2"/><text x="76.1934%" y="399.50"></text></g><g><title>memcg_check_events (1 samples, 0.16%)</title><rect x="76.1006%" y="373" width="0.1572%" height="15" fill="rgb(231,126,28)" fg:x="484" fg:w="1"/><text x="76.3506%" y="383.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.16%)</title><rect x="76.2579%" y="389" width="0.1572%" height="15" fill="rgb(219,221,18)" fg:x="485" fg:w="1"/><text x="76.5079%" y="399.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1 samples, 0.16%)</title><rect x="76.4151%" y="389" width="0.1572%" height="15" fill="rgb(211,40,0)" fg:x="486" fg:w="1"/><text x="76.6651%" y="399.50"></text></g><g><title>lru_cache_add (1 samples, 0.16%)</title><rect x="76.4151%" y="373" width="0.1572%" height="15" fill="rgb(239,85,43)" fg:x="486" fg:w="1"/><text x="76.6651%" y="383.50"></text></g><g><title>folio_add_lru (1 samples, 0.16%)</title><rect x="76.4151%" y="357" width="0.1572%" height="15" fill="rgb(231,55,21)" fg:x="486" fg:w="1"/><text x="76.6651%" y="367.50"></text></g><g><title>__pagevec_lru_add (1 samples, 0.16%)</title><rect x="76.4151%" y="341" width="0.1572%" height="15" fill="rgb(225,184,43)" fg:x="486" fg:w="1"/><text x="76.6651%" y="351.50"></text></g><g><title>__pagevec_lru_add_fn (1 samples, 0.16%)</title><rect x="76.4151%" y="325" width="0.1572%" height="15" fill="rgb(251,158,41)" fg:x="486" fg:w="1"/><text x="76.6651%" y="335.50"></text></g><g><title>page_add_new_anon_rmap (2 samples, 0.31%)</title><rect x="76.5723%" y="389" width="0.3145%" height="15" fill="rgb(234,159,37)" fg:x="487" fg:w="2"/><text x="76.8223%" y="399.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.16%)</title><rect x="76.7296%" y="373" width="0.1572%" height="15" fill="rgb(216,204,22)" fg:x="488" fg:w="1"/><text x="76.9796%" y="383.50"></text></g><g><title>__handle_mm_fault (14 samples, 2.20%)</title><rect x="75.6289%" y="437" width="2.2013%" height="15" fill="rgb(214,17,3)" fg:x="481" fg:w="14"/><text x="75.8789%" y="447.50">_..</text></g><g><title>handle_pte_fault (13 samples, 2.04%)</title><rect x="75.7862%" y="421" width="2.0440%" height="15" fill="rgb(212,111,17)" fg:x="482" fg:w="13"/><text x="76.0362%" y="431.50">h..</text></g><g><title>do_anonymous_page (12 samples, 1.89%)</title><rect x="75.9434%" y="405" width="1.8868%" height="15" fill="rgb(221,157,24)" fg:x="483" fg:w="12"/><text x="76.1934%" y="415.50">d..</text></g><g><title>vma_alloc_folio (6 samples, 0.94%)</title><rect x="76.8868%" y="389" width="0.9434%" height="15" fill="rgb(252,16,13)" fg:x="489" fg:w="6"/><text x="77.1368%" y="399.50"></text></g><g><title>__folio_alloc (5 samples, 0.79%)</title><rect x="77.0440%" y="373" width="0.7862%" height="15" fill="rgb(221,62,2)" fg:x="490" fg:w="5"/><text x="77.2940%" y="383.50"></text></g><g><title>__alloc_pages (5 samples, 0.79%)</title><rect x="77.0440%" y="357" width="0.7862%" height="15" fill="rgb(247,87,22)" fg:x="490" fg:w="5"/><text x="77.2940%" y="367.50"></text></g><g><title>get_page_from_freelist (5 samples, 0.79%)</title><rect x="77.0440%" y="341" width="0.7862%" height="15" fill="rgb(215,73,9)" fg:x="490" fg:w="5"/><text x="77.2940%" y="351.50"></text></g><g><title>clear_page_erms (5 samples, 0.79%)</title><rect x="77.0440%" y="325" width="0.7862%" height="15" fill="rgb(207,175,33)" fg:x="490" fg:w="5"/><text x="77.2940%" y="335.50"></text></g><g><title>asm_exc_page_fault (33 samples, 5.19%)</title><rect x="72.7987%" y="501" width="5.1887%" height="15" fill="rgb(243,129,54)" fg:x="463" fg:w="33"/><text x="73.0487%" y="511.50">asm_ex..</text></g><g><title>exc_page_fault (15 samples, 2.36%)</title><rect x="75.6289%" y="485" width="2.3585%" height="15" fill="rgb(227,119,45)" fg:x="481" fg:w="15"/><text x="75.8789%" y="495.50">e..</text></g><g><title>do_user_addr_fault (15 samples, 2.36%)</title><rect x="75.6289%" y="469" width="2.3585%" height="15" fill="rgb(205,109,36)" fg:x="481" fg:w="15"/><text x="75.8789%" y="479.50">d..</text></g><g><title>handle_mm_fault (15 samples, 2.36%)</title><rect x="75.6289%" y="453" width="2.3585%" height="15" fill="rgb(205,6,39)" fg:x="481" fg:w="15"/><text x="75.8789%" y="463.50">h..</text></g><g><title>count_memcg_events.constprop.0 (1 samples, 0.16%)</title><rect x="77.8302%" y="437" width="0.1572%" height="15" fill="rgb(221,32,16)" fg:x="495" fg:w="1"/><text x="78.0802%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (338 samples, 53.14%)</title><rect x="25.0000%" y="837" width="53.1447%" height="15" fill="rgb(228,144,50)" fg:x="159" fg:w="338"/><text x="25.2500%" y="847.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (338 samples, 53.14%)</title><rect x="25.0000%" y="821" width="53.1447%" height="15" fill="rgb(229,201,53)" fg:x="159" fg:w="338"/><text x="25.2500%" y="831.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (338 samples, 53.14%)</title><rect x="25.0000%" y="805" width="53.1447%" height="15" fill="rgb(249,153,27)" fg:x="159" fg:w="338"/><text x="25.2500%" y="815.50">alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (338 samples, 53.14%)</title><rect x="25.0000%" y="789" width="53.1447%" height="15" fill="rgb(227,106,25)" fg:x="159" fg:w="338"/><text x="25.2500%" y="799.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (338 samples, 53.14%)</title><rect x="25.0000%" y="773" width="53.1447%" height="15" fill="rgb(230,65,29)" fg:x="159" fg:w="338"/><text x="25.2500%" y="783.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (338 samples, 53.14%)</title><rect x="25.0000%" y="757" width="53.1447%" height="15" fill="rgb(221,57,46)" fg:x="159" fg:w="338"/><text x="25.2500%" y="767.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (338 samples, 53.14%)</title><rect x="25.0000%" y="741" width="53.1447%" height="15" fill="rgb(229,161,17)" fg:x="159" fg:w="338"/><text x="25.2500%" y="751.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::traits::iterator::Iterator::fold (338 samples, 53.14%)</title><rect x="25.0000%" y="725" width="53.1447%" height="15" fill="rgb(222,213,11)" fg:x="159" fg:w="338"/><text x="25.2500%" y="735.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (338 samples, 53.14%)</title><rect x="25.0000%" y="709" width="53.1447%" height="15" fill="rgb(235,35,13)" fg:x="159" fg:w="338"/><text x="25.2500%" y="719.50">core::iter::adapters::map::map_fold::{{closure}}</text></g><g><title>demoparser::main::{{closure}} (338 samples, 53.14%)</title><rect x="25.0000%" y="693" width="53.1447%" height="15" fill="rgb(233,158,34)" fg:x="159" fg:w="338"/><text x="25.2500%" y="703.50">demoparser::main::{{closure}}</text></g><g><title>demoparser::parse_demo (338 samples, 53.14%)</title><rect x="25.0000%" y="677" width="53.1447%" height="15" fill="rgb(215,151,48)" fg:x="159" fg:w="338"/><text x="25.2500%" y="687.50">demoparser::parse_demo</text></g><g><title>demoparser::parsing::parser_settings::&lt;impl demoparser::parsing::parser::Parser&gt;::new (37 samples, 5.82%)</title><rect x="72.3270%" y="661" width="5.8176%" height="15" fill="rgb(229,84,14)" fg:x="460" fg:w="37"/><text x="72.5770%" y="671.50">demopar..</text></g><g><title>alloc::vec::from_elem (37 samples, 5.82%)</title><rect x="72.3270%" y="645" width="5.8176%" height="15" fill="rgb(229,68,14)" fg:x="460" fg:w="37"/><text x="72.5770%" y="655.50">alloc::..</text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (37 samples, 5.82%)</title><rect x="72.3270%" y="629" width="5.8176%" height="15" fill="rgb(243,106,26)" fg:x="460" fg:w="37"/><text x="72.5770%" y="639.50">&lt;T as a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (37 samples, 5.82%)</title><rect x="72.3270%" y="613" width="5.8176%" height="15" fill="rgb(206,45,38)" fg:x="460" fg:w="37"/><text x="72.5770%" y="623.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (37 samples, 5.82%)</title><rect x="72.3270%" y="597" width="5.8176%" height="15" fill="rgb(226,6,15)" fg:x="460" fg:w="37"/><text x="72.5770%" y="607.50">alloc::..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (37 samples, 5.82%)</title><rect x="72.3270%" y="581" width="5.8176%" height="15" fill="rgb(232,22,54)" fg:x="460" fg:w="37"/><text x="72.5770%" y="591.50">&lt;alloc:..</text></g><g><title>alloc::alloc::Global::alloc_impl (37 samples, 5.82%)</title><rect x="72.3270%" y="565" width="5.8176%" height="15" fill="rgb(229,222,32)" fg:x="460" fg:w="37"/><text x="72.5770%" y="575.50">alloc::..</text></g><g><title>alloc::alloc::alloc_zeroed (37 samples, 5.82%)</title><rect x="72.3270%" y="549" width="5.8176%" height="15" fill="rgb(228,62,29)" fg:x="460" fg:w="37"/><text x="72.5770%" y="559.50">alloc::..</text></g><g><title>_mi_heap_malloc_zero (37 samples, 5.82%)</title><rect x="72.3270%" y="533" width="5.8176%" height="15" fill="rgb(251,103,34)" fg:x="460" fg:w="37"/><text x="72.5770%" y="543.50">_mi_hea..</text></g><g><title>[libc.so.6] (37 samples, 5.82%)</title><rect x="72.3270%" y="517" width="5.8176%" height="15" fill="rgb(233,12,30)" fg:x="460" fg:w="37"/><text x="72.5770%" y="527.50">[libc.s..</text></g><g><title>sync_regs (1 samples, 0.16%)</title><rect x="77.9874%" y="501" width="0.1572%" height="15" fill="rgb(238,52,0)" fg:x="496" fg:w="1"/><text x="78.2374%" y="511.50"></text></g><g><title>get_unmapped_area (1 samples, 0.16%)</title><rect x="78.1447%" y="453" width="0.1572%" height="15" fill="rgb(223,98,5)" fg:x="497" fg:w="1"/><text x="78.3947%" y="463.50"></text></g><g><title>security_mmap_addr (1 samples, 0.16%)</title><rect x="78.1447%" y="437" width="0.1572%" height="15" fill="rgb(228,75,37)" fg:x="497" fg:w="1"/><text x="78.3947%" y="447.50"></text></g><g><title>perf_event_mmap (2 samples, 0.31%)</title><rect x="78.4591%" y="437" width="0.3145%" height="15" fill="rgb(205,115,49)" fg:x="499" fg:w="2"/><text x="78.7091%" y="447.50"></text></g><g><title>perf_event_mmap_event (1 samples, 0.16%)</title><rect x="78.6164%" y="421" width="0.1572%" height="15" fill="rgb(250,154,43)" fg:x="500" fg:w="1"/><text x="78.8664%" y="431.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.16%)</title><rect x="78.6164%" y="405" width="0.1572%" height="15" fill="rgb(226,43,29)" fg:x="500" fg:w="1"/><text x="78.8664%" y="415.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.16%)</title><rect x="78.6164%" y="389" width="0.1572%" height="15" fill="rgb(249,228,39)" fg:x="500" fg:w="1"/><text x="78.8664%" y="399.50"></text></g><g><title>do_mmap (5 samples, 0.79%)</title><rect x="78.1447%" y="469" width="0.7862%" height="15" fill="rgb(216,79,43)" fg:x="497" fg:w="5"/><text x="78.3947%" y="479.50"></text></g><g><title>mmap_region (4 samples, 0.63%)</title><rect x="78.3019%" y="453" width="0.6289%" height="15" fill="rgb(228,95,12)" fg:x="498" fg:w="4"/><text x="78.5519%" y="463.50"></text></g><g><title>vma_merge (1 samples, 0.16%)</title><rect x="78.7736%" y="437" width="0.1572%" height="15" fill="rgb(249,221,15)" fg:x="501" fg:w="1"/><text x="79.0236%" y="447.50"></text></g><g><title>__vma_adjust (1 samples, 0.16%)</title><rect x="78.7736%" y="421" width="0.1572%" height="15" fill="rgb(233,34,13)" fg:x="501" fg:w="1"/><text x="79.0236%" y="431.50"></text></g><g><title>_start (348 samples, 54.72%)</title><rect x="24.3711%" y="1109" width="54.7170%" height="15" fill="rgb(214,103,39)" fg:x="155" fg:w="348"/><text x="24.6211%" y="1119.50">_start</text></g><g><title>__libc_start_main_impl (348 samples, 54.72%)</title><rect x="24.3711%" y="1093" width="54.7170%" height="15" fill="rgb(251,126,39)" fg:x="155" fg:w="348"/><text x="24.6211%" y="1103.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (348 samples, 54.72%)</title><rect x="24.3711%" y="1077" width="54.7170%" height="15" fill="rgb(214,216,36)" fg:x="155" fg:w="348"/><text x="24.6211%" y="1087.50">__libc_start_call_main</text></g><g><title>main (345 samples, 54.25%)</title><rect x="24.8428%" y="1061" width="54.2453%" height="15" fill="rgb(220,221,8)" fg:x="158" fg:w="345"/><text x="25.0928%" y="1071.50">main</text></g><g><title>std::rt::lang_start_internal (345 samples, 54.25%)</title><rect x="24.8428%" y="1045" width="54.2453%" height="15" fill="rgb(240,216,3)" fg:x="158" fg:w="345"/><text x="25.0928%" y="1055.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (345 samples, 54.25%)</title><rect x="24.8428%" y="1029" width="54.2453%" height="15" fill="rgb(232,218,17)" fg:x="158" fg:w="345"/><text x="25.0928%" y="1039.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (345 samples, 54.25%)</title><rect x="24.8428%" y="1013" width="54.2453%" height="15" fill="rgb(229,163,45)" fg:x="158" fg:w="345"/><text x="25.0928%" y="1023.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (345 samples, 54.25%)</title><rect x="24.8428%" y="997" width="54.2453%" height="15" fill="rgb(231,110,42)" fg:x="158" fg:w="345"/><text x="25.0928%" y="1007.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (345 samples, 54.25%)</title><rect x="24.8428%" y="981" width="54.2453%" height="15" fill="rgb(208,170,48)" fg:x="158" fg:w="345"/><text x="25.0928%" y="991.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (345 samples, 54.25%)</title><rect x="24.8428%" y="965" width="54.2453%" height="15" fill="rgb(239,116,25)" fg:x="158" fg:w="345"/><text x="25.0928%" y="975.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (345 samples, 54.25%)</title><rect x="24.8428%" y="949" width="54.2453%" height="15" fill="rgb(219,200,50)" fg:x="158" fg:w="345"/><text x="25.0928%" y="959.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (345 samples, 54.25%)</title><rect x="24.8428%" y="933" width="54.2453%" height="15" fill="rgb(245,200,0)" fg:x="158" fg:w="345"/><text x="25.0928%" y="943.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (345 samples, 54.25%)</title><rect x="24.8428%" y="917" width="54.2453%" height="15" fill="rgb(245,119,33)" fg:x="158" fg:w="345"/><text x="25.0928%" y="927.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (345 samples, 54.25%)</title><rect x="24.8428%" y="901" width="54.2453%" height="15" fill="rgb(231,125,12)" fg:x="158" fg:w="345"/><text x="25.0928%" y="911.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (345 samples, 54.25%)</title><rect x="24.8428%" y="885" width="54.2453%" height="15" fill="rgb(216,96,41)" fg:x="158" fg:w="345"/><text x="25.0928%" y="895.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (345 samples, 54.25%)</title><rect x="24.8428%" y="869" width="54.2453%" height="15" fill="rgb(248,43,45)" fg:x="158" fg:w="345"/><text x="25.0928%" y="879.50">core::ops::function::FnOnce::call_once</text></g><g><title>demoparser::main (345 samples, 54.25%)</title><rect x="24.8428%" y="853" width="54.2453%" height="15" fill="rgb(217,222,7)" fg:x="158" fg:w="345"/><text x="25.0928%" y="863.50">demoparser::main</text></g><g><title>rayon_core::ThreadPoolBuilder&lt;S&gt;::build_global (6 samples, 0.94%)</title><rect x="78.1447%" y="837" width="0.9434%" height="15" fill="rgb(233,28,6)" fg:x="497" fg:w="6"/><text x="78.3947%" y="847.50"></text></g><g><title>rayon_core::registry::init_global_registry (6 samples, 0.94%)</title><rect x="78.1447%" y="821" width="0.9434%" height="15" fill="rgb(231,218,15)" fg:x="497" fg:w="6"/><text x="78.3947%" y="831.50"></text></g><g><title>rayon_core::registry::set_global_registry (6 samples, 0.94%)</title><rect x="78.1447%" y="805" width="0.9434%" height="15" fill="rgb(226,171,48)" fg:x="497" fg:w="6"/><text x="78.3947%" y="815.50"></text></g><g><title>std::sync::once::Once::call_once (6 samples, 0.94%)</title><rect x="78.1447%" y="789" width="0.9434%" height="15" fill="rgb(235,201,9)" fg:x="497" fg:w="6"/><text x="78.3947%" y="799.50"></text></g><g><title>std::sys_common::once::futex::Once::call (6 samples, 0.94%)</title><rect x="78.1447%" y="773" width="0.9434%" height="15" fill="rgb(217,80,15)" fg:x="497" fg:w="6"/><text x="78.3947%" y="783.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (6 samples, 0.94%)</title><rect x="78.1447%" y="757" width="0.9434%" height="15" fill="rgb(219,152,8)" fg:x="497" fg:w="6"/><text x="78.3947%" y="767.50"></text></g><g><title>rayon_core::registry::set_global_registry::{{closure}} (6 samples, 0.94%)</title><rect x="78.1447%" y="741" width="0.9434%" height="15" fill="rgb(243,107,38)" fg:x="497" fg:w="6"/><text x="78.3947%" y="751.50"></text></g><g><title>rayon_core::registry::init_global_registry::{{closure}} (6 samples, 0.94%)</title><rect x="78.1447%" y="725" width="0.9434%" height="15" fill="rgb(231,17,5)" fg:x="497" fg:w="6"/><text x="78.3947%" y="735.50"></text></g><g><title>rayon_core::registry::Registry::new (6 samples, 0.94%)</title><rect x="78.1447%" y="709" width="0.9434%" height="15" fill="rgb(209,25,54)" fg:x="497" fg:w="6"/><text x="78.3947%" y="719.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn (6 samples, 0.94%)</title><rect x="78.1447%" y="693" width="0.9434%" height="15" fill="rgb(219,0,2)" fg:x="497" fg:w="6"/><text x="78.3947%" y="703.50"></text></g><g><title>std::thread::Builder::spawn (6 samples, 0.94%)</title><rect x="78.1447%" y="677" width="0.9434%" height="15" fill="rgb(246,9,5)" fg:x="497" fg:w="6"/><text x="78.3947%" y="687.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (6 samples, 0.94%)</title><rect x="78.1447%" y="661" width="0.9434%" height="15" fill="rgb(226,159,4)" fg:x="497" fg:w="6"/><text x="78.3947%" y="671.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (6 samples, 0.94%)</title><rect x="78.1447%" y="645" width="0.9434%" height="15" fill="rgb(219,175,34)" fg:x="497" fg:w="6"/><text x="78.3947%" y="655.50"></text></g><g><title>std::sys::unix::thread::Thread::new (6 samples, 0.94%)</title><rect x="78.1447%" y="629" width="0.9434%" height="15" fill="rgb(236,10,46)" fg:x="497" fg:w="6"/><text x="78.3947%" y="639.50"></text></g><g><title>__pthread_create_2_1 (6 samples, 0.94%)</title><rect x="78.1447%" y="613" width="0.9434%" height="15" fill="rgb(240,211,16)" fg:x="497" fg:w="6"/><text x="78.3947%" y="623.50"></text></g><g><title>allocate_stack (6 samples, 0.94%)</title><rect x="78.1447%" y="597" width="0.9434%" height="15" fill="rgb(205,3,43)" fg:x="497" fg:w="6"/><text x="78.3947%" y="607.50"></text></g><g><title>__GI___mmap64 (6 samples, 0.94%)</title><rect x="78.1447%" y="581" width="0.9434%" height="15" fill="rgb(245,7,22)" fg:x="497" fg:w="6"/><text x="78.3947%" y="591.50"></text></g><g><title>__GI___mmap64 (6 samples, 0.94%)</title><rect x="78.1447%" y="565" width="0.9434%" height="15" fill="rgb(239,132,32)" fg:x="497" fg:w="6"/><text x="78.3947%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.94%)</title><rect x="78.1447%" y="549" width="0.9434%" height="15" fill="rgb(228,202,34)" fg:x="497" fg:w="6"/><text x="78.3947%" y="559.50"></text></g><g><title>do_syscall_64 (6 samples, 0.94%)</title><rect x="78.1447%" y="533" width="0.9434%" height="15" fill="rgb(254,200,22)" fg:x="497" fg:w="6"/><text x="78.3947%" y="543.50"></text></g><g><title>__x64_sys_mmap (6 samples, 0.94%)</title><rect x="78.1447%" y="517" width="0.9434%" height="15" fill="rgb(219,10,39)" fg:x="497" fg:w="6"/><text x="78.3947%" y="527.50"></text></g><g><title>ksys_mmap_pgoff (6 samples, 0.94%)</title><rect x="78.1447%" y="501" width="0.9434%" height="15" fill="rgb(226,210,39)" fg:x="497" fg:w="6"/><text x="78.3947%" y="511.50"></text></g><g><title>vm_mmap_pgoff (6 samples, 0.94%)</title><rect x="78.1447%" y="485" width="0.9434%" height="15" fill="rgb(208,219,16)" fg:x="497" fg:w="6"/><text x="78.3947%" y="495.50"></text></g><g><title>up_write (1 samples, 0.16%)</title><rect x="78.9308%" y="469" width="0.1572%" height="15" fill="rgb(216,158,51)" fg:x="502" fg:w="1"/><text x="79.1808%" y="479.50"></text></g><g><title>rwsem_wake.isra.0 (1 samples, 0.16%)</title><rect x="78.9308%" y="453" width="0.1572%" height="15" fill="rgb(233,14,44)" fg:x="502" fg:w="1"/><text x="79.1808%" y="463.50"></text></g><g><title>rwsem_mark_wake (1 samples, 0.16%)</title><rect x="78.9308%" y="437" width="0.1572%" height="15" fill="rgb(237,97,39)" fg:x="502" fg:w="1"/><text x="79.1808%" y="447.50"></text></g><g><title>_raw_spin_lock_irq (1 samples, 0.16%)</title><rect x="81.6038%" y="1029" width="0.1572%" height="15" fill="rgb(218,198,43)" fg:x="519" fg:w="1"/><text x="81.8538%" y="1039.50"></text></g><g><title>native_queued_spin_lock_slowpath (1 samples, 0.16%)</title><rect x="81.6038%" y="1013" width="0.1572%" height="15" fill="rgb(231,104,20)" fg:x="519" fg:w="1"/><text x="81.8538%" y="1023.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (1 samples, 0.16%)</title><rect x="81.6038%" y="997" width="0.1572%" height="15" fill="rgb(254,36,13)" fg:x="519" fg:w="1"/><text x="81.8538%" y="1007.50"></text></g><g><title>rwsem_mark_wake (1 samples, 0.16%)</title><rect x="81.7610%" y="1029" width="0.1572%" height="15" fill="rgb(248,14,50)" fg:x="520" fg:w="1"/><text x="82.0110%" y="1039.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.16%)</title><rect x="82.8616%" y="933" width="0.1572%" height="15" fill="rgb(217,107,29)" fg:x="527" fg:w="1"/><text x="83.1116%" y="943.50"></text></g><g><title>update_curr (2 samples, 0.31%)</title><rect x="82.8616%" y="949" width="0.3145%" height="15" fill="rgb(251,169,33)" fg:x="527" fg:w="2"/><text x="83.1116%" y="959.50"></text></g><g><title>cpuacct_charge (1 samples, 0.16%)</title><rect x="83.0189%" y="933" width="0.1572%" height="15" fill="rgb(217,108,32)" fg:x="528" fg:w="1"/><text x="83.2689%" y="943.50"></text></g><g><title>dequeue_task (7 samples, 1.10%)</title><rect x="82.2327%" y="997" width="1.1006%" height="15" fill="rgb(219,66,42)" fg:x="523" fg:w="7"/><text x="82.4827%" y="1007.50"></text></g><g><title>dequeue_task_fair (5 samples, 0.79%)</title><rect x="82.5472%" y="981" width="0.7862%" height="15" fill="rgb(206,180,7)" fg:x="525" fg:w="5"/><text x="82.7972%" y="991.50"></text></g><g><title>dequeue_entity (4 samples, 0.63%)</title><rect x="82.7044%" y="965" width="0.6289%" height="15" fill="rgb(208,226,31)" fg:x="526" fg:w="4"/><text x="82.9544%" y="975.50"></text></g><g><title>update_min_vruntime (1 samples, 0.16%)</title><rect x="83.1761%" y="949" width="0.1572%" height="15" fill="rgb(218,26,49)" fg:x="529" fg:w="1"/><text x="83.4261%" y="959.50"></text></g><g><title>load_balance (2 samples, 0.31%)</title><rect x="83.3333%" y="949" width="0.3145%" height="15" fill="rgb(233,197,48)" fg:x="530" fg:w="2"/><text x="83.5833%" y="959.50"></text></g><g><title>find_busiest_group (2 samples, 0.31%)</title><rect x="83.3333%" y="933" width="0.3145%" height="15" fill="rgb(252,181,51)" fg:x="530" fg:w="2"/><text x="83.5833%" y="943.50"></text></g><g><title>update_sd_lb_stats.constprop.0 (2 samples, 0.31%)</title><rect x="83.3333%" y="917" width="0.3145%" height="15" fill="rgb(253,90,19)" fg:x="530" fg:w="2"/><text x="83.5833%" y="927.50"></text></g><g><title>update_sg_lb_stats (2 samples, 0.31%)</title><rect x="83.3333%" y="901" width="0.3145%" height="15" fill="rgb(215,171,30)" fg:x="530" fg:w="2"/><text x="83.5833%" y="911.50"></text></g><g><title>sugov_update_single_freq (1 samples, 0.16%)</title><rect x="83.6478%" y="933" width="0.1572%" height="15" fill="rgb(214,222,9)" fg:x="532" fg:w="1"/><text x="83.8978%" y="943.50"></text></g><g><title>newidle_balance (4 samples, 0.63%)</title><rect x="83.3333%" y="965" width="0.6289%" height="15" fill="rgb(223,3,22)" fg:x="530" fg:w="4"/><text x="83.5833%" y="975.50"></text></g><g><title>update_blocked_averages (2 samples, 0.31%)</title><rect x="83.6478%" y="949" width="0.3145%" height="15" fill="rgb(225,196,46)" fg:x="532" fg:w="2"/><text x="83.8978%" y="959.50"></text></g><g><title>update_rt_rq_load_avg (1 samples, 0.16%)</title><rect x="83.8050%" y="933" width="0.1572%" height="15" fill="rgb(209,110,37)" fg:x="533" fg:w="1"/><text x="84.0550%" y="943.50"></text></g><g><title>pick_next_task_fair (5 samples, 0.79%)</title><rect x="83.3333%" y="981" width="0.7862%" height="15" fill="rgb(249,89,12)" fg:x="530" fg:w="5"/><text x="83.5833%" y="991.50"></text></g><g><title>update_curr (1 samples, 0.16%)</title><rect x="83.9623%" y="965" width="0.1572%" height="15" fill="rgb(226,27,33)" fg:x="534" fg:w="1"/><text x="84.2123%" y="975.50"></text></g><g><title>pick_next_task (6 samples, 0.94%)</title><rect x="83.3333%" y="997" width="0.9434%" height="15" fill="rgb(213,82,22)" fg:x="530" fg:w="6"/><text x="83.5833%" y="1007.50"></text></g><g><title>put_prev_task_fair (1 samples, 0.16%)</title><rect x="84.1195%" y="981" width="0.1572%" height="15" fill="rgb(248,140,0)" fg:x="535" fg:w="1"/><text x="84.3695%" y="991.50"></text></g><g><title>put_prev_entity (1 samples, 0.16%)</title><rect x="84.1195%" y="965" width="0.1572%" height="15" fill="rgb(228,106,3)" fg:x="535" fg:w="1"/><text x="84.3695%" y="975.50"></text></g><g><title>amd_pmu_check_overflow (1 samples, 0.16%)</title><rect x="84.2767%" y="917" width="0.1572%" height="15" fill="rgb(209,23,37)" fg:x="536" fg:w="1"/><text x="84.5267%" y="927.50"></text></g><g><title>amd_pmu_test_overflow_topbit (1 samples, 0.16%)</title><rect x="84.2767%" y="901" width="0.1572%" height="15" fill="rgb(241,93,50)" fg:x="536" fg:w="1"/><text x="84.5267%" y="911.50"></text></g><g><title>native_read_msr (1 samples, 0.16%)</title><rect x="84.2767%" y="885" width="0.1572%" height="15" fill="rgb(253,46,43)" fg:x="536" fg:w="1"/><text x="84.5267%" y="895.50"></text></g><g><title>native_write_msr (2 samples, 0.31%)</title><rect x="84.4340%" y="917" width="0.3145%" height="15" fill="rgb(226,206,43)" fg:x="537" fg:w="2"/><text x="84.6840%" y="927.50"></text></g><g><title>prepare_task_switch (4 samples, 0.63%)</title><rect x="84.2767%" y="997" width="0.6289%" height="15" fill="rgb(217,54,7)" fg:x="536" fg:w="4"/><text x="84.5267%" y="1007.50"></text></g><g><title>__perf_event_task_sched_out (4 samples, 0.63%)</title><rect x="84.2767%" y="981" width="0.6289%" height="15" fill="rgb(223,5,52)" fg:x="536" fg:w="4"/><text x="84.5267%" y="991.50"></text></g><g><title>perf_event_context_sched_out (4 samples, 0.63%)</title><rect x="84.2767%" y="965" width="0.6289%" height="15" fill="rgb(206,52,46)" fg:x="536" fg:w="4"/><text x="84.5267%" y="975.50"></text></g><g><title>x86_pmu_disable (4 samples, 0.63%)</title><rect x="84.2767%" y="949" width="0.6289%" height="15" fill="rgb(253,136,11)" fg:x="536" fg:w="4"/><text x="84.5267%" y="959.50"></text></g><g><title>amd_pmu_disable_all (4 samples, 0.63%)</title><rect x="84.2767%" y="933" width="0.6289%" height="15" fill="rgb(208,106,33)" fg:x="536" fg:w="4"/><text x="84.5267%" y="943.50"></text></g><g><title>x86_pmu_disable_all (1 samples, 0.16%)</title><rect x="84.7484%" y="917" width="0.1572%" height="15" fill="rgb(206,54,4)" fg:x="539" fg:w="1"/><text x="84.9984%" y="927.50"></text></g><g><title>native_read_msr (1 samples, 0.16%)</title><rect x="84.7484%" y="901" width="0.1572%" height="15" fill="rgb(213,3,15)" fg:x="539" fg:w="1"/><text x="84.9984%" y="911.50"></text></g><g><title>psi_task_switch (4 samples, 0.63%)</title><rect x="84.9057%" y="997" width="0.6289%" height="15" fill="rgb(252,211,39)" fg:x="540" fg:w="4"/><text x="85.1557%" y="1007.50"></text></g><g><title>psi_group_change (3 samples, 0.47%)</title><rect x="85.0629%" y="981" width="0.4717%" height="15" fill="rgb(223,6,36)" fg:x="541" fg:w="3"/><text x="85.3129%" y="991.50"></text></g><g><title>down_read (31 samples, 4.87%)</title><rect x="80.8176%" y="1061" width="4.8742%" height="15" fill="rgb(252,169,45)" fg:x="514" fg:w="31"/><text x="81.0676%" y="1071.50">down_r..</text></g><g><title>rwsem_down_read_slowpath (28 samples, 4.40%)</title><rect x="81.2893%" y="1045" width="4.4025%" height="15" fill="rgb(212,48,26)" fg:x="517" fg:w="28"/><text x="81.5393%" y="1055.50">rwsem..</text></g><g><title>schedule (24 samples, 3.77%)</title><rect x="81.9182%" y="1029" width="3.7736%" height="15" fill="rgb(251,102,48)" fg:x="521" fg:w="24"/><text x="82.1682%" y="1039.50">sche..</text></g><g><title>__schedule (24 samples, 3.77%)</title><rect x="81.9182%" y="1013" width="3.7736%" height="15" fill="rgb(243,208,16)" fg:x="521" fg:w="24"/><text x="82.1682%" y="1023.50">__sc..</text></g><g><title>update_rq_clock (1 samples, 0.16%)</title><rect x="85.5346%" y="997" width="0.1572%" height="15" fill="rgb(219,96,24)" fg:x="544" fg:w="1"/><text x="85.7846%" y="1007.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.16%)</title><rect x="85.5346%" y="981" width="0.1572%" height="15" fill="rgb(219,33,29)" fg:x="544" fg:w="1"/><text x="85.7846%" y="991.50"></text></g><g><title>sched_clock (1 samples, 0.16%)</title><rect x="85.5346%" y="965" width="0.1572%" height="15" fill="rgb(223,176,5)" fg:x="544" fg:w="1"/><text x="85.7846%" y="975.50"></text></g><g><title>native_sched_clock (1 samples, 0.16%)</title><rect x="85.5346%" y="949" width="0.1572%" height="15" fill="rgb(228,140,14)" fg:x="544" fg:w="1"/><text x="85.7846%" y="959.50"></text></g><g><title>down_read_trylock (1 samples, 0.16%)</title><rect x="85.6918%" y="1061" width="0.1572%" height="15" fill="rgb(217,179,31)" fg:x="545" fg:w="1"/><text x="85.9418%" y="1071.50"></text></g><g><title>find_vma (14 samples, 2.20%)</title><rect x="85.8491%" y="1061" width="2.2013%" height="15" fill="rgb(230,9,30)" fg:x="546" fg:w="14"/><text x="86.0991%" y="1071.50">f..</text></g><g><title>vmacache_find (2 samples, 0.31%)</title><rect x="87.7358%" y="1045" width="0.3145%" height="15" fill="rgb(230,136,20)" fg:x="558" fg:w="2"/><text x="87.9858%" y="1055.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.16%)</title><rect x="88.5220%" y="965" width="0.1572%" height="15" fill="rgb(215,210,22)" fg:x="563" fg:w="1"/><text x="88.7720%" y="975.50"></text></g><g><title>__mem_cgroup_charge (2 samples, 0.31%)</title><rect x="88.5220%" y="997" width="0.3145%" height="15" fill="rgb(218,43,5)" fg:x="563" fg:w="2"/><text x="88.7720%" y="1007.50"></text></g><g><title>charge_memcg (2 samples, 0.31%)</title><rect x="88.5220%" y="981" width="0.3145%" height="15" fill="rgb(216,11,5)" fg:x="563" fg:w="2"/><text x="88.7720%" y="991.50"></text></g><g><title>try_charge_memcg (1 samples, 0.16%)</title><rect x="88.6792%" y="965" width="0.1572%" height="15" fill="rgb(209,82,29)" fg:x="564" fg:w="1"/><text x="88.9292%" y="975.50"></text></g><g><title>page_counter_try_charge (1 samples, 0.16%)</title><rect x="88.6792%" y="949" width="0.1572%" height="15" fill="rgb(244,115,12)" fg:x="564" fg:w="1"/><text x="88.9292%" y="959.50"></text></g><g><title>clear_page_erms (8 samples, 1.26%)</title><rect x="89.1509%" y="933" width="1.2579%" height="15" fill="rgb(222,82,18)" fg:x="567" fg:w="8"/><text x="89.4009%" y="943.50"></text></g><g><title>do_anonymous_page (13 samples, 2.04%)</title><rect x="88.5220%" y="1013" width="2.0440%" height="15" fill="rgb(249,227,8)" fg:x="563" fg:w="13"/><text x="88.7720%" y="1023.50">d..</text></g><g><title>vma_alloc_folio (11 samples, 1.73%)</title><rect x="88.8365%" y="997" width="1.7296%" height="15" fill="rgb(253,141,45)" fg:x="565" fg:w="11"/><text x="89.0865%" y="1007.50"></text></g><g><title>__folio_alloc (10 samples, 1.57%)</title><rect x="88.9937%" y="981" width="1.5723%" height="15" fill="rgb(234,184,4)" fg:x="566" fg:w="10"/><text x="89.2437%" y="991.50"></text></g><g><title>__alloc_pages (10 samples, 1.57%)</title><rect x="88.9937%" y="965" width="1.5723%" height="15" fill="rgb(218,194,23)" fg:x="566" fg:w="10"/><text x="89.2437%" y="975.50"></text></g><g><title>get_page_from_freelist (9 samples, 1.42%)</title><rect x="89.1509%" y="949" width="1.4151%" height="15" fill="rgb(235,66,41)" fg:x="567" fg:w="9"/><text x="89.4009%" y="959.50"></text></g><g><title>rmqueue (1 samples, 0.16%)</title><rect x="90.4088%" y="933" width="0.1572%" height="15" fill="rgb(245,217,1)" fg:x="575" fg:w="1"/><text x="90.6588%" y="943.50"></text></g><g><title>rmqueue_pcplist.constprop.0 (1 samples, 0.16%)</title><rect x="90.4088%" y="917" width="0.1572%" height="15" fill="rgb(229,91,1)" fg:x="575" fg:w="1"/><text x="90.6588%" y="927.50"></text></g><g><title>__handle_mm_fault (16 samples, 2.52%)</title><rect x="88.2075%" y="1045" width="2.5157%" height="15" fill="rgb(207,101,30)" fg:x="561" fg:w="16"/><text x="88.4575%" y="1055.50">__..</text></g><g><title>handle_pte_fault (15 samples, 2.36%)</title><rect x="88.3648%" y="1029" width="2.3585%" height="15" fill="rgb(223,82,49)" fg:x="562" fg:w="15"/><text x="88.6148%" y="1039.50">h..</text></g><g><title>vma_alloc_folio (1 samples, 0.16%)</title><rect x="90.5660%" y="1013" width="0.1572%" height="15" fill="rgb(218,167,17)" fg:x="576" fg:w="1"/><text x="90.8160%" y="1023.50"></text></g><g><title>count_memcg_events.constprop.0 (4 samples, 0.63%)</title><rect x="90.7233%" y="1045" width="0.6289%" height="15" fill="rgb(208,103,14)" fg:x="577" fg:w="4"/><text x="90.9733%" y="1055.50"></text></g><g><title>__count_memcg_events (4 samples, 0.63%)</title><rect x="90.7233%" y="1029" width="0.6289%" height="15" fill="rgb(238,20,8)" fg:x="577" fg:w="4"/><text x="90.9733%" y="1039.50"></text></g><g><title>cgroup_rstat_updated (4 samples, 0.63%)</title><rect x="90.7233%" y="1013" width="0.6289%" height="15" fill="rgb(218,80,54)" fg:x="577" fg:w="4"/><text x="90.9733%" y="1023.50"></text></g><g><title>mem_cgroup_from_task (1 samples, 0.16%)</title><rect x="91.3522%" y="1045" width="0.1572%" height="15" fill="rgb(240,144,17)" fg:x="581" fg:w="1"/><text x="91.6022%" y="1055.50"></text></g><g><title>do_user_addr_fault (69 samples, 10.85%)</title><rect x="80.8176%" y="1077" width="10.8491%" height="15" fill="rgb(245,27,50)" fg:x="514" fg:w="69"/><text x="81.0676%" y="1087.50">do_user_addr_fau..</text></g><g><title>handle_mm_fault (23 samples, 3.62%)</title><rect x="88.0503%" y="1061" width="3.6164%" height="15" fill="rgb(251,51,7)" fg:x="560" fg:w="23"/><text x="88.3003%" y="1071.50">hand..</text></g><g><title>pud_val (1 samples, 0.16%)</title><rect x="91.5094%" y="1045" width="0.1572%" height="15" fill="rgb(245,217,29)" fg:x="582" fg:w="1"/><text x="91.7594%" y="1055.50"></text></g><g><title>asm_exc_page_fault (82 samples, 12.89%)</title><rect x="79.0881%" y="1109" width="12.8931%" height="15" fill="rgb(221,176,29)" fg:x="503" fg:w="82"/><text x="79.3381%" y="1119.50">asm_exc_page_fault</text></g><g><title>exc_page_fault (71 samples, 11.16%)</title><rect x="80.8176%" y="1093" width="11.1635%" height="15" fill="rgb(212,180,24)" fg:x="514" fg:w="71"/><text x="81.0676%" y="1103.50">exc_page_fault</text></g><g><title>down_read_trylock (2 samples, 0.31%)</title><rect x="91.6667%" y="1077" width="0.3145%" height="15" fill="rgb(254,24,2)" fg:x="583" fg:w="2"/><text x="91.9167%" y="1087.50"></text></g><g><title>begin_new_exec (1 samples, 0.16%)</title><rect x="91.9811%" y="965" width="0.1572%" height="15" fill="rgb(230,100,2)" fg:x="585" fg:w="1"/><text x="92.2311%" y="975.50"></text></g><g><title>__set_task_comm (1 samples, 0.16%)</title><rect x="91.9811%" y="949" width="0.1572%" height="15" fill="rgb(219,142,25)" fg:x="585" fg:w="1"/><text x="92.2311%" y="959.50"></text></g><g><title>perf_event_comm (1 samples, 0.16%)</title><rect x="91.9811%" y="933" width="0.1572%" height="15" fill="rgb(240,73,43)" fg:x="585" fg:w="1"/><text x="92.2311%" y="943.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.16%)</title><rect x="91.9811%" y="917" width="0.1572%" height="15" fill="rgb(214,114,15)" fg:x="585" fg:w="1"/><text x="92.2311%" y="927.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.16%)</title><rect x="91.9811%" y="901" width="0.1572%" height="15" fill="rgb(207,130,4)" fg:x="585" fg:w="1"/><text x="92.2311%" y="911.50"></text></g><g><title>perf_event_comm_output (1 samples, 0.16%)</title><rect x="91.9811%" y="885" width="0.1572%" height="15" fill="rgb(221,25,40)" fg:x="585" fg:w="1"/><text x="92.2311%" y="895.50"></text></g><g><title>__perf_event__output_id_sample (1 samples, 0.16%)</title><rect x="91.9811%" y="869" width="0.1572%" height="15" fill="rgb(241,184,7)" fg:x="585" fg:w="1"/><text x="92.2311%" y="879.50"></text></g><g><title>perf_output_copy (1 samples, 0.16%)</title><rect x="91.9811%" y="853" width="0.1572%" height="15" fill="rgb(235,159,4)" fg:x="585" fg:w="1"/><text x="92.2311%" y="863.50"></text></g><g><title>__x64_sys_execve (2 samples, 0.31%)</title><rect x="91.9811%" y="1077" width="0.3145%" height="15" fill="rgb(214,87,48)" fg:x="585" fg:w="2"/><text x="92.2311%" y="1087.50"></text></g><g><title>do_execveat_common.isra.0 (2 samples, 0.31%)</title><rect x="91.9811%" y="1061" width="0.3145%" height="15" fill="rgb(246,198,24)" fg:x="585" fg:w="2"/><text x="92.2311%" y="1071.50"></text></g><g><title>bprm_execve (2 samples, 0.31%)</title><rect x="91.9811%" y="1045" width="0.3145%" height="15" fill="rgb(209,66,40)" fg:x="585" fg:w="2"/><text x="92.2311%" y="1055.50"></text></g><g><title>bprm_execve.part.0 (2 samples, 0.31%)</title><rect x="91.9811%" y="1029" width="0.3145%" height="15" fill="rgb(233,147,39)" fg:x="585" fg:w="2"/><text x="92.2311%" y="1039.50"></text></g><g><title>exec_binprm (2 samples, 0.31%)</title><rect x="91.9811%" y="1013" width="0.3145%" height="15" fill="rgb(231,145,52)" fg:x="585" fg:w="2"/><text x="92.2311%" y="1023.50"></text></g><g><title>search_binary_handler (2 samples, 0.31%)</title><rect x="91.9811%" y="997" width="0.3145%" height="15" fill="rgb(206,20,26)" fg:x="585" fg:w="2"/><text x="92.2311%" y="1007.50"></text></g><g><title>load_elf_binary (2 samples, 0.31%)</title><rect x="91.9811%" y="981" width="0.3145%" height="15" fill="rgb(238,220,4)" fg:x="585" fg:w="2"/><text x="92.2311%" y="991.50"></text></g><g><title>load_elf_interp.constprop.0 (1 samples, 0.16%)</title><rect x="92.1384%" y="965" width="0.1572%" height="15" fill="rgb(252,195,42)" fg:x="586" fg:w="1"/><text x="92.3884%" y="975.50"></text></g><g><title>clear_user (1 samples, 0.16%)</title><rect x="92.1384%" y="949" width="0.1572%" height="15" fill="rgb(209,10,6)" fg:x="586" fg:w="1"/><text x="92.3884%" y="959.50"></text></g><g><title>__clear_user (1 samples, 0.16%)</title><rect x="92.1384%" y="933" width="0.1572%" height="15" fill="rgb(229,3,52)" fg:x="586" fg:w="1"/><text x="92.3884%" y="943.50"></text></g><g><title>__tlb_remove_page_size (1 samples, 0.16%)</title><rect x="92.2956%" y="837" width="0.1572%" height="15" fill="rgb(253,49,37)" fg:x="587" fg:w="1"/><text x="92.5456%" y="847.50"></text></g><g><title>__get_free_pages (1 samples, 0.16%)</title><rect x="92.2956%" y="821" width="0.1572%" height="15" fill="rgb(240,103,49)" fg:x="587" fg:w="1"/><text x="92.5456%" y="831.50"></text></g><g><title>alloc_pages (1 samples, 0.16%)</title><rect x="92.2956%" y="805" width="0.1572%" height="15" fill="rgb(250,182,30)" fg:x="587" fg:w="1"/><text x="92.5456%" y="815.50"></text></g><g><title>__alloc_pages (1 samples, 0.16%)</title><rect x="92.2956%" y="789" width="0.1572%" height="15" fill="rgb(248,8,30)" fg:x="587" fg:w="1"/><text x="92.5456%" y="799.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.16%)</title><rect x="92.2956%" y="773" width="0.1572%" height="15" fill="rgb(237,120,30)" fg:x="587" fg:w="1"/><text x="92.5456%" y="783.50"></text></g><g><title>clear_page_erms (1 samples, 0.16%)</title><rect x="92.2956%" y="757" width="0.1572%" height="15" fill="rgb(221,146,34)" fg:x="587" fg:w="1"/><text x="92.5456%" y="767.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.63%)</title><rect x="91.9811%" y="1109" width="0.6289%" height="15" fill="rgb(242,55,13)" fg:x="585" fg:w="4"/><text x="92.2311%" y="1119.50"></text></g><g><title>do_syscall_64 (4 samples, 0.63%)</title><rect x="91.9811%" y="1093" width="0.6289%" height="15" fill="rgb(242,112,31)" fg:x="585" fg:w="4"/><text x="92.2311%" y="1103.50"></text></g><g><title>syscall_exit_to_user_mode (2 samples, 0.31%)</title><rect x="92.2956%" y="1077" width="0.3145%" height="15" fill="rgb(249,192,27)" fg:x="587" fg:w="2"/><text x="92.5456%" y="1087.50"></text></g><g><title>exit_to_user_mode_prepare (2 samples, 0.31%)</title><rect x="92.2956%" y="1061" width="0.3145%" height="15" fill="rgb(208,204,44)" fg:x="587" fg:w="2"/><text x="92.5456%" y="1071.50"></text></g><g><title>exit_to_user_mode_loop (2 samples, 0.31%)</title><rect x="92.2956%" y="1045" width="0.3145%" height="15" fill="rgb(208,93,54)" fg:x="587" fg:w="2"/><text x="92.5456%" y="1055.50"></text></g><g><title>arch_do_signal_or_restart (2 samples, 0.31%)</title><rect x="92.2956%" y="1029" width="0.3145%" height="15" fill="rgb(242,1,31)" fg:x="587" fg:w="2"/><text x="92.5456%" y="1039.50"></text></g><g><title>get_signal (2 samples, 0.31%)</title><rect x="92.2956%" y="1013" width="0.3145%" height="15" fill="rgb(241,83,25)" fg:x="587" fg:w="2"/><text x="92.5456%" y="1023.50"></text></g><g><title>do_group_exit (2 samples, 0.31%)</title><rect x="92.2956%" y="997" width="0.3145%" height="15" fill="rgb(205,169,50)" fg:x="587" fg:w="2"/><text x="92.5456%" y="1007.50"></text></g><g><title>do_exit (2 samples, 0.31%)</title><rect x="92.2956%" y="981" width="0.3145%" height="15" fill="rgb(239,186,37)" fg:x="587" fg:w="2"/><text x="92.5456%" y="991.50"></text></g><g><title>exit_mm (2 samples, 0.31%)</title><rect x="92.2956%" y="965" width="0.3145%" height="15" fill="rgb(205,221,10)" fg:x="587" fg:w="2"/><text x="92.5456%" y="975.50"></text></g><g><title>mmput (2 samples, 0.31%)</title><rect x="92.2956%" y="949" width="0.3145%" height="15" fill="rgb(218,196,15)" fg:x="587" fg:w="2"/><text x="92.5456%" y="959.50"></text></g><g><title>exit_mmap (2 samples, 0.31%)</title><rect x="92.2956%" y="933" width="0.3145%" height="15" fill="rgb(218,196,35)" fg:x="587" fg:w="2"/><text x="92.5456%" y="943.50"></text></g><g><title>unmap_vmas (2 samples, 0.31%)</title><rect x="92.2956%" y="917" width="0.3145%" height="15" fill="rgb(233,63,24)" fg:x="587" fg:w="2"/><text x="92.5456%" y="927.50"></text></g><g><title>unmap_single_vma (2 samples, 0.31%)</title><rect x="92.2956%" y="901" width="0.3145%" height="15" fill="rgb(225,8,4)" fg:x="587" fg:w="2"/><text x="92.5456%" y="911.50"></text></g><g><title>unmap_page_range (2 samples, 0.31%)</title><rect x="92.2956%" y="885" width="0.3145%" height="15" fill="rgb(234,105,35)" fg:x="587" fg:w="2"/><text x="92.5456%" y="895.50"></text></g><g><title>zap_pmd_range.isra.0 (2 samples, 0.31%)</title><rect x="92.2956%" y="869" width="0.3145%" height="15" fill="rgb(236,21,32)" fg:x="587" fg:w="2"/><text x="92.5456%" y="879.50"></text></g><g><title>zap_pte_range (2 samples, 0.31%)</title><rect x="92.2956%" y="853" width="0.3145%" height="15" fill="rgb(228,109,6)" fg:x="587" fg:w="2"/><text x="92.5456%" y="863.50"></text></g><g><title>tlb_flush_mmu (1 samples, 0.16%)</title><rect x="92.4528%" y="837" width="0.1572%" height="15" fill="rgb(229,215,31)" fg:x="588" fg:w="1"/><text x="92.7028%" y="847.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.16%)</title><rect x="92.4528%" y="821" width="0.1572%" height="15" fill="rgb(221,52,54)" fg:x="588" fg:w="1"/><text x="92.7028%" y="831.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.16%)</title><rect x="92.4528%" y="805" width="0.1572%" height="15" fill="rgb(252,129,43)" fg:x="588" fg:w="1"/><text x="92.7028%" y="815.50"></text></g><g><title>release_pages (1 samples, 0.16%)</title><rect x="92.4528%" y="789" width="0.1572%" height="15" fill="rgb(248,183,27)" fg:x="588" fg:w="1"/><text x="92.7028%" y="799.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.16%)</title><rect x="92.4528%" y="773" width="0.1572%" height="15" fill="rgb(250,0,22)" fg:x="588" fg:w="1"/><text x="92.7028%" y="783.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (1 samples, 0.16%)</title><rect x="92.6101%" y="1109" width="0.1572%" height="15" fill="rgb(213,166,10)" fg:x="589" fg:w="1"/><text x="92.8601%" y="1119.50"></text></g><g><title>exit_to_user_mode_loop (10 samples, 1.57%)</title><rect x="93.2390%" y="1061" width="1.5723%" height="15" fill="rgb(207,163,36)" fg:x="593" fg:w="10"/><text x="93.4890%" y="1071.50"></text></g><g><title>blkcg_maybe_throttle_current (4 samples, 0.63%)</title><rect x="94.1824%" y="1045" width="0.6289%" height="15" fill="rgb(208,122,22)" fg:x="599" fg:w="4"/><text x="94.4324%" y="1055.50"></text></g><g><title>restore_fpregs_from_fpstate (1 samples, 0.16%)</title><rect x="94.8113%" y="1061" width="0.1572%" height="15" fill="rgb(207,104,49)" fg:x="603" fg:w="1"/><text x="95.0613%" y="1071.50"></text></g><g><title>restore_fpregs_from_fpstate (24 samples, 3.77%)</title><rect x="94.9686%" y="1045" width="3.7736%" height="15" fill="rgb(248,211,50)" fg:x="604" fg:w="24"/><text x="95.2186%" y="1055.50">rest..</text></g><g><title>ret_from_fork (39 samples, 6.13%)</title><rect x="92.7673%" y="1109" width="6.1321%" height="15" fill="rgb(217,13,45)" fg:x="590" fg:w="39"/><text x="93.0173%" y="1119.50">ret_from..</text></g><g><title>syscall_exit_to_user_mode (39 samples, 6.13%)</title><rect x="92.7673%" y="1093" width="6.1321%" height="15" fill="rgb(211,216,49)" fg:x="590" fg:w="39"/><text x="93.0173%" y="1103.50">syscall_..</text></g><g><title>exit_to_user_mode_prepare (39 samples, 6.13%)</title><rect x="92.7673%" y="1077" width="6.1321%" height="15" fill="rgb(221,58,53)" fg:x="590" fg:w="39"/><text x="93.0173%" y="1087.50">exit_to_..</text></g><g><title>switch_fpu_return (25 samples, 3.93%)</title><rect x="94.9686%" y="1061" width="3.9308%" height="15" fill="rgb(220,112,41)" fg:x="604" fg:w="25"/><text x="95.2186%" y="1071.50">swit..</text></g><g><title>xfd_validate_state (1 samples, 0.16%)</title><rect x="98.7421%" y="1045" width="0.1572%" height="15" fill="rgb(236,38,28)" fg:x="628" fg:w="1"/><text x="98.9921%" y="1055.50"></text></g><g><title>demoparser (631 samples, 99.21%)</title><rect x="0.0000%" y="1125" width="99.2138%" height="15" fill="rgb(227,195,22)" fg:x="0" fg:w="631"/><text x="0.2500%" y="1135.50">demoparser</text></g><g><title>sync_regs (2 samples, 0.31%)</title><rect x="98.8994%" y="1109" width="0.3145%" height="15" fill="rgb(214,55,33)" fg:x="629" fg:w="2"/><text x="99.1494%" y="1119.50"></text></g><g><title>__set_task_comm (1 samples, 0.16%)</title><rect x="99.2138%" y="949" width="0.1572%" height="15" fill="rgb(248,80,13)" fg:x="631" fg:w="1"/><text x="99.4638%" y="959.50"></text></g><g><title>perf_event_comm (1 samples, 0.16%)</title><rect x="99.2138%" y="933" width="0.1572%" height="15" fill="rgb(238,52,6)" fg:x="631" fg:w="1"/><text x="99.4638%" y="943.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.16%)</title><rect x="99.2138%" y="917" width="0.1572%" height="15" fill="rgb(224,198,47)" fg:x="631" fg:w="1"/><text x="99.4638%" y="927.50"></text></g><g><title>perf_event_enable_on_exec (1 samples, 0.16%)</title><rect x="99.3711%" y="949" width="0.1572%" height="15" fill="rgb(233,171,20)" fg:x="632" fg:w="1"/><text x="99.6211%" y="959.50"></text></g><g><title>begin_new_exec (4 samples, 0.63%)</title><rect x="99.2138%" y="965" width="0.6289%" height="15" fill="rgb(241,30,25)" fg:x="631" fg:w="4"/><text x="99.4638%" y="975.50"></text></g><g><title>perf_event_exec (2 samples, 0.31%)</title><rect x="99.5283%" y="949" width="0.3145%" height="15" fill="rgb(207,171,38)" fg:x="633" fg:w="2"/><text x="99.7783%" y="959.50"></text></g><g><title>perf_iterate_ctx (2 samples, 0.31%)</title><rect x="99.5283%" y="933" width="0.3145%" height="15" fill="rgb(234,70,1)" fg:x="633" fg:w="2"/><text x="99.7783%" y="943.50"></text></g><g><title>perf_event_addr_filters_exec (2 samples, 0.31%)</title><rect x="99.5283%" y="917" width="0.3145%" height="15" fill="rgb(232,178,18)" fg:x="633" fg:w="2"/><text x="99.7783%" y="927.50"></text></g><g><title>all (636 samples, 100%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(241,78,40)" fg:x="0" fg:w="636"/><text x="0.2500%" y="1151.50"></text></g><g><title>perf-exec (5 samples, 0.79%)</title><rect x="99.2138%" y="1125" width="0.7862%" height="15" fill="rgb(222,35,25)" fg:x="631" fg:w="5"/><text x="99.4638%" y="1135.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.79%)</title><rect x="99.2138%" y="1109" width="0.7862%" height="15" fill="rgb(207,92,16)" fg:x="631" fg:w="5"/><text x="99.4638%" y="1119.50"></text></g><g><title>do_syscall_64 (5 samples, 0.79%)</title><rect x="99.2138%" y="1093" width="0.7862%" height="15" fill="rgb(216,59,51)" fg:x="631" fg:w="5"/><text x="99.4638%" y="1103.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.79%)</title><rect x="99.2138%" y="1077" width="0.7862%" height="15" fill="rgb(213,80,28)" fg:x="631" fg:w="5"/><text x="99.4638%" y="1087.50"></text></g><g><title>do_execveat_common.isra.0 (5 samples, 0.79%)</title><rect x="99.2138%" y="1061" width="0.7862%" height="15" fill="rgb(220,93,7)" fg:x="631" fg:w="5"/><text x="99.4638%" y="1071.50"></text></g><g><title>bprm_execve (5 samples, 0.79%)</title><rect x="99.2138%" y="1045" width="0.7862%" height="15" fill="rgb(225,24,44)" fg:x="631" fg:w="5"/><text x="99.4638%" y="1055.50"></text></g><g><title>bprm_execve.part.0 (5 samples, 0.79%)</title><rect x="99.2138%" y="1029" width="0.7862%" height="15" fill="rgb(243,74,40)" fg:x="631" fg:w="5"/><text x="99.4638%" y="1039.50"></text></g><g><title>exec_binprm (5 samples, 0.79%)</title><rect x="99.2138%" y="1013" width="0.7862%" height="15" fill="rgb(228,39,7)" fg:x="631" fg:w="5"/><text x="99.4638%" y="1023.50"></text></g><g><title>search_binary_handler (5 samples, 0.79%)</title><rect x="99.2138%" y="997" width="0.7862%" height="15" fill="rgb(227,79,8)" fg:x="631" fg:w="5"/><text x="99.4638%" y="1007.50"></text></g><g><title>load_elf_binary (5 samples, 0.79%)</title><rect x="99.2138%" y="981" width="0.7862%" height="15" fill="rgb(236,58,11)" fg:x="631" fg:w="5"/><text x="99.4638%" y="991.50"></text></g><g><title>strrchr (1 samples, 0.16%)</title><rect x="99.8428%" y="965" width="0.1572%" height="15" fill="rgb(249,63,35)" fg:x="635" fg:w="1"/><text x="100.0928%" y="975.50"></text></g></svg></svg>