<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1286" onload="init(evt)" viewBox="0 0 1200 1286" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1286" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1269.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1269.00"> </text><svg id="frames" x="10" width="1180" total_samples="1292"><g><title>[demoparser] (1 samples, 0.08%)</title><rect x="0.0000%" y="1205" width="0.0774%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1215.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.08%)</title><rect x="0.0000%" y="1189" width="0.0774%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1199.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.08%)</title><rect x="0.0000%" y="1173" width="0.0774%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1183.50"></text></g><g><title>mi_find_page (1 samples, 0.08%)</title><rect x="0.0000%" y="1157" width="0.0774%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1167.50"></text></g><g><title>mi_find_free_page (1 samples, 0.08%)</title><rect x="0.0000%" y="1141" width="0.0774%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1151.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.08%)</title><rect x="0.0000%" y="1125" width="0.0774%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1135.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.08%)</title><rect x="0.0000%" y="1109" width="0.0774%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1119.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.08%)</title><rect x="0.0000%" y="1093" width="0.0774%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1103.50"></text></g><g><title>mi_page_free_list_extend (1 samples, 0.08%)</title><rect x="0.0000%" y="1077" width="0.0774%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1087.50"></text></g><g><title>mi_block_set_next (1 samples, 0.08%)</title><rect x="0.0000%" y="1061" width="0.0774%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1071.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.08%)</title><rect x="0.0000%" y="1045" width="0.0774%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="0.0000%" y="1029" width="0.0774%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1039.50"></text></g><g><title>[unknown] (46 samples, 3.56%)</title><rect x="0.9288%" y="1189" width="3.5604%" height="15" fill="rgb(216,20,37)" fg:x="12" fg:w="46"/><text x="1.1788%" y="1199.50">[unk..</text></g><g><title>[unknown] (46 samples, 3.56%)</title><rect x="0.9288%" y="1173" width="3.5604%" height="15" fill="rgb(206,188,39)" fg:x="12" fg:w="46"/><text x="1.1788%" y="1183.50">[unk..</text></g><g><title>[unknown] (36 samples, 2.79%)</title><rect x="1.7028%" y="1157" width="2.7864%" height="15" fill="rgb(217,207,13)" fg:x="22" fg:w="36"/><text x="1.9528%" y="1167.50">[u..</text></g><g><title>[unknown] (36 samples, 2.79%)</title><rect x="1.7028%" y="1141" width="2.7864%" height="15" fill="rgb(231,73,38)" fg:x="22" fg:w="36"/><text x="1.9528%" y="1151.50">[u..</text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="4.1022%" y="1125" width="0.3870%" height="15" fill="rgb(225,20,46)" fg:x="53" fg:w="5"/><text x="4.3522%" y="1135.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="4.1022%" y="1109" width="0.3870%" height="15" fill="rgb(210,31,41)" fg:x="53" fg:w="5"/><text x="4.3522%" y="1119.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="4.1022%" y="1093" width="0.3870%" height="15" fill="rgb(221,200,47)" fg:x="53" fg:w="5"/><text x="4.3522%" y="1103.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="4.1022%" y="1077" width="0.3870%" height="15" fill="rgb(226,26,5)" fg:x="53" fg:w="5"/><text x="4.3522%" y="1087.50"></text></g><g><title>[unknown] (4 samples, 0.31%)</title><rect x="4.1796%" y="1061" width="0.3096%" height="15" fill="rgb(249,33,26)" fg:x="54" fg:w="4"/><text x="4.4296%" y="1071.50"></text></g><g><title>[unknown] (4 samples, 0.31%)</title><rect x="4.1796%" y="1045" width="0.3096%" height="15" fill="rgb(235,183,28)" fg:x="54" fg:w="4"/><text x="4.4296%" y="1055.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="4.3344%" y="1029" width="0.1548%" height="15" fill="rgb(221,5,38)" fg:x="56" fg:w="2"/><text x="4.5844%" y="1039.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="4.3344%" y="1013" width="0.1548%" height="15" fill="rgb(247,18,42)" fg:x="56" fg:w="2"/><text x="4.5844%" y="1023.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="4.3344%" y="997" width="0.1548%" height="15" fill="rgb(241,131,45)" fg:x="56" fg:w="2"/><text x="4.5844%" y="1007.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="4.3344%" y="981" width="0.1548%" height="15" fill="rgb(249,31,29)" fg:x="56" fg:w="2"/><text x="4.5844%" y="991.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="4.3344%" y="965" width="0.1548%" height="15" fill="rgb(225,111,53)" fg:x="56" fg:w="2"/><text x="4.5844%" y="975.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="4.3344%" y="949" width="0.1548%" height="15" fill="rgb(238,160,17)" fg:x="56" fg:w="2"/><text x="4.5844%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="4.4118%" y="933" width="0.0774%" height="15" fill="rgb(214,148,48)" fg:x="57" fg:w="1"/><text x="4.6618%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="4.4892%" y="1189" width="0.0774%" height="15" fill="rgb(232,36,49)" fg:x="58" fg:w="1"/><text x="4.7392%" y="1199.50"></text></g><g><title>demoparser::main::{{closure}} (1 samples, 0.08%)</title><rect x="4.4892%" y="1173" width="0.0774%" height="15" fill="rgb(209,103,24)" fg:x="58" fg:w="1"/><text x="4.7392%" y="1183.50"></text></g><g><title>demoparser::parse_demo (1 samples, 0.08%)</title><rect x="4.4892%" y="1157" width="0.0774%" height="15" fill="rgb(229,88,8)" fg:x="58" fg:w="1"/><text x="4.7392%" y="1167.50"></text></g><g><title>demoparser::parsing::parser::Parser::start_parsing (1 samples, 0.08%)</title><rect x="4.4892%" y="1141" width="0.0774%" height="15" fill="rgb(213,181,19)" fg:x="58" fg:w="1"/><text x="4.7392%" y="1151.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (1 samples, 0.08%)</title><rect x="4.4892%" y="1125" width="0.0774%" height="15" fill="rgb(254,191,54)" fg:x="58" fg:w="1"/><text x="4.7392%" y="1135.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_cmd (1 samples, 0.08%)</title><rect x="4.4892%" y="1109" width="0.0774%" height="15" fill="rgb(241,83,37)" fg:x="58" fg:w="1"/><text x="4.7392%" y="1119.50"></text></g><g><title>demoparser::parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_datatable (1 samples, 0.08%)</title><rect x="4.4892%" y="1093" width="0.0774%" height="15" fill="rgb(233,36,39)" fg:x="58" fg:w="1"/><text x="4.7392%" y="1103.50"></text></g><g><title>demoparser::parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::flatten_dt (1 samples, 0.08%)</title><rect x="4.4892%" y="1077" width="0.0774%" height="15" fill="rgb(226,3,54)" fg:x="58" fg:w="1"/><text x="4.7392%" y="1087.50"></text></g><g><title>demoparser::parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.08%)</title><rect x="4.4892%" y="1061" width="0.0774%" height="15" fill="rgb(245,192,40)" fg:x="58" fg:w="1"/><text x="4.7392%" y="1071.50"></text></g><g><title>demoparser::parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.08%)</title><rect x="4.4892%" y="1045" width="0.0774%" height="15" fill="rgb(238,167,29)" fg:x="58" fg:w="1"/><text x="4.7392%" y="1055.50"></text></g><g><title>demoparser::parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.08%)</title><rect x="4.4892%" y="1029" width="0.0774%" height="15" fill="rgb(232,182,51)" fg:x="58" fg:w="1"/><text x="4.7392%" y="1039.50"></text></g><g><title>demoparser::parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.08%)</title><rect x="4.4892%" y="1013" width="0.0774%" height="15" fill="rgb(231,60,39)" fg:x="58" fg:w="1"/><text x="4.7392%" y="1023.50"></text></g><g><title>demoparser::parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.08%)</title><rect x="4.4892%" y="997" width="0.0774%" height="15" fill="rgb(208,69,12)" fg:x="58" fg:w="1"/><text x="4.7392%" y="1007.50"></text></g><g><title>demoparser::parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.08%)</title><rect x="4.4892%" y="981" width="0.0774%" height="15" fill="rgb(235,93,37)" fg:x="58" fg:w="1"/><text x="4.7392%" y="991.50"></text></g><g><title>demoparser::parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.08%)</title><rect x="4.4892%" y="965" width="0.0774%" height="15" fill="rgb(213,116,39)" fg:x="58" fg:w="1"/><text x="4.7392%" y="975.50"></text></g><g><title>demoparser::parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.08%)</title><rect x="4.4892%" y="949" width="0.0774%" height="15" fill="rgb(222,207,29)" fg:x="58" fg:w="1"/><text x="4.7392%" y="959.50"></text></g><g><title>demoparser::parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.08%)</title><rect x="4.4892%" y="933" width="0.0774%" height="15" fill="rgb(206,96,30)" fg:x="58" fg:w="1"/><text x="4.7392%" y="943.50"></text></g><g><title>demoparser::parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.08%)</title><rect x="4.4892%" y="917" width="0.0774%" height="15" fill="rgb(218,138,4)" fg:x="58" fg:w="1"/><text x="4.7392%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.08%)</title><rect x="4.4892%" y="901" width="0.0774%" height="15" fill="rgb(250,191,14)" fg:x="58" fg:w="1"/><text x="4.7392%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="4.4892%" y="885" width="0.0774%" height="15" fill="rgb(239,60,40)" fg:x="58" fg:w="1"/><text x="4.7392%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="4.4892%" y="869" width="0.0774%" height="15" fill="rgb(206,27,48)" fg:x="58" fg:w="1"/><text x="4.7392%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.4892%" y="853" width="0.0774%" height="15" fill="rgb(225,35,8)" fg:x="58" fg:w="1"/><text x="4.7392%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="4.4892%" y="837" width="0.0774%" height="15" fill="rgb(250,213,24)" fg:x="58" fg:w="1"/><text x="4.7392%" y="847.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="4.4892%" y="821" width="0.0774%" height="15" fill="rgb(247,123,22)" fg:x="58" fg:w="1"/><text x="4.7392%" y="831.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="4.4892%" y="805" width="0.0774%" height="15" fill="rgb(231,138,38)" fg:x="58" fg:w="1"/><text x="4.7392%" y="815.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.08%)</title><rect x="4.4892%" y="789" width="0.0774%" height="15" fill="rgb(231,145,46)" fg:x="58" fg:w="1"/><text x="4.7392%" y="799.50"></text></g><g><title>_mi_memcpy_aligned (1 samples, 0.08%)</title><rect x="4.4892%" y="773" width="0.0774%" height="15" fill="rgb(251,118,11)" fg:x="58" fg:w="1"/><text x="4.7392%" y="783.50"></text></g><g><title>_mi_memcpy (1 samples, 0.08%)</title><rect x="4.4892%" y="757" width="0.0774%" height="15" fill="rgb(217,147,25)" fg:x="58" fg:w="1"/><text x="4.7392%" y="767.50"></text></g><g><title>memcpy (1 samples, 0.08%)</title><rect x="4.4892%" y="741" width="0.0774%" height="15" fill="rgb(247,81,37)" fg:x="58" fg:w="1"/><text x="4.7392%" y="751.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="4.4892%" y="725" width="0.0774%" height="15" fill="rgb(209,12,38)" fg:x="58" fg:w="1"/><text x="4.7392%" y="735.50"></text></g><g><title>demoparser::main (1 samples, 0.08%)</title><rect x="4.5666%" y="1189" width="0.0774%" height="15" fill="rgb(227,1,9)" fg:x="59" fg:w="1"/><text x="4.8166%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.08%)</title><rect x="4.5666%" y="1173" width="0.0774%" height="15" fill="rgb(248,47,43)" fg:x="59" fg:w="1"/><text x="4.8166%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.5666%" y="1157" width="0.0774%" height="15" fill="rgb(221,10,30)" fg:x="59" fg:w="1"/><text x="4.8166%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.5666%" y="1141" width="0.0774%" height="15" fill="rgb(210,229,1)" fg:x="59" fg:w="1"/><text x="4.8166%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.5666%" y="1125" width="0.0774%" height="15" fill="rgb(222,148,37)" fg:x="59" fg:w="1"/><text x="4.8166%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="4.5666%" y="1109" width="0.0774%" height="15" fill="rgb(234,67,33)" fg:x="59" fg:w="1"/><text x="4.8166%" y="1119.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.08%)</title><rect x="4.5666%" y="1093" width="0.0774%" height="15" fill="rgb(247,98,35)" fg:x="59" fg:w="1"/><text x="4.8166%" y="1103.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="4.5666%" y="1077" width="0.0774%" height="15" fill="rgb(247,138,52)" fg:x="59" fg:w="1"/><text x="4.8166%" y="1087.50"></text></g><g><title>demoparser::main::{{closure}} (1 samples, 0.08%)</title><rect x="4.5666%" y="1061" width="0.0774%" height="15" fill="rgb(213,79,30)" fg:x="59" fg:w="1"/><text x="4.8166%" y="1071.50"></text></g><g><title>demoparser::parse_demo (1 samples, 0.08%)</title><rect x="4.5666%" y="1045" width="0.0774%" height="15" fill="rgb(246,177,23)" fg:x="59" fg:w="1"/><text x="4.8166%" y="1055.50"></text></g><g><title>demoparser::parsing::parser::Parser::start_parsing (1 samples, 0.08%)</title><rect x="4.5666%" y="1029" width="0.0774%" height="15" fill="rgb(230,62,27)" fg:x="59" fg:w="1"/><text x="4.8166%" y="1039.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (1 samples, 0.08%)</title><rect x="4.5666%" y="1013" width="0.0774%" height="15" fill="rgb(216,154,8)" fg:x="59" fg:w="1"/><text x="4.8166%" y="1023.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_cmd (1 samples, 0.08%)</title><rect x="4.5666%" y="997" width="0.0774%" height="15" fill="rgb(244,35,45)" fg:x="59" fg:w="1"/><text x="4.8166%" y="1007.50"></text></g><g><title>demoparser::parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_datatable (1 samples, 0.08%)</title><rect x="4.5666%" y="981" width="0.0774%" height="15" fill="rgb(251,115,12)" fg:x="59" fg:w="1"/><text x="4.8166%" y="991.50"></text></g><g><title>demoparser::parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::flatten_dt (1 samples, 0.08%)</title><rect x="4.5666%" y="965" width="0.0774%" height="15" fill="rgb(240,54,50)" fg:x="59" fg:w="1"/><text x="4.8166%" y="975.50"></text></g><g><title>demoparser::parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.08%)</title><rect x="4.5666%" y="949" width="0.0774%" height="15" fill="rgb(233,84,52)" fg:x="59" fg:w="1"/><text x="4.8166%" y="959.50"></text></g><g><title>demoparser::parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.08%)</title><rect x="4.5666%" y="933" width="0.0774%" height="15" fill="rgb(207,117,47)" fg:x="59" fg:w="1"/><text x="4.8166%" y="943.50"></text></g><g><title>demoparser::parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.08%)</title><rect x="4.5666%" y="917" width="0.0774%" height="15" fill="rgb(249,43,39)" fg:x="59" fg:w="1"/><text x="4.8166%" y="927.50"></text></g><g><title>demoparser::parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.08%)</title><rect x="4.5666%" y="901" width="0.0774%" height="15" fill="rgb(209,38,44)" fg:x="59" fg:w="1"/><text x="4.8166%" y="911.50"></text></g><g><title>demoparser::parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.08%)</title><rect x="4.5666%" y="885" width="0.0774%" height="15" fill="rgb(236,212,23)" fg:x="59" fg:w="1"/><text x="4.8166%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.08%)</title><rect x="4.5666%" y="869" width="0.0774%" height="15" fill="rgb(242,79,21)" fg:x="59" fg:w="1"/><text x="4.8166%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.08%)</title><rect x="4.5666%" y="853" width="0.0774%" height="15" fill="rgb(211,96,35)" fg:x="59" fg:w="1"/><text x="4.8166%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.08%)</title><rect x="4.5666%" y="837" width="0.0774%" height="15" fill="rgb(253,215,40)" fg:x="59" fg:w="1"/><text x="4.8166%" y="847.50"></text></g><g><title>[unknown] (60 samples, 4.64%)</title><rect x="0.0774%" y="1205" width="4.6440%" height="15" fill="rgb(211,81,21)" fg:x="1" fg:w="60"/><text x="0.3274%" y="1215.50">[unkn..</text></g><g><title>mi_page_free_list_extend (1 samples, 0.08%)</title><rect x="4.6440%" y="1189" width="0.0774%" height="15" fill="rgb(208,190,38)" fg:x="60" fg:w="1"/><text x="4.8940%" y="1199.50"></text></g><g><title>mi_block_set_next (1 samples, 0.08%)</title><rect x="4.6440%" y="1173" width="0.0774%" height="15" fill="rgb(235,213,38)" fg:x="60" fg:w="1"/><text x="4.8940%" y="1183.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.08%)</title><rect x="4.6440%" y="1157" width="0.0774%" height="15" fill="rgb(237,122,38)" fg:x="60" fg:w="1"/><text x="4.8940%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="4.6440%" y="1141" width="0.0774%" height="15" fill="rgb(244,218,35)" fg:x="60" fg:w="1"/><text x="4.8940%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="4.7214%" y="1189" width="0.0774%" height="15" fill="rgb(240,68,47)" fg:x="61" fg:w="1"/><text x="4.9714%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="4.7214%" y="1173" width="0.0774%" height="15" fill="rgb(210,16,53)" fg:x="61" fg:w="1"/><text x="4.9714%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="4.7214%" y="1157" width="0.0774%" height="15" fill="rgb(235,124,12)" fg:x="61" fg:w="1"/><text x="4.9714%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="4.7214%" y="1141" width="0.0774%" height="15" fill="rgb(224,169,11)" fg:x="61" fg:w="1"/><text x="4.9714%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="4.7214%" y="1125" width="0.0774%" height="15" fill="rgb(250,166,2)" fg:x="61" fg:w="1"/><text x="4.9714%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="4.7214%" y="1109" width="0.0774%" height="15" fill="rgb(242,216,29)" fg:x="61" fg:w="1"/><text x="4.9714%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="4.7214%" y="1093" width="0.0774%" height="15" fill="rgb(230,116,27)" fg:x="61" fg:w="1"/><text x="4.9714%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="4.7214%" y="1077" width="0.0774%" height="15" fill="rgb(228,99,48)" fg:x="61" fg:w="1"/><text x="4.9714%" y="1087.50"></text></g><g><title>rayon_core::job::JobFifo::new (6 samples, 0.46%)</title><rect x="4.7988%" y="949" width="0.4644%" height="15" fill="rgb(253,11,6)" fg:x="62" fg:w="6"/><text x="5.0488%" y="959.50"></text></g><g><title>crossbeam_deque::deque::Injector&lt;T&gt;::new (6 samples, 0.46%)</title><rect x="4.7988%" y="933" width="0.4644%" height="15" fill="rgb(247,143,39)" fg:x="62" fg:w="6"/><text x="5.0488%" y="943.50"></text></g><g><title>&lt;crossbeam_deque::deque::Injector&lt;T&gt; as core::default::Default&gt;::default (6 samples, 0.46%)</title><rect x="4.7988%" y="917" width="0.4644%" height="15" fill="rgb(236,97,10)" fg:x="62" fg:w="6"/><text x="5.0488%" y="927.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (6 samples, 0.46%)</title><rect x="4.7988%" y="901" width="0.4644%" height="15" fill="rgb(233,208,19)" fg:x="62" fg:w="6"/><text x="5.0488%" y="911.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.46%)</title><rect x="4.7988%" y="885" width="0.4644%" height="15" fill="rgb(216,164,2)" fg:x="62" fg:w="6"/><text x="5.0488%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.46%)</title><rect x="4.7988%" y="869" width="0.4644%" height="15" fill="rgb(220,129,5)" fg:x="62" fg:w="6"/><text x="5.0488%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.46%)</title><rect x="4.7988%" y="853" width="0.4644%" height="15" fill="rgb(242,17,10)" fg:x="62" fg:w="6"/><text x="5.0488%" y="863.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.46%)</title><rect x="4.7988%" y="837" width="0.4644%" height="15" fill="rgb(242,107,0)" fg:x="62" fg:w="6"/><text x="5.0488%" y="847.50"></text></g><g><title>_mi_malloc_generic (6 samples, 0.46%)</title><rect x="4.7988%" y="821" width="0.4644%" height="15" fill="rgb(251,28,31)" fg:x="62" fg:w="6"/><text x="5.0488%" y="831.50"></text></g><g><title>mi_find_page (6 samples, 0.46%)</title><rect x="4.7988%" y="805" width="0.4644%" height="15" fill="rgb(233,223,10)" fg:x="62" fg:w="6"/><text x="5.0488%" y="815.50"></text></g><g><title>mi_find_free_page (6 samples, 0.46%)</title><rect x="4.7988%" y="789" width="0.4644%" height="15" fill="rgb(215,21,27)" fg:x="62" fg:w="6"/><text x="5.0488%" y="799.50"></text></g><g><title>mi_page_queue_find_free_ex (6 samples, 0.46%)</title><rect x="4.7988%" y="773" width="0.4644%" height="15" fill="rgb(232,23,21)" fg:x="62" fg:w="6"/><text x="5.0488%" y="783.50"></text></g><g><title>mi_page_fresh (6 samples, 0.46%)</title><rect x="4.7988%" y="757" width="0.4644%" height="15" fill="rgb(244,5,23)" fg:x="62" fg:w="6"/><text x="5.0488%" y="767.50"></text></g><g><title>mi_page_fresh_alloc (6 samples, 0.46%)</title><rect x="4.7988%" y="741" width="0.4644%" height="15" fill="rgb(226,81,46)" fg:x="62" fg:w="6"/><text x="5.0488%" y="751.50"></text></g><g><title>mi_segments_page_alloc (6 samples, 0.46%)</title><rect x="4.7988%" y="725" width="0.4644%" height="15" fill="rgb(247,70,30)" fg:x="62" fg:w="6"/><text x="5.0488%" y="735.50"></text></g><g><title>mi_segment_reclaim_or_alloc (6 samples, 0.46%)</title><rect x="4.7988%" y="709" width="0.4644%" height="15" fill="rgb(212,68,19)" fg:x="62" fg:w="6"/><text x="5.0488%" y="719.50"></text></g><g><title>mi_segment_alloc (6 samples, 0.46%)</title><rect x="4.7988%" y="693" width="0.4644%" height="15" fill="rgb(240,187,13)" fg:x="62" fg:w="6"/><text x="5.0488%" y="703.50"></text></g><g><title>mi_segment_init (6 samples, 0.46%)</title><rect x="4.7988%" y="677" width="0.4644%" height="15" fill="rgb(223,113,26)" fg:x="62" fg:w="6"/><text x="5.0488%" y="687.50"></text></g><g><title>memset (6 samples, 0.46%)</title><rect x="4.7988%" y="661" width="0.4644%" height="15" fill="rgb(206,192,2)" fg:x="62" fg:w="6"/><text x="5.0488%" y="671.50"></text></g><g><title>[libc.so.6] (6 samples, 0.46%)</title><rect x="4.7988%" y="645" width="0.4644%" height="15" fill="rgb(241,108,4)" fg:x="62" fg:w="6"/><text x="5.0488%" y="655.50"></text></g><g><title>[unknown] (6 samples, 0.46%)</title><rect x="4.7988%" y="629" width="0.4644%" height="15" fill="rgb(247,173,49)" fg:x="62" fg:w="6"/><text x="5.0488%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.46%)</title><rect x="4.7988%" y="613" width="0.4644%" height="15" fill="rgb(224,114,35)" fg:x="62" fg:w="6"/><text x="5.0488%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.46%)</title><rect x="4.7988%" y="597" width="0.4644%" height="15" fill="rgb(245,159,27)" fg:x="62" fg:w="6"/><text x="5.0488%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.46%)</title><rect x="4.7988%" y="581" width="0.4644%" height="15" fill="rgb(245,172,44)" fg:x="62" fg:w="6"/><text x="5.0488%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.46%)</title><rect x="4.7988%" y="565" width="0.4644%" height="15" fill="rgb(236,23,11)" fg:x="62" fg:w="6"/><text x="5.0488%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.46%)</title><rect x="4.7988%" y="549" width="0.4644%" height="15" fill="rgb(205,117,38)" fg:x="62" fg:w="6"/><text x="5.0488%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.46%)</title><rect x="4.7988%" y="533" width="0.4644%" height="15" fill="rgb(237,72,25)" fg:x="62" fg:w="6"/><text x="5.0488%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.46%)</title><rect x="4.7988%" y="517" width="0.4644%" height="15" fill="rgb(244,70,9)" fg:x="62" fg:w="6"/><text x="5.0488%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.46%)</title><rect x="4.7988%" y="501" width="0.4644%" height="15" fill="rgb(217,125,39)" fg:x="62" fg:w="6"/><text x="5.0488%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.46%)</title><rect x="4.7988%" y="485" width="0.4644%" height="15" fill="rgb(235,36,10)" fg:x="62" fg:w="6"/><text x="5.0488%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.46%)</title><rect x="4.7988%" y="469" width="0.4644%" height="15" fill="rgb(251,123,47)" fg:x="62" fg:w="6"/><text x="5.0488%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.1858%" y="453" width="0.0774%" height="15" fill="rgb(221,13,13)" fg:x="67" fg:w="1"/><text x="5.4358%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.1858%" y="437" width="0.0774%" height="15" fill="rgb(238,131,9)" fg:x="67" fg:w="1"/><text x="5.4358%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.1858%" y="421" width="0.0774%" height="15" fill="rgb(211,50,8)" fg:x="67" fg:w="1"/><text x="5.4358%" y="431.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 1.39%)</title><rect x="4.7988%" y="1093" width="1.3932%" height="15" fill="rgb(245,182,24)" fg:x="62" fg:w="18"/><text x="5.0488%" y="1103.50"></text></g><g><title>std::panicking::try (18 samples, 1.39%)</title><rect x="4.7988%" y="1077" width="1.3932%" height="15" fill="rgb(242,14,37)" fg:x="62" fg:w="18"/><text x="5.0488%" y="1087.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 1.39%)</title><rect x="4.7988%" y="1061" width="1.3932%" height="15" fill="rgb(246,228,12)" fg:x="62" fg:w="18"/><text x="5.0488%" y="1071.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (18 samples, 1.39%)</title><rect x="4.7988%" y="1045" width="1.3932%" height="15" fill="rgb(213,55,15)" fg:x="62" fg:w="18"/><text x="5.0488%" y="1055.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (18 samples, 1.39%)</title><rect x="4.7988%" y="1029" width="1.3932%" height="15" fill="rgb(209,9,3)" fg:x="62" fg:w="18"/><text x="5.0488%" y="1039.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (18 samples, 1.39%)</title><rect x="4.7988%" y="1013" width="1.3932%" height="15" fill="rgb(230,59,30)" fg:x="62" fg:w="18"/><text x="5.0488%" y="1023.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (18 samples, 1.39%)</title><rect x="4.7988%" y="997" width="1.3932%" height="15" fill="rgb(209,121,21)" fg:x="62" fg:w="18"/><text x="5.0488%" y="1007.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (18 samples, 1.39%)</title><rect x="4.7988%" y="981" width="1.3932%" height="15" fill="rgb(220,109,13)" fg:x="62" fg:w="18"/><text x="5.0488%" y="991.50"></text></g><g><title>rayon_core::registry::main_loop (18 samples, 1.39%)</title><rect x="4.7988%" y="965" width="1.3932%" height="15" fill="rgb(232,18,1)" fg:x="62" fg:w="18"/><text x="5.0488%" y="975.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (12 samples, 0.93%)</title><rect x="5.2632%" y="949" width="0.9288%" height="15" fill="rgb(215,41,42)" fg:x="68" fg:w="12"/><text x="5.5132%" y="959.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (12 samples, 0.93%)</title><rect x="5.2632%" y="933" width="0.9288%" height="15" fill="rgb(224,123,36)" fg:x="68" fg:w="12"/><text x="5.5132%" y="943.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (12 samples, 0.93%)</title><rect x="5.2632%" y="917" width="0.9288%" height="15" fill="rgb(240,125,3)" fg:x="68" fg:w="12"/><text x="5.5132%" y="927.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (12 samples, 0.93%)</title><rect x="5.2632%" y="901" width="0.9288%" height="15" fill="rgb(205,98,50)" fg:x="68" fg:w="12"/><text x="5.5132%" y="911.50"></text></g><g><title>std::sync::condvar::Condvar::wait (12 samples, 0.93%)</title><rect x="5.2632%" y="885" width="0.9288%" height="15" fill="rgb(205,185,37)" fg:x="68" fg:w="12"/><text x="5.5132%" y="895.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (12 samples, 0.93%)</title><rect x="5.2632%" y="869" width="0.9288%" height="15" fill="rgb(238,207,15)" fg:x="68" fg:w="12"/><text x="5.5132%" y="879.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (12 samples, 0.93%)</title><rect x="5.2632%" y="853" width="0.9288%" height="15" fill="rgb(213,199,42)" fg:x="68" fg:w="12"/><text x="5.5132%" y="863.50"></text></g><g><title>std::sys::unix::futex::futex_wait (12 samples, 0.93%)</title><rect x="5.2632%" y="837" width="0.9288%" height="15" fill="rgb(235,201,11)" fg:x="68" fg:w="12"/><text x="5.5132%" y="847.50"></text></g><g><title>syscall (12 samples, 0.93%)</title><rect x="5.2632%" y="821" width="0.9288%" height="15" fill="rgb(207,46,11)" fg:x="68" fg:w="12"/><text x="5.5132%" y="831.50"></text></g><g><title>[unknown] (12 samples, 0.93%)</title><rect x="5.2632%" y="805" width="0.9288%" height="15" fill="rgb(241,35,35)" fg:x="68" fg:w="12"/><text x="5.5132%" y="815.50"></text></g><g><title>[unknown] (12 samples, 0.93%)</title><rect x="5.2632%" y="789" width="0.9288%" height="15" fill="rgb(243,32,47)" fg:x="68" fg:w="12"/><text x="5.5132%" y="799.50"></text></g><g><title>[unknown] (12 samples, 0.93%)</title><rect x="5.2632%" y="773" width="0.9288%" height="15" fill="rgb(247,202,23)" fg:x="68" fg:w="12"/><text x="5.5132%" y="783.50"></text></g><g><title>[unknown] (12 samples, 0.93%)</title><rect x="5.2632%" y="757" width="0.9288%" height="15" fill="rgb(219,102,11)" fg:x="68" fg:w="12"/><text x="5.5132%" y="767.50"></text></g><g><title>[unknown] (12 samples, 0.93%)</title><rect x="5.2632%" y="741" width="0.9288%" height="15" fill="rgb(243,110,44)" fg:x="68" fg:w="12"/><text x="5.5132%" y="751.50"></text></g><g><title>[unknown] (12 samples, 0.93%)</title><rect x="5.2632%" y="725" width="0.9288%" height="15" fill="rgb(222,74,54)" fg:x="68" fg:w="12"/><text x="5.5132%" y="735.50"></text></g><g><title>[unknown] (12 samples, 0.93%)</title><rect x="5.2632%" y="709" width="0.9288%" height="15" fill="rgb(216,99,12)" fg:x="68" fg:w="12"/><text x="5.5132%" y="719.50"></text></g><g><title>[unknown] (12 samples, 0.93%)</title><rect x="5.2632%" y="693" width="0.9288%" height="15" fill="rgb(226,22,26)" fg:x="68" fg:w="12"/><text x="5.5132%" y="703.50"></text></g><g><title>[unknown] (6 samples, 0.46%)</title><rect x="5.7276%" y="677" width="0.4644%" height="15" fill="rgb(217,163,10)" fg:x="74" fg:w="6"/><text x="5.9776%" y="687.50"></text></g><g><title>[unknown] (6 samples, 0.46%)</title><rect x="5.7276%" y="661" width="0.4644%" height="15" fill="rgb(213,25,53)" fg:x="74" fg:w="6"/><text x="5.9776%" y="671.50"></text></g><g><title>[unknown] (6 samples, 0.46%)</title><rect x="5.7276%" y="645" width="0.4644%" height="15" fill="rgb(252,105,26)" fg:x="74" fg:w="6"/><text x="5.9776%" y="655.50"></text></g><g><title>[unknown] (6 samples, 0.46%)</title><rect x="5.7276%" y="629" width="0.4644%" height="15" fill="rgb(220,39,43)" fg:x="74" fg:w="6"/><text x="5.9776%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (19 samples, 1.47%)</title><rect x="4.7988%" y="1157" width="1.4706%" height="15" fill="rgb(229,68,48)" fg:x="62" fg:w="19"/><text x="5.0488%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (19 samples, 1.47%)</title><rect x="4.7988%" y="1141" width="1.4706%" height="15" fill="rgb(252,8,32)" fg:x="62" fg:w="19"/><text x="5.0488%" y="1151.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (19 samples, 1.47%)</title><rect x="4.7988%" y="1125" width="1.4706%" height="15" fill="rgb(223,20,43)" fg:x="62" fg:w="19"/><text x="5.0488%" y="1135.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (19 samples, 1.47%)</title><rect x="4.7988%" y="1109" width="1.4706%" height="15" fill="rgb(229,81,49)" fg:x="62" fg:w="19"/><text x="5.0488%" y="1119.50"></text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.08%)</title><rect x="6.1920%" y="1093" width="0.0774%" height="15" fill="rgb(236,28,36)" fg:x="80" fg:w="1"/><text x="6.4420%" y="1103.50"></text></g><g><title>__pthread_getattr_np (1 samples, 0.08%)</title><rect x="6.1920%" y="1077" width="0.0774%" height="15" fill="rgb(249,185,26)" fg:x="80" fg:w="1"/><text x="6.4420%" y="1087.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="6.1920%" y="1061" width="0.0774%" height="15" fill="rgb(249,174,33)" fg:x="80" fg:w="1"/><text x="6.4420%" y="1071.50"></text></g><g><title>tcache_init (1 samples, 0.08%)</title><rect x="6.1920%" y="1045" width="0.0774%" height="15" fill="rgb(233,201,37)" fg:x="80" fg:w="1"/><text x="6.4420%" y="1055.50"></text></g><g><title>tcache_init (1 samples, 0.08%)</title><rect x="6.1920%" y="1029" width="0.0774%" height="15" fill="rgb(221,78,26)" fg:x="80" fg:w="1"/><text x="6.4420%" y="1039.50"></text></g><g><title>arena_get2 (1 samples, 0.08%)</title><rect x="6.1920%" y="1013" width="0.0774%" height="15" fill="rgb(250,127,30)" fg:x="80" fg:w="1"/><text x="6.4420%" y="1023.50"></text></g><g><title>arena_get2 (1 samples, 0.08%)</title><rect x="6.1920%" y="997" width="0.0774%" height="15" fill="rgb(230,49,44)" fg:x="80" fg:w="1"/><text x="6.4420%" y="1007.50"></text></g><g><title>_int_new_arena (1 samples, 0.08%)</title><rect x="6.1920%" y="981" width="0.0774%" height="15" fill="rgb(229,67,23)" fg:x="80" fg:w="1"/><text x="6.4420%" y="991.50"></text></g><g><title>new_heap (1 samples, 0.08%)</title><rect x="6.1920%" y="965" width="0.0774%" height="15" fill="rgb(249,83,47)" fg:x="80" fg:w="1"/><text x="6.4420%" y="975.50"></text></g><g><title>alloc_new_heap (1 samples, 0.08%)</title><rect x="6.1920%" y="949" width="0.0774%" height="15" fill="rgb(215,43,3)" fg:x="80" fg:w="1"/><text x="6.4420%" y="959.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.08%)</title><rect x="6.1920%" y="933" width="0.0774%" height="15" fill="rgb(238,154,13)" fg:x="80" fg:w="1"/><text x="6.4420%" y="943.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.08%)</title><rect x="6.1920%" y="917" width="0.0774%" height="15" fill="rgb(219,56,2)" fg:x="80" fg:w="1"/><text x="6.4420%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="6.1920%" y="901" width="0.0774%" height="15" fill="rgb(233,0,4)" fg:x="80" fg:w="1"/><text x="6.4420%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="6.1920%" y="885" width="0.0774%" height="15" fill="rgb(235,30,7)" fg:x="80" fg:w="1"/><text x="6.4420%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="6.1920%" y="869" width="0.0774%" height="15" fill="rgb(250,79,13)" fg:x="80" fg:w="1"/><text x="6.4420%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="6.1920%" y="853" width="0.0774%" height="15" fill="rgb(211,146,34)" fg:x="80" fg:w="1"/><text x="6.4420%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="6.1920%" y="837" width="0.0774%" height="15" fill="rgb(228,22,38)" fg:x="80" fg:w="1"/><text x="6.4420%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="6.1920%" y="821" width="0.0774%" height="15" fill="rgb(235,168,5)" fg:x="80" fg:w="1"/><text x="6.4420%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="6.1920%" y="805" width="0.0774%" height="15" fill="rgb(221,155,16)" fg:x="80" fg:w="1"/><text x="6.4420%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="6.1920%" y="789" width="0.0774%" height="15" fill="rgb(215,215,53)" fg:x="80" fg:w="1"/><text x="6.4420%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="6.1920%" y="773" width="0.0774%" height="15" fill="rgb(223,4,10)" fg:x="80" fg:w="1"/><text x="6.4420%" y="783.50"></text></g><g><title>__GI___mmap64 (4 samples, 0.31%)</title><rect x="6.2693%" y="1093" width="0.3096%" height="15" fill="rgb(234,103,6)" fg:x="81" fg:w="4"/><text x="6.5193%" y="1103.50"></text></g><g><title>__GI___mmap64 (4 samples, 0.31%)</title><rect x="6.2693%" y="1077" width="0.3096%" height="15" fill="rgb(227,97,0)" fg:x="81" fg:w="4"/><text x="6.5193%" y="1087.50"></text></g><g><title>[unknown] (4 samples, 0.31%)</title><rect x="6.2693%" y="1061" width="0.3096%" height="15" fill="rgb(234,150,53)" fg:x="81" fg:w="4"/><text x="6.5193%" y="1071.50"></text></g><g><title>[unknown] (4 samples, 0.31%)</title><rect x="6.2693%" y="1045" width="0.3096%" height="15" fill="rgb(228,201,54)" fg:x="81" fg:w="4"/><text x="6.5193%" y="1055.50"></text></g><g><title>[unknown] (4 samples, 0.31%)</title><rect x="6.2693%" y="1029" width="0.3096%" height="15" fill="rgb(222,22,37)" fg:x="81" fg:w="4"/><text x="6.5193%" y="1039.50"></text></g><g><title>[unknown] (4 samples, 0.31%)</title><rect x="6.2693%" y="1013" width="0.3096%" height="15" fill="rgb(237,53,32)" fg:x="81" fg:w="4"/><text x="6.5193%" y="1023.50"></text></g><g><title>[unknown] (4 samples, 0.31%)</title><rect x="6.2693%" y="997" width="0.3096%" height="15" fill="rgb(233,25,53)" fg:x="81" fg:w="4"/><text x="6.5193%" y="1007.50"></text></g><g><title>[unknown] (4 samples, 0.31%)</title><rect x="6.2693%" y="981" width="0.3096%" height="15" fill="rgb(210,40,34)" fg:x="81" fg:w="4"/><text x="6.5193%" y="991.50"></text></g><g><title>[unknown] (4 samples, 0.31%)</title><rect x="6.2693%" y="965" width="0.3096%" height="15" fill="rgb(241,220,44)" fg:x="81" fg:w="4"/><text x="6.5193%" y="975.50"></text></g><g><title>[unknown] (4 samples, 0.31%)</title><rect x="6.2693%" y="949" width="0.3096%" height="15" fill="rgb(235,28,35)" fg:x="81" fg:w="4"/><text x="6.5193%" y="959.50"></text></g><g><title>[unknown] (4 samples, 0.31%)</title><rect x="6.2693%" y="933" width="0.3096%" height="15" fill="rgb(210,56,17)" fg:x="81" fg:w="4"/><text x="6.5193%" y="943.50"></text></g><g><title>__clone3 (25 samples, 1.93%)</title><rect x="4.7214%" y="1205" width="1.9350%" height="15" fill="rgb(224,130,29)" fg:x="61" fg:w="25"/><text x="4.9714%" y="1215.50">_..</text></g><g><title>start_thread (24 samples, 1.86%)</title><rect x="4.7988%" y="1189" width="1.8576%" height="15" fill="rgb(235,212,8)" fg:x="62" fg:w="24"/><text x="5.0488%" y="1199.50">s..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (24 samples, 1.86%)</title><rect x="4.7988%" y="1173" width="1.8576%" height="15" fill="rgb(223,33,50)" fg:x="62" fg:w="24"/><text x="5.0488%" y="1183.50">s..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (5 samples, 0.39%)</title><rect x="6.2693%" y="1157" width="0.3870%" height="15" fill="rgb(219,149,13)" fg:x="81" fg:w="5"/><text x="6.5193%" y="1167.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (5 samples, 0.39%)</title><rect x="6.2693%" y="1141" width="0.3870%" height="15" fill="rgb(250,156,29)" fg:x="81" fg:w="5"/><text x="6.5193%" y="1151.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (5 samples, 0.39%)</title><rect x="6.2693%" y="1125" width="0.3870%" height="15" fill="rgb(216,193,19)" fg:x="81" fg:w="5"/><text x="6.5193%" y="1135.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (5 samples, 0.39%)</title><rect x="6.2693%" y="1109" width="0.3870%" height="15" fill="rgb(216,135,14)" fg:x="81" fg:w="5"/><text x="6.5193%" y="1119.50"></text></g><g><title>__GI___mprotect (1 samples, 0.08%)</title><rect x="6.5789%" y="1093" width="0.0774%" height="15" fill="rgb(241,47,5)" fg:x="85" fg:w="1"/><text x="6.8289%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="6.5789%" y="1077" width="0.0774%" height="15" fill="rgb(233,42,35)" fg:x="85" fg:w="1"/><text x="6.8289%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="6.5789%" y="1061" width="0.0774%" height="15" fill="rgb(231,13,6)" fg:x="85" fg:w="1"/><text x="6.8289%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="6.5789%" y="1045" width="0.0774%" height="15" fill="rgb(207,181,40)" fg:x="85" fg:w="1"/><text x="6.8289%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="6.5789%" y="1029" width="0.0774%" height="15" fill="rgb(254,173,49)" fg:x="85" fg:w="1"/><text x="6.8289%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="6.5789%" y="1013" width="0.0774%" height="15" fill="rgb(221,1,38)" fg:x="85" fg:w="1"/><text x="6.8289%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="6.5789%" y="997" width="0.0774%" height="15" fill="rgb(206,124,46)" fg:x="85" fg:w="1"/><text x="6.8289%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="6.5789%" y="981" width="0.0774%" height="15" fill="rgb(249,21,11)" fg:x="85" fg:w="1"/><text x="6.8289%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="6.5789%" y="965" width="0.0774%" height="15" fill="rgb(222,201,40)" fg:x="85" fg:w="1"/><text x="6.8289%" y="975.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.08%)</title><rect x="6.6563%" y="1205" width="0.0774%" height="15" fill="rgb(235,61,29)" fg:x="86" fg:w="1"/><text x="6.9063%" y="1215.50"></text></g><g><title>_mi_heap_delayed_free (1 samples, 0.08%)</title><rect x="6.6563%" y="1189" width="0.0774%" height="15" fill="rgb(219,207,3)" fg:x="86" fg:w="1"/><text x="6.9063%" y="1199.50"></text></g><g><title>__GI_exit (15 samples, 1.16%)</title><rect x="6.7337%" y="1157" width="1.1610%" height="15" fill="rgb(222,56,46)" fg:x="87" fg:w="15"/><text x="6.9837%" y="1167.50"></text></g><g><title>__run_exit_handlers (15 samples, 1.16%)</title><rect x="6.7337%" y="1141" width="1.1610%" height="15" fill="rgb(239,76,54)" fg:x="87" fg:w="15"/><text x="6.9837%" y="1151.50"></text></g><g><title>mi_process_done (15 samples, 1.16%)</title><rect x="6.7337%" y="1125" width="1.1610%" height="15" fill="rgb(231,124,27)" fg:x="87" fg:w="15"/><text x="6.9837%" y="1135.50"></text></g><g><title>mi_process_done (15 samples, 1.16%)</title><rect x="6.7337%" y="1109" width="1.1610%" height="15" fill="rgb(249,195,6)" fg:x="87" fg:w="15"/><text x="6.9837%" y="1119.50"></text></g><g><title>mi_heap_collect_ex (15 samples, 1.16%)</title><rect x="6.7337%" y="1093" width="1.1610%" height="15" fill="rgb(237,174,47)" fg:x="87" fg:w="15"/><text x="6.9837%" y="1103.50"></text></g><g><title>mi_segment_cache_purge (15 samples, 1.16%)</title><rect x="6.7337%" y="1077" width="1.1610%" height="15" fill="rgb(206,201,31)" fg:x="87" fg:w="15"/><text x="6.9837%" y="1087.50"></text></g><g><title>mi_commit_mask_decommit (15 samples, 1.16%)</title><rect x="6.7337%" y="1061" width="1.1610%" height="15" fill="rgb(231,57,52)" fg:x="87" fg:w="15"/><text x="6.9837%" y="1071.50"></text></g><g><title>_mi_os_decommit (15 samples, 1.16%)</title><rect x="6.7337%" y="1045" width="1.1610%" height="15" fill="rgb(248,177,22)" fg:x="87" fg:w="15"/><text x="6.9837%" y="1055.50"></text></g><g><title>mi_os_commitx (15 samples, 1.16%)</title><rect x="6.7337%" y="1029" width="1.1610%" height="15" fill="rgb(215,211,37)" fg:x="87" fg:w="15"/><text x="6.9837%" y="1039.50"></text></g><g><title>__GI_madvise (15 samples, 1.16%)</title><rect x="6.7337%" y="1013" width="1.1610%" height="15" fill="rgb(241,128,51)" fg:x="87" fg:w="15"/><text x="6.9837%" y="1023.50"></text></g><g><title>[unknown] (15 samples, 1.16%)</title><rect x="6.7337%" y="997" width="1.1610%" height="15" fill="rgb(227,165,31)" fg:x="87" fg:w="15"/><text x="6.9837%" y="1007.50"></text></g><g><title>[unknown] (15 samples, 1.16%)</title><rect x="6.7337%" y="981" width="1.1610%" height="15" fill="rgb(228,167,24)" fg:x="87" fg:w="15"/><text x="6.9837%" y="991.50"></text></g><g><title>[unknown] (15 samples, 1.16%)</title><rect x="6.7337%" y="965" width="1.1610%" height="15" fill="rgb(228,143,12)" fg:x="87" fg:w="15"/><text x="6.9837%" y="975.50"></text></g><g><title>[unknown] (15 samples, 1.16%)</title><rect x="6.7337%" y="949" width="1.1610%" height="15" fill="rgb(249,149,8)" fg:x="87" fg:w="15"/><text x="6.9837%" y="959.50"></text></g><g><title>[unknown] (15 samples, 1.16%)</title><rect x="6.7337%" y="933" width="1.1610%" height="15" fill="rgb(243,35,44)" fg:x="87" fg:w="15"/><text x="6.9837%" y="943.50"></text></g><g><title>[unknown] (15 samples, 1.16%)</title><rect x="6.7337%" y="917" width="1.1610%" height="15" fill="rgb(246,89,9)" fg:x="87" fg:w="15"/><text x="6.9837%" y="927.50"></text></g><g><title>[unknown] (15 samples, 1.16%)</title><rect x="6.7337%" y="901" width="1.1610%" height="15" fill="rgb(233,213,13)" fg:x="87" fg:w="15"/><text x="6.9837%" y="911.50"></text></g><g><title>[unknown] (14 samples, 1.08%)</title><rect x="6.8111%" y="885" width="1.0836%" height="15" fill="rgb(233,141,41)" fg:x="88" fg:w="14"/><text x="7.0611%" y="895.50"></text></g><g><title>[unknown] (13 samples, 1.01%)</title><rect x="6.8885%" y="869" width="1.0062%" height="15" fill="rgb(239,167,4)" fg:x="89" fg:w="13"/><text x="7.1385%" y="879.50"></text></g><g><title>[unknown] (11 samples, 0.85%)</title><rect x="7.0433%" y="853" width="0.8514%" height="15" fill="rgb(209,217,16)" fg:x="91" fg:w="11"/><text x="7.2933%" y="863.50"></text></g><g><title>[unknown] (10 samples, 0.77%)</title><rect x="7.1207%" y="837" width="0.7740%" height="15" fill="rgb(219,88,35)" fg:x="92" fg:w="10"/><text x="7.3707%" y="847.50"></text></g><g><title>[unknown] (8 samples, 0.62%)</title><rect x="7.2755%" y="821" width="0.6192%" height="15" fill="rgb(220,193,23)" fg:x="94" fg:w="8"/><text x="7.5255%" y="831.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="7.5077%" y="805" width="0.3870%" height="15" fill="rgb(230,90,52)" fg:x="97" fg:w="5"/><text x="7.7577%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;memmap2::Mmap&gt;&gt; (1 samples, 0.08%)</title><rect x="7.8947%" y="773" width="0.0774%" height="15" fill="rgb(252,106,19)" fg:x="102" fg:w="1"/><text x="8.1447%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="7.8947%" y="757" width="0.0774%" height="15" fill="rgb(206,74,20)" fg:x="102" fg:w="1"/><text x="8.1447%" y="767.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="7.8947%" y="741" width="0.0774%" height="15" fill="rgb(230,138,44)" fg:x="102" fg:w="1"/><text x="8.1447%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;memmap2::Mmap&gt; (1 samples, 0.08%)</title><rect x="7.8947%" y="725" width="0.0774%" height="15" fill="rgb(235,182,43)" fg:x="102" fg:w="1"/><text x="8.1447%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;memmap2::os::MmapInner&gt; (1 samples, 0.08%)</title><rect x="7.8947%" y="709" width="0.0774%" height="15" fill="rgb(242,16,51)" fg:x="102" fg:w="1"/><text x="8.1447%" y="719.50"></text></g><g><title>__GI___munmap (1 samples, 0.08%)</title><rect x="7.8947%" y="693" width="0.0774%" height="15" fill="rgb(248,9,4)" fg:x="102" fg:w="1"/><text x="8.1447%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="7.8947%" y="677" width="0.0774%" height="15" fill="rgb(210,31,22)" fg:x="102" fg:w="1"/><text x="8.1447%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="7.8947%" y="661" width="0.0774%" height="15" fill="rgb(239,54,39)" fg:x="102" fg:w="1"/><text x="8.1447%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="7.8947%" y="645" width="0.0774%" height="15" fill="rgb(230,99,41)" fg:x="102" fg:w="1"/><text x="8.1447%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="7.8947%" y="629" width="0.0774%" height="15" fill="rgb(253,106,12)" fg:x="102" fg:w="1"/><text x="8.1447%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="7.8947%" y="613" width="0.0774%" height="15" fill="rgb(213,46,41)" fg:x="102" fg:w="1"/><text x="8.1447%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="7.8947%" y="597" width="0.0774%" height="15" fill="rgb(215,133,35)" fg:x="102" fg:w="1"/><text x="8.1447%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="7.8947%" y="581" width="0.0774%" height="15" fill="rgb(213,28,5)" fg:x="102" fg:w="1"/><text x="8.1447%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="7.8947%" y="565" width="0.0774%" height="15" fill="rgb(215,77,49)" fg:x="102" fg:w="1"/><text x="8.1447%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="7.8947%" y="549" width="0.0774%" height="15" fill="rgb(248,100,22)" fg:x="102" fg:w="1"/><text x="8.1447%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="7.8947%" y="533" width="0.0774%" height="15" fill="rgb(208,67,9)" fg:x="102" fg:w="1"/><text x="8.1447%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="7.8947%" y="517" width="0.0774%" height="15" fill="rgb(219,133,21)" fg:x="102" fg:w="1"/><text x="8.1447%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="7.8947%" y="501" width="0.0774%" height="15" fill="rgb(246,46,29)" fg:x="102" fg:w="1"/><text x="8.1447%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="7.8947%" y="485" width="0.0774%" height="15" fill="rgb(246,185,52)" fg:x="102" fg:w="1"/><text x="8.1447%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="7.8947%" y="469" width="0.0774%" height="15" fill="rgb(252,136,11)" fg:x="102" fg:w="1"/><text x="8.1447%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="7.8947%" y="453" width="0.0774%" height="15" fill="rgb(219,138,53)" fg:x="102" fg:w="1"/><text x="8.1447%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="7.8947%" y="437" width="0.0774%" height="15" fill="rgb(211,51,23)" fg:x="102" fg:w="1"/><text x="8.1447%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::parser::MsgBluePrint&gt;&gt; (1 samples, 0.08%)</title><rect x="7.9721%" y="773" width="0.0774%" height="15" fill="rgb(247,221,28)" fg:x="103" fg:w="1"/><text x="8.2221%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;demoparser::parsing::parser::MsgBluePrint&gt;&gt; (1 samples, 0.08%)</title><rect x="7.9721%" y="757" width="0.0774%" height="15" fill="rgb(251,222,45)" fg:x="103" fg:w="1"/><text x="8.2221%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="7.9721%" y="741" width="0.0774%" height="15" fill="rgb(217,162,53)" fg:x="103" fg:w="1"/><text x="8.2221%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.08%)</title><rect x="7.9721%" y="725" width="0.0774%" height="15" fill="rgb(229,93,14)" fg:x="103" fg:w="1"/><text x="8.2221%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.08%)</title><rect x="7.9721%" y="709" width="0.0774%" height="15" fill="rgb(209,67,49)" fg:x="103" fg:w="1"/><text x="8.2221%" y="719.50"></text></g><g><title>_mi_os_free_ex (1 samples, 0.08%)</title><rect x="7.9721%" y="693" width="0.0774%" height="15" fill="rgb(213,87,29)" fg:x="103" fg:w="1"/><text x="8.2221%" y="703.50"></text></g><g><title>_mi_os_free_ex (1 samples, 0.08%)</title><rect x="7.9721%" y="677" width="0.0774%" height="15" fill="rgb(205,151,52)" fg:x="103" fg:w="1"/><text x="8.2221%" y="687.50"></text></g><g><title>mi_os_mem_free (1 samples, 0.08%)</title><rect x="7.9721%" y="661" width="0.0774%" height="15" fill="rgb(253,215,39)" fg:x="103" fg:w="1"/><text x="8.2221%" y="671.50"></text></g><g><title>mi_os_mem_free (1 samples, 0.08%)</title><rect x="7.9721%" y="645" width="0.0774%" height="15" fill="rgb(221,220,41)" fg:x="103" fg:w="1"/><text x="8.2221%" y="655.50"></text></g><g><title>__GI___munmap (1 samples, 0.08%)</title><rect x="7.9721%" y="629" width="0.0774%" height="15" fill="rgb(218,133,21)" fg:x="103" fg:w="1"/><text x="8.2221%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="7.9721%" y="613" width="0.0774%" height="15" fill="rgb(221,193,43)" fg:x="103" fg:w="1"/><text x="8.2221%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="7.9721%" y="597" width="0.0774%" height="15" fill="rgb(240,128,52)" fg:x="103" fg:w="1"/><text x="8.2221%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="7.9721%" y="581" width="0.0774%" height="15" fill="rgb(253,114,12)" fg:x="103" fg:w="1"/><text x="8.2221%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="7.9721%" y="565" width="0.0774%" height="15" fill="rgb(215,223,47)" fg:x="103" fg:w="1"/><text x="8.2221%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="7.9721%" y="549" width="0.0774%" height="15" fill="rgb(248,225,23)" fg:x="103" fg:w="1"/><text x="8.2221%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="7.9721%" y="533" width="0.0774%" height="15" fill="rgb(250,108,0)" fg:x="103" fg:w="1"/><text x="8.2221%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="7.9721%" y="517" width="0.0774%" height="15" fill="rgb(228,208,7)" fg:x="103" fg:w="1"/><text x="8.2221%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="7.9721%" y="501" width="0.0774%" height="15" fill="rgb(244,45,10)" fg:x="103" fg:w="1"/><text x="8.2221%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="7.9721%" y="485" width="0.0774%" height="15" fill="rgb(207,125,25)" fg:x="103" fg:w="1"/><text x="8.2221%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="7.9721%" y="469" width="0.0774%" height="15" fill="rgb(210,195,18)" fg:x="103" fg:w="1"/><text x="8.2221%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="7.9721%" y="453" width="0.0774%" height="15" fill="rgb(249,80,12)" fg:x="103" fg:w="1"/><text x="8.2221%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="7.9721%" y="437" width="0.0774%" height="15" fill="rgb(221,65,9)" fg:x="103" fg:w="1"/><text x="8.2221%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="7.9721%" y="421" width="0.0774%" height="15" fill="rgb(235,49,36)" fg:x="103" fg:w="1"/><text x="8.2221%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser::Parser&gt; (3 samples, 0.23%)</title><rect x="7.8947%" y="789" width="0.2322%" height="15" fill="rgb(225,32,20)" fg:x="102" fg:w="3"/><text x="8.1447%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser_settings::Maps&gt; (1 samples, 0.08%)</title><rect x="8.0495%" y="773" width="0.0774%" height="15" fill="rgb(215,141,46)" fg:x="104" fg:w="1"/><text x="8.2995%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u16,demoparser::parsing::data_table::ServerClass,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.08%)</title><rect x="8.0495%" y="757" width="0.0774%" height="15" fill="rgb(250,160,47)" fg:x="104" fg:w="1"/><text x="8.2995%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u16,demoparser::parsing::data_table::ServerClass,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.08%)</title><rect x="8.0495%" y="741" width="0.0774%" height="15" fill="rgb(216,222,40)" fg:x="104" fg:w="1"/><text x="8.2995%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u16,demoparser::parsing::data_table::ServerClass)&gt;&gt; (1 samples, 0.08%)</title><rect x="8.0495%" y="725" width="0.0774%" height="15" fill="rgb(234,217,39)" fg:x="104" fg:w="1"/><text x="8.2995%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="8.0495%" y="709" width="0.0774%" height="15" fill="rgb(207,178,40)" fg:x="104" fg:w="1"/><text x="8.2995%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.08%)</title><rect x="8.0495%" y="693" width="0.0774%" height="15" fill="rgb(221,136,13)" fg:x="104" fg:w="1"/><text x="8.2995%" y="703.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.08%)</title><rect x="8.0495%" y="677" width="0.0774%" height="15" fill="rgb(249,199,10)" fg:x="104" fg:w="1"/><text x="8.2995%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.08%)</title><rect x="8.0495%" y="661" width="0.0774%" height="15" fill="rgb(249,222,13)" fg:x="104" fg:w="1"/><text x="8.2995%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u16,demoparser::parsing::data_table::ServerClass)&gt; (1 samples, 0.08%)</title><rect x="8.0495%" y="645" width="0.0774%" height="15" fill="rgb(244,185,38)" fg:x="104" fg:w="1"/><text x="8.2995%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::data_table::ServerClass&gt; (1 samples, 0.08%)</title><rect x="8.0495%" y="629" width="0.0774%" height="15" fill="rgb(236,202,9)" fg:x="104" fg:w="1"/><text x="8.2995%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::entities::Prop&gt;&gt; (1 samples, 0.08%)</title><rect x="8.0495%" y="613" width="0.0774%" height="15" fill="rgb(250,229,37)" fg:x="104" fg:w="1"/><text x="8.2995%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="8.0495%" y="597" width="0.0774%" height="15" fill="rgb(206,174,23)" fg:x="104" fg:w="1"/><text x="8.2995%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::entities::Prop]&gt; (1 samples, 0.08%)</title><rect x="8.0495%" y="581" width="0.0774%" height="15" fill="rgb(211,33,43)" fg:x="104" fg:w="1"/><text x="8.2995%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::entities::Prop&gt; (1 samples, 0.08%)</title><rect x="8.0495%" y="565" width="0.0774%" height="15" fill="rgb(245,58,50)" fg:x="104" fg:w="1"/><text x="8.2995%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.08%)</title><rect x="8.0495%" y="549" width="0.0774%" height="15" fill="rgb(244,68,36)" fg:x="104" fg:w="1"/><text x="8.2995%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.08%)</title><rect x="8.0495%" y="533" width="0.0774%" height="15" fill="rgb(232,229,15)" fg:x="104" fg:w="1"/><text x="8.2995%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.08%)</title><rect x="8.0495%" y="517" width="0.0774%" height="15" fill="rgb(254,30,23)" fg:x="104" fg:w="1"/><text x="8.2995%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="8.0495%" y="501" width="0.0774%" height="15" fill="rgb(235,160,14)" fg:x="104" fg:w="1"/><text x="8.2995%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.08%)</title><rect x="8.0495%" y="485" width="0.0774%" height="15" fill="rgb(212,155,44)" fg:x="104" fg:w="1"/><text x="8.2995%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.08%)</title><rect x="8.0495%" y="469" width="0.0774%" height="15" fill="rgb(226,2,50)" fg:x="104" fg:w="1"/><text x="8.2995%" y="479.50"></text></g><g><title>mi_free (1 samples, 0.08%)</title><rect x="8.0495%" y="453" width="0.0774%" height="15" fill="rgb(234,177,6)" fg:x="104" fg:w="1"/><text x="8.2995%" y="463.50"></text></g><g><title>_mi_thread_id (1 samples, 0.08%)</title><rect x="8.0495%" y="437" width="0.0774%" height="15" fill="rgb(217,24,9)" fg:x="104" fg:w="1"/><text x="8.2995%" y="447.50"></text></g><g><title>mi_tls_slot (1 samples, 0.08%)</title><rect x="8.0495%" y="421" width="0.0774%" height="15" fill="rgb(220,13,46)" fg:x="104" fg:w="1"/><text x="8.2995%" y="431.50"></text></g><g><title>&lt;polars_core::series::Series as polars_core::named_from::NamedFrom&lt;T,[f32]&gt;&gt;::new (1 samples, 0.08%)</title><rect x="8.1269%" y="757" width="0.0774%" height="15" fill="rgb(239,221,27)" fg:x="105" fg:w="1"/><text x="8.3769%" y="767.50"></text></g><g><title>_mi_os_free_ex (1 samples, 0.08%)</title><rect x="8.1269%" y="741" width="0.0774%" height="15" fill="rgb(222,198,25)" fg:x="105" fg:w="1"/><text x="8.3769%" y="751.50"></text></g><g><title>_mi_os_free_ex (1 samples, 0.08%)</title><rect x="8.1269%" y="725" width="0.0774%" height="15" fill="rgb(211,99,13)" fg:x="105" fg:w="1"/><text x="8.3769%" y="735.50"></text></g><g><title>mi_os_mem_free (1 samples, 0.08%)</title><rect x="8.1269%" y="709" width="0.0774%" height="15" fill="rgb(232,111,31)" fg:x="105" fg:w="1"/><text x="8.3769%" y="719.50"></text></g><g><title>mi_os_mem_free (1 samples, 0.08%)</title><rect x="8.1269%" y="693" width="0.0774%" height="15" fill="rgb(245,82,37)" fg:x="105" fg:w="1"/><text x="8.3769%" y="703.50"></text></g><g><title>__GI___munmap (1 samples, 0.08%)</title><rect x="8.1269%" y="677" width="0.0774%" height="15" fill="rgb(227,149,46)" fg:x="105" fg:w="1"/><text x="8.3769%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="8.1269%" y="661" width="0.0774%" height="15" fill="rgb(218,36,50)" fg:x="105" fg:w="1"/><text x="8.3769%" y="671.50"></text></g><g><title>_mi_segment_page_free (1 samples, 0.08%)</title><rect x="8.2817%" y="693" width="0.0774%" height="15" fill="rgb(226,80,48)" fg:x="107" fg:w="1"/><text x="8.5317%" y="703.50"></text></g><g><title>mi_segment_page_clear (1 samples, 0.08%)</title><rect x="8.2817%" y="677" width="0.0774%" height="15" fill="rgb(238,224,15)" fg:x="107" fg:w="1"/><text x="8.5317%" y="687.50"></text></g><g><title>mi_segment_span_free_coalesce (1 samples, 0.08%)</title><rect x="8.2817%" y="661" width="0.0774%" height="15" fill="rgb(241,136,10)" fg:x="107" fg:w="1"/><text x="8.5317%" y="671.50"></text></g><g><title>mi_segment_span_free (1 samples, 0.08%)</title><rect x="8.2817%" y="645" width="0.0774%" height="15" fill="rgb(208,32,45)" fg:x="107" fg:w="1"/><text x="8.5317%" y="655.50"></text></g><g><title>mi_segment_perhaps_decommit (1 samples, 0.08%)</title><rect x="8.2817%" y="629" width="0.0774%" height="15" fill="rgb(207,135,9)" fg:x="107" fg:w="1"/><text x="8.5317%" y="639.50"></text></g><g><title>mi_commit_mask_set (1 samples, 0.08%)</title><rect x="8.2817%" y="613" width="0.0774%" height="15" fill="rgb(206,86,44)" fg:x="107" fg:w="1"/><text x="8.5317%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 1.86%)</title><rect x="8.3591%" y="661" width="1.8576%" height="15" fill="rgb(245,177,15)" fg:x="108" fg:w="24"/><text x="8.6091%" y="671.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::entities::SingleEntOutput]&gt; (24 samples, 1.86%)</title><rect x="8.3591%" y="645" width="1.8576%" height="15" fill="rgb(206,64,50)" fg:x="108" fg:w="24"/><text x="8.6091%" y="655.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::entities::SingleEntOutput&gt; (24 samples, 1.86%)</title><rect x="8.3591%" y="629" width="1.8576%" height="15" fill="rgb(234,36,40)" fg:x="108" fg:w="24"/><text x="8.6091%" y="639.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::variants::PropData&gt; (24 samples, 1.86%)</title><rect x="8.3591%" y="613" width="1.8576%" height="15" fill="rgb(213,64,8)" fg:x="108" fg:w="24"/><text x="8.6091%" y="623.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 2.09%)</title><rect x="8.2043%" y="741" width="2.0898%" height="15" fill="rgb(210,75,36)" fg:x="106" fg:w="27"/><text x="8.4543%" y="751.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::parser::JobResult]&gt; (27 samples, 2.09%)</title><rect x="8.2043%" y="725" width="2.0898%" height="15" fill="rgb(229,88,21)" fg:x="106" fg:w="27"/><text x="8.4543%" y="735.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser::JobResult&gt; (26 samples, 2.01%)</title><rect x="8.2817%" y="709" width="2.0124%" height="15" fill="rgb(252,204,47)" fg:x="107" fg:w="26"/><text x="8.5317%" y="719.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::entities::PacketEntsOutput&gt; (25 samples, 1.93%)</title><rect x="8.3591%" y="693" width="1.9350%" height="15" fill="rgb(208,77,27)" fg:x="108" fg:w="25"/><text x="8.6091%" y="703.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::entities::SingleEntOutput&gt;&gt; (25 samples, 1.93%)</title><rect x="8.3591%" y="677" width="1.9350%" height="15" fill="rgb(221,76,26)" fg:x="108" fg:w="25"/><text x="8.6091%" y="687.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;demoparser::parsing::entities::SingleEntOutput&gt;&gt; (1 samples, 0.08%)</title><rect x="10.2167%" y="661" width="0.0774%" height="15" fill="rgb(225,139,18)" fg:x="132" fg:w="1"/><text x="10.4667%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="10.2167%" y="645" width="0.0774%" height="15" fill="rgb(230,137,11)" fg:x="132" fg:w="1"/><text x="10.4667%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::parser::JobResult&gt;&gt; (28 samples, 2.17%)</title><rect x="8.2043%" y="757" width="2.1672%" height="15" fill="rgb(212,28,1)" fg:x="106" fg:w="28"/><text x="8.4543%" y="767.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;demoparser::parsing::parser::JobResult&gt;&gt; (1 samples, 0.08%)</title><rect x="10.2941%" y="741" width="0.0774%" height="15" fill="rgb(248,164,17)" fg:x="133" fg:w="1"/><text x="10.5441%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="10.2941%" y="725" width="0.0774%" height="15" fill="rgb(222,171,42)" fg:x="133" fg:w="1"/><text x="10.5441%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.08%)</title><rect x="10.2941%" y="709" width="0.0774%" height="15" fill="rgb(243,84,45)" fg:x="133" fg:w="1"/><text x="10.5441%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.08%)</title><rect x="10.2941%" y="693" width="0.0774%" height="15" fill="rgb(252,49,23)" fg:x="133" fg:w="1"/><text x="10.5441%" y="703.50"></text></g><g><title>_mi_os_free_ex (1 samples, 0.08%)</title><rect x="10.2941%" y="677" width="0.0774%" height="15" fill="rgb(215,19,7)" fg:x="133" fg:w="1"/><text x="10.5441%" y="687.50"></text></g><g><title>_mi_os_free_ex (1 samples, 0.08%)</title><rect x="10.2941%" y="661" width="0.0774%" height="15" fill="rgb(238,81,41)" fg:x="133" fg:w="1"/><text x="10.5441%" y="671.50"></text></g><g><title>mi_os_mem_free (1 samples, 0.08%)</title><rect x="10.2941%" y="645" width="0.0774%" height="15" fill="rgb(210,199,37)" fg:x="133" fg:w="1"/><text x="10.5441%" y="655.50"></text></g><g><title>mi_os_mem_free (1 samples, 0.08%)</title><rect x="10.2941%" y="629" width="0.0774%" height="15" fill="rgb(244,192,49)" fg:x="133" fg:w="1"/><text x="10.5441%" y="639.50"></text></g><g><title>__GI___munmap (1 samples, 0.08%)</title><rect x="10.2941%" y="613" width="0.0774%" height="15" fill="rgb(226,211,11)" fg:x="133" fg:w="1"/><text x="10.5441%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="10.2941%" y="597" width="0.0774%" height="15" fill="rgb(236,162,54)" fg:x="133" fg:w="1"/><text x="10.5441%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="10.2941%" y="581" width="0.0774%" height="15" fill="rgb(220,229,9)" fg:x="133" fg:w="1"/><text x="10.5441%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="10.2941%" y="565" width="0.0774%" height="15" fill="rgb(250,87,22)" fg:x="133" fg:w="1"/><text x="10.5441%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="10.2941%" y="549" width="0.0774%" height="15" fill="rgb(239,43,17)" fg:x="133" fg:w="1"/><text x="10.5441%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="10.2941%" y="533" width="0.0774%" height="15" fill="rgb(231,177,25)" fg:x="133" fg:w="1"/><text x="10.5441%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="10.2941%" y="517" width="0.0774%" height="15" fill="rgb(219,179,1)" fg:x="133" fg:w="1"/><text x="10.5441%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="10.2941%" y="501" width="0.0774%" height="15" fill="rgb(238,219,53)" fg:x="133" fg:w="1"/><text x="10.5441%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="10.2941%" y="485" width="0.0774%" height="15" fill="rgb(232,167,36)" fg:x="133" fg:w="1"/><text x="10.5441%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="10.2941%" y="469" width="0.0774%" height="15" fill="rgb(244,19,51)" fg:x="133" fg:w="1"/><text x="10.5441%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="10.2941%" y="453" width="0.0774%" height="15" fill="rgb(224,6,22)" fg:x="133" fg:w="1"/><text x="10.5441%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="10.2941%" y="437" width="0.0774%" height="15" fill="rgb(224,145,5)" fg:x="133" fg:w="1"/><text x="10.5441%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="10.2941%" y="421" width="0.0774%" height="15" fill="rgb(234,130,49)" fg:x="133" fg:w="1"/><text x="10.5441%" y="431.50"></text></g><g><title>ZSTD_decodeSequence (1 samples, 0.08%)</title><rect x="10.3715%" y="405" width="0.0774%" height="15" fill="rgb(254,6,2)" fg:x="134" fg:w="1"/><text x="10.6215%" y="415.50"></text></g><g><title>ZSTD_updateFseStateWithDInfo (1 samples, 0.08%)</title><rect x="10.3715%" y="389" width="0.0774%" height="15" fill="rgb(208,96,46)" fg:x="134" fg:w="1"/><text x="10.6215%" y="399.50"></text></g><g><title>BIT_readBits (1 samples, 0.08%)</title><rect x="10.3715%" y="373" width="0.0774%" height="15" fill="rgb(239,3,39)" fg:x="134" fg:w="1"/><text x="10.6215%" y="383.50"></text></g><g><title>BIT_lookBits (1 samples, 0.08%)</title><rect x="10.3715%" y="357" width="0.0774%" height="15" fill="rgb(233,210,1)" fg:x="134" fg:w="1"/><text x="10.6215%" y="367.50"></text></g><g><title>BIT_getMiddleBits (1 samples, 0.08%)</title><rect x="10.3715%" y="341" width="0.0774%" height="15" fill="rgb(244,137,37)" fg:x="134" fg:w="1"/><text x="10.6215%" y="351.50"></text></g><g><title>ZSTD_overlapCopy8 (2 samples, 0.15%)</title><rect x="10.4489%" y="389" width="0.1548%" height="15" fill="rgb(240,136,2)" fg:x="135" fg:w="2"/><text x="10.6989%" y="399.50"></text></g><g><title>ZSTD_copy8 (1 samples, 0.08%)</title><rect x="10.5263%" y="373" width="0.0774%" height="15" fill="rgb(239,18,37)" fg:x="136" fg:w="1"/><text x="10.7763%" y="383.50"></text></g><g><title>std::io::Read::read_buf::{{closure}} (8 samples, 0.62%)</title><rect x="10.3715%" y="677" width="0.6192%" height="15" fill="rgb(218,185,22)" fg:x="134" fg:w="8"/><text x="10.6215%" y="687.50"></text></g><g><title>&lt;zip::read::ZipFile as std::io::Read&gt;::read (8 samples, 0.62%)</title><rect x="10.3715%" y="661" width="0.6192%" height="15" fill="rgb(225,218,4)" fg:x="134" fg:w="8"/><text x="10.6215%" y="671.50"></text></g><g><title>&lt;zip::read::ZipFileReader as std::io::Read&gt;::read (8 samples, 0.62%)</title><rect x="10.3715%" y="645" width="0.6192%" height="15" fill="rgb(230,182,32)" fg:x="134" fg:w="8"/><text x="10.6215%" y="655.50"></text></g><g><title>&lt;zip::crc32::Crc32Reader&lt;R&gt; as std::io::Read&gt;::read (8 samples, 0.62%)</title><rect x="10.3715%" y="629" width="0.6192%" height="15" fill="rgb(242,56,43)" fg:x="134" fg:w="8"/><text x="10.6215%" y="639.50"></text></g><g><title>&lt;zstd::stream::read::Decoder&lt;R&gt; as std::io::Read&gt;::read (8 samples, 0.62%)</title><rect x="10.3715%" y="613" width="0.6192%" height="15" fill="rgb(233,99,24)" fg:x="134" fg:w="8"/><text x="10.6215%" y="623.50"></text></g><g><title>&lt;zstd::stream::zio::reader::Reader&lt;R,D&gt; as std::io::Read&gt;::read (8 samples, 0.62%)</title><rect x="10.3715%" y="597" width="0.6192%" height="15" fill="rgb(234,209,42)" fg:x="134" fg:w="8"/><text x="10.6215%" y="607.50"></text></g><g><title>&lt;zstd::stream::raw::Decoder as zstd::stream::raw::Operation&gt;::run (8 samples, 0.62%)</title><rect x="10.3715%" y="581" width="0.6192%" height="15" fill="rgb(227,7,12)" fg:x="134" fg:w="8"/><text x="10.6215%" y="591.50"></text></g><g><title>zstd_safe::DCtx::decompress_stream (8 samples, 0.62%)</title><rect x="10.3715%" y="565" width="0.6192%" height="15" fill="rgb(245,203,43)" fg:x="134" fg:w="8"/><text x="10.6215%" y="575.50"></text></g><g><title>ZSTD_decompressStream (8 samples, 0.62%)</title><rect x="10.3715%" y="549" width="0.6192%" height="15" fill="rgb(238,205,33)" fg:x="134" fg:w="8"/><text x="10.6215%" y="559.50"></text></g><g><title>ZSTD_decompressContinueStream (8 samples, 0.62%)</title><rect x="10.3715%" y="533" width="0.6192%" height="15" fill="rgb(231,56,7)" fg:x="134" fg:w="8"/><text x="10.6215%" y="543.50"></text></g><g><title>ZSTD_decompressContinue (8 samples, 0.62%)</title><rect x="10.3715%" y="517" width="0.6192%" height="15" fill="rgb(244,186,29)" fg:x="134" fg:w="8"/><text x="10.6215%" y="527.50"></text></g><g><title>ZSTD_decompressContinue (8 samples, 0.62%)</title><rect x="10.3715%" y="501" width="0.6192%" height="15" fill="rgb(234,111,31)" fg:x="134" fg:w="8"/><text x="10.6215%" y="511.50"></text></g><g><title>ZSTD_decompressBlock_internal (8 samples, 0.62%)</title><rect x="10.3715%" y="485" width="0.6192%" height="15" fill="rgb(241,149,10)" fg:x="134" fg:w="8"/><text x="10.6215%" y="495.50"></text></g><g><title>ZSTD_decompressBlock_internal (8 samples, 0.62%)</title><rect x="10.3715%" y="469" width="0.6192%" height="15" fill="rgb(249,206,44)" fg:x="134" fg:w="8"/><text x="10.6215%" y="479.50"></text></g><g><title>ZSTD_decompressSequences (8 samples, 0.62%)</title><rect x="10.3715%" y="453" width="0.6192%" height="15" fill="rgb(251,153,30)" fg:x="134" fg:w="8"/><text x="10.6215%" y="463.50"></text></g><g><title>ZSTD_decompressSequences_bmi2 (8 samples, 0.62%)</title><rect x="10.3715%" y="437" width="0.6192%" height="15" fill="rgb(239,152,38)" fg:x="134" fg:w="8"/><text x="10.6215%" y="447.50"></text></g><g><title>ZSTD_decompressSequences_body (8 samples, 0.62%)</title><rect x="10.3715%" y="421" width="0.6192%" height="15" fill="rgb(249,139,47)" fg:x="134" fg:w="8"/><text x="10.6215%" y="431.50"></text></g><g><title>ZSTD_execSequence (7 samples, 0.54%)</title><rect x="10.4489%" y="405" width="0.5418%" height="15" fill="rgb(244,64,35)" fg:x="135" fg:w="7"/><text x="10.6989%" y="415.50"></text></g><g><title>ZSTD_wildcopy (5 samples, 0.39%)</title><rect x="10.6037%" y="389" width="0.3870%" height="15" fill="rgb(216,46,15)" fg:x="137" fg:w="5"/><text x="10.8537%" y="399.50"></text></g><g><title>demoparser::parsing::cache::ReadCache::read_deltas_by_pidx (9 samples, 0.70%)</title><rect x="10.3715%" y="757" width="0.6966%" height="15" fill="rgb(250,74,19)" fg:x="134" fg:w="9"/><text x="10.6215%" y="767.50"></text></g><g><title>std::io::Read::read_to_end (9 samples, 0.70%)</title><rect x="10.3715%" y="741" width="0.6966%" height="15" fill="rgb(249,42,33)" fg:x="134" fg:w="9"/><text x="10.6215%" y="751.50"></text></g><g><title>std::io::default_read_to_end (9 samples, 0.70%)</title><rect x="10.3715%" y="725" width="0.6966%" height="15" fill="rgb(242,149,17)" fg:x="134" fg:w="9"/><text x="10.6215%" y="735.50"></text></g><g><title>std::io::Read::read_buf (9 samples, 0.70%)</title><rect x="10.3715%" y="709" width="0.6966%" height="15" fill="rgb(244,29,21)" fg:x="134" fg:w="9"/><text x="10.6215%" y="719.50"></text></g><g><title>std::io::default_read_buf (9 samples, 0.70%)</title><rect x="10.3715%" y="693" width="0.6966%" height="15" fill="rgb(220,130,37)" fg:x="134" fg:w="9"/><text x="10.6215%" y="703.50"></text></g><g><title>std::io::readbuf::BorrowedCursor::ensure_init (1 samples, 0.08%)</title><rect x="10.9907%" y="677" width="0.0774%" height="15" fill="rgb(211,67,2)" fg:x="142" fg:w="1"/><text x="11.2407%" y="687.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.08%)</title><rect x="10.9907%" y="661" width="0.0774%" height="15" fill="rgb(235,68,52)" fg:x="142" fg:w="1"/><text x="11.2407%" y="671.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="10.9907%" y="645" width="0.0774%" height="15" fill="rgb(246,142,3)" fg:x="142" fg:w="1"/><text x="11.2407%" y="655.50"></text></g><g><title>&lt;demoparser::parsing::parser::MsgBluePrint as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.0681%" y="677" width="0.0774%" height="15" fill="rgb(241,25,7)" fg:x="143" fg:w="1"/><text x="11.3181%" y="687.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for usize&gt;::clone (1 samples, 0.08%)</title><rect x="11.0681%" y="661" width="0.0774%" height="15" fill="rgb(242,119,39)" fg:x="143" fg:w="1"/><text x="11.3181%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.62%)</title><rect x="11.0681%" y="741" width="0.6192%" height="15" fill="rgb(241,98,45)" fg:x="143" fg:w="8"/><text x="11.3181%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.62%)</title><rect x="11.0681%" y="725" width="0.6192%" height="15" fill="rgb(254,28,30)" fg:x="143" fg:w="8"/><text x="11.3181%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.62%)</title><rect x="11.0681%" y="709" width="0.6192%" height="15" fill="rgb(241,142,54)" fg:x="143" fg:w="8"/><text x="11.3181%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.62%)</title><rect x="11.0681%" y="693" width="0.6192%" height="15" fill="rgb(222,85,15)" fg:x="143" fg:w="8"/><text x="11.3181%" y="703.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (7 samples, 0.54%)</title><rect x="11.1455%" y="677" width="0.5418%" height="15" fill="rgb(210,85,47)" fg:x="144" fg:w="7"/><text x="11.3955%" y="687.50"></text></g><g><title>[unknown] (6 samples, 0.46%)</title><rect x="11.2229%" y="661" width="0.4644%" height="15" fill="rgb(224,206,25)" fg:x="145" fg:w="6"/><text x="11.4729%" y="671.50"></text></g><g><title>[unknown] (4 samples, 0.31%)</title><rect x="11.3777%" y="645" width="0.3096%" height="15" fill="rgb(243,201,19)" fg:x="147" fg:w="4"/><text x="11.6277%" y="655.50"></text></g><g><title>[unknown] (4 samples, 0.31%)</title><rect x="11.3777%" y="629" width="0.3096%" height="15" fill="rgb(236,59,4)" fg:x="147" fg:w="4"/><text x="11.6277%" y="639.50"></text></g><g><title>[unknown] (4 samples, 0.31%)</title><rect x="11.3777%" y="613" width="0.3096%" height="15" fill="rgb(254,179,45)" fg:x="147" fg:w="4"/><text x="11.6277%" y="623.50"></text></g><g><title>[unknown] (4 samples, 0.31%)</title><rect x="11.3777%" y="597" width="0.3096%" height="15" fill="rgb(226,14,10)" fg:x="147" fg:w="4"/><text x="11.6277%" y="607.50"></text></g><g><title>[unknown] (4 samples, 0.31%)</title><rect x="11.3777%" y="581" width="0.3096%" height="15" fill="rgb(244,27,41)" fg:x="147" fg:w="4"/><text x="11.6277%" y="591.50"></text></g><g><title>[unknown] (4 samples, 0.31%)</title><rect x="11.3777%" y="565" width="0.3096%" height="15" fill="rgb(235,35,32)" fg:x="147" fg:w="4"/><text x="11.6277%" y="575.50"></text></g><g><title>[unknown] (4 samples, 0.31%)</title><rect x="11.3777%" y="549" width="0.3096%" height="15" fill="rgb(218,68,31)" fg:x="147" fg:w="4"/><text x="11.6277%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="11.4551%" y="533" width="0.2322%" height="15" fill="rgb(207,120,37)" fg:x="148" fg:w="3"/><text x="11.7051%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="11.4551%" y="517" width="0.2322%" height="15" fill="rgb(227,98,0)" fg:x="148" fg:w="3"/><text x="11.7051%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="11.4551%" y="501" width="0.2322%" height="15" fill="rgb(207,7,3)" fg:x="148" fg:w="3"/><text x="11.7051%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="11.6099%" y="485" width="0.0774%" height="15" fill="rgb(206,98,19)" fg:x="150" fg:w="1"/><text x="11.8599%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.62%)</title><rect x="11.6873%" y="693" width="0.6192%" height="15" fill="rgb(217,5,26)" fg:x="151" fg:w="8"/><text x="11.9373%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.62%)</title><rect x="11.6873%" y="677" width="0.6192%" height="15" fill="rgb(235,190,38)" fg:x="151" fg:w="8"/><text x="11.9373%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.62%)</title><rect x="11.6873%" y="661" width="0.6192%" height="15" fill="rgb(247,86,24)" fg:x="151" fg:w="8"/><text x="11.9373%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.62%)</title><rect x="11.6873%" y="645" width="0.6192%" height="15" fill="rgb(205,101,16)" fg:x="151" fg:w="8"/><text x="11.9373%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.62%)</title><rect x="11.6873%" y="629" width="0.6192%" height="15" fill="rgb(246,168,33)" fg:x="151" fg:w="8"/><text x="11.9373%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.62%)</title><rect x="11.6873%" y="613" width="0.6192%" height="15" fill="rgb(231,114,1)" fg:x="151" fg:w="8"/><text x="11.9373%" y="623.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.62%)</title><rect x="11.6873%" y="597" width="0.6192%" height="15" fill="rgb(207,184,53)" fg:x="151" fg:w="8"/><text x="11.9373%" y="607.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.62%)</title><rect x="11.6873%" y="581" width="0.6192%" height="15" fill="rgb(224,95,51)" fg:x="151" fg:w="8"/><text x="11.9373%" y="591.50"></text></g><g><title>_mi_heap_realloc_zero (8 samples, 0.62%)</title><rect x="11.6873%" y="565" width="0.6192%" height="15" fill="rgb(212,188,45)" fg:x="151" fg:w="8"/><text x="11.9373%" y="575.50"></text></g><g><title>_mi_memcpy_aligned (8 samples, 0.62%)</title><rect x="11.6873%" y="549" width="0.6192%" height="15" fill="rgb(223,154,38)" fg:x="151" fg:w="8"/><text x="11.9373%" y="559.50"></text></g><g><title>_mi_memcpy (8 samples, 0.62%)</title><rect x="11.6873%" y="533" width="0.6192%" height="15" fill="rgb(251,22,52)" fg:x="151" fg:w="8"/><text x="11.9373%" y="543.50"></text></g><g><title>memcpy (8 samples, 0.62%)</title><rect x="11.6873%" y="517" width="0.6192%" height="15" fill="rgb(229,209,22)" fg:x="151" fg:w="8"/><text x="11.9373%" y="527.50"></text></g><g><title>[libc.so.6] (8 samples, 0.62%)</title><rect x="11.6873%" y="501" width="0.6192%" height="15" fill="rgb(234,138,34)" fg:x="151" fg:w="8"/><text x="11.9373%" y="511.50"></text></g><g><title>[unknown] (8 samples, 0.62%)</title><rect x="11.6873%" y="485" width="0.6192%" height="15" fill="rgb(212,95,11)" fg:x="151" fg:w="8"/><text x="11.9373%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.46%)</title><rect x="11.8421%" y="469" width="0.4644%" height="15" fill="rgb(240,179,47)" fg:x="153" fg:w="6"/><text x="12.0921%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.46%)</title><rect x="11.8421%" y="453" width="0.4644%" height="15" fill="rgb(240,163,11)" fg:x="153" fg:w="6"/><text x="12.0921%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.46%)</title><rect x="11.8421%" y="437" width="0.4644%" height="15" fill="rgb(236,37,12)" fg:x="153" fg:w="6"/><text x="12.0921%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.46%)</title><rect x="11.8421%" y="421" width="0.4644%" height="15" fill="rgb(232,164,16)" fg:x="153" fg:w="6"/><text x="12.0921%" y="431.50"></text></g><g><title>[unknown] (6 samples, 0.46%)</title><rect x="11.8421%" y="405" width="0.4644%" height="15" fill="rgb(244,205,15)" fg:x="153" fg:w="6"/><text x="12.0921%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.46%)</title><rect x="11.8421%" y="389" width="0.4644%" height="15" fill="rgb(223,117,47)" fg:x="153" fg:w="6"/><text x="12.0921%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="11.9195%" y="373" width="0.3870%" height="15" fill="rgb(244,107,35)" fg:x="154" fg:w="5"/><text x="12.1695%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="11.9195%" y="357" width="0.3870%" height="15" fill="rgb(205,140,8)" fg:x="154" fg:w="5"/><text x="12.1695%" y="367.50"></text></g><g><title>[unknown] (4 samples, 0.31%)</title><rect x="11.9969%" y="341" width="0.3096%" height="15" fill="rgb(228,84,46)" fg:x="155" fg:w="4"/><text x="12.2469%" y="351.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="12.0743%" y="325" width="0.2322%" height="15" fill="rgb(254,188,9)" fg:x="156" fg:w="3"/><text x="12.3243%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (34 samples, 2.63%)</title><rect x="11.6873%" y="709" width="2.6316%" height="15" fill="rgb(206,112,54)" fg:x="151" fg:w="34"/><text x="11.9373%" y="719.50">al..</text></g><g><title>core::intrinsics::copy_nonoverlapping (26 samples, 2.01%)</title><rect x="12.3065%" y="693" width="2.0124%" height="15" fill="rgb(216,84,49)" fg:x="159" fg:w="26"/><text x="12.5565%" y="703.50">c..</text></g><g><title>[libc.so.6] (26 samples, 2.01%)</title><rect x="12.3065%" y="677" width="2.0124%" height="15" fill="rgb(214,194,35)" fg:x="159" fg:w="26"/><text x="12.5565%" y="687.50">[..</text></g><g><title>[unknown] (16 samples, 1.24%)</title><rect x="13.0805%" y="661" width="1.2384%" height="15" fill="rgb(249,28,3)" fg:x="169" fg:w="16"/><text x="13.3305%" y="671.50"></text></g><g><title>[unknown] (7 samples, 0.54%)</title><rect x="13.7771%" y="645" width="0.5418%" height="15" fill="rgb(222,56,52)" fg:x="178" fg:w="7"/><text x="14.0271%" y="655.50"></text></g><g><title>[unknown] (7 samples, 0.54%)</title><rect x="13.7771%" y="629" width="0.5418%" height="15" fill="rgb(245,217,50)" fg:x="178" fg:w="7"/><text x="14.0271%" y="639.50"></text></g><g><title>[unknown] (7 samples, 0.54%)</title><rect x="13.7771%" y="613" width="0.5418%" height="15" fill="rgb(213,201,24)" fg:x="178" fg:w="7"/><text x="14.0271%" y="623.50"></text></g><g><title>[unknown] (7 samples, 0.54%)</title><rect x="13.7771%" y="597" width="0.5418%" height="15" fill="rgb(248,116,28)" fg:x="178" fg:w="7"/><text x="14.0271%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="13.9319%" y="581" width="0.3870%" height="15" fill="rgb(219,72,43)" fg:x="180" fg:w="5"/><text x="14.1819%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="13.9319%" y="565" width="0.3870%" height="15" fill="rgb(209,138,14)" fg:x="180" fg:w="5"/><text x="14.1819%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="13.9319%" y="549" width="0.3870%" height="15" fill="rgb(222,18,33)" fg:x="180" fg:w="5"/><text x="14.1819%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="13.9319%" y="533" width="0.3870%" height="15" fill="rgb(213,199,7)" fg:x="180" fg:w="5"/><text x="14.1819%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="13.9319%" y="517" width="0.3870%" height="15" fill="rgb(250,110,10)" fg:x="180" fg:w="5"/><text x="14.1819%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="13.9319%" y="501" width="0.3870%" height="15" fill="rgb(248,123,6)" fg:x="180" fg:w="5"/><text x="14.1819%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="14.2415%" y="485" width="0.0774%" height="15" fill="rgb(206,91,31)" fg:x="184" fg:w="1"/><text x="14.4915%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (37 samples, 2.86%)</title><rect x="11.6873%" y="741" width="2.8638%" height="15" fill="rgb(211,154,13)" fg:x="151" fg:w="37"/><text x="11.9373%" y="751.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (37 samples, 2.86%)</title><rect x="11.6873%" y="725" width="2.8638%" height="15" fill="rgb(225,148,7)" fg:x="151" fg:w="37"/><text x="11.9373%" y="735.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;demoparser::parsing::parser::JobResult&gt;&gt; (3 samples, 0.23%)</title><rect x="14.3189%" y="709" width="0.2322%" height="15" fill="rgb(220,160,43)" fg:x="185" fg:w="3"/><text x="14.5689%" y="719.50"></text></g><g><title>_mi_os_free_ex (3 samples, 0.23%)</title><rect x="14.3189%" y="693" width="0.2322%" height="15" fill="rgb(213,52,39)" fg:x="185" fg:w="3"/><text x="14.5689%" y="703.50"></text></g><g><title>_mi_os_free_ex (3 samples, 0.23%)</title><rect x="14.3189%" y="677" width="0.2322%" height="15" fill="rgb(243,137,7)" fg:x="185" fg:w="3"/><text x="14.5689%" y="687.50"></text></g><g><title>mi_os_mem_free (3 samples, 0.23%)</title><rect x="14.3189%" y="661" width="0.2322%" height="15" fill="rgb(230,79,13)" fg:x="185" fg:w="3"/><text x="14.5689%" y="671.50"></text></g><g><title>mi_os_mem_free (3 samples, 0.23%)</title><rect x="14.3189%" y="645" width="0.2322%" height="15" fill="rgb(247,105,23)" fg:x="185" fg:w="3"/><text x="14.5689%" y="655.50"></text></g><g><title>__GI___munmap (3 samples, 0.23%)</title><rect x="14.3189%" y="629" width="0.2322%" height="15" fill="rgb(223,179,41)" fg:x="185" fg:w="3"/><text x="14.5689%" y="639.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="14.3189%" y="613" width="0.2322%" height="15" fill="rgb(218,9,34)" fg:x="185" fg:w="3"/><text x="14.5689%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="14.3189%" y="597" width="0.2322%" height="15" fill="rgb(222,106,8)" fg:x="185" fg:w="3"/><text x="14.5689%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="14.3189%" y="581" width="0.2322%" height="15" fill="rgb(211,220,0)" fg:x="185" fg:w="3"/><text x="14.5689%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="14.3189%" y="565" width="0.2322%" height="15" fill="rgb(229,52,16)" fg:x="185" fg:w="3"/><text x="14.5689%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="14.3189%" y="549" width="0.2322%" height="15" fill="rgb(212,155,18)" fg:x="185" fg:w="3"/><text x="14.5689%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="14.3189%" y="533" width="0.2322%" height="15" fill="rgb(242,21,14)" fg:x="185" fg:w="3"/><text x="14.5689%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="14.3189%" y="517" width="0.2322%" height="15" fill="rgb(222,19,48)" fg:x="185" fg:w="3"/><text x="14.5689%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="14.3189%" y="501" width="0.2322%" height="15" fill="rgb(232,45,27)" fg:x="185" fg:w="3"/><text x="14.5689%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="14.3189%" y="485" width="0.2322%" height="15" fill="rgb(249,103,42)" fg:x="185" fg:w="3"/><text x="14.5689%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="14.3189%" y="469" width="0.2322%" height="15" fill="rgb(246,81,33)" fg:x="185" fg:w="3"/><text x="14.5689%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="14.3963%" y="453" width="0.1548%" height="15" fill="rgb(252,33,42)" fg:x="186" fg:w="2"/><text x="14.6463%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="14.4737%" y="437" width="0.0774%" height="15" fill="rgb(209,212,41)" fg:x="187" fg:w="1"/><text x="14.7237%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="14.4737%" y="421" width="0.0774%" height="15" fill="rgb(207,154,6)" fg:x="187" fg:w="1"/><text x="14.7237%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="14.4737%" y="405" width="0.0774%" height="15" fill="rgb(223,64,47)" fg:x="187" fg:w="1"/><text x="14.7237%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="14.4737%" y="389" width="0.0774%" height="15" fill="rgb(211,161,38)" fg:x="187" fg:w="1"/><text x="14.7237%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="14.4737%" y="373" width="0.0774%" height="15" fill="rgb(219,138,40)" fg:x="187" fg:w="1"/><text x="14.7237%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="14.4737%" y="357" width="0.0774%" height="15" fill="rgb(241,228,46)" fg:x="187" fg:w="1"/><text x="14.7237%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="14.4737%" y="341" width="0.0774%" height="15" fill="rgb(223,209,38)" fg:x="187" fg:w="1"/><text x="14.7237%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="14.5511%" y="645" width="0.0774%" height="15" fill="rgb(236,164,45)" fg:x="188" fg:w="1"/><text x="14.8011%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (1 samples, 0.08%)</title><rect x="14.5511%" y="629" width="0.0774%" height="15" fill="rgb(231,15,5)" fg:x="188" fg:w="1"/><text x="14.8011%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="14.5511%" y="613" width="0.0774%" height="15" fill="rgb(252,35,15)" fg:x="188" fg:w="1"/><text x="14.8011%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.23%)</title><rect x="14.5511%" y="661" width="0.2322%" height="15" fill="rgb(248,181,18)" fg:x="188" fg:w="3"/><text x="14.8011%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="14.6285%" y="645" width="0.1548%" height="15" fill="rgb(233,39,42)" fg:x="189" fg:w="2"/><text x="14.8785%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="14.6285%" y="629" width="0.1548%" height="15" fill="rgb(238,110,33)" fg:x="189" fg:w="2"/><text x="14.8785%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.15%)</title><rect x="14.6285%" y="613" width="0.1548%" height="15" fill="rgb(233,195,10)" fg:x="189" fg:w="2"/><text x="14.8785%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.15%)</title><rect x="14.6285%" y="597" width="0.1548%" height="15" fill="rgb(254,105,3)" fg:x="189" fg:w="2"/><text x="14.8785%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.15%)</title><rect x="14.6285%" y="581" width="0.1548%" height="15" fill="rgb(221,225,9)" fg:x="189" fg:w="2"/><text x="14.8785%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.15%)</title><rect x="14.6285%" y="565" width="0.1548%" height="15" fill="rgb(224,227,45)" fg:x="189" fg:w="2"/><text x="14.8785%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.15%)</title><rect x="14.6285%" y="549" width="0.1548%" height="15" fill="rgb(229,198,43)" fg:x="189" fg:w="2"/><text x="14.8785%" y="559.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.15%)</title><rect x="14.6285%" y="533" width="0.1548%" height="15" fill="rgb(206,209,35)" fg:x="189" fg:w="2"/><text x="14.8785%" y="543.50"></text></g><g><title>_mi_heap_realloc_zero (2 samples, 0.15%)</title><rect x="14.6285%" y="517" width="0.1548%" height="15" fill="rgb(245,195,53)" fg:x="189" fg:w="2"/><text x="14.8785%" y="527.50"></text></g><g><title>_mi_memcpy_aligned (2 samples, 0.15%)</title><rect x="14.6285%" y="501" width="0.1548%" height="15" fill="rgb(240,92,26)" fg:x="189" fg:w="2"/><text x="14.8785%" y="511.50"></text></g><g><title>_mi_memcpy (2 samples, 0.15%)</title><rect x="14.6285%" y="485" width="0.1548%" height="15" fill="rgb(207,40,23)" fg:x="189" fg:w="2"/><text x="14.8785%" y="495.50"></text></g><g><title>memcpy (2 samples, 0.15%)</title><rect x="14.6285%" y="469" width="0.1548%" height="15" fill="rgb(223,111,35)" fg:x="189" fg:w="2"/><text x="14.8785%" y="479.50"></text></g><g><title>[libc.so.6] (2 samples, 0.15%)</title><rect x="14.6285%" y="453" width="0.1548%" height="15" fill="rgb(229,147,28)" fg:x="189" fg:w="2"/><text x="14.8785%" y="463.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (1 samples, 0.08%)</title><rect x="14.7833%" y="565" width="0.0774%" height="15" fill="rgb(211,29,28)" fg:x="191" fg:w="1"/><text x="15.0333%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (10 samples, 0.77%)</title><rect x="14.7833%" y="597" width="0.7740%" height="15" fill="rgb(228,72,33)" fg:x="191" fg:w="10"/><text x="15.0333%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (10 samples, 0.77%)</title><rect x="14.7833%" y="581" width="0.7740%" height="15" fill="rgb(205,214,31)" fg:x="191" fg:w="10"/><text x="15.0333%" y="591.50"></text></g><g><title>core::ptr::write (9 samples, 0.70%)</title><rect x="14.8607%" y="565" width="0.6966%" height="15" fill="rgb(224,111,15)" fg:x="192" fg:w="9"/><text x="15.1107%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.46%)</title><rect x="15.0929%" y="549" width="0.4644%" height="15" fill="rgb(253,21,26)" fg:x="195" fg:w="6"/><text x="15.3429%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="15.1703%" y="533" width="0.3870%" height="15" fill="rgb(245,139,43)" fg:x="196" fg:w="5"/><text x="15.4203%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="15.1703%" y="517" width="0.3870%" height="15" fill="rgb(252,170,7)" fg:x="196" fg:w="5"/><text x="15.4203%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="15.1703%" y="501" width="0.3870%" height="15" fill="rgb(231,118,14)" fg:x="196" fg:w="5"/><text x="15.4203%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="15.1703%" y="485" width="0.3870%" height="15" fill="rgb(238,83,0)" fg:x="196" fg:w="5"/><text x="15.4203%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="15.3251%" y="469" width="0.2322%" height="15" fill="rgb(221,39,39)" fg:x="198" fg:w="3"/><text x="15.5751%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="15.4025%" y="453" width="0.1548%" height="15" fill="rgb(222,119,46)" fg:x="199" fg:w="2"/><text x="15.6525%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="15.4025%" y="437" width="0.1548%" height="15" fill="rgb(222,165,49)" fg:x="199" fg:w="2"/><text x="15.6525%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="15.4025%" y="421" width="0.1548%" height="15" fill="rgb(219,113,52)" fg:x="199" fg:w="2"/><text x="15.6525%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="15.4025%" y="405" width="0.1548%" height="15" fill="rgb(214,7,15)" fg:x="199" fg:w="2"/><text x="15.6525%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="15.4025%" y="389" width="0.1548%" height="15" fill="rgb(235,32,4)" fg:x="199" fg:w="2"/><text x="15.6525%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="15.4799%" y="373" width="0.0774%" height="15" fill="rgb(238,90,54)" fg:x="200" fg:w="1"/><text x="15.7299%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (2 samples, 0.15%)</title><rect x="16.0217%" y="549" width="0.1548%" height="15" fill="rgb(213,208,19)" fg:x="207" fg:w="2"/><text x="16.2717%" y="559.50"></text></g><g><title>[libc.so.6] (7 samples, 0.54%)</title><rect x="17.4149%" y="533" width="0.5418%" height="15" fill="rgb(233,156,4)" fg:x="225" fg:w="7"/><text x="17.6649%" y="543.50"></text></g><g><title>__rg_dealloc (1 samples, 0.08%)</title><rect x="17.9567%" y="533" width="0.0774%" height="15" fill="rgb(207,194,5)" fg:x="232" fg:w="1"/><text x="18.2067%" y="543.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.08%)</title><rect x="17.9567%" y="517" width="0.0774%" height="15" fill="rgb(206,111,30)" fg:x="232" fg:w="1"/><text x="18.2067%" y="527.50"></text></g><g><title>__rust_dealloc (1 samples, 0.08%)</title><rect x="18.0341%" y="533" width="0.0774%" height="15" fill="rgb(243,70,54)" fg:x="233" fg:w="1"/><text x="18.2841%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.08%)</title><rect x="18.2663%" y="501" width="0.0774%" height="15" fill="rgb(242,28,8)" fg:x="236" fg:w="1"/><text x="18.5163%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.08%)</title><rect x="18.3437%" y="501" width="0.0774%" height="15" fill="rgb(219,106,18)" fg:x="237" fg:w="1"/><text x="18.5937%" y="511.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="18.3437%" y="485" width="0.0774%" height="15" fill="rgb(244,222,10)" fg:x="237" fg:w="1"/><text x="18.5937%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="18.3437%" y="469" width="0.0774%" height="15" fill="rgb(236,179,52)" fg:x="237" fg:w="1"/><text x="18.5937%" y="479.50"></text></g><g><title>__rg_realloc (2 samples, 0.15%)</title><rect x="18.6533%" y="437" width="0.1548%" height="15" fill="rgb(213,23,39)" fg:x="241" fg:w="2"/><text x="18.9033%" y="447.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::realloc (2 samples, 0.15%)</title><rect x="18.6533%" y="421" width="0.1548%" height="15" fill="rgb(238,48,10)" fg:x="241" fg:w="2"/><text x="18.9033%" y="431.50"></text></g><g><title>mimalloc::may_use_unaligned_api (2 samples, 0.15%)</title><rect x="18.6533%" y="405" width="0.1548%" height="15" fill="rgb(251,196,23)" fg:x="241" fg:w="2"/><text x="18.9033%" y="415.50"></text></g><g><title>__rust_realloc (1 samples, 0.08%)</title><rect x="18.8080%" y="437" width="0.0774%" height="15" fill="rgb(250,152,24)" fg:x="243" fg:w="1"/><text x="19.0580%" y="447.50"></text></g><g><title>_mi_memcpy_aligned (16 samples, 1.24%)</title><rect x="18.8854%" y="421" width="1.2384%" height="15" fill="rgb(209,150,17)" fg:x="244" fg:w="16"/><text x="19.1354%" y="431.50"></text></g><g><title>_mi_memcpy (16 samples, 1.24%)</title><rect x="18.8854%" y="405" width="1.2384%" height="15" fill="rgb(234,202,34)" fg:x="244" fg:w="16"/><text x="19.1354%" y="415.50"></text></g><g><title>memcpy (16 samples, 1.24%)</title><rect x="18.8854%" y="389" width="1.2384%" height="15" fill="rgb(253,148,53)" fg:x="244" fg:w="16"/><text x="19.1354%" y="399.50"></text></g><g><title>[libc.so.6] (16 samples, 1.24%)</title><rect x="18.8854%" y="373" width="1.2384%" height="15" fill="rgb(218,129,16)" fg:x="244" fg:w="16"/><text x="19.1354%" y="383.50"></text></g><g><title>[unknown] (10 samples, 0.77%)</title><rect x="19.3498%" y="357" width="0.7740%" height="15" fill="rgb(216,85,19)" fg:x="250" fg:w="10"/><text x="19.5998%" y="367.50"></text></g><g><title>[unknown] (8 samples, 0.62%)</title><rect x="19.5046%" y="341" width="0.6192%" height="15" fill="rgb(235,228,7)" fg:x="252" fg:w="8"/><text x="19.7546%" y="351.50"></text></g><g><title>[unknown] (8 samples, 0.62%)</title><rect x="19.5046%" y="325" width="0.6192%" height="15" fill="rgb(245,175,0)" fg:x="252" fg:w="8"/><text x="19.7546%" y="335.50"></text></g><g><title>[unknown] (8 samples, 0.62%)</title><rect x="19.5046%" y="309" width="0.6192%" height="15" fill="rgb(208,168,36)" fg:x="252" fg:w="8"/><text x="19.7546%" y="319.50"></text></g><g><title>[unknown] (8 samples, 0.62%)</title><rect x="19.5046%" y="293" width="0.6192%" height="15" fill="rgb(246,171,24)" fg:x="252" fg:w="8"/><text x="19.7546%" y="303.50"></text></g><g><title>[unknown] (8 samples, 0.62%)</title><rect x="19.5046%" y="277" width="0.6192%" height="15" fill="rgb(215,142,24)" fg:x="252" fg:w="8"/><text x="19.7546%" y="287.50"></text></g><g><title>[unknown] (7 samples, 0.54%)</title><rect x="19.5820%" y="261" width="0.5418%" height="15" fill="rgb(250,187,7)" fg:x="253" fg:w="7"/><text x="19.8320%" y="271.50"></text></g><g><title>[unknown] (6 samples, 0.46%)</title><rect x="19.6594%" y="245" width="0.4644%" height="15" fill="rgb(228,66,33)" fg:x="254" fg:w="6"/><text x="19.9094%" y="255.50"></text></g><g><title>[unknown] (6 samples, 0.46%)</title><rect x="19.6594%" y="229" width="0.4644%" height="15" fill="rgb(234,215,21)" fg:x="254" fg:w="6"/><text x="19.9094%" y="239.50"></text></g><g><title>[unknown] (6 samples, 0.46%)</title><rect x="19.6594%" y="213" width="0.4644%" height="15" fill="rgb(222,191,20)" fg:x="254" fg:w="6"/><text x="19.9094%" y="223.50"></text></g><g><title>[unknown] (6 samples, 0.46%)</title><rect x="19.6594%" y="197" width="0.4644%" height="15" fill="rgb(245,79,54)" fg:x="254" fg:w="6"/><text x="19.9094%" y="207.50"></text></g><g><title>_mi_usable_size (1 samples, 0.08%)</title><rect x="20.1238%" y="421" width="0.0774%" height="15" fill="rgb(240,10,37)" fg:x="260" fg:w="1"/><text x="20.3738%" y="431.50"></text></g><g><title>mi_page_usable_size_of (1 samples, 0.08%)</title><rect x="20.1238%" y="405" width="0.0774%" height="15" fill="rgb(214,192,32)" fg:x="260" fg:w="1"/><text x="20.3738%" y="415.50"></text></g><g><title>mi_page_usable_block_size (1 samples, 0.08%)</title><rect x="20.1238%" y="389" width="0.0774%" height="15" fill="rgb(209,36,54)" fg:x="260" fg:w="1"/><text x="20.3738%" y="399.50"></text></g><g><title>mi_page_block_size (1 samples, 0.08%)</title><rect x="20.1238%" y="373" width="0.0774%" height="15" fill="rgb(220,10,11)" fg:x="260" fg:w="1"/><text x="20.3738%" y="383.50"></text></g><g><title>mi_block_set_next (1 samples, 0.08%)</title><rect x="20.2012%" y="405" width="0.0774%" height="15" fill="rgb(221,106,17)" fg:x="261" fg:w="1"/><text x="20.4512%" y="415.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.08%)</title><rect x="20.2012%" y="389" width="0.0774%" height="15" fill="rgb(251,142,44)" fg:x="261" fg:w="1"/><text x="20.4512%" y="399.50"></text></g><g><title>mi_free (2 samples, 0.15%)</title><rect x="20.2012%" y="421" width="0.1548%" height="15" fill="rgb(238,13,15)" fg:x="261" fg:w="2"/><text x="20.4512%" y="431.50"></text></g><g><title>mi_checked_ptr_segment (1 samples, 0.08%)</title><rect x="20.2786%" y="405" width="0.0774%" height="15" fill="rgb(208,107,27)" fg:x="262" fg:w="1"/><text x="20.5286%" y="415.50"></text></g><g><title>[libc.so.6] (4 samples, 0.31%)</title><rect x="20.4334%" y="405" width="0.3096%" height="15" fill="rgb(205,136,37)" fg:x="264" fg:w="4"/><text x="20.6834%" y="415.50"></text></g><g><title>[unknown] (4 samples, 0.31%)</title><rect x="20.4334%" y="389" width="0.3096%" height="15" fill="rgb(250,205,27)" fg:x="264" fg:w="4"/><text x="20.6834%" y="399.50"></text></g><g><title>_mi_page_malloc (3 samples, 0.23%)</title><rect x="20.8978%" y="389" width="0.2322%" height="15" fill="rgb(210,80,43)" fg:x="270" fg:w="3"/><text x="21.1478%" y="399.50"></text></g><g><title>_mi_page_free_collect (3 samples, 0.23%)</title><rect x="21.2848%" y="357" width="0.2322%" height="15" fill="rgb(247,160,36)" fg:x="275" fg:w="3"/><text x="21.5348%" y="367.50"></text></g><g><title>mi_page_queue (1 samples, 0.08%)</title><rect x="21.5170%" y="357" width="0.0774%" height="15" fill="rgb(234,13,49)" fg:x="278" fg:w="1"/><text x="21.7670%" y="367.50"></text></g><g><title>_mi_bin (1 samples, 0.08%)</title><rect x="21.5170%" y="341" width="0.0774%" height="15" fill="rgb(234,122,0)" fg:x="278" fg:w="1"/><text x="21.7670%" y="351.50"></text></g><g><title>mi_bin (1 samples, 0.08%)</title><rect x="21.5170%" y="325" width="0.0774%" height="15" fill="rgb(207,146,38)" fg:x="278" fg:w="1"/><text x="21.7670%" y="335.50"></text></g><g><title>_mi_page_free_collect (1 samples, 0.08%)</title><rect x="21.6718%" y="341" width="0.0774%" height="15" fill="rgb(207,177,25)" fg:x="280" fg:w="1"/><text x="21.9218%" y="351.50"></text></g><g><title>mi_page_free_list_extend (44 samples, 3.41%)</title><rect x="21.8266%" y="309" width="3.4056%" height="15" fill="rgb(211,178,42)" fg:x="282" fg:w="44"/><text x="22.0766%" y="319.50">mi_..</text></g><g><title>mi_block_set_next (42 samples, 3.25%)</title><rect x="21.9814%" y="293" width="3.2508%" height="15" fill="rgb(230,69,54)" fg:x="284" fg:w="42"/><text x="22.2314%" y="303.50">mi_..</text></g><g><title>mi_block_set_nextx (42 samples, 3.25%)</title><rect x="21.9814%" y="277" width="3.2508%" height="15" fill="rgb(214,135,41)" fg:x="284" fg:w="42"/><text x="22.2314%" y="287.50">mi_..</text></g><g><title>[unknown] (39 samples, 3.02%)</title><rect x="22.2136%" y="261" width="3.0186%" height="15" fill="rgb(237,67,25)" fg:x="287" fg:w="39"/><text x="22.4636%" y="271.50">[un..</text></g><g><title>[unknown] (30 samples, 2.32%)</title><rect x="22.9102%" y="245" width="2.3220%" height="15" fill="rgb(222,189,50)" fg:x="296" fg:w="30"/><text x="23.1602%" y="255.50">[..</text></g><g><title>[unknown] (30 samples, 2.32%)</title><rect x="22.9102%" y="229" width="2.3220%" height="15" fill="rgb(245,148,34)" fg:x="296" fg:w="30"/><text x="23.1602%" y="239.50">[..</text></g><g><title>[unknown] (30 samples, 2.32%)</title><rect x="22.9102%" y="213" width="2.3220%" height="15" fill="rgb(222,29,6)" fg:x="296" fg:w="30"/><text x="23.1602%" y="223.50">[..</text></g><g><title>[unknown] (28 samples, 2.17%)</title><rect x="23.0650%" y="197" width="2.1672%" height="15" fill="rgb(221,189,43)" fg:x="298" fg:w="28"/><text x="23.3150%" y="207.50">[..</text></g><g><title>[unknown] (23 samples, 1.78%)</title><rect x="23.4520%" y="181" width="1.7802%" height="15" fill="rgb(207,36,27)" fg:x="303" fg:w="23"/><text x="23.7020%" y="191.50">[..</text></g><g><title>[unknown] (22 samples, 1.70%)</title><rect x="23.5294%" y="165" width="1.7028%" height="15" fill="rgb(217,90,24)" fg:x="304" fg:w="22"/><text x="23.7794%" y="175.50"></text></g><g><title>[unknown] (22 samples, 1.70%)</title><rect x="23.5294%" y="149" width="1.7028%" height="15" fill="rgb(224,66,35)" fg:x="304" fg:w="22"/><text x="23.7794%" y="159.50"></text></g><g><title>[unknown] (19 samples, 1.47%)</title><rect x="23.7616%" y="133" width="1.4706%" height="15" fill="rgb(221,13,50)" fg:x="307" fg:w="19"/><text x="24.0116%" y="143.50"></text></g><g><title>[unknown] (15 samples, 1.16%)</title><rect x="24.0712%" y="117" width="1.1610%" height="15" fill="rgb(236,68,49)" fg:x="311" fg:w="15"/><text x="24.3212%" y="127.50"></text></g><g><title>[unknown] (13 samples, 1.01%)</title><rect x="24.2260%" y="101" width="1.0062%" height="15" fill="rgb(229,146,28)" fg:x="313" fg:w="13"/><text x="24.4760%" y="111.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="25.0774%" y="85" width="0.1548%" height="15" fill="rgb(225,31,38)" fg:x="324" fg:w="2"/><text x="25.3274%" y="95.50"></text></g><g><title>mi_page_extend_free (47 samples, 3.64%)</title><rect x="21.7492%" y="341" width="3.6378%" height="15" fill="rgb(250,208,3)" fg:x="281" fg:w="47"/><text x="21.9992%" y="351.50">mi_p..</text></g><g><title>mi_page_extend_free (47 samples, 3.64%)</title><rect x="21.7492%" y="325" width="3.6378%" height="15" fill="rgb(246,54,23)" fg:x="281" fg:w="47"/><text x="21.9992%" y="335.50">mi_p..</text></g><g><title>mi_page_fresh_alloc (2 samples, 0.15%)</title><rect x="25.2322%" y="309" width="0.1548%" height="15" fill="rgb(243,76,11)" fg:x="326" fg:w="2"/><text x="25.4822%" y="319.50"></text></g><g><title>mi_page_init (2 samples, 0.15%)</title><rect x="25.2322%" y="293" width="0.1548%" height="15" fill="rgb(245,21,50)" fg:x="326" fg:w="2"/><text x="25.4822%" y="303.50"></text></g><g><title>mi_page_extend_free (2 samples, 0.15%)</title><rect x="25.2322%" y="277" width="0.1548%" height="15" fill="rgb(228,9,43)" fg:x="326" fg:w="2"/><text x="25.4822%" y="287.50"></text></g><g><title>mi_page_extend_free (2 samples, 0.15%)</title><rect x="25.2322%" y="261" width="0.1548%" height="15" fill="rgb(208,100,47)" fg:x="326" fg:w="2"/><text x="25.4822%" y="271.50"></text></g><g><title>mi_page_free_list_extend (2 samples, 0.15%)</title><rect x="25.2322%" y="245" width="0.1548%" height="15" fill="rgb(232,26,8)" fg:x="326" fg:w="2"/><text x="25.4822%" y="255.50"></text></g><g><title>mi_block_set_next (2 samples, 0.15%)</title><rect x="25.2322%" y="229" width="0.1548%" height="15" fill="rgb(216,166,38)" fg:x="326" fg:w="2"/><text x="25.4822%" y="239.50"></text></g><g><title>mi_block_set_nextx (2 samples, 0.15%)</title><rect x="25.2322%" y="213" width="0.1548%" height="15" fill="rgb(251,202,51)" fg:x="326" fg:w="2"/><text x="25.4822%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="25.2322%" y="197" width="0.1548%" height="15" fill="rgb(254,216,34)" fg:x="326" fg:w="2"/><text x="25.4822%" y="207.50"></text></g><g><title>mi_page_free_list_extend (1 samples, 0.08%)</title><rect x="25.3870%" y="325" width="0.0774%" height="15" fill="rgb(251,32,27)" fg:x="328" fg:w="1"/><text x="25.6370%" y="335.50"></text></g><g><title>mi_block_set_next (1 samples, 0.08%)</title><rect x="25.3870%" y="309" width="0.0774%" height="15" fill="rgb(208,127,28)" fg:x="328" fg:w="1"/><text x="25.6370%" y="319.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.08%)</title><rect x="25.3870%" y="293" width="0.0774%" height="15" fill="rgb(224,137,22)" fg:x="328" fg:w="1"/><text x="25.6370%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="25.3870%" y="277" width="0.0774%" height="15" fill="rgb(254,70,32)" fg:x="328" fg:w="1"/><text x="25.6370%" y="287.50"></text></g><g><title>mi_page_init (6 samples, 0.46%)</title><rect x="25.4644%" y="309" width="0.4644%" height="15" fill="rgb(229,75,37)" fg:x="329" fg:w="6"/><text x="25.7144%" y="319.50"></text></g><g><title>mi_page_extend_free (6 samples, 0.46%)</title><rect x="25.4644%" y="293" width="0.4644%" height="15" fill="rgb(252,64,23)" fg:x="329" fg:w="6"/><text x="25.7144%" y="303.50"></text></g><g><title>mi_page_extend_free (6 samples, 0.46%)</title><rect x="25.4644%" y="277" width="0.4644%" height="15" fill="rgb(232,162,48)" fg:x="329" fg:w="6"/><text x="25.7144%" y="287.50"></text></g><g><title>mi_page_free_list_extend (6 samples, 0.46%)</title><rect x="25.4644%" y="261" width="0.4644%" height="15" fill="rgb(246,160,12)" fg:x="329" fg:w="6"/><text x="25.7144%" y="271.50"></text></g><g><title>mi_block_set_next (6 samples, 0.46%)</title><rect x="25.4644%" y="245" width="0.4644%" height="15" fill="rgb(247,166,0)" fg:x="329" fg:w="6"/><text x="25.7144%" y="255.50"></text></g><g><title>mi_block_set_nextx (6 samples, 0.46%)</title><rect x="25.4644%" y="229" width="0.4644%" height="15" fill="rgb(249,219,21)" fg:x="329" fg:w="6"/><text x="25.7144%" y="239.50"></text></g><g><title>[unknown] (6 samples, 0.46%)</title><rect x="25.4644%" y="213" width="0.4644%" height="15" fill="rgb(205,209,3)" fg:x="329" fg:w="6"/><text x="25.7144%" y="223.50"></text></g><g><title>[unknown] (6 samples, 0.46%)</title><rect x="25.4644%" y="197" width="0.4644%" height="15" fill="rgb(243,44,1)" fg:x="329" fg:w="6"/><text x="25.7144%" y="207.50"></text></g><g><title>[unknown] (6 samples, 0.46%)</title><rect x="25.4644%" y="181" width="0.4644%" height="15" fill="rgb(206,159,16)" fg:x="329" fg:w="6"/><text x="25.7144%" y="191.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="25.5418%" y="165" width="0.3870%" height="15" fill="rgb(244,77,30)" fg:x="330" fg:w="5"/><text x="25.7918%" y="175.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="25.5418%" y="149" width="0.3870%" height="15" fill="rgb(218,69,12)" fg:x="330" fg:w="5"/><text x="25.7918%" y="159.50"></text></g><g><title>[unknown] (4 samples, 0.31%)</title><rect x="25.6192%" y="133" width="0.3096%" height="15" fill="rgb(212,87,7)" fg:x="331" fg:w="4"/><text x="25.8692%" y="143.50"></text></g><g><title>[unknown] (4 samples, 0.31%)</title><rect x="25.6192%" y="117" width="0.3096%" height="15" fill="rgb(245,114,25)" fg:x="331" fg:w="4"/><text x="25.8692%" y="127.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="25.6966%" y="101" width="0.2322%" height="15" fill="rgb(210,61,42)" fg:x="332" fg:w="3"/><text x="25.9466%" y="111.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="25.6966%" y="85" width="0.2322%" height="15" fill="rgb(211,52,33)" fg:x="332" fg:w="3"/><text x="25.9466%" y="95.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="25.6966%" y="69" width="0.2322%" height="15" fill="rgb(234,58,33)" fg:x="332" fg:w="3"/><text x="25.9466%" y="79.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="25.6966%" y="53" width="0.2322%" height="15" fill="rgb(220,115,36)" fg:x="332" fg:w="3"/><text x="25.9466%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="25.8514%" y="37" width="0.0774%" height="15" fill="rgb(243,153,54)" fg:x="334" fg:w="1"/><text x="26.1014%" y="47.50"></text></g><g><title>_mi_malloc_generic (68 samples, 5.26%)</title><rect x="20.7430%" y="405" width="5.2632%" height="15" fill="rgb(251,47,18)" fg:x="268" fg:w="68"/><text x="20.9930%" y="415.50">_mi_ma..</text></g><g><title>mi_find_page (63 samples, 4.88%)</title><rect x="21.1300%" y="389" width="4.8762%" height="15" fill="rgb(242,102,42)" fg:x="273" fg:w="63"/><text x="21.3800%" y="399.50">mi_fin..</text></g><g><title>mi_find_free_page (63 samples, 4.88%)</title><rect x="21.1300%" y="373" width="4.8762%" height="15" fill="rgb(234,31,38)" fg:x="273" fg:w="63"/><text x="21.3800%" y="383.50">mi_fin..</text></g><g><title>mi_page_queue_find_free_ex (57 samples, 4.41%)</title><rect x="21.5944%" y="357" width="4.4118%" height="15" fill="rgb(221,117,51)" fg:x="279" fg:w="57"/><text x="21.8444%" y="367.50">mi_pa..</text></g><g><title>mi_page_fresh (8 samples, 0.62%)</title><rect x="25.3870%" y="341" width="0.6192%" height="15" fill="rgb(212,20,18)" fg:x="328" fg:w="8"/><text x="25.6370%" y="351.50"></text></g><g><title>mi_page_fresh_alloc (7 samples, 0.54%)</title><rect x="25.4644%" y="325" width="0.5418%" height="15" fill="rgb(245,133,36)" fg:x="329" fg:w="7"/><text x="25.7144%" y="335.50"></text></g><g><title>mi_segments_page_alloc (1 samples, 0.08%)</title><rect x="25.9288%" y="309" width="0.0774%" height="15" fill="rgb(212,6,19)" fg:x="335" fg:w="1"/><text x="26.1788%" y="319.50"></text></g><g><title>mi_segments_page_find_and_allocate (1 samples, 0.08%)</title><rect x="25.9288%" y="293" width="0.0774%" height="15" fill="rgb(218,1,36)" fg:x="335" fg:w="1"/><text x="26.1788%" y="303.50"></text></g><g><title>mi_segment_slice_split (1 samples, 0.08%)</title><rect x="25.9288%" y="277" width="0.0774%" height="15" fill="rgb(246,84,54)" fg:x="335" fg:w="1"/><text x="26.1788%" y="287.50"></text></g><g><title>mi_segment_span_free (1 samples, 0.08%)</title><rect x="25.9288%" y="261" width="0.0774%" height="15" fill="rgb(242,110,6)" fg:x="335" fg:w="1"/><text x="26.1788%" y="271.50"></text></g><g><title>mi_slice_start (1 samples, 0.08%)</title><rect x="25.9288%" y="245" width="0.0774%" height="15" fill="rgb(214,47,5)" fg:x="335" fg:w="1"/><text x="26.1788%" y="255.50"></text></g><g><title>_mi_ptr_segment (1 samples, 0.08%)</title><rect x="25.9288%" y="229" width="0.0774%" height="15" fill="rgb(218,159,25)" fg:x="335" fg:w="1"/><text x="26.1788%" y="239.50"></text></g><g><title>_mi_heap_realloc_zero (93 samples, 7.20%)</title><rect x="18.8854%" y="437" width="7.1981%" height="15" fill="rgb(215,211,28)" fg:x="244" fg:w="93"/><text x="19.1354%" y="447.50">_mi_heap_r..</text></g><g><title>mi_heap_malloc (74 samples, 5.73%)</title><rect x="20.3560%" y="421" width="5.7276%" height="15" fill="rgb(238,59,32)" fg:x="263" fg:w="74"/><text x="20.6060%" y="431.50">mi_heap..</text></g><g><title>mi_heap_malloc_small (1 samples, 0.08%)</title><rect x="26.0062%" y="405" width="0.0774%" height="15" fill="rgb(226,82,3)" fg:x="336" fg:w="1"/><text x="26.2562%" y="415.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.08%)</title><rect x="26.0062%" y="389" width="0.0774%" height="15" fill="rgb(240,164,32)" fg:x="336" fg:w="1"/><text x="26.2562%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (97 samples, 7.51%)</title><rect x="18.6533%" y="485" width="7.5077%" height="15" fill="rgb(232,46,7)" fg:x="241" fg:w="97"/><text x="18.9033%" y="495.50">&lt;alloc::al..</text></g><g><title>alloc::alloc::Global::grow_impl (97 samples, 7.51%)</title><rect x="18.6533%" y="469" width="7.5077%" height="15" fill="rgb(229,129,53)" fg:x="241" fg:w="97"/><text x="18.9033%" y="479.50">alloc::all..</text></g><g><title>alloc::alloc::realloc (97 samples, 7.51%)</title><rect x="18.6533%" y="453" width="7.5077%" height="15" fill="rgb(234,188,29)" fg:x="241" fg:w="97"/><text x="18.9033%" y="463.50">alloc::all..</text></g><g><title>mi_realloc (1 samples, 0.08%)</title><rect x="26.0836%" y="437" width="0.0774%" height="15" fill="rgb(246,141,4)" fg:x="337" fg:w="1"/><text x="26.3336%" y="447.50"></text></g><g><title>__rg_alloc (1 samples, 0.08%)</title><rect x="26.1610%" y="485" width="0.0774%" height="15" fill="rgb(229,23,39)" fg:x="338" fg:w="1"/><text x="26.4110%" y="495.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.08%)</title><rect x="26.1610%" y="469" width="0.0774%" height="15" fill="rgb(206,12,3)" fg:x="338" fg:w="1"/><text x="26.4110%" y="479.50"></text></g><g><title>mimalloc::may_use_unaligned_api (1 samples, 0.08%)</title><rect x="26.1610%" y="453" width="0.0774%" height="15" fill="rgb(252,226,20)" fg:x="338" fg:w="1"/><text x="26.4110%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (102 samples, 7.89%)</title><rect x="18.4211%" y="501" width="7.8947%" height="15" fill="rgb(216,123,35)" fg:x="238" fg:w="102"/><text x="18.6711%" y="511.50">alloc::raw_..</text></g><g><title>_mi_malloc_generic (1 samples, 0.08%)</title><rect x="26.2384%" y="485" width="0.0774%" height="15" fill="rgb(212,68,40)" fg:x="339" fg:w="1"/><text x="26.4884%" y="495.50"></text></g><g><title>mi_find_page (1 samples, 0.08%)</title><rect x="26.2384%" y="469" width="0.0774%" height="15" fill="rgb(254,125,32)" fg:x="339" fg:w="1"/><text x="26.4884%" y="479.50"></text></g><g><title>mi_find_free_page (1 samples, 0.08%)</title><rect x="26.2384%" y="453" width="0.0774%" height="15" fill="rgb(253,97,22)" fg:x="339" fg:w="1"/><text x="26.4884%" y="463.50"></text></g><g><title>mi_page_queue (1 samples, 0.08%)</title><rect x="26.2384%" y="437" width="0.0774%" height="15" fill="rgb(241,101,14)" fg:x="339" fg:w="1"/><text x="26.4884%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="26.3158%" y="501" width="0.0774%" height="15" fill="rgb(238,103,29)" fg:x="340" fg:w="1"/><text x="26.5658%" y="511.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="26.3158%" y="485" width="0.0774%" height="15" fill="rgb(233,195,47)" fg:x="340" fg:w="1"/><text x="26.5658%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (108 samples, 8.36%)</title><rect x="18.1115%" y="533" width="8.3591%" height="15" fill="rgb(246,218,30)" fg:x="234" fg:w="108"/><text x="18.3615%" y="543.50">alloc::raw_v..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (107 samples, 8.28%)</title><rect x="18.1889%" y="517" width="8.2817%" height="15" fill="rgb(219,145,47)" fg:x="235" fg:w="107"/><text x="18.4389%" y="527.50">alloc::raw_v..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.08%)</title><rect x="26.3932%" y="501" width="0.0774%" height="15" fill="rgb(243,12,26)" fg:x="341" fg:w="1"/><text x="26.6432%" y="511.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.08%)</title><rect x="26.3932%" y="485" width="0.0774%" height="15" fill="rgb(214,87,16)" fg:x="341" fg:w="1"/><text x="26.6432%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="26.4706%" y="421" width="0.0774%" height="15" fill="rgb(208,99,42)" fg:x="342" fg:w="1"/><text x="26.7206%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="26.4706%" y="405" width="0.0774%" height="15" fill="rgb(253,99,2)" fg:x="342" fg:w="1"/><text x="26.7206%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.4706%" y="389" width="0.0774%" height="15" fill="rgb(220,168,23)" fg:x="342" fg:w="1"/><text x="26.7206%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="26.4706%" y="373" width="0.0774%" height="15" fill="rgb(242,38,24)" fg:x="342" fg:w="1"/><text x="26.7206%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="26.4706%" y="357" width="0.0774%" height="15" fill="rgb(225,182,9)" fg:x="342" fg:w="1"/><text x="26.7206%" y="367.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="26.4706%" y="341" width="0.0774%" height="15" fill="rgb(243,178,37)" fg:x="342" fg:w="1"/><text x="26.7206%" y="351.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.08%)</title><rect x="26.4706%" y="325" width="0.0774%" height="15" fill="rgb(232,139,19)" fg:x="342" fg:w="1"/><text x="26.7206%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="26.4706%" y="309" width="0.0774%" height="15" fill="rgb(225,201,24)" fg:x="342" fg:w="1"/><text x="26.7206%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="26.4706%" y="293" width="0.0774%" height="15" fill="rgb(221,47,46)" fg:x="342" fg:w="1"/><text x="26.7206%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (3 samples, 0.23%)</title><rect x="26.4706%" y="517" width="0.2322%" height="15" fill="rgb(249,23,13)" fg:x="342" fg:w="3"/><text x="26.7206%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.23%)</title><rect x="26.4706%" y="501" width="0.2322%" height="15" fill="rgb(219,9,5)" fg:x="342" fg:w="3"/><text x="26.7206%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.23%)</title><rect x="26.4706%" y="485" width="0.2322%" height="15" fill="rgb(254,171,16)" fg:x="342" fg:w="3"/><text x="26.7206%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.23%)</title><rect x="26.4706%" y="469" width="0.2322%" height="15" fill="rgb(230,171,20)" fg:x="342" fg:w="3"/><text x="26.7206%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.23%)</title><rect x="26.4706%" y="453" width="0.2322%" height="15" fill="rgb(210,71,41)" fg:x="342" fg:w="3"/><text x="26.7206%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.23%)</title><rect x="26.4706%" y="437" width="0.2322%" height="15" fill="rgb(206,173,20)" fg:x="342" fg:w="3"/><text x="26.7206%" y="447.50"></text></g><g><title>mi_free (2 samples, 0.15%)</title><rect x="26.5480%" y="421" width="0.1548%" height="15" fill="rgb(233,88,34)" fg:x="343" fg:w="2"/><text x="26.7980%" y="431.50"></text></g><g><title>_mi_thread_id (1 samples, 0.08%)</title><rect x="26.6254%" y="405" width="0.0774%" height="15" fill="rgb(223,209,46)" fg:x="344" fg:w="1"/><text x="26.8754%" y="415.50"></text></g><g><title>mi_tls_slot (1 samples, 0.08%)</title><rect x="26.6254%" y="389" width="0.0774%" height="15" fill="rgb(250,43,18)" fg:x="344" fg:w="1"/><text x="26.8754%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;csgoproto::netmessages::CSVCMsg_PacketEntities&gt; (4 samples, 0.31%)</title><rect x="26.4706%" y="533" width="0.3096%" height="15" fill="rgb(208,13,10)" fg:x="342" fg:w="4"/><text x="26.7206%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;protobuf::special::SpecialFields&gt; (1 samples, 0.08%)</title><rect x="26.7028%" y="517" width="0.0774%" height="15" fill="rgb(212,200,36)" fg:x="345" fg:w="1"/><text x="26.9528%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;protobuf::unknown::UnknownFields&gt; (1 samples, 0.08%)</title><rect x="26.7028%" y="501" width="0.0774%" height="15" fill="rgb(225,90,30)" fg:x="345" fg:w="1"/><text x="26.9528%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;std::collections::hash::map::HashMap&lt;u32,protobuf::unknown::UnknownValues,core::hash::BuildHasherDefault&lt;std::collections::hash::map::DefaultHasher&gt;&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="26.7028%" y="485" width="0.0774%" height="15" fill="rgb(236,182,39)" fg:x="345" fg:w="1"/><text x="26.9528%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (4 samples, 0.31%)</title><rect x="27.4768%" y="517" width="0.3096%" height="15" fill="rgb(212,144,35)" fg:x="355" fg:w="4"/><text x="27.7268%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.31%)</title><rect x="27.4768%" y="501" width="0.3096%" height="15" fill="rgb(228,63,44)" fg:x="355" fg:w="4"/><text x="27.7268%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.31%)</title><rect x="27.4768%" y="485" width="0.3096%" height="15" fill="rgb(228,109,6)" fg:x="355" fg:w="4"/><text x="27.7268%" y="495.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.93%)</title><rect x="27.7864%" y="517" width="0.9288%" height="15" fill="rgb(238,117,24)" fg:x="359" fg:w="12"/><text x="28.0364%" y="527.50"></text></g><g><title>core::ptr::read (2 samples, 0.15%)</title><rect x="28.5604%" y="501" width="0.1548%" height="15" fill="rgb(242,26,26)" fg:x="369" fg:w="2"/><text x="28.8104%" y="511.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (11 samples, 0.85%)</title><rect x="28.7152%" y="517" width="0.8514%" height="15" fill="rgb(221,92,48)" fg:x="371" fg:w="11"/><text x="28.9652%" y="527.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::len (3 samples, 0.23%)</title><rect x="29.3344%" y="501" width="0.2322%" height="15" fill="rgb(209,209,32)" fg:x="379" fg:w="3"/><text x="29.5844%" y="511.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (3 samples, 0.23%)</title><rect x="29.3344%" y="485" width="0.2322%" height="15" fill="rgb(221,70,22)" fg:x="379" fg:w="3"/><text x="29.5844%" y="495.50"></text></g><g><title>[libc.so.6] (13 samples, 1.01%)</title><rect x="29.5666%" y="517" width="1.0062%" height="15" fill="rgb(248,145,5)" fg:x="382" fg:w="13"/><text x="29.8166%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.08%)</title><rect x="32.3529%" y="501" width="0.0774%" height="15" fill="rgb(226,116,26)" fg:x="418" fg:w="1"/><text x="32.6029%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.08%)</title><rect x="32.3529%" y="485" width="0.0774%" height="15" fill="rgb(244,5,17)" fg:x="418" fg:w="1"/><text x="32.6029%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (29 samples, 2.24%)</title><rect x="30.5728%" y="517" width="2.2446%" height="15" fill="rgb(252,159,33)" fg:x="395" fg:w="29"/><text x="30.8228%" y="527.50">a..</text></g><g><title>core::ptr::write (5 samples, 0.39%)</title><rect x="32.4303%" y="501" width="0.3870%" height="15" fill="rgb(206,71,0)" fg:x="419" fg:w="5"/><text x="32.6803%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="32.7399%" y="485" width="0.0774%" height="15" fill="rgb(233,118,54)" fg:x="423" fg:w="1"/><text x="32.9899%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="32.7399%" y="469" width="0.0774%" height="15" fill="rgb(234,83,48)" fg:x="423" fg:w="1"/><text x="32.9899%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="32.7399%" y="453" width="0.0774%" height="15" fill="rgb(228,3,54)" fg:x="423" fg:w="1"/><text x="32.9899%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="32.7399%" y="437" width="0.0774%" height="15" fill="rgb(226,155,13)" fg:x="423" fg:w="1"/><text x="32.9899%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="32.7399%" y="421" width="0.0774%" height="15" fill="rgb(241,28,37)" fg:x="423" fg:w="1"/><text x="32.9899%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="32.7399%" y="405" width="0.0774%" height="15" fill="rgb(233,93,10)" fg:x="423" fg:w="1"/><text x="32.9899%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="32.7399%" y="389" width="0.0774%" height="15" fill="rgb(225,113,19)" fg:x="423" fg:w="1"/><text x="32.9899%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="32.7399%" y="373" width="0.0774%" height="15" fill="rgb(241,2,18)" fg:x="423" fg:w="1"/><text x="32.9899%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="32.7399%" y="357" width="0.0774%" height="15" fill="rgb(228,207,21)" fg:x="423" fg:w="1"/><text x="32.9899%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="32.7399%" y="341" width="0.0774%" height="15" fill="rgb(213,211,35)" fg:x="423" fg:w="1"/><text x="32.9899%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="32.7399%" y="325" width="0.0774%" height="15" fill="rgb(209,83,10)" fg:x="423" fg:w="1"/><text x="32.9899%" y="335.50"></text></g><g><title>__rg_alloc (1 samples, 0.08%)</title><rect x="33.0495%" y="405" width="0.0774%" height="15" fill="rgb(209,164,1)" fg:x="427" fg:w="1"/><text x="33.2995%" y="415.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.08%)</title><rect x="33.0495%" y="389" width="0.0774%" height="15" fill="rgb(213,184,43)" fg:x="427" fg:w="1"/><text x="33.2995%" y="399.50"></text></g><g><title>mimalloc::may_use_unaligned_api (1 samples, 0.08%)</title><rect x="33.0495%" y="373" width="0.0774%" height="15" fill="rgb(231,61,34)" fg:x="427" fg:w="1"/><text x="33.2995%" y="383.50"></text></g><g><title>__rust_alloc (2 samples, 0.15%)</title><rect x="33.1269%" y="405" width="0.1548%" height="15" fill="rgb(235,75,3)" fg:x="428" fg:w="2"/><text x="33.3769%" y="415.50"></text></g><g><title>_mi_deferred_free (1 samples, 0.08%)</title><rect x="33.6687%" y="389" width="0.0774%" height="15" fill="rgb(220,106,47)" fg:x="435" fg:w="1"/><text x="33.9187%" y="399.50"></text></g><g><title>_mi_heap_delayed_free (1 samples, 0.08%)</title><rect x="33.7461%" y="389" width="0.0774%" height="15" fill="rgb(210,196,33)" fg:x="436" fg:w="1"/><text x="33.9961%" y="399.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.08%)</title><rect x="33.8235%" y="389" width="0.0774%" height="15" fill="rgb(229,154,42)" fg:x="437" fg:w="1"/><text x="34.0735%" y="399.50"></text></g><g><title>_mi_malloc_generic (10 samples, 0.77%)</title><rect x="33.2817%" y="405" width="0.7740%" height="15" fill="rgb(228,114,26)" fg:x="430" fg:w="10"/><text x="33.5317%" y="415.50"></text></g><g><title>mi_find_page (2 samples, 0.15%)</title><rect x="33.9009%" y="389" width="0.1548%" height="15" fill="rgb(208,144,1)" fg:x="438" fg:w="2"/><text x="34.1509%" y="399.50"></text></g><g><title>mi_find_free_page (2 samples, 0.15%)</title><rect x="33.9009%" y="373" width="0.1548%" height="15" fill="rgb(239,112,37)" fg:x="438" fg:w="2"/><text x="34.1509%" y="383.50"></text></g><g><title>mi_page_queue (2 samples, 0.15%)</title><rect x="33.9009%" y="357" width="0.1548%" height="15" fill="rgb(210,96,50)" fg:x="438" fg:w="2"/><text x="34.1509%" y="367.50"></text></g><g><title>_mi_bin (2 samples, 0.15%)</title><rect x="33.9009%" y="341" width="0.1548%" height="15" fill="rgb(222,178,2)" fg:x="438" fg:w="2"/><text x="34.1509%" y="351.50"></text></g><g><title>mi_get_default_heap (1 samples, 0.08%)</title><rect x="34.2879%" y="389" width="0.0774%" height="15" fill="rgb(226,74,18)" fg:x="443" fg:w="1"/><text x="34.5379%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (31 samples, 2.40%)</title><rect x="32.8173%" y="517" width="2.3994%" height="15" fill="rgb(225,67,54)" fg:x="424" fg:w="31"/><text x="33.0673%" y="527.50">al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (31 samples, 2.40%)</title><rect x="32.8173%" y="501" width="2.3994%" height="15" fill="rgb(251,92,32)" fg:x="424" fg:w="31"/><text x="33.0673%" y="511.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (30 samples, 2.32%)</title><rect x="32.8947%" y="485" width="2.3220%" height="15" fill="rgb(228,149,22)" fg:x="425" fg:w="30"/><text x="33.1447%" y="495.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (30 samples, 2.32%)</title><rect x="32.8947%" y="469" width="2.3220%" height="15" fill="rgb(243,54,13)" fg:x="425" fg:w="30"/><text x="33.1447%" y="479.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (30 samples, 2.32%)</title><rect x="32.8947%" y="453" width="2.3220%" height="15" fill="rgb(243,180,28)" fg:x="425" fg:w="30"/><text x="33.1447%" y="463.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (30 samples, 2.32%)</title><rect x="32.8947%" y="437" width="2.3220%" height="15" fill="rgb(208,167,24)" fg:x="425" fg:w="30"/><text x="33.1447%" y="447.50">a..</text></g><g><title>alloc::alloc::alloc (30 samples, 2.32%)</title><rect x="32.8947%" y="421" width="2.3220%" height="15" fill="rgb(245,73,45)" fg:x="425" fg:w="30"/><text x="33.1447%" y="431.50">a..</text></g><g><title>mi_malloc (15 samples, 1.16%)</title><rect x="34.0557%" y="405" width="1.1610%" height="15" fill="rgb(237,203,48)" fg:x="440" fg:w="15"/><text x="34.3057%" y="415.50"></text></g><g><title>mi_heap_malloc (11 samples, 0.85%)</title><rect x="34.3653%" y="389" width="0.8514%" height="15" fill="rgb(211,197,16)" fg:x="444" fg:w="11"/><text x="34.6153%" y="399.50"></text></g><g><title>mi_heap_malloc_small (10 samples, 0.77%)</title><rect x="34.4427%" y="373" width="0.7740%" height="15" fill="rgb(243,99,51)" fg:x="445" fg:w="10"/><text x="34.6927%" y="383.50"></text></g><g><title>_mi_page_malloc (10 samples, 0.77%)</title><rect x="34.4427%" y="357" width="0.7740%" height="15" fill="rgb(215,123,29)" fg:x="445" fg:w="10"/><text x="34.6927%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.15%)</title><rect x="35.2167%" y="517" width="0.1548%" height="15" fill="rgb(239,186,37)" fg:x="455" fg:w="2"/><text x="35.4667%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::variants::PropData&gt; (8 samples, 0.62%)</title><rect x="35.3715%" y="517" width="0.6192%" height="15" fill="rgb(252,136,39)" fg:x="457" fg:w="8"/><text x="35.6215%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::IntoIter&lt;[i32: 128]&gt;&gt; (1 samples, 0.08%)</title><rect x="35.9907%" y="517" width="0.0774%" height="15" fill="rgb(223,213,32)" fg:x="465" fg:w="1"/><text x="36.2407%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[i32: 128]&gt;&gt; (1 samples, 0.08%)</title><rect x="35.9907%" y="501" width="0.0774%" height="15" fill="rgb(233,115,5)" fg:x="465" fg:w="1"/><text x="36.2407%" y="511.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="35.9907%" y="485" width="0.0774%" height="15" fill="rgb(207,226,44)" fg:x="465" fg:w="1"/><text x="36.2407%" y="495.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (1 samples, 0.08%)</title><rect x="35.9907%" y="469" width="0.0774%" height="15" fill="rgb(208,126,0)" fg:x="465" fg:w="1"/><text x="36.2407%" y="479.50"></text></g><g><title>demoparser::parsing::entities::get_cls_id (1 samples, 0.08%)</title><rect x="36.0681%" y="517" width="0.0774%" height="15" fill="rgb(244,66,21)" fg:x="466" fg:w="1"/><text x="36.3181%" y="527.50"></text></g><g><title>bitter::LittleEndianReader::has_data_for_unaligned_loads (8 samples, 0.62%)</title><rect x="41.5635%" y="437" width="0.6192%" height="15" fill="rgb(222,97,12)" fg:x="537" fg:w="8"/><text x="41.8135%" y="447.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (44 samples, 3.41%)</title><rect x="39.1641%" y="453" width="3.4056%" height="15" fill="rgb(219,213,19)" fg:x="506" fg:w="44"/><text x="39.4141%" y="463.50">&lt;bi..</text></g><g><title>bitter::LittleEndianReader::refill (5 samples, 0.39%)</title><rect x="42.1827%" y="437" width="0.3870%" height="15" fill="rgb(252,169,30)" fg:x="545" fg:w="5"/><text x="42.4327%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (3 samples, 0.23%)</title><rect x="42.3375%" y="421" width="0.2322%" height="15" fill="rgb(206,32,51)" fg:x="547" fg:w="3"/><text x="42.5875%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (3 samples, 0.23%)</title><rect x="42.3375%" y="405" width="0.2322%" height="15" fill="rgb(250,172,42)" fg:x="547" fg:w="3"/><text x="42.5875%" y="415.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_boolie (45 samples, 3.48%)</title><rect x="39.1641%" y="485" width="3.4830%" height="15" fill="rgb(209,34,43)" fg:x="506" fg:w="45"/><text x="39.4141%" y="495.50">dem..</text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bit (45 samples, 3.48%)</title><rect x="39.1641%" y="469" width="3.4830%" height="15" fill="rgb(223,11,35)" fg:x="506" fg:w="45"/><text x="39.4141%" y="479.50">&lt;bi..</text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.08%)</title><rect x="42.5697%" y="453" width="0.0774%" height="15" fill="rgb(251,219,26)" fg:x="550" fg:w="1"/><text x="42.8197%" y="463.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_inx (129 samples, 9.98%)</title><rect x="37.2291%" y="501" width="9.9845%" height="15" fill="rgb(231,119,3)" fg:x="481" fg:w="129"/><text x="37.4791%" y="511.50">demoparser::pa..</text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_nbits (59 samples, 4.57%)</title><rect x="42.6471%" y="485" width="4.5666%" height="15" fill="rgb(216,97,11)" fg:x="551" fg:w="59"/><text x="42.8971%" y="495.50">demop..</text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (55 samples, 4.26%)</title><rect x="42.9567%" y="469" width="4.2570%" height="15" fill="rgb(223,59,9)" fg:x="555" fg:w="55"/><text x="43.2067%" y="479.50">&lt;bitt..</text></g><g><title>bitter::LittleEndianReader::refill (6 samples, 0.46%)</title><rect x="46.7492%" y="453" width="0.4644%" height="15" fill="rgb(233,93,31)" fg:x="604" fg:w="6"/><text x="46.9992%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (5 samples, 0.39%)</title><rect x="46.8266%" y="437" width="0.3870%" height="15" fill="rgb(239,81,33)" fg:x="605" fg:w="5"/><text x="47.0766%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (5 samples, 0.39%)</title><rect x="46.8266%" y="421" width="0.3870%" height="15" fill="rgb(213,120,34)" fg:x="605" fg:w="5"/><text x="47.0766%" y="431.50"></text></g><g><title>demoparser::parsing::entities::parse_indicies (178 samples, 13.78%)</title><rect x="36.1455%" y="517" width="13.7771%" height="15" fill="rgb(243,49,53)" fg:x="467" fg:w="178"/><text x="36.3955%" y="527.50">demoparser::parsing::..</text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (35 samples, 2.71%)</title><rect x="47.2136%" y="501" width="2.7090%" height="15" fill="rgb(247,216,33)" fg:x="610" fg:w="35"/><text x="47.4636%" y="511.50">sm..</text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (14 samples, 1.08%)</title><rect x="48.8390%" y="485" width="1.0836%" height="15" fill="rgb(226,26,14)" fg:x="631" fg:w="14"/><text x="49.0890%" y="495.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (13 samples, 1.01%)</title><rect x="48.9164%" y="469" width="1.0062%" height="15" fill="rgb(215,49,53)" fg:x="632" fg:w="13"/><text x="49.1664%" y="479.50"></text></g><g><title>bitter::LittleEndianReader::has_data_for_unaligned_loads (2 samples, 0.15%)</title><rect x="59.4427%" y="421" width="0.1548%" height="15" fill="rgb(245,162,40)" fg:x="768" fg:w="2"/><text x="59.6927%" y="431.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode_special_float (32 samples, 2.48%)</title><rect x="57.8173%" y="485" width="2.4768%" height="15" fill="rgb(229,68,17)" fg:x="747" fg:w="32"/><text x="58.0673%" y="495.50">de..</text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_f32 (17 samples, 1.32%)</title><rect x="58.9783%" y="469" width="1.3158%" height="15" fill="rgb(213,182,10)" fg:x="762" fg:w="17"/><text x="59.2283%" y="479.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_u32 (17 samples, 1.32%)</title><rect x="58.9783%" y="453" width="1.3158%" height="15" fill="rgb(245,125,30)" fg:x="762" fg:w="17"/><text x="59.2283%" y="463.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (17 samples, 1.32%)</title><rect x="58.9783%" y="437" width="1.3158%" height="15" fill="rgb(232,202,2)" fg:x="762" fg:w="17"/><text x="59.2283%" y="447.50"></text></g><g><title>bitter::LittleEndianReader::refill (9 samples, 0.70%)</title><rect x="59.5975%" y="421" width="0.6966%" height="15" fill="rgb(237,140,51)" fg:x="770" fg:w="9"/><text x="59.8475%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub (1 samples, 0.08%)</title><rect x="60.2167%" y="405" width="0.0774%" height="15" fill="rgb(236,157,25)" fg:x="778" fg:w="1"/><text x="60.4667%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.08%)</title><rect x="60.2167%" y="389" width="0.0774%" height="15" fill="rgb(219,209,0)" fg:x="778" fg:w="1"/><text x="60.4667%" y="399.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::peek (2 samples, 0.15%)</title><rect x="60.5263%" y="453" width="0.1548%" height="15" fill="rgb(240,116,54)" fg:x="782" fg:w="2"/><text x="60.7763%" y="463.50"></text></g><g><title>bitter::LittleEndianReader::peek_ (2 samples, 0.15%)</title><rect x="60.5263%" y="437" width="0.1548%" height="15" fill="rgb(216,10,36)" fg:x="782" fg:w="2"/><text x="60.7763%" y="447.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode_float (60 samples, 4.64%)</title><rect x="56.1146%" y="501" width="4.6440%" height="15" fill="rgb(222,72,44)" fg:x="725" fg:w="60"/><text x="56.3646%" y="511.50">demop..</text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_nbits (6 samples, 0.46%)</title><rect x="60.2941%" y="485" width="0.4644%" height="15" fill="rgb(232,159,9)" fg:x="779" fg:w="6"/><text x="60.5441%" y="495.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (4 samples, 0.31%)</title><rect x="60.4489%" y="469" width="0.3096%" height="15" fill="rgb(210,39,32)" fg:x="781" fg:w="4"/><text x="60.6989%" y="479.50"></text></g><g><title>bitter::LittleEndianReader::refill (1 samples, 0.08%)</title><rect x="60.6811%" y="453" width="0.0774%" height="15" fill="rgb(216,194,45)" fg:x="784" fg:w="1"/><text x="60.9311%" y="463.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_nbits (3 samples, 0.23%)</title><rect x="61.3003%" y="485" width="0.2322%" height="15" fill="rgb(218,18,35)" fg:x="792" fg:w="3"/><text x="61.5503%" y="495.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (2 samples, 0.15%)</title><rect x="61.3777%" y="469" width="0.1548%" height="15" fill="rgb(207,83,51)" fg:x="793" fg:w="2"/><text x="61.6277%" y="479.50"></text></g><g><title>bitter::LittleEndianReader::refill (1 samples, 0.08%)</title><rect x="61.4551%" y="453" width="0.0774%" height="15" fill="rgb(225,63,43)" fg:x="794" fg:w="1"/><text x="61.7051%" y="463.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode_int (15 samples, 1.16%)</title><rect x="60.7585%" y="501" width="1.1610%" height="15" fill="rgb(207,57,36)" fg:x="785" fg:w="15"/><text x="61.0085%" y="511.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_sbit_long (5 samples, 0.39%)</title><rect x="61.5325%" y="485" width="0.3870%" height="15" fill="rgb(216,99,33)" fg:x="795" fg:w="5"/><text x="61.7825%" y="495.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_nbits (3 samples, 0.23%)</title><rect x="61.6873%" y="469" width="0.2322%" height="15" fill="rgb(225,42,16)" fg:x="797" fg:w="3"/><text x="61.9373%" y="479.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (3 samples, 0.23%)</title><rect x="61.6873%" y="453" width="0.2322%" height="15" fill="rgb(220,201,45)" fg:x="797" fg:w="3"/><text x="61.9373%" y="463.50"></text></g><g><title>bitter::LittleEndianReader::refill (1 samples, 0.08%)</title><rect x="61.8421%" y="437" width="0.0774%" height="15" fill="rgb(225,33,4)" fg:x="799" fg:w="1"/><text x="62.0921%" y="447.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bit (4 samples, 0.31%)</title><rect x="63.3127%" y="437" width="0.3096%" height="15" fill="rgb(224,33,50)" fg:x="818" fg:w="4"/><text x="63.5627%" y="447.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (4 samples, 0.31%)</title><rect x="63.3127%" y="421" width="0.3096%" height="15" fill="rgb(246,198,51)" fg:x="818" fg:w="4"/><text x="63.5627%" y="431.50"></text></g><g><title>bitter::LittleEndianReader::has_data_for_unaligned_loads (2 samples, 0.15%)</title><rect x="63.4675%" y="405" width="0.1548%" height="15" fill="rgb(205,22,4)" fg:x="820" fg:w="2"/><text x="63.7175%" y="415.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode_special_float (12 samples, 0.93%)</title><rect x="62.7709%" y="469" width="0.9288%" height="15" fill="rgb(206,3,8)" fg:x="811" fg:w="12"/><text x="63.0209%" y="479.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_bit_coord (10 samples, 0.77%)</title><rect x="62.9257%" y="453" width="0.7740%" height="15" fill="rgb(251,23,15)" fg:x="813" fg:w="10"/><text x="63.1757%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.08%)</title><rect x="63.6223%" y="437" width="0.0774%" height="15" fill="rgb(252,88,28)" fg:x="822" fg:w="1"/><text x="63.8723%" y="447.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode_vec (24 samples, 1.86%)</title><rect x="61.9195%" y="501" width="1.8576%" height="15" fill="rgb(212,127,14)" fg:x="800" fg:w="24"/><text x="62.1695%" y="511.50">d..</text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode_float (22 samples, 1.70%)</title><rect x="62.0743%" y="485" width="1.7028%" height="15" fill="rgb(247,145,37)" fg:x="802" fg:w="22"/><text x="62.3243%" y="495.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_nbits (1 samples, 0.08%)</title><rect x="63.6997%" y="469" width="0.0774%" height="15" fill="rgb(209,117,53)" fg:x="823" fg:w="1"/><text x="63.9497%" y="479.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.08%)</title><rect x="63.6997%" y="453" width="0.0774%" height="15" fill="rgb(212,90,42)" fg:x="823" fg:w="1"/><text x="63.9497%" y="463.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode (198 samples, 15.33%)</title><rect x="49.9226%" y="517" width="15.3251%" height="15" fill="rgb(218,164,37)" fg:x="645" fg:w="198"/><text x="50.1726%" y="527.50">demoparser::parsing::re..</text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode_vec_xy (19 samples, 1.47%)</title><rect x="63.7771%" y="501" width="1.4706%" height="15" fill="rgb(246,65,34)" fg:x="824" fg:w="19"/><text x="64.0271%" y="511.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode_float (19 samples, 1.47%)</title><rect x="63.7771%" y="485" width="1.4706%" height="15" fill="rgb(231,100,33)" fg:x="824" fg:w="19"/><text x="64.0271%" y="495.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode_special_float (12 samples, 0.93%)</title><rect x="64.3189%" y="469" width="0.9288%" height="15" fill="rgb(228,126,14)" fg:x="831" fg:w="12"/><text x="64.5689%" y="479.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_f32 (7 samples, 0.54%)</title><rect x="64.7059%" y="453" width="0.5418%" height="15" fill="rgb(215,173,21)" fg:x="836" fg:w="7"/><text x="64.9559%" y="463.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_u32 (7 samples, 0.54%)</title><rect x="64.7059%" y="437" width="0.5418%" height="15" fill="rgb(210,6,40)" fg:x="836" fg:w="7"/><text x="64.9559%" y="447.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (7 samples, 0.54%)</title><rect x="64.7059%" y="421" width="0.5418%" height="15" fill="rgb(212,48,18)" fg:x="836" fg:w="7"/><text x="64.9559%" y="431.50"></text></g><g><title>bitter::LittleEndianReader::refill (3 samples, 0.23%)</title><rect x="65.0155%" y="405" width="0.2322%" height="15" fill="rgb(230,214,11)" fg:x="840" fg:w="3"/><text x="65.2655%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub (1 samples, 0.08%)</title><rect x="65.1703%" y="389" width="0.0774%" height="15" fill="rgb(254,105,39)" fg:x="842" fg:w="1"/><text x="65.4203%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.08%)</title><rect x="65.1703%" y="373" width="0.0774%" height="15" fill="rgb(245,158,5)" fg:x="842" fg:w="1"/><text x="65.4203%" y="383.50"></text></g><g><title>&lt;u128 as ahash::convert::Convert&lt;[u64: 2]&gt;&gt;::convert (1 samples, 0.08%)</title><rect x="65.5573%" y="389" width="0.0774%" height="15" fill="rgb(249,208,11)" fg:x="847" fg:w="1"/><text x="65.8073%" y="399.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::finish (6 samples, 0.46%)</title><rect x="65.4025%" y="405" width="0.4644%" height="15" fill="rgb(210,39,28)" fg:x="845" fg:w="6"/><text x="65.6525%" y="415.50"></text></g><g><title>ahash::operations::aesenc (3 samples, 0.23%)</title><rect x="65.6347%" y="389" width="0.2322%" height="15" fill="rgb(211,56,53)" fg:x="848" fg:w="3"/><text x="65.8847%" y="399.50"></text></g><g><title>core::core_arch::x86::aes::_mm_aesenc_si128 (3 samples, 0.23%)</title><rect x="65.6347%" y="373" width="0.2322%" height="15" fill="rgb(226,201,30)" fg:x="848" fg:w="3"/><text x="65.8847%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.62%)</title><rect x="65.4025%" y="469" width="0.6192%" height="15" fill="rgb(239,101,34)" fg:x="845" fg:w="8"/><text x="65.6525%" y="479.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::hash_one (8 samples, 0.62%)</title><rect x="65.4025%" y="453" width="0.6192%" height="15" fill="rgb(226,209,5)" fg:x="845" fg:w="8"/><text x="65.6525%" y="463.50"></text></g><g><title>ahash::random_state::RandomState::hash_one (8 samples, 0.62%)</title><rect x="65.4025%" y="437" width="0.6192%" height="15" fill="rgb(250,105,47)" fg:x="845" fg:w="8"/><text x="65.6525%" y="447.50"></text></g><g><title>&lt;T as ahash::specialize::CallHasher&gt;::get_hash (8 samples, 0.62%)</title><rect x="65.4025%" y="421" width="0.6192%" height="15" fill="rgb(230,72,3)" fg:x="845" fg:w="8"/><text x="65.6525%" y="431.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.15%)</title><rect x="65.8669%" y="405" width="0.1548%" height="15" fill="rgb(232,218,39)" fg:x="851" fg:w="2"/><text x="66.1169%" y="415.50"></text></g><g><title>ahash::aes_hash::AHasher::from_random_state (2 samples, 0.15%)</title><rect x="65.8669%" y="389" width="0.1548%" height="15" fill="rgb(248,166,6)" fg:x="851" fg:w="2"/><text x="66.1169%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.15%)</title><rect x="67.1827%" y="421" width="0.1548%" height="15" fill="rgb(247,89,20)" fg:x="868" fg:w="2"/><text x="67.4327%" y="431.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (3 samples, 0.23%)</title><rect x="67.3375%" y="405" width="0.2322%" height="15" fill="rgb(248,130,54)" fg:x="870" fg:w="3"/><text x="67.5875%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u16&gt;::eq (3 samples, 0.23%)</title><rect x="67.3375%" y="389" width="0.2322%" height="15" fill="rgb(234,196,4)" fg:x="870" fg:w="3"/><text x="67.5875%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (5 samples, 0.39%)</title><rect x="67.3375%" y="421" width="0.3870%" height="15" fill="rgb(250,143,31)" fg:x="870" fg:w="5"/><text x="67.5875%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (2 samples, 0.15%)</title><rect x="67.5697%" y="405" width="0.1548%" height="15" fill="rgb(211,110,34)" fg:x="873" fg:w="2"/><text x="67.8197%" y="415.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (2 samples, 0.15%)</title><rect x="67.5697%" y="389" width="0.1548%" height="15" fill="rgb(215,124,48)" fg:x="873" fg:w="2"/><text x="67.8197%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.15%)</title><rect x="67.5697%" y="373" width="0.1548%" height="15" fill="rgb(216,46,13)" fg:x="873" fg:w="2"/><text x="67.8197%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.15%)</title><rect x="67.5697%" y="357" width="0.1548%" height="15" fill="rgb(205,184,25)" fg:x="873" fg:w="2"/><text x="67.8197%" y="367.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.15%)</title><rect x="67.7245%" y="421" width="0.1548%" height="15" fill="rgb(228,1,10)" fg:x="875" fg:w="2"/><text x="67.9745%" y="431.50"></text></g><g><title>demoparser::parsing::entities::parse_ent_props (533 samples, 41.25%)</title><rect x="26.7802%" y="533" width="41.2539%" height="15" fill="rgb(213,116,27)" fg:x="346" fg:w="533"/><text x="27.0302%" y="543.50">demoparser::parsing::entities::parse_ent_props</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (36 samples, 2.79%)</title><rect x="65.2477%" y="517" width="2.7864%" height="15" fill="rgb(241,95,50)" fg:x="843" fg:w="36"/><text x="65.4977%" y="527.50">st..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (36 samples, 2.79%)</title><rect x="65.2477%" y="501" width="2.7864%" height="15" fill="rgb(238,48,32)" fg:x="843" fg:w="36"/><text x="65.4977%" y="511.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (36 samples, 2.79%)</title><rect x="65.2477%" y="485" width="2.7864%" height="15" fill="rgb(235,113,49)" fg:x="843" fg:w="36"/><text x="65.4977%" y="495.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (26 samples, 2.01%)</title><rect x="66.0217%" y="469" width="2.0124%" height="15" fill="rgb(205,127,43)" fg:x="853" fg:w="26"/><text x="66.2717%" y="479.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (26 samples, 2.01%)</title><rect x="66.0217%" y="453" width="2.0124%" height="15" fill="rgb(250,162,2)" fg:x="853" fg:w="26"/><text x="66.2717%" y="463.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (26 samples, 2.01%)</title><rect x="66.0217%" y="437" width="2.0124%" height="15" fill="rgb(220,13,41)" fg:x="853" fg:w="26"/><text x="66.2717%" y="447.50">h..</text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.15%)</title><rect x="67.8793%" y="421" width="0.1548%" height="15" fill="rgb(249,221,25)" fg:x="877" fg:w="2"/><text x="68.1293%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.15%)</title><rect x="67.8793%" y="405" width="0.1548%" height="15" fill="rgb(215,208,19)" fg:x="877" fg:w="2"/><text x="68.1293%" y="415.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_boolie (1 samples, 0.08%)</title><rect x="68.0341%" y="533" width="0.0774%" height="15" fill="rgb(236,175,2)" fg:x="879" fg:w="1"/><text x="68.2841%" y="543.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bit (1 samples, 0.08%)</title><rect x="68.0341%" y="517" width="0.0774%" height="15" fill="rgb(241,52,2)" fg:x="879" fg:w="1"/><text x="68.2841%" y="527.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.08%)</title><rect x="68.0341%" y="501" width="0.0774%" height="15" fill="rgb(248,140,14)" fg:x="879" fg:w="1"/><text x="68.2841%" y="511.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_u_bit_var (1 samples, 0.08%)</title><rect x="68.1115%" y="533" width="0.0774%" height="15" fill="rgb(253,22,42)" fg:x="880" fg:w="1"/><text x="68.3615%" y="543.50"></text></g><g><title>demoparser::parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::_parse_packet_entities (676 samples, 52.32%)</title><rect x="16.1765%" y="549" width="52.3220%" height="15" fill="rgb(234,61,47)" fg:x="209" fg:w="676"/><text x="16.4265%" y="559.50">demoparser::parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::_parse_pack..</text></g><g><title>mi_free (4 samples, 0.31%)</title><rect x="68.1889%" y="533" width="0.3096%" height="15" fill="rgb(208,226,15)" fg:x="881" fg:w="4"/><text x="68.4389%" y="543.50"></text></g><g><title>_mi_segment_page_of (2 samples, 0.15%)</title><rect x="68.3437%" y="517" width="0.1548%" height="15" fill="rgb(217,221,4)" fg:x="883" fg:w="2"/><text x="68.5937%" y="527.50"></text></g><g><title>mi_slice_first (2 samples, 0.15%)</title><rect x="68.3437%" y="501" width="0.1548%" height="15" fill="rgb(212,174,34)" fg:x="883" fg:w="2"/><text x="68.5937%" y="511.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bool (2 samples, 0.15%)</title><rect x="69.1176%" y="501" width="0.1548%" height="15" fill="rgb(253,83,4)" fg:x="893" fg:w="2"/><text x="69.3676%" y="511.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (1 samples, 0.08%)</title><rect x="69.1950%" y="485" width="0.0774%" height="15" fill="rgb(250,195,49)" fg:x="894" fg:w="1"/><text x="69.4450%" y="495.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.08%)</title><rect x="69.5820%" y="357" width="0.0774%" height="15" fill="rgb(241,192,25)" fg:x="899" fg:w="1"/><text x="69.8320%" y="367.50"></text></g><g><title>mi_find_page (1 samples, 0.08%)</title><rect x="69.5820%" y="341" width="0.0774%" height="15" fill="rgb(208,124,10)" fg:x="899" fg:w="1"/><text x="69.8320%" y="351.50"></text></g><g><title>mi_find_free_page (1 samples, 0.08%)</title><rect x="69.5820%" y="325" width="0.0774%" height="15" fill="rgb(222,33,0)" fg:x="899" fg:w="1"/><text x="69.8320%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (3 samples, 0.23%)</title><rect x="69.5046%" y="437" width="0.2322%" height="15" fill="rgb(234,209,28)" fg:x="898" fg:w="3"/><text x="69.7546%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (3 samples, 0.23%)</title><rect x="69.5046%" y="421" width="0.2322%" height="15" fill="rgb(224,11,23)" fg:x="898" fg:w="3"/><text x="69.7546%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (3 samples, 0.23%)</title><rect x="69.5046%" y="405" width="0.2322%" height="15" fill="rgb(232,99,1)" fg:x="898" fg:w="3"/><text x="69.7546%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (3 samples, 0.23%)</title><rect x="69.5046%" y="389" width="0.2322%" height="15" fill="rgb(237,95,45)" fg:x="898" fg:w="3"/><text x="69.7546%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.23%)</title><rect x="69.5046%" y="373" width="0.2322%" height="15" fill="rgb(208,109,11)" fg:x="898" fg:w="3"/><text x="69.7546%" y="383.50"></text></g><g><title>mi_malloc (1 samples, 0.08%)</title><rect x="69.6594%" y="357" width="0.0774%" height="15" fill="rgb(216,190,48)" fg:x="900" fg:w="1"/><text x="69.9094%" y="367.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.08%)</title><rect x="69.6594%" y="341" width="0.0774%" height="15" fill="rgb(251,171,36)" fg:x="900" fg:w="1"/><text x="69.9094%" y="351.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.08%)</title><rect x="69.6594%" y="325" width="0.0774%" height="15" fill="rgb(230,62,22)" fg:x="900" fg:w="1"/><text x="69.9094%" y="335.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.08%)</title><rect x="69.6594%" y="309" width="0.0774%" height="15" fill="rgb(225,114,35)" fg:x="900" fg:w="1"/><text x="69.9094%" y="319.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes (22 samples, 1.70%)</title><rect x="69.2724%" y="501" width="1.7028%" height="15" fill="rgb(215,118,42)" fg:x="895" fg:w="22"/><text x="69.5224%" y="511.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (21 samples, 1.63%)</title><rect x="69.3498%" y="485" width="1.6254%" height="15" fill="rgb(243,119,21)" fg:x="896" fg:w="21"/><text x="69.5998%" y="495.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (20 samples, 1.55%)</title><rect x="69.4272%" y="469" width="1.5480%" height="15" fill="rgb(252,177,53)" fg:x="897" fg:w="20"/><text x="69.6772%" y="479.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (20 samples, 1.55%)</title><rect x="69.4272%" y="453" width="1.5480%" height="15" fill="rgb(237,209,29)" fg:x="897" fg:w="20"/><text x="69.6772%" y="463.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact (16 samples, 1.24%)</title><rect x="69.7368%" y="437" width="1.2384%" height="15" fill="rgb(212,65,23)" fg:x="901" fg:w="16"/><text x="69.9868%" y="447.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::read_bytes (16 samples, 1.24%)</title><rect x="69.7368%" y="421" width="1.2384%" height="15" fill="rgb(230,222,46)" fg:x="901" fg:w="16"/><text x="69.9868%" y="431.50"></text></g><g><title>protobuf::misc::maybe_uninit_write_slice (16 samples, 1.24%)</title><rect x="69.7368%" y="405" width="1.2384%" height="15" fill="rgb(215,135,32)" fg:x="901" fg:w="16"/><text x="69.9868%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (16 samples, 1.24%)</title><rect x="69.7368%" y="389" width="1.2384%" height="15" fill="rgb(246,101,22)" fg:x="901" fg:w="16"/><text x="69.9868%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 1.24%)</title><rect x="69.7368%" y="373" width="1.2384%" height="15" fill="rgb(206,107,13)" fg:x="901" fg:w="16"/><text x="69.9868%" y="383.50"></text></g><g><title>[libc.so.6] (16 samples, 1.24%)</title><rect x="69.7368%" y="357" width="1.2384%" height="15" fill="rgb(250,100,44)" fg:x="901" fg:w="16"/><text x="69.9868%" y="367.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::TryFrom&lt;i64&gt; for i32&gt;::try_from (1 samples, 0.08%)</title><rect x="70.9752%" y="485" width="0.0774%" height="15" fill="rgb(231,147,38)" fg:x="917" fg:w="1"/><text x="71.2252%" y="495.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int32 (2 samples, 0.15%)</title><rect x="70.9752%" y="501" width="0.1548%" height="15" fill="rgb(229,8,40)" fg:x="917" fg:w="2"/><text x="71.2252%" y="511.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int64 (1 samples, 0.08%)</title><rect x="71.0526%" y="485" width="0.0774%" height="15" fill="rgb(221,135,30)" fg:x="918" fg:w="1"/><text x="71.3026%" y="495.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (1 samples, 0.08%)</title><rect x="71.0526%" y="469" width="0.0774%" height="15" fill="rgb(249,193,18)" fg:x="918" fg:w="1"/><text x="71.3026%" y="479.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::eof (1 samples, 0.08%)</title><rect x="71.3622%" y="469" width="0.0774%" height="15" fill="rgb(209,133,39)" fg:x="922" fg:w="1"/><text x="71.6122%" y="479.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::eof (1 samples, 0.08%)</title><rect x="71.3622%" y="453" width="0.0774%" height="15" fill="rgb(232,100,14)" fg:x="922" fg:w="1"/><text x="71.6122%" y="463.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::fill_buf (1 samples, 0.08%)</title><rect x="71.3622%" y="437" width="0.0774%" height="15" fill="rgb(224,185,1)" fg:x="922" fg:w="1"/><text x="71.6122%" y="447.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::fill_buf_slow (1 samples, 0.08%)</title><rect x="71.3622%" y="421" width="0.0774%" height="15" fill="rgb(223,139,8)" fg:x="922" fg:w="1"/><text x="71.6122%" y="431.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::consume (2 samples, 0.15%)</title><rect x="71.4396%" y="469" width="0.1548%" height="15" fill="rgb(232,213,38)" fg:x="923" fg:w="2"/><text x="71.6896%" y="479.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::consume (2 samples, 0.15%)</title><rect x="71.4396%" y="453" width="0.1548%" height="15" fill="rgb(207,94,22)" fg:x="923" fg:w="2"/><text x="71.6896%" y="463.50"></text></g><g><title>demoparser::parsing::entities::parse_packet_entities (722 samples, 55.88%)</title><rect x="15.7895%" y="565" width="55.8824%" height="15" fill="rgb(219,183,54)" fg:x="204" fg:w="722"/><text x="16.0395%" y="575.50">demoparser::parsing::entities::parse_packet_entities</text></g><g><title>protobuf::message::Message::parse_from_bytes (41 samples, 3.17%)</title><rect x="68.4985%" y="549" width="3.1734%" height="15" fill="rgb(216,185,54)" fg:x="885" fg:w="41"/><text x="68.7485%" y="559.50">pro..</text></g><g><title>protobuf::message::Message::parse_from (41 samples, 3.17%)</title><rect x="68.4985%" y="533" width="3.1734%" height="15" fill="rgb(254,217,39)" fg:x="885" fg:w="41"/><text x="68.7485%" y="543.50">pro..</text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_PacketEntities as protobuf::message::Message&gt;::merge_from (40 samples, 3.10%)</title><rect x="68.5759%" y="517" width="3.0960%" height="15" fill="rgb(240,178,23)" fg:x="886" fg:w="40"/><text x="68.8259%" y="527.50">&lt;cs..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (7 samples, 0.54%)</title><rect x="71.1300%" y="501" width="0.5418%" height="15" fill="rgb(218,11,47)" fg:x="919" fg:w="7"/><text x="71.3800%" y="511.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (7 samples, 0.54%)</title><rect x="71.1300%" y="485" width="0.5418%" height="15" fill="rgb(218,51,51)" fg:x="919" fg:w="7"/><text x="71.3800%" y="495.50"></text></g><g><title>protobuf::varint::decode::decode_varint32 (1 samples, 0.08%)</title><rect x="71.5944%" y="469" width="0.0774%" height="15" fill="rgb(238,126,27)" fg:x="925" fg:w="1"/><text x="71.8444%" y="479.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (1 samples, 0.08%)</title><rect x="71.5944%" y="453" width="0.0774%" height="15" fill="rgb(249,202,22)" fg:x="925" fg:w="1"/><text x="71.8444%" y="463.50"></text></g><g><title>&lt;u32 as protobuf::varint::decode::DecodeVarint&gt;::from_u64 (1 samples, 0.08%)</title><rect x="71.5944%" y="437" width="0.0774%" height="15" fill="rgb(254,195,49)" fg:x="925" fg:w="1"/><text x="71.8444%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (5 samples, 0.39%)</title><rect x="71.6718%" y="549" width="0.3870%" height="15" fill="rgb(208,123,14)" fg:x="926" fg:w="5"/><text x="71.9218%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.39%)</title><rect x="71.6718%" y="533" width="0.3870%" height="15" fill="rgb(224,200,8)" fg:x="926" fg:w="5"/><text x="71.9218%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.39%)</title><rect x="71.6718%" y="517" width="0.3870%" height="15" fill="rgb(217,61,36)" fg:x="926" fg:w="5"/><text x="71.9218%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.39%)</title><rect x="71.6718%" y="501" width="0.3870%" height="15" fill="rgb(206,35,45)" fg:x="926" fg:w="5"/><text x="71.9218%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.39%)</title><rect x="71.6718%" y="485" width="0.3870%" height="15" fill="rgb(217,65,33)" fg:x="926" fg:w="5"/><text x="71.9218%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.39%)</title><rect x="71.6718%" y="469" width="0.3870%" height="15" fill="rgb(222,158,48)" fg:x="926" fg:w="5"/><text x="71.9218%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (5 samples, 0.39%)</title><rect x="71.6718%" y="453" width="0.3870%" height="15" fill="rgb(254,2,54)" fg:x="926" fg:w="5"/><text x="71.9218%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.15%)</title><rect x="71.9040%" y="437" width="0.1548%" height="15" fill="rgb(250,143,38)" fg:x="929" fg:w="2"/><text x="72.1540%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.15%)</title><rect x="71.9040%" y="421" width="0.1548%" height="15" fill="rgb(248,25,0)" fg:x="929" fg:w="2"/><text x="72.1540%" y="431.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.08%)</title><rect x="72.0588%" y="533" width="0.0774%" height="15" fill="rgb(206,152,27)" fg:x="931" fg:w="1"/><text x="72.3088%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.08%)</title><rect x="72.0588%" y="517" width="0.0774%" height="15" fill="rgb(240,77,30)" fg:x="931" fg:w="1"/><text x="72.3088%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.0588%" y="501" width="0.0774%" height="15" fill="rgb(231,5,3)" fg:x="931" fg:w="1"/><text x="72.3088%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.0588%" y="485" width="0.0774%" height="15" fill="rgb(207,226,32)" fg:x="931" fg:w="1"/><text x="72.3088%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.0588%" y="469" width="0.0774%" height="15" fill="rgb(222,207,47)" fg:x="931" fg:w="1"/><text x="72.3088%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.0588%" y="453" width="0.0774%" height="15" fill="rgb(229,115,45)" fg:x="931" fg:w="1"/><text x="72.3088%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.0588%" y="437" width="0.0774%" height="15" fill="rgb(224,191,6)" fg:x="931" fg:w="1"/><text x="72.3088%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.0588%" y="421" width="0.0774%" height="15" fill="rgb(230,227,24)" fg:x="931" fg:w="1"/><text x="72.3088%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.0588%" y="405" width="0.0774%" height="15" fill="rgb(228,80,19)" fg:x="931" fg:w="1"/><text x="72.3088%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.0588%" y="389" width="0.0774%" height="15" fill="rgb(247,229,0)" fg:x="931" fg:w="1"/><text x="72.3088%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.0588%" y="373" width="0.0774%" height="15" fill="rgb(237,194,15)" fg:x="931" fg:w="1"/><text x="72.3088%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.0588%" y="357" width="0.0774%" height="15" fill="rgb(219,203,20)" fg:x="931" fg:w="1"/><text x="72.3088%" y="367.50"></text></g><g><title>mi_malloc (1 samples, 0.08%)</title><rect x="72.0588%" y="341" width="0.0774%" height="15" fill="rgb(234,128,8)" fg:x="931" fg:w="1"/><text x="72.3088%" y="351.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.08%)</title><rect x="72.0588%" y="325" width="0.0774%" height="15" fill="rgb(248,202,8)" fg:x="931" fg:w="1"/><text x="72.3088%" y="335.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.08%)</title><rect x="72.0588%" y="309" width="0.0774%" height="15" fill="rgb(206,104,37)" fg:x="931" fg:w="1"/><text x="72.3088%" y="319.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.08%)</title><rect x="72.0588%" y="293" width="0.0774%" height="15" fill="rgb(223,8,27)" fg:x="931" fg:w="1"/><text x="72.3088%" y="303.50"></text></g><g><title>demoparser::parsing::game_events::gen_name_val_pairs (2 samples, 0.15%)</title><rect x="72.0588%" y="549" width="0.1548%" height="15" fill="rgb(216,217,28)" fg:x="931" fg:w="2"/><text x="72.3088%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.08%)</title><rect x="72.1362%" y="533" width="0.0774%" height="15" fill="rgb(249,199,1)" fg:x="932" fg:w="1"/><text x="72.3862%" y="543.50"></text></g><g><title>core::ptr::write (1 samples, 0.08%)</title><rect x="72.1362%" y="517" width="0.0774%" height="15" fill="rgb(240,85,17)" fg:x="932" fg:w="1"/><text x="72.3862%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.23%)</title><rect x="72.3684%" y="533" width="0.2322%" height="15" fill="rgb(206,108,45)" fg:x="935" fg:w="3"/><text x="72.6184%" y="543.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::from_bytes (2 samples, 0.15%)</title><rect x="72.6006%" y="533" width="0.1548%" height="15" fill="rgb(245,210,41)" fg:x="938" fg:w="2"/><text x="72.8506%" y="543.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::from_byte_slice (2 samples, 0.15%)</title><rect x="72.6006%" y="517" width="0.1548%" height="15" fill="rgb(206,13,37)" fg:x="938" fg:w="2"/><text x="72.8506%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.23%)</title><rect x="72.9876%" y="501" width="0.2322%" height="15" fill="rgb(250,61,18)" fg:x="943" fg:w="3"/><text x="73.2376%" y="511.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.08%)</title><rect x="73.2198%" y="453" width="0.0774%" height="15" fill="rgb(235,172,48)" fg:x="946" fg:w="1"/><text x="73.4698%" y="463.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.08%)</title><rect x="73.2972%" y="341" width="0.0774%" height="15" fill="rgb(249,201,17)" fg:x="947" fg:w="1"/><text x="73.5472%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.23%)</title><rect x="73.2198%" y="485" width="0.2322%" height="15" fill="rgb(219,208,6)" fg:x="946" fg:w="3"/><text x="73.4698%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.23%)</title><rect x="73.2198%" y="469" width="0.2322%" height="15" fill="rgb(248,31,23)" fg:x="946" fg:w="3"/><text x="73.4698%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.15%)</title><rect x="73.2972%" y="453" width="0.1548%" height="15" fill="rgb(245,15,42)" fg:x="947" fg:w="2"/><text x="73.5472%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.15%)</title><rect x="73.2972%" y="437" width="0.1548%" height="15" fill="rgb(222,217,39)" fg:x="947" fg:w="2"/><text x="73.5472%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.15%)</title><rect x="73.2972%" y="421" width="0.1548%" height="15" fill="rgb(210,219,27)" fg:x="947" fg:w="2"/><text x="73.5472%" y="431.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.15%)</title><rect x="73.2972%" y="405" width="0.1548%" height="15" fill="rgb(252,166,36)" fg:x="947" fg:w="2"/><text x="73.5472%" y="415.50"></text></g><g><title>_mi_heap_realloc_zero (2 samples, 0.15%)</title><rect x="73.2972%" y="389" width="0.1548%" height="15" fill="rgb(245,132,34)" fg:x="947" fg:w="2"/><text x="73.5472%" y="399.50"></text></g><g><title>mi_heap_malloc (2 samples, 0.15%)</title><rect x="73.2972%" y="373" width="0.1548%" height="15" fill="rgb(236,54,3)" fg:x="947" fg:w="2"/><text x="73.5472%" y="383.50"></text></g><g><title>_mi_malloc_generic (2 samples, 0.15%)</title><rect x="73.2972%" y="357" width="0.1548%" height="15" fill="rgb(241,173,43)" fg:x="947" fg:w="2"/><text x="73.5472%" y="367.50"></text></g><g><title>mi_find_page (1 samples, 0.08%)</title><rect x="73.3746%" y="341" width="0.0774%" height="15" fill="rgb(215,190,9)" fg:x="948" fg:w="1"/><text x="73.6246%" y="351.50"></text></g><g><title>mi_find_free_page (1 samples, 0.08%)</title><rect x="73.3746%" y="325" width="0.0774%" height="15" fill="rgb(242,101,16)" fg:x="948" fg:w="1"/><text x="73.6246%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.39%)</title><rect x="73.2198%" y="501" width="0.3870%" height="15" fill="rgb(223,190,21)" fg:x="946" fg:w="5"/><text x="73.4698%" y="511.50"></text></g><g><title>core::ptr::write (2 samples, 0.15%)</title><rect x="73.4520%" y="485" width="0.1548%" height="15" fill="rgb(215,228,25)" fg:x="949" fg:w="2"/><text x="73.7020%" y="495.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int32 (1 samples, 0.08%)</title><rect x="73.6068%" y="501" width="0.0774%" height="15" fill="rgb(225,36,22)" fg:x="951" fg:w="1"/><text x="73.8568%" y="511.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.23%)</title><rect x="74.0712%" y="453" width="0.2322%" height="15" fill="rgb(251,106,46)" fg:x="957" fg:w="3"/><text x="74.3212%" y="463.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bool (1 samples, 0.08%)</title><rect x="74.3034%" y="453" width="0.0774%" height="15" fill="rgb(208,90,1)" fg:x="960" fg:w="1"/><text x="74.5534%" y="463.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (1 samples, 0.08%)</title><rect x="74.3034%" y="437" width="0.0774%" height="15" fill="rgb(243,10,4)" fg:x="960" fg:w="1"/><text x="74.5534%" y="447.50"></text></g><g><title>protobuf::varint::decode::decode_varint64 (1 samples, 0.08%)</title><rect x="74.3034%" y="421" width="0.0774%" height="15" fill="rgb(212,137,27)" fg:x="960" fg:w="1"/><text x="74.5534%" y="431.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (1 samples, 0.08%)</title><rect x="74.3034%" y="405" width="0.0774%" height="15" fill="rgb(231,220,49)" fg:x="960" fg:w="1"/><text x="74.5534%" y="415.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::TryFrom&lt;i64&gt; for i32&gt;::try_from (1 samples, 0.08%)</title><rect x="74.3808%" y="437" width="0.0774%" height="15" fill="rgb(237,96,20)" fg:x="961" fg:w="1"/><text x="74.6308%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.08%)</title><rect x="74.4582%" y="421" width="0.0774%" height="15" fill="rgb(239,229,30)" fg:x="962" fg:w="1"/><text x="74.7082%" y="431.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int32 (5 samples, 0.39%)</title><rect x="74.3808%" y="453" width="0.3870%" height="15" fill="rgb(219,65,33)" fg:x="961" fg:w="5"/><text x="74.6308%" y="463.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int64 (4 samples, 0.31%)</title><rect x="74.4582%" y="437" width="0.3096%" height="15" fill="rgb(243,134,7)" fg:x="962" fg:w="4"/><text x="74.7082%" y="447.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (3 samples, 0.23%)</title><rect x="74.5356%" y="421" width="0.2322%" height="15" fill="rgb(216,177,54)" fg:x="963" fg:w="3"/><text x="74.7856%" y="431.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::remaining_in_buf (2 samples, 0.15%)</title><rect x="74.6130%" y="405" width="0.1548%" height="15" fill="rgb(211,160,20)" fg:x="964" fg:w="2"/><text x="74.8630%" y="415.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::remaining_in_buf (2 samples, 0.15%)</title><rect x="74.6130%" y="389" width="0.1548%" height="15" fill="rgb(239,85,39)" fg:x="964" fg:w="2"/><text x="74.8630%" y="399.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (3 samples, 0.23%)</title><rect x="74.7678%" y="453" width="0.2322%" height="15" fill="rgb(232,125,22)" fg:x="966" fg:w="3"/><text x="75.0178%" y="463.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (3 samples, 0.23%)</title><rect x="74.7678%" y="437" width="0.2322%" height="15" fill="rgb(244,57,34)" fg:x="966" fg:w="3"/><text x="75.0178%" y="447.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::eof (3 samples, 0.23%)</title><rect x="74.7678%" y="421" width="0.2322%" height="15" fill="rgb(214,203,32)" fg:x="966" fg:w="3"/><text x="75.0178%" y="431.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::eof (3 samples, 0.23%)</title><rect x="74.7678%" y="405" width="0.2322%" height="15" fill="rgb(207,58,43)" fg:x="966" fg:w="3"/><text x="75.0178%" y="415.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::fill_buf (3 samples, 0.23%)</title><rect x="74.7678%" y="389" width="0.2322%" height="15" fill="rgb(215,193,15)" fg:x="966" fg:w="3"/><text x="75.0178%" y="399.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::pos (3 samples, 0.23%)</title><rect x="74.7678%" y="373" width="0.2322%" height="15" fill="rgb(232,15,44)" fg:x="966" fg:w="3"/><text x="75.0178%" y="383.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::pos_within_buf (1 samples, 0.08%)</title><rect x="74.9226%" y="357" width="0.0774%" height="15" fill="rgb(212,3,48)" fg:x="968" fg:w="1"/><text x="75.1726%" y="367.50"></text></g><g><title>alloc::string::String::from_utf8 (1 samples, 0.08%)</title><rect x="75.0000%" y="421" width="0.0774%" height="15" fill="rgb(218,128,7)" fg:x="969" fg:w="1"/><text x="75.2500%" y="431.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.08%)</title><rect x="75.0000%" y="405" width="0.0774%" height="15" fill="rgb(226,216,39)" fg:x="969" fg:w="1"/><text x="75.2500%" y="415.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_game_event::Key_t as protobuf::message::Message&gt;::merge_from (18 samples, 1.39%)</title><rect x="73.8390%" y="469" width="1.3932%" height="15" fill="rgb(243,47,51)" fg:x="954" fg:w="18"/><text x="74.0890%" y="479.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string (3 samples, 0.23%)</title><rect x="75.0000%" y="453" width="0.2322%" height="15" fill="rgb(241,183,40)" fg:x="969" fg:w="3"/><text x="75.2500%" y="463.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string_into (3 samples, 0.23%)</title><rect x="75.0000%" y="437" width="0.2322%" height="15" fill="rgb(231,217,32)" fg:x="969" fg:w="3"/><text x="75.2500%" y="447.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (2 samples, 0.15%)</title><rect x="75.0774%" y="421" width="0.1548%" height="15" fill="rgb(229,61,38)" fg:x="970" fg:w="2"/><text x="75.3274%" y="431.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (2 samples, 0.15%)</title><rect x="75.0774%" y="405" width="0.1548%" height="15" fill="rgb(225,210,5)" fg:x="970" fg:w="2"/><text x="75.3274%" y="415.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (2 samples, 0.15%)</title><rect x="75.0774%" y="389" width="0.1548%" height="15" fill="rgb(231,79,45)" fg:x="970" fg:w="2"/><text x="75.3274%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (2 samples, 0.15%)</title><rect x="75.0774%" y="373" width="0.1548%" height="15" fill="rgb(224,100,7)" fg:x="970" fg:w="2"/><text x="75.3274%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (2 samples, 0.15%)</title><rect x="75.0774%" y="357" width="0.1548%" height="15" fill="rgb(241,198,18)" fg:x="970" fg:w="2"/><text x="75.3274%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (2 samples, 0.15%)</title><rect x="75.0774%" y="341" width="0.1548%" height="15" fill="rgb(252,97,53)" fg:x="970" fg:w="2"/><text x="75.3274%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (1 samples, 0.08%)</title><rect x="75.1548%" y="325" width="0.0774%" height="15" fill="rgb(220,88,7)" fg:x="971" fg:w="1"/><text x="75.4048%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="75.1548%" y="309" width="0.0774%" height="15" fill="rgb(213,176,14)" fg:x="971" fg:w="1"/><text x="75.4048%" y="319.50"></text></g><g><title>mi_malloc (1 samples, 0.08%)</title><rect x="75.1548%" y="293" width="0.0774%" height="15" fill="rgb(246,73,7)" fg:x="971" fg:w="1"/><text x="75.4048%" y="303.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.08%)</title><rect x="75.1548%" y="277" width="0.0774%" height="15" fill="rgb(245,64,36)" fg:x="971" fg:w="1"/><text x="75.4048%" y="287.50"></text></g><g><title>mi_heap_malloc_small (1 samples, 0.08%)</title><rect x="75.1548%" y="261" width="0.0774%" height="15" fill="rgb(245,80,10)" fg:x="971" fg:w="1"/><text x="75.4048%" y="271.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.08%)</title><rect x="75.1548%" y="245" width="0.0774%" height="15" fill="rgb(232,107,50)" fg:x="971" fg:w="1"/><text x="75.4048%" y="255.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::pop_limit (3 samples, 0.23%)</title><rect x="75.2322%" y="469" width="0.2322%" height="15" fill="rgb(253,3,0)" fg:x="972" fg:w="3"/><text x="75.4822%" y="479.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::pop_limit (1 samples, 0.08%)</title><rect x="75.3870%" y="453" width="0.0774%" height="15" fill="rgb(212,99,53)" fg:x="974" fg:w="1"/><text x="75.6370%" y="463.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::update_limit_within_buf (1 samples, 0.08%)</title><rect x="75.3870%" y="437" width="0.0774%" height="15" fill="rgb(249,111,54)" fg:x="974" fg:w="1"/><text x="75.6370%" y="447.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::update_limit (1 samples, 0.08%)</title><rect x="75.3870%" y="421" width="0.0774%" height="15" fill="rgb(249,55,30)" fg:x="974" fg:w="1"/><text x="75.6370%" y="431.50"></text></g><g><title>core::cmp::min (1 samples, 0.08%)</title><rect x="75.3870%" y="405" width="0.0774%" height="15" fill="rgb(237,47,42)" fg:x="974" fg:w="1"/><text x="75.6370%" y="415.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.08%)</title><rect x="75.3870%" y="389" width="0.0774%" height="15" fill="rgb(211,20,18)" fg:x="974" fg:w="1"/><text x="75.6370%" y="399.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_message (24 samples, 1.86%)</title><rect x="73.6842%" y="501" width="1.8576%" height="15" fill="rgb(231,203,46)" fg:x="952" fg:w="24"/><text x="73.9342%" y="511.50">p..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::merge_message (23 samples, 1.78%)</title><rect x="73.7616%" y="485" width="1.7802%" height="15" fill="rgb(237,142,3)" fg:x="953" fg:w="23"/><text x="74.0116%" y="495.50">p..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::push_limit (1 samples, 0.08%)</title><rect x="75.4644%" y="469" width="0.0774%" height="15" fill="rgb(241,107,1)" fg:x="975" fg:w="1"/><text x="75.7144%" y="479.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_GameEvent as protobuf::message::Message&gt;::merge_from (40 samples, 3.10%)</title><rect x="72.7554%" y="517" width="3.0960%" height="15" fill="rgb(229,83,13)" fg:x="940" fg:w="40"/><text x="73.0054%" y="527.50">&lt;cs..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (4 samples, 0.31%)</title><rect x="75.5418%" y="501" width="0.3096%" height="15" fill="rgb(241,91,40)" fg:x="976" fg:w="4"/><text x="75.7918%" y="511.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (4 samples, 0.31%)</title><rect x="75.5418%" y="485" width="0.3096%" height="15" fill="rgb(225,3,45)" fg:x="976" fg:w="4"/><text x="75.7918%" y="495.50"></text></g><g><title>protobuf::varint::decode::decode_varint32 (3 samples, 0.23%)</title><rect x="75.6192%" y="469" width="0.2322%" height="15" fill="rgb(244,223,14)" fg:x="977" fg:w="3"/><text x="75.8692%" y="479.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (3 samples, 0.23%)</title><rect x="75.6192%" y="453" width="0.2322%" height="15" fill="rgb(224,124,37)" fg:x="977" fg:w="3"/><text x="75.8692%" y="463.50"></text></g><g><title>&lt;u32 as protobuf::varint::decode::DecodeVarint&gt;::from_u64 (1 samples, 0.08%)</title><rect x="75.7740%" y="437" width="0.0774%" height="15" fill="rgb(251,171,30)" fg:x="979" fg:w="1"/><text x="76.0240%" y="447.50"></text></g><g><title>demoparser::parsing::game_events::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_game_events (56 samples, 4.33%)</title><rect x="71.6718%" y="565" width="4.3344%" height="15" fill="rgb(236,46,54)" fg:x="926" fg:w="56"/><text x="71.9218%" y="575.50">demop..</text></g><g><title>protobuf::message::Message::parse_from_bytes (49 samples, 3.79%)</title><rect x="72.2136%" y="549" width="3.7926%" height="15" fill="rgb(245,213,5)" fg:x="933" fg:w="49"/><text x="72.4636%" y="559.50">prot..</text></g><g><title>protobuf::message::Message::parse_from (42 samples, 3.25%)</title><rect x="72.7554%" y="533" width="3.2508%" height="15" fill="rgb(230,144,27)" fg:x="940" fg:w="42"/><text x="73.0054%" y="543.50">pro..</text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_GameEvent as protobuf::message::Message&gt;::new (2 samples, 0.15%)</title><rect x="75.8514%" y="517" width="0.1548%" height="15" fill="rgb(220,86,6)" fg:x="980" fg:w="2"/><text x="76.1014%" y="527.50"></text></g><g><title>csgoproto::netmessages::CSVCMsg_GameEvent::new (1 samples, 0.08%)</title><rect x="75.9288%" y="501" width="0.0774%" height="15" fill="rgb(240,20,13)" fg:x="981" fg:w="1"/><text x="76.1788%" y="511.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_GameEvent as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="75.9288%" y="485" width="0.0774%" height="15" fill="rgb(217,89,34)" fg:x="981" fg:w="1"/><text x="76.1788%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="76.1610%" y="533" width="0.0774%" height="15" fill="rgb(229,13,5)" fg:x="984" fg:w="1"/><text x="76.4110%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="76.1610%" y="517" width="0.0774%" height="15" fill="rgb(244,67,35)" fg:x="984" fg:w="1"/><text x="76.4110%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="76.1610%" y="501" width="0.0774%" height="15" fill="rgb(221,40,2)" fg:x="984" fg:w="1"/><text x="76.4110%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="76.1610%" y="485" width="0.0774%" height="15" fill="rgb(237,157,21)" fg:x="984" fg:w="1"/><text x="76.4110%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="76.1610%" y="469" width="0.0774%" height="15" fill="rgb(222,94,11)" fg:x="984" fg:w="1"/><text x="76.4110%" y="479.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="76.1610%" y="453" width="0.0774%" height="15" fill="rgb(249,113,6)" fg:x="984" fg:w="1"/><text x="76.4110%" y="463.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.08%)</title><rect x="76.1610%" y="437" width="0.0774%" height="15" fill="rgb(238,137,36)" fg:x="984" fg:w="1"/><text x="76.4110%" y="447.50"></text></g><g><title>_mi_memcpy_aligned (1 samples, 0.08%)</title><rect x="76.1610%" y="421" width="0.0774%" height="15" fill="rgb(210,102,26)" fg:x="984" fg:w="1"/><text x="76.4110%" y="431.50"></text></g><g><title>_mi_memcpy (1 samples, 0.08%)</title><rect x="76.1610%" y="405" width="0.0774%" height="15" fill="rgb(218,30,30)" fg:x="984" fg:w="1"/><text x="76.4110%" y="415.50"></text></g><g><title>memcpy (1 samples, 0.08%)</title><rect x="76.1610%" y="389" width="0.0774%" height="15" fill="rgb(214,67,26)" fg:x="984" fg:w="1"/><text x="76.4110%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="76.1610%" y="373" width="0.0774%" height="15" fill="rgb(251,9,53)" fg:x="984" fg:w="1"/><text x="76.4110%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.08%)</title><rect x="76.2384%" y="533" width="0.0774%" height="15" fill="rgb(228,204,25)" fg:x="985" fg:w="1"/><text x="76.4884%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.08%)</title><rect x="76.2384%" y="517" width="0.0774%" height="15" fill="rgb(207,153,8)" fg:x="985" fg:w="1"/><text x="76.4884%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.39%)</title><rect x="76.0062%" y="549" width="0.3870%" height="15" fill="rgb(242,9,16)" fg:x="982" fg:w="5"/><text x="76.2562%" y="559.50"></text></g><g><title>core::ptr::write (1 samples, 0.08%)</title><rect x="76.3158%" y="533" width="0.0774%" height="15" fill="rgb(217,211,10)" fg:x="986" fg:w="1"/><text x="76.5658%" y="543.50"></text></g><g><title>demoparser::parsing::stringtables::&lt;impl demoparser::parsing::parser::Parser&gt;::create_string_table (6 samples, 0.46%)</title><rect x="76.0062%" y="565" width="0.4644%" height="15" fill="rgb(219,228,52)" fg:x="982" fg:w="6"/><text x="76.2562%" y="575.50"></text></g><g><title>demoparser::parsing::stringtables::&lt;impl demoparser::parsing::parser::Parser&gt;::update_string_table (1 samples, 0.08%)</title><rect x="76.3932%" y="549" width="0.0774%" height="15" fill="rgb(231,92,29)" fg:x="987" fg:w="1"/><text x="76.6432%" y="559.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_end_matches (1 samples, 0.08%)</title><rect x="76.3932%" y="533" width="0.0774%" height="15" fill="rgb(232,8,23)" fg:x="987" fg:w="1"/><text x="76.6432%" y="543.50"></text></g><g><title>core::str::pattern::ReverseSearcher::next_reject_back (1 samples, 0.08%)</title><rect x="76.3932%" y="517" width="0.0774%" height="15" fill="rgb(216,211,34)" fg:x="987" fg:w="1"/><text x="76.6432%" y="527.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::ReverseSearcher&gt;::next_back (1 samples, 0.08%)</title><rect x="76.3932%" y="501" width="0.0774%" height="15" fill="rgb(236,151,0)" fg:x="987" fg:w="1"/><text x="76.6432%" y="511.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next_back (1 samples, 0.08%)</title><rect x="76.3932%" y="485" width="0.0774%" height="15" fill="rgb(209,168,3)" fg:x="987" fg:w="1"/><text x="76.6432%" y="495.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (1 samples, 0.08%)</title><rect x="76.3932%" y="469" width="0.0774%" height="15" fill="rgb(208,129,28)" fg:x="987" fg:w="1"/><text x="76.6432%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (4 samples, 0.31%)</title><rect x="76.5480%" y="549" width="0.3096%" height="15" fill="rgb(229,78,22)" fg:x="989" fg:w="4"/><text x="76.7980%" y="559.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.08%)</title><rect x="76.8576%" y="549" width="0.0774%" height="15" fill="rgb(228,187,13)" fg:x="993" fg:w="1"/><text x="77.1076%" y="559.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.08%)</title><rect x="76.8576%" y="533" width="0.0774%" height="15" fill="rgb(240,119,24)" fg:x="993" fg:w="1"/><text x="77.1076%" y="543.50"></text></g><g><title>csgoproto::netmessages::CCLCMsg_Move::num_backup_commands (3 samples, 0.23%)</title><rect x="76.9350%" y="549" width="0.2322%" height="15" fill="rgb(209,194,42)" fg:x="994" fg:w="3"/><text x="77.1850%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (3 samples, 0.23%)</title><rect x="76.9350%" y="533" width="0.2322%" height="15" fill="rgb(247,200,46)" fg:x="994" fg:w="3"/><text x="77.1850%" y="543.50"></text></g><g><title>mi_free (5 samples, 0.39%)</title><rect x="77.1672%" y="549" width="0.3870%" height="15" fill="rgb(218,76,16)" fg:x="997" fg:w="5"/><text x="77.4172%" y="559.50"></text></g><g><title>_mi_segment_page_of (1 samples, 0.08%)</title><rect x="77.4768%" y="533" width="0.0774%" height="15" fill="rgb(225,21,48)" fg:x="1001" fg:w="1"/><text x="77.7268%" y="543.50"></text></g><g><title>mi_slice_first (1 samples, 0.08%)</title><rect x="77.4768%" y="517" width="0.0774%" height="15" fill="rgb(239,223,50)" fg:x="1001" fg:w="1"/><text x="77.7268%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.08%)</title><rect x="77.8638%" y="533" width="0.0774%" height="15" fill="rgb(244,45,21)" fg:x="1006" fg:w="1"/><text x="78.1138%" y="543.50"></text></g><g><title>&lt;protobuf::coded_input_stream::buf_read_iter::BufReadIter as core::ops::drop::Drop&gt;::drop (2 samples, 0.15%)</title><rect x="77.9412%" y="533" width="0.1548%" height="15" fill="rgb(232,33,43)" fg:x="1007" fg:w="2"/><text x="78.1912%" y="543.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::fill_buf (2 samples, 0.15%)</title><rect x="78.0960%" y="485" width="0.1548%" height="15" fill="rgb(209,8,3)" fg:x="1009" fg:w="2"/><text x="78.3460%" y="495.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::fill_buf_slow (2 samples, 0.15%)</title><rect x="78.0960%" y="469" width="0.1548%" height="15" fill="rgb(214,25,53)" fg:x="1009" fg:w="2"/><text x="78.3460%" y="479.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::check_eof (3 samples, 0.23%)</title><rect x="78.0960%" y="533" width="0.2322%" height="15" fill="rgb(254,186,54)" fg:x="1009" fg:w="3"/><text x="78.3460%" y="543.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::eof (3 samples, 0.23%)</title><rect x="78.0960%" y="517" width="0.2322%" height="15" fill="rgb(208,174,49)" fg:x="1009" fg:w="3"/><text x="78.3460%" y="527.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::eof (3 samples, 0.23%)</title><rect x="78.0960%" y="501" width="0.2322%" height="15" fill="rgb(233,191,51)" fg:x="1009" fg:w="3"/><text x="78.3460%" y="511.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::remaining_in_buf_len (1 samples, 0.08%)</title><rect x="78.2508%" y="485" width="0.0774%" height="15" fill="rgb(222,134,10)" fg:x="1011" fg:w="1"/><text x="78.5008%" y="495.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::remaining_in_buf (1 samples, 0.08%)</title><rect x="78.2508%" y="469" width="0.0774%" height="15" fill="rgb(230,226,20)" fg:x="1011" fg:w="1"/><text x="78.5008%" y="479.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::remaining_in_buf (1 samples, 0.08%)</title><rect x="78.2508%" y="453" width="0.0774%" height="15" fill="rgb(251,111,25)" fg:x="1011" fg:w="1"/><text x="78.5008%" y="463.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::from_bytes (1 samples, 0.08%)</title><rect x="78.3282%" y="533" width="0.0774%" height="15" fill="rgb(224,40,46)" fg:x="1012" fg:w="1"/><text x="78.5782%" y="543.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::from_byte_slice (1 samples, 0.08%)</title><rect x="78.3282%" y="517" width="0.0774%" height="15" fill="rgb(236,108,47)" fg:x="1012" fg:w="1"/><text x="78.5782%" y="527.50"></text></g><g><title>&lt;csgoproto::netmessages::CCLCMsg_Move as protobuf::message::Message&gt;::new (1 samples, 0.08%)</title><rect x="78.5604%" y="517" width="0.0774%" height="15" fill="rgb(234,93,0)" fg:x="1015" fg:w="1"/><text x="78.8104%" y="527.50"></text></g><g><title>csgoproto::netmessages::CCLCMsg_Move::new (1 samples, 0.08%)</title><rect x="78.5604%" y="501" width="0.0774%" height="15" fill="rgb(224,213,32)" fg:x="1015" fg:w="1"/><text x="78.8104%" y="511.50"></text></g><g><title>&lt;csgoproto::netmessages::CCLCMsg_Move as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="78.5604%" y="485" width="0.0774%" height="15" fill="rgb(251,11,48)" fg:x="1015" fg:w="1"/><text x="78.8104%" y="495.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (7 samples, 0.54%)</title><rect x="78.9474%" y="501" width="0.5418%" height="15" fill="rgb(236,173,5)" fg:x="1020" fg:w="7"/><text x="79.1974%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (2 samples, 0.15%)</title><rect x="79.8762%" y="373" width="0.1548%" height="15" fill="rgb(230,95,12)" fg:x="1032" fg:w="2"/><text x="80.1262%" y="383.50"></text></g><g><title>__rust_alloc (1 samples, 0.08%)</title><rect x="80.1084%" y="357" width="0.0774%" height="15" fill="rgb(232,209,1)" fg:x="1035" fg:w="1"/><text x="80.3584%" y="367.50"></text></g><g><title>_mi_malloc_generic (2 samples, 0.15%)</title><rect x="80.1858%" y="357" width="0.1548%" height="15" fill="rgb(232,6,1)" fg:x="1036" fg:w="2"/><text x="80.4358%" y="367.50"></text></g><g><title>_mi_page_malloc (1 samples, 0.08%)</title><rect x="80.2632%" y="341" width="0.0774%" height="15" fill="rgb(210,224,50)" fg:x="1037" fg:w="1"/><text x="80.5132%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.70%)</title><rect x="80.0310%" y="373" width="0.6966%" height="15" fill="rgb(228,127,35)" fg:x="1034" fg:w="9"/><text x="80.2810%" y="383.50"></text></g><g><title>mi_malloc (5 samples, 0.39%)</title><rect x="80.3406%" y="357" width="0.3870%" height="15" fill="rgb(245,102,45)" fg:x="1038" fg:w="5"/><text x="80.5906%" y="367.50"></text></g><g><title>mi_heap_malloc (5 samples, 0.39%)</title><rect x="80.3406%" y="341" width="0.3870%" height="15" fill="rgb(214,1,49)" fg:x="1038" fg:w="5"/><text x="80.5906%" y="351.50"></text></g><g><title>mi_heap_malloc_small (5 samples, 0.39%)</title><rect x="80.3406%" y="325" width="0.3870%" height="15" fill="rgb(226,163,40)" fg:x="1038" fg:w="5"/><text x="80.5906%" y="335.50"></text></g><g><title>_mi_page_malloc (5 samples, 0.39%)</title><rect x="80.3406%" y="309" width="0.3870%" height="15" fill="rgb(239,212,28)" fg:x="1038" fg:w="5"/><text x="80.5906%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (12 samples, 0.93%)</title><rect x="79.8762%" y="437" width="0.9288%" height="15" fill="rgb(220,20,13)" fg:x="1032" fg:w="12"/><text x="80.1262%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (12 samples, 0.93%)</title><rect x="79.8762%" y="421" width="0.9288%" height="15" fill="rgb(210,164,35)" fg:x="1032" fg:w="12"/><text x="80.1262%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (12 samples, 0.93%)</title><rect x="79.8762%" y="405" width="0.9288%" height="15" fill="rgb(248,109,41)" fg:x="1032" fg:w="12"/><text x="80.1262%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (12 samples, 0.93%)</title><rect x="79.8762%" y="389" width="0.9288%" height="15" fill="rgb(238,23,50)" fg:x="1032" fg:w="12"/><text x="80.1262%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="80.7276%" y="373" width="0.0774%" height="15" fill="rgb(211,48,49)" fg:x="1043" fg:w="1"/><text x="80.9776%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="80.7276%" y="357" width="0.0774%" height="15" fill="rgb(223,36,21)" fg:x="1043" fg:w="1"/><text x="80.9776%" y="367.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::bytes_until_limit (2 samples, 0.15%)</title><rect x="80.8050%" y="437" width="0.1548%" height="15" fill="rgb(207,123,46)" fg:x="1044" fg:w="2"/><text x="81.0550%" y="447.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (26 samples, 2.01%)</title><rect x="79.8762%" y="469" width="2.0124%" height="15" fill="rgb(240,218,32)" fg:x="1032" fg:w="26"/><text x="80.1262%" y="479.50">p..</text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (26 samples, 2.01%)</title><rect x="79.8762%" y="453" width="2.0124%" height="15" fill="rgb(252,5,43)" fg:x="1032" fg:w="26"/><text x="80.1262%" y="463.50">p..</text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact (12 samples, 0.93%)</title><rect x="80.9598%" y="437" width="0.9288%" height="15" fill="rgb(252,84,19)" fg:x="1046" fg:w="12"/><text x="81.2098%" y="447.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::read_bytes (12 samples, 0.93%)</title><rect x="80.9598%" y="421" width="0.9288%" height="15" fill="rgb(243,152,39)" fg:x="1046" fg:w="12"/><text x="81.2098%" y="431.50"></text></g><g><title>protobuf::misc::maybe_uninit_write_slice (12 samples, 0.93%)</title><rect x="80.9598%" y="405" width="0.9288%" height="15" fill="rgb(234,160,15)" fg:x="1046" fg:w="12"/><text x="81.2098%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (12 samples, 0.93%)</title><rect x="80.9598%" y="389" width="0.9288%" height="15" fill="rgb(237,34,20)" fg:x="1046" fg:w="12"/><text x="81.2098%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.93%)</title><rect x="80.9598%" y="373" width="0.9288%" height="15" fill="rgb(229,97,13)" fg:x="1046" fg:w="12"/><text x="81.2098%" y="383.50"></text></g><g><title>[libc.so.6] (12 samples, 0.93%)</title><rect x="80.9598%" y="357" width="0.9288%" height="15" fill="rgb(234,71,50)" fg:x="1046" fg:w="12"/><text x="81.2098%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="81.8111%" y="341" width="0.0774%" height="15" fill="rgb(253,155,4)" fg:x="1057" fg:w="1"/><text x="82.0611%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="81.8111%" y="325" width="0.0774%" height="15" fill="rgb(222,185,37)" fg:x="1057" fg:w="1"/><text x="82.0611%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="81.8111%" y="309" width="0.0774%" height="15" fill="rgb(251,177,13)" fg:x="1057" fg:w="1"/><text x="82.0611%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="81.8111%" y="293" width="0.0774%" height="15" fill="rgb(250,179,40)" fg:x="1057" fg:w="1"/><text x="82.0611%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="81.8111%" y="277" width="0.0774%" height="15" fill="rgb(242,44,2)" fg:x="1057" fg:w="1"/><text x="82.0611%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="81.8111%" y="261" width="0.0774%" height="15" fill="rgb(216,177,13)" fg:x="1057" fg:w="1"/><text x="82.0611%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="81.8111%" y="245" width="0.0774%" height="15" fill="rgb(216,106,43)" fg:x="1057" fg:w="1"/><text x="82.0611%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="81.8111%" y="229" width="0.0774%" height="15" fill="rgb(216,183,2)" fg:x="1057" fg:w="1"/><text x="82.0611%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="81.8111%" y="213" width="0.0774%" height="15" fill="rgb(249,75,3)" fg:x="1057" fg:w="1"/><text x="82.0611%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="81.8111%" y="197" width="0.0774%" height="15" fill="rgb(219,67,39)" fg:x="1057" fg:w="1"/><text x="82.0611%" y="207.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes (34 samples, 2.63%)</title><rect x="79.4892%" y="501" width="2.6316%" height="15" fill="rgb(253,228,2)" fg:x="1027" fg:w="34"/><text x="79.7392%" y="511.50">pr..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (29 samples, 2.24%)</title><rect x="79.8762%" y="485" width="2.2446%" height="15" fill="rgb(235,138,27)" fg:x="1032" fg:w="29"/><text x="80.1262%" y="495.50">p..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32 (3 samples, 0.23%)</title><rect x="81.8885%" y="469" width="0.2322%" height="15" fill="rgb(236,97,51)" fg:x="1058" fg:w="3"/><text x="82.1385%" y="479.50"></text></g><g><title>protobuf::varint::decode::decode_varint32 (1 samples, 0.08%)</title><rect x="82.0433%" y="453" width="0.0774%" height="15" fill="rgb(240,80,30)" fg:x="1060" fg:w="1"/><text x="82.2933%" y="463.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (1 samples, 0.08%)</title><rect x="82.0433%" y="437" width="0.0774%" height="15" fill="rgb(230,178,19)" fg:x="1060" fg:w="1"/><text x="82.2933%" y="447.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::TryFrom&lt;i64&gt; for i32&gt;::try_from (2 samples, 0.15%)</title><rect x="82.1207%" y="485" width="0.1548%" height="15" fill="rgb(210,190,27)" fg:x="1061" fg:w="2"/><text x="82.3707%" y="495.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int32 (4 samples, 0.31%)</title><rect x="82.1207%" y="501" width="0.3096%" height="15" fill="rgb(222,107,31)" fg:x="1061" fg:w="4"/><text x="82.3707%" y="511.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int64 (2 samples, 0.15%)</title><rect x="82.2755%" y="485" width="0.1548%" height="15" fill="rgb(216,127,34)" fg:x="1063" fg:w="2"/><text x="82.5255%" y="495.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (2 samples, 0.15%)</title><rect x="82.2755%" y="469" width="0.1548%" height="15" fill="rgb(234,116,52)" fg:x="1063" fg:w="2"/><text x="82.5255%" y="479.50"></text></g><g><title>protobuf::varint::decode::decode_varint64 (1 samples, 0.08%)</title><rect x="82.3529%" y="453" width="0.0774%" height="15" fill="rgb(222,124,15)" fg:x="1064" fg:w="1"/><text x="82.6029%" y="463.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (1 samples, 0.08%)</title><rect x="82.3529%" y="437" width="0.0774%" height="15" fill="rgb(231,179,28)" fg:x="1064" fg:w="1"/><text x="82.6029%" y="447.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::eof (4 samples, 0.31%)</title><rect x="82.5851%" y="469" width="0.3096%" height="15" fill="rgb(226,93,45)" fg:x="1067" fg:w="4"/><text x="82.8351%" y="479.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::eof (4 samples, 0.31%)</title><rect x="82.5851%" y="453" width="0.3096%" height="15" fill="rgb(215,8,51)" fg:x="1067" fg:w="4"/><text x="82.8351%" y="463.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::fill_buf (4 samples, 0.31%)</title><rect x="82.5851%" y="437" width="0.3096%" height="15" fill="rgb(223,106,5)" fg:x="1067" fg:w="4"/><text x="82.8351%" y="447.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::fill_buf_slow (4 samples, 0.31%)</title><rect x="82.5851%" y="421" width="0.3096%" height="15" fill="rgb(250,191,5)" fg:x="1067" fg:w="4"/><text x="82.8351%" y="431.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::consume (3 samples, 0.23%)</title><rect x="82.8947%" y="469" width="0.2322%" height="15" fill="rgb(242,132,44)" fg:x="1071" fg:w="3"/><text x="83.1447%" y="479.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::consume (3 samples, 0.23%)</title><rect x="82.8947%" y="453" width="0.2322%" height="15" fill="rgb(251,152,29)" fg:x="1071" fg:w="3"/><text x="83.1447%" y="463.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::remaining_in_buf (2 samples, 0.15%)</title><rect x="83.1269%" y="469" width="0.1548%" height="15" fill="rgb(218,179,5)" fg:x="1074" fg:w="2"/><text x="83.3769%" y="479.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::remaining_in_buf (2 samples, 0.15%)</title><rect x="83.1269%" y="453" width="0.1548%" height="15" fill="rgb(227,67,19)" fg:x="1074" fg:w="2"/><text x="83.3769%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (916 samples, 70.90%)</title><rect x="14.5511%" y="741" width="70.8978%" height="15" fill="rgb(233,119,31)" fg:x="188" fg:w="916"/><text x="14.8011%" y="751.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (916 samples, 70.90%)</title><rect x="14.5511%" y="725" width="70.8978%" height="15" fill="rgb(241,120,22)" fg:x="188" fg:w="916"/><text x="14.8011%" y="735.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (916 samples, 70.90%)</title><rect x="14.5511%" y="709" width="70.8978%" height="15" fill="rgb(224,102,30)" fg:x="188" fg:w="916"/><text x="14.8011%" y="719.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (916 samples, 70.90%)</title><rect x="14.5511%" y="693" width="70.8978%" height="15" fill="rgb(210,164,37)" fg:x="188" fg:w="916"/><text x="14.8011%" y="703.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (916 samples, 70.90%)</title><rect x="14.5511%" y="677" width="70.8978%" height="15" fill="rgb(226,191,16)" fg:x="188" fg:w="916"/><text x="14.8011%" y="687.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (913 samples, 70.67%)</title><rect x="14.7833%" y="661" width="70.6656%" height="15" fill="rgb(214,40,45)" fg:x="191" fg:w="913"/><text x="15.0333%" y="671.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (913 samples, 70.67%)</title><rect x="14.7833%" y="645" width="70.6656%" height="15" fill="rgb(244,29,26)" fg:x="191" fg:w="913"/><text x="15.0333%" y="655.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::traits::iterator::Iterator::fold (913 samples, 70.67%)</title><rect x="14.7833%" y="629" width="70.6656%" height="15" fill="rgb(216,16,5)" fg:x="191" fg:w="913"/><text x="15.0333%" y="639.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (913 samples, 70.67%)</title><rect x="14.7833%" y="613" width="70.6656%" height="15" fill="rgb(249,76,35)" fg:x="191" fg:w="913"/><text x="15.0333%" y="623.50">core::iter::adapters::map::map_fold::{{closure}}</text></g><g><title>demoparser::parsing::parser::Parser::compute_tasks::{{closure}} (903 samples, 69.89%)</title><rect x="15.5573%" y="597" width="69.8916%" height="15" fill="rgb(207,11,44)" fg:x="201" fg:w="903"/><text x="15.8073%" y="607.50">demoparser::parsing::parser::Parser::compute_tasks::{{closure}}</text></g><g><title>demoparser::parsing::parser::Parser::msg_handler (903 samples, 69.89%)</title><rect x="15.5573%" y="581" width="69.8916%" height="15" fill="rgb(228,190,49)" fg:x="201" fg:w="903"/><text x="15.8073%" y="591.50">demoparser::parsing::parser::Parser::msg_handler</text></g><g><title>demoparser::parsing::stringtables::&lt;impl demoparser::parsing::parser::Parser&gt;::update_string_table_msg (116 samples, 8.98%)</title><rect x="76.4706%" y="565" width="8.9783%" height="15" fill="rgb(214,173,12)" fg:x="988" fg:w="116"/><text x="76.7206%" y="575.50">demoparser::p..</text></g><g><title>protobuf::message::Message::parse_from_bytes (102 samples, 7.89%)</title><rect x="77.5542%" y="549" width="7.8947%" height="15" fill="rgb(218,26,35)" fg:x="1002" fg:w="102"/><text x="77.8042%" y="559.50">protobuf::m..</text></g><g><title>protobuf::message::Message::parse_from (91 samples, 7.04%)</title><rect x="78.4056%" y="533" width="7.0433%" height="15" fill="rgb(220,200,19)" fg:x="1013" fg:w="91"/><text x="78.6556%" y="543.50">protobuf:..</text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_EntityMsg as protobuf::message::Message&gt;::merge_from (88 samples, 6.81%)</title><rect x="78.6378%" y="517" width="6.8111%" height="15" fill="rgb(239,95,49)" fg:x="1016" fg:w="88"/><text x="78.8878%" y="527.50">&lt;csgoprot..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (39 samples, 3.02%)</title><rect x="82.4303%" y="501" width="3.0186%" height="15" fill="rgb(235,85,53)" fg:x="1065" fg:w="39"/><text x="82.6803%" y="511.50">pro..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (39 samples, 3.02%)</title><rect x="82.4303%" y="485" width="3.0186%" height="15" fill="rgb(233,133,31)" fg:x="1065" fg:w="39"/><text x="82.6803%" y="495.50">pro..</text></g><g><title>protobuf::varint::decode::decode_varint32 (28 samples, 2.17%)</title><rect x="83.2817%" y="469" width="2.1672%" height="15" fill="rgb(218,25,20)" fg:x="1076" fg:w="28"/><text x="83.5317%" y="479.50">p..</text></g><g><title>protobuf::varint::decode::decode_varint_impl (28 samples, 2.17%)</title><rect x="83.2817%" y="453" width="2.1672%" height="15" fill="rgb(252,210,38)" fg:x="1076" fg:w="28"/><text x="83.5317%" y="463.50">p..</text></g><g><title>&lt;u32 as protobuf::varint::decode::DecodeVarint&gt;::from_u64 (2 samples, 0.15%)</title><rect x="85.2941%" y="437" width="0.1548%" height="15" fill="rgb(242,134,21)" fg:x="1102" fg:w="2"/><text x="85.5441%" y="447.50"></text></g><g><title>demoparser::parsing::parser::Parser::compute_tasks (962 samples, 74.46%)</title><rect x="11.0681%" y="757" width="74.4582%" height="15" fill="rgb(213,28,48)" fg:x="143" fg:w="962"/><text x="11.3181%" y="767.50">demoparser::parsing::parser::Parser::compute_tasks</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::parser::MsgBluePrint&gt;&gt; (1 samples, 0.08%)</title><rect x="85.4489%" y="741" width="0.0774%" height="15" fill="rgb(250,196,2)" fg:x="1104" fg:w="1"/><text x="85.6989%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;demoparser::parsing::parser::MsgBluePrint&gt;&gt; (1 samples, 0.08%)</title><rect x="85.4489%" y="725" width="0.0774%" height="15" fill="rgb(227,5,17)" fg:x="1104" fg:w="1"/><text x="85.6989%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="85.4489%" y="709" width="0.0774%" height="15" fill="rgb(221,226,24)" fg:x="1104" fg:w="1"/><text x="85.6989%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.08%)</title><rect x="85.4489%" y="693" width="0.0774%" height="15" fill="rgb(211,5,48)" fg:x="1104" fg:w="1"/><text x="85.6989%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.08%)</title><rect x="85.4489%" y="677" width="0.0774%" height="15" fill="rgb(219,150,6)" fg:x="1104" fg:w="1"/><text x="85.6989%" y="687.50"></text></g><g><title>_mi_os_free_ex (1 samples, 0.08%)</title><rect x="85.4489%" y="661" width="0.0774%" height="15" fill="rgb(251,46,16)" fg:x="1104" fg:w="1"/><text x="85.6989%" y="671.50"></text></g><g><title>_mi_os_free_ex (1 samples, 0.08%)</title><rect x="85.4489%" y="645" width="0.0774%" height="15" fill="rgb(220,204,40)" fg:x="1104" fg:w="1"/><text x="85.6989%" y="655.50"></text></g><g><title>mi_os_mem_free (1 samples, 0.08%)</title><rect x="85.4489%" y="629" width="0.0774%" height="15" fill="rgb(211,85,2)" fg:x="1104" fg:w="1"/><text x="85.6989%" y="639.50"></text></g><g><title>mi_os_mem_free (1 samples, 0.08%)</title><rect x="85.4489%" y="613" width="0.0774%" height="15" fill="rgb(229,17,7)" fg:x="1104" fg:w="1"/><text x="85.6989%" y="623.50"></text></g><g><title>__GI___munmap (1 samples, 0.08%)</title><rect x="85.4489%" y="597" width="0.0774%" height="15" fill="rgb(239,72,28)" fg:x="1104" fg:w="1"/><text x="85.6989%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="85.4489%" y="581" width="0.0774%" height="15" fill="rgb(230,47,54)" fg:x="1104" fg:w="1"/><text x="85.6989%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="85.4489%" y="565" width="0.0774%" height="15" fill="rgb(214,50,8)" fg:x="1104" fg:w="1"/><text x="85.6989%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="85.4489%" y="549" width="0.0774%" height="15" fill="rgb(216,198,43)" fg:x="1104" fg:w="1"/><text x="85.6989%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="85.4489%" y="533" width="0.0774%" height="15" fill="rgb(234,20,35)" fg:x="1104" fg:w="1"/><text x="85.6989%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="85.4489%" y="517" width="0.0774%" height="15" fill="rgb(254,45,19)" fg:x="1104" fg:w="1"/><text x="85.6989%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="85.4489%" y="501" width="0.0774%" height="15" fill="rgb(219,14,44)" fg:x="1104" fg:w="1"/><text x="85.6989%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="85.4489%" y="485" width="0.0774%" height="15" fill="rgb(217,220,26)" fg:x="1104" fg:w="1"/><text x="85.6989%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="85.4489%" y="469" width="0.0774%" height="15" fill="rgb(213,158,28)" fg:x="1104" fg:w="1"/><text x="85.6989%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="85.4489%" y="453" width="0.0774%" height="15" fill="rgb(252,51,52)" fg:x="1104" fg:w="1"/><text x="85.6989%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="85.4489%" y="437" width="0.0774%" height="15" fill="rgb(246,89,16)" fg:x="1104" fg:w="1"/><text x="85.6989%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key::{{closure}} (4 samples, 0.31%)</title><rect x="86.0681%" y="693" width="0.3096%" height="15" fill="rgb(216,158,49)" fg:x="1112" fg:w="4"/><text x="86.3181%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (4 samples, 0.31%)</title><rect x="86.0681%" y="677" width="0.3096%" height="15" fill="rgb(236,107,19)" fg:x="1112" fg:w="4"/><text x="86.3181%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (16 samples, 1.24%)</title><rect x="85.5263%" y="741" width="1.2384%" height="15" fill="rgb(228,185,30)" fg:x="1105" fg:w="16"/><text x="85.7763%" y="751.50"></text></g><g><title>alloc::slice::merge_sort (16 samples, 1.24%)</title><rect x="85.5263%" y="725" width="1.2384%" height="15" fill="rgb(246,134,8)" fg:x="1105" fg:w="16"/><text x="85.7763%" y="735.50"></text></g><g><title>alloc::slice::merge (14 samples, 1.08%)</title><rect x="85.6811%" y="709" width="1.0836%" height="15" fill="rgb(214,143,50)" fg:x="1107" fg:w="14"/><text x="85.9311%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.39%)</title><rect x="86.3777%" y="693" width="0.3870%" height="15" fill="rgb(228,75,8)" fg:x="1116" fg:w="5"/><text x="86.6277%" y="703.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="86.6873%" y="677" width="0.0774%" height="15" fill="rgb(207,175,4)" fg:x="1120" fg:w="1"/><text x="86.9373%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.08%)</title><rect x="86.7647%" y="501" width="0.0774%" height="15" fill="rgb(205,108,24)" fg:x="1121" fg:w="1"/><text x="87.0147%" y="511.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.08%)</title><rect x="86.7647%" y="485" width="0.0774%" height="15" fill="rgb(244,120,49)" fg:x="1121" fg:w="1"/><text x="87.0147%" y="495.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.08%)</title><rect x="86.7647%" y="469" width="0.0774%" height="15" fill="rgb(223,47,38)" fg:x="1121" fg:w="1"/><text x="87.0147%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (3 samples, 0.23%)</title><rect x="86.8421%" y="501" width="0.2322%" height="15" fill="rgb(229,179,11)" fg:x="1122" fg:w="3"/><text x="87.0921%" y="511.50"></text></g><g><title>alloc::slice::merge_sort (3 samples, 0.23%)</title><rect x="86.8421%" y="485" width="0.2322%" height="15" fill="rgb(231,122,1)" fg:x="1122" fg:w="3"/><text x="87.0921%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key::{{closure}} (2 samples, 0.15%)</title><rect x="86.9195%" y="469" width="0.1548%" height="15" fill="rgb(245,119,9)" fg:x="1123" fg:w="2"/><text x="87.1695%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (2 samples, 0.15%)</title><rect x="86.9195%" y="453" width="0.1548%" height="15" fill="rgb(241,163,25)" fg:x="1123" fg:w="2"/><text x="87.1695%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.46%)</title><rect x="86.7647%" y="677" width="0.4644%" height="15" fill="rgb(217,214,3)" fg:x="1121" fg:w="6"/><text x="87.0147%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (6 samples, 0.46%)</title><rect x="86.7647%" y="661" width="0.4644%" height="15" fill="rgb(240,86,28)" fg:x="1121" fg:w="6"/><text x="87.0147%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.46%)</title><rect x="86.7647%" y="645" width="0.4644%" height="15" fill="rgb(215,47,9)" fg:x="1121" fg:w="6"/><text x="87.0147%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.46%)</title><rect x="86.7647%" y="629" width="0.4644%" height="15" fill="rgb(252,25,45)" fg:x="1121" fg:w="6"/><text x="87.0147%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.46%)</title><rect x="86.7647%" y="613" width="0.4644%" height="15" fill="rgb(251,164,9)" fg:x="1121" fg:w="6"/><text x="87.0147%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (6 samples, 0.46%)</title><rect x="86.7647%" y="597" width="0.4644%" height="15" fill="rgb(233,194,0)" fg:x="1121" fg:w="6"/><text x="87.0147%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.46%)</title><rect x="86.7647%" y="581" width="0.4644%" height="15" fill="rgb(249,111,24)" fg:x="1121" fg:w="6"/><text x="87.0147%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.46%)</title><rect x="86.7647%" y="565" width="0.4644%" height="15" fill="rgb(250,223,3)" fg:x="1121" fg:w="6"/><text x="87.0147%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6 samples, 0.46%)</title><rect x="86.7647%" y="549" width="0.4644%" height="15" fill="rgb(236,178,37)" fg:x="1121" fg:w="6"/><text x="87.0147%" y="559.50"></text></g><g><title>demoparser::parsing::parser::Parser::functional_searcher::{{closure}} (6 samples, 0.46%)</title><rect x="86.7647%" y="533" width="0.4644%" height="15" fill="rgb(241,158,50)" fg:x="1121" fg:w="6"/><text x="87.0147%" y="543.50"></text></g><g><title>demoparser::parsing::parser::Parser::binary_search_val (6 samples, 0.46%)</title><rect x="86.7647%" y="517" width="0.4644%" height="15" fill="rgb(213,121,41)" fg:x="1121" fg:w="6"/><text x="87.0147%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.15%)</title><rect x="87.0743%" y="501" width="0.1548%" height="15" fill="rgb(240,92,3)" fg:x="1125" fg:w="2"/><text x="87.3243%" y="511.50"></text></g><g><title>demoparser::parsing::parser::Parser::binary_search_val::{{closure}} (2 samples, 0.15%)</title><rect x="87.0743%" y="485" width="0.1548%" height="15" fill="rgb(205,123,3)" fg:x="1125" fg:w="2"/><text x="87.3243%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::partial_cmp (2 samples, 0.15%)</title><rect x="87.0743%" y="469" width="0.1548%" height="15" fill="rgb(205,97,47)" fg:x="1125" fg:w="2"/><text x="87.3243%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i32&gt;::cmp (2 samples, 0.15%)</title><rect x="87.0743%" y="453" width="0.1548%" height="15" fill="rgb(247,152,14)" fg:x="1125" fg:w="2"/><text x="87.3243%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.54%)</title><rect x="86.7647%" y="741" width="0.5418%" height="15" fill="rgb(248,195,53)" fg:x="1121" fg:w="7"/><text x="87.0147%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.54%)</title><rect x="86.7647%" y="725" width="0.5418%" height="15" fill="rgb(226,201,16)" fg:x="1121" fg:w="7"/><text x="87.0147%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.54%)</title><rect x="86.7647%" y="709" width="0.5418%" height="15" fill="rgb(205,98,0)" fg:x="1121" fg:w="7"/><text x="87.0147%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (7 samples, 0.54%)</title><rect x="86.7647%" y="693" width="0.5418%" height="15" fill="rgb(214,191,48)" fg:x="1121" fg:w="7"/><text x="87.0147%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="87.2291%" y="677" width="0.0774%" height="15" fill="rgb(237,112,39)" fg:x="1127" fg:w="1"/><text x="87.4791%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="87.2291%" y="661" width="0.0774%" height="15" fill="rgb(247,203,27)" fg:x="1127" fg:w="1"/><text x="87.4791%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="87.2291%" y="645" width="0.0774%" height="15" fill="rgb(235,124,28)" fg:x="1127" fg:w="1"/><text x="87.4791%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.08%)</title><rect x="87.2291%" y="629" width="0.0774%" height="15" fill="rgb(208,207,46)" fg:x="1127" fg:w="1"/><text x="87.4791%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="87.2291%" y="613" width="0.0774%" height="15" fill="rgb(234,176,4)" fg:x="1127" fg:w="1"/><text x="87.4791%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.08%)</title><rect x="87.2291%" y="597" width="0.0774%" height="15" fill="rgb(230,133,28)" fg:x="1127" fg:w="1"/><text x="87.4791%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="87.2291%" y="581" width="0.0774%" height="15" fill="rgb(211,137,40)" fg:x="1127" fg:w="1"/><text x="87.4791%" y="591.50"></text></g><g><title>demoparser::parsing::parser::Parser::functional_searcher::{{closure}} (1 samples, 0.08%)</title><rect x="87.2291%" y="565" width="0.0774%" height="15" fill="rgb(254,35,13)" fg:x="1127" fg:w="1"/><text x="87.4791%" y="575.50"></text></g><g><title>demoparser::parsing::parser::Parser::binary_search_val (1 samples, 0.08%)</title><rect x="87.2291%" y="549" width="0.0774%" height="15" fill="rgb(225,49,51)" fg:x="1127" fg:w="1"/><text x="87.4791%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.08%)</title><rect x="87.2291%" y="533" width="0.0774%" height="15" fill="rgb(251,10,15)" fg:x="1127" fg:w="1"/><text x="87.4791%" y="543.50"></text></g><g><title>alloc::slice::merge_sort (1 samples, 0.08%)</title><rect x="87.2291%" y="517" width="0.0774%" height="15" fill="rgb(228,207,15)" fg:x="1127" fg:w="1"/><text x="87.4791%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key::{{closure}} (1 samples, 0.08%)</title><rect x="87.2291%" y="501" width="0.0774%" height="15" fill="rgb(241,99,19)" fg:x="1127" fg:w="1"/><text x="87.4791%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (1 samples, 0.08%)</title><rect x="87.2291%" y="485" width="0.0774%" height="15" fill="rgb(207,104,49)" fg:x="1127" fg:w="1"/><text x="87.4791%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(f32,i32,i32)&gt;&gt; (1 samples, 0.08%)</title><rect x="87.3065%" y="741" width="0.0774%" height="15" fill="rgb(234,99,18)" fg:x="1128" fg:w="1"/><text x="87.5565%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(f32,i32,i32)&gt;&gt; (1 samples, 0.08%)</title><rect x="87.3065%" y="725" width="0.0774%" height="15" fill="rgb(213,191,49)" fg:x="1128" fg:w="1"/><text x="87.5565%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="87.3065%" y="709" width="0.0774%" height="15" fill="rgb(210,226,19)" fg:x="1128" fg:w="1"/><text x="87.5565%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.08%)</title><rect x="87.3065%" y="693" width="0.0774%" height="15" fill="rgb(229,97,18)" fg:x="1128" fg:w="1"/><text x="87.5565%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.08%)</title><rect x="87.3065%" y="677" width="0.0774%" height="15" fill="rgb(211,167,15)" fg:x="1128" fg:w="1"/><text x="87.5565%" y="687.50"></text></g><g><title>_mi_os_free_ex (1 samples, 0.08%)</title><rect x="87.3065%" y="661" width="0.0774%" height="15" fill="rgb(210,169,34)" fg:x="1128" fg:w="1"/><text x="87.5565%" y="671.50"></text></g><g><title>_mi_os_free_ex (1 samples, 0.08%)</title><rect x="87.3065%" y="645" width="0.0774%" height="15" fill="rgb(241,121,31)" fg:x="1128" fg:w="1"/><text x="87.5565%" y="655.50"></text></g><g><title>mi_os_mem_free (1 samples, 0.08%)</title><rect x="87.3065%" y="629" width="0.0774%" height="15" fill="rgb(232,40,11)" fg:x="1128" fg:w="1"/><text x="87.5565%" y="639.50"></text></g><g><title>mi_os_mem_free (1 samples, 0.08%)</title><rect x="87.3065%" y="613" width="0.0774%" height="15" fill="rgb(205,86,26)" fg:x="1128" fg:w="1"/><text x="87.5565%" y="623.50"></text></g><g><title>__GI___munmap (1 samples, 0.08%)</title><rect x="87.3065%" y="597" width="0.0774%" height="15" fill="rgb(231,126,28)" fg:x="1128" fg:w="1"/><text x="87.5565%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="87.3065%" y="581" width="0.0774%" height="15" fill="rgb(219,221,18)" fg:x="1128" fg:w="1"/><text x="87.5565%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="87.3065%" y="565" width="0.0774%" height="15" fill="rgb(211,40,0)" fg:x="1128" fg:w="1"/><text x="87.5565%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="87.3065%" y="549" width="0.0774%" height="15" fill="rgb(239,85,43)" fg:x="1128" fg:w="1"/><text x="87.5565%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="87.3065%" y="533" width="0.0774%" height="15" fill="rgb(231,55,21)" fg:x="1128" fg:w="1"/><text x="87.5565%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="87.3065%" y="517" width="0.0774%" height="15" fill="rgb(225,184,43)" fg:x="1128" fg:w="1"/><text x="87.5565%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="87.3065%" y="501" width="0.0774%" height="15" fill="rgb(251,158,41)" fg:x="1128" fg:w="1"/><text x="87.5565%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="87.3065%" y="485" width="0.0774%" height="15" fill="rgb(234,159,37)" fg:x="1128" fg:w="1"/><text x="87.5565%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="87.3065%" y="469" width="0.0774%" height="15" fill="rgb(216,204,22)" fg:x="1128" fg:w="1"/><text x="87.5565%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="87.3065%" y="453" width="0.0774%" height="15" fill="rgb(214,17,3)" fg:x="1128" fg:w="1"/><text x="87.5565%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="87.3065%" y="437" width="0.0774%" height="15" fill="rgb(212,111,17)" fg:x="1128" fg:w="1"/><text x="87.5565%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="87.3065%" y="421" width="0.0774%" height="15" fill="rgb(221,157,24)" fg:x="1128" fg:w="1"/><text x="87.5565%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="87.3065%" y="405" width="0.0774%" height="15" fill="rgb(252,16,13)" fg:x="1128" fg:w="1"/><text x="87.5565%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="87.3065%" y="389" width="0.0774%" height="15" fill="rgb(221,62,2)" fg:x="1128" fg:w="1"/><text x="87.5565%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="87.3065%" y="373" width="0.0774%" height="15" fill="rgb(247,87,22)" fg:x="1128" fg:w="1"/><text x="87.5565%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="87.3065%" y="357" width="0.0774%" height="15" fill="rgb(215,73,9)" fg:x="1128" fg:w="1"/><text x="87.5565%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.08%)</title><rect x="87.5387%" y="725" width="0.0774%" height="15" fill="rgb(207,175,33)" fg:x="1131" fg:w="1"/><text x="87.7887%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="89.5511%" y="709" width="0.0774%" height="15" fill="rgb(243,129,54)" fg:x="1157" fg:w="1"/><text x="89.8011%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.77%)</title><rect x="89.6285%" y="693" width="0.7740%" height="15" fill="rgb(227,119,45)" fg:x="1158" fg:w="10"/><text x="89.8785%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.77%)</title><rect x="89.6285%" y="677" width="0.7740%" height="15" fill="rgb(205,109,36)" fg:x="1158" fg:w="10"/><text x="89.8785%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.77%)</title><rect x="89.6285%" y="661" width="0.7740%" height="15" fill="rgb(205,6,39)" fg:x="1158" fg:w="10"/><text x="89.8785%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (10 samples, 0.77%)</title><rect x="89.6285%" y="645" width="0.7740%" height="15" fill="rgb(221,32,16)" fg:x="1158" fg:w="10"/><text x="89.8785%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (10 samples, 0.77%)</title><rect x="89.6285%" y="629" width="0.7740%" height="15" fill="rgb(228,144,50)" fg:x="1158" fg:w="10"/><text x="89.8785%" y="639.50"></text></g><g><title>alloc::alloc::realloc (10 samples, 0.77%)</title><rect x="89.6285%" y="613" width="0.7740%" height="15" fill="rgb(229,201,53)" fg:x="1158" fg:w="10"/><text x="89.8785%" y="623.50"></text></g><g><title>_mi_heap_realloc_zero (10 samples, 0.77%)</title><rect x="89.6285%" y="597" width="0.7740%" height="15" fill="rgb(249,153,27)" fg:x="1158" fg:w="10"/><text x="89.8785%" y="607.50"></text></g><g><title>_mi_memcpy_aligned (10 samples, 0.77%)</title><rect x="89.6285%" y="581" width="0.7740%" height="15" fill="rgb(227,106,25)" fg:x="1158" fg:w="10"/><text x="89.8785%" y="591.50"></text></g><g><title>_mi_memcpy (10 samples, 0.77%)</title><rect x="89.6285%" y="565" width="0.7740%" height="15" fill="rgb(230,65,29)" fg:x="1158" fg:w="10"/><text x="89.8785%" y="575.50"></text></g><g><title>memcpy (10 samples, 0.77%)</title><rect x="89.6285%" y="549" width="0.7740%" height="15" fill="rgb(221,57,46)" fg:x="1158" fg:w="10"/><text x="89.8785%" y="559.50"></text></g><g><title>[libc.so.6] (10 samples, 0.77%)</title><rect x="89.6285%" y="533" width="0.7740%" height="15" fill="rgb(229,161,17)" fg:x="1158" fg:w="10"/><text x="89.8785%" y="543.50"></text></g><g><title>[unknown] (8 samples, 0.62%)</title><rect x="89.7833%" y="517" width="0.6192%" height="15" fill="rgb(222,213,11)" fg:x="1160" fg:w="8"/><text x="90.0333%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="90.1703%" y="501" width="0.2322%" height="15" fill="rgb(235,35,13)" fg:x="1165" fg:w="3"/><text x="90.4203%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="90.1703%" y="485" width="0.2322%" height="15" fill="rgb(233,158,34)" fg:x="1165" fg:w="3"/><text x="90.4203%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="90.1703%" y="469" width="0.2322%" height="15" fill="rgb(215,151,48)" fg:x="1165" fg:w="3"/><text x="90.4203%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="90.1703%" y="453" width="0.2322%" height="15" fill="rgb(229,84,14)" fg:x="1165" fg:w="3"/><text x="90.4203%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="90.2477%" y="437" width="0.1548%" height="15" fill="rgb(229,68,14)" fg:x="1166" fg:w="2"/><text x="90.4977%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="90.2477%" y="421" width="0.1548%" height="15" fill="rgb(243,106,26)" fg:x="1166" fg:w="2"/><text x="90.4977%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="90.2477%" y="405" width="0.1548%" height="15" fill="rgb(206,45,38)" fg:x="1166" fg:w="2"/><text x="90.4977%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="90.2477%" y="389" width="0.1548%" height="15" fill="rgb(226,6,15)" fg:x="1166" fg:w="2"/><text x="90.4977%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="90.2477%" y="373" width="0.1548%" height="15" fill="rgb(232,22,54)" fg:x="1166" fg:w="2"/><text x="90.4977%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="90.2477%" y="357" width="0.1548%" height="15" fill="rgb(229,222,32)" fg:x="1166" fg:w="2"/><text x="90.4977%" y="367.50"></text></g><g><title>demoparser::parsing::parser::Parser::filter_jobs_by_pidx (43 samples, 3.33%)</title><rect x="87.3839%" y="741" width="3.3282%" height="15" fill="rgb(228,62,29)" fg:x="1129" fg:w="43"/><text x="87.6339%" y="751.50">dem..</text></g><g><title>demoparser::parsing::parser::Parser::matcher (40 samples, 3.10%)</title><rect x="87.6161%" y="725" width="3.0960%" height="15" fill="rgb(251,103,34)" fg:x="1132" fg:w="40"/><text x="87.8661%" y="735.50">dem..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (14 samples, 1.08%)</title><rect x="89.6285%" y="709" width="1.0836%" height="15" fill="rgb(233,12,30)" fg:x="1158" fg:w="14"/><text x="89.8785%" y="719.50"></text></g><g><title>core::ptr::write (4 samples, 0.31%)</title><rect x="90.4025%" y="693" width="0.3096%" height="15" fill="rgb(238,52,0)" fg:x="1168" fg:w="4"/><text x="90.6525%" y="703.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="90.4799%" y="677" width="0.2322%" height="15" fill="rgb(223,98,5)" fg:x="1169" fg:w="3"/><text x="90.7299%" y="687.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="90.4799%" y="661" width="0.2322%" height="15" fill="rgb(228,75,37)" fg:x="1169" fg:w="3"/><text x="90.7299%" y="671.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="90.4799%" y="645" width="0.2322%" height="15" fill="rgb(205,115,49)" fg:x="1169" fg:w="3"/><text x="90.7299%" y="655.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="90.4799%" y="629" width="0.2322%" height="15" fill="rgb(250,154,43)" fg:x="1169" fg:w="3"/><text x="90.7299%" y="639.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="90.4799%" y="613" width="0.2322%" height="15" fill="rgb(226,43,29)" fg:x="1169" fg:w="3"/><text x="90.7299%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="90.4799%" y="597" width="0.2322%" height="15" fill="rgb(249,228,39)" fg:x="1169" fg:w="3"/><text x="90.7299%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="90.4799%" y="581" width="0.2322%" height="15" fill="rgb(216,79,43)" fg:x="1169" fg:w="3"/><text x="90.7299%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="90.4799%" y="565" width="0.2322%" height="15" fill="rgb(228,95,12)" fg:x="1169" fg:w="3"/><text x="90.7299%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="90.4799%" y="549" width="0.2322%" height="15" fill="rgb(249,221,15)" fg:x="1169" fg:w="3"/><text x="90.7299%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="90.4799%" y="533" width="0.2322%" height="15" fill="rgb(233,34,13)" fg:x="1169" fg:w="3"/><text x="90.7299%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="90.5573%" y="517" width="0.1548%" height="15" fill="rgb(214,103,39)" fg:x="1170" fg:w="2"/><text x="90.8073%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="90.6347%" y="501" width="0.0774%" height="15" fill="rgb(251,126,39)" fg:x="1171" fg:w="1"/><text x="90.8847%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.23%)</title><rect x="90.7121%" y="597" width="0.2322%" height="15" fill="rgb(214,216,36)" fg:x="1172" fg:w="3"/><text x="90.9621%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.15%)</title><rect x="90.7895%" y="581" width="0.1548%" height="15" fill="rgb(220,221,8)" fg:x="1173" fg:w="2"/><text x="91.0395%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.15%)</title><rect x="90.7895%" y="565" width="0.1548%" height="15" fill="rgb(240,216,3)" fg:x="1173" fg:w="2"/><text x="91.0395%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.15%)</title><rect x="90.7895%" y="549" width="0.1548%" height="15" fill="rgb(232,218,17)" fg:x="1173" fg:w="2"/><text x="91.0395%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.15%)</title><rect x="90.7895%" y="533" width="0.1548%" height="15" fill="rgb(229,163,45)" fg:x="1173" fg:w="2"/><text x="91.0395%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.15%)</title><rect x="90.7895%" y="517" width="0.1548%" height="15" fill="rgb(231,110,42)" fg:x="1173" fg:w="2"/><text x="91.0395%" y="527.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.15%)</title><rect x="90.7895%" y="501" width="0.1548%" height="15" fill="rgb(208,170,48)" fg:x="1173" fg:w="2"/><text x="91.0395%" y="511.50"></text></g><g><title>_mi_heap_realloc_zero (2 samples, 0.15%)</title><rect x="90.7895%" y="485" width="0.1548%" height="15" fill="rgb(239,116,25)" fg:x="1173" fg:w="2"/><text x="91.0395%" y="495.50"></text></g><g><title>_mi_memcpy_aligned (2 samples, 0.15%)</title><rect x="90.7895%" y="469" width="0.1548%" height="15" fill="rgb(219,200,50)" fg:x="1173" fg:w="2"/><text x="91.0395%" y="479.50"></text></g><g><title>_mi_memcpy (2 samples, 0.15%)</title><rect x="90.7895%" y="453" width="0.1548%" height="15" fill="rgb(245,200,0)" fg:x="1173" fg:w="2"/><text x="91.0395%" y="463.50"></text></g><g><title>memcpy (2 samples, 0.15%)</title><rect x="90.7895%" y="437" width="0.1548%" height="15" fill="rgb(245,119,33)" fg:x="1173" fg:w="2"/><text x="91.0395%" y="447.50"></text></g><g><title>[libc.so.6] (2 samples, 0.15%)</title><rect x="90.7895%" y="421" width="0.1548%" height="15" fill="rgb(231,125,12)" fg:x="1173" fg:w="2"/><text x="91.0395%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.08%)</title><rect x="91.7183%" y="469" width="0.0774%" height="15" fill="rgb(216,96,41)" fg:x="1185" fg:w="1"/><text x="91.9683%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.23%)</title><rect x="91.6409%" y="485" width="0.2322%" height="15" fill="rgb(248,43,45)" fg:x="1184" fg:w="3"/><text x="91.8909%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.08%)</title><rect x="91.7957%" y="469" width="0.0774%" height="15" fill="rgb(217,222,7)" fg:x="1186" fg:w="1"/><text x="92.0457%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.70%)</title><rect x="91.4861%" y="533" width="0.6966%" height="15" fill="rgb(233,28,6)" fg:x="1182" fg:w="9"/><text x="91.7361%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.70%)</title><rect x="91.4861%" y="517" width="0.6966%" height="15" fill="rgb(231,218,15)" fg:x="1182" fg:w="9"/><text x="91.7361%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.70%)</title><rect x="91.4861%" y="501" width="0.6966%" height="15" fill="rgb(226,171,48)" fg:x="1182" fg:w="9"/><text x="91.7361%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.31%)</title><rect x="91.8731%" y="485" width="0.3096%" height="15" fill="rgb(235,201,9)" fg:x="1187" fg:w="4"/><text x="92.1231%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.15%)</title><rect x="92.0279%" y="469" width="0.1548%" height="15" fill="rgb(217,80,15)" fg:x="1189" fg:w="2"/><text x="92.2779%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.08%)</title><rect x="92.1827%" y="533" width="0.0774%" height="15" fill="rgb(219,152,8)" fg:x="1191" fg:w="1"/><text x="92.4327%" y="543.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.08%)</title><rect x="92.1827%" y="517" width="0.0774%" height="15" fill="rgb(243,107,38)" fg:x="1191" fg:w="1"/><text x="92.4327%" y="527.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.08%)</title><rect x="92.1827%" y="501" width="0.0774%" height="15" fill="rgb(231,17,5)" fg:x="1191" fg:w="1"/><text x="92.4327%" y="511.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.08%)</title><rect x="92.1827%" y="485" width="0.0774%" height="15" fill="rgb(209,25,54)" fg:x="1191" fg:w="1"/><text x="92.4327%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (9 samples, 0.70%)</title><rect x="92.4149%" y="501" width="0.6966%" height="15" fill="rgb(219,0,2)" fg:x="1194" fg:w="9"/><text x="92.6649%" y="511.50"></text></g><g><title>core::hash::Hasher::write_isize (9 samples, 0.70%)</title><rect x="92.4149%" y="485" width="0.6966%" height="15" fill="rgb(246,9,5)" fg:x="1194" fg:w="9"/><text x="92.6649%" y="495.50"></text></g><g><title>core::hash::Hasher::write_usize (9 samples, 0.70%)</title><rect x="92.4149%" y="469" width="0.6966%" height="15" fill="rgb(226,159,4)" fg:x="1194" fg:w="9"/><text x="92.6649%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.70%)</title><rect x="92.4149%" y="453" width="0.6966%" height="15" fill="rgb(219,175,34)" fg:x="1194" fg:w="9"/><text x="92.6649%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (9 samples, 0.70%)</title><rect x="92.4149%" y="437" width="0.6966%" height="15" fill="rgb(236,10,46)" fg:x="1194" fg:w="9"/><text x="92.6649%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.70%)</title><rect x="92.4149%" y="421" width="0.6966%" height="15" fill="rgb(240,211,16)" fg:x="1194" fg:w="9"/><text x="92.6649%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.15%)</title><rect x="92.9567%" y="405" width="0.1548%" height="15" fill="rgb(205,3,43)" fg:x="1201" fg:w="2"/><text x="93.2067%" y="415.50"></text></g><g><title>hashbrown::map::make_insert_hash (28 samples, 2.17%)</title><rect x="91.2539%" y="565" width="2.1672%" height="15" fill="rgb(245,7,22)" fg:x="1179" fg:w="28"/><text x="91.5039%" y="575.50">h..</text></g><g><title>core::hash::BuildHasher::hash_one (28 samples, 2.17%)</title><rect x="91.2539%" y="549" width="2.1672%" height="15" fill="rgb(239,132,32)" fg:x="1179" fg:w="28"/><text x="91.5039%" y="559.50">c..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (15 samples, 1.16%)</title><rect x="92.2601%" y="533" width="1.1610%" height="15" fill="rgb(228,202,34)" fg:x="1192" fg:w="15"/><text x="92.5101%" y="543.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (15 samples, 1.16%)</title><rect x="92.2601%" y="517" width="1.1610%" height="15" fill="rgb(254,200,22)" fg:x="1192" fg:w="15"/><text x="92.5101%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (4 samples, 0.31%)</title><rect x="93.1115%" y="501" width="0.3096%" height="15" fill="rgb(219,10,39)" fg:x="1203" fg:w="4"/><text x="93.3615%" y="511.50"></text></g><g><title>core::hash::Hasher::write_u64 (4 samples, 0.31%)</title><rect x="93.1115%" y="485" width="0.3096%" height="15" fill="rgb(226,210,39)" fg:x="1203" fg:w="4"/><text x="93.3615%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.23%)</title><rect x="93.1889%" y="469" width="0.2322%" height="15" fill="rgb(208,219,16)" fg:x="1204" fg:w="3"/><text x="93.4389%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.23%)</title><rect x="93.1889%" y="453" width="0.2322%" height="15" fill="rgb(216,158,51)" fg:x="1204" fg:w="3"/><text x="93.4389%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.23%)</title><rect x="93.1889%" y="437" width="0.2322%" height="15" fill="rgb(233,14,44)" fg:x="1204" fg:w="3"/><text x="93.4389%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.08%)</title><rect x="93.3437%" y="421" width="0.0774%" height="15" fill="rgb(237,97,39)" fg:x="1206" fg:w="1"/><text x="93.5937%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (4 samples, 0.31%)</title><rect x="93.4985%" y="533" width="0.3096%" height="15" fill="rgb(218,198,43)" fg:x="1208" fg:w="4"/><text x="93.7485%" y="543.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (4 samples, 0.31%)</title><rect x="93.4985%" y="517" width="0.3096%" height="15" fill="rgb(231,104,20)" fg:x="1208" fg:w="4"/><text x="93.7485%" y="527.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.31%)</title><rect x="93.4985%" y="501" width="0.3096%" height="15" fill="rgb(254,36,13)" fg:x="1208" fg:w="4"/><text x="93.7485%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (44 samples, 3.41%)</title><rect x="90.7121%" y="629" width="3.4056%" height="15" fill="rgb(248,14,50)" fg:x="1172" fg:w="44"/><text x="90.9621%" y="639.50">cor..</text></g><g><title>itertools::group_map::into_group_map::{{closure}} (44 samples, 3.41%)</title><rect x="90.7121%" y="613" width="3.4056%" height="15" fill="rgb(217,107,29)" fg:x="1172" fg:w="44"/><text x="90.9621%" y="623.50">ite..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (41 samples, 3.17%)</title><rect x="90.9443%" y="597" width="3.1734%" height="15" fill="rgb(251,169,33)" fg:x="1175" fg:w="41"/><text x="91.1943%" y="607.50">std..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (41 samples, 3.17%)</title><rect x="90.9443%" y="581" width="3.1734%" height="15" fill="rgb(217,108,32)" fg:x="1175" fg:w="41"/><text x="91.1943%" y="591.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.70%)</title><rect x="93.4211%" y="565" width="0.6966%" height="15" fill="rgb(219,66,42)" fg:x="1207" fg:w="9"/><text x="93.6711%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (9 samples, 0.70%)</title><rect x="93.4211%" y="549" width="0.6966%" height="15" fill="rgb(206,180,7)" fg:x="1207" fg:w="9"/><text x="93.6711%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.31%)</title><rect x="93.8080%" y="533" width="0.3096%" height="15" fill="rgb(208,226,31)" fg:x="1212" fg:w="4"/><text x="94.0580%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.31%)</title><rect x="93.8080%" y="517" width="0.3096%" height="15" fill="rgb(218,26,49)" fg:x="1212" fg:w="4"/><text x="94.0580%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Windows&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 1.24%)</title><rect x="94.8142%" y="581" width="1.2384%" height="15" fill="rgb(233,197,48)" fg:x="1225" fg:w="16"/><text x="95.0642%" y="591.50"></text></g><g><title>demoparser::parsing::parser::Parser::functional_searcher (142 samples, 10.99%)</title><rect x="85.5263%" y="757" width="10.9907%" height="15" fill="rgb(252,181,51)" fg:x="1105" fg:w="142"/><text x="85.7763%" y="767.50">demoparser::pars..</text></g><g><title>itertools::Itertools::into_group_map_by (75 samples, 5.80%)</title><rect x="90.7121%" y="741" width="5.8050%" height="15" fill="rgb(253,90,19)" fg:x="1172" fg:w="75"/><text x="90.9621%" y="751.50">itertoo..</text></g><g><title>itertools::group_map::into_group_map_by (75 samples, 5.80%)</title><rect x="90.7121%" y="725" width="5.8050%" height="15" fill="rgb(215,171,30)" fg:x="1172" fg:w="75"/><text x="90.9621%" y="735.50">itertoo..</text></g><g><title>itertools::group_map::into_group_map (75 samples, 5.80%)</title><rect x="90.7121%" y="709" width="5.8050%" height="15" fill="rgb(214,222,9)" fg:x="1172" fg:w="75"/><text x="90.9621%" y="719.50">itertoo..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (75 samples, 5.80%)</title><rect x="90.7121%" y="693" width="5.8050%" height="15" fill="rgb(223,3,22)" fg:x="1172" fg:w="75"/><text x="90.9621%" y="703.50">core::i..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (75 samples, 5.80%)</title><rect x="90.7121%" y="677" width="5.8050%" height="15" fill="rgb(225,196,46)" fg:x="1172" fg:w="75"/><text x="90.9621%" y="687.50">&lt;core::..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (75 samples, 5.80%)</title><rect x="90.7121%" y="661" width="5.8050%" height="15" fill="rgb(209,110,37)" fg:x="1172" fg:w="75"/><text x="90.9621%" y="671.50">core::i..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (75 samples, 5.80%)</title><rect x="90.7121%" y="645" width="5.8050%" height="15" fill="rgb(249,89,12)" fg:x="1172" fg:w="75"/><text x="90.9621%" y="655.50">core::i..</text></g><g><title>itertools::group_map::into_group_map_by::{{closure}} (31 samples, 2.40%)</title><rect x="94.1176%" y="629" width="2.3994%" height="15" fill="rgb(226,27,33)" fg:x="1216" fg:w="31"/><text x="94.3676%" y="639.50">it..</text></g><g><title>demoparser::parsing::parser::Parser::functional_searcher::{{closure}} (31 samples, 2.40%)</title><rect x="94.1176%" y="613" width="2.3994%" height="15" fill="rgb(213,82,22)" fg:x="1216" fg:w="31"/><text x="94.3676%" y="623.50">de..</text></g><g><title>demoparser::parsing::players::Players::entid_to_sid (30 samples, 2.32%)</title><rect x="94.1950%" y="597" width="2.3220%" height="15" fill="rgb(248,140,0)" fg:x="1217" fg:w="30"/><text x="94.4450%" y="607.50">d..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.46%)</title><rect x="96.0526%" y="581" width="0.4644%" height="15" fill="rgb(228,106,3)" fg:x="1241" fg:w="6"/><text x="96.3026%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.46%)</title><rect x="96.0526%" y="565" width="0.4644%" height="15" fill="rgb(209,23,37)" fg:x="1241" fg:w="6"/><text x="96.3026%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.46%)</title><rect x="96.0526%" y="549" width="0.4644%" height="15" fill="rgb(241,93,50)" fg:x="1241" fg:w="6"/><text x="96.3026%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.46%)</title><rect x="96.0526%" y="533" width="0.4644%" height="15" fill="rgb(253,46,43)" fg:x="1241" fg:w="6"/><text x="96.3026%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.46%)</title><rect x="96.0526%" y="517" width="0.4644%" height="15" fill="rgb(226,206,43)" fg:x="1241" fg:w="6"/><text x="96.3026%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.46%)</title><rect x="96.0526%" y="501" width="0.4644%" height="15" fill="rgb(217,54,7)" fg:x="1241" fg:w="6"/><text x="96.3026%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.15%)</title><rect x="96.3622%" y="485" width="0.1548%" height="15" fill="rgb(223,5,52)" fg:x="1245" fg:w="2"/><text x="96.6122%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.15%)</title><rect x="96.3622%" y="469" width="0.1548%" height="15" fill="rgb(206,52,46)" fg:x="1245" fg:w="2"/><text x="96.6122%" y="479.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="96.5170%" y="741" width="0.0774%" height="15" fill="rgb(253,136,11)" fg:x="1247" fg:w="1"/><text x="96.7670%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.08%)</title><rect x="96.5170%" y="725" width="0.0774%" height="15" fill="rgb(208,106,33)" fg:x="1247" fg:w="1"/><text x="96.7670%" y="735.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.08%)</title><rect x="96.5170%" y="709" width="0.0774%" height="15" fill="rgb(206,54,4)" fg:x="1247" fg:w="1"/><text x="96.7670%" y="719.50"></text></g><g><title>demoparser::parsing::parser::Parser::get_byte_readers (1 samples, 0.08%)</title><rect x="96.5944%" y="741" width="0.0774%" height="15" fill="rgb(213,3,15)" fg:x="1248" fg:w="1"/><text x="96.8444%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.08%)</title><rect x="96.5944%" y="725" width="0.0774%" height="15" fill="rgb(252,211,39)" fg:x="1248" fg:w="1"/><text x="96.8444%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="96.5944%" y="709" width="0.0774%" height="15" fill="rgb(223,6,36)" fg:x="1248" fg:w="1"/><text x="96.8444%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="96.5944%" y="693" width="0.0774%" height="15" fill="rgb(252,169,45)" fg:x="1248" fg:w="1"/><text x="96.8444%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="96.5944%" y="677" width="0.0774%" height="15" fill="rgb(212,48,26)" fg:x="1248" fg:w="1"/><text x="96.8444%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="96.5944%" y="661" width="0.0774%" height="15" fill="rgb(251,102,48)" fg:x="1248" fg:w="1"/><text x="96.8444%" y="671.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="96.5944%" y="645" width="0.0774%" height="15" fill="rgb(243,208,16)" fg:x="1248" fg:w="1"/><text x="96.8444%" y="655.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="96.5944%" y="629" width="0.0774%" height="15" fill="rgb(219,96,24)" fg:x="1248" fg:w="1"/><text x="96.8444%" y="639.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.08%)</title><rect x="96.5944%" y="613" width="0.0774%" height="15" fill="rgb(219,33,29)" fg:x="1248" fg:w="1"/><text x="96.8444%" y="623.50"></text></g><g><title>_mi_memcpy_aligned (1 samples, 0.08%)</title><rect x="96.5944%" y="597" width="0.0774%" height="15" fill="rgb(223,176,5)" fg:x="1248" fg:w="1"/><text x="96.8444%" y="607.50"></text></g><g><title>_mi_memcpy (1 samples, 0.08%)</title><rect x="96.5944%" y="581" width="0.0774%" height="15" fill="rgb(228,140,14)" fg:x="1248" fg:w="1"/><text x="96.8444%" y="591.50"></text></g><g><title>memcpy (1 samples, 0.08%)</title><rect x="96.5944%" y="565" width="0.0774%" height="15" fill="rgb(217,179,31)" fg:x="1248" fg:w="1"/><text x="96.8444%" y="575.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="96.5944%" y="549" width="0.0774%" height="15" fill="rgb(230,9,30)" fg:x="1248" fg:w="1"/><text x="96.8444%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (9 samples, 0.70%)</title><rect x="96.9040%" y="693" width="0.6966%" height="15" fill="rgb(230,136,20)" fg:x="1252" fg:w="9"/><text x="97.1540%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.70%)</title><rect x="96.9040%" y="677" width="0.6966%" height="15" fill="rgb(215,210,22)" fg:x="1252" fg:w="9"/><text x="97.1540%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.70%)</title><rect x="96.9040%" y="661" width="0.6966%" height="15" fill="rgb(218,43,5)" fg:x="1252" fg:w="9"/><text x="97.1540%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 0.70%)</title><rect x="96.9040%" y="645" width="0.6966%" height="15" fill="rgb(216,11,5)" fg:x="1252" fg:w="9"/><text x="97.1540%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 0.70%)</title><rect x="96.9040%" y="629" width="0.6966%" height="15" fill="rgb(209,82,29)" fg:x="1252" fg:w="9"/><text x="97.1540%" y="639.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.70%)</title><rect x="96.9040%" y="613" width="0.6966%" height="15" fill="rgb(244,115,12)" fg:x="1252" fg:w="9"/><text x="97.1540%" y="623.50"></text></g><g><title>_mi_heap_realloc_zero (9 samples, 0.70%)</title><rect x="96.9040%" y="597" width="0.6966%" height="15" fill="rgb(222,82,18)" fg:x="1252" fg:w="9"/><text x="97.1540%" y="607.50"></text></g><g><title>_mi_memcpy_aligned (9 samples, 0.70%)</title><rect x="96.9040%" y="581" width="0.6966%" height="15" fill="rgb(249,227,8)" fg:x="1252" fg:w="9"/><text x="97.1540%" y="591.50"></text></g><g><title>_mi_memcpy (9 samples, 0.70%)</title><rect x="96.9040%" y="565" width="0.6966%" height="15" fill="rgb(253,141,45)" fg:x="1252" fg:w="9"/><text x="97.1540%" y="575.50"></text></g><g><title>memcpy (9 samples, 0.70%)</title><rect x="96.9040%" y="549" width="0.6966%" height="15" fill="rgb(234,184,4)" fg:x="1252" fg:w="9"/><text x="97.1540%" y="559.50"></text></g><g><title>[libc.so.6] (9 samples, 0.70%)</title><rect x="96.9040%" y="533" width="0.6966%" height="15" fill="rgb(218,194,23)" fg:x="1252" fg:w="9"/><text x="97.1540%" y="543.50"></text></g><g><title>[unknown] (7 samples, 0.54%)</title><rect x="97.0588%" y="517" width="0.5418%" height="15" fill="rgb(235,66,41)" fg:x="1254" fg:w="7"/><text x="97.3088%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="97.2136%" y="501" width="0.3870%" height="15" fill="rgb(245,217,1)" fg:x="1256" fg:w="5"/><text x="97.4636%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="97.2136%" y="485" width="0.3870%" height="15" fill="rgb(229,91,1)" fg:x="1256" fg:w="5"/><text x="97.4636%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="97.2136%" y="469" width="0.3870%" height="15" fill="rgb(207,101,30)" fg:x="1256" fg:w="5"/><text x="97.4636%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="97.2136%" y="453" width="0.3870%" height="15" fill="rgb(223,82,49)" fg:x="1256" fg:w="5"/><text x="97.4636%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="97.2136%" y="437" width="0.3870%" height="15" fill="rgb(218,167,17)" fg:x="1256" fg:w="5"/><text x="97.4636%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="97.2136%" y="421" width="0.3870%" height="15" fill="rgb(208,103,14)" fg:x="1256" fg:w="5"/><text x="97.4636%" y="431.50"></text></g><g><title>[unknown] (4 samples, 0.31%)</title><rect x="97.2910%" y="405" width="0.3096%" height="15" fill="rgb(238,20,8)" fg:x="1257" fg:w="4"/><text x="97.5410%" y="415.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="97.3684%" y="389" width="0.2322%" height="15" fill="rgb(218,80,54)" fg:x="1258" fg:w="3"/><text x="97.6184%" y="399.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="97.3684%" y="373" width="0.2322%" height="15" fill="rgb(240,144,17)" fg:x="1258" fg:w="3"/><text x="97.6184%" y="383.50"></text></g><g><title>[unknown] (3 samples, 0.23%)</title><rect x="97.3684%" y="357" width="0.2322%" height="15" fill="rgb(245,27,50)" fg:x="1258" fg:w="3"/><text x="97.6184%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.93%)</title><rect x="96.9040%" y="709" width="0.9288%" height="15" fill="rgb(251,51,7)" fg:x="1252" fg:w="12"/><text x="97.1540%" y="719.50"></text></g><g><title>core::ptr::write (3 samples, 0.23%)</title><rect x="97.6006%" y="693" width="0.2322%" height="15" fill="rgb(245,217,29)" fg:x="1261" fg:w="3"/><text x="97.8506%" y="703.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="97.6780%" y="677" width="0.1548%" height="15" fill="rgb(221,176,29)" fg:x="1262" fg:w="2"/><text x="97.9280%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="97.6780%" y="661" width="0.1548%" height="15" fill="rgb(212,180,24)" fg:x="1262" fg:w="2"/><text x="97.9280%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="97.6780%" y="645" width="0.1548%" height="15" fill="rgb(254,24,2)" fg:x="1262" fg:w="2"/><text x="97.9280%" y="655.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="97.6780%" y="629" width="0.1548%" height="15" fill="rgb(230,100,2)" fg:x="1262" fg:w="2"/><text x="97.9280%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="97.6780%" y="613" width="0.1548%" height="15" fill="rgb(219,142,25)" fg:x="1262" fg:w="2"/><text x="97.9280%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="97.6780%" y="597" width="0.1548%" height="15" fill="rgb(240,73,43)" fg:x="1262" fg:w="2"/><text x="97.9280%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="97.6780%" y="581" width="0.1548%" height="15" fill="rgb(214,114,15)" fg:x="1262" fg:w="2"/><text x="97.9280%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="97.6780%" y="565" width="0.1548%" height="15" fill="rgb(207,130,4)" fg:x="1262" fg:w="2"/><text x="97.9280%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="97.6780%" y="549" width="0.1548%" height="15" fill="rgb(221,25,40)" fg:x="1262" fg:w="2"/><text x="97.9280%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="97.6780%" y="533" width="0.1548%" height="15" fill="rgb(241,184,7)" fg:x="1262" fg:w="2"/><text x="97.9280%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="97.6780%" y="517" width="0.1548%" height="15" fill="rgb(235,159,4)" fg:x="1262" fg:w="2"/><text x="97.9280%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="97.7554%" y="501" width="0.0774%" height="15" fill="rgb(214,87,48)" fg:x="1263" fg:w="1"/><text x="98.0054%" y="511.50"></text></g><g><title>demoparser::parsing::read_bytes::ByteReader::read_i32 (1 samples, 0.08%)</title><rect x="97.8328%" y="709" width="0.0774%" height="15" fill="rgb(246,198,24)" fg:x="1264" fg:w="1"/><text x="98.0828%" y="719.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_cmd (30 samples, 2.32%)</title><rect x="96.6718%" y="741" width="2.3220%" height="15" fill="rgb(209,66,40)" fg:x="1249" fg:w="30"/><text x="96.9218%" y="751.50">d..</text></g><g><title>demoparser::parsing::parser::Parser::parse_packet (30 samples, 2.32%)</title><rect x="96.6718%" y="725" width="2.3220%" height="15" fill="rgb(233,147,39)" fg:x="1249" fg:w="30"/><text x="96.9218%" y="735.50">d..</text></g><g><title>demoparser::parsing::read_bytes::ByteReader::read_varint (14 samples, 1.08%)</title><rect x="97.9102%" y="709" width="1.0836%" height="15" fill="rgb(231,145,52)" fg:x="1265" fg:w="14"/><text x="98.1602%" y="719.50"></text></g><g><title>demoparser::parsing::parser::Parser::compute_jobs (1,178 samples, 91.18%)</title><rect x="8.1269%" y="773" width="91.1765%" height="15" fill="rgb(206,20,26)" fg:x="105" fg:w="1178"/><text x="8.3769%" y="783.50">demoparser::parsing::parser::Parser::compute_jobs</text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (36 samples, 2.79%)</title><rect x="96.5170%" y="757" width="2.7864%" height="15" fill="rgb(238,220,4)" fg:x="1247" fg:w="36"/><text x="96.7670%" y="767.50">de..</text></g><g><title>demoparser::parsing::read_bytes::ByteReader::read_frame (4 samples, 0.31%)</title><rect x="98.9938%" y="741" width="0.3096%" height="15" fill="rgb(252,195,42)" fg:x="1279" fg:w="4"/><text x="99.2438%" y="751.50"></text></g><g><title>demoparser::parsing::read_bytes::ByteReader::read_byte (4 samples, 0.31%)</title><rect x="98.9938%" y="725" width="0.3096%" height="15" fill="rgb(209,10,6)" fg:x="1279" fg:w="4"/><text x="99.2438%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,183 samples, 91.56%)</title><rect x="7.8947%" y="933" width="91.5635%" height="15" fill="rgb(229,3,52)" fg:x="102" fg:w="1183"/><text x="8.1447%" y="943.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,183 samples, 91.56%)</title><rect x="7.8947%" y="917" width="91.5635%" height="15" fill="rgb(253,49,37)" fg:x="102" fg:w="1183"/><text x="8.1447%" y="927.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,183 samples, 91.56%)</title><rect x="7.8947%" y="901" width="91.5635%" height="15" fill="rgb(240,103,49)" fg:x="102" fg:w="1183"/><text x="8.1447%" y="911.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,183 samples, 91.56%)</title><rect x="7.8947%" y="885" width="91.5635%" height="15" fill="rgb(250,182,30)" fg:x="102" fg:w="1183"/><text x="8.1447%" y="895.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,183 samples, 91.56%)</title><rect x="7.8947%" y="869" width="91.5635%" height="15" fill="rgb(248,8,30)" fg:x="102" fg:w="1183"/><text x="8.1447%" y="879.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next</text></g><g><title>core::option::Option&lt;T&gt;::map (1,183 samples, 91.56%)</title><rect x="7.8947%" y="853" width="91.5635%" height="15" fill="rgb(237,120,30)" fg:x="102" fg:w="1183"/><text x="8.1447%" y="863.50">core::option::Option&lt;T&gt;::map</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1,183 samples, 91.56%)</title><rect x="7.8947%" y="837" width="91.5635%" height="15" fill="rgb(221,146,34)" fg:x="102" fg:w="1183"/><text x="8.1447%" y="847.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once</text></g><g><title>demoparser::main::{{closure}} (1,183 samples, 91.56%)</title><rect x="7.8947%" y="821" width="91.5635%" height="15" fill="rgb(242,55,13)" fg:x="102" fg:w="1183"/><text x="8.1447%" y="831.50">demoparser::main::{{closure}}</text></g><g><title>demoparser::parse_demo (1,183 samples, 91.56%)</title><rect x="7.8947%" y="805" width="91.5635%" height="15" fill="rgb(242,112,31)" fg:x="102" fg:w="1183"/><text x="8.1447%" y="815.50">demoparser::parse_demo</text></g><g><title>demoparser::parsing::parser::Parser::start_parsing (1,180 samples, 91.33%)</title><rect x="8.1269%" y="789" width="91.3313%" height="15" fill="rgb(249,192,27)" fg:x="105" fg:w="1180"/><text x="8.3769%" y="799.50">demoparser::parsing::parser::Parser::start_parsing</text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (2 samples, 0.15%)</title><rect x="99.3034%" y="773" width="0.1548%" height="15" fill="rgb(208,204,44)" fg:x="1283" fg:w="2"/><text x="99.5534%" y="783.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_cmd (2 samples, 0.15%)</title><rect x="99.3034%" y="757" width="0.1548%" height="15" fill="rgb(208,93,54)" fg:x="1283" fg:w="2"/><text x="99.5534%" y="767.50"></text></g><g><title>demoparser::parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_datatable (2 samples, 0.15%)</title><rect x="99.3034%" y="741" width="0.1548%" height="15" fill="rgb(242,1,31)" fg:x="1283" fg:w="2"/><text x="99.5534%" y="751.50"></text></g><g><title>demoparser::parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::flatten_dt (2 samples, 0.15%)</title><rect x="99.3034%" y="725" width="0.1548%" height="15" fill="rgb(241,83,25)" fg:x="1283" fg:w="2"/><text x="99.5534%" y="735.50"></text></g><g><title>demoparser::parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (2 samples, 0.15%)</title><rect x="99.3034%" y="709" width="0.1548%" height="15" fill="rgb(205,169,50)" fg:x="1283" fg:w="2"/><text x="99.5534%" y="719.50"></text></g><g><title>demoparser::parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (2 samples, 0.15%)</title><rect x="99.3034%" y="693" width="0.1548%" height="15" fill="rgb(239,186,37)" fg:x="1283" fg:w="2"/><text x="99.5534%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.15%)</title><rect x="99.3034%" y="677" width="0.1548%" height="15" fill="rgb(205,221,10)" fg:x="1283" fg:w="2"/><text x="99.5534%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.15%)</title><rect x="99.3034%" y="661" width="0.1548%" height="15" fill="rgb(218,196,15)" fg:x="1283" fg:w="2"/><text x="99.5534%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.15%)</title><rect x="99.3034%" y="645" width="0.1548%" height="15" fill="rgb(218,196,35)" fg:x="1283" fg:w="2"/><text x="99.5534%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.15%)</title><rect x="99.3034%" y="629" width="0.1548%" height="15" fill="rgb(233,63,24)" fg:x="1283" fg:w="2"/><text x="99.5534%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.15%)</title><rect x="99.3034%" y="613" width="0.1548%" height="15" fill="rgb(225,8,4)" fg:x="1283" fg:w="2"/><text x="99.5534%" y="623.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.15%)</title><rect x="99.3034%" y="597" width="0.1548%" height="15" fill="rgb(234,105,35)" fg:x="1283" fg:w="2"/><text x="99.5534%" y="607.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.15%)</title><rect x="99.3034%" y="581" width="0.1548%" height="15" fill="rgb(236,21,32)" fg:x="1283" fg:w="2"/><text x="99.5534%" y="591.50"></text></g><g><title>_mi_heap_realloc_zero (2 samples, 0.15%)</title><rect x="99.3034%" y="565" width="0.1548%" height="15" fill="rgb(228,109,6)" fg:x="1283" fg:w="2"/><text x="99.5534%" y="575.50"></text></g><g><title>_mi_memcpy_aligned (2 samples, 0.15%)</title><rect x="99.3034%" y="549" width="0.1548%" height="15" fill="rgb(229,215,31)" fg:x="1283" fg:w="2"/><text x="99.5534%" y="559.50"></text></g><g><title>_mi_memcpy (2 samples, 0.15%)</title><rect x="99.3034%" y="533" width="0.1548%" height="15" fill="rgb(221,52,54)" fg:x="1283" fg:w="2"/><text x="99.5534%" y="543.50"></text></g><g><title>memcpy (2 samples, 0.15%)</title><rect x="99.3034%" y="517" width="0.1548%" height="15" fill="rgb(252,129,43)" fg:x="1283" fg:w="2"/><text x="99.5534%" y="527.50"></text></g><g><title>[libc.so.6] (2 samples, 0.15%)</title><rect x="99.3034%" y="501" width="0.1548%" height="15" fill="rgb(248,183,27)" fg:x="1283" fg:w="2"/><text x="99.5534%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="99.3034%" y="485" width="0.1548%" height="15" fill="rgb(250,0,22)" fg:x="1283" fg:w="2"/><text x="99.5534%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.3808%" y="469" width="0.0774%" height="15" fill="rgb(213,166,10)" fg:x="1284" fg:w="1"/><text x="99.6308%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.3808%" y="453" width="0.0774%" height="15" fill="rgb(207,163,36)" fg:x="1284" fg:w="1"/><text x="99.6308%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.3808%" y="437" width="0.0774%" height="15" fill="rgb(208,122,22)" fg:x="1284" fg:w="1"/><text x="99.6308%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.3808%" y="421" width="0.0774%" height="15" fill="rgb(207,104,49)" fg:x="1284" fg:w="1"/><text x="99.6308%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.3808%" y="405" width="0.0774%" height="15" fill="rgb(248,211,50)" fg:x="1284" fg:w="1"/><text x="99.6308%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.3808%" y="389" width="0.0774%" height="15" fill="rgb(217,13,45)" fg:x="1284" fg:w="1"/><text x="99.6308%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.3808%" y="373" width="0.0774%" height="15" fill="rgb(211,216,49)" fg:x="1284" fg:w="1"/><text x="99.6308%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.3808%" y="357" width="0.0774%" height="15" fill="rgb(221,58,53)" fg:x="1284" fg:w="1"/><text x="99.6308%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.3808%" y="341" width="0.0774%" height="15" fill="rgb(220,112,41)" fg:x="1284" fg:w="1"/><text x="99.6308%" y="351.50"></text></g><g><title>_start (1,199 samples, 92.80%)</title><rect x="6.7337%" y="1205" width="92.8019%" height="15" fill="rgb(236,38,28)" fg:x="87" fg:w="1199"/><text x="6.9837%" y="1215.50">_start</text></g><g><title>__libc_start_main_impl (1,199 samples, 92.80%)</title><rect x="6.7337%" y="1189" width="92.8019%" height="15" fill="rgb(227,195,22)" fg:x="87" fg:w="1199"/><text x="6.9837%" y="1199.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (1,199 samples, 92.80%)</title><rect x="6.7337%" y="1173" width="92.8019%" height="15" fill="rgb(214,55,33)" fg:x="87" fg:w="1199"/><text x="6.9837%" y="1183.50">__libc_start_call_main</text></g><g><title>main (1,184 samples, 91.64%)</title><rect x="7.8947%" y="1157" width="91.6409%" height="15" fill="rgb(248,80,13)" fg:x="102" fg:w="1184"/><text x="8.1447%" y="1167.50">main</text></g><g><title>std::rt::lang_start_internal (1,184 samples, 91.64%)</title><rect x="7.8947%" y="1141" width="91.6409%" height="15" fill="rgb(238,52,6)" fg:x="102" fg:w="1184"/><text x="8.1447%" y="1151.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,184 samples, 91.64%)</title><rect x="7.8947%" y="1125" width="91.6409%" height="15" fill="rgb(224,198,47)" fg:x="102" fg:w="1184"/><text x="8.1447%" y="1135.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,184 samples, 91.64%)</title><rect x="7.8947%" y="1109" width="91.6409%" height="15" fill="rgb(233,171,20)" fg:x="102" fg:w="1184"/><text x="8.1447%" y="1119.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,184 samples, 91.64%)</title><rect x="7.8947%" y="1093" width="91.6409%" height="15" fill="rgb(241,30,25)" fg:x="102" fg:w="1184"/><text x="8.1447%" y="1103.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,184 samples, 91.64%)</title><rect x="7.8947%" y="1077" width="91.6409%" height="15" fill="rgb(207,171,38)" fg:x="102" fg:w="1184"/><text x="8.1447%" y="1087.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,184 samples, 91.64%)</title><rect x="7.8947%" y="1061" width="91.6409%" height="15" fill="rgb(234,70,1)" fg:x="102" fg:w="1184"/><text x="8.1447%" y="1071.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,184 samples, 91.64%)</title><rect x="7.8947%" y="1045" width="91.6409%" height="15" fill="rgb(232,178,18)" fg:x="102" fg:w="1184"/><text x="8.1447%" y="1055.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,184 samples, 91.64%)</title><rect x="7.8947%" y="1029" width="91.6409%" height="15" fill="rgb(241,78,40)" fg:x="102" fg:w="1184"/><text x="8.1447%" y="1039.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,184 samples, 91.64%)</title><rect x="7.8947%" y="1013" width="91.6409%" height="15" fill="rgb(222,35,25)" fg:x="102" fg:w="1184"/><text x="8.1447%" y="1023.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,184 samples, 91.64%)</title><rect x="7.8947%" y="997" width="91.6409%" height="15" fill="rgb(207,92,16)" fg:x="102" fg:w="1184"/><text x="8.1447%" y="1007.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,184 samples, 91.64%)</title><rect x="7.8947%" y="981" width="91.6409%" height="15" fill="rgb(216,59,51)" fg:x="102" fg:w="1184"/><text x="8.1447%" y="991.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (1,184 samples, 91.64%)</title><rect x="7.8947%" y="965" width="91.6409%" height="15" fill="rgb(213,80,28)" fg:x="102" fg:w="1184"/><text x="8.1447%" y="975.50">core::ops::function::FnOnce::call_once</text></g><g><title>demoparser::main (1,184 samples, 91.64%)</title><rect x="7.8947%" y="949" width="91.6409%" height="15" fill="rgb(220,93,7)" fg:x="102" fg:w="1184"/><text x="8.1447%" y="959.50">demoparser::main</text></g><g><title>std::fs::read_dir (1 samples, 0.08%)</title><rect x="99.4582%" y="933" width="0.0774%" height="15" fill="rgb(225,24,44)" fg:x="1285" fg:w="1"/><text x="99.7082%" y="943.50"></text></g><g><title>std::sys::unix::fs::readdir (1 samples, 0.08%)</title><rect x="99.4582%" y="917" width="0.0774%" height="15" fill="rgb(243,74,40)" fg:x="1285" fg:w="1"/><text x="99.7082%" y="927.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (1 samples, 0.08%)</title><rect x="99.4582%" y="901" width="0.0774%" height="15" fill="rgb(228,39,7)" fg:x="1285" fg:w="1"/><text x="99.7082%" y="911.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="99.4582%" y="885" width="0.0774%" height="15" fill="rgb(227,79,8)" fg:x="1285" fg:w="1"/><text x="99.7082%" y="895.50"></text></g><g><title>std::sys::unix::fs::readdir::{{closure}} (1 samples, 0.08%)</title><rect x="99.4582%" y="869" width="0.0774%" height="15" fill="rgb(236,58,11)" fg:x="1285" fg:w="1"/><text x="99.7082%" y="879.50"></text></g><g><title>__opendir (1 samples, 0.08%)</title><rect x="99.4582%" y="853" width="0.0774%" height="15" fill="rgb(249,63,35)" fg:x="1285" fg:w="1"/><text x="99.7082%" y="863.50"></text></g><g><title>opendir_tail (1 samples, 0.08%)</title><rect x="99.4582%" y="837" width="0.0774%" height="15" fill="rgb(252,114,16)" fg:x="1285" fg:w="1"/><text x="99.7082%" y="847.50"></text></g><g><title>__GI___fstatat64 (1 samples, 0.08%)</title><rect x="99.4582%" y="821" width="0.0774%" height="15" fill="rgb(254,151,24)" fg:x="1285" fg:w="1"/><text x="99.7082%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.4582%" y="805" width="0.0774%" height="15" fill="rgb(253,54,39)" fg:x="1285" fg:w="1"/><text x="99.7082%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.4582%" y="789" width="0.0774%" height="15" fill="rgb(243,25,45)" fg:x="1285" fg:w="1"/><text x="99.7082%" y="799.50"></text></g><g><title>demoparser (1,287 samples, 99.61%)</title><rect x="0.0000%" y="1221" width="99.6130%" height="15" fill="rgb(234,134,9)" fg:x="0" fg:w="1287"/><text x="0.2500%" y="1231.50">demoparser</text></g><g><title>demoparser::parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::_parse_packet_entities (1 samples, 0.08%)</title><rect x="99.5356%" y="1205" width="0.0774%" height="15" fill="rgb(227,166,31)" fg:x="1286" fg:w="1"/><text x="99.7856%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;csgoproto::netmessages::CSVCMsg_PacketEntities&gt; (1 samples, 0.08%)</title><rect x="99.5356%" y="1189" width="0.0774%" height="15" fill="rgb(245,143,41)" fg:x="1286" fg:w="1"/><text x="99.7856%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="99.5356%" y="1173" width="0.0774%" height="15" fill="rgb(238,181,32)" fg:x="1286" fg:w="1"/><text x="99.7856%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.08%)</title><rect x="99.5356%" y="1157" width="0.0774%" height="15" fill="rgb(224,113,18)" fg:x="1286" fg:w="1"/><text x="99.7856%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.08%)</title><rect x="99.5356%" y="1141" width="0.0774%" height="15" fill="rgb(240,229,28)" fg:x="1286" fg:w="1"/><text x="99.7856%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.5356%" y="1125" width="0.0774%" height="15" fill="rgb(250,185,3)" fg:x="1286" fg:w="1"/><text x="99.7856%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.08%)</title><rect x="99.5356%" y="1109" width="0.0774%" height="15" fill="rgb(212,59,25)" fg:x="1286" fg:w="1"/><text x="99.7856%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.08%)</title><rect x="99.5356%" y="1093" width="0.0774%" height="15" fill="rgb(221,87,20)" fg:x="1286" fg:w="1"/><text x="99.7856%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="99.5356%" y="1077" width="0.0774%" height="15" fill="rgb(213,74,28)" fg:x="1286" fg:w="1"/><text x="99.7856%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="99.5356%" y="1061" width="0.0774%" height="15" fill="rgb(224,132,34)" fg:x="1286" fg:w="1"/><text x="99.7856%" y="1071.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.5356%" y="1045" width="0.0774%" height="15" fill="rgb(222,101,24)" fg:x="1286" fg:w="1"/><text x="99.7856%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="99.5356%" y="1029" width="0.0774%" height="15" fill="rgb(254,142,4)" fg:x="1286" fg:w="1"/><text x="99.7856%" y="1039.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="99.5356%" y="1013" width="0.0774%" height="15" fill="rgb(230,229,49)" fg:x="1286" fg:w="1"/><text x="99.7856%" y="1023.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="99.5356%" y="997" width="0.0774%" height="15" fill="rgb(238,70,47)" fg:x="1286" fg:w="1"/><text x="99.7856%" y="1007.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.08%)</title><rect x="99.5356%" y="981" width="0.0774%" height="15" fill="rgb(231,160,17)" fg:x="1286" fg:w="1"/><text x="99.7856%" y="991.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.08%)</title><rect x="99.5356%" y="965" width="0.0774%" height="15" fill="rgb(218,68,53)" fg:x="1286" fg:w="1"/><text x="99.7856%" y="975.50"></text></g><g><title>mi_find_page (1 samples, 0.08%)</title><rect x="99.5356%" y="949" width="0.0774%" height="15" fill="rgb(236,111,10)" fg:x="1286" fg:w="1"/><text x="99.7856%" y="959.50"></text></g><g><title>mi_find_free_page (1 samples, 0.08%)</title><rect x="99.5356%" y="933" width="0.0774%" height="15" fill="rgb(224,34,41)" fg:x="1286" fg:w="1"/><text x="99.7856%" y="943.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.08%)</title><rect x="99.5356%" y="917" width="0.0774%" height="15" fill="rgb(241,118,19)" fg:x="1286" fg:w="1"/><text x="99.7856%" y="927.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.08%)</title><rect x="99.5356%" y="901" width="0.0774%" height="15" fill="rgb(238,129,25)" fg:x="1286" fg:w="1"/><text x="99.7856%" y="911.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.08%)</title><rect x="99.5356%" y="885" width="0.0774%" height="15" fill="rgb(238,22,31)" fg:x="1286" fg:w="1"/><text x="99.7856%" y="895.50"></text></g><g><title>mi_page_free_list_extend (1 samples, 0.08%)</title><rect x="99.5356%" y="869" width="0.0774%" height="15" fill="rgb(222,174,48)" fg:x="1286" fg:w="1"/><text x="99.7856%" y="879.50"></text></g><g><title>mi_block_set_next (1 samples, 0.08%)</title><rect x="99.5356%" y="853" width="0.0774%" height="15" fill="rgb(206,152,40)" fg:x="1286" fg:w="1"/><text x="99.7856%" y="863.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.08%)</title><rect x="99.5356%" y="837" width="0.0774%" height="15" fill="rgb(218,99,54)" fg:x="1286" fg:w="1"/><text x="99.7856%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.5356%" y="821" width="0.0774%" height="15" fill="rgb(220,174,26)" fg:x="1286" fg:w="1"/><text x="99.7856%" y="831.50"></text></g><g><title>all (1,292 samples, 100%)</title><rect x="0.0000%" y="1237" width="100.0000%" height="15" fill="rgb(245,116,9)" fg:x="0" fg:w="1292"/><text x="0.2500%" y="1247.50"></text></g><g><title>perf-exec (5 samples, 0.39%)</title><rect x="99.6130%" y="1221" width="0.3870%" height="15" fill="rgb(209,72,35)" fg:x="1287" fg:w="5"/><text x="99.8630%" y="1231.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="99.6130%" y="1205" width="0.3870%" height="15" fill="rgb(226,126,21)" fg:x="1287" fg:w="5"/><text x="99.8630%" y="1215.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="99.6130%" y="1189" width="0.3870%" height="15" fill="rgb(227,192,1)" fg:x="1287" fg:w="5"/><text x="99.8630%" y="1199.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="99.6130%" y="1173" width="0.3870%" height="15" fill="rgb(237,180,29)" fg:x="1287" fg:w="5"/><text x="99.8630%" y="1183.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="99.6130%" y="1157" width="0.3870%" height="15" fill="rgb(230,197,35)" fg:x="1287" fg:w="5"/><text x="99.8630%" y="1167.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="99.6130%" y="1141" width="0.3870%" height="15" fill="rgb(246,193,31)" fg:x="1287" fg:w="5"/><text x="99.8630%" y="1151.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="99.6130%" y="1125" width="0.3870%" height="15" fill="rgb(241,36,4)" fg:x="1287" fg:w="5"/><text x="99.8630%" y="1135.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="99.6130%" y="1109" width="0.3870%" height="15" fill="rgb(241,130,17)" fg:x="1287" fg:w="5"/><text x="99.8630%" y="1119.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="99.6130%" y="1093" width="0.3870%" height="15" fill="rgb(206,137,32)" fg:x="1287" fg:w="5"/><text x="99.8630%" y="1103.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="99.6130%" y="1077" width="0.3870%" height="15" fill="rgb(237,228,51)" fg:x="1287" fg:w="5"/><text x="99.8630%" y="1087.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="99.6130%" y="1061" width="0.3870%" height="15" fill="rgb(243,6,42)" fg:x="1287" fg:w="5"/><text x="99.8630%" y="1071.50"></text></g><g><title>[unknown] (5 samples, 0.39%)</title><rect x="99.6130%" y="1045" width="0.3870%" height="15" fill="rgb(251,74,28)" fg:x="1287" fg:w="5"/><text x="99.8630%" y="1055.50"></text></g></svg></svg>