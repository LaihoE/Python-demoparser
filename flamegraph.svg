<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1030" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1013.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1013.00"> </text><svg id="frames" x="10" width="1180" total_samples="650"><g><title>_mi_heap_realloc_zero (1 samples, 0.15%)</title><rect x="0.0000%" y="933" width="0.1538%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="943.50"></text></g><g><title>mi_page_free_list_extend (1 samples, 0.15%)</title><rect x="0.0000%" y="917" width="0.1538%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="927.50"></text></g><g><title>mi_block_set_next (1 samples, 0.15%)</title><rect x="0.0000%" y="901" width="0.1538%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="911.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.15%)</title><rect x="0.0000%" y="885" width="0.1538%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="0.0000%" y="869" width="0.1538%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="879.50"></text></g><g><title>[anon] (3 samples, 0.46%)</title><rect x="0.0000%" y="949" width="0.4615%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="3"/><text x="0.2500%" y="959.50"></text></g><g><title>mi_page_free_list_extend (2 samples, 0.31%)</title><rect x="0.1538%" y="933" width="0.3077%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="2"/><text x="0.4038%" y="943.50"></text></g><g><title>mi_block_set_next (2 samples, 0.31%)</title><rect x="0.1538%" y="917" width="0.3077%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="2"/><text x="0.4038%" y="927.50"></text></g><g><title>mi_block_set_nextx (2 samples, 0.31%)</title><rect x="0.1538%" y="901" width="0.3077%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="2"/><text x="0.4038%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="0.1538%" y="885" width="0.3077%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="2"/><text x="0.4038%" y="895.50"></text></g><g><title>[unknown] (87 samples, 13.38%)</title><rect x="2.9231%" y="933" width="13.3846%" height="15" fill="rgb(250,228,42)" fg:x="19" fg:w="87"/><text x="3.1731%" y="943.50">[unknown]</text></g><g><title>[unknown] (87 samples, 13.38%)</title><rect x="2.9231%" y="917" width="13.3846%" height="15" fill="rgb(240,193,28)" fg:x="19" fg:w="87"/><text x="3.1731%" y="927.50">[unknown]</text></g><g><title>[unknown] (82 samples, 12.62%)</title><rect x="3.6923%" y="901" width="12.6154%" height="15" fill="rgb(216,20,37)" fg:x="24" fg:w="82"/><text x="3.9423%" y="911.50">[unknown]</text></g><g><title>[unknown] (77 samples, 11.85%)</title><rect x="4.4615%" y="885" width="11.8462%" height="15" fill="rgb(206,188,39)" fg:x="29" fg:w="77"/><text x="4.7115%" y="895.50">[unknown]</text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="15.3846%" y="869" width="0.9231%" height="15" fill="rgb(217,207,13)" fg:x="100" fg:w="6"/><text x="15.6346%" y="879.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="15.3846%" y="853" width="0.9231%" height="15" fill="rgb(231,73,38)" fg:x="100" fg:w="6"/><text x="15.6346%" y="863.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="15.3846%" y="837" width="0.9231%" height="15" fill="rgb(225,20,46)" fg:x="100" fg:w="6"/><text x="15.6346%" y="847.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="15.3846%" y="821" width="0.9231%" height="15" fill="rgb(210,31,41)" fg:x="100" fg:w="6"/><text x="15.6346%" y="831.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="15.3846%" y="805" width="0.9231%" height="15" fill="rgb(221,200,47)" fg:x="100" fg:w="6"/><text x="15.6346%" y="815.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="15.3846%" y="789" width="0.9231%" height="15" fill="rgb(226,26,5)" fg:x="100" fg:w="6"/><text x="15.6346%" y="799.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="15.5385%" y="773" width="0.7692%" height="15" fill="rgb(249,33,26)" fg:x="101" fg:w="5"/><text x="15.7885%" y="783.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="15.5385%" y="757" width="0.7692%" height="15" fill="rgb(235,183,28)" fg:x="101" fg:w="5"/><text x="15.7885%" y="767.50"></text></g><g><title>[unknown] (4 samples, 0.62%)</title><rect x="15.6923%" y="741" width="0.6154%" height="15" fill="rgb(221,5,38)" fg:x="102" fg:w="4"/><text x="15.9423%" y="751.50"></text></g><g><title>[unknown] (3 samples, 0.46%)</title><rect x="15.8462%" y="725" width="0.4615%" height="15" fill="rgb(247,18,42)" fg:x="103" fg:w="3"/><text x="16.0962%" y="735.50"></text></g><g><title>[unknown] (3 samples, 0.46%)</title><rect x="15.8462%" y="709" width="0.4615%" height="15" fill="rgb(241,131,45)" fg:x="103" fg:w="3"/><text x="16.0962%" y="719.50"></text></g><g><title>[unknown] (3 samples, 0.46%)</title><rect x="15.8462%" y="693" width="0.4615%" height="15" fill="rgb(249,31,29)" fg:x="103" fg:w="3"/><text x="16.0962%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.1538%" y="677" width="0.1538%" height="15" fill="rgb(225,111,53)" fg:x="105" fg:w="1"/><text x="16.4038%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.1538%" y="661" width="0.1538%" height="15" fill="rgb(238,160,17)" fg:x="105" fg:w="1"/><text x="16.4038%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.1538%" y="645" width="0.1538%" height="15" fill="rgb(214,148,48)" fg:x="105" fg:w="1"/><text x="16.4038%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.1538%" y="629" width="0.1538%" height="15" fill="rgb(232,36,49)" fg:x="105" fg:w="1"/><text x="16.4038%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.1538%" y="613" width="0.1538%" height="15" fill="rgb(209,103,24)" fg:x="105" fg:w="1"/><text x="16.4038%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.1538%" y="597" width="0.1538%" height="15" fill="rgb(229,88,8)" fg:x="105" fg:w="1"/><text x="16.4038%" y="607.50"></text></g><g><title>[unknown] (104 samples, 16.00%)</title><rect x="0.4615%" y="949" width="16.0000%" height="15" fill="rgb(213,181,19)" fg:x="3" fg:w="104"/><text x="0.7115%" y="959.50">[unknown]</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.15%)</title><rect x="16.3077%" y="933" width="0.1538%" height="15" fill="rgb(254,191,54)" fg:x="106" fg:w="1"/><text x="16.5577%" y="943.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (1 samples, 0.15%)</title><rect x="16.3077%" y="917" width="0.1538%" height="15" fill="rgb(241,83,37)" fg:x="106" fg:w="1"/><text x="16.5577%" y="927.50"></text></g><g><title>crossbeam_epoch::default::default_collector (1 samples, 0.15%)</title><rect x="16.3077%" y="901" width="0.1538%" height="15" fill="rgb(233,36,39)" fg:x="106" fg:w="1"/><text x="16.5577%" y="911.50"></text></g><g><title>crossbeam_epoch::default::collector (1 samples, 0.15%)</title><rect x="16.3077%" y="885" width="0.1538%" height="15" fill="rgb(226,3,54)" fg:x="106" fg:w="1"/><text x="16.5577%" y="895.50"></text></g><g><title>crossbeam_epoch::sync::once_lock::OnceLock&lt;T&gt;::get_or_init (1 samples, 0.15%)</title><rect x="16.3077%" y="869" width="0.1538%" height="15" fill="rgb(245,192,40)" fg:x="106" fg:w="1"/><text x="16.5577%" y="879.50"></text></g><g><title>crossbeam_epoch::sync::once_lock::OnceLock&lt;T&gt;::initialize (1 samples, 0.15%)</title><rect x="16.3077%" y="853" width="0.1538%" height="15" fill="rgb(238,167,29)" fg:x="106" fg:w="1"/><text x="16.5577%" y="863.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.15%)</title><rect x="16.3077%" y="837" width="0.1538%" height="15" fill="rgb(232,182,51)" fg:x="106" fg:w="1"/><text x="16.5577%" y="847.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.15%)</title><rect x="16.3077%" y="821" width="0.1538%" height="15" fill="rgb(231,60,39)" fg:x="106" fg:w="1"/><text x="16.5577%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.3077%" y="805" width="0.1538%" height="15" fill="rgb(208,69,12)" fg:x="106" fg:w="1"/><text x="16.5577%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.3077%" y="789" width="0.1538%" height="15" fill="rgb(235,93,37)" fg:x="106" fg:w="1"/><text x="16.5577%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.3077%" y="773" width="0.1538%" height="15" fill="rgb(213,116,39)" fg:x="106" fg:w="1"/><text x="16.5577%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.3077%" y="757" width="0.1538%" height="15" fill="rgb(222,207,29)" fg:x="106" fg:w="1"/><text x="16.5577%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.3077%" y="741" width="0.1538%" height="15" fill="rgb(206,96,30)" fg:x="106" fg:w="1"/><text x="16.5577%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.3077%" y="725" width="0.1538%" height="15" fill="rgb(218,138,4)" fg:x="106" fg:w="1"/><text x="16.5577%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.3077%" y="709" width="0.1538%" height="15" fill="rgb(250,191,14)" fg:x="106" fg:w="1"/><text x="16.5577%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.3077%" y="693" width="0.1538%" height="15" fill="rgb(239,60,40)" fg:x="106" fg:w="1"/><text x="16.5577%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.3077%" y="677" width="0.1538%" height="15" fill="rgb(206,27,48)" fg:x="106" fg:w="1"/><text x="16.5577%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.3077%" y="661" width="0.1538%" height="15" fill="rgb(225,35,8)" fg:x="106" fg:w="1"/><text x="16.5577%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.4615%" y="933" width="0.1538%" height="15" fill="rgb(250,213,24)" fg:x="107" fg:w="1"/><text x="16.7115%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.4615%" y="917" width="0.1538%" height="15" fill="rgb(247,123,22)" fg:x="107" fg:w="1"/><text x="16.7115%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.4615%" y="901" width="0.1538%" height="15" fill="rgb(231,138,38)" fg:x="107" fg:w="1"/><text x="16.7115%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.4615%" y="885" width="0.1538%" height="15" fill="rgb(231,145,46)" fg:x="107" fg:w="1"/><text x="16.7115%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.4615%" y="869" width="0.1538%" height="15" fill="rgb(251,118,11)" fg:x="107" fg:w="1"/><text x="16.7115%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.4615%" y="853" width="0.1538%" height="15" fill="rgb(217,147,25)" fg:x="107" fg:w="1"/><text x="16.7115%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.4615%" y="837" width="0.1538%" height="15" fill="rgb(247,81,37)" fg:x="107" fg:w="1"/><text x="16.7115%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.4615%" y="821" width="0.1538%" height="15" fill="rgb(209,12,38)" fg:x="107" fg:w="1"/><text x="16.7115%" y="831.50"></text></g><g><title>mi_abandoned_pop (1 samples, 0.15%)</title><rect x="16.6154%" y="805" width="0.1538%" height="15" fill="rgb(227,1,9)" fg:x="108" fg:w="1"/><text x="16.8654%" y="815.50"></text></g><g><title>mi_abandoned_pop (1 samples, 0.15%)</title><rect x="16.6154%" y="789" width="0.1538%" height="15" fill="rgb(248,47,43)" fg:x="108" fg:w="1"/><text x="16.8654%" y="799.50"></text></g><g><title>mi_tagged_segment (1 samples, 0.15%)</title><rect x="16.6154%" y="773" width="0.1538%" height="15" fill="rgb(221,10,30)" fg:x="108" fg:w="1"/><text x="16.8654%" y="783.50"></text></g><g><title>__GI___nptl_deallocate_tsd (2 samples, 0.31%)</title><rect x="16.6154%" y="917" width="0.3077%" height="15" fill="rgb(210,229,1)" fg:x="108" fg:w="2"/><text x="16.8654%" y="927.50"></text></g><g><title>__GI___nptl_deallocate_tsd (2 samples, 0.31%)</title><rect x="16.6154%" y="901" width="0.3077%" height="15" fill="rgb(222,148,37)" fg:x="108" fg:w="2"/><text x="16.8654%" y="911.50"></text></g><g><title>mi_pthread_done (2 samples, 0.31%)</title><rect x="16.6154%" y="885" width="0.3077%" height="15" fill="rgb(234,67,33)" fg:x="108" fg:w="2"/><text x="16.8654%" y="895.50"></text></g><g><title>_mi_thread_done (2 samples, 0.31%)</title><rect x="16.6154%" y="869" width="0.3077%" height="15" fill="rgb(247,98,35)" fg:x="108" fg:w="2"/><text x="16.8654%" y="879.50"></text></g><g><title>_mi_heap_done (2 samples, 0.31%)</title><rect x="16.6154%" y="853" width="0.3077%" height="15" fill="rgb(247,138,52)" fg:x="108" fg:w="2"/><text x="16.8654%" y="863.50"></text></g><g><title>mi_heap_collect_ex (2 samples, 0.31%)</title><rect x="16.6154%" y="837" width="0.3077%" height="15" fill="rgb(213,79,30)" fg:x="108" fg:w="2"/><text x="16.8654%" y="847.50"></text></g><g><title>_mi_abandoned_collect (2 samples, 0.31%)</title><rect x="16.6154%" y="821" width="0.3077%" height="15" fill="rgb(246,177,23)" fg:x="108" fg:w="2"/><text x="16.8654%" y="831.50"></text></g><g><title>mi_abandoned_visited_push (1 samples, 0.15%)</title><rect x="16.7692%" y="805" width="0.1538%" height="15" fill="rgb(230,62,27)" fg:x="109" fg:w="1"/><text x="17.0192%" y="815.50"></text></g><g><title>__libc_thread_freeres (1 samples, 0.15%)</title><rect x="16.9231%" y="917" width="0.1538%" height="15" fill="rgb(216,154,8)" fg:x="110" fg:w="1"/><text x="17.1731%" y="927.50"></text></g><g><title>__rpc_thread_destroy (1 samples, 0.15%)</title><rect x="16.9231%" y="901" width="0.1538%" height="15" fill="rgb(244,35,45)" fg:x="110" fg:w="1"/><text x="17.1731%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.9231%" y="885" width="0.1538%" height="15" fill="rgb(251,115,12)" fg:x="110" fg:w="1"/><text x="17.1731%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.9231%" y="869" width="0.1538%" height="15" fill="rgb(240,54,50)" fg:x="110" fg:w="1"/><text x="17.1731%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.9231%" y="853" width="0.1538%" height="15" fill="rgb(233,84,52)" fg:x="110" fg:w="1"/><text x="17.1731%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.9231%" y="837" width="0.1538%" height="15" fill="rgb(207,117,47)" fg:x="110" fg:w="1"/><text x="17.1731%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.9231%" y="821" width="0.1538%" height="15" fill="rgb(249,43,39)" fg:x="110" fg:w="1"/><text x="17.1731%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.9231%" y="805" width="0.1538%" height="15" fill="rgb(209,38,44)" fg:x="110" fg:w="1"/><text x="17.1731%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.9231%" y="789" width="0.1538%" height="15" fill="rgb(236,212,23)" fg:x="110" fg:w="1"/><text x="17.1731%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.9231%" y="773" width="0.1538%" height="15" fill="rgb(242,79,21)" fg:x="110" fg:w="1"/><text x="17.1731%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.9231%" y="757" width="0.1538%" height="15" fill="rgb(211,96,35)" fg:x="110" fg:w="1"/><text x="17.1731%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="16.9231%" y="741" width="0.1538%" height="15" fill="rgb(253,215,40)" fg:x="110" fg:w="1"/><text x="17.1731%" y="751.50"></text></g><g><title>rseq_register_current_thread (1 samples, 0.15%)</title><rect x="17.0769%" y="917" width="0.1538%" height="15" fill="rgb(211,81,21)" fg:x="111" fg:w="1"/><text x="17.3269%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="17.0769%" y="901" width="0.1538%" height="15" fill="rgb(208,190,38)" fg:x="111" fg:w="1"/><text x="17.3269%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="17.0769%" y="885" width="0.1538%" height="15" fill="rgb(235,213,38)" fg:x="111" fg:w="1"/><text x="17.3269%" y="895.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (5 samples, 0.77%)</title><rect x="17.2308%" y="741" width="0.7692%" height="15" fill="rgb(237,122,38)" fg:x="112" fg:w="5"/><text x="17.4808%" y="751.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (5 samples, 0.77%)</title><rect x="17.2308%" y="725" width="0.7692%" height="15" fill="rgb(244,218,35)" fg:x="112" fg:w="5"/><text x="17.4808%" y="735.50"></text></g><g><title>rayon_core::registry::main_loop (5 samples, 0.77%)</title><rect x="17.2308%" y="709" width="0.7692%" height="15" fill="rgb(240,68,47)" fg:x="112" fg:w="5"/><text x="17.4808%" y="719.50"></text></g><g><title>rayon_core::job::JobFifo::new (5 samples, 0.77%)</title><rect x="17.2308%" y="693" width="0.7692%" height="15" fill="rgb(210,16,53)" fg:x="112" fg:w="5"/><text x="17.4808%" y="703.50"></text></g><g><title>crossbeam_deque::deque::Injector&lt;T&gt;::new (5 samples, 0.77%)</title><rect x="17.2308%" y="677" width="0.7692%" height="15" fill="rgb(235,124,12)" fg:x="112" fg:w="5"/><text x="17.4808%" y="687.50"></text></g><g><title>&lt;crossbeam_deque::deque::Injector&lt;T&gt; as core::default::Default&gt;::default (5 samples, 0.77%)</title><rect x="17.2308%" y="661" width="0.7692%" height="15" fill="rgb(224,169,11)" fg:x="112" fg:w="5"/><text x="17.4808%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (5 samples, 0.77%)</title><rect x="17.2308%" y="645" width="0.7692%" height="15" fill="rgb(250,166,2)" fg:x="112" fg:w="5"/><text x="17.4808%" y="655.50"></text></g><g><title>alloc::alloc::exchange_malloc (5 samples, 0.77%)</title><rect x="17.2308%" y="629" width="0.7692%" height="15" fill="rgb(242,216,29)" fg:x="112" fg:w="5"/><text x="17.4808%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.77%)</title><rect x="17.2308%" y="613" width="0.7692%" height="15" fill="rgb(230,116,27)" fg:x="112" fg:w="5"/><text x="17.4808%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.77%)</title><rect x="17.2308%" y="597" width="0.7692%" height="15" fill="rgb(228,99,48)" fg:x="112" fg:w="5"/><text x="17.4808%" y="607.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.77%)</title><rect x="17.2308%" y="581" width="0.7692%" height="15" fill="rgb(253,11,6)" fg:x="112" fg:w="5"/><text x="17.4808%" y="591.50"></text></g><g><title>_mi_malloc_generic (5 samples, 0.77%)</title><rect x="17.2308%" y="565" width="0.7692%" height="15" fill="rgb(247,143,39)" fg:x="112" fg:w="5"/><text x="17.4808%" y="575.50"></text></g><g><title>mi_find_page (5 samples, 0.77%)</title><rect x="17.2308%" y="549" width="0.7692%" height="15" fill="rgb(236,97,10)" fg:x="112" fg:w="5"/><text x="17.4808%" y="559.50"></text></g><g><title>mi_find_free_page (5 samples, 0.77%)</title><rect x="17.2308%" y="533" width="0.7692%" height="15" fill="rgb(233,208,19)" fg:x="112" fg:w="5"/><text x="17.4808%" y="543.50"></text></g><g><title>mi_page_queue_find_free_ex (5 samples, 0.77%)</title><rect x="17.2308%" y="517" width="0.7692%" height="15" fill="rgb(216,164,2)" fg:x="112" fg:w="5"/><text x="17.4808%" y="527.50"></text></g><g><title>mi_page_fresh (5 samples, 0.77%)</title><rect x="17.2308%" y="501" width="0.7692%" height="15" fill="rgb(220,129,5)" fg:x="112" fg:w="5"/><text x="17.4808%" y="511.50"></text></g><g><title>mi_page_fresh_alloc (5 samples, 0.77%)</title><rect x="17.2308%" y="485" width="0.7692%" height="15" fill="rgb(242,17,10)" fg:x="112" fg:w="5"/><text x="17.4808%" y="495.50"></text></g><g><title>mi_page_init (5 samples, 0.77%)</title><rect x="17.2308%" y="469" width="0.7692%" height="15" fill="rgb(242,107,0)" fg:x="112" fg:w="5"/><text x="17.4808%" y="479.50"></text></g><g><title>mi_page_extend_free (5 samples, 0.77%)</title><rect x="17.2308%" y="453" width="0.7692%" height="15" fill="rgb(251,28,31)" fg:x="112" fg:w="5"/><text x="17.4808%" y="463.50"></text></g><g><title>mi_page_extend_free (5 samples, 0.77%)</title><rect x="17.2308%" y="437" width="0.7692%" height="15" fill="rgb(233,223,10)" fg:x="112" fg:w="5"/><text x="17.4808%" y="447.50"></text></g><g><title>mi_page_free_list_extend (5 samples, 0.77%)</title><rect x="17.2308%" y="421" width="0.7692%" height="15" fill="rgb(215,21,27)" fg:x="112" fg:w="5"/><text x="17.4808%" y="431.50"></text></g><g><title>mi_block_set_next (5 samples, 0.77%)</title><rect x="17.2308%" y="405" width="0.7692%" height="15" fill="rgb(232,23,21)" fg:x="112" fg:w="5"/><text x="17.4808%" y="415.50"></text></g><g><title>mi_block_set_nextx (5 samples, 0.77%)</title><rect x="17.2308%" y="389" width="0.7692%" height="15" fill="rgb(244,5,23)" fg:x="112" fg:w="5"/><text x="17.4808%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="17.2308%" y="373" width="0.7692%" height="15" fill="rgb(226,81,46)" fg:x="112" fg:w="5"/><text x="17.4808%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="17.2308%" y="357" width="0.7692%" height="15" fill="rgb(247,70,30)" fg:x="112" fg:w="5"/><text x="17.4808%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="17.2308%" y="341" width="0.7692%" height="15" fill="rgb(212,68,19)" fg:x="112" fg:w="5"/><text x="17.4808%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="17.2308%" y="325" width="0.7692%" height="15" fill="rgb(240,187,13)" fg:x="112" fg:w="5"/><text x="17.4808%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="17.2308%" y="309" width="0.7692%" height="15" fill="rgb(223,113,26)" fg:x="112" fg:w="5"/><text x="17.4808%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="17.2308%" y="293" width="0.7692%" height="15" fill="rgb(206,192,2)" fg:x="112" fg:w="5"/><text x="17.4808%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="17.2308%" y="277" width="0.7692%" height="15" fill="rgb(241,108,4)" fg:x="112" fg:w="5"/><text x="17.4808%" y="287.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="17.2308%" y="261" width="0.7692%" height="15" fill="rgb(247,173,49)" fg:x="112" fg:w="5"/><text x="17.4808%" y="271.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="17.2308%" y="245" width="0.7692%" height="15" fill="rgb(224,114,35)" fg:x="112" fg:w="5"/><text x="17.4808%" y="255.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 1.08%)</title><rect x="18.0000%" y="709" width="1.0769%" height="15" fill="rgb(245,159,27)" fg:x="117" fg:w="7"/><text x="18.2500%" y="719.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="19.0769%" y="709" width="0.1538%" height="15" fill="rgb(245,172,44)" fg:x="124" fg:w="1"/><text x="19.3269%" y="719.50"></text></g><g><title>_mi_segment_page_alloc (1 samples, 0.15%)</title><rect x="19.3846%" y="469" width="0.1538%" height="15" fill="rgb(236,23,11)" fg:x="126" fg:w="1"/><text x="19.6346%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (13 samples, 2.00%)</title><rect x="19.3846%" y="693" width="2.0000%" height="15" fill="rgb(205,117,38)" fg:x="126" fg:w="13"/><text x="19.6346%" y="703.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 2.00%)</title><rect x="19.3846%" y="677" width="2.0000%" height="15" fill="rgb(237,72,25)" fg:x="126" fg:w="13"/><text x="19.6346%" y="687.50">a..</text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 2.00%)</title><rect x="19.3846%" y="661" width="2.0000%" height="15" fill="rgb(244,70,9)" fg:x="126" fg:w="13"/><text x="19.6346%" y="671.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (13 samples, 2.00%)</title><rect x="19.3846%" y="645" width="2.0000%" height="15" fill="rgb(217,125,39)" fg:x="126" fg:w="13"/><text x="19.6346%" y="655.50">&lt;..</text></g><g><title>alloc::alloc::Global::grow_impl (13 samples, 2.00%)</title><rect x="19.3846%" y="629" width="2.0000%" height="15" fill="rgb(235,36,10)" fg:x="126" fg:w="13"/><text x="19.6346%" y="639.50">a..</text></g><g><title>alloc::alloc::realloc (13 samples, 2.00%)</title><rect x="19.3846%" y="613" width="2.0000%" height="15" fill="rgb(251,123,47)" fg:x="126" fg:w="13"/><text x="19.6346%" y="623.50">a..</text></g><g><title>_mi_heap_realloc_zero (13 samples, 2.00%)</title><rect x="19.3846%" y="597" width="2.0000%" height="15" fill="rgb(221,13,13)" fg:x="126" fg:w="13"/><text x="19.6346%" y="607.50">_..</text></g><g><title>mi_heap_malloc (13 samples, 2.00%)</title><rect x="19.3846%" y="581" width="2.0000%" height="15" fill="rgb(238,131,9)" fg:x="126" fg:w="13"/><text x="19.6346%" y="591.50">m..</text></g><g><title>_mi_malloc_generic (13 samples, 2.00%)</title><rect x="19.3846%" y="565" width="2.0000%" height="15" fill="rgb(211,50,8)" fg:x="126" fg:w="13"/><text x="19.6346%" y="575.50">_..</text></g><g><title>mi_find_page (13 samples, 2.00%)</title><rect x="19.3846%" y="549" width="2.0000%" height="15" fill="rgb(245,182,24)" fg:x="126" fg:w="13"/><text x="19.6346%" y="559.50">m..</text></g><g><title>mi_find_free_page (13 samples, 2.00%)</title><rect x="19.3846%" y="533" width="2.0000%" height="15" fill="rgb(242,14,37)" fg:x="126" fg:w="13"/><text x="19.6346%" y="543.50">m..</text></g><g><title>mi_page_queue_find_free_ex (13 samples, 2.00%)</title><rect x="19.3846%" y="517" width="2.0000%" height="15" fill="rgb(246,228,12)" fg:x="126" fg:w="13"/><text x="19.6346%" y="527.50">m..</text></g><g><title>mi_page_fresh (13 samples, 2.00%)</title><rect x="19.3846%" y="501" width="2.0000%" height="15" fill="rgb(213,55,15)" fg:x="126" fg:w="13"/><text x="19.6346%" y="511.50">m..</text></g><g><title>mi_page_fresh_alloc (13 samples, 2.00%)</title><rect x="19.3846%" y="485" width="2.0000%" height="15" fill="rgb(209,9,3)" fg:x="126" fg:w="13"/><text x="19.6346%" y="495.50">m..</text></g><g><title>mi_page_init (12 samples, 1.85%)</title><rect x="19.5385%" y="469" width="1.8462%" height="15" fill="rgb(230,59,30)" fg:x="127" fg:w="12"/><text x="19.7885%" y="479.50">m..</text></g><g><title>mi_page_extend_free (12 samples, 1.85%)</title><rect x="19.5385%" y="453" width="1.8462%" height="15" fill="rgb(209,121,21)" fg:x="127" fg:w="12"/><text x="19.7885%" y="463.50">m..</text></g><g><title>mi_page_extend_free (12 samples, 1.85%)</title><rect x="19.5385%" y="437" width="1.8462%" height="15" fill="rgb(220,109,13)" fg:x="127" fg:w="12"/><text x="19.7885%" y="447.50">m..</text></g><g><title>mi_page_free_list_extend (12 samples, 1.85%)</title><rect x="19.5385%" y="421" width="1.8462%" height="15" fill="rgb(232,18,1)" fg:x="127" fg:w="12"/><text x="19.7885%" y="431.50">m..</text></g><g><title>mi_block_set_next (12 samples, 1.85%)</title><rect x="19.5385%" y="405" width="1.8462%" height="15" fill="rgb(215,41,42)" fg:x="127" fg:w="12"/><text x="19.7885%" y="415.50">m..</text></g><g><title>mi_block_set_nextx (12 samples, 1.85%)</title><rect x="19.5385%" y="389" width="1.8462%" height="15" fill="rgb(224,123,36)" fg:x="127" fg:w="12"/><text x="19.7885%" y="399.50">m..</text></g><g><title>[unknown] (12 samples, 1.85%)</title><rect x="19.5385%" y="373" width="1.8462%" height="15" fill="rgb(240,125,3)" fg:x="127" fg:w="12"/><text x="19.7885%" y="383.50">[..</text></g><g><title>[unknown] (12 samples, 1.85%)</title><rect x="19.5385%" y="357" width="1.8462%" height="15" fill="rgb(205,98,50)" fg:x="127" fg:w="12"/><text x="19.7885%" y="367.50">[..</text></g><g><title>[unknown] (12 samples, 1.85%)</title><rect x="19.5385%" y="341" width="1.8462%" height="15" fill="rgb(205,185,37)" fg:x="127" fg:w="12"/><text x="19.7885%" y="351.50">[..</text></g><g><title>[unknown] (11 samples, 1.69%)</title><rect x="19.6923%" y="325" width="1.6923%" height="15" fill="rgb(238,207,15)" fg:x="128" fg:w="11"/><text x="19.9423%" y="335.50"></text></g><g><title>[unknown] (11 samples, 1.69%)</title><rect x="19.6923%" y="309" width="1.6923%" height="15" fill="rgb(213,199,42)" fg:x="128" fg:w="11"/><text x="19.9423%" y="319.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="20.4615%" y="293" width="0.9231%" height="15" fill="rgb(235,201,11)" fg:x="133" fg:w="6"/><text x="20.7115%" y="303.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="20.4615%" y="277" width="0.9231%" height="15" fill="rgb(207,46,11)" fg:x="133" fg:w="6"/><text x="20.7115%" y="287.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="20.4615%" y="261" width="0.9231%" height="15" fill="rgb(241,35,35)" fg:x="133" fg:w="6"/><text x="20.7115%" y="271.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="20.6154%" y="245" width="0.7692%" height="15" fill="rgb(243,32,47)" fg:x="134" fg:w="5"/><text x="20.8654%" y="255.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="20.6154%" y="229" width="0.7692%" height="15" fill="rgb(247,202,23)" fg:x="134" fg:w="5"/><text x="20.8654%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (20 samples, 3.08%)</title><rect x="19.2308%" y="709" width="3.0769%" height="15" fill="rgb(219,102,11)" fg:x="125" fg:w="20"/><text x="19.4808%" y="719.50">all..</text></g><g><title>core::ptr::write (6 samples, 0.92%)</title><rect x="21.3846%" y="693" width="0.9231%" height="15" fill="rgb(243,110,44)" fg:x="139" fg:w="6"/><text x="21.6346%" y="703.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="21.3846%" y="677" width="0.9231%" height="15" fill="rgb(222,74,54)" fg:x="139" fg:w="6"/><text x="21.6346%" y="687.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="21.3846%" y="661" width="0.9231%" height="15" fill="rgb(216,99,12)" fg:x="139" fg:w="6"/><text x="21.6346%" y="671.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="21.3846%" y="645" width="0.9231%" height="15" fill="rgb(226,22,26)" fg:x="139" fg:w="6"/><text x="21.6346%" y="655.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="21.3846%" y="629" width="0.9231%" height="15" fill="rgb(217,163,10)" fg:x="139" fg:w="6"/><text x="21.6346%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="21.3846%" y="613" width="0.9231%" height="15" fill="rgb(213,25,53)" fg:x="139" fg:w="6"/><text x="21.6346%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="21.3846%" y="597" width="0.9231%" height="15" fill="rgb(252,105,26)" fg:x="139" fg:w="6"/><text x="21.6346%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="21.3846%" y="581" width="0.9231%" height="15" fill="rgb(220,39,43)" fg:x="139" fg:w="6"/><text x="21.6346%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="21.3846%" y="565" width="0.9231%" height="15" fill="rgb(229,68,48)" fg:x="139" fg:w="6"/><text x="21.6346%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="21.3846%" y="549" width="0.9231%" height="15" fill="rgb(252,8,32)" fg:x="139" fg:w="6"/><text x="21.6346%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="21.3846%" y="533" width="0.9231%" height="15" fill="rgb(223,20,43)" fg:x="139" fg:w="6"/><text x="21.6346%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="21.3846%" y="517" width="0.9231%" height="15" fill="rgb(229,81,49)" fg:x="139" fg:w="6"/><text x="21.6346%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="22.1538%" y="501" width="0.1538%" height="15" fill="rgb(236,28,36)" fg:x="144" fg:w="1"/><text x="22.4038%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="22.1538%" y="485" width="0.1538%" height="15" fill="rgb(249,185,26)" fg:x="144" fg:w="1"/><text x="22.4038%" y="495.50"></text></g><g><title>demoparser::parsing::parser::Parser::find_beginning (2 samples, 0.31%)</title><rect x="22.3077%" y="709" width="0.3077%" height="15" fill="rgb(249,174,33)" fg:x="145" fg:w="2"/><text x="22.5577%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.62%)</title><rect x="24.0000%" y="693" width="0.6154%" height="15" fill="rgb(233,201,37)" fg:x="156" fg:w="4"/><text x="24.2500%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;demoparser::parsing::parser::ParsingMaps&gt;&gt;&gt; (5 samples, 0.77%)</title><rect x="24.6154%" y="693" width="0.7692%" height="15" fill="rgb(221,78,26)" fg:x="160" fg:w="5"/><text x="24.8654%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.77%)</title><rect x="24.6154%" y="677" width="0.7692%" height="15" fill="rgb(250,127,30)" fg:x="160" fg:w="5"/><text x="24.8654%" y="687.50"></text></g><g><title>demoparser::parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_datatable (1 samples, 0.15%)</title><rect x="25.3846%" y="693" width="0.1538%" height="15" fill="rgb(230,49,44)" fg:x="165" fg:w="1"/><text x="25.6346%" y="703.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_SendTable as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="25.3846%" y="677" width="0.1538%" height="15" fill="rgb(229,67,23)" fg:x="165" fg:w="1"/><text x="25.6346%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="25.3846%" y="661" width="0.1538%" height="15" fill="rgb(249,83,47)" fg:x="165" fg:w="1"/><text x="25.6346%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.15%)</title><rect x="25.3846%" y="645" width="0.1538%" height="15" fill="rgb(215,43,3)" fg:x="165" fg:w="1"/><text x="25.6346%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.15%)</title><rect x="25.3846%" y="629" width="0.1538%" height="15" fill="rgb(238,154,13)" fg:x="165" fg:w="1"/><text x="25.6346%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.15%)</title><rect x="25.3846%" y="613" width="0.1538%" height="15" fill="rgb(219,56,2)" fg:x="165" fg:w="1"/><text x="25.6346%" y="623.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.15%)</title><rect x="25.3846%" y="597" width="0.1538%" height="15" fill="rgb(233,0,4)" fg:x="165" fg:w="1"/><text x="25.6346%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="25.3846%" y="581" width="0.1538%" height="15" fill="rgb(235,30,7)" fg:x="165" fg:w="1"/><text x="25.6346%" y="591.50"></text></g><g><title>demoparser::parsing::read_bytes::ByteReader::read_i32 (1 samples, 0.15%)</title><rect x="25.5385%" y="677" width="0.1538%" height="15" fill="rgb(250,79,13)" fg:x="166" fg:w="1"/><text x="25.7885%" y="687.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_cmd (24 samples, 3.69%)</title><rect x="22.6154%" y="709" width="3.6923%" height="15" fill="rgb(211,146,34)" fg:x="147" fg:w="24"/><text x="22.8654%" y="719.50">demo..</text></g><g><title>demoparser::parsing::parser::Parser::parse_packet (5 samples, 0.77%)</title><rect x="25.5385%" y="693" width="0.7692%" height="15" fill="rgb(228,22,38)" fg:x="166" fg:w="5"/><text x="25.7885%" y="703.50"></text></g><g><title>demoparser::parsing::read_bytes::ByteReader::read_varint (4 samples, 0.62%)</title><rect x="25.6923%" y="677" width="0.6154%" height="15" fill="rgb(235,168,5)" fg:x="167" fg:w="4"/><text x="25.9423%" y="687.50"></text></g><g><title>demoparser::parsing::parser::Parser::start_io_threads::{{closure}} (56 samples, 8.62%)</title><rect x="18.0000%" y="741" width="8.6154%" height="15" fill="rgb(221,155,16)" fg:x="117" fg:w="56"/><text x="18.2500%" y="751.50">demoparser::..</text></g><g><title>demoparser::parsing::parser::Parser::parse_messages (56 samples, 8.62%)</title><rect x="18.0000%" y="725" width="8.6154%" height="15" fill="rgb(215,215,53)" fg:x="117" fg:w="56"/><text x="18.2500%" y="735.50">demoparser::..</text></g><g><title>demoparser::parsing::read_bytes::ByteReader::read_frame (2 samples, 0.31%)</title><rect x="26.3077%" y="709" width="0.3077%" height="15" fill="rgb(223,4,10)" fg:x="171" fg:w="2"/><text x="26.5577%" y="719.50"></text></g><g><title>demoparser::parsing::read_bytes::ByteReader::read_byte (2 samples, 0.31%)</title><rect x="26.3077%" y="693" width="0.3077%" height="15" fill="rgb(234,103,6)" fg:x="171" fg:w="2"/><text x="26.5577%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="26.7692%" y="709" width="0.1538%" height="15" fill="rgb(227,97,0)" fg:x="174" fg:w="1"/><text x="27.0192%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.46%)</title><rect x="26.9231%" y="709" width="0.4615%" height="15" fill="rgb(234,150,53)" fg:x="175" fg:w="3"/><text x="27.1731%" y="719.50"></text></g><g><title>core::ptr::write (3 samples, 0.46%)</title><rect x="26.9231%" y="693" width="0.4615%" height="15" fill="rgb(228,201,54)" fg:x="175" fg:w="3"/><text x="27.1731%" y="703.50"></text></g><g><title>[unknown] (3 samples, 0.46%)</title><rect x="26.9231%" y="677" width="0.4615%" height="15" fill="rgb(222,22,37)" fg:x="175" fg:w="3"/><text x="27.1731%" y="687.50"></text></g><g><title>[unknown] (3 samples, 0.46%)</title><rect x="26.9231%" y="661" width="0.4615%" height="15" fill="rgb(237,53,32)" fg:x="175" fg:w="3"/><text x="27.1731%" y="671.50"></text></g><g><title>[unknown] (3 samples, 0.46%)</title><rect x="26.9231%" y="645" width="0.4615%" height="15" fill="rgb(233,25,53)" fg:x="175" fg:w="3"/><text x="27.1731%" y="655.50"></text></g><g><title>[unknown] (3 samples, 0.46%)</title><rect x="26.9231%" y="629" width="0.4615%" height="15" fill="rgb(210,40,34)" fg:x="175" fg:w="3"/><text x="27.1731%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="27.0769%" y="613" width="0.3077%" height="15" fill="rgb(241,220,44)" fg:x="176" fg:w="2"/><text x="27.3269%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="27.0769%" y="597" width="0.3077%" height="15" fill="rgb(235,28,35)" fg:x="176" fg:w="2"/><text x="27.3269%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="27.0769%" y="581" width="0.3077%" height="15" fill="rgb(210,56,17)" fg:x="176" fg:w="2"/><text x="27.3269%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="27.2308%" y="565" width="0.1538%" height="15" fill="rgb(224,130,29)" fg:x="177" fg:w="1"/><text x="27.4808%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="27.2308%" y="549" width="0.1538%" height="15" fill="rgb(235,212,8)" fg:x="177" fg:w="1"/><text x="27.4808%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="27.2308%" y="533" width="0.1538%" height="15" fill="rgb(223,33,50)" fg:x="177" fg:w="1"/><text x="27.4808%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="27.2308%" y="517" width="0.1538%" height="15" fill="rgb(219,149,13)" fg:x="177" fg:w="1"/><text x="27.4808%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.15%)</title><rect x="27.3846%" y="613" width="0.1538%" height="15" fill="rgb(250,156,29)" fg:x="178" fg:w="1"/><text x="27.6346%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.15%)</title><rect x="27.3846%" y="597" width="0.1538%" height="15" fill="rgb(216,193,19)" fg:x="178" fg:w="1"/><text x="27.6346%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.15%)</title><rect x="27.3846%" y="581" width="0.1538%" height="15" fill="rgb(216,135,14)" fg:x="178" fg:w="1"/><text x="27.6346%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="27.3846%" y="565" width="0.1538%" height="15" fill="rgb(241,47,5)" fg:x="178" fg:w="1"/><text x="27.6346%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.15%)</title><rect x="27.3846%" y="549" width="0.1538%" height="15" fill="rgb(233,42,35)" fg:x="178" fg:w="1"/><text x="27.6346%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::data_table::ServerClasses&gt; (2 samples, 0.31%)</title><rect x="27.3846%" y="709" width="0.3077%" height="15" fill="rgb(231,13,6)" fg:x="178" fg:w="2"/><text x="27.6346%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::data_table::ServerClass&gt; (2 samples, 0.31%)</title><rect x="27.3846%" y="693" width="0.3077%" height="15" fill="rgb(207,181,40)" fg:x="178" fg:w="2"/><text x="27.6346%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::entities::Prop&gt;&gt; (2 samples, 0.31%)</title><rect x="27.3846%" y="677" width="0.3077%" height="15" fill="rgb(254,173,49)" fg:x="178" fg:w="2"/><text x="27.6346%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.31%)</title><rect x="27.3846%" y="661" width="0.3077%" height="15" fill="rgb(221,1,38)" fg:x="178" fg:w="2"/><text x="27.6346%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::entities::Prop]&gt; (2 samples, 0.31%)</title><rect x="27.3846%" y="645" width="0.3077%" height="15" fill="rgb(206,124,46)" fg:x="178" fg:w="2"/><text x="27.6346%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::entities::Prop&gt; (2 samples, 0.31%)</title><rect x="27.3846%" y="629" width="0.3077%" height="15" fill="rgb(249,21,11)" fg:x="178" fg:w="2"/><text x="27.6346%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;demoparser::parsing::variants::PropData&gt;&gt; (1 samples, 0.15%)</title><rect x="27.5385%" y="613" width="0.1538%" height="15" fill="rgb(222,201,40)" fg:x="179" fg:w="1"/><text x="27.7885%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;i32,csgoproto::netmessages::csvcmsg_game_event_list::Descriptor_t,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.15%)</title><rect x="27.6923%" y="709" width="0.1538%" height="15" fill="rgb(235,61,29)" fg:x="180" fg:w="1"/><text x="27.9423%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;i32,csgoproto::netmessages::csvcmsg_game_event_list::Descriptor_t,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.15%)</title><rect x="27.6923%" y="693" width="0.1538%" height="15" fill="rgb(219,207,3)" fg:x="180" fg:w="1"/><text x="27.9423%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(i32,csgoproto::netmessages::csvcmsg_game_event_list::Descriptor_t)&gt;&gt; (1 samples, 0.15%)</title><rect x="27.6923%" y="677" width="0.1538%" height="15" fill="rgb(222,56,46)" fg:x="180" fg:w="1"/><text x="27.9423%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="27.6923%" y="661" width="0.1538%" height="15" fill="rgb(239,76,54)" fg:x="180" fg:w="1"/><text x="27.9423%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.15%)</title><rect x="27.6923%" y="645" width="0.1538%" height="15" fill="rgb(231,124,27)" fg:x="180" fg:w="1"/><text x="27.9423%" y="655.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.15%)</title><rect x="27.6923%" y="629" width="0.1538%" height="15" fill="rgb(249,195,6)" fg:x="180" fg:w="1"/><text x="27.9423%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.15%)</title><rect x="27.6923%" y="613" width="0.1538%" height="15" fill="rgb(237,174,47)" fg:x="180" fg:w="1"/><text x="27.9423%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;(i32,csgoproto::netmessages::csvcmsg_game_event_list::Descriptor_t)&gt; (1 samples, 0.15%)</title><rect x="27.6923%" y="597" width="0.1538%" height="15" fill="rgb(206,201,31)" fg:x="180" fg:w="1"/><text x="27.9423%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;csgoproto::netmessages::csvcmsg_game_event_list::Descriptor_t&gt; (1 samples, 0.15%)</title><rect x="27.6923%" y="581" width="0.1538%" height="15" fill="rgb(231,57,52)" fg:x="180" fg:w="1"/><text x="27.9423%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;csgoproto::netmessages::csvcmsg_game_event_list::Key_t&gt;&gt; (1 samples, 0.15%)</title><rect x="27.6923%" y="565" width="0.1538%" height="15" fill="rgb(248,177,22)" fg:x="180" fg:w="1"/><text x="27.9423%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="27.6923%" y="549" width="0.1538%" height="15" fill="rgb(215,211,37)" fg:x="180" fg:w="1"/><text x="27.9423%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[csgoproto::netmessages::csvcmsg_game_event_list::Key_t]&gt; (1 samples, 0.15%)</title><rect x="27.6923%" y="533" width="0.1538%" height="15" fill="rgb(241,128,51)" fg:x="180" fg:w="1"/><text x="27.9423%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;csgoproto::netmessages::csvcmsg_game_event_list::Key_t&gt; (1 samples, 0.15%)</title><rect x="27.6923%" y="517" width="0.1538%" height="15" fill="rgb(227,165,31)" fg:x="180" fg:w="1"/><text x="27.9423%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1 samples, 0.15%)</title><rect x="27.6923%" y="501" width="0.1538%" height="15" fill="rgb(228,167,24)" fg:x="180" fg:w="1"/><text x="27.9423%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.15%)</title><rect x="27.6923%" y="485" width="0.1538%" height="15" fill="rgb(228,143,12)" fg:x="180" fg:w="1"/><text x="27.9423%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.15%)</title><rect x="27.6923%" y="469" width="0.1538%" height="15" fill="rgb(249,149,8)" fg:x="180" fg:w="1"/><text x="27.9423%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.15%)</title><rect x="27.6923%" y="453" width="0.1538%" height="15" fill="rgb(243,35,44)" fg:x="180" fg:w="1"/><text x="27.9423%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="27.6923%" y="437" width="0.1538%" height="15" fill="rgb(246,89,9)" fg:x="180" fg:w="1"/><text x="27.9423%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.15%)</title><rect x="27.6923%" y="421" width="0.1538%" height="15" fill="rgb(233,213,13)" fg:x="180" fg:w="1"/><text x="27.9423%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.15%)</title><rect x="27.6923%" y="405" width="0.1538%" height="15" fill="rgb(233,141,41)" fg:x="180" fg:w="1"/><text x="27.9423%" y="415.50"></text></g><g><title>mi_free (1 samples, 0.15%)</title><rect x="27.6923%" y="389" width="0.1538%" height="15" fill="rgb(239,167,4)" fg:x="180" fg:w="1"/><text x="27.9423%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;demoparser::parsing::parser::ParsingMaps&gt;&gt;&gt; (10 samples, 1.54%)</title><rect x="27.8462%" y="693" width="1.5385%" height="15" fill="rgb(209,217,16)" fg:x="181" fg:w="10"/><text x="28.0962%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 1.54%)</title><rect x="27.8462%" y="677" width="1.5385%" height="15" fill="rgb(219,88,35)" fg:x="181" fg:w="10"/><text x="28.0962%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (10 samples, 1.54%)</title><rect x="27.8462%" y="661" width="1.5385%" height="15" fill="rgb(220,193,23)" fg:x="181" fg:w="10"/><text x="28.0962%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_sub (10 samples, 1.54%)</title><rect x="27.8462%" y="645" width="1.5385%" height="15" fill="rgb(230,90,52)" fg:x="181" fg:w="10"/><text x="28.0962%" y="655.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.15%)</title><rect x="29.3846%" y="677" width="0.1538%" height="15" fill="rgb(252,106,19)" fg:x="191" fg:w="1"/><text x="29.6346%" y="687.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.15%)</title><rect x="29.3846%" y="661" width="0.1538%" height="15" fill="rgb(206,74,20)" fg:x="191" fg:w="1"/><text x="29.6346%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.15%)</title><rect x="30.4615%" y="629" width="0.1538%" height="15" fill="rgb(230,138,44)" fg:x="198" fg:w="1"/><text x="30.7115%" y="639.50"></text></g><g><title>__rust_realloc (1 samples, 0.15%)</title><rect x="30.6154%" y="565" width="0.1538%" height="15" fill="rgb(235,182,43)" fg:x="199" fg:w="1"/><text x="30.8654%" y="575.50"></text></g><g><title>_mi_usable_size (1 samples, 0.15%)</title><rect x="30.7692%" y="549" width="0.1538%" height="15" fill="rgb(242,16,51)" fg:x="200" fg:w="1"/><text x="31.0192%" y="559.50"></text></g><g><title>_mi_segment_page_of (1 samples, 0.15%)</title><rect x="30.7692%" y="533" width="0.1538%" height="15" fill="rgb(248,9,4)" fg:x="200" fg:w="1"/><text x="31.0192%" y="543.50"></text></g><g><title>mi_slice_first (1 samples, 0.15%)</title><rect x="30.7692%" y="517" width="0.1538%" height="15" fill="rgb(210,31,22)" fg:x="200" fg:w="1"/><text x="31.0192%" y="527.50"></text></g><g><title>_mi_deferred_free (1 samples, 0.15%)</title><rect x="30.9231%" y="517" width="0.1538%" height="15" fill="rgb(239,54,39)" fg:x="201" fg:w="1"/><text x="31.1731%" y="527.50"></text></g><g><title>_mi_page_free_collect (1 samples, 0.15%)</title><rect x="31.0769%" y="485" width="0.1538%" height="15" fill="rgb(230,99,41)" fg:x="202" fg:w="1"/><text x="31.3269%" y="495.50"></text></g><g><title>_mi_malloc_generic (17 samples, 2.62%)</title><rect x="30.9231%" y="533" width="2.6154%" height="15" fill="rgb(253,106,12)" fg:x="201" fg:w="17"/><text x="31.1731%" y="543.50">_m..</text></g><g><title>mi_find_page (16 samples, 2.46%)</title><rect x="31.0769%" y="517" width="2.4615%" height="15" fill="rgb(213,46,41)" fg:x="202" fg:w="16"/><text x="31.3269%" y="527.50">mi..</text></g><g><title>mi_find_free_page (16 samples, 2.46%)</title><rect x="31.0769%" y="501" width="2.4615%" height="15" fill="rgb(215,133,35)" fg:x="202" fg:w="16"/><text x="31.3269%" y="511.50">mi..</text></g><g><title>mi_page_queue_find_free_ex (15 samples, 2.31%)</title><rect x="31.2308%" y="485" width="2.3077%" height="15" fill="rgb(213,28,5)" fg:x="203" fg:w="15"/><text x="31.4808%" y="495.50">m..</text></g><g><title>mi_page_extend_free (15 samples, 2.31%)</title><rect x="31.2308%" y="469" width="2.3077%" height="15" fill="rgb(215,77,49)" fg:x="203" fg:w="15"/><text x="31.4808%" y="479.50">m..</text></g><g><title>mi_page_extend_free (15 samples, 2.31%)</title><rect x="31.2308%" y="453" width="2.3077%" height="15" fill="rgb(248,100,22)" fg:x="203" fg:w="15"/><text x="31.4808%" y="463.50">m..</text></g><g><title>mi_page_free_list_extend (15 samples, 2.31%)</title><rect x="31.2308%" y="437" width="2.3077%" height="15" fill="rgb(208,67,9)" fg:x="203" fg:w="15"/><text x="31.4808%" y="447.50">m..</text></g><g><title>mi_block_set_next (15 samples, 2.31%)</title><rect x="31.2308%" y="421" width="2.3077%" height="15" fill="rgb(219,133,21)" fg:x="203" fg:w="15"/><text x="31.4808%" y="431.50">m..</text></g><g><title>mi_block_set_nextx (15 samples, 2.31%)</title><rect x="31.2308%" y="405" width="2.3077%" height="15" fill="rgb(246,46,29)" fg:x="203" fg:w="15"/><text x="31.4808%" y="415.50">m..</text></g><g><title>[unknown] (15 samples, 2.31%)</title><rect x="31.2308%" y="389" width="2.3077%" height="15" fill="rgb(246,185,52)" fg:x="203" fg:w="15"/><text x="31.4808%" y="399.50">[..</text></g><g><title>[unknown] (15 samples, 2.31%)</title><rect x="31.2308%" y="373" width="2.3077%" height="15" fill="rgb(252,136,11)" fg:x="203" fg:w="15"/><text x="31.4808%" y="383.50">[..</text></g><g><title>[unknown] (15 samples, 2.31%)</title><rect x="31.2308%" y="357" width="2.3077%" height="15" fill="rgb(219,138,53)" fg:x="203" fg:w="15"/><text x="31.4808%" y="367.50">[..</text></g><g><title>[unknown] (14 samples, 2.15%)</title><rect x="31.3846%" y="341" width="2.1538%" height="15" fill="rgb(211,51,23)" fg:x="204" fg:w="14"/><text x="31.6346%" y="351.50">[..</text></g><g><title>[unknown] (12 samples, 1.85%)</title><rect x="31.6923%" y="325" width="1.8462%" height="15" fill="rgb(247,221,28)" fg:x="206" fg:w="12"/><text x="31.9423%" y="335.50">[..</text></g><g><title>[unknown] (12 samples, 1.85%)</title><rect x="31.6923%" y="309" width="1.8462%" height="15" fill="rgb(251,222,45)" fg:x="206" fg:w="12"/><text x="31.9423%" y="319.50">[..</text></g><g><title>[unknown] (12 samples, 1.85%)</title><rect x="31.6923%" y="293" width="1.8462%" height="15" fill="rgb(217,162,53)" fg:x="206" fg:w="12"/><text x="31.9423%" y="303.50">[..</text></g><g><title>[unknown] (12 samples, 1.85%)</title><rect x="31.6923%" y="277" width="1.8462%" height="15" fill="rgb(229,93,14)" fg:x="206" fg:w="12"/><text x="31.9423%" y="287.50">[..</text></g><g><title>[unknown] (11 samples, 1.69%)</title><rect x="31.8462%" y="261" width="1.6923%" height="15" fill="rgb(209,67,49)" fg:x="207" fg:w="11"/><text x="32.0962%" y="271.50"></text></g><g><title>[unknown] (11 samples, 1.69%)</title><rect x="31.8462%" y="245" width="1.6923%" height="15" fill="rgb(213,87,29)" fg:x="207" fg:w="11"/><text x="32.0962%" y="255.50"></text></g><g><title>[unknown] (10 samples, 1.54%)</title><rect x="32.0000%" y="229" width="1.5385%" height="15" fill="rgb(205,151,52)" fg:x="208" fg:w="10"/><text x="32.2500%" y="239.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="33.2308%" y="213" width="0.3077%" height="15" fill="rgb(253,215,39)" fg:x="216" fg:w="2"/><text x="33.4808%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="33.3846%" y="197" width="0.1538%" height="15" fill="rgb(221,220,41)" fg:x="217" fg:w="1"/><text x="33.6346%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="33.3846%" y="181" width="0.1538%" height="15" fill="rgb(218,133,21)" fg:x="217" fg:w="1"/><text x="33.6346%" y="191.50"></text></g><g><title>_mi_heap_realloc_zero (19 samples, 2.92%)</title><rect x="30.7692%" y="565" width="2.9231%" height="15" fill="rgb(221,193,43)" fg:x="200" fg:w="19"/><text x="31.0192%" y="575.50">_m..</text></g><g><title>mi_heap_malloc (18 samples, 2.77%)</title><rect x="30.9231%" y="549" width="2.7692%" height="15" fill="rgb(240,128,52)" fg:x="201" fg:w="18"/><text x="31.1731%" y="559.50">mi..</text></g><g><title>mi_page_free_list_extend (1 samples, 0.15%)</title><rect x="33.5385%" y="533" width="0.1538%" height="15" fill="rgb(253,114,12)" fg:x="218" fg:w="1"/><text x="33.7885%" y="543.50"></text></g><g><title>mi_block_set_next (1 samples, 0.15%)</title><rect x="33.5385%" y="517" width="0.1538%" height="15" fill="rgb(215,223,47)" fg:x="218" fg:w="1"/><text x="33.7885%" y="527.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.15%)</title><rect x="33.5385%" y="501" width="0.1538%" height="15" fill="rgb(248,225,23)" fg:x="218" fg:w="1"/><text x="33.7885%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="33.5385%" y="485" width="0.1538%" height="15" fill="rgb(250,108,0)" fg:x="218" fg:w="1"/><text x="33.7885%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (21 samples, 3.23%)</title><rect x="30.6154%" y="613" width="3.2308%" height="15" fill="rgb(228,208,7)" fg:x="199" fg:w="21"/><text x="30.8654%" y="623.50">&lt;al..</text></g><g><title>alloc::alloc::Global::grow_impl (21 samples, 3.23%)</title><rect x="30.6154%" y="597" width="3.2308%" height="15" fill="rgb(244,45,10)" fg:x="199" fg:w="21"/><text x="30.8654%" y="607.50">all..</text></g><g><title>alloc::alloc::realloc (21 samples, 3.23%)</title><rect x="30.6154%" y="581" width="3.2308%" height="15" fill="rgb(207,125,25)" fg:x="199" fg:w="21"/><text x="30.8654%" y="591.50">all..</text></g><g><title>mi_realloc (1 samples, 0.15%)</title><rect x="33.6923%" y="565" width="0.1538%" height="15" fill="rgb(210,195,18)" fg:x="219" fg:w="1"/><text x="33.9423%" y="575.50"></text></g><g><title>mi_get_default_heap (1 samples, 0.15%)</title><rect x="33.6923%" y="549" width="0.1538%" height="15" fill="rgb(249,80,12)" fg:x="219" fg:w="1"/><text x="33.9423%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (24 samples, 3.69%)</title><rect x="30.4615%" y="661" width="3.6923%" height="15" fill="rgb(221,65,9)" fg:x="198" fg:w="24"/><text x="30.7115%" y="671.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (24 samples, 3.69%)</title><rect x="30.4615%" y="645" width="3.6923%" height="15" fill="rgb(235,49,36)" fg:x="198" fg:w="24"/><text x="30.7115%" y="655.50">allo..</text></g><g><title>alloc::raw_vec::finish_grow (23 samples, 3.54%)</title><rect x="30.6154%" y="629" width="3.5385%" height="15" fill="rgb(225,32,20)" fg:x="199" fg:w="23"/><text x="30.8654%" y="639.50">all..</text></g><g><title>mi_malloc (2 samples, 0.31%)</title><rect x="33.8462%" y="613" width="0.3077%" height="15" fill="rgb(215,141,46)" fg:x="220" fg:w="2"/><text x="34.0962%" y="623.50"></text></g><g><title>mi_heap_malloc (2 samples, 0.31%)</title><rect x="33.8462%" y="597" width="0.3077%" height="15" fill="rgb(250,160,47)" fg:x="220" fg:w="2"/><text x="34.0962%" y="607.50"></text></g><g><title>mi_heap_malloc_small (2 samples, 0.31%)</title><rect x="33.8462%" y="581" width="0.3077%" height="15" fill="rgb(216,222,40)" fg:x="220" fg:w="2"/><text x="34.0962%" y="591.50"></text></g><g><title>_mi_page_malloc (2 samples, 0.31%)</title><rect x="33.8462%" y="565" width="0.3077%" height="15" fill="rgb(234,217,39)" fg:x="220" fg:w="2"/><text x="34.0962%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;csgoproto::netmessages::CSVCMsg_PacketEntities&gt; (1 samples, 0.15%)</title><rect x="34.1538%" y="661" width="0.1538%" height="15" fill="rgb(207,178,40)" fg:x="222" fg:w="1"/><text x="34.4038%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (1 samples, 0.15%)</title><rect x="34.1538%" y="645" width="0.1538%" height="15" fill="rgb(221,136,13)" fg:x="222" fg:w="1"/><text x="34.4038%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.15%)</title><rect x="34.1538%" y="629" width="0.1538%" height="15" fill="rgb(249,199,10)" fg:x="222" fg:w="1"/><text x="34.4038%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.15%)</title><rect x="34.1538%" y="613" width="0.1538%" height="15" fill="rgb(249,222,13)" fg:x="222" fg:w="1"/><text x="34.4038%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="34.1538%" y="597" width="0.1538%" height="15" fill="rgb(244,185,38)" fg:x="222" fg:w="1"/><text x="34.4038%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.15%)</title><rect x="34.1538%" y="581" width="0.1538%" height="15" fill="rgb(236,202,9)" fg:x="222" fg:w="1"/><text x="34.4038%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.15%)</title><rect x="34.1538%" y="565" width="0.1538%" height="15" fill="rgb(250,229,37)" fg:x="222" fg:w="1"/><text x="34.4038%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.15%)</title><rect x="34.1538%" y="549" width="0.1538%" height="15" fill="rgb(206,174,23)" fg:x="222" fg:w="1"/><text x="34.4038%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.15%)</title><rect x="34.1538%" y="533" width="0.1538%" height="15" fill="rgb(211,33,43)" fg:x="222" fg:w="1"/><text x="34.4038%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.15%)</title><rect x="34.1538%" y="517" width="0.1538%" height="15" fill="rgb(245,58,50)" fg:x="222" fg:w="1"/><text x="34.4038%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.15%)</title><rect x="34.1538%" y="501" width="0.1538%" height="15" fill="rgb(244,68,36)" fg:x="222" fg:w="1"/><text x="34.4038%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.15%)</title><rect x="34.1538%" y="485" width="0.1538%" height="15" fill="rgb(232,229,15)" fg:x="222" fg:w="1"/><text x="34.4038%" y="495.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.15%)</title><rect x="34.1538%" y="469" width="0.1538%" height="15" fill="rgb(254,30,23)" fg:x="222" fg:w="1"/><text x="34.4038%" y="479.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.15%)</title><rect x="34.1538%" y="453" width="0.1538%" height="15" fill="rgb(235,160,14)" fg:x="222" fg:w="1"/><text x="34.4038%" y="463.50"></text></g><g><title>mi_page_free_list_extend (1 samples, 0.15%)</title><rect x="34.1538%" y="437" width="0.1538%" height="15" fill="rgb(212,155,44)" fg:x="222" fg:w="1"/><text x="34.4038%" y="447.50"></text></g><g><title>mi_block_set_next (1 samples, 0.15%)</title><rect x="34.1538%" y="421" width="0.1538%" height="15" fill="rgb(226,2,50)" fg:x="222" fg:w="1"/><text x="34.4038%" y="431.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.15%)</title><rect x="34.1538%" y="405" width="0.1538%" height="15" fill="rgb(234,177,6)" fg:x="222" fg:w="1"/><text x="34.4038%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="34.1538%" y="389" width="0.1538%" height="15" fill="rgb(217,24,9)" fg:x="222" fg:w="1"/><text x="34.4038%" y="399.50"></text></g><g><title>csgoproto::netmessages::CCLCMsg_Move::data (1 samples, 0.15%)</title><rect x="34.3077%" y="661" width="0.1538%" height="15" fill="rgb(220,13,46)" fg:x="223" fg:w="1"/><text x="34.5577%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.15%)</title><rect x="34.3077%" y="645" width="0.1538%" height="15" fill="rgb(239,221,27)" fg:x="223" fg:w="1"/><text x="34.5577%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3 samples, 0.46%)</title><rect x="35.5385%" y="645" width="0.4615%" height="15" fill="rgb(222,198,25)" fg:x="231" fg:w="3"/><text x="35.7885%" y="655.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3 samples, 0.46%)</title><rect x="35.5385%" y="629" width="0.4615%" height="15" fill="rgb(211,99,13)" fg:x="231" fg:w="3"/><text x="35.7885%" y="639.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.46%)</title><rect x="35.5385%" y="613" width="0.4615%" height="15" fill="rgb(232,111,31)" fg:x="231" fg:w="3"/><text x="35.7885%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.46%)</title><rect x="36.0000%" y="645" width="0.4615%" height="15" fill="rgb(245,82,37)" fg:x="234" fg:w="3"/><text x="36.2500%" y="655.50"></text></g><g><title>core::ptr::write (2 samples, 0.31%)</title><rect x="36.1538%" y="629" width="0.3077%" height="15" fill="rgb(227,149,46)" fg:x="235" fg:w="2"/><text x="36.4038%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="36.1538%" y="613" width="0.3077%" height="15" fill="rgb(218,36,50)" fg:x="235" fg:w="2"/><text x="36.4038%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="36.1538%" y="597" width="0.3077%" height="15" fill="rgb(226,80,48)" fg:x="235" fg:w="2"/><text x="36.4038%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="36.1538%" y="581" width="0.3077%" height="15" fill="rgb(238,224,15)" fg:x="235" fg:w="2"/><text x="36.4038%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="36.1538%" y="565" width="0.3077%" height="15" fill="rgb(241,136,10)" fg:x="235" fg:w="2"/><text x="36.4038%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="36.3077%" y="549" width="0.1538%" height="15" fill="rgb(208,32,45)" fg:x="236" fg:w="1"/><text x="36.5577%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="36.3077%" y="533" width="0.1538%" height="15" fill="rgb(207,135,9)" fg:x="236" fg:w="1"/><text x="36.5577%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="36.3077%" y="517" width="0.1538%" height="15" fill="rgb(206,86,44)" fg:x="236" fg:w="1"/><text x="36.5577%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="36.3077%" y="501" width="0.1538%" height="15" fill="rgb(245,177,15)" fg:x="236" fg:w="1"/><text x="36.5577%" y="511.50"></text></g><g><title>__rg_alloc (1 samples, 0.15%)</title><rect x="36.4615%" y="533" width="0.1538%" height="15" fill="rgb(206,64,50)" fg:x="237" fg:w="1"/><text x="36.7115%" y="543.50"></text></g><g><title>&lt;mimalloc::MiMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.15%)</title><rect x="36.4615%" y="517" width="0.1538%" height="15" fill="rgb(234,36,40)" fg:x="237" fg:w="1"/><text x="36.7115%" y="527.50"></text></g><g><title>mimalloc::may_use_unaligned_api (1 samples, 0.15%)</title><rect x="36.4615%" y="501" width="0.1538%" height="15" fill="rgb(213,64,8)" fg:x="237" fg:w="1"/><text x="36.7115%" y="511.50"></text></g><g><title>mi_page_extend_free (19 samples, 2.92%)</title><rect x="36.6154%" y="469" width="2.9231%" height="15" fill="rgb(210,75,36)" fg:x="238" fg:w="19"/><text x="36.8654%" y="479.50">mi..</text></g><g><title>mi_page_extend_free (19 samples, 2.92%)</title><rect x="36.6154%" y="453" width="2.9231%" height="15" fill="rgb(229,88,21)" fg:x="238" fg:w="19"/><text x="36.8654%" y="463.50">mi..</text></g><g><title>mi_page_free_list_extend (19 samples, 2.92%)</title><rect x="36.6154%" y="437" width="2.9231%" height="15" fill="rgb(252,204,47)" fg:x="238" fg:w="19"/><text x="36.8654%" y="447.50">mi..</text></g><g><title>mi_block_set_next (17 samples, 2.62%)</title><rect x="36.9231%" y="421" width="2.6154%" height="15" fill="rgb(208,77,27)" fg:x="240" fg:w="17"/><text x="37.1731%" y="431.50">mi..</text></g><g><title>mi_block_set_nextx (17 samples, 2.62%)</title><rect x="36.9231%" y="405" width="2.6154%" height="15" fill="rgb(221,76,26)" fg:x="240" fg:w="17"/><text x="37.1731%" y="415.50">mi..</text></g><g><title>[unknown] (17 samples, 2.62%)</title><rect x="36.9231%" y="389" width="2.6154%" height="15" fill="rgb(225,139,18)" fg:x="240" fg:w="17"/><text x="37.1731%" y="399.50">[u..</text></g><g><title>[unknown] (15 samples, 2.31%)</title><rect x="37.2308%" y="373" width="2.3077%" height="15" fill="rgb(230,137,11)" fg:x="242" fg:w="15"/><text x="37.4808%" y="383.50">[..</text></g><g><title>[unknown] (15 samples, 2.31%)</title><rect x="37.2308%" y="357" width="2.3077%" height="15" fill="rgb(212,28,1)" fg:x="242" fg:w="15"/><text x="37.4808%" y="367.50">[..</text></g><g><title>[unknown] (13 samples, 2.00%)</title><rect x="37.5385%" y="341" width="2.0000%" height="15" fill="rgb(248,164,17)" fg:x="244" fg:w="13"/><text x="37.7885%" y="351.50">[..</text></g><g><title>[unknown] (10 samples, 1.54%)</title><rect x="38.0000%" y="325" width="1.5385%" height="15" fill="rgb(222,171,42)" fg:x="247" fg:w="10"/><text x="38.2500%" y="335.50"></text></g><g><title>[unknown] (8 samples, 1.23%)</title><rect x="38.3077%" y="309" width="1.2308%" height="15" fill="rgb(243,84,45)" fg:x="249" fg:w="8"/><text x="38.5577%" y="319.50"></text></g><g><title>[unknown] (8 samples, 1.23%)</title><rect x="38.3077%" y="293" width="1.2308%" height="15" fill="rgb(252,49,23)" fg:x="249" fg:w="8"/><text x="38.5577%" y="303.50"></text></g><g><title>[unknown] (8 samples, 1.23%)</title><rect x="38.3077%" y="277" width="1.2308%" height="15" fill="rgb(215,19,7)" fg:x="249" fg:w="8"/><text x="38.5577%" y="287.50"></text></g><g><title>[unknown] (8 samples, 1.23%)</title><rect x="38.3077%" y="261" width="1.2308%" height="15" fill="rgb(238,81,41)" fg:x="249" fg:w="8"/><text x="38.5577%" y="271.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="38.6154%" y="245" width="0.9231%" height="15" fill="rgb(210,199,37)" fg:x="251" fg:w="6"/><text x="38.8654%" y="255.50"></text></g><g><title>[unknown] (4 samples, 0.62%)</title><rect x="38.9231%" y="229" width="0.6154%" height="15" fill="rgb(244,192,49)" fg:x="253" fg:w="4"/><text x="39.1731%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="39.3846%" y="213" width="0.1538%" height="15" fill="rgb(226,211,11)" fg:x="256" fg:w="1"/><text x="39.6346%" y="223.50"></text></g><g><title>_mi_malloc_generic (20 samples, 3.08%)</title><rect x="36.6154%" y="533" width="3.0769%" height="15" fill="rgb(236,162,54)" fg:x="238" fg:w="20"/><text x="36.8654%" y="543.50">_mi..</text></g><g><title>mi_find_page (20 samples, 3.08%)</title><rect x="36.6154%" y="517" width="3.0769%" height="15" fill="rgb(220,229,9)" fg:x="238" fg:w="20"/><text x="36.8654%" y="527.50">mi_..</text></g><g><title>mi_find_free_page (20 samples, 3.08%)</title><rect x="36.6154%" y="501" width="3.0769%" height="15" fill="rgb(250,87,22)" fg:x="238" fg:w="20"/><text x="36.8654%" y="511.50">mi_..</text></g><g><title>mi_page_queue_find_free_ex (20 samples, 3.08%)</title><rect x="36.6154%" y="485" width="3.0769%" height="15" fill="rgb(239,43,17)" fg:x="238" fg:w="20"/><text x="36.8654%" y="495.50">mi_..</text></g><g><title>mi_page_fresh (1 samples, 0.15%)</title><rect x="39.5385%" y="469" width="0.1538%" height="15" fill="rgb(231,177,25)" fg:x="257" fg:w="1"/><text x="39.7885%" y="479.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.15%)</title><rect x="39.5385%" y="453" width="0.1538%" height="15" fill="rgb(219,179,1)" fg:x="257" fg:w="1"/><text x="39.7885%" y="463.50"></text></g><g><title>mi_segments_page_alloc (1 samples, 0.15%)</title><rect x="39.5385%" y="437" width="0.1538%" height="15" fill="rgb(238,219,53)" fg:x="257" fg:w="1"/><text x="39.7885%" y="447.50"></text></g><g><title>mi_segments_page_find_and_allocate (1 samples, 0.15%)</title><rect x="39.5385%" y="421" width="0.1538%" height="15" fill="rgb(232,167,36)" fg:x="257" fg:w="1"/><text x="39.7885%" y="431.50"></text></g><g><title>mi_segment_span_allocate (1 samples, 0.15%)</title><rect x="39.5385%" y="405" width="0.1538%" height="15" fill="rgb(244,19,51)" fg:x="257" fg:w="1"/><text x="39.7885%" y="415.50"></text></g><g><title>mi_segment_ensure_committed (1 samples, 0.15%)</title><rect x="39.5385%" y="389" width="0.1538%" height="15" fill="rgb(224,6,22)" fg:x="257" fg:w="1"/><text x="39.7885%" y="399.50"></text></g><g><title>mi_segment_commitx (1 samples, 0.15%)</title><rect x="39.5385%" y="373" width="0.1538%" height="15" fill="rgb(224,145,5)" fg:x="257" fg:w="1"/><text x="39.7885%" y="383.50"></text></g><g><title>_mi_os_commit (1 samples, 0.15%)</title><rect x="39.5385%" y="357" width="0.1538%" height="15" fill="rgb(234,130,49)" fg:x="257" fg:w="1"/><text x="39.7885%" y="367.50"></text></g><g><title>mi_os_commitx (1 samples, 0.15%)</title><rect x="39.5385%" y="341" width="0.1538%" height="15" fill="rgb(254,6,2)" fg:x="257" fg:w="1"/><text x="39.7885%" y="351.50"></text></g><g><title>__GI___mprotect (1 samples, 0.15%)</title><rect x="39.5385%" y="325" width="0.1538%" height="15" fill="rgb(208,96,46)" fg:x="257" fg:w="1"/><text x="39.7885%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="39.5385%" y="309" width="0.1538%" height="15" fill="rgb(239,3,39)" fg:x="257" fg:w="1"/><text x="39.7885%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="39.5385%" y="293" width="0.1538%" height="15" fill="rgb(233,210,1)" fg:x="257" fg:w="1"/><text x="39.7885%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="39.5385%" y="277" width="0.1538%" height="15" fill="rgb(244,137,37)" fg:x="257" fg:w="1"/><text x="39.7885%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="39.5385%" y="261" width="0.1538%" height="15" fill="rgb(240,136,2)" fg:x="257" fg:w="1"/><text x="39.7885%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="39.5385%" y="245" width="0.1538%" height="15" fill="rgb(239,18,37)" fg:x="257" fg:w="1"/><text x="39.7885%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="39.5385%" y="229" width="0.1538%" height="15" fill="rgb(218,185,22)" fg:x="257" fg:w="1"/><text x="39.7885%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="39.5385%" y="213" width="0.1538%" height="15" fill="rgb(225,218,4)" fg:x="257" fg:w="1"/><text x="39.7885%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="39.5385%" y="197" width="0.1538%" height="15" fill="rgb(230,182,32)" fg:x="257" fg:w="1"/><text x="39.7885%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (25 samples, 3.85%)</title><rect x="36.4615%" y="645" width="3.8462%" height="15" fill="rgb(242,56,43)" fg:x="237" fg:w="25"/><text x="36.7115%" y="655.50">allo..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (25 samples, 3.85%)</title><rect x="36.4615%" y="629" width="3.8462%" height="15" fill="rgb(233,99,24)" fg:x="237" fg:w="25"/><text x="36.7115%" y="639.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (25 samples, 3.85%)</title><rect x="36.4615%" y="613" width="3.8462%" height="15" fill="rgb(234,209,42)" fg:x="237" fg:w="25"/><text x="36.7115%" y="623.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (25 samples, 3.85%)</title><rect x="36.4615%" y="597" width="3.8462%" height="15" fill="rgb(227,7,12)" fg:x="237" fg:w="25"/><text x="36.7115%" y="607.50">allo..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 3.85%)</title><rect x="36.4615%" y="581" width="3.8462%" height="15" fill="rgb(245,203,43)" fg:x="237" fg:w="25"/><text x="36.7115%" y="591.50">&lt;all..</text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 3.85%)</title><rect x="36.4615%" y="565" width="3.8462%" height="15" fill="rgb(238,205,33)" fg:x="237" fg:w="25"/><text x="36.7115%" y="575.50">allo..</text></g><g><title>alloc::alloc::alloc (25 samples, 3.85%)</title><rect x="36.4615%" y="549" width="3.8462%" height="15" fill="rgb(231,56,7)" fg:x="237" fg:w="25"/><text x="36.7115%" y="559.50">allo..</text></g><g><title>mi_malloc (4 samples, 0.62%)</title><rect x="39.6923%" y="533" width="0.6154%" height="15" fill="rgb(244,186,29)" fg:x="258" fg:w="4"/><text x="39.9423%" y="543.50"></text></g><g><title>mi_heap_malloc (4 samples, 0.62%)</title><rect x="39.6923%" y="517" width="0.6154%" height="15" fill="rgb(234,111,31)" fg:x="258" fg:w="4"/><text x="39.9423%" y="527.50"></text></g><g><title>mi_heap_malloc_small (4 samples, 0.62%)</title><rect x="39.6923%" y="501" width="0.6154%" height="15" fill="rgb(241,149,10)" fg:x="258" fg:w="4"/><text x="39.9423%" y="511.50"></text></g><g><title>_mi_page_malloc (4 samples, 0.62%)</title><rect x="39.6923%" y="485" width="0.6154%" height="15" fill="rgb(249,206,44)" fg:x="258" fg:w="4"/><text x="39.9423%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="40.1538%" y="469" width="0.1538%" height="15" fill="rgb(251,153,30)" fg:x="261" fg:w="1"/><text x="40.4038%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="40.1538%" y="453" width="0.1538%" height="15" fill="rgb(239,152,38)" fg:x="261" fg:w="1"/><text x="40.4038%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="40.1538%" y="437" width="0.1538%" height="15" fill="rgb(249,139,47)" fg:x="261" fg:w="1"/><text x="40.4038%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="40.1538%" y="421" width="0.1538%" height="15" fill="rgb(244,64,35)" fg:x="261" fg:w="1"/><text x="40.4038%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="40.1538%" y="405" width="0.1538%" height="15" fill="rgb(216,46,15)" fg:x="261" fg:w="1"/><text x="40.4038%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="40.1538%" y="389" width="0.1538%" height="15" fill="rgb(250,74,19)" fg:x="261" fg:w="1"/><text x="40.4038%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="40.1538%" y="373" width="0.1538%" height="15" fill="rgb(249,42,33)" fg:x="261" fg:w="1"/><text x="40.4038%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="40.1538%" y="357" width="0.1538%" height="15" fill="rgb(242,149,17)" fg:x="261" fg:w="1"/><text x="40.4038%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.15%)</title><rect x="40.3077%" y="645" width="0.1538%" height="15" fill="rgb(244,29,21)" fg:x="262" fg:w="1"/><text x="40.5577%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::variants::PropData&gt; (5 samples, 0.77%)</title><rect x="40.4615%" y="645" width="0.7692%" height="15" fill="rgb(220,130,37)" fg:x="263" fg:w="5"/><text x="40.7115%" y="655.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (14 samples, 2.15%)</title><rect x="41.5385%" y="597" width="2.1538%" height="15" fill="rgb(211,67,2)" fg:x="270" fg:w="14"/><text x="41.7885%" y="607.50">&lt;..</text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (14 samples, 2.15%)</title><rect x="41.5385%" y="581" width="2.1538%" height="15" fill="rgb(235,68,52)" fg:x="270" fg:w="14"/><text x="41.7885%" y="591.50">&lt;..</text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (14 samples, 2.15%)</title><rect x="41.5385%" y="565" width="2.1538%" height="15" fill="rgb(246,142,3)" fg:x="270" fg:w="14"/><text x="41.7885%" y="575.50">c..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (14 samples, 2.15%)</title><rect x="41.5385%" y="549" width="2.1538%" height="15" fill="rgb(241,25,7)" fg:x="270" fg:w="14"/><text x="41.7885%" y="559.50">c..</text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (14 samples, 2.15%)</title><rect x="41.5385%" y="533" width="2.1538%" height="15" fill="rgb(242,119,39)" fg:x="270" fg:w="14"/><text x="41.7885%" y="543.50">c..</text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (14 samples, 2.15%)</title><rect x="41.5385%" y="517" width="2.1538%" height="15" fill="rgb(241,98,45)" fg:x="270" fg:w="14"/><text x="41.7885%" y="527.50">&lt;..</text></g><g><title>[libc.so.6] (3 samples, 0.46%)</title><rect x="43.2308%" y="501" width="0.4615%" height="15" fill="rgb(254,28,30)" fg:x="281" fg:w="3"/><text x="43.4808%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (19 samples, 2.92%)</title><rect x="41.2308%" y="645" width="2.9231%" height="15" fill="rgb(241,142,54)" fg:x="268" fg:w="19"/><text x="41.4808%" y="655.50">co..</text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (19 samples, 2.92%)</title><rect x="41.2308%" y="629" width="2.9231%" height="15" fill="rgb(222,85,15)" fg:x="268" fg:w="19"/><text x="41.4808%" y="639.50">&lt;T..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (19 samples, 2.92%)</title><rect x="41.2308%" y="613" width="2.9231%" height="15" fill="rgb(210,85,47)" fg:x="268" fg:w="19"/><text x="41.4808%" y="623.50">&lt;c..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.46%)</title><rect x="43.6923%" y="597" width="0.4615%" height="15" fill="rgb(224,206,25)" fg:x="284" fg:w="3"/><text x="43.9423%" y="607.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_boolie (1 samples, 0.15%)</title><rect x="44.6154%" y="629" width="0.1538%" height="15" fill="rgb(243,201,19)" fg:x="290" fg:w="1"/><text x="44.8654%" y="639.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bit (1 samples, 0.15%)</title><rect x="44.6154%" y="613" width="0.1538%" height="15" fill="rgb(236,59,4)" fg:x="290" fg:w="1"/><text x="44.8654%" y="623.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.15%)</title><rect x="44.6154%" y="597" width="0.1538%" height="15" fill="rgb(254,179,45)" fg:x="290" fg:w="1"/><text x="44.8654%" y="607.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (11 samples, 1.69%)</title><rect x="45.5385%" y="581" width="1.6923%" height="15" fill="rgb(226,14,10)" fg:x="296" fg:w="11"/><text x="45.7885%" y="591.50"></text></g><g><title>bitter::LittleEndianReader::has_data_for_unaligned_loads (1 samples, 0.15%)</title><rect x="47.0769%" y="565" width="0.1538%" height="15" fill="rgb(244,27,41)" fg:x="306" fg:w="1"/><text x="47.3269%" y="575.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_boolie (12 samples, 1.85%)</title><rect x="45.5385%" y="613" width="1.8462%" height="15" fill="rgb(235,35,32)" fg:x="296" fg:w="12"/><text x="45.7885%" y="623.50">d..</text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bit (12 samples, 1.85%)</title><rect x="45.5385%" y="597" width="1.8462%" height="15" fill="rgb(218,68,31)" fg:x="296" fg:w="12"/><text x="45.7885%" y="607.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.15%)</title><rect x="47.2308%" y="581" width="0.1538%" height="15" fill="rgb(207,120,37)" fg:x="307" fg:w="1"/><text x="47.4808%" y="591.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_inx (30 samples, 4.62%)</title><rect x="44.7692%" y="629" width="4.6154%" height="15" fill="rgb(227,98,0)" fg:x="291" fg:w="30"/><text x="45.0192%" y="639.50">demop..</text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_nbits (13 samples, 2.00%)</title><rect x="47.3846%" y="613" width="2.0000%" height="15" fill="rgb(207,7,3)" fg:x="308" fg:w="13"/><text x="47.6346%" y="623.50">d..</text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (12 samples, 1.85%)</title><rect x="47.5385%" y="597" width="1.8462%" height="15" fill="rgb(206,98,19)" fg:x="309" fg:w="12"/><text x="47.7885%" y="607.50">&lt;..</text></g><g><title>bitter::LittleEndianReader::refill (2 samples, 0.31%)</title><rect x="49.0769%" y="581" width="0.3077%" height="15" fill="rgb(217,5,26)" fg:x="319" fg:w="2"/><text x="49.3269%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.31%)</title><rect x="49.0769%" y="565" width="0.3077%" height="15" fill="rgb(235,190,38)" fg:x="319" fg:w="2"/><text x="49.3269%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.31%)</title><rect x="49.0769%" y="549" width="0.3077%" height="15" fill="rgb(247,86,24)" fg:x="319" fg:w="2"/><text x="49.3269%" y="559.50"></text></g><g><title>demoparser::parsing::entities::get_indicies (53 samples, 8.15%)</title><rect x="44.1538%" y="645" width="8.1538%" height="15" fill="rgb(205,101,16)" fg:x="287" fg:w="53"/><text x="44.4038%" y="655.50">demoparser:..</text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (19 samples, 2.92%)</title><rect x="49.3846%" y="629" width="2.9231%" height="15" fill="rgb(246,168,33)" fg:x="321" fg:w="19"/><text x="49.6346%" y="639.50">sm..</text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (5 samples, 0.77%)</title><rect x="51.5385%" y="613" width="0.7692%" height="15" fill="rgb(231,114,1)" fg:x="335" fg:w="5"/><text x="51.7885%" y="623.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (4 samples, 0.62%)</title><rect x="51.6923%" y="597" width="0.6154%" height="15" fill="rgb(207,184,53)" fg:x="336" fg:w="4"/><text x="51.9423%" y="607.50"></text></g><g><title>bitter::LittleEndianReader::has_data_for_unaligned_loads (1 samples, 0.15%)</title><rect x="55.8462%" y="549" width="0.1538%" height="15" fill="rgb(224,95,51)" fg:x="363" fg:w="1"/><text x="56.0962%" y="559.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode_special_float (5 samples, 0.77%)</title><rect x="55.3846%" y="613" width="0.7692%" height="15" fill="rgb(212,188,45)" fg:x="360" fg:w="5"/><text x="55.6346%" y="623.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_f32 (2 samples, 0.31%)</title><rect x="55.8462%" y="597" width="0.3077%" height="15" fill="rgb(223,154,38)" fg:x="363" fg:w="2"/><text x="56.0962%" y="607.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_u32 (2 samples, 0.31%)</title><rect x="55.8462%" y="581" width="0.3077%" height="15" fill="rgb(251,22,52)" fg:x="363" fg:w="2"/><text x="56.0962%" y="591.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (2 samples, 0.31%)</title><rect x="55.8462%" y="565" width="0.3077%" height="15" fill="rgb(229,209,22)" fg:x="363" fg:w="2"/><text x="56.0962%" y="575.50"></text></g><g><title>bitter::LittleEndianReader::refill (1 samples, 0.15%)</title><rect x="56.0000%" y="549" width="0.1538%" height="15" fill="rgb(234,138,34)" fg:x="364" fg:w="1"/><text x="56.2500%" y="559.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode_float (14 samples, 2.15%)</title><rect x="54.3077%" y="629" width="2.1538%" height="15" fill="rgb(212,95,11)" fg:x="353" fg:w="14"/><text x="54.5577%" y="639.50">d..</text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_nbits (2 samples, 0.31%)</title><rect x="56.1538%" y="613" width="0.3077%" height="15" fill="rgb(240,179,47)" fg:x="365" fg:w="2"/><text x="56.4038%" y="623.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (2 samples, 0.31%)</title><rect x="56.1538%" y="597" width="0.3077%" height="15" fill="rgb(240,163,11)" fg:x="365" fg:w="2"/><text x="56.4038%" y="607.50"></text></g><g><title>bitter::LittleEndianReader::refill (1 samples, 0.15%)</title><rect x="56.3077%" y="581" width="0.1538%" height="15" fill="rgb(236,37,12)" fg:x="366" fg:w="1"/><text x="56.5577%" y="591.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode_int (2 samples, 0.31%)</title><rect x="56.4615%" y="629" width="0.3077%" height="15" fill="rgb(232,164,16)" fg:x="367" fg:w="2"/><text x="56.7115%" y="639.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_sbit_long (1 samples, 0.15%)</title><rect x="56.6154%" y="613" width="0.1538%" height="15" fill="rgb(244,205,15)" fg:x="368" fg:w="1"/><text x="56.8654%" y="623.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_nbits (1 samples, 0.15%)</title><rect x="56.6154%" y="597" width="0.1538%" height="15" fill="rgb(223,117,47)" fg:x="368" fg:w="1"/><text x="56.8654%" y="607.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.15%)</title><rect x="56.6154%" y="581" width="0.1538%" height="15" fill="rgb(244,107,35)" fg:x="368" fg:w="1"/><text x="56.8654%" y="591.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode_vec (3 samples, 0.46%)</title><rect x="56.7692%" y="629" width="0.4615%" height="15" fill="rgb(205,140,8)" fg:x="369" fg:w="3"/><text x="57.0192%" y="639.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode_float (3 samples, 0.46%)</title><rect x="56.7692%" y="613" width="0.4615%" height="15" fill="rgb(228,84,46)" fg:x="369" fg:w="3"/><text x="57.0192%" y="623.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode_special_float (3 samples, 0.46%)</title><rect x="56.7692%" y="597" width="0.4615%" height="15" fill="rgb(254,188,9)" fg:x="369" fg:w="3"/><text x="57.0192%" y="607.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_bit_coord (3 samples, 0.46%)</title><rect x="56.7692%" y="581" width="0.4615%" height="15" fill="rgb(206,112,54)" fg:x="369" fg:w="3"/><text x="57.0192%" y="591.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bit (1 samples, 0.15%)</title><rect x="57.0769%" y="565" width="0.1538%" height="15" fill="rgb(216,84,49)" fg:x="371" fg:w="1"/><text x="57.3269%" y="575.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.15%)</title><rect x="57.0769%" y="549" width="0.1538%" height="15" fill="rgb(214,194,35)" fg:x="371" fg:w="1"/><text x="57.3269%" y="559.50"></text></g><g><title>demoparser::parsing::entities::parse_ent_props (155 samples, 23.85%)</title><rect x="34.4615%" y="661" width="23.8462%" height="15" fill="rgb(249,28,3)" fg:x="224" fg:w="155"/><text x="34.7115%" y="671.50">demoparser::parsing::entities::parse_e..</text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode (39 samples, 6.00%)</title><rect x="52.3077%" y="645" width="6.0000%" height="15" fill="rgb(222,56,52)" fg:x="340" fg:w="39"/><text x="52.5577%" y="655.50">demopars..</text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode_vec_xy (7 samples, 1.08%)</title><rect x="57.2308%" y="629" width="1.0769%" height="15" fill="rgb(245,217,50)" fg:x="372" fg:w="7"/><text x="57.4808%" y="639.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode_float (7 samples, 1.08%)</title><rect x="57.2308%" y="613" width="1.0769%" height="15" fill="rgb(213,201,24)" fg:x="372" fg:w="7"/><text x="57.4808%" y="623.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::decode_special_float (5 samples, 0.77%)</title><rect x="57.5385%" y="597" width="0.7692%" height="15" fill="rgb(248,116,28)" fg:x="374" fg:w="5"/><text x="57.7885%" y="607.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_f32 (3 samples, 0.46%)</title><rect x="57.8462%" y="581" width="0.4615%" height="15" fill="rgb(219,72,43)" fg:x="376" fg:w="3"/><text x="58.0962%" y="591.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_u32 (3 samples, 0.46%)</title><rect x="57.8462%" y="565" width="0.4615%" height="15" fill="rgb(209,138,14)" fg:x="376" fg:w="3"/><text x="58.0962%" y="575.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (3 samples, 0.46%)</title><rect x="57.8462%" y="549" width="0.4615%" height="15" fill="rgb(222,18,33)" fg:x="376" fg:w="3"/><text x="58.0962%" y="559.50"></text></g><g><title>bitter::LittleEndianReader::refill (2 samples, 0.31%)</title><rect x="58.0000%" y="533" width="0.3077%" height="15" fill="rgb(213,199,7)" fg:x="377" fg:w="2"/><text x="58.2500%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub (1 samples, 0.15%)</title><rect x="58.1538%" y="517" width="0.1538%" height="15" fill="rgb(250,110,10)" fg:x="378" fg:w="1"/><text x="58.4038%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.15%)</title><rect x="58.1538%" y="501" width="0.1538%" height="15" fill="rgb(248,123,6)" fg:x="378" fg:w="1"/><text x="58.4038%" y="511.50"></text></g><g><title>demoparser::parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::_parse_packet_entities (189 samples, 29.08%)</title><rect x="29.5385%" y="677" width="29.0769%" height="15" fill="rgb(206,91,31)" fg:x="192" fg:w="189"/><text x="29.7885%" y="687.50">demoparser::parsing::entities::&lt;impl demoparser..</text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_u_bit_var (2 samples, 0.31%)</title><rect x="58.3077%" y="661" width="0.3077%" height="15" fill="rgb(211,154,13)" fg:x="379" fg:w="2"/><text x="58.5577%" y="671.50"></text></g><g><title>demoparser::parsing::read_bits::MyBitreader::read_nbits (1 samples, 0.15%)</title><rect x="58.4615%" y="645" width="0.1538%" height="15" fill="rgb(225,148,7)" fg:x="380" fg:w="1"/><text x="58.7115%" y="655.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.15%)</title><rect x="58.4615%" y="629" width="0.1538%" height="15" fill="rgb(220,160,43)" fg:x="380" fg:w="1"/><text x="58.7115%" y="639.50"></text></g><g><title>bitter::LittleEndianReader::refill (1 samples, 0.15%)</title><rect x="58.4615%" y="613" width="0.1538%" height="15" fill="rgb(213,52,39)" fg:x="380" fg:w="1"/><text x="58.7115%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.15%)</title><rect x="58.4615%" y="597" width="0.1538%" height="15" fill="rgb(243,137,7)" fg:x="380" fg:w="1"/><text x="58.7115%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.15%)</title><rect x="58.4615%" y="581" width="0.1538%" height="15" fill="rgb(230,79,13)" fg:x="380" fg:w="1"/><text x="58.7115%" y="591.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::check_eof (1 samples, 0.15%)</title><rect x="58.6154%" y="661" width="0.1538%" height="15" fill="rgb(247,105,23)" fg:x="381" fg:w="1"/><text x="58.8654%" y="671.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::eof (1 samples, 0.15%)</title><rect x="58.6154%" y="645" width="0.1538%" height="15" fill="rgb(223,179,41)" fg:x="381" fg:w="1"/><text x="58.8654%" y="655.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::eof (1 samples, 0.15%)</title><rect x="58.6154%" y="629" width="0.1538%" height="15" fill="rgb(218,9,34)" fg:x="381" fg:w="1"/><text x="58.8654%" y="639.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::fill_buf (1 samples, 0.15%)</title><rect x="58.6154%" y="613" width="0.1538%" height="15" fill="rgb(222,106,8)" fg:x="381" fg:w="1"/><text x="58.8654%" y="623.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::fill_buf_slow (1 samples, 0.15%)</title><rect x="58.6154%" y="597" width="0.1538%" height="15" fill="rgb(211,220,0)" fg:x="381" fg:w="1"/><text x="58.8654%" y="607.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bool (1 samples, 0.15%)</title><rect x="59.5385%" y="629" width="0.1538%" height="15" fill="rgb(229,52,16)" fg:x="387" fg:w="1"/><text x="59.7885%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.15%)</title><rect x="59.5385%" y="613" width="0.1538%" height="15" fill="rgb(212,155,18)" fg:x="387" fg:w="1"/><text x="59.7885%" y="623.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes (6 samples, 0.92%)</title><rect x="59.6923%" y="629" width="0.9231%" height="15" fill="rgb(242,21,14)" fg:x="388" fg:w="6"/><text x="59.9423%" y="639.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (6 samples, 0.92%)</title><rect x="59.6923%" y="613" width="0.9231%" height="15" fill="rgb(222,19,48)" fg:x="388" fg:w="6"/><text x="59.9423%" y="623.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (6 samples, 0.92%)</title><rect x="59.6923%" y="597" width="0.9231%" height="15" fill="rgb(232,45,27)" fg:x="388" fg:w="6"/><text x="59.9423%" y="607.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (6 samples, 0.92%)</title><rect x="59.6923%" y="581" width="0.9231%" height="15" fill="rgb(249,103,42)" fg:x="388" fg:w="6"/><text x="59.9423%" y="591.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact (5 samples, 0.77%)</title><rect x="59.8462%" y="565" width="0.7692%" height="15" fill="rgb(246,81,33)" fg:x="389" fg:w="5"/><text x="60.0962%" y="575.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::read_bytes (5 samples, 0.77%)</title><rect x="59.8462%" y="549" width="0.7692%" height="15" fill="rgb(252,33,42)" fg:x="389" fg:w="5"/><text x="60.0962%" y="559.50"></text></g><g><title>protobuf::misc::maybe_uninit_write_slice (5 samples, 0.77%)</title><rect x="59.8462%" y="533" width="0.7692%" height="15" fill="rgb(209,212,41)" fg:x="389" fg:w="5"/><text x="60.0962%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (5 samples, 0.77%)</title><rect x="59.8462%" y="517" width="0.7692%" height="15" fill="rgb(207,154,6)" fg:x="389" fg:w="5"/><text x="60.0962%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.77%)</title><rect x="59.8462%" y="501" width="0.7692%" height="15" fill="rgb(223,64,47)" fg:x="389" fg:w="5"/><text x="60.0962%" y="511.50"></text></g><g><title>[libc.so.6] (5 samples, 0.77%)</title><rect x="59.8462%" y="485" width="0.7692%" height="15" fill="rgb(211,161,38)" fg:x="389" fg:w="5"/><text x="60.0962%" y="495.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int32 (1 samples, 0.15%)</title><rect x="60.6154%" y="629" width="0.1538%" height="15" fill="rgb(219,138,40)" fg:x="394" fg:w="1"/><text x="60.8654%" y="639.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int64 (1 samples, 0.15%)</title><rect x="60.6154%" y="613" width="0.1538%" height="15" fill="rgb(241,228,46)" fg:x="394" fg:w="1"/><text x="60.8654%" y="623.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (1 samples, 0.15%)</title><rect x="60.6154%" y="597" width="0.1538%" height="15" fill="rgb(223,209,38)" fg:x="394" fg:w="1"/><text x="60.8654%" y="607.50"></text></g><g><title>protobuf::varint::decode::decode_varint64 (1 samples, 0.15%)</title><rect x="60.6154%" y="581" width="0.1538%" height="15" fill="rgb(236,164,45)" fg:x="394" fg:w="1"/><text x="60.8654%" y="591.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (1 samples, 0.15%)</title><rect x="60.6154%" y="565" width="0.1538%" height="15" fill="rgb(231,15,5)" fg:x="394" fg:w="1"/><text x="60.8654%" y="575.50"></text></g><g><title>demoparser::parsing::entities::parse_packet_entities (208 samples, 32.00%)</title><rect x="29.3846%" y="693" width="32.0000%" height="15" fill="rgb(252,35,15)" fg:x="191" fg:w="208"/><text x="29.6346%" y="703.50">demoparser::parsing::entities::parse_packet_entities</text></g><g><title>protobuf::message::Message::parse_from_bytes (18 samples, 2.77%)</title><rect x="58.6154%" y="677" width="2.7692%" height="15" fill="rgb(248,181,18)" fg:x="381" fg:w="18"/><text x="58.8654%" y="687.50">pr..</text></g><g><title>protobuf::message::Message::parse_from (17 samples, 2.62%)</title><rect x="58.7692%" y="661" width="2.6154%" height="15" fill="rgb(233,39,42)" fg:x="382" fg:w="17"/><text x="59.0192%" y="671.50">pr..</text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_PacketEntities as protobuf::message::Message&gt;::merge_from (17 samples, 2.62%)</title><rect x="58.7692%" y="645" width="2.6154%" height="15" fill="rgb(238,110,33)" fg:x="382" fg:w="17"/><text x="59.0192%" y="655.50">&lt;c..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (4 samples, 0.62%)</title><rect x="60.7692%" y="629" width="0.6154%" height="15" fill="rgb(233,195,10)" fg:x="395" fg:w="4"/><text x="61.0192%" y="639.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (4 samples, 0.62%)</title><rect x="60.7692%" y="613" width="0.6154%" height="15" fill="rgb(254,105,3)" fg:x="395" fg:w="4"/><text x="61.0192%" y="623.50"></text></g><g><title>protobuf::varint::decode::decode_varint32 (3 samples, 0.46%)</title><rect x="60.9231%" y="597" width="0.4615%" height="15" fill="rgb(221,225,9)" fg:x="396" fg:w="3"/><text x="61.1731%" y="607.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (3 samples, 0.46%)</title><rect x="60.9231%" y="581" width="0.4615%" height="15" fill="rgb(224,227,45)" fg:x="396" fg:w="3"/><text x="61.1731%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;csgoproto::netmessages::CSVCMsg_GameEvent&gt; (1 samples, 0.15%)</title><rect x="61.3846%" y="677" width="0.1538%" height="15" fill="rgb(229,198,43)" fg:x="399" fg:w="1"/><text x="61.6346%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;csgoproto::netmessages::csvcmsg_game_event::Key_t&gt;&gt; (1 samples, 0.15%)</title><rect x="61.3846%" y="661" width="0.1538%" height="15" fill="rgb(206,209,35)" fg:x="399" fg:w="1"/><text x="61.6346%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;csgoproto::netmessages::csvcmsg_game_event::Key_t&gt;&gt; (1 samples, 0.15%)</title><rect x="61.3846%" y="645" width="0.1538%" height="15" fill="rgb(245,195,53)" fg:x="399" fg:w="1"/><text x="61.6346%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="61.3846%" y="629" width="0.1538%" height="15" fill="rgb(240,92,26)" fg:x="399" fg:w="1"/><text x="61.6346%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.15%)</title><rect x="61.3846%" y="613" width="0.1538%" height="15" fill="rgb(207,40,23)" fg:x="399" fg:w="1"/><text x="61.6346%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.15%)</title><rect x="61.3846%" y="597" width="0.1538%" height="15" fill="rgb(223,111,35)" fg:x="399" fg:w="1"/><text x="61.6346%" y="607.50"></text></g><g><title>_mi_page_retire (1 samples, 0.15%)</title><rect x="61.3846%" y="581" width="0.1538%" height="15" fill="rgb(229,147,28)" fg:x="399" fg:w="1"/><text x="61.6346%" y="591.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.15%)</title><rect x="61.5385%" y="661" width="0.1538%" height="15" fill="rgb(211,29,28)" fg:x="400" fg:w="1"/><text x="61.7885%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.15%)</title><rect x="61.6923%" y="629" width="0.1538%" height="15" fill="rgb(228,72,33)" fg:x="401" fg:w="1"/><text x="61.9423%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.15%)</title><rect x="61.6923%" y="613" width="0.1538%" height="15" fill="rgb(205,214,31)" fg:x="401" fg:w="1"/><text x="61.9423%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.15%)</title><rect x="61.6923%" y="597" width="0.1538%" height="15" fill="rgb(224,111,15)" fg:x="401" fg:w="1"/><text x="61.9423%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.15%)</title><rect x="61.6923%" y="581" width="0.1538%" height="15" fill="rgb(253,21,26)" fg:x="401" fg:w="1"/><text x="61.9423%" y="591.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bool (1 samples, 0.15%)</title><rect x="62.1538%" y="581" width="0.1538%" height="15" fill="rgb(245,139,43)" fg:x="404" fg:w="1"/><text x="62.4038%" y="591.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_game_event::Key_t as protobuf::message::Message&gt;::merge_from (4 samples, 0.62%)</title><rect x="61.8462%" y="597" width="0.6154%" height="15" fill="rgb(252,170,7)" fg:x="402" fg:w="4"/><text x="62.0962%" y="607.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int32 (1 samples, 0.15%)</title><rect x="62.3077%" y="581" width="0.1538%" height="15" fill="rgb(231,118,14)" fg:x="405" fg:w="1"/><text x="62.5577%" y="591.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int64 (1 samples, 0.15%)</title><rect x="62.3077%" y="565" width="0.1538%" height="15" fill="rgb(238,83,0)" fg:x="405" fg:w="1"/><text x="62.5577%" y="575.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (1 samples, 0.15%)</title><rect x="62.3077%" y="549" width="0.1538%" height="15" fill="rgb(221,39,39)" fg:x="405" fg:w="1"/><text x="62.5577%" y="559.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::remaining_in_buf (1 samples, 0.15%)</title><rect x="62.3077%" y="533" width="0.1538%" height="15" fill="rgb(222,119,46)" fg:x="405" fg:w="1"/><text x="62.5577%" y="543.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::remaining_in_buf (1 samples, 0.15%)</title><rect x="62.3077%" y="517" width="0.1538%" height="15" fill="rgb(222,165,49)" fg:x="405" fg:w="1"/><text x="62.5577%" y="527.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_message (5 samples, 0.77%)</title><rect x="61.8462%" y="629" width="0.7692%" height="15" fill="rgb(219,113,52)" fg:x="402" fg:w="5"/><text x="62.0962%" y="639.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::merge_message (5 samples, 0.77%)</title><rect x="61.8462%" y="613" width="0.7692%" height="15" fill="rgb(214,7,15)" fg:x="402" fg:w="5"/><text x="62.0962%" y="623.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::incr_recursion (1 samples, 0.15%)</title><rect x="62.4615%" y="597" width="0.1538%" height="15" fill="rgb(235,32,4)" fg:x="406" fg:w="1"/><text x="62.7115%" y="607.50"></text></g><g><title>demoparser::parsing::game_events::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_game_events (9 samples, 1.38%)</title><rect x="61.3846%" y="693" width="1.3846%" height="15" fill="rgb(238,90,54)" fg:x="399" fg:w="9"/><text x="61.6346%" y="703.50"></text></g><g><title>protobuf::message::Message::parse_from_bytes (8 samples, 1.23%)</title><rect x="61.5385%" y="677" width="1.2308%" height="15" fill="rgb(213,208,19)" fg:x="400" fg:w="8"/><text x="61.7885%" y="687.50"></text></g><g><title>protobuf::message::Message::parse_from (7 samples, 1.08%)</title><rect x="61.6923%" y="661" width="1.0769%" height="15" fill="rgb(233,156,4)" fg:x="401" fg:w="7"/><text x="61.9423%" y="671.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_GameEvent as protobuf::message::Message&gt;::merge_from (7 samples, 1.08%)</title><rect x="61.6923%" y="645" width="1.0769%" height="15" fill="rgb(207,194,5)" fg:x="401" fg:w="7"/><text x="61.9423%" y="655.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (1 samples, 0.15%)</title><rect x="62.6154%" y="629" width="0.1538%" height="15" fill="rgb(206,111,30)" fg:x="407" fg:w="1"/><text x="62.8654%" y="639.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (1 samples, 0.15%)</title><rect x="62.6154%" y="613" width="0.1538%" height="15" fill="rgb(243,70,54)" fg:x="407" fg:w="1"/><text x="62.8654%" y="623.50"></text></g><g><title>protobuf::varint::decode::decode_varint32 (1 samples, 0.15%)</title><rect x="62.6154%" y="597" width="0.1538%" height="15" fill="rgb(242,28,8)" fg:x="407" fg:w="1"/><text x="62.8654%" y="607.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (1 samples, 0.15%)</title><rect x="62.6154%" y="581" width="0.1538%" height="15" fill="rgb(219,106,18)" fg:x="407" fg:w="1"/><text x="62.8654%" y="591.50"></text></g><g><title>demoparser::parsing::parser::Parser::msg_handler (228 samples, 35.08%)</title><rect x="27.8462%" y="709" width="35.0769%" height="15" fill="rgb(244,222,10)" fg:x="181" fg:w="228"/><text x="28.0962%" y="719.50">demoparser::parsing::parser::Parser::msg_handler</text></g><g><title>demoparser::parsing::stringtables::&lt;impl demoparser::parsing::parser::Parser&gt;::update_string_table_msg (1 samples, 0.15%)</title><rect x="62.7692%" y="693" width="0.1538%" height="15" fill="rgb(236,179,52)" fg:x="408" fg:w="1"/><text x="63.0192%" y="703.50"></text></g><g><title>demoparser::parsing::stringtables::&lt;impl demoparser::parsing::parser::Parser&gt;::update_string_table (1 samples, 0.15%)</title><rect x="62.7692%" y="677" width="0.1538%" height="15" fill="rgb(213,23,39)" fg:x="408" fg:w="1"/><text x="63.0192%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.15%)</title><rect x="62.7692%" y="661" width="0.1538%" height="15" fill="rgb(238,48,10)" fg:x="408" fg:w="1"/><text x="63.0192%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.15%)</title><rect x="62.7692%" y="645" width="0.1538%" height="15" fill="rgb(251,196,23)" fg:x="408" fg:w="1"/><text x="63.0192%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.15%)</title><rect x="62.7692%" y="629" width="0.1538%" height="15" fill="rgb(250,152,24)" fg:x="408" fg:w="1"/><text x="63.0192%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.15%)</title><rect x="62.7692%" y="613" width="0.1538%" height="15" fill="rgb(209,150,17)" fg:x="408" fg:w="1"/><text x="63.0192%" y="623.50"></text></g><g><title>mi_find_page (2 samples, 0.31%)</title><rect x="62.9231%" y="469" width="0.3077%" height="15" fill="rgb(234,202,34)" fg:x="409" fg:w="2"/><text x="63.1731%" y="479.50"></text></g><g><title>mi_find_free_page (2 samples, 0.31%)</title><rect x="62.9231%" y="453" width="0.3077%" height="15" fill="rgb(253,148,53)" fg:x="409" fg:w="2"/><text x="63.1731%" y="463.50"></text></g><g><title>mi_page_queue_find_free_ex (2 samples, 0.31%)</title><rect x="62.9231%" y="437" width="0.3077%" height="15" fill="rgb(218,129,16)" fg:x="409" fg:w="2"/><text x="63.1731%" y="447.50"></text></g><g><title>mi_page_fresh (2 samples, 0.31%)</title><rect x="62.9231%" y="421" width="0.3077%" height="15" fill="rgb(216,85,19)" fg:x="409" fg:w="2"/><text x="63.1731%" y="431.50"></text></g><g><title>mi_page_fresh_alloc (2 samples, 0.31%)</title><rect x="62.9231%" y="405" width="0.3077%" height="15" fill="rgb(235,228,7)" fg:x="409" fg:w="2"/><text x="63.1731%" y="415.50"></text></g><g><title>mi_segments_page_alloc (2 samples, 0.31%)</title><rect x="62.9231%" y="389" width="0.3077%" height="15" fill="rgb(245,175,0)" fg:x="409" fg:w="2"/><text x="63.1731%" y="399.50"></text></g><g><title>mi_segment_reclaim_or_alloc (2 samples, 0.31%)</title><rect x="62.9231%" y="373" width="0.3077%" height="15" fill="rgb(208,168,36)" fg:x="409" fg:w="2"/><text x="63.1731%" y="383.50"></text></g><g><title>mi_segment_alloc (2 samples, 0.31%)</title><rect x="62.9231%" y="357" width="0.3077%" height="15" fill="rgb(246,171,24)" fg:x="409" fg:w="2"/><text x="63.1731%" y="367.50"></text></g><g><title>mi_segment_init (2 samples, 0.31%)</title><rect x="62.9231%" y="341" width="0.3077%" height="15" fill="rgb(215,142,24)" fg:x="409" fg:w="2"/><text x="63.1731%" y="351.50"></text></g><g><title>memset (2 samples, 0.31%)</title><rect x="62.9231%" y="325" width="0.3077%" height="15" fill="rgb(250,187,7)" fg:x="409" fg:w="2"/><text x="63.1731%" y="335.50"></text></g><g><title>[libc.so.6] (2 samples, 0.31%)</title><rect x="62.9231%" y="309" width="0.3077%" height="15" fill="rgb(228,66,33)" fg:x="409" fg:w="2"/><text x="63.1731%" y="319.50"></text></g><g><title>_mi_memcpy_aligned (11 samples, 1.69%)</title><rect x="63.2308%" y="437" width="1.6923%" height="15" fill="rgb(234,215,21)" fg:x="411" fg:w="11"/><text x="63.4808%" y="447.50"></text></g><g><title>_mi_memcpy (11 samples, 1.69%)</title><rect x="63.2308%" y="421" width="1.6923%" height="15" fill="rgb(222,191,20)" fg:x="411" fg:w="11"/><text x="63.4808%" y="431.50"></text></g><g><title>memcpy (11 samples, 1.69%)</title><rect x="63.2308%" y="405" width="1.6923%" height="15" fill="rgb(245,79,54)" fg:x="411" fg:w="11"/><text x="63.4808%" y="415.50"></text></g><g><title>[unknown] (11 samples, 1.69%)</title><rect x="63.2308%" y="389" width="1.6923%" height="15" fill="rgb(240,10,37)" fg:x="411" fg:w="11"/><text x="63.4808%" y="399.50"></text></g><g><title>[unknown] (11 samples, 1.69%)</title><rect x="63.2308%" y="373" width="1.6923%" height="15" fill="rgb(214,192,32)" fg:x="411" fg:w="11"/><text x="63.4808%" y="383.50"></text></g><g><title>[unknown] (11 samples, 1.69%)</title><rect x="63.2308%" y="357" width="1.6923%" height="15" fill="rgb(209,36,54)" fg:x="411" fg:w="11"/><text x="63.4808%" y="367.50"></text></g><g><title>[unknown] (11 samples, 1.69%)</title><rect x="63.2308%" y="341" width="1.6923%" height="15" fill="rgb(220,10,11)" fg:x="411" fg:w="11"/><text x="63.4808%" y="351.50"></text></g><g><title>[unknown] (11 samples, 1.69%)</title><rect x="63.2308%" y="325" width="1.6923%" height="15" fill="rgb(221,106,17)" fg:x="411" fg:w="11"/><text x="63.4808%" y="335.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="64.0000%" y="309" width="0.9231%" height="15" fill="rgb(251,142,44)" fg:x="416" fg:w="6"/><text x="64.2500%" y="319.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="64.0000%" y="293" width="0.9231%" height="15" fill="rgb(238,13,15)" fg:x="416" fg:w="6"/><text x="64.2500%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="64.1538%" y="277" width="0.7692%" height="15" fill="rgb(208,107,27)" fg:x="417" fg:w="5"/><text x="64.4038%" y="287.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="64.1538%" y="261" width="0.7692%" height="15" fill="rgb(205,136,37)" fg:x="417" fg:w="5"/><text x="64.4038%" y="271.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="64.1538%" y="245" width="0.7692%" height="15" fill="rgb(250,205,27)" fg:x="417" fg:w="5"/><text x="64.4038%" y="255.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="64.1538%" y="229" width="0.7692%" height="15" fill="rgb(210,80,43)" fg:x="417" fg:w="5"/><text x="64.4038%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (19 samples, 2.92%)</title><rect x="62.9231%" y="661" width="2.9231%" height="15" fill="rgb(247,160,36)" fg:x="409" fg:w="19"/><text x="63.1731%" y="671.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 2.92%)</title><rect x="62.9231%" y="645" width="2.9231%" height="15" fill="rgb(234,13,49)" fg:x="409" fg:w="19"/><text x="63.1731%" y="655.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 2.92%)</title><rect x="62.9231%" y="629" width="2.9231%" height="15" fill="rgb(234,122,0)" fg:x="409" fg:w="19"/><text x="63.1731%" y="639.50">al..</text></g><g><title>alloc::slice::hack::to_vec (19 samples, 2.92%)</title><rect x="62.9231%" y="613" width="2.9231%" height="15" fill="rgb(207,146,38)" fg:x="409" fg:w="19"/><text x="63.1731%" y="623.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 2.92%)</title><rect x="62.9231%" y="597" width="2.9231%" height="15" fill="rgb(207,177,25)" fg:x="409" fg:w="19"/><text x="63.1731%" y="607.50">&lt;T..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (19 samples, 2.92%)</title><rect x="62.9231%" y="581" width="2.9231%" height="15" fill="rgb(211,178,42)" fg:x="409" fg:w="19"/><text x="63.1731%" y="591.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (19 samples, 2.92%)</title><rect x="62.9231%" y="565" width="2.9231%" height="15" fill="rgb(230,69,54)" fg:x="409" fg:w="19"/><text x="63.1731%" y="575.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (19 samples, 2.92%)</title><rect x="62.9231%" y="549" width="2.9231%" height="15" fill="rgb(214,135,41)" fg:x="409" fg:w="19"/><text x="63.1731%" y="559.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19 samples, 2.92%)</title><rect x="62.9231%" y="533" width="2.9231%" height="15" fill="rgb(237,67,25)" fg:x="409" fg:w="19"/><text x="63.1731%" y="543.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 2.92%)</title><rect x="62.9231%" y="517" width="2.9231%" height="15" fill="rgb(222,189,50)" fg:x="409" fg:w="19"/><text x="63.1731%" y="527.50">al..</text></g><g><title>alloc::alloc::alloc (19 samples, 2.92%)</title><rect x="62.9231%" y="501" width="2.9231%" height="15" fill="rgb(245,148,34)" fg:x="409" fg:w="19"/><text x="63.1731%" y="511.50">al..</text></g><g><title>_mi_malloc_generic (19 samples, 2.92%)</title><rect x="62.9231%" y="485" width="2.9231%" height="15" fill="rgb(222,29,6)" fg:x="409" fg:w="19"/><text x="63.1731%" y="495.50">_m..</text></g><g><title>mi_thread_init (17 samples, 2.62%)</title><rect x="63.2308%" y="469" width="2.6154%" height="15" fill="rgb(221,189,43)" fg:x="411" fg:w="17"/><text x="63.4808%" y="479.50">mi..</text></g><g><title>_mi_heap_init (17 samples, 2.62%)</title><rect x="63.2308%" y="453" width="2.6154%" height="15" fill="rgb(207,36,27)" fg:x="411" fg:w="17"/><text x="63.4808%" y="463.50">_m..</text></g><g><title>mi_thread_data_alloc (6 samples, 0.92%)</title><rect x="64.9231%" y="437" width="0.9231%" height="15" fill="rgb(217,90,24)" fg:x="422" fg:w="6"/><text x="65.1731%" y="447.50"></text></g><g><title>_mi_os_alloc (6 samples, 0.92%)</title><rect x="64.9231%" y="421" width="0.9231%" height="15" fill="rgb(224,66,35)" fg:x="422" fg:w="6"/><text x="65.1731%" y="431.50"></text></g><g><title>mi_os_mem_alloc (6 samples, 0.92%)</title><rect x="64.9231%" y="405" width="0.9231%" height="15" fill="rgb(221,13,50)" fg:x="422" fg:w="6"/><text x="65.1731%" y="415.50"></text></g><g><title>mi_unix_mmap (6 samples, 0.92%)</title><rect x="64.9231%" y="389" width="0.9231%" height="15" fill="rgb(236,68,49)" fg:x="422" fg:w="6"/><text x="65.1731%" y="399.50"></text></g><g><title>mi_unix_mmapx (6 samples, 0.92%)</title><rect x="64.9231%" y="373" width="0.9231%" height="15" fill="rgb(229,146,28)" fg:x="422" fg:w="6"/><text x="65.1731%" y="383.50"></text></g><g><title>__GI___mmap64 (6 samples, 0.92%)</title><rect x="64.9231%" y="357" width="0.9231%" height="15" fill="rgb(225,31,38)" fg:x="422" fg:w="6"/><text x="65.1731%" y="367.50"></text></g><g><title>__GI___mmap64 (6 samples, 0.92%)</title><rect x="64.9231%" y="341" width="0.9231%" height="15" fill="rgb(250,208,3)" fg:x="422" fg:w="6"/><text x="65.1731%" y="351.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="64.9231%" y="325" width="0.9231%" height="15" fill="rgb(246,54,23)" fg:x="422" fg:w="6"/><text x="65.1731%" y="335.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="64.9231%" y="309" width="0.9231%" height="15" fill="rgb(243,76,11)" fg:x="422" fg:w="6"/><text x="65.1731%" y="319.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="64.9231%" y="293" width="0.9231%" height="15" fill="rgb(245,21,50)" fg:x="422" fg:w="6"/><text x="65.1731%" y="303.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="64.9231%" y="277" width="0.9231%" height="15" fill="rgb(228,9,43)" fg:x="422" fg:w="6"/><text x="65.1731%" y="287.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="64.9231%" y="261" width="0.9231%" height="15" fill="rgb(208,100,47)" fg:x="422" fg:w="6"/><text x="65.1731%" y="271.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="64.9231%" y="245" width="0.9231%" height="15" fill="rgb(232,26,8)" fg:x="422" fg:w="6"/><text x="65.1731%" y="255.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="64.9231%" y="229" width="0.9231%" height="15" fill="rgb(216,166,38)" fg:x="422" fg:w="6"/><text x="65.1731%" y="239.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="64.9231%" y="213" width="0.9231%" height="15" fill="rgb(251,202,51)" fg:x="422" fg:w="6"/><text x="65.1731%" y="223.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="64.9231%" y="197" width="0.9231%" height="15" fill="rgb(254,216,34)" fg:x="422" fg:w="6"/><text x="65.1731%" y="207.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="65.0769%" y="181" width="0.7692%" height="15" fill="rgb(251,32,27)" fg:x="423" fg:w="5"/><text x="65.3269%" y="191.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.31%)</title><rect x="66.0000%" y="581" width="0.3077%" height="15" fill="rgb(208,127,28)" fg:x="429" fg:w="2"/><text x="66.2500%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="66.1538%" y="565" width="0.1538%" height="15" fill="rgb(224,137,22)" fg:x="430" fg:w="1"/><text x="66.4038%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.15%)</title><rect x="66.1538%" y="549" width="0.1538%" height="15" fill="rgb(254,70,32)" fg:x="430" fg:w="1"/><text x="66.4038%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.15%)</title><rect x="66.1538%" y="533" width="0.1538%" height="15" fill="rgb(229,75,37)" fg:x="430" fg:w="1"/><text x="66.4038%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.15%)</title><rect x="66.1538%" y="517" width="0.1538%" height="15" fill="rgb(252,64,23)" fg:x="430" fg:w="1"/><text x="66.4038%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="66.1538%" y="501" width="0.1538%" height="15" fill="rgb(232,162,48)" fg:x="430" fg:w="1"/><text x="66.4038%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="66.1538%" y="485" width="0.1538%" height="15" fill="rgb(246,160,12)" fg:x="430" fg:w="1"/><text x="66.4038%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="66.1538%" y="469" width="0.1538%" height="15" fill="rgb(247,166,0)" fg:x="430" fg:w="1"/><text x="66.4038%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.15%)</title><rect x="66.1538%" y="453" width="0.1538%" height="15" fill="rgb(249,219,21)" fg:x="430" fg:w="1"/><text x="66.4038%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="66.1538%" y="437" width="0.1538%" height="15" fill="rgb(205,209,3)" fg:x="430" fg:w="1"/><text x="66.4038%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="66.1538%" y="421" width="0.1538%" height="15" fill="rgb(243,44,1)" fg:x="430" fg:w="1"/><text x="66.4038%" y="431.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.15%)</title><rect x="66.1538%" y="405" width="0.1538%" height="15" fill="rgb(206,159,16)" fg:x="430" fg:w="1"/><text x="66.4038%" y="415.50"></text></g><g><title>mi_find_page (1 samples, 0.15%)</title><rect x="66.1538%" y="389" width="0.1538%" height="15" fill="rgb(244,77,30)" fg:x="430" fg:w="1"/><text x="66.4038%" y="399.50"></text></g><g><title>mi_find_free_page (1 samples, 0.15%)</title><rect x="66.1538%" y="373" width="0.1538%" height="15" fill="rgb(218,69,12)" fg:x="430" fg:w="1"/><text x="66.4038%" y="383.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.15%)</title><rect x="66.1538%" y="357" width="0.1538%" height="15" fill="rgb(212,87,7)" fg:x="430" fg:w="1"/><text x="66.4038%" y="367.50"></text></g><g><title>mi_page_fresh (1 samples, 0.15%)</title><rect x="66.1538%" y="341" width="0.1538%" height="15" fill="rgb(245,114,25)" fg:x="430" fg:w="1"/><text x="66.4038%" y="351.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.15%)</title><rect x="66.1538%" y="325" width="0.1538%" height="15" fill="rgb(210,61,42)" fg:x="430" fg:w="1"/><text x="66.4038%" y="335.50"></text></g><g><title>mi_page_init (1 samples, 0.15%)</title><rect x="66.1538%" y="309" width="0.1538%" height="15" fill="rgb(211,52,33)" fg:x="430" fg:w="1"/><text x="66.4038%" y="319.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.15%)</title><rect x="66.1538%" y="293" width="0.1538%" height="15" fill="rgb(234,58,33)" fg:x="430" fg:w="1"/><text x="66.4038%" y="303.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.15%)</title><rect x="66.1538%" y="277" width="0.1538%" height="15" fill="rgb(220,115,36)" fg:x="430" fg:w="1"/><text x="66.4038%" y="287.50"></text></g><g><title>mi_page_free_list_extend (1 samples, 0.15%)</title><rect x="66.1538%" y="261" width="0.1538%" height="15" fill="rgb(243,153,54)" fg:x="430" fg:w="1"/><text x="66.4038%" y="271.50"></text></g><g><title>mi_block_set_next (1 samples, 0.15%)</title><rect x="66.1538%" y="245" width="0.1538%" height="15" fill="rgb(251,47,18)" fg:x="430" fg:w="1"/><text x="66.4038%" y="255.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.15%)</title><rect x="66.1538%" y="229" width="0.1538%" height="15" fill="rgb(242,102,42)" fg:x="430" fg:w="1"/><text x="66.4038%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="66.1538%" y="213" width="0.1538%" height="15" fill="rgb(234,31,38)" fg:x="430" fg:w="1"/><text x="66.4038%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="66.1538%" y="197" width="0.1538%" height="15" fill="rgb(221,117,51)" fg:x="430" fg:w="1"/><text x="66.4038%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="66.1538%" y="181" width="0.1538%" height="15" fill="rgb(212,20,18)" fg:x="430" fg:w="1"/><text x="66.4038%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="66.1538%" y="165" width="0.1538%" height="15" fill="rgb(245,133,36)" fg:x="430" fg:w="1"/><text x="66.4038%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="66.1538%" y="149" width="0.1538%" height="15" fill="rgb(212,6,19)" fg:x="430" fg:w="1"/><text x="66.4038%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="66.1538%" y="133" width="0.1538%" height="15" fill="rgb(218,1,36)" fg:x="430" fg:w="1"/><text x="66.4038%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="66.1538%" y="117" width="0.1538%" height="15" fill="rgb(246,84,54)" fg:x="430" fg:w="1"/><text x="66.4038%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="66.1538%" y="101" width="0.1538%" height="15" fill="rgb(242,110,6)" fg:x="430" fg:w="1"/><text x="66.4038%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="66.1538%" y="85" width="0.1538%" height="15" fill="rgb(214,47,5)" fg:x="430" fg:w="1"/><text x="66.4038%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="66.1538%" y="69" width="0.1538%" height="15" fill="rgb(218,159,25)" fg:x="430" fg:w="1"/><text x="66.4038%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="66.1538%" y="53" width="0.1538%" height="15" fill="rgb(215,211,28)" fg:x="430" fg:w="1"/><text x="66.4038%" y="63.50"></text></g><g><title>&lt;demoparser::parsing::entities::Prop as core::clone::Clone&gt;::clone (4 samples, 0.62%)</title><rect x="65.8462%" y="597" width="0.6154%" height="15" fill="rgb(238,59,32)" fg:x="428" fg:w="4"/><text x="66.0962%" y="607.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="66.3077%" y="581" width="0.1538%" height="15" fill="rgb(226,82,3)" fg:x="431" fg:w="1"/><text x="66.5577%" y="591.50"></text></g><g><title>&lt;demoparser::parsing::data_table::ServerClasses as core::clone::Clone&gt;::clone (53 samples, 8.15%)</title><rect x="62.9231%" y="693" width="8.1538%" height="15" fill="rgb(240,164,32)" fg:x="409" fg:w="53"/><text x="63.1731%" y="703.50">&lt;demoparser..</text></g><g><title>&lt;demoparser::parsing::data_table::ServerClass as core::clone::Clone&gt;::clone (53 samples, 8.15%)</title><rect x="62.9231%" y="677" width="8.1538%" height="15" fill="rgb(232,46,7)" fg:x="409" fg:w="53"/><text x="63.1731%" y="687.50">&lt;demoparser..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (34 samples, 5.23%)</title><rect x="65.8462%" y="661" width="5.2308%" height="15" fill="rgb(229,129,53)" fg:x="428" fg:w="34"/><text x="66.0962%" y="671.50">&lt;alloc..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (34 samples, 5.23%)</title><rect x="65.8462%" y="645" width="5.2308%" height="15" fill="rgb(234,188,29)" fg:x="428" fg:w="34"/><text x="66.0962%" y="655.50">alloc:..</text></g><g><title>alloc::slice::hack::to_vec (34 samples, 5.23%)</title><rect x="65.8462%" y="629" width="5.2308%" height="15" fill="rgb(246,141,4)" fg:x="428" fg:w="34"/><text x="66.0962%" y="639.50">alloc:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (34 samples, 5.23%)</title><rect x="65.8462%" y="613" width="5.2308%" height="15" fill="rgb(229,23,39)" fg:x="428" fg:w="34"/><text x="66.0962%" y="623.50">&lt;T as ..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (30 samples, 4.62%)</title><rect x="66.4615%" y="597" width="4.6154%" height="15" fill="rgb(206,12,3)" fg:x="432" fg:w="30"/><text x="66.7115%" y="607.50">core:..</text></g><g><title>[unknown] (29 samples, 4.46%)</title><rect x="66.6154%" y="581" width="4.4615%" height="15" fill="rgb(252,226,20)" fg:x="433" fg:w="29"/><text x="66.8654%" y="591.50">[unkn..</text></g><g><title>[unknown] (29 samples, 4.46%)</title><rect x="66.6154%" y="565" width="4.4615%" height="15" fill="rgb(216,123,35)" fg:x="433" fg:w="29"/><text x="66.8654%" y="575.50">[unkn..</text></g><g><title>[unknown] (29 samples, 4.46%)</title><rect x="66.6154%" y="549" width="4.4615%" height="15" fill="rgb(212,68,40)" fg:x="433" fg:w="29"/><text x="66.8654%" y="559.50">[unkn..</text></g><g><title>[unknown] (29 samples, 4.46%)</title><rect x="66.6154%" y="533" width="4.4615%" height="15" fill="rgb(254,125,32)" fg:x="433" fg:w="29"/><text x="66.8654%" y="543.50">[unkn..</text></g><g><title>[unknown] (28 samples, 4.31%)</title><rect x="66.7692%" y="517" width="4.3077%" height="15" fill="rgb(253,97,22)" fg:x="434" fg:w="28"/><text x="67.0192%" y="527.50">[unkn..</text></g><g><title>[unknown] (28 samples, 4.31%)</title><rect x="66.7692%" y="501" width="4.3077%" height="15" fill="rgb(241,101,14)" fg:x="434" fg:w="28"/><text x="67.0192%" y="511.50">[unkn..</text></g><g><title>[unknown] (22 samples, 3.38%)</title><rect x="67.6923%" y="485" width="3.3846%" height="15" fill="rgb(238,103,29)" fg:x="440" fg:w="22"/><text x="67.9423%" y="495.50">[un..</text></g><g><title>[unknown] (22 samples, 3.38%)</title><rect x="67.6923%" y="469" width="3.3846%" height="15" fill="rgb(233,195,47)" fg:x="440" fg:w="22"/><text x="67.9423%" y="479.50">[un..</text></g><g><title>[unknown] (22 samples, 3.38%)</title><rect x="67.6923%" y="453" width="3.3846%" height="15" fill="rgb(246,218,30)" fg:x="440" fg:w="22"/><text x="67.9423%" y="463.50">[un..</text></g><g><title>[unknown] (22 samples, 3.38%)</title><rect x="67.6923%" y="437" width="3.3846%" height="15" fill="rgb(219,145,47)" fg:x="440" fg:w="22"/><text x="67.9423%" y="447.50">[un..</text></g><g><title>[unknown] (22 samples, 3.38%)</title><rect x="67.6923%" y="421" width="3.3846%" height="15" fill="rgb(243,12,26)" fg:x="440" fg:w="22"/><text x="67.9423%" y="431.50">[un..</text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="70.9231%" y="405" width="0.1538%" height="15" fill="rgb(214,87,16)" fg:x="461" fg:w="1"/><text x="71.1731%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="70.9231%" y="389" width="0.1538%" height="15" fill="rgb(208,99,42)" fg:x="461" fg:w="1"/><text x="71.1731%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="70.9231%" y="373" width="0.1538%" height="15" fill="rgb(253,99,2)" fg:x="461" fg:w="1"/><text x="71.1731%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="70.9231%" y="357" width="0.1538%" height="15" fill="rgb(220,168,23)" fg:x="461" fg:w="1"/><text x="71.1731%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="70.9231%" y="341" width="0.1538%" height="15" fill="rgb(242,38,24)" fg:x="461" fg:w="1"/><text x="71.1731%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="70.9231%" y="325" width="0.1538%" height="15" fill="rgb(225,182,9)" fg:x="461" fg:w="1"/><text x="71.1731%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;demoparser::parsing::parser::ParsingMaps&gt;&gt; (15 samples, 2.31%)</title><rect x="71.0769%" y="693" width="2.3077%" height="15" fill="rgb(243,178,37)" fg:x="462" fg:w="15"/><text x="71.3269%" y="703.50">c..</text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 2.31%)</title><rect x="71.0769%" y="677" width="2.3077%" height="15" fill="rgb(232,139,19)" fg:x="462" fg:w="15"/><text x="71.3269%" y="687.50">&lt;..</text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (15 samples, 2.31%)</title><rect x="71.0769%" y="661" width="2.3077%" height="15" fill="rgb(225,201,24)" fg:x="462" fg:w="15"/><text x="71.3269%" y="671.50">s..</text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (5 samples, 0.77%)</title><rect x="72.6154%" y="645" width="0.7692%" height="15" fill="rgb(221,47,46)" fg:x="472" fg:w="5"/><text x="72.8654%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.77%)</title><rect x="72.6154%" y="629" width="0.7692%" height="15" fill="rgb(249,23,13)" fg:x="472" fg:w="5"/><text x="72.8654%" y="639.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (12 samples, 1.85%)</title><rect x="73.3846%" y="693" width="1.8462%" height="15" fill="rgb(219,9,5)" fg:x="477" fg:w="12"/><text x="73.6346%" y="703.50">s..</text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (12 samples, 1.85%)</title><rect x="73.3846%" y="677" width="1.8462%" height="15" fill="rgb(254,171,16)" fg:x="477" fg:w="12"/><text x="73.6346%" y="687.50">s..</text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_contended (7 samples, 1.08%)</title><rect x="74.1538%" y="661" width="1.0769%" height="15" fill="rgb(230,171,20)" fg:x="482" fg:w="7"/><text x="74.4038%" y="671.50"></text></g><g><title>std::sys::unix::futex::futex_wait (1 samples, 0.15%)</title><rect x="75.0769%" y="645" width="0.1538%" height="15" fill="rgb(210,71,41)" fg:x="488" fg:w="1"/><text x="75.3269%" y="655.50"></text></g><g><title>syscall (1 samples, 0.15%)</title><rect x="75.0769%" y="629" width="0.1538%" height="15" fill="rgb(206,173,20)" fg:x="488" fg:w="1"/><text x="75.3269%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="75.0769%" y="613" width="0.1538%" height="15" fill="rgb(233,88,34)" fg:x="488" fg:w="1"/><text x="75.3269%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="75.0769%" y="597" width="0.1538%" height="15" fill="rgb(223,209,46)" fg:x="488" fg:w="1"/><text x="75.3269%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="75.0769%" y="581" width="0.1538%" height="15" fill="rgb(250,43,18)" fg:x="488" fg:w="1"/><text x="75.3269%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="75.0769%" y="565" width="0.1538%" height="15" fill="rgb(208,13,10)" fg:x="488" fg:w="1"/><text x="75.3269%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="75.0769%" y="549" width="0.1538%" height="15" fill="rgb(212,200,36)" fg:x="488" fg:w="1"/><text x="75.3269%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="75.0769%" y="533" width="0.1538%" height="15" fill="rgb(225,90,30)" fg:x="488" fg:w="1"/><text x="75.3269%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="75.0769%" y="517" width="0.1538%" height="15" fill="rgb(236,182,39)" fg:x="488" fg:w="1"/><text x="75.3269%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="75.0769%" y="501" width="0.1538%" height="15" fill="rgb(212,144,35)" fg:x="488" fg:w="1"/><text x="75.3269%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="75.0769%" y="485" width="0.1538%" height="15" fill="rgb(228,63,44)" fg:x="488" fg:w="1"/><text x="75.3269%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="75.0769%" y="469" width="0.1538%" height="15" fill="rgb(228,109,6)" fg:x="488" fg:w="1"/><text x="75.3269%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="75.0769%" y="453" width="0.1538%" height="15" fill="rgb(238,117,24)" fg:x="488" fg:w="1"/><text x="75.3269%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="75.0769%" y="437" width="0.1538%" height="15" fill="rgb(242,26,26)" fg:x="488" fg:w="1"/><text x="75.3269%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="75.0769%" y="421" width="0.1538%" height="15" fill="rgb(221,92,48)" fg:x="488" fg:w="1"/><text x="75.3269%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="75.0769%" y="405" width="0.1538%" height="15" fill="rgb(209,209,32)" fg:x="488" fg:w="1"/><text x="75.3269%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="75.0769%" y="389" width="0.1538%" height="15" fill="rgb(221,70,22)" fg:x="488" fg:w="1"/><text x="75.3269%" y="399.50"></text></g><g><title>[unknown] (34 samples, 5.23%)</title><rect x="76.7692%" y="629" width="5.2308%" height="15" fill="rgb(248,145,5)" fg:x="499" fg:w="34"/><text x="77.0192%" y="639.50">[unkno..</text></g><g><title>[unknown] (29 samples, 4.46%)</title><rect x="77.5385%" y="613" width="4.4615%" height="15" fill="rgb(226,116,26)" fg:x="504" fg:w="29"/><text x="77.7885%" y="623.50">[unkn..</text></g><g><title>[unknown] (29 samples, 4.46%)</title><rect x="77.5385%" y="597" width="4.4615%" height="15" fill="rgb(244,5,17)" fg:x="504" fg:w="29"/><text x="77.7885%" y="607.50">[unkn..</text></g><g><title>[unknown] (29 samples, 4.46%)</title><rect x="77.5385%" y="581" width="4.4615%" height="15" fill="rgb(252,159,33)" fg:x="504" fg:w="29"/><text x="77.7885%" y="591.50">[unkn..</text></g><g><title>[unknown] (23 samples, 3.54%)</title><rect x="78.4615%" y="565" width="3.5385%" height="15" fill="rgb(206,71,0)" fg:x="510" fg:w="23"/><text x="78.7115%" y="575.50">[un..</text></g><g><title>[unknown] (23 samples, 3.54%)</title><rect x="78.4615%" y="549" width="3.5385%" height="15" fill="rgb(233,118,54)" fg:x="510" fg:w="23"/><text x="78.7115%" y="559.50">[un..</text></g><g><title>[unknown] (17 samples, 2.62%)</title><rect x="79.3846%" y="533" width="2.6154%" height="15" fill="rgb(234,83,48)" fg:x="516" fg:w="17"/><text x="79.6346%" y="543.50">[u..</text></g><g><title>[unknown] (11 samples, 1.69%)</title><rect x="80.3077%" y="517" width="1.6923%" height="15" fill="rgb(228,3,54)" fg:x="522" fg:w="11"/><text x="80.5577%" y="527.50"></text></g><g><title>[unknown] (11 samples, 1.69%)</title><rect x="80.3077%" y="501" width="1.6923%" height="15" fill="rgb(226,155,13)" fg:x="522" fg:w="11"/><text x="80.5577%" y="511.50"></text></g><g><title>[unknown] (11 samples, 1.69%)</title><rect x="80.3077%" y="485" width="1.6923%" height="15" fill="rgb(241,28,37)" fg:x="522" fg:w="11"/><text x="80.5577%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="81.2308%" y="469" width="0.7692%" height="15" fill="rgb(233,93,10)" fg:x="528" fg:w="5"/><text x="81.4808%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="81.2308%" y="453" width="0.7692%" height="15" fill="rgb(225,113,19)" fg:x="528" fg:w="5"/><text x="81.4808%" y="463.50"></text></g><g><title>[unknown] (4 samples, 0.62%)</title><rect x="81.3846%" y="437" width="0.6154%" height="15" fill="rgb(241,2,18)" fg:x="529" fg:w="4"/><text x="81.6346%" y="447.50"></text></g><g><title>[unknown] (4 samples, 0.62%)</title><rect x="81.3846%" y="421" width="0.6154%" height="15" fill="rgb(228,207,21)" fg:x="529" fg:w="4"/><text x="81.6346%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="81.6923%" y="405" width="0.3077%" height="15" fill="rgb(213,211,35)" fg:x="531" fg:w="2"/><text x="81.9423%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="81.8462%" y="389" width="0.1538%" height="15" fill="rgb(209,83,10)" fg:x="532" fg:w="1"/><text x="82.0962%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="81.8462%" y="373" width="0.1538%" height="15" fill="rgb(209,164,1)" fg:x="532" fg:w="1"/><text x="82.0962%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="81.8462%" y="357" width="0.1538%" height="15" fill="rgb(213,184,43)" fg:x="532" fg:w="1"/><text x="82.0962%" y="367.50"></text></g><g><title>std::panic::catch_unwind (427 samples, 65.69%)</title><rect x="17.2308%" y="837" width="65.6923%" height="15" fill="rgb(231,61,34)" fg:x="112" fg:w="427"/><text x="17.4808%" y="847.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (427 samples, 65.69%)</title><rect x="17.2308%" y="821" width="65.6923%" height="15" fill="rgb(235,75,3)" fg:x="112" fg:w="427"/><text x="17.4808%" y="831.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (427 samples, 65.69%)</title><rect x="17.2308%" y="805" width="65.6923%" height="15" fill="rgb(220,106,47)" fg:x="112" fg:w="427"/><text x="17.4808%" y="815.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (427 samples, 65.69%)</title><rect x="17.2308%" y="789" width="65.6923%" height="15" fill="rgb(210,196,33)" fg:x="112" fg:w="427"/><text x="17.4808%" y="799.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (427 samples, 65.69%)</title><rect x="17.2308%" y="773" width="65.6923%" height="15" fill="rgb(229,154,42)" fg:x="112" fg:w="427"/><text x="17.4808%" y="783.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (427 samples, 65.69%)</title><rect x="17.2308%" y="757" width="65.6923%" height="15" fill="rgb(228,114,26)" fg:x="112" fg:w="427"/><text x="17.4808%" y="767.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>demoparser::parsing::parser::Parser::start_parser_thread_main::{{closure}} (366 samples, 56.31%)</title><rect x="26.6154%" y="741" width="56.3077%" height="15" fill="rgb(208,144,1)" fg:x="173" fg:w="366"/><text x="26.8654%" y="751.50">demoparser::parsing::parser::Parser::start_parser_thread_main::{{closure}}</text></g><g><title>demoparser::parsing::parser::Parser::start_parser_thread (366 samples, 56.31%)</title><rect x="26.6154%" y="725" width="56.3077%" height="15" fill="rgb(239,112,37)" fg:x="173" fg:w="366"/><text x="26.8654%" y="735.50">demoparser::parsing::parser::Parser::start_parser_thread</text></g><g><title>demoparser::parsing::parser::Parser::wait_for_map (130 samples, 20.00%)</title><rect x="62.9231%" y="709" width="20.0000%" height="15" fill="rgb(210,96,50)" fg:x="409" fg:w="130"/><text x="63.1731%" y="719.50">demoparser::parsing::parser::Pa..</text></g><g><title>std::thread::sleep (50 samples, 7.69%)</title><rect x="75.2308%" y="693" width="7.6923%" height="15" fill="rgb(222,178,2)" fg:x="489" fg:w="50"/><text x="75.4808%" y="703.50">std::thread..</text></g><g><title>std::sys::unix::thread::Thread::sleep (50 samples, 7.69%)</title><rect x="75.2308%" y="677" width="7.6923%" height="15" fill="rgb(226,74,18)" fg:x="489" fg:w="50"/><text x="75.4808%" y="687.50">std::sys::u..</text></g><g><title>__GI___nanosleep (40 samples, 6.15%)</title><rect x="76.7692%" y="661" width="6.1538%" height="15" fill="rgb(225,67,54)" fg:x="499" fg:w="40"/><text x="77.0192%" y="671.50">__GI___n..</text></g><g><title>__GI___clock_nanosleep (40 samples, 6.15%)</title><rect x="76.7692%" y="645" width="6.1538%" height="15" fill="rgb(251,92,32)" fg:x="499" fg:w="40"/><text x="77.0192%" y="655.50">__GI___c..</text></g><g><title>__GI___pthread_disable_asynccancel (6 samples, 0.92%)</title><rect x="82.0000%" y="629" width="0.9231%" height="15" fill="rgb(228,149,22)" fg:x="533" fg:w="6"/><text x="82.2500%" y="639.50"></text></g><g><title>__GI___pthread_attr_destroy (1 samples, 0.15%)</title><rect x="82.9231%" y="821" width="0.1538%" height="15" fill="rgb(243,54,13)" fg:x="539" fg:w="1"/><text x="83.1731%" y="831.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="82.9231%" y="805" width="0.1538%" height="15" fill="rgb(243,180,28)" fg:x="539" fg:w="1"/><text x="83.1731%" y="815.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="82.9231%" y="789" width="0.1538%" height="15" fill="rgb(208,167,24)" fg:x="539" fg:w="1"/><text x="83.1731%" y="799.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (429 samples, 66.00%)</title><rect x="17.2308%" y="901" width="66.0000%" height="15" fill="rgb(245,73,45)" fg:x="112" fg:w="429"/><text x="17.4808%" y="911.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (429 samples, 66.00%)</title><rect x="17.2308%" y="885" width="66.0000%" height="15" fill="rgb(237,203,48)" fg:x="112" fg:w="429"/><text x="17.4808%" y="895.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (429 samples, 66.00%)</title><rect x="17.2308%" y="869" width="66.0000%" height="15" fill="rgb(211,197,16)" fg:x="112" fg:w="429"/><text x="17.4808%" y="879.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (429 samples, 66.00%)</title><rect x="17.2308%" y="853" width="66.0000%" height="15" fill="rgb(243,99,51)" fg:x="112" fg:w="429"/><text x="17.4808%" y="863.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::sys::unix::thread::guard::current (2 samples, 0.31%)</title><rect x="82.9231%" y="837" width="0.3077%" height="15" fill="rgb(215,123,29)" fg:x="539" fg:w="2"/><text x="83.1731%" y="847.50"></text></g><g><title>__pthread_getattr_np (1 samples, 0.15%)</title><rect x="83.0769%" y="821" width="0.1538%" height="15" fill="rgb(239,186,37)" fg:x="540" fg:w="1"/><text x="83.3269%" y="831.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="83.0769%" y="805" width="0.1538%" height="15" fill="rgb(252,136,39)" fg:x="540" fg:w="1"/><text x="83.3269%" y="815.50"></text></g><g><title>tcache_init (1 samples, 0.15%)</title><rect x="83.0769%" y="789" width="0.1538%" height="15" fill="rgb(223,213,32)" fg:x="540" fg:w="1"/><text x="83.3269%" y="799.50"></text></g><g><title>tcache_init (1 samples, 0.15%)</title><rect x="83.0769%" y="773" width="0.1538%" height="15" fill="rgb(233,115,5)" fg:x="540" fg:w="1"/><text x="83.3269%" y="783.50"></text></g><g><title>arena_get2 (1 samples, 0.15%)</title><rect x="83.0769%" y="757" width="0.1538%" height="15" fill="rgb(207,226,44)" fg:x="540" fg:w="1"/><text x="83.3269%" y="767.50"></text></g><g><title>arena_get2 (1 samples, 0.15%)</title><rect x="83.0769%" y="741" width="0.1538%" height="15" fill="rgb(208,126,0)" fg:x="540" fg:w="1"/><text x="83.3269%" y="751.50"></text></g><g><title>_int_new_arena (1 samples, 0.15%)</title><rect x="83.0769%" y="725" width="0.1538%" height="15" fill="rgb(244,66,21)" fg:x="540" fg:w="1"/><text x="83.3269%" y="735.50"></text></g><g><title>new_heap (1 samples, 0.15%)</title><rect x="83.0769%" y="709" width="0.1538%" height="15" fill="rgb(222,97,12)" fg:x="540" fg:w="1"/><text x="83.3269%" y="719.50"></text></g><g><title>alloc_new_heap (1 samples, 0.15%)</title><rect x="83.0769%" y="693" width="0.1538%" height="15" fill="rgb(219,213,19)" fg:x="540" fg:w="1"/><text x="83.3269%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="83.0769%" y="677" width="0.1538%" height="15" fill="rgb(252,169,30)" fg:x="540" fg:w="1"/><text x="83.3269%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="83.0769%" y="661" width="0.1538%" height="15" fill="rgb(206,32,51)" fg:x="540" fg:w="1"/><text x="83.3269%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="83.0769%" y="645" width="0.1538%" height="15" fill="rgb(250,172,42)" fg:x="540" fg:w="1"/><text x="83.3269%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="83.0769%" y="629" width="0.1538%" height="15" fill="rgb(209,34,43)" fg:x="540" fg:w="1"/><text x="83.3269%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="83.0769%" y="613" width="0.1538%" height="15" fill="rgb(223,11,35)" fg:x="540" fg:w="1"/><text x="83.3269%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="83.0769%" y="597" width="0.1538%" height="15" fill="rgb(251,219,26)" fg:x="540" fg:w="1"/><text x="83.3269%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="83.0769%" y="581" width="0.1538%" height="15" fill="rgb(231,119,3)" fg:x="540" fg:w="1"/><text x="83.3269%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="83.0769%" y="565" width="0.1538%" height="15" fill="rgb(216,97,11)" fg:x="540" fg:w="1"/><text x="83.3269%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1 samples, 0.15%)</title><rect x="83.2308%" y="869" width="0.1538%" height="15" fill="rgb(223,59,9)" fg:x="541" fg:w="1"/><text x="83.4808%" y="879.50"></text></g><g><title>__GI___mmap64 (7 samples, 1.08%)</title><rect x="83.3846%" y="837" width="1.0769%" height="15" fill="rgb(233,93,31)" fg:x="542" fg:w="7"/><text x="83.6346%" y="847.50"></text></g><g><title>__GI___mmap64 (7 samples, 1.08%)</title><rect x="83.3846%" y="821" width="1.0769%" height="15" fill="rgb(239,81,33)" fg:x="542" fg:w="7"/><text x="83.6346%" y="831.50"></text></g><g><title>[unknown] (7 samples, 1.08%)</title><rect x="83.3846%" y="805" width="1.0769%" height="15" fill="rgb(213,120,34)" fg:x="542" fg:w="7"/><text x="83.6346%" y="815.50"></text></g><g><title>[unknown] (7 samples, 1.08%)</title><rect x="83.3846%" y="789" width="1.0769%" height="15" fill="rgb(243,49,53)" fg:x="542" fg:w="7"/><text x="83.6346%" y="799.50"></text></g><g><title>[unknown] (7 samples, 1.08%)</title><rect x="83.3846%" y="773" width="1.0769%" height="15" fill="rgb(247,216,33)" fg:x="542" fg:w="7"/><text x="83.6346%" y="783.50"></text></g><g><title>[unknown] (7 samples, 1.08%)</title><rect x="83.3846%" y="757" width="1.0769%" height="15" fill="rgb(226,26,14)" fg:x="542" fg:w="7"/><text x="83.6346%" y="767.50"></text></g><g><title>[unknown] (7 samples, 1.08%)</title><rect x="83.3846%" y="741" width="1.0769%" height="15" fill="rgb(215,49,53)" fg:x="542" fg:w="7"/><text x="83.6346%" y="751.50"></text></g><g><title>[unknown] (7 samples, 1.08%)</title><rect x="83.3846%" y="725" width="1.0769%" height="15" fill="rgb(245,162,40)" fg:x="542" fg:w="7"/><text x="83.6346%" y="735.50"></text></g><g><title>[unknown] (7 samples, 1.08%)</title><rect x="83.3846%" y="709" width="1.0769%" height="15" fill="rgb(229,68,17)" fg:x="542" fg:w="7"/><text x="83.6346%" y="719.50"></text></g><g><title>[unknown] (7 samples, 1.08%)</title><rect x="83.3846%" y="693" width="1.0769%" height="15" fill="rgb(213,182,10)" fg:x="542" fg:w="7"/><text x="83.6346%" y="703.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="83.6923%" y="677" width="0.7692%" height="15" fill="rgb(245,125,30)" fg:x="544" fg:w="5"/><text x="83.9423%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="84.1538%" y="661" width="0.3077%" height="15" fill="rgb(232,202,2)" fg:x="547" fg:w="2"/><text x="84.4038%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="84.1538%" y="645" width="0.3077%" height="15" fill="rgb(237,140,51)" fg:x="547" fg:w="2"/><text x="84.4038%" y="655.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="84.1538%" y="629" width="0.3077%" height="15" fill="rgb(236,157,25)" fg:x="547" fg:w="2"/><text x="84.4038%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="84.3077%" y="613" width="0.1538%" height="15" fill="rgb(219,209,0)" fg:x="548" fg:w="1"/><text x="84.5577%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="84.3077%" y="597" width="0.1538%" height="15" fill="rgb(240,116,54)" fg:x="548" fg:w="1"/><text x="84.5577%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="84.3077%" y="581" width="0.1538%" height="15" fill="rgb(216,10,36)" fg:x="548" fg:w="1"/><text x="84.5577%" y="591.50"></text></g><g><title>__GI___mprotect (6 samples, 0.92%)</title><rect x="84.4615%" y="837" width="0.9231%" height="15" fill="rgb(222,72,44)" fg:x="549" fg:w="6"/><text x="84.7115%" y="847.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="84.4615%" y="821" width="0.9231%" height="15" fill="rgb(232,159,9)" fg:x="549" fg:w="6"/><text x="84.7115%" y="831.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="84.4615%" y="805" width="0.9231%" height="15" fill="rgb(210,39,32)" fg:x="549" fg:w="6"/><text x="84.7115%" y="815.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="84.4615%" y="789" width="0.9231%" height="15" fill="rgb(216,194,45)" fg:x="549" fg:w="6"/><text x="84.7115%" y="799.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="84.4615%" y="773" width="0.9231%" height="15" fill="rgb(218,18,35)" fg:x="549" fg:w="6"/><text x="84.7115%" y="783.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="84.4615%" y="757" width="0.9231%" height="15" fill="rgb(207,83,51)" fg:x="549" fg:w="6"/><text x="84.7115%" y="767.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="84.4615%" y="741" width="0.9231%" height="15" fill="rgb(225,63,43)" fg:x="549" fg:w="6"/><text x="84.7115%" y="751.50"></text></g><g><title>[unknown] (6 samples, 0.92%)</title><rect x="84.4615%" y="725" width="0.9231%" height="15" fill="rgb(207,57,36)" fg:x="549" fg:w="6"/><text x="84.7115%" y="735.50"></text></g><g><title>[unknown] (3 samples, 0.46%)</title><rect x="84.9231%" y="709" width="0.4615%" height="15" fill="rgb(216,99,33)" fg:x="552" fg:w="3"/><text x="85.1731%" y="719.50"></text></g><g><title>__clone3 (450 samples, 69.23%)</title><rect x="16.4615%" y="949" width="69.2308%" height="15" fill="rgb(225,42,16)" fg:x="107" fg:w="450"/><text x="16.7115%" y="959.50">__clone3</text></g><g><title>start_thread (449 samples, 69.08%)</title><rect x="16.6154%" y="933" width="69.0769%" height="15" fill="rgb(220,201,45)" fg:x="108" fg:w="449"/><text x="16.8654%" y="943.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (445 samples, 68.46%)</title><rect x="17.2308%" y="917" width="68.4615%" height="15" fill="rgb(225,33,4)" fg:x="112" fg:w="445"/><text x="17.4808%" y="927.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (16 samples, 2.46%)</title><rect x="83.2308%" y="901" width="2.4615%" height="15" fill="rgb(224,33,50)" fg:x="541" fg:w="16"/><text x="83.4808%" y="911.50">st..</text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (16 samples, 2.46%)</title><rect x="83.2308%" y="885" width="2.4615%" height="15" fill="rgb(246,198,51)" fg:x="541" fg:w="16"/><text x="83.4808%" y="895.50">st..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (15 samples, 2.31%)</title><rect x="83.3846%" y="869" width="2.3077%" height="15" fill="rgb(205,22,4)" fg:x="542" fg:w="15"/><text x="83.6346%" y="879.50">s..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (15 samples, 2.31%)</title><rect x="83.3846%" y="853" width="2.3077%" height="15" fill="rgb(206,3,8)" fg:x="542" fg:w="15"/><text x="83.6346%" y="863.50">s..</text></g><g><title>std::sys::unix::os::page_size (2 samples, 0.31%)</title><rect x="85.3846%" y="837" width="0.3077%" height="15" fill="rgb(251,23,15)" fg:x="555" fg:w="2"/><text x="85.6346%" y="847.50"></text></g><g><title>__GI___sysconf (1 samples, 0.15%)</title><rect x="85.5385%" y="821" width="0.1538%" height="15" fill="rgb(252,88,28)" fg:x="556" fg:w="1"/><text x="85.7885%" y="831.50"></text></g><g><title>_mi_abandoned_reclaim_all (6 samples, 0.92%)</title><rect x="85.6923%" y="821" width="0.9231%" height="15" fill="rgb(212,127,14)" fg:x="557" fg:w="6"/><text x="85.9423%" y="831.50"></text></g><g><title>mi_segment_reclaim (6 samples, 0.92%)</title><rect x="85.6923%" y="805" width="0.9231%" height="15" fill="rgb(247,145,37)" fg:x="557" fg:w="6"/><text x="85.9423%" y="815.50"></text></g><g><title>_mi_page_free_collect (6 samples, 0.92%)</title><rect x="85.6923%" y="789" width="0.9231%" height="15" fill="rgb(209,117,53)" fg:x="557" fg:w="6"/><text x="85.9423%" y="799.50"></text></g><g><title>_mi_page_thread_free_collect (6 samples, 0.92%)</title><rect x="85.6923%" y="773" width="0.9231%" height="15" fill="rgb(212,90,42)" fg:x="557" fg:w="6"/><text x="85.9423%" y="783.50"></text></g><g><title>mi_block_next (6 samples, 0.92%)</title><rect x="85.6923%" y="757" width="0.9231%" height="15" fill="rgb(218,164,37)" fg:x="557" fg:w="6"/><text x="85.9423%" y="767.50"></text></g><g><title>mi_block_nextx (6 samples, 0.92%)</title><rect x="85.6923%" y="741" width="0.9231%" height="15" fill="rgb(246,65,34)" fg:x="557" fg:w="6"/><text x="85.9423%" y="751.50"></text></g><g><title>__GI_exit (14 samples, 2.15%)</title><rect x="85.6923%" y="901" width="2.1538%" height="15" fill="rgb(231,100,33)" fg:x="557" fg:w="14"/><text x="85.9423%" y="911.50">_..</text></g><g><title>__run_exit_handlers (14 samples, 2.15%)</title><rect x="85.6923%" y="885" width="2.1538%" height="15" fill="rgb(228,126,14)" fg:x="557" fg:w="14"/><text x="85.9423%" y="895.50">_..</text></g><g><title>mi_process_done (14 samples, 2.15%)</title><rect x="85.6923%" y="869" width="2.1538%" height="15" fill="rgb(215,173,21)" fg:x="557" fg:w="14"/><text x="85.9423%" y="879.50">m..</text></g><g><title>mi_process_done (14 samples, 2.15%)</title><rect x="85.6923%" y="853" width="2.1538%" height="15" fill="rgb(210,6,40)" fg:x="557" fg:w="14"/><text x="85.9423%" y="863.50">m..</text></g><g><title>mi_heap_collect_ex (14 samples, 2.15%)</title><rect x="85.6923%" y="837" width="2.1538%" height="15" fill="rgb(212,48,18)" fg:x="557" fg:w="14"/><text x="85.9423%" y="847.50">m..</text></g><g><title>mi_segment_cache_purge (8 samples, 1.23%)</title><rect x="86.6154%" y="821" width="1.2308%" height="15" fill="rgb(230,214,11)" fg:x="563" fg:w="8"/><text x="86.8654%" y="831.50"></text></g><g><title>mi_commit_mask_decommit (8 samples, 1.23%)</title><rect x="86.6154%" y="805" width="1.2308%" height="15" fill="rgb(254,105,39)" fg:x="563" fg:w="8"/><text x="86.8654%" y="815.50"></text></g><g><title>_mi_os_decommit (8 samples, 1.23%)</title><rect x="86.6154%" y="789" width="1.2308%" height="15" fill="rgb(245,158,5)" fg:x="563" fg:w="8"/><text x="86.8654%" y="799.50"></text></g><g><title>mi_os_commitx (8 samples, 1.23%)</title><rect x="86.6154%" y="773" width="1.2308%" height="15" fill="rgb(249,208,11)" fg:x="563" fg:w="8"/><text x="86.8654%" y="783.50"></text></g><g><title>__GI_madvise (8 samples, 1.23%)</title><rect x="86.6154%" y="757" width="1.2308%" height="15" fill="rgb(210,39,28)" fg:x="563" fg:w="8"/><text x="86.8654%" y="767.50"></text></g><g><title>[unknown] (8 samples, 1.23%)</title><rect x="86.6154%" y="741" width="1.2308%" height="15" fill="rgb(211,56,53)" fg:x="563" fg:w="8"/><text x="86.8654%" y="751.50"></text></g><g><title>[unknown] (8 samples, 1.23%)</title><rect x="86.6154%" y="725" width="1.2308%" height="15" fill="rgb(226,201,30)" fg:x="563" fg:w="8"/><text x="86.8654%" y="735.50"></text></g><g><title>[unknown] (8 samples, 1.23%)</title><rect x="86.6154%" y="709" width="1.2308%" height="15" fill="rgb(239,101,34)" fg:x="563" fg:w="8"/><text x="86.8654%" y="719.50"></text></g><g><title>[unknown] (8 samples, 1.23%)</title><rect x="86.6154%" y="693" width="1.2308%" height="15" fill="rgb(226,209,5)" fg:x="563" fg:w="8"/><text x="86.8654%" y="703.50"></text></g><g><title>[unknown] (8 samples, 1.23%)</title><rect x="86.6154%" y="677" width="1.2308%" height="15" fill="rgb(250,105,47)" fg:x="563" fg:w="8"/><text x="86.8654%" y="687.50"></text></g><g><title>[unknown] (8 samples, 1.23%)</title><rect x="86.6154%" y="661" width="1.2308%" height="15" fill="rgb(230,72,3)" fg:x="563" fg:w="8"/><text x="86.8654%" y="671.50"></text></g><g><title>[unknown] (8 samples, 1.23%)</title><rect x="86.6154%" y="645" width="1.2308%" height="15" fill="rgb(232,218,39)" fg:x="563" fg:w="8"/><text x="86.8654%" y="655.50"></text></g><g><title>[unknown] (8 samples, 1.23%)</title><rect x="86.6154%" y="629" width="1.2308%" height="15" fill="rgb(248,166,6)" fg:x="563" fg:w="8"/><text x="86.8654%" y="639.50"></text></g><g><title>[unknown] (7 samples, 1.08%)</title><rect x="86.7692%" y="613" width="1.0769%" height="15" fill="rgb(247,89,20)" fg:x="564" fg:w="7"/><text x="87.0192%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.46%)</title><rect x="87.3846%" y="597" width="0.4615%" height="15" fill="rgb(248,130,54)" fg:x="568" fg:w="3"/><text x="87.6346%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.46%)</title><rect x="87.3846%" y="581" width="0.4615%" height="15" fill="rgb(234,196,4)" fg:x="568" fg:w="3"/><text x="87.6346%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.46%)</title><rect x="87.3846%" y="565" width="0.4615%" height="15" fill="rgb(250,143,31)" fg:x="568" fg:w="3"/><text x="87.6346%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="87.6923%" y="549" width="0.1538%" height="15" fill="rgb(211,110,34)" fg:x="570" fg:w="1"/><text x="87.9423%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser::Parser&gt; (3 samples, 0.46%)</title><rect x="87.8462%" y="501" width="0.4615%" height="15" fill="rgb(215,124,48)" fg:x="571" fg:w="3"/><text x="88.0962%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;memmap2::Mmap&gt;&gt; (3 samples, 0.46%)</title><rect x="87.8462%" y="485" width="0.4615%" height="15" fill="rgb(216,46,13)" fg:x="571" fg:w="3"/><text x="88.0962%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.46%)</title><rect x="87.8462%" y="469" width="0.4615%" height="15" fill="rgb(205,184,25)" fg:x="571" fg:w="3"/><text x="88.0962%" y="479.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.46%)</title><rect x="87.8462%" y="453" width="0.4615%" height="15" fill="rgb(228,1,10)" fg:x="571" fg:w="3"/><text x="88.0962%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;memmap2::Mmap&gt; (3 samples, 0.46%)</title><rect x="87.8462%" y="437" width="0.4615%" height="15" fill="rgb(213,116,27)" fg:x="571" fg:w="3"/><text x="88.0962%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;memmap2::os::MmapInner&gt; (3 samples, 0.46%)</title><rect x="87.8462%" y="421" width="0.4615%" height="15" fill="rgb(241,95,50)" fg:x="571" fg:w="3"/><text x="88.0962%" y="431.50"></text></g><g><title>__GI___munmap (3 samples, 0.46%)</title><rect x="87.8462%" y="405" width="0.4615%" height="15" fill="rgb(238,48,32)" fg:x="571" fg:w="3"/><text x="88.0962%" y="415.50"></text></g><g><title>[unknown] (3 samples, 0.46%)</title><rect x="87.8462%" y="389" width="0.4615%" height="15" fill="rgb(235,113,49)" fg:x="571" fg:w="3"/><text x="88.0962%" y="399.50"></text></g><g><title>[unknown] (3 samples, 0.46%)</title><rect x="87.8462%" y="373" width="0.4615%" height="15" fill="rgb(205,127,43)" fg:x="571" fg:w="3"/><text x="88.0962%" y="383.50"></text></g><g><title>[unknown] (3 samples, 0.46%)</title><rect x="87.8462%" y="357" width="0.4615%" height="15" fill="rgb(250,162,2)" fg:x="571" fg:w="3"/><text x="88.0962%" y="367.50"></text></g><g><title>[unknown] (3 samples, 0.46%)</title><rect x="87.8462%" y="341" width="0.4615%" height="15" fill="rgb(220,13,41)" fg:x="571" fg:w="3"/><text x="88.0962%" y="351.50"></text></g><g><title>[unknown] (3 samples, 0.46%)</title><rect x="87.8462%" y="325" width="0.4615%" height="15" fill="rgb(249,221,25)" fg:x="571" fg:w="3"/><text x="88.0962%" y="335.50"></text></g><g><title>[unknown] (3 samples, 0.46%)</title><rect x="87.8462%" y="309" width="0.4615%" height="15" fill="rgb(215,208,19)" fg:x="571" fg:w="3"/><text x="88.0962%" y="319.50"></text></g><g><title>[unknown] (3 samples, 0.46%)</title><rect x="87.8462%" y="293" width="0.4615%" height="15" fill="rgb(236,175,2)" fg:x="571" fg:w="3"/><text x="88.0962%" y="303.50"></text></g><g><title>[unknown] (3 samples, 0.46%)</title><rect x="87.8462%" y="277" width="0.4615%" height="15" fill="rgb(241,52,2)" fg:x="571" fg:w="3"/><text x="88.0962%" y="287.50"></text></g><g><title>[unknown] (3 samples, 0.46%)</title><rect x="87.8462%" y="261" width="0.4615%" height="15" fill="rgb(248,140,14)" fg:x="571" fg:w="3"/><text x="88.0962%" y="271.50"></text></g><g><title>[unknown] (3 samples, 0.46%)</title><rect x="87.8462%" y="245" width="0.4615%" height="15" fill="rgb(253,22,42)" fg:x="571" fg:w="3"/><text x="88.0962%" y="255.50"></text></g><g><title>[unknown] (3 samples, 0.46%)</title><rect x="87.8462%" y="229" width="0.4615%" height="15" fill="rgb(234,61,47)" fg:x="571" fg:w="3"/><text x="88.0962%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="88.1538%" y="213" width="0.1538%" height="15" fill="rgb(208,226,15)" fg:x="573" fg:w="1"/><text x="88.4038%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="88.1538%" y="197" width="0.1538%" height="15" fill="rgb(217,221,4)" fg:x="573" fg:w="1"/><text x="88.4038%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="88.1538%" y="181" width="0.1538%" height="15" fill="rgb(212,174,34)" fg:x="573" fg:w="1"/><text x="88.4038%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="88.1538%" y="165" width="0.1538%" height="15" fill="rgb(253,83,4)" fg:x="573" fg:w="1"/><text x="88.4038%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="88.1538%" y="149" width="0.1538%" height="15" fill="rgb(250,195,49)" fg:x="573" fg:w="1"/><text x="88.4038%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3 samples, 0.46%)</title><rect x="88.3077%" y="485" width="0.4615%" height="15" fill="rgb(241,192,25)" fg:x="574" fg:w="3"/><text x="88.5577%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.46%)</title><rect x="88.3077%" y="469" width="0.4615%" height="15" fill="rgb(208,124,10)" fg:x="574" fg:w="3"/><text x="88.5577%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.46%)</title><rect x="88.3077%" y="453" width="0.4615%" height="15" fill="rgb(222,33,0)" fg:x="574" fg:w="3"/><text x="88.5577%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.46%)</title><rect x="88.3077%" y="437" width="0.4615%" height="15" fill="rgb(234,209,28)" fg:x="574" fg:w="3"/><text x="88.5577%" y="447.50"></text></g><g><title>[libc.so.6] (3 samples, 0.46%)</title><rect x="88.3077%" y="421" width="0.4615%" height="15" fill="rgb(224,11,23)" fg:x="574" fg:w="3"/><text x="88.5577%" y="431.50"></text></g><g><title>[unknown] (3 samples, 0.46%)</title><rect x="88.3077%" y="405" width="0.4615%" height="15" fill="rgb(232,99,1)" fg:x="574" fg:w="3"/><text x="88.5577%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="88.4615%" y="389" width="0.3077%" height="15" fill="rgb(237,95,45)" fg:x="575" fg:w="2"/><text x="88.7115%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="88.4615%" y="373" width="0.3077%" height="15" fill="rgb(208,109,11)" fg:x="575" fg:w="2"/><text x="88.7115%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="88.4615%" y="357" width="0.3077%" height="15" fill="rgb(216,190,48)" fg:x="575" fg:w="2"/><text x="88.7115%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="88.4615%" y="341" width="0.3077%" height="15" fill="rgb(251,171,36)" fg:x="575" fg:w="2"/><text x="88.7115%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="88.4615%" y="325" width="0.3077%" height="15" fill="rgb(230,62,22)" fg:x="575" fg:w="2"/><text x="88.7115%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="88.4615%" y="309" width="0.3077%" height="15" fill="rgb(225,114,35)" fg:x="575" fg:w="2"/><text x="88.7115%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="88.4615%" y="293" width="0.3077%" height="15" fill="rgb(215,118,42)" fg:x="575" fg:w="2"/><text x="88.7115%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="88.4615%" y="277" width="0.3077%" height="15" fill="rgb(243,119,21)" fg:x="575" fg:w="2"/><text x="88.7115%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="88.4615%" y="261" width="0.3077%" height="15" fill="rgb(252,177,53)" fg:x="575" fg:w="2"/><text x="88.7115%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="88.4615%" y="245" width="0.3077%" height="15" fill="rgb(237,209,29)" fg:x="575" fg:w="2"/><text x="88.7115%" y="255.50"></text></g><g><title>alloc::vec::from_elem (3 samples, 0.46%)</title><rect x="88.7692%" y="485" width="0.4615%" height="15" fill="rgb(212,65,23)" fg:x="577" fg:w="3"/><text x="89.0192%" y="495.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (3 samples, 0.46%)</title><rect x="88.7692%" y="469" width="0.4615%" height="15" fill="rgb(230,222,46)" fg:x="577" fg:w="3"/><text x="89.0192%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (3 samples, 0.46%)</title><rect x="88.7692%" y="453" width="0.4615%" height="15" fill="rgb(215,135,32)" fg:x="577" fg:w="3"/><text x="89.0192%" y="463.50"></text></g><g><title>core::ptr::write (3 samples, 0.46%)</title><rect x="88.7692%" y="437" width="0.4615%" height="15" fill="rgb(246,101,22)" fg:x="577" fg:w="3"/><text x="89.0192%" y="447.50"></text></g><g><title>[unknown] (3 samples, 0.46%)</title><rect x="88.7692%" y="421" width="0.4615%" height="15" fill="rgb(206,107,13)" fg:x="577" fg:w="3"/><text x="89.0192%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="88.9231%" y="405" width="0.3077%" height="15" fill="rgb(250,100,44)" fg:x="578" fg:w="2"/><text x="89.1731%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="88.9231%" y="389" width="0.3077%" height="15" fill="rgb(231,147,38)" fg:x="578" fg:w="2"/><text x="89.1731%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="88.9231%" y="373" width="0.3077%" height="15" fill="rgb(229,8,40)" fg:x="578" fg:w="2"/><text x="89.1731%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="88.9231%" y="357" width="0.3077%" height="15" fill="rgb(221,135,30)" fg:x="578" fg:w="2"/><text x="89.1731%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="88.9231%" y="341" width="0.3077%" height="15" fill="rgb(249,193,18)" fg:x="578" fg:w="2"/><text x="89.1731%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="88.9231%" y="325" width="0.3077%" height="15" fill="rgb(209,133,39)" fg:x="578" fg:w="2"/><text x="89.1731%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="89.0769%" y="309" width="0.1538%" height="15" fill="rgb(232,100,14)" fg:x="579" fg:w="1"/><text x="89.3269%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="89.0769%" y="293" width="0.1538%" height="15" fill="rgb(224,185,1)" fg:x="579" fg:w="1"/><text x="89.3269%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="89.0769%" y="277" width="0.1538%" height="15" fill="rgb(223,139,8)" fg:x="579" fg:w="1"/><text x="89.3269%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="89.0769%" y="261" width="0.1538%" height="15" fill="rgb(232,213,38)" fg:x="579" fg:w="1"/><text x="89.3269%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="89.0769%" y="245" width="0.1538%" height="15" fill="rgb(207,94,22)" fg:x="579" fg:w="1"/><text x="89.3269%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;f32&gt;&gt;&gt; (2 samples, 0.31%)</title><rect x="89.2308%" y="485" width="0.3077%" height="15" fill="rgb(219,183,54)" fg:x="580" fg:w="2"/><text x="89.4808%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;f32&gt;&gt;&gt; (2 samples, 0.31%)</title><rect x="89.2308%" y="469" width="0.3077%" height="15" fill="rgb(216,185,54)" fg:x="580" fg:w="2"/><text x="89.4808%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.31%)</title><rect x="89.2308%" y="453" width="0.3077%" height="15" fill="rgb(254,217,39)" fg:x="580" fg:w="2"/><text x="89.4808%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.31%)</title><rect x="89.2308%" y="437" width="0.3077%" height="15" fill="rgb(240,178,23)" fg:x="580" fg:w="2"/><text x="89.4808%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.31%)</title><rect x="89.2308%" y="421" width="0.3077%" height="15" fill="rgb(218,11,47)" fg:x="580" fg:w="2"/><text x="89.4808%" y="431.50"></text></g><g><title>_mi_os_free_ex (2 samples, 0.31%)</title><rect x="89.2308%" y="405" width="0.3077%" height="15" fill="rgb(218,51,51)" fg:x="580" fg:w="2"/><text x="89.4808%" y="415.50"></text></g><g><title>_mi_os_free_ex (2 samples, 0.31%)</title><rect x="89.2308%" y="389" width="0.3077%" height="15" fill="rgb(238,126,27)" fg:x="580" fg:w="2"/><text x="89.4808%" y="399.50"></text></g><g><title>mi_os_mem_free (2 samples, 0.31%)</title><rect x="89.2308%" y="373" width="0.3077%" height="15" fill="rgb(249,202,22)" fg:x="580" fg:w="2"/><text x="89.4808%" y="383.50"></text></g><g><title>mi_os_mem_free (2 samples, 0.31%)</title><rect x="89.2308%" y="357" width="0.3077%" height="15" fill="rgb(254,195,49)" fg:x="580" fg:w="2"/><text x="89.4808%" y="367.50"></text></g><g><title>__GI___munmap (2 samples, 0.31%)</title><rect x="89.2308%" y="341" width="0.3077%" height="15" fill="rgb(208,123,14)" fg:x="580" fg:w="2"/><text x="89.4808%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="89.2308%" y="325" width="0.3077%" height="15" fill="rgb(224,200,8)" fg:x="580" fg:w="2"/><text x="89.4808%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="89.2308%" y="309" width="0.3077%" height="15" fill="rgb(217,61,36)" fg:x="580" fg:w="2"/><text x="89.4808%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="89.2308%" y="293" width="0.3077%" height="15" fill="rgb(206,35,45)" fg:x="580" fg:w="2"/><text x="89.4808%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="89.2308%" y="277" width="0.3077%" height="15" fill="rgb(217,65,33)" fg:x="580" fg:w="2"/><text x="89.4808%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="89.2308%" y="261" width="0.3077%" height="15" fill="rgb(222,158,48)" fg:x="580" fg:w="2"/><text x="89.4808%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="89.2308%" y="245" width="0.3077%" height="15" fill="rgb(254,2,54)" fg:x="580" fg:w="2"/><text x="89.4808%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="89.2308%" y="229" width="0.3077%" height="15" fill="rgb(250,143,38)" fg:x="580" fg:w="2"/><text x="89.4808%" y="239.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="89.2308%" y="213" width="0.3077%" height="15" fill="rgb(248,25,0)" fg:x="580" fg:w="2"/><text x="89.4808%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="89.2308%" y="197" width="0.3077%" height="15" fill="rgb(206,152,27)" fg:x="580" fg:w="2"/><text x="89.4808%" y="207.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="89.2308%" y="181" width="0.3077%" height="15" fill="rgb(240,77,30)" fg:x="580" fg:w="2"/><text x="89.4808%" y="191.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="89.2308%" y="165" width="0.3077%" height="15" fill="rgb(231,5,3)" fg:x="580" fg:w="2"/><text x="89.4808%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.62%)</title><rect x="90.1538%" y="325" width="0.6154%" height="15" fill="rgb(207,226,32)" fg:x="586" fg:w="4"/><text x="90.4038%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::entities::SingleEntOutput]&gt; (4 samples, 0.62%)</title><rect x="90.1538%" y="309" width="0.6154%" height="15" fill="rgb(222,207,47)" fg:x="586" fg:w="4"/><text x="90.4038%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::entities::SingleEntOutput&gt; (3 samples, 0.46%)</title><rect x="90.3077%" y="293" width="0.4615%" height="15" fill="rgb(229,115,45)" fg:x="587" fg:w="3"/><text x="90.5577%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::variants::PropData&gt; (3 samples, 0.46%)</title><rect x="90.3077%" y="277" width="0.4615%" height="15" fill="rgb(224,191,6)" fg:x="587" fg:w="3"/><text x="90.5577%" y="287.50"></text></g><g><title>_mi_free_block_mt (1 samples, 0.15%)</title><rect x="90.9231%" y="261" width="0.1538%" height="15" fill="rgb(230,227,24)" fg:x="591" fg:w="1"/><text x="91.1731%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;demoparser::parsing::entities::PacketEntsOutput&gt;&gt; (11 samples, 1.69%)</title><rect x="89.5385%" y="421" width="1.6923%" height="15" fill="rgb(228,80,19)" fg:x="582" fg:w="11"/><text x="89.7885%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::entities::PacketEntsOutput&gt; (11 samples, 1.69%)</title><rect x="89.5385%" y="405" width="1.6923%" height="15" fill="rgb(247,229,0)" fg:x="582" fg:w="11"/><text x="89.7885%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;demoparser::parsing::entities::SingleEntOutput&gt;&gt;&gt; (11 samples, 1.69%)</title><rect x="89.5385%" y="389" width="1.6923%" height="15" fill="rgb(237,194,15)" fg:x="582" fg:w="11"/><text x="89.7885%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 1.69%)</title><rect x="89.5385%" y="373" width="1.6923%" height="15" fill="rgb(219,203,20)" fg:x="582" fg:w="11"/><text x="89.7885%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;demoparser::parsing::entities::SingleEntOutput&gt;]&gt; (11 samples, 1.69%)</title><rect x="89.5385%" y="357" width="1.6923%" height="15" fill="rgb(234,128,8)" fg:x="582" fg:w="11"/><text x="89.7885%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::entities::SingleEntOutput&gt;&gt; (7 samples, 1.08%)</title><rect x="90.1538%" y="341" width="1.0769%" height="15" fill="rgb(248,202,8)" fg:x="586" fg:w="7"/><text x="90.4038%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;demoparser::parsing::entities::SingleEntOutput&gt;&gt; (3 samples, 0.46%)</title><rect x="90.7692%" y="325" width="0.4615%" height="15" fill="rgb(206,104,37)" fg:x="590" fg:w="3"/><text x="91.0192%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.46%)</title><rect x="90.7692%" y="309" width="0.4615%" height="15" fill="rgb(223,8,27)" fg:x="590" fg:w="3"/><text x="91.0192%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.46%)</title><rect x="90.7692%" y="293" width="0.4615%" height="15" fill="rgb(216,217,28)" fg:x="590" fg:w="3"/><text x="91.0192%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.46%)</title><rect x="90.7692%" y="277" width="0.4615%" height="15" fill="rgb(249,199,1)" fg:x="590" fg:w="3"/><text x="91.0192%" y="287.50"></text></g><g><title>mi_free_generic (1 samples, 0.15%)</title><rect x="91.0769%" y="261" width="0.1538%" height="15" fill="rgb(240,85,17)" fg:x="592" fg:w="1"/><text x="91.3269%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 1.85%)</title><rect x="89.5385%" y="469" width="1.8462%" height="15" fill="rgb(206,108,45)" fg:x="582" fg:w="12"/><text x="89.7885%" y="479.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::parser::JobResult]&gt; (12 samples, 1.85%)</title><rect x="89.5385%" y="453" width="1.8462%" height="15" fill="rgb(245,210,41)" fg:x="582" fg:w="12"/><text x="89.7885%" y="463.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser::JobResult&gt; (12 samples, 1.85%)</title><rect x="89.5385%" y="437" width="1.8462%" height="15" fill="rgb(206,13,37)" fg:x="582" fg:w="12"/><text x="89.7885%" y="447.50">c..</text></g><g><title>mi_free (1 samples, 0.15%)</title><rect x="91.2308%" y="421" width="0.1538%" height="15" fill="rgb(250,61,18)" fg:x="593" fg:w="1"/><text x="91.4808%" y="431.50"></text></g><g><title>_mi_segment_page_of (1 samples, 0.15%)</title><rect x="91.2308%" y="405" width="0.1538%" height="15" fill="rgb(235,172,48)" fg:x="593" fg:w="1"/><text x="91.4808%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::parser::JobResult&gt;&gt; (13 samples, 2.00%)</title><rect x="89.5385%" y="485" width="2.0000%" height="15" fill="rgb(249,201,17)" fg:x="582" fg:w="13"/><text x="89.7885%" y="495.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;demoparser::parsing::parser::JobResult&gt;&gt; (1 samples, 0.15%)</title><rect x="91.3846%" y="469" width="0.1538%" height="15" fill="rgb(219,208,6)" fg:x="594" fg:w="1"/><text x="91.6346%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="91.3846%" y="453" width="0.1538%" height="15" fill="rgb(248,31,23)" fg:x="594" fg:w="1"/><text x="91.6346%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.15%)</title><rect x="91.3846%" y="437" width="0.1538%" height="15" fill="rgb(245,15,42)" fg:x="594" fg:w="1"/><text x="91.6346%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.15%)</title><rect x="91.3846%" y="421" width="0.1538%" height="15" fill="rgb(222,217,39)" fg:x="594" fg:w="1"/><text x="91.6346%" y="431.50"></text></g><g><title>_mi_os_free_ex (1 samples, 0.15%)</title><rect x="91.3846%" y="405" width="0.1538%" height="15" fill="rgb(210,219,27)" fg:x="594" fg:w="1"/><text x="91.6346%" y="415.50"></text></g><g><title>_mi_os_free_ex (1 samples, 0.15%)</title><rect x="91.3846%" y="389" width="0.1538%" height="15" fill="rgb(252,166,36)" fg:x="594" fg:w="1"/><text x="91.6346%" y="399.50"></text></g><g><title>mi_os_mem_free (1 samples, 0.15%)</title><rect x="91.3846%" y="373" width="0.1538%" height="15" fill="rgb(245,132,34)" fg:x="594" fg:w="1"/><text x="91.6346%" y="383.50"></text></g><g><title>mi_os_mem_free (1 samples, 0.15%)</title><rect x="91.3846%" y="357" width="0.1538%" height="15" fill="rgb(236,54,3)" fg:x="594" fg:w="1"/><text x="91.6346%" y="367.50"></text></g><g><title>__GI___munmap (1 samples, 0.15%)</title><rect x="91.3846%" y="341" width="0.1538%" height="15" fill="rgb(241,173,43)" fg:x="594" fg:w="1"/><text x="91.6346%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="91.3846%" y="325" width="0.1538%" height="15" fill="rgb(215,190,9)" fg:x="594" fg:w="1"/><text x="91.6346%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="91.3846%" y="309" width="0.1538%" height="15" fill="rgb(242,101,16)" fg:x="594" fg:w="1"/><text x="91.6346%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="91.3846%" y="293" width="0.1538%" height="15" fill="rgb(223,190,21)" fg:x="594" fg:w="1"/><text x="91.6346%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="91.3846%" y="277" width="0.1538%" height="15" fill="rgb(215,228,25)" fg:x="594" fg:w="1"/><text x="91.6346%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="91.3846%" y="261" width="0.1538%" height="15" fill="rgb(225,36,22)" fg:x="594" fg:w="1"/><text x="91.6346%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="91.3846%" y="245" width="0.1538%" height="15" fill="rgb(251,106,46)" fg:x="594" fg:w="1"/><text x="91.6346%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="91.3846%" y="229" width="0.1538%" height="15" fill="rgb(208,90,1)" fg:x="594" fg:w="1"/><text x="91.6346%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="91.3846%" y="213" width="0.1538%" height="15" fill="rgb(243,10,4)" fg:x="594" fg:w="1"/><text x="91.6346%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="91.3846%" y="197" width="0.1538%" height="15" fill="rgb(212,137,27)" fg:x="594" fg:w="1"/><text x="91.6346%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="91.3846%" y="181" width="0.1538%" height="15" fill="rgb(231,220,49)" fg:x="594" fg:w="1"/><text x="91.6346%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="91.3846%" y="165" width="0.1538%" height="15" fill="rgb(237,96,20)" fg:x="594" fg:w="1"/><text x="91.6346%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 1.23%)</title><rect x="91.5385%" y="421" width="1.2308%" height="15" fill="rgb(239,229,30)" fg:x="595" fg:w="8"/><text x="91.7885%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 1.23%)</title><rect x="91.5385%" y="405" width="1.2308%" height="15" fill="rgb(219,65,33)" fg:x="595" fg:w="8"/><text x="91.7885%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 1.23%)</title><rect x="91.5385%" y="389" width="1.2308%" height="15" fill="rgb(243,134,7)" fg:x="595" fg:w="8"/><text x="91.7885%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 1.23%)</title><rect x="91.5385%" y="373" width="1.2308%" height="15" fill="rgb(216,177,54)" fg:x="595" fg:w="8"/><text x="91.7885%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 1.23%)</title><rect x="91.5385%" y="357" width="1.2308%" height="15" fill="rgb(211,160,20)" fg:x="595" fg:w="8"/><text x="91.7885%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 1.23%)</title><rect x="91.5385%" y="341" width="1.2308%" height="15" fill="rgb(239,85,39)" fg:x="595" fg:w="8"/><text x="91.7885%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 1.23%)</title><rect x="91.5385%" y="325" width="1.2308%" height="15" fill="rgb(232,125,22)" fg:x="595" fg:w="8"/><text x="91.7885%" y="335.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 1.23%)</title><rect x="91.5385%" y="309" width="1.2308%" height="15" fill="rgb(244,57,34)" fg:x="595" fg:w="8"/><text x="91.7885%" y="319.50"></text></g><g><title>_mi_heap_realloc_zero (8 samples, 1.23%)</title><rect x="91.5385%" y="293" width="1.2308%" height="15" fill="rgb(214,203,32)" fg:x="595" fg:w="8"/><text x="91.7885%" y="303.50"></text></g><g><title>_mi_memcpy_aligned (8 samples, 1.23%)</title><rect x="91.5385%" y="277" width="1.2308%" height="15" fill="rgb(207,58,43)" fg:x="595" fg:w="8"/><text x="91.7885%" y="287.50"></text></g><g><title>_mi_memcpy (8 samples, 1.23%)</title><rect x="91.5385%" y="261" width="1.2308%" height="15" fill="rgb(215,193,15)" fg:x="595" fg:w="8"/><text x="91.7885%" y="271.50"></text></g><g><title>memcpy (8 samples, 1.23%)</title><rect x="91.5385%" y="245" width="1.2308%" height="15" fill="rgb(232,15,44)" fg:x="595" fg:w="8"/><text x="91.7885%" y="255.50"></text></g><g><title>[libc.so.6] (8 samples, 1.23%)</title><rect x="91.5385%" y="229" width="1.2308%" height="15" fill="rgb(212,3,48)" fg:x="595" fg:w="8"/><text x="91.7885%" y="239.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="92.0000%" y="213" width="0.7692%" height="15" fill="rgb(218,128,7)" fg:x="598" fg:w="5"/><text x="92.2500%" y="223.50"></text></g><g><title>[unknown] (4 samples, 0.62%)</title><rect x="92.1538%" y="197" width="0.6154%" height="15" fill="rgb(226,216,39)" fg:x="599" fg:w="4"/><text x="92.4038%" y="207.50"></text></g><g><title>[unknown] (4 samples, 0.62%)</title><rect x="92.1538%" y="181" width="0.6154%" height="15" fill="rgb(243,47,51)" fg:x="599" fg:w="4"/><text x="92.4038%" y="191.50"></text></g><g><title>[unknown] (4 samples, 0.62%)</title><rect x="92.1538%" y="165" width="0.6154%" height="15" fill="rgb(241,183,40)" fg:x="599" fg:w="4"/><text x="92.4038%" y="175.50"></text></g><g><title>[unknown] (4 samples, 0.62%)</title><rect x="92.1538%" y="149" width="0.6154%" height="15" fill="rgb(231,217,32)" fg:x="599" fg:w="4"/><text x="92.4038%" y="159.50"></text></g><g><title>[unknown] (4 samples, 0.62%)</title><rect x="92.1538%" y="133" width="0.6154%" height="15" fill="rgb(229,61,38)" fg:x="599" fg:w="4"/><text x="92.4038%" y="143.50"></text></g><g><title>[unknown] (3 samples, 0.46%)</title><rect x="92.3077%" y="117" width="0.4615%" height="15" fill="rgb(225,210,5)" fg:x="600" fg:w="3"/><text x="92.5577%" y="127.50"></text></g><g><title>[unknown] (3 samples, 0.46%)</title><rect x="92.3077%" y="101" width="0.4615%" height="15" fill="rgb(231,79,45)" fg:x="600" fg:w="3"/><text x="92.5577%" y="111.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="92.4615%" y="85" width="0.3077%" height="15" fill="rgb(224,100,7)" fg:x="601" fg:w="2"/><text x="92.7115%" y="95.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="92.4615%" y="69" width="0.3077%" height="15" fill="rgb(241,198,18)" fg:x="601" fg:w="2"/><text x="92.7115%" y="79.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="92.4615%" y="53" width="0.3077%" height="15" fill="rgb(252,97,53)" fg:x="601" fg:w="2"/><text x="92.7115%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="92.6154%" y="37" width="0.1538%" height="15" fill="rgb(220,88,7)" fg:x="602" fg:w="1"/><text x="92.8654%" y="47.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (15 samples, 2.31%)</title><rect x="91.5385%" y="469" width="2.3077%" height="15" fill="rgb(213,176,14)" fg:x="595" fg:w="15"/><text x="91.7885%" y="479.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (15 samples, 2.31%)</title><rect x="91.5385%" y="453" width="2.3077%" height="15" fill="rgb(246,73,7)" fg:x="595" fg:w="15"/><text x="91.7885%" y="463.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (15 samples, 2.31%)</title><rect x="91.5385%" y="437" width="2.3077%" height="15" fill="rgb(245,64,36)" fg:x="595" fg:w="15"/><text x="91.7885%" y="447.50">a..</text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 1.08%)</title><rect x="92.7692%" y="421" width="1.0769%" height="15" fill="rgb(245,80,10)" fg:x="603" fg:w="7"/><text x="93.0192%" y="431.50"></text></g><g><title>[libc.so.6] (7 samples, 1.08%)</title><rect x="92.7692%" y="405" width="1.0769%" height="15" fill="rgb(232,107,50)" fg:x="603" fg:w="7"/><text x="93.0192%" y="415.50"></text></g><g><title>[unknown] (4 samples, 0.62%)</title><rect x="93.2308%" y="389" width="0.6154%" height="15" fill="rgb(253,3,0)" fg:x="606" fg:w="4"/><text x="93.4808%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="93.5385%" y="373" width="0.3077%" height="15" fill="rgb(212,99,53)" fg:x="608" fg:w="2"/><text x="93.7885%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="93.5385%" y="357" width="0.3077%" height="15" fill="rgb(249,111,54)" fg:x="608" fg:w="2"/><text x="93.7885%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="93.5385%" y="341" width="0.3077%" height="15" fill="rgb(249,55,30)" fg:x="608" fg:w="2"/><text x="93.7885%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="93.5385%" y="325" width="0.3077%" height="15" fill="rgb(237,47,42)" fg:x="608" fg:w="2"/><text x="93.7885%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="93.5385%" y="309" width="0.3077%" height="15" fill="rgb(211,20,18)" fg:x="608" fg:w="2"/><text x="93.7885%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="93.5385%" y="293" width="0.3077%" height="15" fill="rgb(231,203,46)" fg:x="608" fg:w="2"/><text x="93.7885%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="93.5385%" y="277" width="0.3077%" height="15" fill="rgb(237,142,3)" fg:x="608" fg:w="2"/><text x="93.7885%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="93.5385%" y="261" width="0.3077%" height="15" fill="rgb(241,107,1)" fg:x="608" fg:w="2"/><text x="93.7885%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="93.5385%" y="245" width="0.3077%" height="15" fill="rgb(229,83,13)" fg:x="608" fg:w="2"/><text x="93.7885%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="93.5385%" y="229" width="0.3077%" height="15" fill="rgb(241,91,40)" fg:x="608" fg:w="2"/><text x="93.7885%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.77%)</title><rect x="93.8462%" y="421" width="0.7692%" height="15" fill="rgb(225,3,45)" fg:x="610" fg:w="5"/><text x="94.0962%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.77%)</title><rect x="93.8462%" y="405" width="0.7692%" height="15" fill="rgb(244,223,14)" fg:x="610" fg:w="5"/><text x="94.0962%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.77%)</title><rect x="93.8462%" y="389" width="0.7692%" height="15" fill="rgb(224,124,37)" fg:x="610" fg:w="5"/><text x="94.0962%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.77%)</title><rect x="93.8462%" y="373" width="0.7692%" height="15" fill="rgb(251,171,30)" fg:x="610" fg:w="5"/><text x="94.0962%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.77%)</title><rect x="93.8462%" y="357" width="0.7692%" height="15" fill="rgb(236,46,54)" fg:x="610" fg:w="5"/><text x="94.0962%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.77%)</title><rect x="93.8462%" y="341" width="0.7692%" height="15" fill="rgb(245,213,5)" fg:x="610" fg:w="5"/><text x="94.0962%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.77%)</title><rect x="93.8462%" y="325" width="0.7692%" height="15" fill="rgb(230,144,27)" fg:x="610" fg:w="5"/><text x="94.0962%" y="335.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.77%)</title><rect x="93.8462%" y="309" width="0.7692%" height="15" fill="rgb(220,86,6)" fg:x="610" fg:w="5"/><text x="94.0962%" y="319.50"></text></g><g><title>_mi_heap_realloc_zero (5 samples, 0.77%)</title><rect x="93.8462%" y="293" width="0.7692%" height="15" fill="rgb(240,20,13)" fg:x="610" fg:w="5"/><text x="94.0962%" y="303.50"></text></g><g><title>_mi_memcpy_aligned (5 samples, 0.77%)</title><rect x="93.8462%" y="277" width="0.7692%" height="15" fill="rgb(217,89,34)" fg:x="610" fg:w="5"/><text x="94.0962%" y="287.50"></text></g><g><title>_mi_memcpy (5 samples, 0.77%)</title><rect x="93.8462%" y="261" width="0.7692%" height="15" fill="rgb(229,13,5)" fg:x="610" fg:w="5"/><text x="94.0962%" y="271.50"></text></g><g><title>memcpy (5 samples, 0.77%)</title><rect x="93.8462%" y="245" width="0.7692%" height="15" fill="rgb(244,67,35)" fg:x="610" fg:w="5"/><text x="94.0962%" y="255.50"></text></g><g><title>[libc.so.6] (5 samples, 0.77%)</title><rect x="93.8462%" y="229" width="0.7692%" height="15" fill="rgb(221,40,2)" fg:x="610" fg:w="5"/><text x="94.0962%" y="239.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="94.3077%" y="213" width="0.3077%" height="15" fill="rgb(237,157,21)" fg:x="613" fg:w="2"/><text x="94.5577%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="94.3077%" y="197" width="0.3077%" height="15" fill="rgb(222,94,11)" fg:x="613" fg:w="2"/><text x="94.5577%" y="207.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="94.3077%" y="181" width="0.3077%" height="15" fill="rgb(249,113,6)" fg:x="613" fg:w="2"/><text x="94.5577%" y="191.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="94.3077%" y="165" width="0.3077%" height="15" fill="rgb(238,137,36)" fg:x="613" fg:w="2"/><text x="94.5577%" y="175.50"></text></g><g><title>[unknown] (2 samples, 0.31%)</title><rect x="94.3077%" y="149" width="0.3077%" height="15" fill="rgb(210,102,26)" fg:x="613" fg:w="2"/><text x="94.5577%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="94.4615%" y="133" width="0.1538%" height="15" fill="rgb(218,30,30)" fg:x="614" fg:w="1"/><text x="94.7115%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="94.4615%" y="117" width="0.1538%" height="15" fill="rgb(214,67,26)" fg:x="614" fg:w="1"/><text x="94.7115%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="94.4615%" y="101" width="0.1538%" height="15" fill="rgb(251,9,53)" fg:x="614" fg:w="1"/><text x="94.7115%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="94.4615%" y="85" width="0.1538%" height="15" fill="rgb(228,204,25)" fg:x="614" fg:w="1"/><text x="94.7115%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="94.4615%" y="69" width="0.1538%" height="15" fill="rgb(207,153,8)" fg:x="614" fg:w="1"/><text x="94.7115%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="94.4615%" y="53" width="0.1538%" height="15" fill="rgb(242,9,16)" fg:x="614" fg:w="1"/><text x="94.7115%" y="63.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (6 samples, 0.92%)</title><rect x="93.8462%" y="469" width="0.9231%" height="15" fill="rgb(217,211,10)" fg:x="610" fg:w="6"/><text x="94.0962%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.92%)</title><rect x="93.8462%" y="453" width="0.9231%" height="15" fill="rgb(219,228,52)" fg:x="610" fg:w="6"/><text x="94.0962%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.92%)</title><rect x="93.8462%" y="437" width="0.9231%" height="15" fill="rgb(231,92,29)" fg:x="610" fg:w="6"/><text x="94.0962%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="94.6154%" y="421" width="0.1538%" height="15" fill="rgb(232,8,23)" fg:x="615" fg:w="1"/><text x="94.8654%" y="431.50"></text></g><g><title>[libc.so.6] (1 samples, 0.15%)</title><rect x="94.6154%" y="405" width="0.1538%" height="15" fill="rgb(216,211,34)" fg:x="615" fg:w="1"/><text x="94.8654%" y="415.50"></text></g><g><title>&lt;polars_core::series::Series as polars_core::named_from::NamedFrom&lt;T,[core::option::Option&lt;f32&gt;]&gt;&gt;::new (6 samples, 0.92%)</title><rect x="94.7692%" y="469" width="0.9231%" height="15" fill="rgb(236,151,0)" fg:x="616" fg:w="6"/><text x="95.0192%" y="479.50"></text></g><g><title>&lt;polars_core::chunked_array::ChunkedArray&lt;T&gt; as polars_core::chunked_array::builder::NewChunkedArray&lt;T,&lt;T as polars_core::datatypes::PolarsNumericType&gt;::Native&gt;&gt;::from_slice_options (6 samples, 0.92%)</title><rect x="94.7692%" y="453" width="0.9231%" height="15" fill="rgb(209,168,3)" fg:x="616" fg:w="6"/><text x="95.0192%" y="463.50"></text></g><g><title>&lt;polars_core::chunked_array::ChunkedArray&lt;T&gt; as polars_core::chunked_array::builder::NewChunkedArray&lt;T,&lt;T as polars_core::datatypes::PolarsNumericType&gt;::Native&gt;&gt;::from_iter_options (6 samples, 0.92%)</title><rect x="94.7692%" y="437" width="0.9231%" height="15" fill="rgb(208,129,28)" fg:x="616" fg:w="6"/><text x="95.0192%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.92%)</title><rect x="94.7692%" y="421" width="0.9231%" height="15" fill="rgb(229,78,22)" fg:x="616" fg:w="6"/><text x="95.0192%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.92%)</title><rect x="94.7692%" y="405" width="0.9231%" height="15" fill="rgb(228,187,13)" fg:x="616" fg:w="6"/><text x="95.0192%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.92%)</title><rect x="94.7692%" y="389" width="0.9231%" height="15" fill="rgb(240,119,24)" fg:x="616" fg:w="6"/><text x="95.0192%" y="399.50"></text></g><g><title>core::iter::adapters::copied::copy_fold::{{closure}} (6 samples, 0.92%)</title><rect x="94.7692%" y="373" width="0.9231%" height="15" fill="rgb(209,194,42)" fg:x="616" fg:w="6"/><text x="95.0192%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (6 samples, 0.92%)</title><rect x="94.7692%" y="357" width="0.9231%" height="15" fill="rgb(247,200,46)" fg:x="616" fg:w="6"/><text x="95.0192%" y="367.50"></text></g><g><title>&lt;polars_core::chunked_array::ChunkedArray&lt;T&gt; as polars_core::chunked_array::builder::NewChunkedArray&lt;T,&lt;T as polars_core::datatypes::PolarsNumericType&gt;::Native&gt;&gt;::from_iter_options::{{closure}} (6 samples, 0.92%)</title><rect x="94.7692%" y="341" width="0.9231%" height="15" fill="rgb(218,76,16)" fg:x="616" fg:w="6"/><text x="95.0192%" y="351.50"></text></g><g><title>polars_core::chunked_array::builder::ChunkedBuilder::append_option (6 samples, 0.92%)</title><rect x="94.7692%" y="325" width="0.9231%" height="15" fill="rgb(225,21,48)" fg:x="616" fg:w="6"/><text x="95.0192%" y="335.50"></text></g><g><title>arrow2::array::primitive::mutable::MutablePrimitiveArray&lt;T&gt;::push (5 samples, 0.77%)</title><rect x="94.9231%" y="309" width="0.7692%" height="15" fill="rgb(239,223,50)" fg:x="617" fg:w="5"/><text x="95.1731%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.15%)</title><rect x="95.5385%" y="293" width="0.1538%" height="15" fill="rgb(244,45,21)" fg:x="621" fg:w="1"/><text x="95.7885%" y="303.50"></text></g><g><title>&lt;polars_core::series::Series as polars_core::named_from::NamedFrom&lt;T,[u64]&gt;&gt;::new (1 samples, 0.15%)</title><rect x="95.6923%" y="469" width="0.1538%" height="15" fill="rgb(232,33,43)" fg:x="622" fg:w="1"/><text x="95.9423%" y="479.50"></text></g><g><title>&lt;polars_core::chunked_array::ChunkedArray&lt;T&gt; as polars_core::chunked_array::builder::NewChunkedArray&lt;T,&lt;T as polars_core::datatypes::PolarsNumericType&gt;::Native&gt;&gt;::from_slice (1 samples, 0.15%)</title><rect x="95.6923%" y="453" width="0.1538%" height="15" fill="rgb(209,8,3)" fg:x="622" fg:w="1"/><text x="95.9423%" y="463.50"></text></g><g><title>arrow2::array::primitive::PrimitiveArray&lt;T&gt;::from_slice (1 samples, 0.15%)</title><rect x="95.6923%" y="437" width="0.1538%" height="15" fill="rgb(214,25,53)" fg:x="622" fg:w="1"/><text x="95.9423%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (1 samples, 0.15%)</title><rect x="95.6923%" y="421" width="0.1538%" height="15" fill="rgb(254,186,54)" fg:x="622" fg:w="1"/><text x="95.9423%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.15%)</title><rect x="95.6923%" y="405" width="0.1538%" height="15" fill="rgb(208,174,49)" fg:x="622" fg:w="1"/><text x="95.9423%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.15%)</title><rect x="95.6923%" y="389" width="0.1538%" height="15" fill="rgb(233,191,51)" fg:x="622" fg:w="1"/><text x="95.9423%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.15%)</title><rect x="95.6923%" y="373" width="0.1538%" height="15" fill="rgb(222,134,10)" fg:x="622" fg:w="1"/><text x="95.9423%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.15%)</title><rect x="95.6923%" y="357" width="0.1538%" height="15" fill="rgb(230,226,20)" fg:x="622" fg:w="1"/><text x="95.9423%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.15%)</title><rect x="95.6923%" y="341" width="0.1538%" height="15" fill="rgb(251,111,25)" fg:x="622" fg:w="1"/><text x="95.9423%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="95.6923%" y="325" width="0.1538%" height="15" fill="rgb(224,40,46)" fg:x="622" fg:w="1"/><text x="95.9423%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.15%)</title><rect x="95.6923%" y="309" width="0.1538%" height="15" fill="rgb(236,108,47)" fg:x="622" fg:w="1"/><text x="95.9423%" y="319.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.62%)</title><rect x="96.3077%" y="453" width="0.6154%" height="15" fill="rgb(234,93,0)" fg:x="626" fg:w="4"/><text x="96.5577%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (4 samples, 0.62%)</title><rect x="96.9231%" y="453" width="0.6154%" height="15" fill="rgb(224,213,32)" fg:x="630" fg:w="4"/><text x="97.1731%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.62%)</title><rect x="96.9231%" y="437" width="0.6154%" height="15" fill="rgb(251,11,48)" fg:x="630" fg:w="4"/><text x="97.1731%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.62%)</title><rect x="96.9231%" y="421" width="0.6154%" height="15" fill="rgb(236,173,5)" fg:x="630" fg:w="4"/><text x="97.1731%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.62%)</title><rect x="96.9231%" y="405" width="0.6154%" height="15" fill="rgb(230,95,12)" fg:x="630" fg:w="4"/><text x="97.1731%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.62%)</title><rect x="96.9231%" y="389" width="0.6154%" height="15" fill="rgb(232,209,1)" fg:x="630" fg:w="4"/><text x="97.1731%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.62%)</title><rect x="96.9231%" y="373" width="0.6154%" height="15" fill="rgb(232,6,1)" fg:x="630" fg:w="4"/><text x="97.1731%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (4 samples, 0.62%)</title><rect x="96.9231%" y="357" width="0.6154%" height="15" fill="rgb(210,224,50)" fg:x="630" fg:w="4"/><text x="97.1731%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="97.3846%" y="341" width="0.1538%" height="15" fill="rgb(228,127,35)" fg:x="633" fg:w="1"/><text x="97.6346%" y="351.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.15%)</title><rect x="97.3846%" y="325" width="0.1538%" height="15" fill="rgb(245,102,45)" fg:x="633" fg:w="1"/><text x="97.6346%" y="335.50"></text></g><g><title>demoparser::parsing::create_output::&lt;impl demoparser::parsing::parser::Parser&gt;::insert_props_into_df (16 samples, 2.46%)</title><rect x="95.8462%" y="469" width="2.4615%" height="15" fill="rgb(214,1,49)" fg:x="623" fg:w="16"/><text x="96.0962%" y="479.50">de..</text></g><g><title>demoparser::parsing::columnmapper::EntColMapper::get_col (5 samples, 0.77%)</title><rect x="97.5385%" y="453" width="0.7692%" height="15" fill="rgb(226,163,40)" fg:x="634" fg:w="5"/><text x="97.7885%" y="463.50"></text></g><g><title>demoparser::parsing::columnmapper::EntColMapper::get_complicated (5 samples, 0.77%)</title><rect x="97.5385%" y="437" width="0.7692%" height="15" fill="rgb(239,212,28)" fg:x="634" fg:w="5"/><text x="97.7885%" y="447.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.15%)</title><rect x="98.1538%" y="421" width="0.1538%" height="15" fill="rgb(220,20,13)" fg:x="638" fg:w="1"/><text x="98.4038%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.15%)</title><rect x="98.1538%" y="405" width="0.1538%" height="15" fill="rgb(210,164,35)" fg:x="638" fg:w="1"/><text x="98.4038%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.15%)</title><rect x="98.4615%" y="453" width="0.1538%" height="15" fill="rgb(248,109,41)" fg:x="640" fg:w="1"/><text x="98.7115%" y="463.50"></text></g><g><title>core::ptr::write (1 samples, 0.15%)</title><rect x="98.4615%" y="437" width="0.1538%" height="15" fill="rgb(238,23,50)" fg:x="640" fg:w="1"/><text x="98.7115%" y="447.50"></text></g><g><title>demoparser::parsing::create_output::eid_sid_stack (3 samples, 0.46%)</title><rect x="98.3077%" y="469" width="0.4615%" height="15" fill="rgb(211,48,49)" fg:x="639" fg:w="3"/><text x="98.5577%" y="479.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 0.15%)</title><rect x="98.6154%" y="453" width="0.1538%" height="15" fill="rgb(223,36,21)" fg:x="641" fg:w="1"/><text x="98.8654%" y="463.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.15%)</title><rect x="98.6154%" y="437" width="0.1538%" height="15" fill="rgb(207,123,46)" fg:x="641" fg:w="1"/><text x="98.8654%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (1 samples, 0.15%)</title><rect x="98.6154%" y="421" width="0.1538%" height="15" fill="rgb(240,218,32)" fg:x="641" fg:w="1"/><text x="98.8654%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="98.6154%" y="405" width="0.1538%" height="15" fill="rgb(252,5,43)" fg:x="641" fg:w="1"/><text x="98.8654%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (1 samples, 0.15%)</title><rect x="98.6154%" y="389" width="0.1538%" height="15" fill="rgb(252,84,19)" fg:x="641" fg:w="1"/><text x="98.8654%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="98.6154%" y="373" width="0.1538%" height="15" fill="rgb(243,152,39)" fg:x="641" fg:w="1"/><text x="98.8654%" y="383.50"></text></g><g><title>alloc::alloc::alloc_zeroed (1 samples, 0.15%)</title><rect x="98.6154%" y="357" width="0.1538%" height="15" fill="rgb(234,160,15)" fg:x="641" fg:w="1"/><text x="98.8654%" y="367.50"></text></g><g><title>_mi_heap_malloc_zero (1 samples, 0.15%)</title><rect x="98.6154%" y="341" width="0.1538%" height="15" fill="rgb(237,34,20)" fg:x="641" fg:w="1"/><text x="98.8654%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.15%)</title><rect x="98.6154%" y="325" width="0.1538%" height="15" fill="rgb(229,97,13)" fg:x="641" fg:w="1"/><text x="98.8654%" y="335.50"></text></g><g><title>__libc_start_main_impl (87 samples, 13.38%)</title><rect x="85.6923%" y="933" width="13.3846%" height="15" fill="rgb(234,71,50)" fg:x="557" fg:w="87"/><text x="85.9423%" y="943.50">__libc_start_main_im..</text></g><g><title>__libc_start_call_main (87 samples, 13.38%)</title><rect x="85.6923%" y="917" width="13.3846%" height="15" fill="rgb(253,155,4)" fg:x="557" fg:w="87"/><text x="85.9423%" y="927.50">__libc_start_call_ma..</text></g><g><title>main (73 samples, 11.23%)</title><rect x="87.8462%" y="901" width="11.2308%" height="15" fill="rgb(222,185,37)" fg:x="571" fg:w="73"/><text x="88.0962%" y="911.50">main</text></g><g><title>std::rt::lang_start_internal (73 samples, 11.23%)</title><rect x="87.8462%" y="885" width="11.2308%" height="15" fill="rgb(251,177,13)" fg:x="571" fg:w="73"/><text x="88.0962%" y="895.50">std::rt::lang_sta..</text></g><g><title>std::panic::catch_unwind (73 samples, 11.23%)</title><rect x="87.8462%" y="869" width="11.2308%" height="15" fill="rgb(250,179,40)" fg:x="571" fg:w="73"/><text x="88.0962%" y="879.50">std::panic::catch..</text></g><g><title>std::panicking::try (73 samples, 11.23%)</title><rect x="87.8462%" y="853" width="11.2308%" height="15" fill="rgb(242,44,2)" fg:x="571" fg:w="73"/><text x="88.0962%" y="863.50">std::panicking::t..</text></g><g><title>std::panicking::try::do_call (73 samples, 11.23%)</title><rect x="87.8462%" y="837" width="11.2308%" height="15" fill="rgb(216,177,13)" fg:x="571" fg:w="73"/><text x="88.0962%" y="847.50">std::panicking::t..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (73 samples, 11.23%)</title><rect x="87.8462%" y="821" width="11.2308%" height="15" fill="rgb(216,106,43)" fg:x="571" fg:w="73"/><text x="88.0962%" y="831.50">std::rt::lang_sta..</text></g><g><title>std::panic::catch_unwind (73 samples, 11.23%)</title><rect x="87.8462%" y="805" width="11.2308%" height="15" fill="rgb(216,183,2)" fg:x="571" fg:w="73"/><text x="88.0962%" y="815.50">std::panic::catch..</text></g><g><title>std::panicking::try (73 samples, 11.23%)</title><rect x="87.8462%" y="789" width="11.2308%" height="15" fill="rgb(249,75,3)" fg:x="571" fg:w="73"/><text x="88.0962%" y="799.50">std::panicking::t..</text></g><g><title>std::panicking::try::do_call (73 samples, 11.23%)</title><rect x="87.8462%" y="773" width="11.2308%" height="15" fill="rgb(219,67,39)" fg:x="571" fg:w="73"/><text x="88.0962%" y="783.50">std::panicking::t..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (73 samples, 11.23%)</title><rect x="87.8462%" y="757" width="11.2308%" height="15" fill="rgb(253,228,2)" fg:x="571" fg:w="73"/><text x="88.0962%" y="767.50">core::ops::functi..</text></g><g><title>std::rt::lang_start::{{closure}} (73 samples, 11.23%)</title><rect x="87.8462%" y="741" width="11.2308%" height="15" fill="rgb(235,138,27)" fg:x="571" fg:w="73"/><text x="88.0962%" y="751.50">std::rt::lang_sta..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (73 samples, 11.23%)</title><rect x="87.8462%" y="725" width="11.2308%" height="15" fill="rgb(236,97,51)" fg:x="571" fg:w="73"/><text x="88.0962%" y="735.50">std::sys_common::..</text></g><g><title>core::ops::function::FnOnce::call_once (73 samples, 11.23%)</title><rect x="87.8462%" y="709" width="11.2308%" height="15" fill="rgb(240,80,30)" fg:x="571" fg:w="73"/><text x="88.0962%" y="719.50">core::ops::functi..</text></g><g><title>demoparser::main (73 samples, 11.23%)</title><rect x="87.8462%" y="693" width="11.2308%" height="15" fill="rgb(230,178,19)" fg:x="571" fg:w="73"/><text x="88.0962%" y="703.50">demoparser::main</text></g><g><title>core::iter::traits::iterator::Iterator::collect (73 samples, 11.23%)</title><rect x="87.8462%" y="677" width="11.2308%" height="15" fill="rgb(210,190,27)" fg:x="571" fg:w="73"/><text x="88.0962%" y="687.50">core::iter::trait..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (73 samples, 11.23%)</title><rect x="87.8462%" y="661" width="11.2308%" height="15" fill="rgb(222,107,31)" fg:x="571" fg:w="73"/><text x="88.0962%" y="671.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (73 samples, 11.23%)</title><rect x="87.8462%" y="645" width="11.2308%" height="15" fill="rgb(216,127,34)" fg:x="571" fg:w="73"/><text x="88.0962%" y="655.50">alloc::vec::in_pl..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (73 samples, 11.23%)</title><rect x="87.8462%" y="629" width="11.2308%" height="15" fill="rgb(234,116,52)" fg:x="571" fg:w="73"/><text x="88.0962%" y="639.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (73 samples, 11.23%)</title><rect x="87.8462%" y="613" width="11.2308%" height="15" fill="rgb(222,124,15)" fg:x="571" fg:w="73"/><text x="88.0962%" y="623.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (73 samples, 11.23%)</title><rect x="87.8462%" y="597" width="11.2308%" height="15" fill="rgb(231,179,28)" fg:x="571" fg:w="73"/><text x="88.0962%" y="607.50">core::iter::trait..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (73 samples, 11.23%)</title><rect x="87.8462%" y="581" width="11.2308%" height="15" fill="rgb(226,93,45)" fg:x="571" fg:w="73"/><text x="88.0962%" y="591.50">&lt;core::iter::adap..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (73 samples, 11.23%)</title><rect x="87.8462%" y="565" width="11.2308%" height="15" fill="rgb(215,8,51)" fg:x="571" fg:w="73"/><text x="88.0962%" y="575.50">core::iter::trait..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (73 samples, 11.23%)</title><rect x="87.8462%" y="549" width="11.2308%" height="15" fill="rgb(223,106,5)" fg:x="571" fg:w="73"/><text x="88.0962%" y="559.50">core::iter::adapt..</text></g><g><title>demoparser::main::{{closure}} (73 samples, 11.23%)</title><rect x="87.8462%" y="533" width="11.2308%" height="15" fill="rgb(250,191,5)" fg:x="571" fg:w="73"/><text x="88.0962%" y="543.50">demoparser::main:..</text></g><g><title>demoparser::parse_demo (73 samples, 11.23%)</title><rect x="87.8462%" y="517" width="11.2308%" height="15" fill="rgb(242,132,44)" fg:x="571" fg:w="73"/><text x="88.0962%" y="527.50">demoparser::parse..</text></g><g><title>demoparser::parsing::parser::Parser::start_parsing (70 samples, 10.77%)</title><rect x="88.3077%" y="501" width="10.7692%" height="15" fill="rgb(251,152,29)" fg:x="574" fg:w="70"/><text x="88.5577%" y="511.50">demoparser::pars..</text></g><g><title>demoparser::parsing::create_output::&lt;impl demoparser::parsing::parser::Parser&gt;::get_raw_df (49 samples, 7.54%)</title><rect x="91.5385%" y="485" width="7.5385%" height="15" fill="rgb(218,179,5)" fg:x="595" fg:w="49"/><text x="91.7885%" y="495.50">demoparser..</text></g><g><title>demoparser::parsing::create_output::fill_none_with_most_recent (2 samples, 0.31%)</title><rect x="98.7692%" y="469" width="0.3077%" height="15" fill="rgb(227,67,19)" fg:x="642" fg:w="2"/><text x="99.0192%" y="479.50"></text></g><g><title>demoparser (645 samples, 99.23%)</title><rect x="0.0000%" y="965" width="99.2308%" height="15" fill="rgb(233,119,31)" fg:x="0" fg:w="645"/><text x="0.2500%" y="975.50">demoparser</text></g><g><title>_start (88 samples, 13.54%)</title><rect x="85.6923%" y="949" width="13.5385%" height="15" fill="rgb(241,120,22)" fg:x="557" fg:w="88"/><text x="85.9423%" y="959.50">_start</text></g><g><title>_dl_start (1 samples, 0.15%)</title><rect x="99.0769%" y="933" width="0.1538%" height="15" fill="rgb(224,102,30)" fg:x="644" fg:w="1"/><text x="99.3269%" y="943.50"></text></g><g><title>_dl_start_final (1 samples, 0.15%)</title><rect x="99.0769%" y="917" width="0.1538%" height="15" fill="rgb(210,164,37)" fg:x="644" fg:w="1"/><text x="99.3269%" y="927.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.15%)</title><rect x="99.0769%" y="901" width="0.1538%" height="15" fill="rgb(226,191,16)" fg:x="644" fg:w="1"/><text x="99.3269%" y="911.50"></text></g><g><title>dl_main (1 samples, 0.15%)</title><rect x="99.0769%" y="885" width="0.1538%" height="15" fill="rgb(214,40,45)" fg:x="644" fg:w="1"/><text x="99.3269%" y="895.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.15%)</title><rect x="99.0769%" y="869" width="0.1538%" height="15" fill="rgb(244,29,26)" fg:x="644" fg:w="1"/><text x="99.3269%" y="879.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.15%)</title><rect x="99.0769%" y="853" width="0.1538%" height="15" fill="rgb(216,16,5)" fg:x="644" fg:w="1"/><text x="99.3269%" y="863.50"></text></g><g><title>elf_machine_rela_relative (1 samples, 0.15%)</title><rect x="99.0769%" y="837" width="0.1538%" height="15" fill="rgb(249,76,35)" fg:x="644" fg:w="1"/><text x="99.3269%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="99.0769%" y="821" width="0.1538%" height="15" fill="rgb(207,11,44)" fg:x="644" fg:w="1"/><text x="99.3269%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="99.0769%" y="805" width="0.1538%" height="15" fill="rgb(228,190,49)" fg:x="644" fg:w="1"/><text x="99.3269%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="99.0769%" y="789" width="0.1538%" height="15" fill="rgb(214,173,12)" fg:x="644" fg:w="1"/><text x="99.3269%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="99.0769%" y="773" width="0.1538%" height="15" fill="rgb(218,26,35)" fg:x="644" fg:w="1"/><text x="99.3269%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="99.0769%" y="757" width="0.1538%" height="15" fill="rgb(220,200,19)" fg:x="644" fg:w="1"/><text x="99.3269%" y="767.50"></text></g><g><title>all (650 samples, 100%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(239,95,49)" fg:x="0" fg:w="650"/><text x="0.2500%" y="991.50"></text></g><g><title>perf-exec (5 samples, 0.77%)</title><rect x="99.2308%" y="965" width="0.7692%" height="15" fill="rgb(235,85,53)" fg:x="645" fg:w="5"/><text x="99.4808%" y="975.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="99.2308%" y="949" width="0.7692%" height="15" fill="rgb(233,133,31)" fg:x="645" fg:w="5"/><text x="99.4808%" y="959.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="99.2308%" y="933" width="0.7692%" height="15" fill="rgb(218,25,20)" fg:x="645" fg:w="5"/><text x="99.4808%" y="943.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="99.2308%" y="917" width="0.7692%" height="15" fill="rgb(252,210,38)" fg:x="645" fg:w="5"/><text x="99.4808%" y="927.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="99.2308%" y="901" width="0.7692%" height="15" fill="rgb(242,134,21)" fg:x="645" fg:w="5"/><text x="99.4808%" y="911.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="99.2308%" y="885" width="0.7692%" height="15" fill="rgb(213,28,48)" fg:x="645" fg:w="5"/><text x="99.4808%" y="895.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="99.2308%" y="869" width="0.7692%" height="15" fill="rgb(250,196,2)" fg:x="645" fg:w="5"/><text x="99.4808%" y="879.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="99.2308%" y="853" width="0.7692%" height="15" fill="rgb(227,5,17)" fg:x="645" fg:w="5"/><text x="99.4808%" y="863.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="99.2308%" y="837" width="0.7692%" height="15" fill="rgb(221,226,24)" fg:x="645" fg:w="5"/><text x="99.4808%" y="847.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="99.2308%" y="821" width="0.7692%" height="15" fill="rgb(211,5,48)" fg:x="645" fg:w="5"/><text x="99.4808%" y="831.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="99.2308%" y="805" width="0.7692%" height="15" fill="rgb(219,150,6)" fg:x="645" fg:w="5"/><text x="99.4808%" y="815.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="99.2308%" y="789" width="0.7692%" height="15" fill="rgb(251,46,16)" fg:x="645" fg:w="5"/><text x="99.4808%" y="799.50"></text></g><g><title>[unknown] (5 samples, 0.77%)</title><rect x="99.2308%" y="773" width="0.7692%" height="15" fill="rgb(220,204,40)" fg:x="645" fg:w="5"/><text x="99.4808%" y="783.50"></text></g></svg></svg>