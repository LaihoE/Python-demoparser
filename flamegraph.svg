<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2054" onload="init(evt)" viewBox="0 0 1200 2054" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2054" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="2037.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="2037.00"> </text><svg id="frames" x="10" width="1180" total_samples="964"><g><title>[unknown] (39 samples, 4.05%)</title><rect x="0.1037%" y="1957" width="4.0456%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="39"/><text x="0.3537%" y="1967.50">[unk..</text></g><g><title>[unknown] (39 samples, 4.05%)</title><rect x="0.1037%" y="1941" width="4.0456%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="39"/><text x="0.3537%" y="1951.50">[unk..</text></g><g><title>[unknown] (39 samples, 4.05%)</title><rect x="0.1037%" y="1925" width="4.0456%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="39"/><text x="0.3537%" y="1935.50">[unk..</text></g><g><title>[unknown] (39 samples, 4.05%)</title><rect x="0.1037%" y="1909" width="4.0456%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="39"/><text x="0.3537%" y="1919.50">[unk..</text></g><g><title>[unknown] (34 samples, 3.53%)</title><rect x="0.6224%" y="1893" width="3.5270%" height="15" fill="rgb(208,68,35)" fg:x="6" fg:w="34"/><text x="0.8724%" y="1903.50">[un..</text></g><g><title>[unknown] (34 samples, 3.53%)</title><rect x="0.6224%" y="1877" width="3.5270%" height="15" fill="rgb(232,128,0)" fg:x="6" fg:w="34"/><text x="0.8724%" y="1887.50">[un..</text></g><g><title>[unknown] (34 samples, 3.53%)</title><rect x="0.6224%" y="1861" width="3.5270%" height="15" fill="rgb(207,160,47)" fg:x="6" fg:w="34"/><text x="0.8724%" y="1871.50">[un..</text></g><g><title>[unknown] (34 samples, 3.53%)</title><rect x="0.6224%" y="1845" width="3.5270%" height="15" fill="rgb(228,23,34)" fg:x="6" fg:w="34"/><text x="0.8724%" y="1855.50">[un..</text></g><g><title>[unknown] (34 samples, 3.53%)</title><rect x="0.6224%" y="1829" width="3.5270%" height="15" fill="rgb(218,30,26)" fg:x="6" fg:w="34"/><text x="0.8724%" y="1839.50">[un..</text></g><g><title>[unknown] (34 samples, 3.53%)</title><rect x="0.6224%" y="1813" width="3.5270%" height="15" fill="rgb(220,122,19)" fg:x="6" fg:w="34"/><text x="0.8724%" y="1823.50">[un..</text></g><g><title>[unknown] (34 samples, 3.53%)</title><rect x="0.6224%" y="1797" width="3.5270%" height="15" fill="rgb(250,228,42)" fg:x="6" fg:w="34"/><text x="0.8724%" y="1807.50">[un..</text></g><g><title>[unknown] (33 samples, 3.42%)</title><rect x="0.7261%" y="1781" width="3.4232%" height="15" fill="rgb(240,193,28)" fg:x="7" fg:w="33"/><text x="0.9761%" y="1791.50">[un..</text></g><g><title>[unknown] (26 samples, 2.70%)</title><rect x="1.4523%" y="1765" width="2.6971%" height="15" fill="rgb(216,20,37)" fg:x="14" fg:w="26"/><text x="1.7023%" y="1775.50">[u..</text></g><g><title>[unknown] (26 samples, 2.70%)</title><rect x="1.4523%" y="1749" width="2.6971%" height="15" fill="rgb(206,188,39)" fg:x="14" fg:w="26"/><text x="1.7023%" y="1759.50">[u..</text></g><g><title>[unknown] (24 samples, 2.49%)</title><rect x="1.6598%" y="1733" width="2.4896%" height="15" fill="rgb(217,207,13)" fg:x="16" fg:w="24"/><text x="1.9098%" y="1743.50">[u..</text></g><g><title>[unknown] (22 samples, 2.28%)</title><rect x="1.8672%" y="1717" width="2.2822%" height="15" fill="rgb(231,73,38)" fg:x="18" fg:w="22"/><text x="2.1172%" y="1727.50">[..</text></g><g><title>[unknown] (19 samples, 1.97%)</title><rect x="2.1784%" y="1701" width="1.9710%" height="15" fill="rgb(225,20,46)" fg:x="21" fg:w="19"/><text x="2.4284%" y="1711.50">[..</text></g><g><title>[unknown] (13 samples, 1.35%)</title><rect x="2.8008%" y="1685" width="1.3485%" height="15" fill="rgb(210,31,41)" fg:x="27" fg:w="13"/><text x="3.0508%" y="1695.50"></text></g><g><title>[unknown] (11 samples, 1.14%)</title><rect x="3.0083%" y="1669" width="1.1411%" height="15" fill="rgb(221,200,47)" fg:x="29" fg:w="11"/><text x="3.2583%" y="1679.50"></text></g><g><title>_int_malloc (2 samples, 0.21%)</title><rect x="4.1494%" y="1957" width="0.2075%" height="15" fill="rgb(226,26,5)" fg:x="40" fg:w="2"/><text x="4.3994%" y="1967.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="4.1494%" y="1941" width="0.2075%" height="15" fill="rgb(249,33,26)" fg:x="40" fg:w="2"/><text x="4.3994%" y="1951.50"></text></g><g><title>[unknown] (44 samples, 4.56%)</title><rect x="0.0000%" y="1973" width="4.5643%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="44"/><text x="0.2500%" y="1983.50">[unkn..</text></g><g><title>_int_realloc (2 samples, 0.21%)</title><rect x="4.3568%" y="1957" width="0.2075%" height="15" fill="rgb(221,5,38)" fg:x="42" fg:w="2"/><text x="4.6068%" y="1967.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="4.3568%" y="1941" width="0.2075%" height="15" fill="rgb(247,18,42)" fg:x="42" fg:w="2"/><text x="4.6068%" y="1951.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (6 samples, 0.62%)</title><rect x="4.5643%" y="1925" width="0.6224%" height="15" fill="rgb(241,131,45)" fg:x="44" fg:w="6"/><text x="4.8143%" y="1935.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (6 samples, 0.62%)</title><rect x="4.5643%" y="1909" width="0.6224%" height="15" fill="rgb(249,31,29)" fg:x="44" fg:w="6"/><text x="4.8143%" y="1919.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (6 samples, 0.62%)</title><rect x="4.5643%" y="1893" width="0.6224%" height="15" fill="rgb(225,111,53)" fg:x="44" fg:w="6"/><text x="4.8143%" y="1903.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (6 samples, 0.62%)</title><rect x="4.5643%" y="1877" width="0.6224%" height="15" fill="rgb(238,160,17)" fg:x="44" fg:w="6"/><text x="4.8143%" y="1887.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.62%)</title><rect x="4.5643%" y="1861" width="0.6224%" height="15" fill="rgb(214,148,48)" fg:x="44" fg:w="6"/><text x="4.8143%" y="1871.50"></text></g><g><title>std::panicking::try (6 samples, 0.62%)</title><rect x="4.5643%" y="1845" width="0.6224%" height="15" fill="rgb(232,36,49)" fg:x="44" fg:w="6"/><text x="4.8143%" y="1855.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.62%)</title><rect x="4.5643%" y="1829" width="0.6224%" height="15" fill="rgb(209,103,24)" fg:x="44" fg:w="6"/><text x="4.8143%" y="1839.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.62%)</title><rect x="4.5643%" y="1813" width="0.6224%" height="15" fill="rgb(229,88,8)" fg:x="44" fg:w="6"/><text x="4.8143%" y="1823.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (6 samples, 0.62%)</title><rect x="4.5643%" y="1797" width="0.6224%" height="15" fill="rgb(213,181,19)" fg:x="44" fg:w="6"/><text x="4.8143%" y="1807.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (6 samples, 0.62%)</title><rect x="4.5643%" y="1781" width="0.6224%" height="15" fill="rgb(254,191,54)" fg:x="44" fg:w="6"/><text x="4.8143%" y="1791.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (6 samples, 0.62%)</title><rect x="4.5643%" y="1765" width="0.6224%" height="15" fill="rgb(241,83,37)" fg:x="44" fg:w="6"/><text x="4.8143%" y="1775.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (6 samples, 0.62%)</title><rect x="4.5643%" y="1749" width="0.6224%" height="15" fill="rgb(233,36,39)" fg:x="44" fg:w="6"/><text x="4.8143%" y="1759.50"></text></g><g><title>rayon_core::registry::main_loop (6 samples, 0.62%)</title><rect x="4.5643%" y="1733" width="0.6224%" height="15" fill="rgb(226,3,54)" fg:x="44" fg:w="6"/><text x="4.8143%" y="1743.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (6 samples, 0.62%)</title><rect x="4.5643%" y="1717" width="0.6224%" height="15" fill="rgb(245,192,40)" fg:x="44" fg:w="6"/><text x="4.8143%" y="1727.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (6 samples, 0.62%)</title><rect x="4.5643%" y="1701" width="0.6224%" height="15" fill="rgb(238,167,29)" fg:x="44" fg:w="6"/><text x="4.8143%" y="1711.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (6 samples, 0.62%)</title><rect x="4.5643%" y="1685" width="0.6224%" height="15" fill="rgb(232,182,51)" fg:x="44" fg:w="6"/><text x="4.8143%" y="1695.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (6 samples, 0.62%)</title><rect x="4.5643%" y="1669" width="0.6224%" height="15" fill="rgb(231,60,39)" fg:x="44" fg:w="6"/><text x="4.8143%" y="1679.50"></text></g><g><title>std::sync::condvar::Condvar::wait (6 samples, 0.62%)</title><rect x="4.5643%" y="1653" width="0.6224%" height="15" fill="rgb(208,69,12)" fg:x="44" fg:w="6"/><text x="4.8143%" y="1663.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (6 samples, 0.62%)</title><rect x="4.5643%" y="1637" width="0.6224%" height="15" fill="rgb(235,93,37)" fg:x="44" fg:w="6"/><text x="4.8143%" y="1647.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (6 samples, 0.62%)</title><rect x="4.5643%" y="1621" width="0.6224%" height="15" fill="rgb(213,116,39)" fg:x="44" fg:w="6"/><text x="4.8143%" y="1631.50"></text></g><g><title>std::sys::unix::futex::futex_wait (6 samples, 0.62%)</title><rect x="4.5643%" y="1605" width="0.6224%" height="15" fill="rgb(222,207,29)" fg:x="44" fg:w="6"/><text x="4.8143%" y="1615.50"></text></g><g><title>syscall (6 samples, 0.62%)</title><rect x="4.5643%" y="1589" width="0.6224%" height="15" fill="rgb(206,96,30)" fg:x="44" fg:w="6"/><text x="4.8143%" y="1599.50"></text></g><g><title>[unknown] (6 samples, 0.62%)</title><rect x="4.5643%" y="1573" width="0.6224%" height="15" fill="rgb(218,138,4)" fg:x="44" fg:w="6"/><text x="4.8143%" y="1583.50"></text></g><g><title>[unknown] (6 samples, 0.62%)</title><rect x="4.5643%" y="1557" width="0.6224%" height="15" fill="rgb(250,191,14)" fg:x="44" fg:w="6"/><text x="4.8143%" y="1567.50"></text></g><g><title>[unknown] (6 samples, 0.62%)</title><rect x="4.5643%" y="1541" width="0.6224%" height="15" fill="rgb(239,60,40)" fg:x="44" fg:w="6"/><text x="4.8143%" y="1551.50"></text></g><g><title>[unknown] (6 samples, 0.62%)</title><rect x="4.5643%" y="1525" width="0.6224%" height="15" fill="rgb(206,27,48)" fg:x="44" fg:w="6"/><text x="4.8143%" y="1535.50"></text></g><g><title>[unknown] (6 samples, 0.62%)</title><rect x="4.5643%" y="1509" width="0.6224%" height="15" fill="rgb(225,35,8)" fg:x="44" fg:w="6"/><text x="4.8143%" y="1519.50"></text></g><g><title>[unknown] (6 samples, 0.62%)</title><rect x="4.5643%" y="1493" width="0.6224%" height="15" fill="rgb(250,213,24)" fg:x="44" fg:w="6"/><text x="4.8143%" y="1503.50"></text></g><g><title>[unknown] (6 samples, 0.62%)</title><rect x="4.5643%" y="1477" width="0.6224%" height="15" fill="rgb(247,123,22)" fg:x="44" fg:w="6"/><text x="4.8143%" y="1487.50"></text></g><g><title>[unknown] (6 samples, 0.62%)</title><rect x="4.5643%" y="1461" width="0.6224%" height="15" fill="rgb(231,138,38)" fg:x="44" fg:w="6"/><text x="4.8143%" y="1471.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="5.0830%" y="1445" width="0.1037%" height="15" fill="rgb(231,145,46)" fg:x="49" fg:w="1"/><text x="5.3330%" y="1455.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="5.0830%" y="1429" width="0.1037%" height="15" fill="rgb(251,118,11)" fg:x="49" fg:w="1"/><text x="5.3330%" y="1439.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="5.0830%" y="1413" width="0.1037%" height="15" fill="rgb(217,147,25)" fg:x="49" fg:w="1"/><text x="5.3330%" y="1423.50"></text></g><g><title>__clone3 (7 samples, 0.73%)</title><rect x="4.5643%" y="1973" width="0.7261%" height="15" fill="rgb(247,81,37)" fg:x="44" fg:w="7"/><text x="4.8143%" y="1983.50"></text></g><g><title>start_thread (7 samples, 0.73%)</title><rect x="4.5643%" y="1957" width="0.7261%" height="15" fill="rgb(209,12,38)" fg:x="44" fg:w="7"/><text x="4.8143%" y="1967.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (7 samples, 0.73%)</title><rect x="4.5643%" y="1941" width="0.7261%" height="15" fill="rgb(227,1,9)" fg:x="44" fg:w="7"/><text x="4.8143%" y="1951.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (1 samples, 0.10%)</title><rect x="5.1867%" y="1925" width="0.1037%" height="15" fill="rgb(248,47,43)" fg:x="50" fg:w="1"/><text x="5.4367%" y="1935.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (1 samples, 0.10%)</title><rect x="5.1867%" y="1909" width="0.1037%" height="15" fill="rgb(221,10,30)" fg:x="50" fg:w="1"/><text x="5.4367%" y="1919.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (1 samples, 0.10%)</title><rect x="5.1867%" y="1893" width="0.1037%" height="15" fill="rgb(210,229,1)" fg:x="50" fg:w="1"/><text x="5.4367%" y="1903.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (1 samples, 0.10%)</title><rect x="5.1867%" y="1877" width="0.1037%" height="15" fill="rgb(222,148,37)" fg:x="50" fg:w="1"/><text x="5.4367%" y="1887.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.10%)</title><rect x="5.1867%" y="1861" width="0.1037%" height="15" fill="rgb(234,67,33)" fg:x="50" fg:w="1"/><text x="5.4367%" y="1871.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.10%)</title><rect x="5.1867%" y="1845" width="0.1037%" height="15" fill="rgb(247,98,35)" fg:x="50" fg:w="1"/><text x="5.4367%" y="1855.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="5.1867%" y="1829" width="0.1037%" height="15" fill="rgb(247,138,52)" fg:x="50" fg:w="1"/><text x="5.4367%" y="1839.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="5.1867%" y="1813" width="0.1037%" height="15" fill="rgb(213,79,30)" fg:x="50" fg:w="1"/><text x="5.4367%" y="1823.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="5.1867%" y="1797" width="0.1037%" height="15" fill="rgb(246,177,23)" fg:x="50" fg:w="1"/><text x="5.4367%" y="1807.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="5.1867%" y="1781" width="0.1037%" height="15" fill="rgb(230,62,27)" fg:x="50" fg:w="1"/><text x="5.4367%" y="1791.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="5.1867%" y="1765" width="0.1037%" height="15" fill="rgb(216,154,8)" fg:x="50" fg:w="1"/><text x="5.4367%" y="1775.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="5.1867%" y="1749" width="0.1037%" height="15" fill="rgb(244,35,45)" fg:x="50" fg:w="1"/><text x="5.4367%" y="1759.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="5.1867%" y="1733" width="0.1037%" height="15" fill="rgb(251,115,12)" fg:x="50" fg:w="1"/><text x="5.4367%" y="1743.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="5.1867%" y="1717" width="0.1037%" height="15" fill="rgb(240,54,50)" fg:x="50" fg:w="1"/><text x="5.4367%" y="1727.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="5.1867%" y="1701" width="0.1037%" height="15" fill="rgb(233,84,52)" fg:x="50" fg:w="1"/><text x="5.4367%" y="1711.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="5.1867%" y="1685" width="0.1037%" height="15" fill="rgb(207,117,47)" fg:x="50" fg:w="1"/><text x="5.4367%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;memmap2::Mmap&gt;&gt; (6 samples, 0.62%)</title><rect x="5.2905%" y="1317" width="0.6224%" height="15" fill="rgb(249,43,39)" fg:x="51" fg:w="6"/><text x="5.5405%" y="1327.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.62%)</title><rect x="5.2905%" y="1301" width="0.6224%" height="15" fill="rgb(209,38,44)" fg:x="51" fg:w="6"/><text x="5.5405%" y="1311.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (6 samples, 0.62%)</title><rect x="5.2905%" y="1285" width="0.6224%" height="15" fill="rgb(236,212,23)" fg:x="51" fg:w="6"/><text x="5.5405%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;memmap2::Mmap&gt; (6 samples, 0.62%)</title><rect x="5.2905%" y="1269" width="0.6224%" height="15" fill="rgb(242,79,21)" fg:x="51" fg:w="6"/><text x="5.5405%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;memmap2::os::MmapInner&gt; (6 samples, 0.62%)</title><rect x="5.2905%" y="1253" width="0.6224%" height="15" fill="rgb(211,96,35)" fg:x="51" fg:w="6"/><text x="5.5405%" y="1263.50"></text></g><g><title>__GI___munmap (6 samples, 0.62%)</title><rect x="5.2905%" y="1237" width="0.6224%" height="15" fill="rgb(253,215,40)" fg:x="51" fg:w="6"/><text x="5.5405%" y="1247.50"></text></g><g><title>[unknown] (6 samples, 0.62%)</title><rect x="5.2905%" y="1221" width="0.6224%" height="15" fill="rgb(211,81,21)" fg:x="51" fg:w="6"/><text x="5.5405%" y="1231.50"></text></g><g><title>[unknown] (6 samples, 0.62%)</title><rect x="5.2905%" y="1205" width="0.6224%" height="15" fill="rgb(208,190,38)" fg:x="51" fg:w="6"/><text x="5.5405%" y="1215.50"></text></g><g><title>[unknown] (6 samples, 0.62%)</title><rect x="5.2905%" y="1189" width="0.6224%" height="15" fill="rgb(235,213,38)" fg:x="51" fg:w="6"/><text x="5.5405%" y="1199.50"></text></g><g><title>[unknown] (6 samples, 0.62%)</title><rect x="5.2905%" y="1173" width="0.6224%" height="15" fill="rgb(237,122,38)" fg:x="51" fg:w="6"/><text x="5.5405%" y="1183.50"></text></g><g><title>[unknown] (6 samples, 0.62%)</title><rect x="5.2905%" y="1157" width="0.6224%" height="15" fill="rgb(244,218,35)" fg:x="51" fg:w="6"/><text x="5.5405%" y="1167.50"></text></g><g><title>[unknown] (6 samples, 0.62%)</title><rect x="5.2905%" y="1141" width="0.6224%" height="15" fill="rgb(240,68,47)" fg:x="51" fg:w="6"/><text x="5.5405%" y="1151.50"></text></g><g><title>[unknown] (6 samples, 0.62%)</title><rect x="5.2905%" y="1125" width="0.6224%" height="15" fill="rgb(210,16,53)" fg:x="51" fg:w="6"/><text x="5.5405%" y="1135.50"></text></g><g><title>[unknown] (6 samples, 0.62%)</title><rect x="5.2905%" y="1109" width="0.6224%" height="15" fill="rgb(235,124,12)" fg:x="51" fg:w="6"/><text x="5.5405%" y="1119.50"></text></g><g><title>[unknown] (6 samples, 0.62%)</title><rect x="5.2905%" y="1093" width="0.6224%" height="15" fill="rgb(224,169,11)" fg:x="51" fg:w="6"/><text x="5.5405%" y="1103.50"></text></g><g><title>[unknown] (6 samples, 0.62%)</title><rect x="5.2905%" y="1077" width="0.6224%" height="15" fill="rgb(250,166,2)" fg:x="51" fg:w="6"/><text x="5.5405%" y="1087.50"></text></g><g><title>[unknown] (6 samples, 0.62%)</title><rect x="5.2905%" y="1061" width="0.6224%" height="15" fill="rgb(242,216,29)" fg:x="51" fg:w="6"/><text x="5.5405%" y="1071.50"></text></g><g><title>[unknown] (3 samples, 0.31%)</title><rect x="5.6017%" y="1045" width="0.3112%" height="15" fill="rgb(230,116,27)" fg:x="54" fg:w="3"/><text x="5.8517%" y="1055.50"></text></g><g><title>[unknown] (3 samples, 0.31%)</title><rect x="5.6017%" y="1029" width="0.3112%" height="15" fill="rgb(228,99,48)" fg:x="54" fg:w="3"/><text x="5.8517%" y="1039.50"></text></g><g><title>[unknown] (3 samples, 0.31%)</title><rect x="5.6017%" y="1013" width="0.3112%" height="15" fill="rgb(253,11,6)" fg:x="54" fg:w="3"/><text x="5.8517%" y="1023.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="5.7054%" y="997" width="0.2075%" height="15" fill="rgb(247,143,39)" fg:x="55" fg:w="2"/><text x="5.9554%" y="1007.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="5.7054%" y="981" width="0.2075%" height="15" fill="rgb(236,97,10)" fg:x="55" fg:w="2"/><text x="5.9554%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser::Parser&gt; (7 samples, 0.73%)</title><rect x="5.2905%" y="1333" width="0.7261%" height="15" fill="rgb(233,208,19)" fg:x="51" fg:w="7"/><text x="5.5405%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser_settings::Maps&gt; (1 samples, 0.10%)</title><rect x="5.9129%" y="1317" width="0.1037%" height="15" fill="rgb(216,164,2)" fg:x="57" fg:w="1"/><text x="6.1629%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u16,demoparser::parsing::demo_parsing::data_table::ServerClass,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.10%)</title><rect x="5.9129%" y="1301" width="0.1037%" height="15" fill="rgb(220,129,5)" fg:x="57" fg:w="1"/><text x="6.1629%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u16,demoparser::parsing::demo_parsing::data_table::ServerClass,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.10%)</title><rect x="5.9129%" y="1285" width="0.1037%" height="15" fill="rgb(242,17,10)" fg:x="57" fg:w="1"/><text x="6.1629%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u16,demoparser::parsing::demo_parsing::data_table::ServerClass)&gt;&gt; (1 samples, 0.10%)</title><rect x="5.9129%" y="1269" width="0.1037%" height="15" fill="rgb(242,107,0)" fg:x="57" fg:w="1"/><text x="6.1629%" y="1279.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="5.9129%" y="1253" width="0.1037%" height="15" fill="rgb(251,28,31)" fg:x="57" fg:w="1"/><text x="6.1629%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.10%)</title><rect x="5.9129%" y="1237" width="0.1037%" height="15" fill="rgb(233,223,10)" fg:x="57" fg:w="1"/><text x="6.1629%" y="1247.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.10%)</title><rect x="5.9129%" y="1221" width="0.1037%" height="15" fill="rgb(215,21,27)" fg:x="57" fg:w="1"/><text x="6.1629%" y="1231.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.10%)</title><rect x="5.9129%" y="1205" width="0.1037%" height="15" fill="rgb(232,23,21)" fg:x="57" fg:w="1"/><text x="6.1629%" y="1215.50"></text></g><g><title>__GI___libc_free (1 samples, 0.10%)</title><rect x="5.9129%" y="1189" width="0.1037%" height="15" fill="rgb(244,5,23)" fg:x="57" fg:w="1"/><text x="6.1629%" y="1199.50"></text></g><g><title>__GI___munmap (1 samples, 0.10%)</title><rect x="5.9129%" y="1173" width="0.1037%" height="15" fill="rgb(226,81,46)" fg:x="57" fg:w="1"/><text x="6.1629%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="5.9129%" y="1157" width="0.1037%" height="15" fill="rgb(247,70,30)" fg:x="57" fg:w="1"/><text x="6.1629%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="5.9129%" y="1141" width="0.1037%" height="15" fill="rgb(212,68,19)" fg:x="57" fg:w="1"/><text x="6.1629%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="5.9129%" y="1125" width="0.1037%" height="15" fill="rgb(240,187,13)" fg:x="57" fg:w="1"/><text x="6.1629%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="5.9129%" y="1109" width="0.1037%" height="15" fill="rgb(223,113,26)" fg:x="57" fg:w="1"/><text x="6.1629%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="5.9129%" y="1093" width="0.1037%" height="15" fill="rgb(206,192,2)" fg:x="57" fg:w="1"/><text x="6.1629%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="5.9129%" y="1077" width="0.1037%" height="15" fill="rgb(241,108,4)" fg:x="57" fg:w="1"/><text x="6.1629%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="5.9129%" y="1061" width="0.1037%" height="15" fill="rgb(247,173,49)" fg:x="57" fg:w="1"/><text x="6.1629%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="5.9129%" y="1045" width="0.1037%" height="15" fill="rgb(224,114,35)" fg:x="57" fg:w="1"/><text x="6.1629%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="5.9129%" y="1029" width="0.1037%" height="15" fill="rgb(245,159,27)" fg:x="57" fg:w="1"/><text x="6.1629%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="5.9129%" y="1013" width="0.1037%" height="15" fill="rgb(245,172,44)" fg:x="57" fg:w="1"/><text x="6.1629%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="5.9129%" y="997" width="0.1037%" height="15" fill="rgb(236,23,11)" fg:x="57" fg:w="1"/><text x="6.1629%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 3.42%)</title><rect x="6.0166%" y="1301" width="3.4232%" height="15" fill="rgb(205,117,38)" fg:x="58" fg:w="33"/><text x="6.2666%" y="1311.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::parser::JobResult]&gt; (33 samples, 3.42%)</title><rect x="6.0166%" y="1285" width="3.4232%" height="15" fill="rgb(237,72,25)" fg:x="58" fg:w="33"/><text x="6.2666%" y="1295.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser::JobResult&gt; (33 samples, 3.42%)</title><rect x="6.0166%" y="1269" width="3.4232%" height="15" fill="rgb(244,70,9)" fg:x="58" fg:w="33"/><text x="6.2666%" y="1279.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::demo_parsing::entities_cache_only::EntityIndicies&gt;&gt; (33 samples, 3.42%)</title><rect x="6.0166%" y="1253" width="3.4232%" height="15" fill="rgb(217,125,39)" fg:x="58" fg:w="33"/><text x="6.2666%" y="1263.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 3.42%)</title><rect x="6.0166%" y="1237" width="3.4232%" height="15" fill="rgb(235,36,10)" fg:x="58" fg:w="33"/><text x="6.2666%" y="1247.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::demo_parsing::entities_cache_only::EntityIndicies]&gt; (32 samples, 3.32%)</title><rect x="6.1203%" y="1221" width="3.3195%" height="15" fill="rgb(251,123,47)" fg:x="59" fg:w="32"/><text x="6.3703%" y="1231.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::entities_cache_only::EntityIndicies&gt; (31 samples, 3.22%)</title><rect x="6.2241%" y="1205" width="3.2158%" height="15" fill="rgb(221,13,13)" fg:x="60" fg:w="31"/><text x="6.4741%" y="1215.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[i32: 32]&gt;&gt; (31 samples, 3.22%)</title><rect x="6.2241%" y="1189" width="3.2158%" height="15" fill="rgb(238,131,9)" fg:x="60" fg:w="31"/><text x="6.4741%" y="1199.50">cor..</text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 3.22%)</title><rect x="6.2241%" y="1173" width="3.2158%" height="15" fill="rgb(211,50,8)" fg:x="60" fg:w="31"/><text x="6.4741%" y="1183.50">&lt;sm..</text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (31 samples, 3.22%)</title><rect x="6.2241%" y="1157" width="3.2158%" height="15" fill="rgb(245,182,24)" fg:x="60" fg:w="31"/><text x="6.4741%" y="1167.50">sma..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::parser::JobResult&gt;&gt; (34 samples, 3.53%)</title><rect x="6.0166%" y="1317" width="3.5270%" height="15" fill="rgb(242,14,37)" fg:x="58" fg:w="34"/><text x="6.2666%" y="1327.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;demoparser::parsing::parser::JobResult&gt;&gt; (1 samples, 0.10%)</title><rect x="9.4398%" y="1301" width="0.1037%" height="15" fill="rgb(246,228,12)" fg:x="91" fg:w="1"/><text x="9.6898%" y="1311.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="9.4398%" y="1285" width="0.1037%" height="15" fill="rgb(213,55,15)" fg:x="91" fg:w="1"/><text x="9.6898%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.10%)</title><rect x="9.4398%" y="1269" width="0.1037%" height="15" fill="rgb(209,9,3)" fg:x="91" fg:w="1"/><text x="9.6898%" y="1279.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="9.4398%" y="1253" width="0.1037%" height="15" fill="rgb(230,59,30)" fg:x="91" fg:w="1"/><text x="9.6898%" y="1263.50"></text></g><g><title>__GI___libc_free (1 samples, 0.10%)</title><rect x="9.4398%" y="1237" width="0.1037%" height="15" fill="rgb(209,121,21)" fg:x="91" fg:w="1"/><text x="9.6898%" y="1247.50"></text></g><g><title>__GI___munmap (1 samples, 0.10%)</title><rect x="9.4398%" y="1221" width="0.1037%" height="15" fill="rgb(220,109,13)" fg:x="91" fg:w="1"/><text x="9.6898%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="9.4398%" y="1205" width="0.1037%" height="15" fill="rgb(232,18,1)" fg:x="91" fg:w="1"/><text x="9.6898%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="9.4398%" y="1189" width="0.1037%" height="15" fill="rgb(215,41,42)" fg:x="91" fg:w="1"/><text x="9.6898%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="9.4398%" y="1173" width="0.1037%" height="15" fill="rgb(224,123,36)" fg:x="91" fg:w="1"/><text x="9.6898%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="9.4398%" y="1157" width="0.1037%" height="15" fill="rgb(240,125,3)" fg:x="91" fg:w="1"/><text x="9.6898%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="9.4398%" y="1141" width="0.1037%" height="15" fill="rgb(205,98,50)" fg:x="91" fg:w="1"/><text x="9.6898%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="9.4398%" y="1125" width="0.1037%" height="15" fill="rgb(205,185,37)" fg:x="91" fg:w="1"/><text x="9.6898%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="9.4398%" y="1109" width="0.1037%" height="15" fill="rgb(238,207,15)" fg:x="91" fg:w="1"/><text x="9.6898%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="9.4398%" y="1093" width="0.1037%" height="15" fill="rgb(213,199,42)" fg:x="91" fg:w="1"/><text x="9.6898%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="9.4398%" y="1077" width="0.1037%" height="15" fill="rgb(235,201,11)" fg:x="91" fg:w="1"/><text x="9.6898%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="9.4398%" y="1061" width="0.1037%" height="15" fill="rgb(207,46,11)" fg:x="91" fg:w="1"/><text x="9.6898%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="9.4398%" y="1045" width="0.1037%" height="15" fill="rgb(241,35,35)" fg:x="91" fg:w="1"/><text x="9.6898%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.21%)</title><rect x="9.5436%" y="1141" width="0.2075%" height="15" fill="rgb(243,32,47)" fg:x="92" fg:w="2"/><text x="9.7936%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (2 samples, 0.21%)</title><rect x="9.5436%" y="1125" width="0.2075%" height="15" fill="rgb(247,202,23)" fg:x="92" fg:w="2"/><text x="9.7936%" y="1135.50"></text></g><g><title>core::ptr::write (2 samples, 0.21%)</title><rect x="9.5436%" y="1109" width="0.2075%" height="15" fill="rgb(219,102,11)" fg:x="92" fg:w="2"/><text x="9.7936%" y="1119.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="9.5436%" y="1093" width="0.2075%" height="15" fill="rgb(243,110,44)" fg:x="92" fg:w="2"/><text x="9.7936%" y="1103.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="9.5436%" y="1077" width="0.2075%" height="15" fill="rgb(222,74,54)" fg:x="92" fg:w="2"/><text x="9.7936%" y="1087.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="9.5436%" y="1061" width="0.2075%" height="15" fill="rgb(216,99,12)" fg:x="92" fg:w="2"/><text x="9.7936%" y="1071.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="9.5436%" y="1045" width="0.2075%" height="15" fill="rgb(226,22,26)" fg:x="92" fg:w="2"/><text x="9.7936%" y="1055.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="9.5436%" y="1029" width="0.2075%" height="15" fill="rgb(217,163,10)" fg:x="92" fg:w="2"/><text x="9.7936%" y="1039.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="9.5436%" y="1013" width="0.2075%" height="15" fill="rgb(213,25,53)" fg:x="92" fg:w="2"/><text x="9.7936%" y="1023.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="9.5436%" y="997" width="0.2075%" height="15" fill="rgb(252,105,26)" fg:x="92" fg:w="2"/><text x="9.7936%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="9.6473%" y="981" width="0.1037%" height="15" fill="rgb(220,39,43)" fg:x="93" fg:w="1"/><text x="9.8973%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="9.6473%" y="965" width="0.1037%" height="15" fill="rgb(229,68,48)" fg:x="93" fg:w="1"/><text x="9.8973%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="9.6473%" y="949" width="0.1037%" height="15" fill="rgb(252,8,32)" fg:x="93" fg:w="1"/><text x="9.8973%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="9.6473%" y="933" width="0.1037%" height="15" fill="rgb(223,20,43)" fg:x="93" fg:w="1"/><text x="9.8973%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="9.6473%" y="917" width="0.1037%" height="15" fill="rgb(229,81,49)" fg:x="93" fg:w="1"/><text x="9.8973%" y="927.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.10%)</title><rect x="10.3734%" y="1077" width="0.1037%" height="15" fill="rgb(236,28,36)" fg:x="100" fg:w="1"/><text x="10.6234%" y="1087.50"></text></g><g><title>[unknown] (64 samples, 6.64%)</title><rect x="18.2573%" y="917" width="6.6390%" height="15" fill="rgb(249,185,26)" fg:x="176" fg:w="64"/><text x="18.5073%" y="927.50">[unknown]</text></g><g><title>[unknown] (53 samples, 5.50%)</title><rect x="19.3983%" y="901" width="5.4979%" height="15" fill="rgb(249,174,33)" fg:x="187" fg:w="53"/><text x="19.6483%" y="911.50">[unknow..</text></g><g><title>[unknown] (52 samples, 5.39%)</title><rect x="19.5021%" y="885" width="5.3942%" height="15" fill="rgb(233,201,37)" fg:x="188" fg:w="52"/><text x="19.7521%" y="895.50">[unknow..</text></g><g><title>[unknown] (51 samples, 5.29%)</title><rect x="19.6058%" y="869" width="5.2905%" height="15" fill="rgb(221,78,26)" fg:x="189" fg:w="51"/><text x="19.8558%" y="879.50">[unkno..</text></g><g><title>[unknown] (50 samples, 5.19%)</title><rect x="19.7095%" y="853" width="5.1867%" height="15" fill="rgb(250,127,30)" fg:x="190" fg:w="50"/><text x="19.9595%" y="863.50">[unkno..</text></g><g><title>[unknown] (44 samples, 4.56%)</title><rect x="20.3320%" y="837" width="4.5643%" height="15" fill="rgb(230,49,44)" fg:x="196" fg:w="44"/><text x="20.5820%" y="847.50">[unkn..</text></g><g><title>[unknown] (42 samples, 4.36%)</title><rect x="20.5394%" y="821" width="4.3568%" height="15" fill="rgb(229,67,23)" fg:x="198" fg:w="42"/><text x="20.7894%" y="831.50">[unkn..</text></g><g><title>[unknown] (40 samples, 4.15%)</title><rect x="20.7469%" y="805" width="4.1494%" height="15" fill="rgb(249,83,47)" fg:x="200" fg:w="40"/><text x="20.9969%" y="815.50">[unkn..</text></g><g><title>[unknown] (37 samples, 3.84%)</title><rect x="21.0581%" y="789" width="3.8382%" height="15" fill="rgb(215,43,3)" fg:x="203" fg:w="37"/><text x="21.3081%" y="799.50">[unk..</text></g><g><title>[unknown] (35 samples, 3.63%)</title><rect x="21.2656%" y="773" width="3.6307%" height="15" fill="rgb(238,154,13)" fg:x="205" fg:w="35"/><text x="21.5156%" y="783.50">[unk..</text></g><g><title>[unknown] (31 samples, 3.22%)</title><rect x="21.6805%" y="757" width="3.2158%" height="15" fill="rgb(219,56,2)" fg:x="209" fg:w="31"/><text x="21.9305%" y="767.50">[un..</text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="24.3776%" y="741" width="0.5187%" height="15" fill="rgb(233,0,4)" fg:x="235" fg:w="5"/><text x="24.6276%" y="751.50"></text></g><g><title>[unknown] (4 samples, 0.41%)</title><rect x="25.0000%" y="885" width="0.4149%" height="15" fill="rgb(235,30,7)" fg:x="241" fg:w="4"/><text x="25.2500%" y="895.50"></text></g><g><title>[unknown] (4 samples, 0.41%)</title><rect x="25.0000%" y="869" width="0.4149%" height="15" fill="rgb(250,79,13)" fg:x="241" fg:w="4"/><text x="25.2500%" y="879.50"></text></g><g><title>[unknown] (4 samples, 0.41%)</title><rect x="25.0000%" y="853" width="0.4149%" height="15" fill="rgb(211,146,34)" fg:x="241" fg:w="4"/><text x="25.2500%" y="863.50"></text></g><g><title>[unknown] (4 samples, 0.41%)</title><rect x="25.0000%" y="837" width="0.4149%" height="15" fill="rgb(228,22,38)" fg:x="241" fg:w="4"/><text x="25.2500%" y="847.50"></text></g><g><title>[unknown] (4 samples, 0.41%)</title><rect x="25.0000%" y="821" width="0.4149%" height="15" fill="rgb(235,168,5)" fg:x="241" fg:w="4"/><text x="25.2500%" y="831.50"></text></g><g><title>[unknown] (4 samples, 0.41%)</title><rect x="25.0000%" y="805" width="0.4149%" height="15" fill="rgb(221,155,16)" fg:x="241" fg:w="4"/><text x="25.2500%" y="815.50"></text></g><g><title>[unknown] (4 samples, 0.41%)</title><rect x="25.0000%" y="789" width="0.4149%" height="15" fill="rgb(215,215,53)" fg:x="241" fg:w="4"/><text x="25.2500%" y="799.50"></text></g><g><title>[unknown] (4 samples, 0.41%)</title><rect x="25.0000%" y="773" width="0.4149%" height="15" fill="rgb(223,4,10)" fg:x="241" fg:w="4"/><text x="25.2500%" y="783.50"></text></g><g><title>[unknown] (4 samples, 0.41%)</title><rect x="25.0000%" y="757" width="0.4149%" height="15" fill="rgb(234,103,6)" fg:x="241" fg:w="4"/><text x="25.2500%" y="767.50"></text></g><g><title>[unknown] (4 samples, 0.41%)</title><rect x="25.0000%" y="741" width="0.4149%" height="15" fill="rgb(227,97,0)" fg:x="241" fg:w="4"/><text x="25.2500%" y="751.50"></text></g><g><title>[unknown] (4 samples, 0.41%)</title><rect x="25.0000%" y="725" width="0.4149%" height="15" fill="rgb(234,150,53)" fg:x="241" fg:w="4"/><text x="25.2500%" y="735.50"></text></g><g><title>__GI___libc_realloc (88 samples, 9.13%)</title><rect x="16.8050%" y="949" width="9.1286%" height="15" fill="rgb(228,201,54)" fg:x="162" fg:w="88"/><text x="17.0550%" y="959.50">__GI___libc_r..</text></g><g><title>_int_realloc (85 samples, 8.82%)</title><rect x="17.1162%" y="933" width="8.8174%" height="15" fill="rgb(222,22,37)" fg:x="165" fg:w="85"/><text x="17.3662%" y="943.50">_int_realloc</text></g><g><title>_int_malloc (10 samples, 1.04%)</title><rect x="24.8963%" y="917" width="1.0373%" height="15" fill="rgb(237,53,32)" fg:x="240" fg:w="10"/><text x="25.1463%" y="927.50"></text></g><g><title>sysmalloc (10 samples, 1.04%)</title><rect x="24.8963%" y="901" width="1.0373%" height="15" fill="rgb(233,25,53)" fg:x="240" fg:w="10"/><text x="25.1463%" y="911.50"></text></g><g><title>__glibc_morecore (5 samples, 0.52%)</title><rect x="25.4149%" y="885" width="0.5187%" height="15" fill="rgb(210,40,34)" fg:x="245" fg:w="5"/><text x="25.6649%" y="895.50"></text></g><g><title>__GI___sbrk (5 samples, 0.52%)</title><rect x="25.4149%" y="869" width="0.5187%" height="15" fill="rgb(241,220,44)" fg:x="245" fg:w="5"/><text x="25.6649%" y="879.50"></text></g><g><title>__GI___sbrk (5 samples, 0.52%)</title><rect x="25.4149%" y="853" width="0.5187%" height="15" fill="rgb(235,28,35)" fg:x="245" fg:w="5"/><text x="25.6649%" y="863.50"></text></g><g><title>__brk (5 samples, 0.52%)</title><rect x="25.4149%" y="837" width="0.5187%" height="15" fill="rgb(210,56,17)" fg:x="245" fg:w="5"/><text x="25.6649%" y="847.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="25.4149%" y="821" width="0.5187%" height="15" fill="rgb(224,130,29)" fg:x="245" fg:w="5"/><text x="25.6649%" y="831.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="25.4149%" y="805" width="0.5187%" height="15" fill="rgb(235,212,8)" fg:x="245" fg:w="5"/><text x="25.6649%" y="815.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="25.4149%" y="789" width="0.5187%" height="15" fill="rgb(223,33,50)" fg:x="245" fg:w="5"/><text x="25.6649%" y="799.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="25.4149%" y="773" width="0.5187%" height="15" fill="rgb(219,149,13)" fg:x="245" fg:w="5"/><text x="25.6649%" y="783.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="25.4149%" y="757" width="0.5187%" height="15" fill="rgb(250,156,29)" fg:x="245" fg:w="5"/><text x="25.6649%" y="767.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="25.4149%" y="741" width="0.5187%" height="15" fill="rgb(216,193,19)" fg:x="245" fg:w="5"/><text x="25.6649%" y="751.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="25.4149%" y="725" width="0.5187%" height="15" fill="rgb(216,135,14)" fg:x="245" fg:w="5"/><text x="25.6649%" y="735.50"></text></g><g><title>[unknown] (4 samples, 0.41%)</title><rect x="25.5187%" y="709" width="0.4149%" height="15" fill="rgb(241,47,5)" fg:x="246" fg:w="4"/><text x="25.7687%" y="719.50"></text></g><g><title>[unknown] (4 samples, 0.41%)</title><rect x="25.5187%" y="693" width="0.4149%" height="15" fill="rgb(233,42,35)" fg:x="246" fg:w="4"/><text x="25.7687%" y="703.50"></text></g><g><title>[unknown] (3 samples, 0.31%)</title><rect x="25.6224%" y="677" width="0.3112%" height="15" fill="rgb(231,13,6)" fg:x="247" fg:w="3"/><text x="25.8724%" y="687.50"></text></g><g><title>[unknown] (3 samples, 0.31%)</title><rect x="25.6224%" y="661" width="0.3112%" height="15" fill="rgb(207,181,40)" fg:x="247" fg:w="3"/><text x="25.8724%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="25.8299%" y="645" width="0.1037%" height="15" fill="rgb(254,173,49)" fg:x="249" fg:w="1"/><text x="26.0799%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="25.8299%" y="629" width="0.1037%" height="15" fill="rgb(221,1,38)" fg:x="249" fg:w="1"/><text x="26.0799%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="25.8299%" y="613" width="0.1037%" height="15" fill="rgb(206,124,46)" fg:x="249" fg:w="1"/><text x="26.0799%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="25.8299%" y="597" width="0.1037%" height="15" fill="rgb(249,21,11)" fg:x="249" fg:w="1"/><text x="26.0799%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (89 samples, 9.23%)</title><rect x="16.8050%" y="1013" width="9.2324%" height="15" fill="rgb(222,201,40)" fg:x="162" fg:w="89"/><text x="17.0550%" y="1023.50">alloc::raw_ve..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (89 samples, 9.23%)</title><rect x="16.8050%" y="997" width="9.2324%" height="15" fill="rgb(235,61,29)" fg:x="162" fg:w="89"/><text x="17.0550%" y="1007.50">&lt;alloc::alloc..</text></g><g><title>alloc::alloc::Global::grow_impl (89 samples, 9.23%)</title><rect x="16.8050%" y="981" width="9.2324%" height="15" fill="rgb(219,207,3)" fg:x="162" fg:w="89"/><text x="17.0550%" y="991.50">alloc::alloc:..</text></g><g><title>alloc::alloc::realloc (89 samples, 9.23%)</title><rect x="16.8050%" y="965" width="9.2324%" height="15" fill="rgb(222,56,46)" fg:x="162" fg:w="89"/><text x="17.0550%" y="975.50">alloc::alloc:..</text></g><g><title>__rdl_realloc (1 samples, 0.10%)</title><rect x="25.9336%" y="949" width="0.1037%" height="15" fill="rgb(239,76,54)" fg:x="250" fg:w="1"/><text x="26.1836%" y="959.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.10%)</title><rect x="25.9336%" y="933" width="0.1037%" height="15" fill="rgb(231,124,27)" fg:x="250" fg:w="1"/><text x="26.1836%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (93 samples, 9.65%)</title><rect x="16.5975%" y="1061" width="9.6473%" height="15" fill="rgb(249,195,6)" fg:x="160" fg:w="93"/><text x="16.8475%" y="1071.50">alloc::vec::Ve..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (91 samples, 9.44%)</title><rect x="16.8050%" y="1045" width="9.4398%" height="15" fill="rgb(237,174,47)" fg:x="162" fg:w="91"/><text x="17.0550%" y="1055.50">alloc::raw_ve..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (91 samples, 9.44%)</title><rect x="16.8050%" y="1029" width="9.4398%" height="15" fill="rgb(206,201,31)" fg:x="162" fg:w="91"/><text x="17.0550%" y="1039.50">alloc::raw_ve..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.21%)</title><rect x="26.0373%" y="1013" width="0.2075%" height="15" fill="rgb(231,57,52)" fg:x="251" fg:w="2"/><text x="26.2873%" y="1023.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.21%)</title><rect x="26.0373%" y="997" width="0.2075%" height="15" fill="rgb(248,177,22)" fg:x="251" fg:w="2"/><text x="26.2873%" y="1007.50"></text></g><g><title>[unknown] (78 samples, 8.09%)</title><rect x="27.3859%" y="917" width="8.0913%" height="15" fill="rgb(215,211,37)" fg:x="264" fg:w="78"/><text x="27.6359%" y="927.50">[unknown]</text></g><g><title>[unknown] (66 samples, 6.85%)</title><rect x="28.6307%" y="901" width="6.8465%" height="15" fill="rgb(241,128,51)" fg:x="276" fg:w="66"/><text x="28.8807%" y="911.50">[unknown]</text></g><g><title>[unknown] (63 samples, 6.54%)</title><rect x="28.9419%" y="885" width="6.5353%" height="15" fill="rgb(227,165,31)" fg:x="279" fg:w="63"/><text x="29.1919%" y="895.50">[unknown]</text></g><g><title>[unknown] (62 samples, 6.43%)</title><rect x="29.0456%" y="869" width="6.4315%" height="15" fill="rgb(228,167,24)" fg:x="280" fg:w="62"/><text x="29.2956%" y="879.50">[unknown]</text></g><g><title>[unknown] (60 samples, 6.22%)</title><rect x="29.2531%" y="853" width="6.2241%" height="15" fill="rgb(228,143,12)" fg:x="282" fg:w="60"/><text x="29.5031%" y="863.50">[unknown]</text></g><g><title>[unknown] (53 samples, 5.50%)</title><rect x="29.9793%" y="837" width="5.4979%" height="15" fill="rgb(249,149,8)" fg:x="289" fg:w="53"/><text x="30.2293%" y="847.50">[unknow..</text></g><g><title>[unknown] (53 samples, 5.50%)</title><rect x="29.9793%" y="821" width="5.4979%" height="15" fill="rgb(243,35,44)" fg:x="289" fg:w="53"/><text x="30.2293%" y="831.50">[unknow..</text></g><g><title>[unknown] (51 samples, 5.29%)</title><rect x="30.1867%" y="805" width="5.2905%" height="15" fill="rgb(246,89,9)" fg:x="291" fg:w="51"/><text x="30.4367%" y="815.50">[unkno..</text></g><g><title>[unknown] (49 samples, 5.08%)</title><rect x="30.3942%" y="789" width="5.0830%" height="15" fill="rgb(233,213,13)" fg:x="293" fg:w="49"/><text x="30.6442%" y="799.50">[unkno..</text></g><g><title>[unknown] (43 samples, 4.46%)</title><rect x="31.0166%" y="773" width="4.4606%" height="15" fill="rgb(233,141,41)" fg:x="299" fg:w="43"/><text x="31.2666%" y="783.50">[unkn..</text></g><g><title>[unknown] (39 samples, 4.05%)</title><rect x="31.4315%" y="757" width="4.0456%" height="15" fill="rgb(239,167,4)" fg:x="303" fg:w="39"/><text x="31.6815%" y="767.50">[unk..</text></g><g><title>[unknown] (9 samples, 0.93%)</title><rect x="34.5436%" y="741" width="0.9336%" height="15" fill="rgb(209,217,16)" fg:x="333" fg:w="9"/><text x="34.7936%" y="751.50"></text></g><g><title>[unknown] (3 samples, 0.31%)</title><rect x="35.1660%" y="725" width="0.3112%" height="15" fill="rgb(219,88,35)" fg:x="339" fg:w="3"/><text x="35.4160%" y="735.50"></text></g><g><title>alloc_perturb (1 samples, 0.10%)</title><rect x="35.4772%" y="917" width="0.1037%" height="15" fill="rgb(220,193,23)" fg:x="342" fg:w="1"/><text x="35.7272%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (94 samples, 9.75%)</title><rect x="26.2448%" y="1061" width="9.7510%" height="15" fill="rgb(230,90,52)" fg:x="253" fg:w="94"/><text x="26.4948%" y="1071.50">alloc::vec::Ve..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (94 samples, 9.75%)</title><rect x="26.2448%" y="1045" width="9.7510%" height="15" fill="rgb(252,106,19)" fg:x="253" fg:w="94"/><text x="26.4948%" y="1055.50">alloc::vec::Ve..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (94 samples, 9.75%)</title><rect x="26.2448%" y="1029" width="9.7510%" height="15" fill="rgb(206,74,20)" fg:x="253" fg:w="94"/><text x="26.4948%" y="1039.50">alloc::raw_vec..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (94 samples, 9.75%)</title><rect x="26.2448%" y="1013" width="9.7510%" height="15" fill="rgb(230,138,44)" fg:x="253" fg:w="94"/><text x="26.4948%" y="1023.50">alloc::raw_vec..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (94 samples, 9.75%)</title><rect x="26.2448%" y="997" width="9.7510%" height="15" fill="rgb(235,182,43)" fg:x="253" fg:w="94"/><text x="26.4948%" y="1007.50">&lt;alloc::alloc:..</text></g><g><title>alloc::alloc::Global::alloc_impl (94 samples, 9.75%)</title><rect x="26.2448%" y="981" width="9.7510%" height="15" fill="rgb(242,16,51)" fg:x="253" fg:w="94"/><text x="26.4948%" y="991.50">alloc::alloc::..</text></g><g><title>alloc::alloc::alloc (94 samples, 9.75%)</title><rect x="26.2448%" y="965" width="9.7510%" height="15" fill="rgb(248,9,4)" fg:x="253" fg:w="94"/><text x="26.4948%" y="975.50">alloc::alloc::..</text></g><g><title>__GI___libc_malloc (94 samples, 9.75%)</title><rect x="26.2448%" y="949" width="9.7510%" height="15" fill="rgb(210,31,22)" fg:x="253" fg:w="94"/><text x="26.4948%" y="959.50">__GI___libc_ma..</text></g><g><title>_int_malloc (89 samples, 9.23%)</title><rect x="26.7635%" y="933" width="9.2324%" height="15" fill="rgb(239,54,39)" fg:x="258" fg:w="89"/><text x="27.0135%" y="943.50">_int_malloc</text></g><g><title>sysmalloc (4 samples, 0.41%)</title><rect x="35.5809%" y="917" width="0.4149%" height="15" fill="rgb(230,99,41)" fg:x="343" fg:w="4"/><text x="35.8309%" y="927.50"></text></g><g><title>__glibc_morecore (3 samples, 0.31%)</title><rect x="35.6846%" y="901" width="0.3112%" height="15" fill="rgb(253,106,12)" fg:x="344" fg:w="3"/><text x="35.9346%" y="911.50"></text></g><g><title>__GI___sbrk (3 samples, 0.31%)</title><rect x="35.6846%" y="885" width="0.3112%" height="15" fill="rgb(213,46,41)" fg:x="344" fg:w="3"/><text x="35.9346%" y="895.50"></text></g><g><title>__GI___sbrk (3 samples, 0.31%)</title><rect x="35.6846%" y="869" width="0.3112%" height="15" fill="rgb(215,133,35)" fg:x="344" fg:w="3"/><text x="35.9346%" y="879.50"></text></g><g><title>__brk (3 samples, 0.31%)</title><rect x="35.6846%" y="853" width="0.3112%" height="15" fill="rgb(213,28,5)" fg:x="344" fg:w="3"/><text x="35.9346%" y="863.50"></text></g><g><title>[unknown] (3 samples, 0.31%)</title><rect x="35.6846%" y="837" width="0.3112%" height="15" fill="rgb(215,77,49)" fg:x="344" fg:w="3"/><text x="35.9346%" y="847.50"></text></g><g><title>[unknown] (3 samples, 0.31%)</title><rect x="35.6846%" y="821" width="0.3112%" height="15" fill="rgb(248,100,22)" fg:x="344" fg:w="3"/><text x="35.9346%" y="831.50"></text></g><g><title>[unknown] (3 samples, 0.31%)</title><rect x="35.6846%" y="805" width="0.3112%" height="15" fill="rgb(208,67,9)" fg:x="344" fg:w="3"/><text x="35.9346%" y="815.50"></text></g><g><title>[unknown] (3 samples, 0.31%)</title><rect x="35.6846%" y="789" width="0.3112%" height="15" fill="rgb(219,133,21)" fg:x="344" fg:w="3"/><text x="35.9346%" y="799.50"></text></g><g><title>[unknown] (3 samples, 0.31%)</title><rect x="35.6846%" y="773" width="0.3112%" height="15" fill="rgb(246,46,29)" fg:x="344" fg:w="3"/><text x="35.9346%" y="783.50"></text></g><g><title>[unknown] (3 samples, 0.31%)</title><rect x="35.6846%" y="757" width="0.3112%" height="15" fill="rgb(246,185,52)" fg:x="344" fg:w="3"/><text x="35.9346%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="35.7884%" y="741" width="0.2075%" height="15" fill="rgb(252,136,11)" fg:x="345" fg:w="2"/><text x="36.0384%" y="751.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="35.7884%" y="725" width="0.2075%" height="15" fill="rgb(219,138,53)" fg:x="345" fg:w="2"/><text x="36.0384%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="35.8921%" y="709" width="0.1037%" height="15" fill="rgb(211,51,23)" fg:x="346" fg:w="1"/><text x="36.1421%" y="719.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.10%)</title><rect x="35.9959%" y="1061" width="0.1037%" height="15" fill="rgb(247,221,28)" fg:x="347" fg:w="1"/><text x="36.2459%" y="1071.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.10%)</title><rect x="35.9959%" y="1045" width="0.1037%" height="15" fill="rgb(251,222,45)" fg:x="347" fg:w="1"/><text x="36.2459%" y="1055.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (1 samples, 0.10%)</title><rect x="35.9959%" y="1029" width="0.1037%" height="15" fill="rgb(217,162,53)" fg:x="347" fg:w="1"/><text x="36.2459%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.10%)</title><rect x="36.0996%" y="1061" width="0.1037%" height="15" fill="rgb(229,93,14)" fg:x="348" fg:w="1"/><text x="36.3496%" y="1071.50"></text></g><g><title>__GI___libc_free (3 samples, 0.31%)</title><rect x="36.2033%" y="949" width="0.3112%" height="15" fill="rgb(209,67,49)" fg:x="349" fg:w="3"/><text x="36.4533%" y="959.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="36.4108%" y="933" width="0.1037%" height="15" fill="rgb(213,87,29)" fg:x="351" fg:w="1"/><text x="36.6608%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;csgoproto::netmessages::CSVCMsg_PacketEntities&gt; (4 samples, 0.41%)</title><rect x="36.2033%" y="1061" width="0.4149%" height="15" fill="rgb(205,151,52)" fg:x="349" fg:w="4"/><text x="36.4533%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (4 samples, 0.41%)</title><rect x="36.2033%" y="1045" width="0.4149%" height="15" fill="rgb(253,215,39)" fg:x="349" fg:w="4"/><text x="36.4533%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.41%)</title><rect x="36.2033%" y="1029" width="0.4149%" height="15" fill="rgb(221,220,41)" fg:x="349" fg:w="4"/><text x="36.4533%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.41%)</title><rect x="36.2033%" y="1013" width="0.4149%" height="15" fill="rgb(218,133,21)" fg:x="349" fg:w="4"/><text x="36.4533%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.41%)</title><rect x="36.2033%" y="997" width="0.4149%" height="15" fill="rgb(221,193,43)" fg:x="349" fg:w="4"/><text x="36.4533%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.41%)</title><rect x="36.2033%" y="981" width="0.4149%" height="15" fill="rgb(240,128,52)" fg:x="349" fg:w="4"/><text x="36.4533%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.41%)</title><rect x="36.2033%" y="965" width="0.4149%" height="15" fill="rgb(253,114,12)" fg:x="349" fg:w="4"/><text x="36.4533%" y="975.50"></text></g><g><title>__rust_dealloc (1 samples, 0.10%)</title><rect x="36.5145%" y="949" width="0.1037%" height="15" fill="rgb(215,223,47)" fg:x="352" fg:w="1"/><text x="36.7645%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;demoparser::parsing::variants::PropData&gt;&gt; (10 samples, 1.04%)</title><rect x="40.8714%" y="1045" width="1.0373%" height="15" fill="rgb(248,225,23)" fg:x="394" fg:w="10"/><text x="41.1214%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::variants::PropData&gt; (1 samples, 0.10%)</title><rect x="41.8050%" y="1029" width="0.1037%" height="15" fill="rgb(250,108,0)" fg:x="403" fg:w="1"/><text x="42.0550%" y="1039.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities_cache_only::get_cls_id (2 samples, 0.21%)</title><rect x="41.9087%" y="1045" width="0.2075%" height="15" fill="rgb(228,208,7)" fg:x="404" fg:w="2"/><text x="42.1587%" y="1055.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.41%)</title><rect x="44.0871%" y="1029" width="0.4149%" height="15" fill="rgb(244,45,10)" fg:x="425" fg:w="4"/><text x="44.3371%" y="1039.50"></text></g><g><title>bitter::LittleEndianReader::has_data_for_unaligned_loads (1 samples, 0.10%)</title><rect x="54.3568%" y="965" width="0.1037%" height="15" fill="rgb(207,125,25)" fg:x="524" fg:w="1"/><text x="54.6068%" y="975.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_boolie (23 samples, 2.39%)</title><rect x="52.2822%" y="1013" width="2.3859%" height="15" fill="rgb(210,195,18)" fg:x="504" fg:w="23"/><text x="52.5322%" y="1023.50">de..</text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bit (23 samples, 2.39%)</title><rect x="52.2822%" y="997" width="2.3859%" height="15" fill="rgb(249,80,12)" fg:x="504" fg:w="23"/><text x="52.5322%" y="1007.50">&lt;b..</text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (23 samples, 2.39%)</title><rect x="52.2822%" y="981" width="2.3859%" height="15" fill="rgb(221,65,9)" fg:x="504" fg:w="23"/><text x="52.5322%" y="991.50">&lt;b..</text></g><g><title>bitter::LittleEndianReader::refill (2 samples, 0.21%)</title><rect x="54.4606%" y="965" width="0.2075%" height="15" fill="rgb(235,49,36)" fg:x="525" fg:w="2"/><text x="54.7106%" y="975.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.21%)</title><rect x="54.4606%" y="949" width="0.2075%" height="15" fill="rgb(225,32,20)" fg:x="525" fg:w="2"/><text x="54.7106%" y="959.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.21%)</title><rect x="54.4606%" y="933" width="0.2075%" height="15" fill="rgb(215,141,46)" fg:x="525" fg:w="2"/><text x="54.7106%" y="943.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::consume (4 samples, 0.41%)</title><rect x="60.5809%" y="981" width="0.4149%" height="15" fill="rgb(250,160,47)" fg:x="584" fg:w="4"/><text x="60.8309%" y="991.50"></text></g><g><title>bitter::LittleEndianReader::consume_ (4 samples, 0.41%)</title><rect x="60.5809%" y="965" width="0.4149%" height="15" fill="rgb(216,222,40)" fg:x="584" fg:w="4"/><text x="60.8309%" y="975.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::peek (4 samples, 0.41%)</title><rect x="60.9959%" y="981" width="0.4149%" height="15" fill="rgb(234,217,39)" fg:x="588" fg:w="4"/><text x="61.2459%" y="991.50"></text></g><g><title>bitter::LittleEndianReader::peek_ (4 samples, 0.41%)</title><rect x="60.9959%" y="965" width="0.4149%" height="15" fill="rgb(207,178,40)" fg:x="588" fg:w="4"/><text x="61.2459%" y="975.50"></text></g><g><title>bitter::LittleEndianReader::has_data_for_unaligned_loads (9 samples, 0.93%)</title><rect x="61.4108%" y="981" width="0.9336%" height="15" fill="rgb(221,136,13)" fg:x="592" fg:w="9"/><text x="61.6608%" y="991.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_inx (178 samples, 18.46%)</title><rect x="44.5021%" y="1029" width="18.4647%" height="15" fill="rgb(249,199,10)" fg:x="429" fg:w="178"/><text x="44.7521%" y="1039.50">demoparser::parsing::demo_par..</text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (80 samples, 8.30%)</title><rect x="54.6680%" y="1013" width="8.2988%" height="15" fill="rgb(249,222,13)" fg:x="527" fg:w="80"/><text x="54.9180%" y="1023.50">demoparser::..</text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (42 samples, 4.36%)</title><rect x="58.6100%" y="997" width="4.3568%" height="15" fill="rgb(244,185,38)" fg:x="565" fg:w="42"/><text x="58.8600%" y="1007.50">&lt;bitt..</text></g><g><title>bitter::LittleEndianReader::refill (6 samples, 0.62%)</title><rect x="62.3444%" y="981" width="0.6224%" height="15" fill="rgb(236,202,9)" fg:x="601" fg:w="6"/><text x="62.5944%" y="991.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::reserve (1 samples, 0.10%)</title><rect x="65.1452%" y="1013" width="0.1037%" height="15" fill="rgb(250,229,37)" fg:x="628" fg:w="1"/><text x="65.3952%" y="1023.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (1 samples, 0.10%)</title><rect x="65.1452%" y="997" width="0.1037%" height="15" fill="rgb(206,174,23)" fg:x="628" fg:w="1"/><text x="65.3952%" y="1007.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_grow (1 samples, 0.10%)</title><rect x="65.1452%" y="981" width="0.1037%" height="15" fill="rgb(211,33,43)" fg:x="628" fg:w="1"/><text x="65.3952%" y="991.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="65.1452%" y="965" width="0.1037%" height="15" fill="rgb(245,58,50)" fg:x="628" fg:w="1"/><text x="65.3952%" y="975.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="65.1452%" y="949" width="0.1037%" height="15" fill="rgb(244,68,36)" fg:x="628" fg:w="1"/><text x="65.3952%" y="959.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="65.1452%" y="933" width="0.1037%" height="15" fill="rgb(232,229,15)" fg:x="628" fg:w="1"/><text x="65.3952%" y="943.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities_cache_only::parse_indicies (229 samples, 23.76%)</title><rect x="42.1162%" y="1045" width="23.7552%" height="15" fill="rgb(254,30,23)" fg:x="406" fg:w="229"/><text x="42.3662%" y="1055.50">demoparser::parsing::demo_parsing::ent..</text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (28 samples, 2.90%)</title><rect x="62.9668%" y="1029" width="2.9046%" height="15" fill="rgb(235,160,14)" fg:x="607" fg:w="28"/><text x="63.2168%" y="1039.50">sm..</text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (6 samples, 0.62%)</title><rect x="65.2490%" y="1013" width="0.6224%" height="15" fill="rgb(212,155,44)" fg:x="629" fg:w="6"/><text x="65.4990%" y="1023.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_array (1 samples, 0.10%)</title><rect x="76.0373%" y="1029" width="0.1037%" height="15" fill="rgb(226,2,50)" fg:x="733" fg:w="1"/><text x="76.2873%" y="1039.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1 samples, 0.10%)</title><rect x="76.0373%" y="1013" width="0.1037%" height="15" fill="rgb(234,177,6)" fg:x="733" fg:w="1"/><text x="76.2873%" y="1023.50"></text></g><g><title>protobuf::text_format::print::fmt (1 samples, 0.10%)</title><rect x="76.0373%" y="997" width="0.1037%" height="15" fill="rgb(217,24,9)" fg:x="733" fg:w="1"/><text x="76.2873%" y="1007.50"></text></g><g><title>protobuf::text_format::print::print_to_string_internal (1 samples, 0.10%)</title><rect x="76.0373%" y="981" width="0.1037%" height="15" fill="rgb(220,13,46)" fg:x="733" fg:w="1"/><text x="76.2873%" y="991.50"></text></g><g><title>protobuf::text_format::print::print_to_internal (1 samples, 0.10%)</title><rect x="76.0373%" y="965" width="0.1037%" height="15" fill="rgb(239,221,27)" fg:x="733" fg:w="1"/><text x="76.2873%" y="975.50"></text></g><g><title>&lt;M as protobuf::message_dyn::MessageDyn&gt;::descriptor_dyn (1 samples, 0.10%)</title><rect x="76.0373%" y="949" width="0.1037%" height="15" fill="rgb(222,198,25)" fg:x="733" fg:w="1"/><text x="76.2873%" y="959.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_send_table::Sendprop_t as protobuf::message_full::MessageFull&gt;::descriptor (1 samples, 0.10%)</title><rect x="76.0373%" y="933" width="0.1037%" height="15" fill="rgb(211,99,13)" fg:x="733" fg:w="1"/><text x="76.2873%" y="943.50"></text></g><g><title>protobuf::lazy::Lazy&lt;T&gt;::get (1 samples, 0.10%)</title><rect x="76.0373%" y="917" width="0.1037%" height="15" fill="rgb(232,111,31)" fg:x="733" fg:w="1"/><text x="76.2873%" y="927.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.10%)</title><rect x="76.0373%" y="901" width="0.1037%" height="15" fill="rgb(245,82,37)" fg:x="733" fg:w="1"/><text x="76.2873%" y="911.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.10%)</title><rect x="76.0373%" y="885" width="0.1037%" height="15" fill="rgb(227,149,46)" fg:x="733" fg:w="1"/><text x="76.2873%" y="895.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.10%)</title><rect x="76.0373%" y="869" width="0.1037%" height="15" fill="rgb(218,36,50)" fg:x="733" fg:w="1"/><text x="76.2873%" y="879.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.10%)</title><rect x="76.0373%" y="853" width="0.1037%" height="15" fill="rgb(226,80,48)" fg:x="733" fg:w="1"/><text x="76.2873%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.10%)</title><rect x="76.0373%" y="837" width="0.1037%" height="15" fill="rgb(238,224,15)" fg:x="733" fg:w="1"/><text x="76.2873%" y="847.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.10%)</title><rect x="76.0373%" y="821" width="0.1037%" height="15" fill="rgb(241,136,10)" fg:x="733" fg:w="1"/><text x="76.2873%" y="831.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (1 samples, 0.10%)</title><rect x="76.0373%" y="805" width="0.1037%" height="15" fill="rgb(208,32,45)" fg:x="733" fg:w="1"/><text x="76.2873%" y="815.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_send_table::Sendprop_t as protobuf::message_full::MessageFull&gt;::descriptor::{{closure}} (1 samples, 0.10%)</title><rect x="76.0373%" y="789" width="0.1037%" height="15" fill="rgb(207,135,9)" fg:x="733" fg:w="1"/><text x="76.2873%" y="799.50"></text></g><g><title>csgoproto::netmessages::file_descriptor (1 samples, 0.10%)</title><rect x="76.0373%" y="773" width="0.1037%" height="15" fill="rgb(206,86,44)" fg:x="733" fg:w="1"/><text x="76.2873%" y="783.50"></text></g><g><title>protobuf::lazy::Lazy&lt;T&gt;::get (1 samples, 0.10%)</title><rect x="76.0373%" y="757" width="0.1037%" height="15" fill="rgb(245,177,15)" fg:x="733" fg:w="1"/><text x="76.2873%" y="767.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.10%)</title><rect x="76.0373%" y="741" width="0.1037%" height="15" fill="rgb(206,64,50)" fg:x="733" fg:w="1"/><text x="76.2873%" y="751.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.10%)</title><rect x="76.0373%" y="725" width="0.1037%" height="15" fill="rgb(234,36,40)" fg:x="733" fg:w="1"/><text x="76.2873%" y="735.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.10%)</title><rect x="76.0373%" y="709" width="0.1037%" height="15" fill="rgb(213,64,8)" fg:x="733" fg:w="1"/><text x="76.2873%" y="719.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.10%)</title><rect x="76.0373%" y="693" width="0.1037%" height="15" fill="rgb(210,75,36)" fg:x="733" fg:w="1"/><text x="76.2873%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.10%)</title><rect x="76.0373%" y="677" width="0.1037%" height="15" fill="rgb(229,88,21)" fg:x="733" fg:w="1"/><text x="76.2873%" y="687.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.10%)</title><rect x="76.0373%" y="661" width="0.1037%" height="15" fill="rgb(252,204,47)" fg:x="733" fg:w="1"/><text x="76.2873%" y="671.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (1 samples, 0.10%)</title><rect x="76.0373%" y="645" width="0.1037%" height="15" fill="rgb(208,77,27)" fg:x="733" fg:w="1"/><text x="76.2873%" y="655.50"></text></g><g><title>csgoproto::netmessages::file_descriptor::{{closure}} (1 samples, 0.10%)</title><rect x="76.0373%" y="629" width="0.1037%" height="15" fill="rgb(221,76,26)" fg:x="733" fg:w="1"/><text x="76.2873%" y="639.50"></text></g><g><title>protobuf::lazy::Lazy&lt;T&gt;::get (1 samples, 0.10%)</title><rect x="76.0373%" y="613" width="0.1037%" height="15" fill="rgb(225,139,18)" fg:x="733" fg:w="1"/><text x="76.2873%" y="623.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.10%)</title><rect x="76.0373%" y="597" width="0.1037%" height="15" fill="rgb(230,137,11)" fg:x="733" fg:w="1"/><text x="76.2873%" y="607.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.10%)</title><rect x="76.0373%" y="581" width="0.1037%" height="15" fill="rgb(212,28,1)" fg:x="733" fg:w="1"/><text x="76.2873%" y="591.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.10%)</title><rect x="76.0373%" y="565" width="0.1037%" height="15" fill="rgb(248,164,17)" fg:x="733" fg:w="1"/><text x="76.2873%" y="575.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.10%)</title><rect x="76.0373%" y="549" width="0.1037%" height="15" fill="rgb(222,171,42)" fg:x="733" fg:w="1"/><text x="76.2873%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.10%)</title><rect x="76.0373%" y="533" width="0.1037%" height="15" fill="rgb(243,84,45)" fg:x="733" fg:w="1"/><text x="76.2873%" y="543.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.10%)</title><rect x="76.0373%" y="517" width="0.1037%" height="15" fill="rgb(252,49,23)" fg:x="733" fg:w="1"/><text x="76.2873%" y="527.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (1 samples, 0.10%)</title><rect x="76.0373%" y="501" width="0.1037%" height="15" fill="rgb(215,19,7)" fg:x="733" fg:w="1"/><text x="76.2873%" y="511.50"></text></g><g><title>csgoproto::netmessages::file_descriptor::{{closure}}::{{closure}} (1 samples, 0.10%)</title><rect x="76.0373%" y="485" width="0.1037%" height="15" fill="rgb(238,81,41)" fg:x="733" fg:w="1"/><text x="76.2873%" y="495.50"></text></g><g><title>csgoproto::netmessages::file_descriptor_proto (1 samples, 0.10%)</title><rect x="76.0373%" y="469" width="0.1037%" height="15" fill="rgb(210,199,37)" fg:x="733" fg:w="1"/><text x="76.2873%" y="479.50"></text></g><g><title>protobuf::lazy::Lazy&lt;T&gt;::get (1 samples, 0.10%)</title><rect x="76.0373%" y="453" width="0.1037%" height="15" fill="rgb(244,192,49)" fg:x="733" fg:w="1"/><text x="76.2873%" y="463.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.10%)</title><rect x="76.0373%" y="437" width="0.1037%" height="15" fill="rgb(226,211,11)" fg:x="733" fg:w="1"/><text x="76.2873%" y="447.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.10%)</title><rect x="76.0373%" y="421" width="0.1037%" height="15" fill="rgb(236,162,54)" fg:x="733" fg:w="1"/><text x="76.2873%" y="431.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.10%)</title><rect x="76.0373%" y="405" width="0.1037%" height="15" fill="rgb(220,229,9)" fg:x="733" fg:w="1"/><text x="76.2873%" y="415.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.10%)</title><rect x="76.0373%" y="389" width="0.1037%" height="15" fill="rgb(250,87,22)" fg:x="733" fg:w="1"/><text x="76.2873%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.10%)</title><rect x="76.0373%" y="373" width="0.1037%" height="15" fill="rgb(239,43,17)" fg:x="733" fg:w="1"/><text x="76.2873%" y="383.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.10%)</title><rect x="76.0373%" y="357" width="0.1037%" height="15" fill="rgb(231,177,25)" fg:x="733" fg:w="1"/><text x="76.2873%" y="367.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (1 samples, 0.10%)</title><rect x="76.0373%" y="341" width="0.1037%" height="15" fill="rgb(219,179,1)" fg:x="733" fg:w="1"/><text x="76.2873%" y="351.50"></text></g><g><title>csgoproto::netmessages::file_descriptor_proto::{{closure}} (1 samples, 0.10%)</title><rect x="76.0373%" y="325" width="0.1037%" height="15" fill="rgb(238,219,53)" fg:x="733" fg:w="1"/><text x="76.2873%" y="335.50"></text></g><g><title>protobuf::message::Message::parse_from_bytes (1 samples, 0.10%)</title><rect x="76.0373%" y="309" width="0.1037%" height="15" fill="rgb(232,167,36)" fg:x="733" fg:w="1"/><text x="76.2873%" y="319.50"></text></g><g><title>protobuf::message::Message::parse_from (1 samples, 0.10%)</title><rect x="76.0373%" y="293" width="0.1037%" height="15" fill="rgb(244,19,51)" fg:x="733" fg:w="1"/><text x="76.2873%" y="303.50"></text></g><g><title>&lt;protobuf::descriptor::FileDescriptorProto as protobuf::message::Message&gt;::merge_from (1 samples, 0.10%)</title><rect x="76.0373%" y="277" width="0.1037%" height="15" fill="rgb(224,6,22)" fg:x="733" fg:w="1"/><text x="76.2873%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.10%)</title><rect x="76.0373%" y="261" width="0.1037%" height="15" fill="rgb(224,145,5)" fg:x="733" fg:w="1"/><text x="76.2873%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.10%)</title><rect x="76.0373%" y="245" width="0.1037%" height="15" fill="rgb(234,130,49)" fg:x="733" fg:w="1"/><text x="76.2873%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.10%)</title><rect x="76.0373%" y="229" width="0.1037%" height="15" fill="rgb(254,6,2)" fg:x="733" fg:w="1"/><text x="76.2873%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="76.0373%" y="213" width="0.1037%" height="15" fill="rgb(208,96,46)" fg:x="733" fg:w="1"/><text x="76.2873%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.10%)</title><rect x="76.0373%" y="197" width="0.1037%" height="15" fill="rgb(239,3,39)" fg:x="733" fg:w="1"/><text x="76.2873%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.10%)</title><rect x="76.0373%" y="181" width="0.1037%" height="15" fill="rgb(233,210,1)" fg:x="733" fg:w="1"/><text x="76.2873%" y="191.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.10%)</title><rect x="76.0373%" y="165" width="0.1037%" height="15" fill="rgb(244,137,37)" fg:x="733" fg:w="1"/><text x="76.2873%" y="175.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.10%)</title><rect x="76.0373%" y="149" width="0.1037%" height="15" fill="rgb(240,136,2)" fg:x="733" fg:w="1"/><text x="76.2873%" y="159.50"></text></g><g><title>_int_realloc (1 samples, 0.10%)</title><rect x="76.0373%" y="133" width="0.1037%" height="15" fill="rgb(239,18,37)" fg:x="733" fg:w="1"/><text x="76.2873%" y="143.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="76.0373%" y="117" width="0.1037%" height="15" fill="rgb(218,185,22)" fg:x="733" fg:w="1"/><text x="76.2873%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="76.0373%" y="101" width="0.1037%" height="15" fill="rgb(225,218,4)" fg:x="733" fg:w="1"/><text x="76.2873%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="76.0373%" y="85" width="0.1037%" height="15" fill="rgb(230,182,32)" fg:x="733" fg:w="1"/><text x="76.2873%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="76.0373%" y="69" width="0.1037%" height="15" fill="rgb(242,56,43)" fg:x="733" fg:w="1"/><text x="76.2873%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="76.0373%" y="53" width="0.1037%" height="15" fill="rgb(233,99,24)" fg:x="733" fg:w="1"/><text x="76.2873%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="76.0373%" y="37" width="0.1037%" height="15" fill="rgb(234,209,42)" fg:x="733" fg:w="1"/><text x="76.2873%" y="47.50"></text></g><g><title>bitter::LittleEndianReader::has_data_for_unaligned_loads (2 samples, 0.21%)</title><rect x="82.0539%" y="949" width="0.2075%" height="15" fill="rgb(227,7,12)" fg:x="791" fg:w="2"/><text x="82.3039%" y="959.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_special_float (19 samples, 1.97%)</title><rect x="80.6017%" y="1013" width="1.9710%" height="15" fill="rgb(245,203,43)" fg:x="777" fg:w="19"/><text x="80.8517%" y="1023.50">d..</text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_f32 (10 samples, 1.04%)</title><rect x="81.5353%" y="997" width="1.0373%" height="15" fill="rgb(238,205,33)" fg:x="786" fg:w="10"/><text x="81.7853%" y="1007.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_u32 (10 samples, 1.04%)</title><rect x="81.5353%" y="981" width="1.0373%" height="15" fill="rgb(231,56,7)" fg:x="786" fg:w="10"/><text x="81.7853%" y="991.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (10 samples, 1.04%)</title><rect x="81.5353%" y="965" width="1.0373%" height="15" fill="rgb(244,186,29)" fg:x="786" fg:w="10"/><text x="81.7853%" y="975.50"></text></g><g><title>bitter::LittleEndianReader::refill (3 samples, 0.31%)</title><rect x="82.2614%" y="949" width="0.3112%" height="15" fill="rgb(234,111,31)" fg:x="793" fg:w="3"/><text x="82.5114%" y="959.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::peek (1 samples, 0.10%)</title><rect x="83.4025%" y="981" width="0.1037%" height="15" fill="rgb(241,149,10)" fg:x="804" fg:w="1"/><text x="83.6525%" y="991.50"></text></g><g><title>bitter::LittleEndianReader::peek_ (1 samples, 0.10%)</title><rect x="83.4025%" y="965" width="0.1037%" height="15" fill="rgb(249,206,44)" fg:x="804" fg:w="1"/><text x="83.6525%" y="975.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_float (73 samples, 7.57%)</title><rect x="76.1411%" y="1029" width="7.5726%" height="15" fill="rgb(251,153,30)" fg:x="734" fg:w="73"/><text x="76.3911%" y="1039.50">demoparser..</text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (11 samples, 1.14%)</title><rect x="82.5726%" y="1013" width="1.1411%" height="15" fill="rgb(239,152,38)" fg:x="796" fg:w="11"/><text x="82.8226%" y="1023.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (4 samples, 0.41%)</title><rect x="83.2988%" y="997" width="0.4149%" height="15" fill="rgb(249,139,47)" fg:x="803" fg:w="4"/><text x="83.5488%" y="1007.50"></text></g><g><title>bitter::LittleEndianReader::has_data_for_unaligned_loads (2 samples, 0.21%)</title><rect x="83.5062%" y="981" width="0.2075%" height="15" fill="rgb(244,64,35)" fg:x="805" fg:w="2"/><text x="83.7562%" y="991.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (5 samples, 0.52%)</title><rect x="83.8174%" y="1013" width="0.5187%" height="15" fill="rgb(216,46,15)" fg:x="808" fg:w="5"/><text x="84.0674%" y="1023.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (2 samples, 0.21%)</title><rect x="84.1286%" y="997" width="0.2075%" height="15" fill="rgb(250,74,19)" fg:x="811" fg:w="2"/><text x="84.3786%" y="1007.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::peek (1 samples, 0.10%)</title><rect x="84.2324%" y="981" width="0.1037%" height="15" fill="rgb(249,42,33)" fg:x="812" fg:w="1"/><text x="84.4824%" y="991.50"></text></g><g><title>bitter::LittleEndianReader::peek_ (1 samples, 0.10%)</title><rect x="84.2324%" y="965" width="0.1037%" height="15" fill="rgb(242,149,17)" fg:x="812" fg:w="1"/><text x="84.4824%" y="975.50"></text></g><g><title>bitter::LittleEndianReader::has_data_for_unaligned_loads (1 samples, 0.10%)</title><rect x="84.5436%" y="965" width="0.1037%" height="15" fill="rgb(244,29,21)" fg:x="815" fg:w="1"/><text x="84.7936%" y="975.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_int (10 samples, 1.04%)</title><rect x="83.7137%" y="1029" width="1.0373%" height="15" fill="rgb(220,130,37)" fg:x="807" fg:w="10"/><text x="83.9637%" y="1039.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_sbit_long (4 samples, 0.41%)</title><rect x="84.3361%" y="1013" width="0.4149%" height="15" fill="rgb(211,67,2)" fg:x="813" fg:w="4"/><text x="84.5861%" y="1023.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (4 samples, 0.41%)</title><rect x="84.3361%" y="997" width="0.4149%" height="15" fill="rgb(235,68,52)" fg:x="813" fg:w="4"/><text x="84.5861%" y="1007.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (2 samples, 0.21%)</title><rect x="84.5436%" y="981" width="0.2075%" height="15" fill="rgb(246,142,3)" fg:x="815" fg:w="2"/><text x="84.7936%" y="991.50"></text></g><g><title>bitter::LittleEndianReader::refill (1 samples, 0.10%)</title><rect x="84.6473%" y="965" width="0.1037%" height="15" fill="rgb(241,25,7)" fg:x="816" fg:w="1"/><text x="84.8973%" y="975.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_special_float (2 samples, 0.21%)</title><rect x="85.3734%" y="997" width="0.2075%" height="15" fill="rgb(242,119,39)" fg:x="823" fg:w="2"/><text x="85.6234%" y="1007.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_bit_coord (2 samples, 0.21%)</title><rect x="85.3734%" y="981" width="0.2075%" height="15" fill="rgb(241,98,45)" fg:x="823" fg:w="2"/><text x="85.6234%" y="991.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bit (2 samples, 0.21%)</title><rect x="85.3734%" y="965" width="0.2075%" height="15" fill="rgb(254,28,30)" fg:x="823" fg:w="2"/><text x="85.6234%" y="975.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (2 samples, 0.21%)</title><rect x="85.3734%" y="949" width="0.2075%" height="15" fill="rgb(241,142,54)" fg:x="823" fg:w="2"/><text x="85.6234%" y="959.50"></text></g><g><title>bitter::LittleEndianReader::has_data_for_unaligned_loads (1 samples, 0.10%)</title><rect x="85.4772%" y="933" width="0.1037%" height="15" fill="rgb(222,85,15)" fg:x="824" fg:w="1"/><text x="85.7272%" y="943.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_vec (9 samples, 0.93%)</title><rect x="84.7510%" y="1029" width="0.9336%" height="15" fill="rgb(210,85,47)" fg:x="817" fg:w="9"/><text x="85.0010%" y="1039.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_float (7 samples, 0.73%)</title><rect x="84.9585%" y="1013" width="0.7261%" height="15" fill="rgb(224,206,25)" fg:x="819" fg:w="7"/><text x="85.2085%" y="1023.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (1 samples, 0.10%)</title><rect x="85.5809%" y="997" width="0.1037%" height="15" fill="rgb(243,201,19)" fg:x="825" fg:w="1"/><text x="85.8309%" y="1007.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.10%)</title><rect x="85.5809%" y="981" width="0.1037%" height="15" fill="rgb(236,59,4)" fg:x="825" fg:w="1"/><text x="85.8309%" y="991.50"></text></g><g><title>bitter::LittleEndianReader::has_data_for_unaligned_loads (1 samples, 0.10%)</title><rect x="85.5809%" y="965" width="0.1037%" height="15" fill="rgb(254,179,45)" fg:x="825" fg:w="1"/><text x="85.8309%" y="975.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode (213 samples, 22.10%)</title><rect x="65.8714%" y="1045" width="22.0954%" height="15" fill="rgb(226,14,10)" fg:x="635" fg:w="213"/><text x="66.1214%" y="1055.50">demoparser::parsing::demo_parsing::..</text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_vec_xy (22 samples, 2.28%)</title><rect x="85.6846%" y="1029" width="2.2822%" height="15" fill="rgb(244,27,41)" fg:x="826" fg:w="22"/><text x="85.9346%" y="1039.50">d..</text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_float (18 samples, 1.87%)</title><rect x="86.0996%" y="1013" width="1.8672%" height="15" fill="rgb(235,35,32)" fg:x="830" fg:w="18"/><text x="86.3496%" y="1023.50">d..</text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_special_float (6 samples, 0.62%)</title><rect x="87.3444%" y="997" width="0.6224%" height="15" fill="rgb(218,68,31)" fg:x="842" fg:w="6"/><text x="87.5944%" y="1007.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_f32 (6 samples, 0.62%)</title><rect x="87.3444%" y="981" width="0.6224%" height="15" fill="rgb(207,120,37)" fg:x="842" fg:w="6"/><text x="87.5944%" y="991.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_u32 (6 samples, 0.62%)</title><rect x="87.3444%" y="965" width="0.6224%" height="15" fill="rgb(227,98,0)" fg:x="842" fg:w="6"/><text x="87.5944%" y="975.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (6 samples, 0.62%)</title><rect x="87.3444%" y="949" width="0.6224%" height="15" fill="rgb(207,7,3)" fg:x="842" fg:w="6"/><text x="87.5944%" y="959.50"></text></g><g><title>bitter::LittleEndianReader::refill (4 samples, 0.41%)</title><rect x="87.5519%" y="933" width="0.4149%" height="15" fill="rgb(206,98,19)" fg:x="844" fg:w="4"/><text x="87.8019%" y="943.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub (1 samples, 0.10%)</title><rect x="87.8631%" y="917" width="0.1037%" height="15" fill="rgb(217,5,26)" fg:x="847" fg:w="1"/><text x="88.1131%" y="927.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.10%)</title><rect x="87.8631%" y="901" width="0.1037%" height="15" fill="rgb(235,190,38)" fg:x="847" fg:w="1"/><text x="88.1131%" y="911.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::finish (3 samples, 0.31%)</title><rect x="87.9668%" y="933" width="0.3112%" height="15" fill="rgb(247,86,24)" fg:x="848" fg:w="3"/><text x="88.2168%" y="943.50"></text></g><g><title>ahash::operations::aesenc (3 samples, 0.31%)</title><rect x="87.9668%" y="917" width="0.3112%" height="15" fill="rgb(205,101,16)" fg:x="848" fg:w="3"/><text x="88.2168%" y="927.50"></text></g><g><title>core::core_arch::x86::aes::_mm_aesenc_si128 (3 samples, 0.31%)</title><rect x="87.9668%" y="901" width="0.3112%" height="15" fill="rgb(246,168,33)" fg:x="848" fg:w="3"/><text x="88.2168%" y="911.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.41%)</title><rect x="87.9668%" y="997" width="0.4149%" height="15" fill="rgb(231,114,1)" fg:x="848" fg:w="4"/><text x="88.2168%" y="1007.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::hash_one (4 samples, 0.41%)</title><rect x="87.9668%" y="981" width="0.4149%" height="15" fill="rgb(207,184,53)" fg:x="848" fg:w="4"/><text x="88.2168%" y="991.50"></text></g><g><title>ahash::random_state::RandomState::hash_one (4 samples, 0.41%)</title><rect x="87.9668%" y="965" width="0.4149%" height="15" fill="rgb(224,95,51)" fg:x="848" fg:w="4"/><text x="88.2168%" y="975.50"></text></g><g><title>&lt;T as ahash::specialize::CallHasher&gt;::get_hash (4 samples, 0.41%)</title><rect x="87.9668%" y="949" width="0.4149%" height="15" fill="rgb(212,188,45)" fg:x="848" fg:w="4"/><text x="88.2168%" y="959.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.10%)</title><rect x="88.2780%" y="933" width="0.1037%" height="15" fill="rgb(223,154,38)" fg:x="851" fg:w="1"/><text x="88.5280%" y="943.50"></text></g><g><title>ahash::aes_hash::AHasher::from_random_state (1 samples, 0.10%)</title><rect x="88.2780%" y="917" width="0.1037%" height="15" fill="rgb(251,22,52)" fg:x="851" fg:w="1"/><text x="88.5280%" y="927.50"></text></g><g><title>&lt;[u64: 2] as ahash::convert::Convert&lt;u128&gt;&gt;::convert (1 samples, 0.10%)</title><rect x="88.2780%" y="901" width="0.1037%" height="15" fill="rgb(229,209,22)" fg:x="851" fg:w="1"/><text x="88.5280%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.10%)</title><rect x="89.4191%" y="949" width="0.1037%" height="15" fill="rgb(234,138,34)" fg:x="862" fg:w="1"/><text x="89.6691%" y="959.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.10%)</title><rect x="89.4191%" y="933" width="0.1037%" height="15" fill="rgb(212,95,11)" fg:x="862" fg:w="1"/><text x="89.6691%" y="943.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.10%)</title><rect x="89.4191%" y="917" width="0.1037%" height="15" fill="rgb(240,179,47)" fg:x="862" fg:w="1"/><text x="89.6691%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.10%)</title><rect x="89.4191%" y="901" width="0.1037%" height="15" fill="rgb(240,163,11)" fg:x="862" fg:w="1"/><text x="89.6691%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.10%)</title><rect x="89.4191%" y="885" width="0.1037%" height="15" fill="rgb(236,37,12)" fg:x="862" fg:w="1"/><text x="89.6691%" y="895.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.10%)</title><rect x="89.5228%" y="949" width="0.1037%" height="15" fill="rgb(232,164,16)" fg:x="863" fg:w="1"/><text x="89.7728%" y="959.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.10%)</title><rect x="89.6266%" y="949" width="0.1037%" height="15" fill="rgb(244,205,15)" fg:x="864" fg:w="1"/><text x="89.8766%" y="959.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.10%)</title><rect x="89.6266%" y="933" width="0.1037%" height="15" fill="rgb(223,117,47)" fg:x="864" fg:w="1"/><text x="89.8766%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="89.6266%" y="917" width="0.1037%" height="15" fill="rgb(244,107,35)" fg:x="864" fg:w="1"/><text x="89.8766%" y="927.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities_cache_only::parse_ent_props_indicies (515 samples, 53.42%)</title><rect x="36.6183%" y="1061" width="53.4232%" height="15" fill="rgb(205,140,8)" fg:x="353" fg:w="515"/><text x="36.8683%" y="1071.50">demoparser::parsing::demo_parsing::entities_cache_only::parse_ent_props_indicies</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (20 samples, 2.07%)</title><rect x="87.9668%" y="1045" width="2.0747%" height="15" fill="rgb(228,84,46)" fg:x="848" fg:w="20"/><text x="88.2168%" y="1055.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (20 samples, 2.07%)</title><rect x="87.9668%" y="1029" width="2.0747%" height="15" fill="rgb(254,188,9)" fg:x="848" fg:w="20"/><text x="88.2168%" y="1039.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (20 samples, 2.07%)</title><rect x="87.9668%" y="1013" width="2.0747%" height="15" fill="rgb(206,112,54)" fg:x="848" fg:w="20"/><text x="88.2168%" y="1023.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (16 samples, 1.66%)</title><rect x="88.3817%" y="997" width="1.6598%" height="15" fill="rgb(216,84,49)" fg:x="852" fg:w="16"/><text x="88.6317%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (16 samples, 1.66%)</title><rect x="88.3817%" y="981" width="1.6598%" height="15" fill="rgb(214,194,35)" fg:x="852" fg:w="16"/><text x="88.6317%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (16 samples, 1.66%)</title><rect x="88.3817%" y="965" width="1.6598%" height="15" fill="rgb(249,28,3)" fg:x="852" fg:w="16"/><text x="88.6317%" y="975.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.31%)</title><rect x="89.7303%" y="949" width="0.3112%" height="15" fill="rgb(222,56,52)" fg:x="865" fg:w="3"/><text x="89.9803%" y="959.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.31%)</title><rect x="89.7303%" y="933" width="0.3112%" height="15" fill="rgb(245,217,50)" fg:x="865" fg:w="3"/><text x="89.9803%" y="943.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_boolie (2 samples, 0.21%)</title><rect x="90.0415%" y="1061" width="0.2075%" height="15" fill="rgb(213,201,24)" fg:x="868" fg:w="2"/><text x="90.2915%" y="1071.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bit (2 samples, 0.21%)</title><rect x="90.0415%" y="1045" width="0.2075%" height="15" fill="rgb(248,116,28)" fg:x="868" fg:w="2"/><text x="90.2915%" y="1055.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (2 samples, 0.21%)</title><rect x="90.0415%" y="1029" width="0.2075%" height="15" fill="rgb(219,72,43)" fg:x="868" fg:w="2"/><text x="90.2915%" y="1039.50"></text></g><g><title>bitter::LittleEndianReader::refill (1 samples, 0.10%)</title><rect x="90.1452%" y="1013" width="0.1037%" height="15" fill="rgb(209,138,14)" fg:x="869" fg:w="1"/><text x="90.3952%" y="1023.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities_cache_only::&lt;impl demoparser::parsing::parser::Parser&gt;::_parse_packet_entities_indicies (774 samples, 80.29%)</title><rect x="10.4772%" y="1077" width="80.2905%" height="15" fill="rgb(222,18,33)" fg:x="101" fg:w="774"/><text x="10.7272%" y="1087.50">demoparser::parsing::demo_parsing::entities_cache_only::&lt;impl demoparser::parsing::parser::Parser&gt;::_parse_packet_entities_indicies</text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_u_bit_var (5 samples, 0.52%)</title><rect x="90.2490%" y="1061" width="0.5187%" height="15" fill="rgb(213,199,7)" fg:x="870" fg:w="5"/><text x="90.4990%" y="1071.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (2 samples, 0.21%)</title><rect x="90.5602%" y="1045" width="0.2075%" height="15" fill="rgb(250,110,10)" fg:x="873" fg:w="2"/><text x="90.8102%" y="1055.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (2 samples, 0.21%)</title><rect x="90.5602%" y="1029" width="0.2075%" height="15" fill="rgb(248,123,6)" fg:x="873" fg:w="2"/><text x="90.8102%" y="1039.50"></text></g><g><title>bitter::LittleEndianReader::has_data_for_unaligned_loads (1 samples, 0.10%)</title><rect x="90.6639%" y="1013" width="0.1037%" height="15" fill="rgb(206,91,31)" fg:x="874" fg:w="1"/><text x="90.9139%" y="1023.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.10%)</title><rect x="91.2863%" y="1029" width="0.1037%" height="15" fill="rgb(211,154,13)" fg:x="880" fg:w="1"/><text x="91.5363%" y="1039.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bool (1 samples, 0.10%)</title><rect x="91.3900%" y="1029" width="0.1037%" height="15" fill="rgb(225,148,7)" fg:x="881" fg:w="1"/><text x="91.6400%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.10%)</title><rect x="91.5975%" y="901" width="0.1037%" height="15" fill="rgb(220,160,43)" fg:x="883" fg:w="1"/><text x="91.8475%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (4 samples, 0.41%)</title><rect x="91.5975%" y="965" width="0.4149%" height="15" fill="rgb(213,52,39)" fg:x="883" fg:w="4"/><text x="91.8475%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (4 samples, 0.41%)</title><rect x="91.5975%" y="949" width="0.4149%" height="15" fill="rgb(243,137,7)" fg:x="883" fg:w="4"/><text x="91.8475%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (4 samples, 0.41%)</title><rect x="91.5975%" y="933" width="0.4149%" height="15" fill="rgb(230,79,13)" fg:x="883" fg:w="4"/><text x="91.8475%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (4 samples, 0.41%)</title><rect x="91.5975%" y="917" width="0.4149%" height="15" fill="rgb(247,105,23)" fg:x="883" fg:w="4"/><text x="91.8475%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.31%)</title><rect x="91.7012%" y="901" width="0.3112%" height="15" fill="rgb(223,179,41)" fg:x="884" fg:w="3"/><text x="91.9512%" y="911.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.21%)</title><rect x="91.8050%" y="885" width="0.2075%" height="15" fill="rgb(218,9,34)" fg:x="885" fg:w="2"/><text x="92.0550%" y="895.50"></text></g><g><title>tcache_get (2 samples, 0.21%)</title><rect x="91.8050%" y="869" width="0.2075%" height="15" fill="rgb(222,106,8)" fg:x="885" fg:w="2"/><text x="92.0550%" y="879.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes (20 samples, 2.07%)</title><rect x="91.4938%" y="1029" width="2.0747%" height="15" fill="rgb(211,220,0)" fg:x="882" fg:w="20"/><text x="91.7438%" y="1039.50">p..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (19 samples, 1.97%)</title><rect x="91.5975%" y="1013" width="1.9710%" height="15" fill="rgb(229,52,16)" fg:x="883" fg:w="19"/><text x="91.8475%" y="1023.50">p..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (19 samples, 1.97%)</title><rect x="91.5975%" y="997" width="1.9710%" height="15" fill="rgb(212,155,18)" fg:x="883" fg:w="19"/><text x="91.8475%" y="1007.50">p..</text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (19 samples, 1.97%)</title><rect x="91.5975%" y="981" width="1.9710%" height="15" fill="rgb(242,21,14)" fg:x="883" fg:w="19"/><text x="91.8475%" y="991.50">p..</text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact (15 samples, 1.56%)</title><rect x="92.0124%" y="965" width="1.5560%" height="15" fill="rgb(222,19,48)" fg:x="887" fg:w="15"/><text x="92.2624%" y="975.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::read_bytes (15 samples, 1.56%)</title><rect x="92.0124%" y="949" width="1.5560%" height="15" fill="rgb(232,45,27)" fg:x="887" fg:w="15"/><text x="92.2624%" y="959.50"></text></g><g><title>protobuf::misc::maybe_uninit_write_slice (15 samples, 1.56%)</title><rect x="92.0124%" y="933" width="1.5560%" height="15" fill="rgb(249,103,42)" fg:x="887" fg:w="15"/><text x="92.2624%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (15 samples, 1.56%)</title><rect x="92.0124%" y="917" width="1.5560%" height="15" fill="rgb(246,81,33)" fg:x="887" fg:w="15"/><text x="92.2624%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 1.56%)</title><rect x="92.0124%" y="901" width="1.5560%" height="15" fill="rgb(252,33,42)" fg:x="887" fg:w="15"/><text x="92.2624%" y="911.50"></text></g><g><title>[libc.so.6] (15 samples, 1.56%)</title><rect x="92.0124%" y="885" width="1.5560%" height="15" fill="rgb(209,212,41)" fg:x="887" fg:w="15"/><text x="92.2624%" y="895.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (2 samples, 0.21%)</title><rect x="93.7759%" y="997" width="0.2075%" height="15" fill="rgb(207,154,6)" fg:x="904" fg:w="2"/><text x="94.0259%" y="1007.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int32 (8 samples, 0.83%)</title><rect x="93.5685%" y="1029" width="0.8299%" height="15" fill="rgb(223,64,47)" fg:x="902" fg:w="8"/><text x="93.8185%" y="1039.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int64 (6 samples, 0.62%)</title><rect x="93.7759%" y="1013" width="0.6224%" height="15" fill="rgb(211,161,38)" fg:x="904" fg:w="6"/><text x="94.0259%" y="1023.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (4 samples, 0.41%)</title><rect x="93.9834%" y="997" width="0.4149%" height="15" fill="rgb(219,138,40)" fg:x="906" fg:w="4"/><text x="94.2334%" y="1007.50"></text></g><g><title>protobuf::varint::decode::decode_varint64 (4 samples, 0.41%)</title><rect x="93.9834%" y="981" width="0.4149%" height="15" fill="rgb(241,228,46)" fg:x="906" fg:w="4"/><text x="94.2334%" y="991.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (4 samples, 0.41%)</title><rect x="93.9834%" y="965" width="0.4149%" height="15" fill="rgb(223,209,38)" fg:x="906" fg:w="4"/><text x="94.2334%" y="975.50"></text></g><g><title>protobuf::varint::decode::decode_varint_full (1 samples, 0.10%)</title><rect x="94.2946%" y="949" width="0.1037%" height="15" fill="rgb(236,164,45)" fg:x="909" fg:w="1"/><text x="94.5446%" y="959.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::consume (1 samples, 0.10%)</title><rect x="94.3983%" y="997" width="0.1037%" height="15" fill="rgb(231,15,5)" fg:x="910" fg:w="1"/><text x="94.6483%" y="1007.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::consume (1 samples, 0.10%)</title><rect x="94.3983%" y="981" width="0.1037%" height="15" fill="rgb(252,35,15)" fg:x="910" fg:w="1"/><text x="94.6483%" y="991.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::remaining_in_buf (1 samples, 0.10%)</title><rect x="94.5021%" y="997" width="0.1037%" height="15" fill="rgb(248,181,18)" fg:x="911" fg:w="1"/><text x="94.7521%" y="1007.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::remaining_in_buf (1 samples, 0.10%)</title><rect x="94.5021%" y="981" width="0.1037%" height="15" fill="rgb(233,39,42)" fg:x="911" fg:w="1"/><text x="94.7521%" y="991.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_PacketEntities as protobuf::message::Message&gt;::merge_from (43 samples, 4.46%)</title><rect x="90.7676%" y="1045" width="4.4606%" height="15" fill="rgb(238,110,33)" fg:x="875" fg:w="43"/><text x="91.0176%" y="1055.50">&lt;csgo..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (8 samples, 0.83%)</title><rect x="94.3983%" y="1029" width="0.8299%" height="15" fill="rgb(233,195,10)" fg:x="910" fg:w="8"/><text x="94.6483%" y="1039.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (8 samples, 0.83%)</title><rect x="94.3983%" y="1013" width="0.8299%" height="15" fill="rgb(254,105,3)" fg:x="910" fg:w="8"/><text x="94.6483%" y="1023.50"></text></g><g><title>protobuf::varint::decode::decode_varint32 (6 samples, 0.62%)</title><rect x="94.6058%" y="997" width="0.6224%" height="15" fill="rgb(221,225,9)" fg:x="912" fg:w="6"/><text x="94.8558%" y="1007.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (6 samples, 0.62%)</title><rect x="94.6058%" y="981" width="0.6224%" height="15" fill="rgb(224,227,45)" fg:x="912" fg:w="6"/><text x="94.8558%" y="991.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_packet_entities (821 samples, 85.17%)</title><rect x="10.1660%" y="1109" width="85.1660%" height="15" fill="rgb(229,198,43)" fg:x="98" fg:w="821"/><text x="10.4160%" y="1119.50">demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_packet_entities</text></g><g><title>demoparser::parsing::demo_parsing::entities_cache_only::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_packet_entities_indicies (821 samples, 85.17%)</title><rect x="10.1660%" y="1093" width="85.1660%" height="15" fill="rgb(206,209,35)" fg:x="98" fg:w="821"/><text x="10.4160%" y="1103.50">demoparser::parsing::demo_parsing::entities_cache_only::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_packet_entities_indicies</text></g><g><title>protobuf::message::Message::parse_from_bytes (44 samples, 4.56%)</title><rect x="90.7676%" y="1077" width="4.5643%" height="15" fill="rgb(245,195,53)" fg:x="875" fg:w="44"/><text x="91.0176%" y="1087.50">proto..</text></g><g><title>protobuf::message::Message::parse_from (44 samples, 4.56%)</title><rect x="90.7676%" y="1061" width="4.5643%" height="15" fill="rgb(240,92,26)" fg:x="875" fg:w="44"/><text x="91.0176%" y="1071.50">proto..</text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_PacketEntities as protobuf::message::Message&gt;::new (1 samples, 0.10%)</title><rect x="95.2282%" y="1045" width="0.1037%" height="15" fill="rgb(207,40,23)" fg:x="918" fg:w="1"/><text x="95.4782%" y="1055.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (1 samples, 0.10%)</title><rect x="95.4357%" y="1093" width="0.1037%" height="15" fill="rgb(223,111,35)" fg:x="920" fg:w="1"/><text x="95.6857%" y="1103.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.10%)</title><rect x="95.4357%" y="1077" width="0.1037%" height="15" fill="rgb(229,147,28)" fg:x="920" fg:w="1"/><text x="95.6857%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.10%)</title><rect x="95.4357%" y="1061" width="0.1037%" height="15" fill="rgb(211,29,28)" fg:x="920" fg:w="1"/><text x="95.6857%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.10%)</title><rect x="95.4357%" y="1045" width="0.1037%" height="15" fill="rgb(228,72,33)" fg:x="920" fg:w="1"/><text x="95.6857%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.10%)</title><rect x="95.4357%" y="1029" width="0.1037%" height="15" fill="rgb(205,214,31)" fg:x="920" fg:w="1"/><text x="95.6857%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.10%)</title><rect x="95.4357%" y="1013" width="0.1037%" height="15" fill="rgb(224,111,15)" fg:x="920" fg:w="1"/><text x="95.6857%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.10%)</title><rect x="95.4357%" y="997" width="0.1037%" height="15" fill="rgb(253,21,26)" fg:x="920" fg:w="1"/><text x="95.6857%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="95.6432%" y="901" width="0.1037%" height="15" fill="rgb(245,139,43)" fg:x="922" fg:w="1"/><text x="95.8932%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="95.6432%" y="885" width="0.1037%" height="15" fill="rgb(252,170,7)" fg:x="922" fg:w="1"/><text x="95.8932%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="95.6432%" y="869" width="0.1037%" height="15" fill="rgb(231,118,14)" fg:x="922" fg:w="1"/><text x="95.8932%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="95.6432%" y="853" width="0.1037%" height="15" fill="rgb(238,83,0)" fg:x="922" fg:w="1"/><text x="95.8932%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="95.6432%" y="837" width="0.1037%" height="15" fill="rgb(221,39,39)" fg:x="922" fg:w="1"/><text x="95.8932%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="95.6432%" y="821" width="0.1037%" height="15" fill="rgb(222,119,46)" fg:x="922" fg:w="1"/><text x="95.8932%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="95.6432%" y="805" width="0.1037%" height="15" fill="rgb(222,165,49)" fg:x="922" fg:w="1"/><text x="95.8932%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="95.6432%" y="789" width="0.1037%" height="15" fill="rgb(219,113,52)" fg:x="922" fg:w="1"/><text x="95.8932%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="95.6432%" y="773" width="0.1037%" height="15" fill="rgb(214,7,15)" fg:x="922" fg:w="1"/><text x="95.8932%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="95.6432%" y="757" width="0.1037%" height="15" fill="rgb(235,32,4)" fg:x="922" fg:w="1"/><text x="95.8932%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="95.6432%" y="741" width="0.1037%" height="15" fill="rgb(238,90,54)" fg:x="922" fg:w="1"/><text x="95.8932%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.83%)</title><rect x="95.6432%" y="981" width="0.8299%" height="15" fill="rgb(213,208,19)" fg:x="922" fg:w="8"/><text x="95.8932%" y="991.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.83%)</title><rect x="95.6432%" y="965" width="0.8299%" height="15" fill="rgb(233,156,4)" fg:x="922" fg:w="8"/><text x="95.8932%" y="975.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.83%)</title><rect x="95.6432%" y="949" width="0.8299%" height="15" fill="rgb(207,194,5)" fg:x="922" fg:w="8"/><text x="95.8932%" y="959.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.83%)</title><rect x="95.6432%" y="933" width="0.8299%" height="15" fill="rgb(206,111,30)" fg:x="922" fg:w="8"/><text x="95.8932%" y="943.50"></text></g><g><title>_int_realloc (8 samples, 0.83%)</title><rect x="95.6432%" y="917" width="0.8299%" height="15" fill="rgb(243,70,54)" fg:x="922" fg:w="8"/><text x="95.8932%" y="927.50"></text></g><g><title>_int_malloc (7 samples, 0.73%)</title><rect x="95.7469%" y="901" width="0.7261%" height="15" fill="rgb(242,28,8)" fg:x="923" fg:w="7"/><text x="95.9969%" y="911.50"></text></g><g><title>[unknown] (6 samples, 0.62%)</title><rect x="95.8506%" y="885" width="0.6224%" height="15" fill="rgb(219,106,18)" fg:x="924" fg:w="6"/><text x="96.1006%" y="895.50"></text></g><g><title>[unknown] (6 samples, 0.62%)</title><rect x="95.8506%" y="869" width="0.6224%" height="15" fill="rgb(244,222,10)" fg:x="924" fg:w="6"/><text x="96.1006%" y="879.50"></text></g><g><title>[unknown] (6 samples, 0.62%)</title><rect x="95.8506%" y="853" width="0.6224%" height="15" fill="rgb(236,179,52)" fg:x="924" fg:w="6"/><text x="96.1006%" y="863.50"></text></g><g><title>[unknown] (6 samples, 0.62%)</title><rect x="95.8506%" y="837" width="0.6224%" height="15" fill="rgb(213,23,39)" fg:x="924" fg:w="6"/><text x="96.1006%" y="847.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="95.9544%" y="821" width="0.5187%" height="15" fill="rgb(238,48,10)" fg:x="925" fg:w="5"/><text x="96.2044%" y="831.50"></text></g><g><title>[unknown] (4 samples, 0.41%)</title><rect x="96.0581%" y="805" width="0.4149%" height="15" fill="rgb(251,196,23)" fg:x="926" fg:w="4"/><text x="96.3081%" y="815.50"></text></g><g><title>[unknown] (4 samples, 0.41%)</title><rect x="96.0581%" y="789" width="0.4149%" height="15" fill="rgb(250,152,24)" fg:x="926" fg:w="4"/><text x="96.3081%" y="799.50"></text></g><g><title>[unknown] (4 samples, 0.41%)</title><rect x="96.0581%" y="773" width="0.4149%" height="15" fill="rgb(209,150,17)" fg:x="926" fg:w="4"/><text x="96.3081%" y="783.50"></text></g><g><title>[unknown] (4 samples, 0.41%)</title><rect x="96.0581%" y="757" width="0.4149%" height="15" fill="rgb(234,202,34)" fg:x="926" fg:w="4"/><text x="96.3081%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="96.2656%" y="741" width="0.2075%" height="15" fill="rgb(253,148,53)" fg:x="928" fg:w="2"/><text x="96.5156%" y="751.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="96.2656%" y="725" width="0.2075%" height="15" fill="rgb(218,129,16)" fg:x="928" fg:w="2"/><text x="96.5156%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 1.04%)</title><rect x="95.6432%" y="1045" width="1.0373%" height="15" fill="rgb(216,85,19)" fg:x="922" fg:w="10"/><text x="95.8932%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 1.04%)</title><rect x="95.6432%" y="1029" width="1.0373%" height="15" fill="rgb(235,228,7)" fg:x="922" fg:w="10"/><text x="95.8932%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 1.04%)</title><rect x="95.6432%" y="1013" width="1.0373%" height="15" fill="rgb(245,175,0)" fg:x="922" fg:w="10"/><text x="95.8932%" y="1023.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 1.04%)</title><rect x="95.6432%" y="997" width="1.0373%" height="15" fill="rgb(208,168,36)" fg:x="922" fg:w="10"/><text x="95.8932%" y="1007.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.21%)</title><rect x="96.4730%" y="981" width="0.2075%" height="15" fill="rgb(246,171,24)" fg:x="930" fg:w="2"/><text x="96.7230%" y="991.50"></text></g><g><title>tcache_get (2 samples, 0.21%)</title><rect x="96.4730%" y="965" width="0.2075%" height="15" fill="rgb(215,142,24)" fg:x="930" fg:w="2"/><text x="96.7230%" y="975.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.10%)</title><rect x="96.6805%" y="1013" width="0.1037%" height="15" fill="rgb(250,187,7)" fg:x="932" fg:w="1"/><text x="96.9305%" y="1023.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.10%)</title><rect x="96.7842%" y="997" width="0.1037%" height="15" fill="rgb(228,66,33)" fg:x="933" fg:w="1"/><text x="97.0342%" y="1007.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (1 samples, 0.10%)</title><rect x="96.8880%" y="997" width="0.1037%" height="15" fill="rgb(234,215,21)" fg:x="934" fg:w="1"/><text x="97.1380%" y="1007.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (1 samples, 0.10%)</title><rect x="96.8880%" y="981" width="0.1037%" height="15" fill="rgb(222,191,20)" fg:x="934" fg:w="1"/><text x="97.1380%" y="991.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::remaining_in_buf (1 samples, 0.10%)</title><rect x="96.8880%" y="965" width="0.1037%" height="15" fill="rgb(245,79,54)" fg:x="934" fg:w="1"/><text x="97.1380%" y="975.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::remaining_in_buf (1 samples, 0.10%)</title><rect x="96.8880%" y="949" width="0.1037%" height="15" fill="rgb(240,10,37)" fg:x="934" fg:w="1"/><text x="97.1380%" y="959.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_game_event::Key_t as protobuf::message::Message&gt;::merge_from (3 samples, 0.31%)</title><rect x="96.7842%" y="1013" width="0.3112%" height="15" fill="rgb(214,192,32)" fg:x="933" fg:w="3"/><text x="97.0342%" y="1023.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string (1 samples, 0.10%)</title><rect x="96.9917%" y="997" width="0.1037%" height="15" fill="rgb(209,36,54)" fg:x="935" fg:w="1"/><text x="97.2417%" y="1007.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string_into (1 samples, 0.10%)</title><rect x="96.9917%" y="981" width="0.1037%" height="15" fill="rgb(220,10,11)" fg:x="935" fg:w="1"/><text x="97.2417%" y="991.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (1 samples, 0.10%)</title><rect x="96.9917%" y="965" width="0.1037%" height="15" fill="rgb(221,106,17)" fg:x="935" fg:w="1"/><text x="97.2417%" y="975.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (1 samples, 0.10%)</title><rect x="96.9917%" y="949" width="0.1037%" height="15" fill="rgb(251,142,44)" fg:x="935" fg:w="1"/><text x="97.2417%" y="959.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (1 samples, 0.10%)</title><rect x="96.9917%" y="933" width="0.1037%" height="15" fill="rgb(238,13,15)" fg:x="935" fg:w="1"/><text x="97.2417%" y="943.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact (1 samples, 0.10%)</title><rect x="96.9917%" y="917" width="0.1037%" height="15" fill="rgb(208,107,27)" fg:x="935" fg:w="1"/><text x="97.2417%" y="927.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::read_bytes (1 samples, 0.10%)</title><rect x="96.9917%" y="901" width="0.1037%" height="15" fill="rgb(205,136,37)" fg:x="935" fg:w="1"/><text x="97.2417%" y="911.50"></text></g><g><title>protobuf::misc::maybe_uninit_write_slice (1 samples, 0.10%)</title><rect x="96.9917%" y="885" width="0.1037%" height="15" fill="rgb(250,205,27)" fg:x="935" fg:w="1"/><text x="97.2417%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.10%)</title><rect x="96.9917%" y="869" width="0.1037%" height="15" fill="rgb(210,80,43)" fg:x="935" fg:w="1"/><text x="97.2417%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="96.9917%" y="853" width="0.1037%" height="15" fill="rgb(247,160,36)" fg:x="935" fg:w="1"/><text x="97.2417%" y="863.50"></text></g><g><title>[libc.so.6] (1 samples, 0.10%)</title><rect x="96.9917%" y="837" width="0.1037%" height="15" fill="rgb(234,13,49)" fg:x="935" fg:w="1"/><text x="97.2417%" y="847.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::pop_limit (1 samples, 0.10%)</title><rect x="97.0954%" y="1013" width="0.1037%" height="15" fill="rgb(234,122,0)" fg:x="936" fg:w="1"/><text x="97.3454%" y="1023.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::push_limit (1 samples, 0.10%)</title><rect x="97.1992%" y="1013" width="0.1037%" height="15" fill="rgb(207,146,38)" fg:x="937" fg:w="1"/><text x="97.4492%" y="1023.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::push_limit (1 samples, 0.10%)</title><rect x="97.1992%" y="997" width="0.1037%" height="15" fill="rgb(207,177,25)" fg:x="937" fg:w="1"/><text x="97.4492%" y="1007.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::pos (1 samples, 0.10%)</title><rect x="97.1992%" y="981" width="0.1037%" height="15" fill="rgb(211,178,42)" fg:x="937" fg:w="1"/><text x="97.4492%" y="991.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_message (7 samples, 0.73%)</title><rect x="96.6805%" y="1045" width="0.7261%" height="15" fill="rgb(230,69,54)" fg:x="932" fg:w="7"/><text x="96.9305%" y="1055.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::merge_message (7 samples, 0.73%)</title><rect x="96.6805%" y="1029" width="0.7261%" height="15" fill="rgb(214,135,41)" fg:x="932" fg:w="7"/><text x="96.9305%" y="1039.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (1 samples, 0.10%)</title><rect x="97.3029%" y="1013" width="0.1037%" height="15" fill="rgb(237,67,25)" fg:x="938" fg:w="1"/><text x="97.5529%" y="1023.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::consume (1 samples, 0.10%)</title><rect x="97.3029%" y="997" width="0.1037%" height="15" fill="rgb(222,189,50)" fg:x="938" fg:w="1"/><text x="97.5529%" y="1007.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::consume (1 samples, 0.10%)</title><rect x="97.3029%" y="981" width="0.1037%" height="15" fill="rgb(245,148,34)" fg:x="938" fg:w="1"/><text x="97.5529%" y="991.50"></text></g><g><title>demoparser::parsing::create_output::create_output::&lt;impl demoparser::parsing::parser::Parser&gt;::compute_jobs_no_cache (849 samples, 88.07%)</title><rect x="9.5436%" y="1317" width="88.0705%" height="15" fill="rgb(222,29,6)" fg:x="92" fg:w="849"/><text x="9.7936%" y="1327.50">demoparser::parsing::create_output::create_output::&lt;impl demoparser::parsing::parser::Parser&gt;::compute_jobs_no_cache</text></g><g><title>demoparser::parsing::parser::Parser::parse_blueprints (849 samples, 88.07%)</title><rect x="9.5436%" y="1301" width="88.0705%" height="15" fill="rgb(221,189,43)" fg:x="92" fg:w="849"/><text x="9.7936%" y="1311.50">demoparser::parsing::parser::Parser::parse_blueprints</text></g><g><title>core::iter::traits::iterator::Iterator::collect (849 samples, 88.07%)</title><rect x="9.5436%" y="1285" width="88.0705%" height="15" fill="rgb(207,36,27)" fg:x="92" fg:w="849"/><text x="9.7936%" y="1295.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (849 samples, 88.07%)</title><rect x="9.5436%" y="1269" width="88.0705%" height="15" fill="rgb(217,90,24)" fg:x="92" fg:w="849"/><text x="9.7936%" y="1279.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (849 samples, 88.07%)</title><rect x="9.5436%" y="1253" width="88.0705%" height="15" fill="rgb(224,66,35)" fg:x="92" fg:w="849"/><text x="9.7936%" y="1263.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (849 samples, 88.07%)</title><rect x="9.5436%" y="1237" width="88.0705%" height="15" fill="rgb(221,13,50)" fg:x="92" fg:w="849"/><text x="9.7936%" y="1247.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (849 samples, 88.07%)</title><rect x="9.5436%" y="1221" width="88.0705%" height="15" fill="rgb(236,68,49)" fg:x="92" fg:w="849"/><text x="9.7936%" y="1231.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (849 samples, 88.07%)</title><rect x="9.5436%" y="1205" width="88.0705%" height="15" fill="rgb(229,146,28)" fg:x="92" fg:w="849"/><text x="9.7936%" y="1215.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (849 samples, 88.07%)</title><rect x="9.5436%" y="1189" width="88.0705%" height="15" fill="rgb(225,31,38)" fg:x="92" fg:w="849"/><text x="9.7936%" y="1199.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::traits::iterator::Iterator::fold (849 samples, 88.07%)</title><rect x="9.5436%" y="1173" width="88.0705%" height="15" fill="rgb(250,208,3)" fg:x="92" fg:w="849"/><text x="9.7936%" y="1183.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (849 samples, 88.07%)</title><rect x="9.5436%" y="1157" width="88.0705%" height="15" fill="rgb(246,54,23)" fg:x="92" fg:w="849"/><text x="9.7936%" y="1167.50">core::iter::adapters::map::map_fold::{{closure}}</text></g><g><title>demoparser::parsing::parser::Parser::parse_blueprints::{{closure}} (847 samples, 87.86%)</title><rect x="9.7510%" y="1141" width="87.8631%" height="15" fill="rgb(243,76,11)" fg:x="94" fg:w="847"/><text x="10.0010%" y="1151.50">demoparser::parsing::parser::Parser::parse_blueprints::{{closure}}</text></g><g><title>demoparser::parsing::parser::Parser::msg_handler (847 samples, 87.86%)</title><rect x="9.7510%" y="1125" width="87.8631%" height="15" fill="rgb(245,21,50)" fg:x="94" fg:w="847"/><text x="10.0010%" y="1135.50">demoparser::parsing::parser::Parser::msg_handler</text></g><g><title>demoparser::parsing::demo_parsing::game_events::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_game_events (22 samples, 2.28%)</title><rect x="95.3320%" y="1109" width="2.2822%" height="15" fill="rgb(228,9,43)" fg:x="919" fg:w="22"/><text x="95.5820%" y="1119.50">d..</text></g><g><title>protobuf::message::Message::parse_from_bytes (20 samples, 2.07%)</title><rect x="95.5394%" y="1093" width="2.0747%" height="15" fill="rgb(208,100,47)" fg:x="921" fg:w="20"/><text x="95.7894%" y="1103.50">p..</text></g><g><title>protobuf::message::Message::parse_from (19 samples, 1.97%)</title><rect x="95.6432%" y="1077" width="1.9710%" height="15" fill="rgb(232,26,8)" fg:x="922" fg:w="19"/><text x="95.8932%" y="1087.50">p..</text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_GameEvent as protobuf::message::Message&gt;::merge_from (19 samples, 1.97%)</title><rect x="95.6432%" y="1061" width="1.9710%" height="15" fill="rgb(216,166,38)" fg:x="922" fg:w="19"/><text x="95.8932%" y="1071.50">&lt;..</text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (2 samples, 0.21%)</title><rect x="97.4066%" y="1045" width="0.2075%" height="15" fill="rgb(251,202,51)" fg:x="939" fg:w="2"/><text x="97.6566%" y="1055.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (2 samples, 0.21%)</title><rect x="97.4066%" y="1029" width="0.2075%" height="15" fill="rgb(254,216,34)" fg:x="939" fg:w="2"/><text x="97.6566%" y="1039.50"></text></g><g><title>protobuf::varint::decode::decode_varint32 (2 samples, 0.21%)</title><rect x="97.4066%" y="1013" width="0.2075%" height="15" fill="rgb(251,32,27)" fg:x="939" fg:w="2"/><text x="97.6566%" y="1023.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (2 samples, 0.21%)</title><rect x="97.4066%" y="997" width="0.2075%" height="15" fill="rgb(208,127,28)" fg:x="939" fg:w="2"/><text x="97.6566%" y="1007.50"></text></g><g><title>&lt;u32 as protobuf::varint::decode::DecodeVarint&gt;::from_u64 (1 samples, 0.10%)</title><rect x="97.5104%" y="981" width="0.1037%" height="15" fill="rgb(224,137,22)" fg:x="940" fg:w="1"/><text x="97.7604%" y="991.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bytes::ByteReader::read_frame (13 samples, 1.35%)</title><rect x="97.6141%" y="1301" width="1.3485%" height="15" fill="rgb(254,70,32)" fg:x="941" fg:w="13"/><text x="97.8641%" y="1311.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bytes::ByteReader::read_byte (13 samples, 1.35%)</title><rect x="97.6141%" y="1285" width="1.3485%" height="15" fill="rgb(229,75,37)" fg:x="941" fg:w="13"/><text x="97.8641%" y="1295.50"></text></g><g><title>[unknown] (3 samples, 0.31%)</title><rect x="98.6515%" y="1269" width="0.3112%" height="15" fill="rgb(252,64,23)" fg:x="951" fg:w="3"/><text x="98.9015%" y="1279.50"></text></g><g><title>[unknown] (3 samples, 0.31%)</title><rect x="98.6515%" y="1253" width="0.3112%" height="15" fill="rgb(232,162,48)" fg:x="951" fg:w="3"/><text x="98.9015%" y="1263.50"></text></g><g><title>[unknown] (3 samples, 0.31%)</title><rect x="98.6515%" y="1237" width="0.3112%" height="15" fill="rgb(246,160,12)" fg:x="951" fg:w="3"/><text x="98.9015%" y="1247.50"></text></g><g><title>[unknown] (3 samples, 0.31%)</title><rect x="98.6515%" y="1221" width="0.3112%" height="15" fill="rgb(247,166,0)" fg:x="951" fg:w="3"/><text x="98.9015%" y="1231.50"></text></g><g><title>[unknown] (3 samples, 0.31%)</title><rect x="98.6515%" y="1205" width="0.3112%" height="15" fill="rgb(249,219,21)" fg:x="951" fg:w="3"/><text x="98.9015%" y="1215.50"></text></g><g><title>[unknown] (3 samples, 0.31%)</title><rect x="98.6515%" y="1189" width="0.3112%" height="15" fill="rgb(205,209,3)" fg:x="951" fg:w="3"/><text x="98.9015%" y="1199.50"></text></g><g><title>[unknown] (3 samples, 0.31%)</title><rect x="98.6515%" y="1173" width="0.3112%" height="15" fill="rgb(243,44,1)" fg:x="951" fg:w="3"/><text x="98.9015%" y="1183.50"></text></g><g><title>[unknown] (3 samples, 0.31%)</title><rect x="98.6515%" y="1157" width="0.3112%" height="15" fill="rgb(206,159,16)" fg:x="951" fg:w="3"/><text x="98.9015%" y="1167.50"></text></g><g><title>[unknown] (3 samples, 0.31%)</title><rect x="98.6515%" y="1141" width="0.3112%" height="15" fill="rgb(244,77,30)" fg:x="951" fg:w="3"/><text x="98.9015%" y="1151.50"></text></g><g><title>[unknown] (3 samples, 0.31%)</title><rect x="98.6515%" y="1125" width="0.3112%" height="15" fill="rgb(218,69,12)" fg:x="951" fg:w="3"/><text x="98.9015%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.8589%" y="1109" width="0.1037%" height="15" fill="rgb(212,87,7)" fg:x="953" fg:w="1"/><text x="99.1089%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.8589%" y="1093" width="0.1037%" height="15" fill="rgb(245,114,25)" fg:x="953" fg:w="1"/><text x="99.1089%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.8589%" y="1077" width="0.1037%" height="15" fill="rgb(210,61,42)" fg:x="953" fg:w="1"/><text x="99.1089%" y="1087.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_datatable (1 samples, 0.10%)</title><rect x="98.9627%" y="1285" width="0.1037%" height="15" fill="rgb(211,52,33)" fg:x="954" fg:w="1"/><text x="99.2127%" y="1295.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::flatten_dt (1 samples, 0.10%)</title><rect x="98.9627%" y="1269" width="0.1037%" height="15" fill="rgb(234,58,33)" fg:x="954" fg:w="1"/><text x="99.2127%" y="1279.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.10%)</title><rect x="98.9627%" y="1253" width="0.1037%" height="15" fill="rgb(220,115,36)" fg:x="954" fg:w="1"/><text x="99.2127%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.10%)</title><rect x="98.9627%" y="1237" width="0.1037%" height="15" fill="rgb(243,153,54)" fg:x="954" fg:w="1"/><text x="99.2127%" y="1247.50"></text></g><g><title>core::ptr::write (1 samples, 0.10%)</title><rect x="98.9627%" y="1221" width="0.1037%" height="15" fill="rgb(251,47,18)" fg:x="954" fg:w="1"/><text x="99.2127%" y="1231.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bytes::ByteReader::read_i32 (2 samples, 0.21%)</title><rect x="99.0664%" y="1269" width="0.2075%" height="15" fill="rgb(242,102,42)" fg:x="955" fg:w="2"/><text x="99.3164%" y="1279.50"></text></g><g><title>__libc_start_main_impl (907 samples, 94.09%)</title><rect x="5.2905%" y="1957" width="94.0871%" height="15" fill="rgb(234,31,38)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1967.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (907 samples, 94.09%)</title><rect x="5.2905%" y="1941" width="94.0871%" height="15" fill="rgb(221,117,51)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1951.50">__libc_start_call_main</text></g><g><title>main (907 samples, 94.09%)</title><rect x="5.2905%" y="1925" width="94.0871%" height="15" fill="rgb(212,20,18)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1935.50">main</text></g><g><title>std::rt::lang_start_internal (907 samples, 94.09%)</title><rect x="5.2905%" y="1909" width="94.0871%" height="15" fill="rgb(245,133,36)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1919.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (907 samples, 94.09%)</title><rect x="5.2905%" y="1893" width="94.0871%" height="15" fill="rgb(212,6,19)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1903.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (907 samples, 94.09%)</title><rect x="5.2905%" y="1877" width="94.0871%" height="15" fill="rgb(218,1,36)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1887.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (907 samples, 94.09%)</title><rect x="5.2905%" y="1861" width="94.0871%" height="15" fill="rgb(246,84,54)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1871.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (907 samples, 94.09%)</title><rect x="5.2905%" y="1845" width="94.0871%" height="15" fill="rgb(242,110,6)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1855.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (907 samples, 94.09%)</title><rect x="5.2905%" y="1829" width="94.0871%" height="15" fill="rgb(214,47,5)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1839.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (907 samples, 94.09%)</title><rect x="5.2905%" y="1813" width="94.0871%" height="15" fill="rgb(218,159,25)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1823.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (907 samples, 94.09%)</title><rect x="5.2905%" y="1797" width="94.0871%" height="15" fill="rgb(215,211,28)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1807.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (907 samples, 94.09%)</title><rect x="5.2905%" y="1781" width="94.0871%" height="15" fill="rgb(238,59,32)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1791.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (907 samples, 94.09%)</title><rect x="5.2905%" y="1765" width="94.0871%" height="15" fill="rgb(226,82,3)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1775.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (907 samples, 94.09%)</title><rect x="5.2905%" y="1749" width="94.0871%" height="15" fill="rgb(240,164,32)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1759.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (907 samples, 94.09%)</title><rect x="5.2905%" y="1733" width="94.0871%" height="15" fill="rgb(232,46,7)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1743.50">core::ops::function::FnOnce::call_once</text></g><g><title>demoparser::main (907 samples, 94.09%)</title><rect x="5.2905%" y="1717" width="94.0871%" height="15" fill="rgb(229,129,53)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1727.50">demoparser::main</text></g><g><title>rayon::iter::ParallelIterator::collect (907 samples, 94.09%)</title><rect x="5.2905%" y="1701" width="94.0871%" height="15" fill="rgb(234,188,29)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1711.50">rayon::iter::ParallelIterator::collect</text></g><g><title>rayon::iter::from_par_iter::&lt;impl rayon::iter::FromParallelIterator&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_par_iter (907 samples, 94.09%)</title><rect x="5.2905%" y="1685" width="94.0871%" height="15" fill="rgb(246,141,4)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1695.50">rayon::iter::from_par_iter::&lt;impl rayon::iter::FromParallelIterator&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_par_iter</text></g><g><title>rayon::iter::from_par_iter::collect_extended (907 samples, 94.09%)</title><rect x="5.2905%" y="1669" width="94.0871%" height="15" fill="rgb(229,23,39)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1679.50">rayon::iter::from_par_iter::collect_extended</text></g><g><title>rayon::iter::extend::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend (907 samples, 94.09%)</title><rect x="5.2905%" y="1653" width="94.0871%" height="15" fill="rgb(206,12,3)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1663.50">rayon::iter::extend::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend</text></g><g><title>rayon::iter::collect::special_extend (907 samples, 94.09%)</title><rect x="5.2905%" y="1637" width="94.0871%" height="15" fill="rgb(252,226,20)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1647.50">rayon::iter::collect::special_extend</text></g><g><title>rayon::iter::collect::collect_with_consumer (907 samples, 94.09%)</title><rect x="5.2905%" y="1621" width="94.0871%" height="15" fill="rgb(216,123,35)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1631.50">rayon::iter::collect::collect_with_consumer</text></g><g><title>rayon::iter::collect::special_extend::{{closure}} (907 samples, 94.09%)</title><rect x="5.2905%" y="1605" width="94.0871%" height="15" fill="rgb(212,68,40)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1615.50">rayon::iter::collect::special_extend::{{closure}}</text></g><g><title>&lt;rayon::iter::map::Map&lt;I,F&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (907 samples, 94.09%)</title><rect x="5.2905%" y="1589" width="94.0871%" height="15" fill="rgb(254,125,32)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1599.50">&lt;rayon::iter::map::Map&lt;I,F&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed</text></g><g><title>&lt;rayon::slice::Iter&lt;T&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (907 samples, 94.09%)</title><rect x="5.2905%" y="1573" width="94.0871%" height="15" fill="rgb(253,97,22)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1583.50">&lt;rayon::slice::Iter&lt;T&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed</text></g><g><title>rayon::iter::plumbing::bridge (907 samples, 94.09%)</title><rect x="5.2905%" y="1557" width="94.0871%" height="15" fill="rgb(241,101,14)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1567.50">rayon::iter::plumbing::bridge</text></g><g><title>&lt;rayon::slice::Iter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (907 samples, 94.09%)</title><rect x="5.2905%" y="1541" width="94.0871%" height="15" fill="rgb(238,103,29)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1551.50">&lt;rayon::slice::Iter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer</text></g><g><title>&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (907 samples, 94.09%)</title><rect x="5.2905%" y="1525" width="94.0871%" height="15" fill="rgb(233,195,47)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1535.50">&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (907 samples, 94.09%)</title><rect x="5.2905%" y="1509" width="94.0871%" height="15" fill="rgb(246,218,30)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1519.50">rayon::iter::plumbing::bridge_producer_consumer</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (907 samples, 94.09%)</title><rect x="5.2905%" y="1493" width="94.0871%" height="15" fill="rgb(219,145,47)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1503.50">rayon::iter::plumbing::bridge_producer_consumer::helper</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (907 samples, 94.09%)</title><rect x="5.2905%" y="1477" width="94.0871%" height="15" fill="rgb(243,12,26)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1487.50">rayon::iter::plumbing::Producer::fold_with</text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (907 samples, 94.09%)</title><rect x="5.2905%" y="1461" width="94.0871%" height="15" fill="rgb(214,87,16)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1471.50">&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (907 samples, 94.09%)</title><rect x="5.2905%" y="1445" width="94.0871%" height="15" fill="rgb(208,99,42)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1455.50">rayon::iter::plumbing::Folder::consume_iter</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (907 samples, 94.09%)</title><rect x="5.2905%" y="1429" width="94.0871%" height="15" fill="rgb(253,99,2)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1439.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next</text></g><g><title>core::option::Option&lt;T&gt;::map (907 samples, 94.09%)</title><rect x="5.2905%" y="1413" width="94.0871%" height="15" fill="rgb(220,168,23)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1423.50">core::option::Option&lt;T&gt;::map</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (907 samples, 94.09%)</title><rect x="5.2905%" y="1397" width="94.0871%" height="15" fill="rgb(242,38,24)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1407.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (907 samples, 94.09%)</title><rect x="5.2905%" y="1381" width="94.0871%" height="15" fill="rgb(225,182,9)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1391.50">core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut</text></g><g><title>demoparser::main::{{closure}} (907 samples, 94.09%)</title><rect x="5.2905%" y="1365" width="94.0871%" height="15" fill="rgb(243,178,37)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1375.50">demoparser::main::{{closure}}</text></g><g><title>demoparser::parse_demo (907 samples, 94.09%)</title><rect x="5.2905%" y="1349" width="94.0871%" height="15" fill="rgb(232,139,19)" fg:x="51" fg:w="907"/><text x="5.5405%" y="1359.50">demoparser::parse_demo</text></g><g><title>demoparser::parsing::parser::Parser::start_parsing (900 samples, 93.36%)</title><rect x="6.0166%" y="1333" width="93.3610%" height="15" fill="rgb(225,201,24)" fg:x="58" fg:w="900"/><text x="6.2666%" y="1343.50">demoparser::parsing::parser::Parser::start_parsing</text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (17 samples, 1.76%)</title><rect x="97.6141%" y="1317" width="1.7635%" height="15" fill="rgb(221,47,46)" fg:x="941" fg:w="17"/><text x="97.8641%" y="1327.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_cmd (4 samples, 0.41%)</title><rect x="98.9627%" y="1301" width="0.4149%" height="15" fill="rgb(249,23,13)" fg:x="954" fg:w="4"/><text x="99.2127%" y="1311.50"></text></g><g><title>demoparser::parsing::parser::Parser::messages_from_packet (3 samples, 0.31%)</title><rect x="99.0664%" y="1285" width="0.3112%" height="15" fill="rgb(219,9,5)" fg:x="955" fg:w="3"/><text x="99.3164%" y="1295.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bytes::ByteReader::read_varint (1 samples, 0.10%)</title><rect x="99.2739%" y="1269" width="0.1037%" height="15" fill="rgb(254,171,16)" fg:x="957" fg:w="1"/><text x="99.5239%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="99.2739%" y="1253" width="0.1037%" height="15" fill="rgb(230,171,20)" fg:x="957" fg:w="1"/><text x="99.5239%" y="1263.50"></text></g><g><title>demoparser (959 samples, 99.48%)</title><rect x="0.0000%" y="1989" width="99.4813%" height="15" fill="rgb(210,71,41)" fg:x="0" fg:w="959"/><text x="0.2500%" y="1999.50">demoparser</text></g><g><title>_start (908 samples, 94.19%)</title><rect x="5.2905%" y="1973" width="94.1909%" height="15" fill="rgb(206,173,20)" fg:x="51" fg:w="908"/><text x="5.5405%" y="1983.50">_start</text></g><g><title>_dl_start (1 samples, 0.10%)</title><rect x="99.3776%" y="1957" width="0.1037%" height="15" fill="rgb(233,88,34)" fg:x="958" fg:w="1"/><text x="99.6276%" y="1967.50"></text></g><g><title>_dl_start_final (1 samples, 0.10%)</title><rect x="99.3776%" y="1941" width="0.1037%" height="15" fill="rgb(223,209,46)" fg:x="958" fg:w="1"/><text x="99.6276%" y="1951.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.10%)</title><rect x="99.3776%" y="1925" width="0.1037%" height="15" fill="rgb(250,43,18)" fg:x="958" fg:w="1"/><text x="99.6276%" y="1935.50"></text></g><g><title>dl_main (1 samples, 0.10%)</title><rect x="99.3776%" y="1909" width="0.1037%" height="15" fill="rgb(208,13,10)" fg:x="958" fg:w="1"/><text x="99.6276%" y="1919.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.10%)</title><rect x="99.3776%" y="1893" width="0.1037%" height="15" fill="rgb(212,200,36)" fg:x="958" fg:w="1"/><text x="99.6276%" y="1903.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.10%)</title><rect x="99.3776%" y="1877" width="0.1037%" height="15" fill="rgb(225,90,30)" fg:x="958" fg:w="1"/><text x="99.6276%" y="1887.50"></text></g><g><title>elf_machine_rela (1 samples, 0.10%)</title><rect x="99.3776%" y="1861" width="0.1037%" height="15" fill="rgb(236,182,39)" fg:x="958" fg:w="1"/><text x="99.6276%" y="1871.50"></text></g><g><title>all (964 samples, 100%)</title><rect x="0.0000%" y="2005" width="100.0000%" height="15" fill="rgb(212,144,35)" fg:x="0" fg:w="964"/><text x="0.2500%" y="2015.50"></text></g><g><title>perf-exec (5 samples, 0.52%)</title><rect x="99.4813%" y="1989" width="0.5187%" height="15" fill="rgb(228,63,44)" fg:x="959" fg:w="5"/><text x="99.7313%" y="1999.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="99.4813%" y="1973" width="0.5187%" height="15" fill="rgb(228,109,6)" fg:x="959" fg:w="5"/><text x="99.7313%" y="1983.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="99.4813%" y="1957" width="0.5187%" height="15" fill="rgb(238,117,24)" fg:x="959" fg:w="5"/><text x="99.7313%" y="1967.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="99.4813%" y="1941" width="0.5187%" height="15" fill="rgb(242,26,26)" fg:x="959" fg:w="5"/><text x="99.7313%" y="1951.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="99.4813%" y="1925" width="0.5187%" height="15" fill="rgb(221,92,48)" fg:x="959" fg:w="5"/><text x="99.7313%" y="1935.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="99.4813%" y="1909" width="0.5187%" height="15" fill="rgb(209,209,32)" fg:x="959" fg:w="5"/><text x="99.7313%" y="1919.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="99.4813%" y="1893" width="0.5187%" height="15" fill="rgb(221,70,22)" fg:x="959" fg:w="5"/><text x="99.7313%" y="1903.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="99.4813%" y="1877" width="0.5187%" height="15" fill="rgb(248,145,5)" fg:x="959" fg:w="5"/><text x="99.7313%" y="1887.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="99.4813%" y="1861" width="0.5187%" height="15" fill="rgb(226,116,26)" fg:x="959" fg:w="5"/><text x="99.7313%" y="1871.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="99.4813%" y="1845" width="0.5187%" height="15" fill="rgb(244,5,17)" fg:x="959" fg:w="5"/><text x="99.7313%" y="1855.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="99.4813%" y="1829" width="0.5187%" height="15" fill="rgb(252,159,33)" fg:x="959" fg:w="5"/><text x="99.7313%" y="1839.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="99.4813%" y="1813" width="0.5187%" height="15" fill="rgb(206,71,0)" fg:x="959" fg:w="5"/><text x="99.7313%" y="1823.50"></text></g></svg></svg>