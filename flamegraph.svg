<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1222" onload="init(evt)" viewBox="0 0 1200 1222" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1222" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1205.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1205.00"> </text><svg id="frames" x="10" width="1180" total_samples="1093"><g><title>[[stack]] (1 samples, 0.09%)</title><rect x="0.0000%" y="1141" width="0.0915%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1151.50"></text></g><g><title>__lseek64 (1 samples, 0.09%)</title><rect x="0.0000%" y="1125" width="0.0915%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1135.50"></text></g><g><title>__entry_text_start (1 samples, 0.09%)</title><rect x="0.0000%" y="1109" width="0.0915%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1119.50"></text></g><g><title>rayon_core::latch::CoreLatch::probe (1 samples, 0.09%)</title><rect x="0.1830%" y="869" width="0.0915%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="1"/><text x="0.4330%" y="879.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.09%)</title><rect x="0.2745%" y="837" width="0.0915%" height="15" fill="rgb(208,68,35)" fg:x="3" fg:w="1"/><text x="0.5245%" y="847.50"></text></g><g><title>__x64_sys_futex (6 samples, 0.55%)</title><rect x="0.3660%" y="709" width="0.5489%" height="15" fill="rgb(232,128,0)" fg:x="4" fg:w="6"/><text x="0.6160%" y="719.50"></text></g><g><title>do_futex (6 samples, 0.55%)</title><rect x="0.3660%" y="693" width="0.5489%" height="15" fill="rgb(207,160,47)" fg:x="4" fg:w="6"/><text x="0.6160%" y="703.50"></text></g><g><title>futex_wait (6 samples, 0.55%)</title><rect x="0.3660%" y="677" width="0.5489%" height="15" fill="rgb(228,23,34)" fg:x="4" fg:w="6"/><text x="0.6160%" y="687.50"></text></g><g><title>futex_wait_queue_me (6 samples, 0.55%)</title><rect x="0.3660%" y="661" width="0.5489%" height="15" fill="rgb(218,30,26)" fg:x="4" fg:w="6"/><text x="0.6160%" y="671.50"></text></g><g><title>schedule (6 samples, 0.55%)</title><rect x="0.3660%" y="645" width="0.5489%" height="15" fill="rgb(220,122,19)" fg:x="4" fg:w="6"/><text x="0.6160%" y="655.50"></text></g><g><title>__schedule (6 samples, 0.55%)</title><rect x="0.3660%" y="629" width="0.5489%" height="15" fill="rgb(250,228,42)" fg:x="4" fg:w="6"/><text x="0.6160%" y="639.50"></text></g><g><title>finish_task_switch.isra.0 (6 samples, 0.55%)</title><rect x="0.3660%" y="613" width="0.5489%" height="15" fill="rgb(240,193,28)" fg:x="4" fg:w="6"/><text x="0.6160%" y="623.50"></text></g><g><title>put_task_stack (6 samples, 0.55%)</title><rect x="0.3660%" y="597" width="0.5489%" height="15" fill="rgb(216,20,37)" fg:x="4" fg:w="6"/><text x="0.6160%" y="607.50"></text></g><g><title>account_kernel_stack.isra.0 (6 samples, 0.55%)</title><rect x="0.3660%" y="581" width="0.5489%" height="15" fill="rgb(206,188,39)" fg:x="4" fg:w="6"/><text x="0.6160%" y="591.50"></text></g><g><title>__mod_lruvec_page_state (6 samples, 0.55%)</title><rect x="0.3660%" y="565" width="0.5489%" height="15" fill="rgb(217,207,13)" fg:x="4" fg:w="6"/><text x="0.6160%" y="575.50"></text></g><g><title>_raw_spin_lock_irq (6 samples, 0.55%)</title><rect x="1.4639%" y="629" width="0.5489%" height="15" fill="rgb(231,73,38)" fg:x="16" fg:w="6"/><text x="1.7139%" y="639.50"></text></g><g><title>native_queued_spin_lock_slowpath (6 samples, 0.55%)</title><rect x="1.4639%" y="613" width="0.5489%" height="15" fill="rgb(225,20,46)" fg:x="16" fg:w="6"/><text x="1.7139%" y="623.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (6 samples, 0.55%)</title><rect x="1.4639%" y="597" width="0.5489%" height="15" fill="rgb(210,31,41)" fg:x="16" fg:w="6"/><text x="1.7139%" y="607.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 2.38%)</title><rect x="0.1830%" y="1029" width="2.3788%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="26"/><text x="0.4330%" y="1039.50">st..</text></g><g><title>std::panicking::try (26 samples, 2.38%)</title><rect x="0.1830%" y="1013" width="2.3788%" height="15" fill="rgb(226,26,5)" fg:x="2" fg:w="26"/><text x="0.4330%" y="1023.50">st..</text></g><g><title>std::panicking::try::do_call (26 samples, 2.38%)</title><rect x="0.1830%" y="997" width="2.3788%" height="15" fill="rgb(249,33,26)" fg:x="2" fg:w="26"/><text x="0.4330%" y="1007.50">st..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 2.38%)</title><rect x="0.1830%" y="981" width="2.3788%" height="15" fill="rgb(235,183,28)" fg:x="2" fg:w="26"/><text x="0.4330%" y="991.50">&lt;c..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (26 samples, 2.38%)</title><rect x="0.1830%" y="965" width="2.3788%" height="15" fill="rgb(221,5,38)" fg:x="2" fg:w="26"/><text x="0.4330%" y="975.50">st..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (26 samples, 2.38%)</title><rect x="0.1830%" y="949" width="2.3788%" height="15" fill="rgb(247,18,42)" fg:x="2" fg:w="26"/><text x="0.4330%" y="959.50">st..</text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (26 samples, 2.38%)</title><rect x="0.1830%" y="933" width="2.3788%" height="15" fill="rgb(241,131,45)" fg:x="2" fg:w="26"/><text x="0.4330%" y="943.50">&lt;r..</text></g><g><title>rayon_core::registry::ThreadBuilder::run (26 samples, 2.38%)</title><rect x="0.1830%" y="917" width="2.3788%" height="15" fill="rgb(249,31,29)" fg:x="2" fg:w="26"/><text x="0.4330%" y="927.50">ra..</text></g><g><title>rayon_core::registry::main_loop (26 samples, 2.38%)</title><rect x="0.1830%" y="901" width="2.3788%" height="15" fill="rgb(225,111,53)" fg:x="2" fg:w="26"/><text x="0.4330%" y="911.50">ra..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (26 samples, 2.38%)</title><rect x="0.1830%" y="885" width="2.3788%" height="15" fill="rgb(238,160,17)" fg:x="2" fg:w="26"/><text x="0.4330%" y="895.50">ra..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (25 samples, 2.29%)</title><rect x="0.2745%" y="869" width="2.2873%" height="15" fill="rgb(214,148,48)" fg:x="3" fg:w="25"/><text x="0.5245%" y="879.50">r..</text></g><g><title>rayon_core::sleep::Sleep::no_work_found (25 samples, 2.29%)</title><rect x="0.2745%" y="853" width="2.2873%" height="15" fill="rgb(232,36,49)" fg:x="3" fg:w="25"/><text x="0.5245%" y="863.50">r..</text></g><g><title>rayon_core::sleep::Sleep::sleep (24 samples, 2.20%)</title><rect x="0.3660%" y="837" width="2.1958%" height="15" fill="rgb(209,103,24)" fg:x="4" fg:w="24"/><text x="0.6160%" y="847.50">r..</text></g><g><title>std::sync::condvar::Condvar::wait (24 samples, 2.20%)</title><rect x="0.3660%" y="821" width="2.1958%" height="15" fill="rgb(229,88,8)" fg:x="4" fg:w="24"/><text x="0.6160%" y="831.50">s..</text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (24 samples, 2.20%)</title><rect x="0.3660%" y="805" width="2.1958%" height="15" fill="rgb(213,181,19)" fg:x="4" fg:w="24"/><text x="0.6160%" y="815.50">s..</text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (24 samples, 2.20%)</title><rect x="0.3660%" y="789" width="2.1958%" height="15" fill="rgb(254,191,54)" fg:x="4" fg:w="24"/><text x="0.6160%" y="799.50">s..</text></g><g><title>std::sys::unix::futex::futex_wait (24 samples, 2.20%)</title><rect x="0.3660%" y="773" width="2.1958%" height="15" fill="rgb(241,83,37)" fg:x="4" fg:w="24"/><text x="0.6160%" y="783.50">s..</text></g><g><title>syscall (24 samples, 2.20%)</title><rect x="0.3660%" y="757" width="2.1958%" height="15" fill="rgb(233,36,39)" fg:x="4" fg:w="24"/><text x="0.6160%" y="767.50">s..</text></g><g><title>entry_SYSCALL_64_after_hwframe (24 samples, 2.20%)</title><rect x="0.3660%" y="741" width="2.1958%" height="15" fill="rgb(226,3,54)" fg:x="4" fg:w="24"/><text x="0.6160%" y="751.50">e..</text></g><g><title>do_syscall_64 (24 samples, 2.20%)</title><rect x="0.3660%" y="725" width="2.1958%" height="15" fill="rgb(245,192,40)" fg:x="4" fg:w="24"/><text x="0.6160%" y="735.50">d..</text></g><g><title>syscall_exit_to_user_mode (18 samples, 1.65%)</title><rect x="0.9149%" y="709" width="1.6468%" height="15" fill="rgb(238,167,29)" fg:x="10" fg:w="18"/><text x="1.1649%" y="719.50"></text></g><g><title>exit_to_user_mode_prepare (18 samples, 1.65%)</title><rect x="0.9149%" y="693" width="1.6468%" height="15" fill="rgb(232,182,51)" fg:x="10" fg:w="18"/><text x="1.1649%" y="703.50"></text></g><g><title>exit_to_user_mode_loop (18 samples, 1.65%)</title><rect x="0.9149%" y="677" width="1.6468%" height="15" fill="rgb(231,60,39)" fg:x="10" fg:w="18"/><text x="1.1649%" y="687.50"></text></g><g><title>arch_do_signal_or_restart (18 samples, 1.65%)</title><rect x="0.9149%" y="661" width="1.6468%" height="15" fill="rgb(208,69,12)" fg:x="10" fg:w="18"/><text x="1.1649%" y="671.50"></text></g><g><title>get_signal (18 samples, 1.65%)</title><rect x="0.9149%" y="645" width="1.6468%" height="15" fill="rgb(235,93,37)" fg:x="10" fg:w="18"/><text x="1.1649%" y="655.50"></text></g><g><title>do_group_exit (6 samples, 0.55%)</title><rect x="2.0128%" y="629" width="0.5489%" height="15" fill="rgb(213,116,39)" fg:x="22" fg:w="6"/><text x="2.2628%" y="639.50"></text></g><g><title>do_exit (6 samples, 0.55%)</title><rect x="2.0128%" y="613" width="0.5489%" height="15" fill="rgb(222,207,29)" fg:x="22" fg:w="6"/><text x="2.2628%" y="623.50"></text></g><g><title>sync_mm_rss (1 samples, 0.09%)</title><rect x="2.4703%" y="597" width="0.0915%" height="15" fill="rgb(206,96,30)" fg:x="27" fg:w="1"/><text x="2.7203%" y="607.50"></text></g><g><title>__entry_text_start (1 samples, 0.09%)</title><rect x="2.5618%" y="837" width="0.0915%" height="15" fill="rgb(218,138,4)" fg:x="28" fg:w="1"/><text x="2.8118%" y="847.50"></text></g><g><title>__GI___mmap64 (2 samples, 0.18%)</title><rect x="2.5618%" y="869" width="0.1830%" height="15" fill="rgb(250,191,14)" fg:x="28" fg:w="2"/><text x="2.8118%" y="879.50"></text></g><g><title>__GI___mmap64 (2 samples, 0.18%)</title><rect x="2.5618%" y="853" width="0.1830%" height="15" fill="rgb(239,60,40)" fg:x="28" fg:w="2"/><text x="2.8118%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="2.6532%" y="837" width="0.0915%" height="15" fill="rgb(206,27,48)" fg:x="29" fg:w="1"/><text x="2.9032%" y="847.50"></text></g><g><title>do_syscall_64 (1 samples, 0.09%)</title><rect x="2.6532%" y="821" width="0.0915%" height="15" fill="rgb(225,35,8)" fg:x="29" fg:w="1"/><text x="2.9032%" y="831.50"></text></g><g><title>__x64_sys_mmap (1 samples, 0.09%)</title><rect x="2.6532%" y="805" width="0.0915%" height="15" fill="rgb(250,213,24)" fg:x="29" fg:w="1"/><text x="2.9032%" y="815.50"></text></g><g><title>ksys_mmap_pgoff (1 samples, 0.09%)</title><rect x="2.6532%" y="789" width="0.0915%" height="15" fill="rgb(247,123,22)" fg:x="29" fg:w="1"/><text x="2.9032%" y="799.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.09%)</title><rect x="2.6532%" y="773" width="0.0915%" height="15" fill="rgb(231,138,38)" fg:x="29" fg:w="1"/><text x="2.9032%" y="783.50"></text></g><g><title>down_write_killable (1 samples, 0.09%)</title><rect x="2.6532%" y="757" width="0.0915%" height="15" fill="rgb(231,145,46)" fg:x="29" fg:w="1"/><text x="2.9032%" y="767.50"></text></g><g><title>rwsem_down_write_slowpath (1 samples, 0.09%)</title><rect x="2.6532%" y="741" width="0.0915%" height="15" fill="rgb(251,118,11)" fg:x="29" fg:w="1"/><text x="2.9032%" y="751.50"></text></g><g><title>rwsem_optimistic_spin (1 samples, 0.09%)</title><rect x="2.6532%" y="725" width="0.0915%" height="15" fill="rgb(217,147,25)" fg:x="29" fg:w="1"/><text x="2.9032%" y="735.50"></text></g><g><title>osq_lock (1 samples, 0.09%)</title><rect x="2.6532%" y="709" width="0.0915%" height="15" fill="rgb(247,81,37)" fg:x="29" fg:w="1"/><text x="2.9032%" y="719.50"></text></g><g><title>__GI___mprotect (1 samples, 0.09%)</title><rect x="2.7447%" y="869" width="0.0915%" height="15" fill="rgb(209,12,38)" fg:x="30" fg:w="1"/><text x="2.9947%" y="879.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="2.7447%" y="853" width="0.0915%" height="15" fill="rgb(227,1,9)" fg:x="30" fg:w="1"/><text x="2.9947%" y="863.50"></text></g><g><title>do_syscall_64 (1 samples, 0.09%)</title><rect x="2.7447%" y="837" width="0.0915%" height="15" fill="rgb(248,47,43)" fg:x="30" fg:w="1"/><text x="2.9947%" y="847.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.09%)</title><rect x="2.7447%" y="821" width="0.0915%" height="15" fill="rgb(221,10,30)" fg:x="30" fg:w="1"/><text x="2.9947%" y="831.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.09%)</title><rect x="2.7447%" y="805" width="0.0915%" height="15" fill="rgb(210,229,1)" fg:x="30" fg:w="1"/><text x="2.9947%" y="815.50"></text></g><g><title>vmacache_find (1 samples, 0.09%)</title><rect x="2.7447%" y="789" width="0.0915%" height="15" fill="rgb(222,148,37)" fg:x="30" fg:w="1"/><text x="2.9947%" y="799.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (30 samples, 2.74%)</title><rect x="0.1830%" y="1093" width="2.7447%" height="15" fill="rgb(234,67,33)" fg:x="2" fg:w="30"/><text x="0.4330%" y="1103.50">&lt;a..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (30 samples, 2.74%)</title><rect x="0.1830%" y="1077" width="2.7447%" height="15" fill="rgb(247,98,35)" fg:x="2" fg:w="30"/><text x="0.4330%" y="1087.50">&lt;a..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (30 samples, 2.74%)</title><rect x="0.1830%" y="1061" width="2.7447%" height="15" fill="rgb(247,138,52)" fg:x="2" fg:w="30"/><text x="0.4330%" y="1071.50">co..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (30 samples, 2.74%)</title><rect x="0.1830%" y="1045" width="2.7447%" height="15" fill="rgb(213,79,30)" fg:x="2" fg:w="30"/><text x="0.4330%" y="1055.50">st..</text></g><g><title>std::sys::unix::thread::guard::current (4 samples, 0.37%)</title><rect x="2.5618%" y="1029" width="0.3660%" height="15" fill="rgb(246,177,23)" fg:x="28" fg:w="4"/><text x="2.8118%" y="1039.50"></text></g><g><title>__pthread_getattr_np (4 samples, 0.37%)</title><rect x="2.5618%" y="1013" width="0.3660%" height="15" fill="rgb(230,62,27)" fg:x="28" fg:w="4"/><text x="2.8118%" y="1023.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.37%)</title><rect x="2.5618%" y="997" width="0.3660%" height="15" fill="rgb(216,154,8)" fg:x="28" fg:w="4"/><text x="2.8118%" y="1007.50"></text></g><g><title>tcache_init (4 samples, 0.37%)</title><rect x="2.5618%" y="981" width="0.3660%" height="15" fill="rgb(244,35,45)" fg:x="28" fg:w="4"/><text x="2.8118%" y="991.50"></text></g><g><title>tcache_init (4 samples, 0.37%)</title><rect x="2.5618%" y="965" width="0.3660%" height="15" fill="rgb(251,115,12)" fg:x="28" fg:w="4"/><text x="2.8118%" y="975.50"></text></g><g><title>arena_get2 (4 samples, 0.37%)</title><rect x="2.5618%" y="949" width="0.3660%" height="15" fill="rgb(240,54,50)" fg:x="28" fg:w="4"/><text x="2.8118%" y="959.50"></text></g><g><title>arena_get2 (4 samples, 0.37%)</title><rect x="2.5618%" y="933" width="0.3660%" height="15" fill="rgb(233,84,52)" fg:x="28" fg:w="4"/><text x="2.8118%" y="943.50"></text></g><g><title>_int_new_arena (4 samples, 0.37%)</title><rect x="2.5618%" y="917" width="0.3660%" height="15" fill="rgb(207,117,47)" fg:x="28" fg:w="4"/><text x="2.8118%" y="927.50"></text></g><g><title>new_heap (4 samples, 0.37%)</title><rect x="2.5618%" y="901" width="0.3660%" height="15" fill="rgb(249,43,39)" fg:x="28" fg:w="4"/><text x="2.8118%" y="911.50"></text></g><g><title>alloc_new_heap (4 samples, 0.37%)</title><rect x="2.5618%" y="885" width="0.3660%" height="15" fill="rgb(209,38,44)" fg:x="28" fg:w="4"/><text x="2.8118%" y="895.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.09%)</title><rect x="2.8362%" y="869" width="0.0915%" height="15" fill="rgb(236,212,23)" fg:x="31" fg:w="1"/><text x="3.0862%" y="879.50"></text></g><g><title>exc_page_fault (1 samples, 0.09%)</title><rect x="2.8362%" y="853" width="0.0915%" height="15" fill="rgb(242,79,21)" fg:x="31" fg:w="1"/><text x="3.0862%" y="863.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.09%)</title><rect x="2.8362%" y="837" width="0.0915%" height="15" fill="rgb(211,96,35)" fg:x="31" fg:w="1"/><text x="3.0862%" y="847.50"></text></g><g><title>handle_mm_fault (1 samples, 0.09%)</title><rect x="2.8362%" y="821" width="0.0915%" height="15" fill="rgb(253,215,40)" fg:x="31" fg:w="1"/><text x="3.0862%" y="831.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="2.8362%" y="805" width="0.0915%" height="15" fill="rgb(211,81,21)" fg:x="31" fg:w="1"/><text x="3.0862%" y="815.50"></text></g><g><title>handle_pte_fault (1 samples, 0.09%)</title><rect x="2.8362%" y="789" width="0.0915%" height="15" fill="rgb(208,190,38)" fg:x="31" fg:w="1"/><text x="3.0862%" y="799.50"></text></g><g><title>do_anonymous_page (1 samples, 0.09%)</title><rect x="2.8362%" y="773" width="0.0915%" height="15" fill="rgb(235,213,38)" fg:x="31" fg:w="1"/><text x="3.0862%" y="783.50"></text></g><g><title>__pte_alloc (1 samples, 0.09%)</title><rect x="2.8362%" y="757" width="0.0915%" height="15" fill="rgb(237,122,38)" fg:x="31" fg:w="1"/><text x="3.0862%" y="767.50"></text></g><g><title>pte_alloc_one (1 samples, 0.09%)</title><rect x="2.8362%" y="741" width="0.0915%" height="15" fill="rgb(244,218,35)" fg:x="31" fg:w="1"/><text x="3.0862%" y="751.50"></text></g><g><title>alloc_pages (1 samples, 0.09%)</title><rect x="2.8362%" y="725" width="0.0915%" height="15" fill="rgb(240,68,47)" fg:x="31" fg:w="1"/><text x="3.0862%" y="735.50"></text></g><g><title>__alloc_pages (1 samples, 0.09%)</title><rect x="2.8362%" y="709" width="0.0915%" height="15" fill="rgb(210,16,53)" fg:x="31" fg:w="1"/><text x="3.0862%" y="719.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.09%)</title><rect x="2.8362%" y="693" width="0.0915%" height="15" fill="rgb(235,124,12)" fg:x="31" fg:w="1"/><text x="3.0862%" y="703.50"></text></g><g><title>clear_page_erms (1 samples, 0.09%)</title><rect x="2.8362%" y="677" width="0.0915%" height="15" fill="rgb(224,169,11)" fg:x="31" fg:w="1"/><text x="3.0862%" y="687.50"></text></g><g><title>up_write (1 samples, 0.09%)</title><rect x="2.9277%" y="933" width="0.0915%" height="15" fill="rgb(250,166,2)" fg:x="32" fg:w="1"/><text x="3.1777%" y="943.50"></text></g><g><title>do_mmap (2 samples, 0.18%)</title><rect x="3.0192%" y="917" width="0.1830%" height="15" fill="rgb(242,216,29)" fg:x="33" fg:w="2"/><text x="3.2692%" y="927.50"></text></g><g><title>mmap_region (2 samples, 0.18%)</title><rect x="3.0192%" y="901" width="0.1830%" height="15" fill="rgb(230,116,27)" fg:x="33" fg:w="2"/><text x="3.2692%" y="911.50"></text></g><g><title>perf_event_mmap (2 samples, 0.18%)</title><rect x="3.0192%" y="885" width="0.1830%" height="15" fill="rgb(228,99,48)" fg:x="33" fg:w="2"/><text x="3.2692%" y="895.50"></text></g><g><title>perf_event_mmap_event (2 samples, 0.18%)</title><rect x="3.0192%" y="869" width="0.1830%" height="15" fill="rgb(253,11,6)" fg:x="33" fg:w="2"/><text x="3.2692%" y="879.50"></text></g><g><title>perf_iterate_sb (2 samples, 0.18%)</title><rect x="3.0192%" y="853" width="0.1830%" height="15" fill="rgb(247,143,39)" fg:x="33" fg:w="2"/><text x="3.2692%" y="863.50"></text></g><g><title>perf_iterate_ctx (2 samples, 0.18%)</title><rect x="3.0192%" y="837" width="0.1830%" height="15" fill="rgb(236,97,10)" fg:x="33" fg:w="2"/><text x="3.2692%" y="847.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.09%)</title><rect x="3.1107%" y="821" width="0.0915%" height="15" fill="rgb(233,208,19)" fg:x="34" fg:w="1"/><text x="3.3607%" y="831.50"></text></g><g><title>__perf_event_header__init_id (1 samples, 0.09%)</title><rect x="3.1107%" y="805" width="0.0915%" height="15" fill="rgb(216,164,2)" fg:x="34" fg:w="1"/><text x="3.3607%" y="815.50"></text></g><g><title>__clone3 (35 samples, 3.20%)</title><rect x="0.0915%" y="1141" width="3.2022%" height="15" fill="rgb(220,129,5)" fg:x="1" fg:w="35"/><text x="0.3415%" y="1151.50">__c..</text></g><g><title>start_thread (35 samples, 3.20%)</title><rect x="0.0915%" y="1125" width="3.2022%" height="15" fill="rgb(242,17,10)" fg:x="1" fg:w="35"/><text x="0.3415%" y="1135.50">sta..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (34 samples, 3.11%)</title><rect x="0.1830%" y="1109" width="3.1107%" height="15" fill="rgb(242,107,0)" fg:x="2" fg:w="34"/><text x="0.4330%" y="1119.50">std..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (4 samples, 0.37%)</title><rect x="2.9277%" y="1093" width="0.3660%" height="15" fill="rgb(251,28,31)" fg:x="32" fg:w="4"/><text x="3.1777%" y="1103.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (4 samples, 0.37%)</title><rect x="2.9277%" y="1077" width="0.3660%" height="15" fill="rgb(233,223,10)" fg:x="32" fg:w="4"/><text x="3.1777%" y="1087.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (4 samples, 0.37%)</title><rect x="2.9277%" y="1061" width="0.3660%" height="15" fill="rgb(215,21,27)" fg:x="32" fg:w="4"/><text x="3.1777%" y="1071.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (4 samples, 0.37%)</title><rect x="2.9277%" y="1045" width="0.3660%" height="15" fill="rgb(232,23,21)" fg:x="32" fg:w="4"/><text x="3.1777%" y="1055.50"></text></g><g><title>__GI___mmap64 (4 samples, 0.37%)</title><rect x="2.9277%" y="1029" width="0.3660%" height="15" fill="rgb(244,5,23)" fg:x="32" fg:w="4"/><text x="3.1777%" y="1039.50"></text></g><g><title>__GI___mmap64 (4 samples, 0.37%)</title><rect x="2.9277%" y="1013" width="0.3660%" height="15" fill="rgb(226,81,46)" fg:x="32" fg:w="4"/><text x="3.1777%" y="1023.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.37%)</title><rect x="2.9277%" y="997" width="0.3660%" height="15" fill="rgb(247,70,30)" fg:x="32" fg:w="4"/><text x="3.1777%" y="1007.50"></text></g><g><title>do_syscall_64 (4 samples, 0.37%)</title><rect x="2.9277%" y="981" width="0.3660%" height="15" fill="rgb(212,68,19)" fg:x="32" fg:w="4"/><text x="3.1777%" y="991.50"></text></g><g><title>__x64_sys_mmap (4 samples, 0.37%)</title><rect x="2.9277%" y="965" width="0.3660%" height="15" fill="rgb(240,187,13)" fg:x="32" fg:w="4"/><text x="3.1777%" y="975.50"></text></g><g><title>ksys_mmap_pgoff (4 samples, 0.37%)</title><rect x="2.9277%" y="949" width="0.3660%" height="15" fill="rgb(223,113,26)" fg:x="32" fg:w="4"/><text x="3.1777%" y="959.50"></text></g><g><title>vm_mmap_pgoff (3 samples, 0.27%)</title><rect x="3.0192%" y="933" width="0.2745%" height="15" fill="rgb(206,192,2)" fg:x="33" fg:w="3"/><text x="3.2692%" y="943.50"></text></g><g><title>down_write_killable (1 samples, 0.09%)</title><rect x="3.2022%" y="917" width="0.0915%" height="15" fill="rgb(241,108,4)" fg:x="35" fg:w="1"/><text x="3.4522%" y="927.50"></text></g><g><title>rwsem_down_write_slowpath (1 samples, 0.09%)</title><rect x="3.2022%" y="901" width="0.0915%" height="15" fill="rgb(247,173,49)" fg:x="35" fg:w="1"/><text x="3.4522%" y="911.50"></text></g><g><title>rwsem_optimistic_spin (1 samples, 0.09%)</title><rect x="3.2022%" y="885" width="0.0915%" height="15" fill="rgb(224,114,35)" fg:x="35" fg:w="1"/><text x="3.4522%" y="895.50"></text></g><g><title>__irqentry_text_end (11 samples, 1.01%)</title><rect x="3.2937%" y="1141" width="1.0064%" height="15" fill="rgb(245,159,27)" fg:x="36" fg:w="11"/><text x="3.5437%" y="1151.50"></text></g><g><title>&lt;std::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="4.3001%" y="869" width="0.0915%" height="15" fill="rgb(245,172,44)" fg:x="47" fg:w="1"/><text x="4.5501%" y="879.50"></text></g><g><title>&lt;std::sys::unix::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="4.3001%" y="853" width="0.0915%" height="15" fill="rgb(236,23,11)" fg:x="47" fg:w="1"/><text x="4.5501%" y="863.50"></text></g><g><title>__GI___readdir64 (1 samples, 0.09%)</title><rect x="4.3001%" y="837" width="0.0915%" height="15" fill="rgb(205,117,38)" fg:x="47" fg:w="1"/><text x="4.5501%" y="847.50"></text></g><g><title>__GI___getdents64 (1 samples, 0.09%)</title><rect x="4.3001%" y="821" width="0.0915%" height="15" fill="rgb(237,72,25)" fg:x="47" fg:w="1"/><text x="4.5501%" y="831.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="4.3001%" y="805" width="0.0915%" height="15" fill="rgb(244,70,9)" fg:x="47" fg:w="1"/><text x="4.5501%" y="815.50"></text></g><g><title>do_syscall_64 (1 samples, 0.09%)</title><rect x="4.3001%" y="789" width="0.0915%" height="15" fill="rgb(217,125,39)" fg:x="47" fg:w="1"/><text x="4.5501%" y="799.50"></text></g><g><title>__x64_sys_getdents64 (1 samples, 0.09%)</title><rect x="4.3001%" y="773" width="0.0915%" height="15" fill="rgb(235,36,10)" fg:x="47" fg:w="1"/><text x="4.5501%" y="783.50"></text></g><g><title>iterate_dir (1 samples, 0.09%)</title><rect x="4.3001%" y="757" width="0.0915%" height="15" fill="rgb(251,123,47)" fg:x="47" fg:w="1"/><text x="4.5501%" y="767.50"></text></g><g><title>ext4_readdir (1 samples, 0.09%)</title><rect x="4.3001%" y="741" width="0.0915%" height="15" fill="rgb(221,13,13)" fg:x="47" fg:w="1"/><text x="4.5501%" y="751.50"></text></g><g><title>ext4_dx_readdir (1 samples, 0.09%)</title><rect x="4.3001%" y="725" width="0.0915%" height="15" fill="rgb(238,131,9)" fg:x="47" fg:w="1"/><text x="4.5501%" y="735.50"></text></g><g><title>ext4_htree_fill_tree (1 samples, 0.09%)</title><rect x="4.3001%" y="709" width="0.0915%" height="15" fill="rgb(211,50,8)" fg:x="47" fg:w="1"/><text x="4.5501%" y="719.50"></text></g><g><title>__ext4_check_dir_entry (1 samples, 0.09%)</title><rect x="4.3001%" y="693" width="0.0915%" height="15" fill="rgb(245,182,24)" fg:x="47" fg:w="1"/><text x="4.5501%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser::Parser&gt; (3 samples, 0.27%)</title><rect x="4.3916%" y="693" width="0.2745%" height="15" fill="rgb(242,14,37)" fg:x="48" fg:w="3"/><text x="4.6416%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;memmap2::Mmap&gt;&gt; (3 samples, 0.27%)</title><rect x="4.3916%" y="677" width="0.2745%" height="15" fill="rgb(246,228,12)" fg:x="48" fg:w="3"/><text x="4.6416%" y="687.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.27%)</title><rect x="4.3916%" y="661" width="0.2745%" height="15" fill="rgb(213,55,15)" fg:x="48" fg:w="3"/><text x="4.6416%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.27%)</title><rect x="4.3916%" y="645" width="0.2745%" height="15" fill="rgb(209,9,3)" fg:x="48" fg:w="3"/><text x="4.6416%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;memmap2::Mmap&gt; (3 samples, 0.27%)</title><rect x="4.3916%" y="629" width="0.2745%" height="15" fill="rgb(230,59,30)" fg:x="48" fg:w="3"/><text x="4.6416%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;memmap2::os::MmapInner&gt; (3 samples, 0.27%)</title><rect x="4.3916%" y="613" width="0.2745%" height="15" fill="rgb(209,121,21)" fg:x="48" fg:w="3"/><text x="4.6416%" y="623.50"></text></g><g><title>__GI___munmap (3 samples, 0.27%)</title><rect x="4.3916%" y="597" width="0.2745%" height="15" fill="rgb(220,109,13)" fg:x="48" fg:w="3"/><text x="4.6416%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.27%)</title><rect x="4.3916%" y="581" width="0.2745%" height="15" fill="rgb(232,18,1)" fg:x="48" fg:w="3"/><text x="4.6416%" y="591.50"></text></g><g><title>do_syscall_64 (3 samples, 0.27%)</title><rect x="4.3916%" y="565" width="0.2745%" height="15" fill="rgb(215,41,42)" fg:x="48" fg:w="3"/><text x="4.6416%" y="575.50"></text></g><g><title>__x64_sys_munmap (3 samples, 0.27%)</title><rect x="4.3916%" y="549" width="0.2745%" height="15" fill="rgb(224,123,36)" fg:x="48" fg:w="3"/><text x="4.6416%" y="559.50"></text></g><g><title>__vm_munmap (3 samples, 0.27%)</title><rect x="4.3916%" y="533" width="0.2745%" height="15" fill="rgb(240,125,3)" fg:x="48" fg:w="3"/><text x="4.6416%" y="543.50"></text></g><g><title>__do_munmap (3 samples, 0.27%)</title><rect x="4.3916%" y="517" width="0.2745%" height="15" fill="rgb(205,98,50)" fg:x="48" fg:w="3"/><text x="4.6416%" y="527.50"></text></g><g><title>unmap_region (3 samples, 0.27%)</title><rect x="4.3916%" y="501" width="0.2745%" height="15" fill="rgb(205,185,37)" fg:x="48" fg:w="3"/><text x="4.6416%" y="511.50"></text></g><g><title>unmap_vmas (3 samples, 0.27%)</title><rect x="4.3916%" y="485" width="0.2745%" height="15" fill="rgb(238,207,15)" fg:x="48" fg:w="3"/><text x="4.6416%" y="495.50"></text></g><g><title>unmap_single_vma (3 samples, 0.27%)</title><rect x="4.3916%" y="469" width="0.2745%" height="15" fill="rgb(213,199,42)" fg:x="48" fg:w="3"/><text x="4.6416%" y="479.50"></text></g><g><title>unmap_page_range (3 samples, 0.27%)</title><rect x="4.3916%" y="453" width="0.2745%" height="15" fill="rgb(235,201,11)" fg:x="48" fg:w="3"/><text x="4.6416%" y="463.50"></text></g><g><title>zap_pmd_range.isra.0 (3 samples, 0.27%)</title><rect x="4.3916%" y="437" width="0.2745%" height="15" fill="rgb(207,46,11)" fg:x="48" fg:w="3"/><text x="4.6416%" y="447.50"></text></g><g><title>zap_pte_range (3 samples, 0.27%)</title><rect x="4.3916%" y="421" width="0.2745%" height="15" fill="rgb(241,35,35)" fg:x="48" fg:w="3"/><text x="4.6416%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;demoparser::parsing::demo_parsing::entities_cache_only::EntityIndicies&gt;&gt;&gt; (6 samples, 0.55%)</title><rect x="4.6661%" y="645" width="0.5489%" height="15" fill="rgb(243,32,47)" fg:x="51" fg:w="6"/><text x="4.9161%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.55%)</title><rect x="4.6661%" y="629" width="0.5489%" height="15" fill="rgb(247,202,23)" fg:x="51" fg:w="6"/><text x="4.9161%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;demoparser::parsing::demo_parsing::entities_cache_only::EntityIndicies&gt;]&gt; (6 samples, 0.55%)</title><rect x="4.6661%" y="613" width="0.5489%" height="15" fill="rgb(219,102,11)" fg:x="51" fg:w="6"/><text x="4.9161%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::demo_parsing::entities_cache_only::EntityIndicies&gt;&gt; (6 samples, 0.55%)</title><rect x="4.6661%" y="597" width="0.5489%" height="15" fill="rgb(243,110,44)" fg:x="51" fg:w="6"/><text x="4.9161%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.55%)</title><rect x="4.6661%" y="581" width="0.5489%" height="15" fill="rgb(222,74,54)" fg:x="51" fg:w="6"/><text x="4.9161%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::demo_parsing::entities_cache_only::EntityIndicies]&gt; (6 samples, 0.55%)</title><rect x="4.6661%" y="565" width="0.5489%" height="15" fill="rgb(216,99,12)" fg:x="51" fg:w="6"/><text x="4.9161%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::entities_cache_only::EntityIndicies&gt; (6 samples, 0.55%)</title><rect x="4.6661%" y="549" width="0.5489%" height="15" fill="rgb(226,22,26)" fg:x="51" fg:w="6"/><text x="4.9161%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[i32: 32]&gt;&gt; (6 samples, 0.55%)</title><rect x="4.6661%" y="533" width="0.5489%" height="15" fill="rgb(217,163,10)" fg:x="51" fg:w="6"/><text x="4.9161%" y="543.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.55%)</title><rect x="4.6661%" y="517" width="0.5489%" height="15" fill="rgb(213,25,53)" fg:x="51" fg:w="6"/><text x="4.9161%" y="527.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (6 samples, 0.55%)</title><rect x="4.6661%" y="501" width="0.5489%" height="15" fill="rgb(252,105,26)" fg:x="51" fg:w="6"/><text x="4.9161%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::cache::cache_writer::WriteCache&gt; (7 samples, 0.64%)</title><rect x="4.6661%" y="661" width="0.6404%" height="15" fill="rgb(220,39,43)" fg:x="51" fg:w="7"/><text x="4.9161%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::demo_parsing::stringtables::UserInfo&gt;&gt; (1 samples, 0.09%)</title><rect x="5.2150%" y="645" width="0.0915%" height="15" fill="rgb(229,68,48)" fg:x="57" fg:w="1"/><text x="5.4650%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;demoparser::parsing::demo_parsing::stringtables::UserInfo&gt;&gt; (1 samples, 0.09%)</title><rect x="5.2150%" y="629" width="0.0915%" height="15" fill="rgb(252,8,32)" fg:x="57" fg:w="1"/><text x="5.4650%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="5.2150%" y="613" width="0.0915%" height="15" fill="rgb(223,20,43)" fg:x="57" fg:w="1"/><text x="5.4650%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.09%)</title><rect x="5.2150%" y="597" width="0.0915%" height="15" fill="rgb(229,81,49)" fg:x="57" fg:w="1"/><text x="5.4650%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.09%)</title><rect x="5.2150%" y="581" width="0.0915%" height="15" fill="rgb(236,28,36)" fg:x="57" fg:w="1"/><text x="5.4650%" y="591.50"></text></g><g><title>__GI___libc_free (1 samples, 0.09%)</title><rect x="5.2150%" y="565" width="0.0915%" height="15" fill="rgb(249,185,26)" fg:x="57" fg:w="1"/><text x="5.4650%" y="575.50"></text></g><g><title>_int_free (1 samples, 0.09%)</title><rect x="5.2150%" y="549" width="0.0915%" height="15" fill="rgb(249,174,33)" fg:x="57" fg:w="1"/><text x="5.4650%" y="559.50"></text></g><g><title>malloc_consolidate (1 samples, 0.09%)</title><rect x="5.2150%" y="533" width="0.0915%" height="15" fill="rgb(233,201,37)" fg:x="57" fg:w="1"/><text x="5.4650%" y="543.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.09%)</title><rect x="5.3065%" y="261" width="0.0915%" height="15" fill="rgb(221,78,26)" fg:x="58" fg:w="1"/><text x="5.5565%" y="271.50"></text></g><g><title>free_swap_cache (1 samples, 0.09%)</title><rect x="5.3065%" y="245" width="0.0915%" height="15" fill="rgb(250,127,30)" fg:x="58" fg:w="1"/><text x="5.5565%" y="255.50"></text></g><g><title>zip::write::&lt;impl zip::write::zip_writer::ZipWriter&lt;W&gt;&gt;::finish_file (2 samples, 0.18%)</title><rect x="5.3065%" y="613" width="0.1830%" height="15" fill="rgb(230,49,44)" fg:x="58" fg:w="2"/><text x="5.5565%" y="623.50"></text></g><g><title>zip::write::GenericZipWriter&lt;W&gt;::switch_to (2 samples, 0.18%)</title><rect x="5.3065%" y="597" width="0.1830%" height="15" fill="rgb(229,67,23)" fg:x="58" fg:w="2"/><text x="5.5565%" y="607.50"></text></g><g><title>zstd::stream::write::Encoder&lt;W&gt;::finish (2 samples, 0.18%)</title><rect x="5.3065%" y="581" width="0.1830%" height="15" fill="rgb(249,83,47)" fg:x="58" fg:w="2"/><text x="5.5565%" y="591.50"></text></g><g><title>zstd::stream::write::Encoder&lt;W&gt;::try_finish (2 samples, 0.18%)</title><rect x="5.3065%" y="565" width="0.1830%" height="15" fill="rgb(215,43,3)" fg:x="58" fg:w="2"/><text x="5.5565%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;zstd::stream::raw::Encoder&gt; (2 samples, 0.18%)</title><rect x="5.3065%" y="549" width="0.1830%" height="15" fill="rgb(238,154,13)" fg:x="58" fg:w="2"/><text x="5.5565%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;zstd_safe::CCtx&gt; (2 samples, 0.18%)</title><rect x="5.3065%" y="533" width="0.1830%" height="15" fill="rgb(219,56,2)" fg:x="58" fg:w="2"/><text x="5.5565%" y="543.50"></text></g><g><title>ZSTD_freeCCtx (2 samples, 0.18%)</title><rect x="5.3065%" y="517" width="0.1830%" height="15" fill="rgb(233,0,4)" fg:x="58" fg:w="2"/><text x="5.5565%" y="527.50"></text></g><g><title>ZSTD_freeCCtxContent (2 samples, 0.18%)</title><rect x="5.3065%" y="501" width="0.1830%" height="15" fill="rgb(235,30,7)" fg:x="58" fg:w="2"/><text x="5.5565%" y="511.50"></text></g><g><title>ZSTD_cwksp_free (2 samples, 0.18%)</title><rect x="5.3065%" y="485" width="0.1830%" height="15" fill="rgb(250,79,13)" fg:x="58" fg:w="2"/><text x="5.5565%" y="495.50"></text></g><g><title>__GI___libc_free (2 samples, 0.18%)</title><rect x="5.3065%" y="469" width="0.1830%" height="15" fill="rgb(211,146,34)" fg:x="58" fg:w="2"/><text x="5.5565%" y="479.50"></text></g><g><title>_int_free (2 samples, 0.18%)</title><rect x="5.3065%" y="453" width="0.1830%" height="15" fill="rgb(228,22,38)" fg:x="58" fg:w="2"/><text x="5.5565%" y="463.50"></text></g><g><title>systrim (2 samples, 0.18%)</title><rect x="5.3065%" y="437" width="0.1830%" height="15" fill="rgb(235,168,5)" fg:x="58" fg:w="2"/><text x="5.5565%" y="447.50"></text></g><g><title>__glibc_morecore (2 samples, 0.18%)</title><rect x="5.3065%" y="421" width="0.1830%" height="15" fill="rgb(221,155,16)" fg:x="58" fg:w="2"/><text x="5.5565%" y="431.50"></text></g><g><title>__GI___sbrk (2 samples, 0.18%)</title><rect x="5.3065%" y="405" width="0.1830%" height="15" fill="rgb(215,215,53)" fg:x="58" fg:w="2"/><text x="5.5565%" y="415.50"></text></g><g><title>__GI___sbrk (2 samples, 0.18%)</title><rect x="5.3065%" y="389" width="0.1830%" height="15" fill="rgb(223,4,10)" fg:x="58" fg:w="2"/><text x="5.5565%" y="399.50"></text></g><g><title>__brk (2 samples, 0.18%)</title><rect x="5.3065%" y="373" width="0.1830%" height="15" fill="rgb(234,103,6)" fg:x="58" fg:w="2"/><text x="5.5565%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.18%)</title><rect x="5.3065%" y="357" width="0.1830%" height="15" fill="rgb(227,97,0)" fg:x="58" fg:w="2"/><text x="5.5565%" y="367.50"></text></g><g><title>do_syscall_64 (2 samples, 0.18%)</title><rect x="5.3065%" y="341" width="0.1830%" height="15" fill="rgb(234,150,53)" fg:x="58" fg:w="2"/><text x="5.5565%" y="351.50"></text></g><g><title>__x64_sys_brk (2 samples, 0.18%)</title><rect x="5.3065%" y="325" width="0.1830%" height="15" fill="rgb(228,201,54)" fg:x="58" fg:w="2"/><text x="5.5565%" y="335.50"></text></g><g><title>__do_sys_brk (2 samples, 0.18%)</title><rect x="5.3065%" y="309" width="0.1830%" height="15" fill="rgb(222,22,37)" fg:x="58" fg:w="2"/><text x="5.5565%" y="319.50"></text></g><g><title>__do_munmap (2 samples, 0.18%)</title><rect x="5.3065%" y="293" width="0.1830%" height="15" fill="rgb(237,53,32)" fg:x="58" fg:w="2"/><text x="5.5565%" y="303.50"></text></g><g><title>unmap_region (2 samples, 0.18%)</title><rect x="5.3065%" y="277" width="0.1830%" height="15" fill="rgb(233,25,53)" fg:x="58" fg:w="2"/><text x="5.5565%" y="287.50"></text></g><g><title>unmap_vmas (1 samples, 0.09%)</title><rect x="5.3980%" y="261" width="0.0915%" height="15" fill="rgb(210,40,34)" fg:x="59" fg:w="1"/><text x="5.6480%" y="271.50"></text></g><g><title>unmap_single_vma (1 samples, 0.09%)</title><rect x="5.3980%" y="245" width="0.0915%" height="15" fill="rgb(241,220,44)" fg:x="59" fg:w="1"/><text x="5.6480%" y="255.50"></text></g><g><title>unmap_page_range (1 samples, 0.09%)</title><rect x="5.3980%" y="229" width="0.0915%" height="15" fill="rgb(235,28,35)" fg:x="59" fg:w="1"/><text x="5.6480%" y="239.50"></text></g><g><title>zap_pmd_range.isra.0 (1 samples, 0.09%)</title><rect x="5.3980%" y="213" width="0.0915%" height="15" fill="rgb(210,56,17)" fg:x="59" fg:w="1"/><text x="5.6480%" y="223.50"></text></g><g><title>zap_pte_range (1 samples, 0.09%)</title><rect x="5.3980%" y="197" width="0.0915%" height="15" fill="rgb(224,130,29)" fg:x="59" fg:w="1"/><text x="5.6480%" y="207.50"></text></g><g><title>__tlb_remove_page_size (1 samples, 0.09%)</title><rect x="5.3980%" y="181" width="0.0915%" height="15" fill="rgb(235,212,8)" fg:x="59" fg:w="1"/><text x="5.6480%" y="191.50"></text></g><g><title>__fdget_pos (1 samples, 0.09%)</title><rect x="5.4895%" y="421" width="0.0915%" height="15" fill="rgb(223,33,50)" fg:x="60" fg:w="1"/><text x="5.7395%" y="431.50"></text></g><g><title>__fget_light (1 samples, 0.09%)</title><rect x="5.4895%" y="405" width="0.0915%" height="15" fill="rgb(219,149,13)" fg:x="60" fg:w="1"/><text x="5.7395%" y="415.50"></text></g><g><title>__fget_files (1 samples, 0.09%)</title><rect x="5.4895%" y="389" width="0.0915%" height="15" fill="rgb(250,156,29)" fg:x="60" fg:w="1"/><text x="5.7395%" y="399.50"></text></g><g><title>get_obj_cgroup_from_current (1 samples, 0.09%)</title><rect x="5.9469%" y="309" width="0.0915%" height="15" fill="rgb(216,193,19)" fg:x="65" fg:w="1"/><text x="6.1969%" y="319.50"></text></g><g><title>memcg_slab_post_alloc_hook (1 samples, 0.09%)</title><rect x="6.0384%" y="309" width="0.0915%" height="15" fill="rgb(216,135,14)" fg:x="66" fg:w="1"/><text x="6.2884%" y="319.50"></text></g><g><title>page_counter_try_charge (1 samples, 0.09%)</title><rect x="6.3129%" y="261" width="0.0915%" height="15" fill="rgb(241,47,5)" fg:x="69" fg:w="1"/><text x="6.5629%" y="271.50"></text></g><g><title>page_counter_cancel (1 samples, 0.09%)</title><rect x="6.4044%" y="229" width="0.0915%" height="15" fill="rgb(233,42,35)" fg:x="70" fg:w="1"/><text x="6.6544%" y="239.50"></text></g><g><title>__kmalloc (8 samples, 0.73%)</title><rect x="5.8554%" y="325" width="0.7319%" height="15" fill="rgb(231,13,6)" fg:x="64" fg:w="8"/><text x="6.1054%" y="335.50"></text></g><g><title>obj_cgroup_charge (5 samples, 0.46%)</title><rect x="6.1299%" y="309" width="0.4575%" height="15" fill="rgb(207,181,40)" fg:x="67" fg:w="5"/><text x="6.3799%" y="319.50"></text></g><g><title>obj_cgroup_charge_pages (5 samples, 0.46%)</title><rect x="6.1299%" y="293" width="0.4575%" height="15" fill="rgb(254,173,49)" fg:x="67" fg:w="5"/><text x="6.3799%" y="303.50"></text></g><g><title>try_charge_memcg (5 samples, 0.46%)</title><rect x="6.1299%" y="277" width="0.4575%" height="15" fill="rgb(221,1,38)" fg:x="67" fg:w="5"/><text x="6.3799%" y="287.50"></text></g><g><title>refill_stock (2 samples, 0.18%)</title><rect x="6.4044%" y="261" width="0.1830%" height="15" fill="rgb(206,124,46)" fg:x="70" fg:w="2"/><text x="6.6544%" y="271.50"></text></g><g><title>drain_stock (2 samples, 0.18%)</title><rect x="6.4044%" y="245" width="0.1830%" height="15" fill="rgb(249,21,11)" fg:x="70" fg:w="2"/><text x="6.6544%" y="255.50"></text></g><g><title>page_counter_uncharge (1 samples, 0.09%)</title><rect x="6.4959%" y="229" width="0.0915%" height="15" fill="rgb(222,201,40)" fg:x="71" fg:w="1"/><text x="6.7459%" y="239.50"></text></g><g><title>page_counter_cancel (1 samples, 0.09%)</title><rect x="6.4959%" y="213" width="0.0915%" height="15" fill="rgb(235,61,29)" fg:x="71" fg:w="1"/><text x="6.7459%" y="223.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.09%)</title><rect x="6.5874%" y="325" width="0.0915%" height="15" fill="rgb(219,207,3)" fg:x="72" fg:w="1"/><text x="6.8374%" y="335.50"></text></g><g><title>fsnotify_add_event (1 samples, 0.09%)</title><rect x="6.6789%" y="325" width="0.0915%" height="15" fill="rgb(222,56,46)" fg:x="73" fg:w="1"/><text x="6.9289%" y="335.50"></text></g><g><title>strcmp (1 samples, 0.09%)</title><rect x="6.6789%" y="309" width="0.0915%" height="15" fill="rgb(239,76,54)" fg:x="73" fg:w="1"/><text x="6.9289%" y="319.50"></text></g><g><title>inotify_free_event (1 samples, 0.09%)</title><rect x="6.7704%" y="325" width="0.0915%" height="15" fill="rgb(231,124,27)" fg:x="74" fg:w="1"/><text x="7.0204%" y="335.50"></text></g><g><title>inotify_handle_inode_event (13 samples, 1.19%)</title><rect x="5.8554%" y="341" width="1.1894%" height="15" fill="rgb(249,195,6)" fg:x="64" fg:w="13"/><text x="6.1054%" y="351.50"></text></g><g><title>inotify_merge (2 samples, 0.18%)</title><rect x="6.8618%" y="325" width="0.1830%" height="15" fill="rgb(237,174,47)" fg:x="75" fg:w="2"/><text x="7.1118%" y="335.50"></text></g><g><title>__fsnotify_parent (16 samples, 1.46%)</title><rect x="5.6725%" y="405" width="1.4639%" height="15" fill="rgb(206,201,31)" fg:x="62" fg:w="16"/><text x="5.9225%" y="415.50"></text></g><g><title>fsnotify (16 samples, 1.46%)</title><rect x="5.6725%" y="389" width="1.4639%" height="15" fill="rgb(231,57,52)" fg:x="62" fg:w="16"/><text x="5.9225%" y="399.50"></text></g><g><title>send_to_group (15 samples, 1.37%)</title><rect x="5.7640%" y="373" width="1.3724%" height="15" fill="rgb(248,177,22)" fg:x="63" fg:w="15"/><text x="6.0140%" y="383.50"></text></g><g><title>fsnotify_handle_inode_event.isra.0 (15 samples, 1.37%)</title><rect x="5.7640%" y="357" width="1.3724%" height="15" fill="rgb(215,211,37)" fg:x="63" fg:w="15"/><text x="6.0140%" y="367.50"></text></g><g><title>strcpy (1 samples, 0.09%)</title><rect x="7.0448%" y="341" width="0.0915%" height="15" fill="rgb(241,128,51)" fg:x="77" fg:w="1"/><text x="7.2948%" y="351.50"></text></g><g><title>ext4_file_write_iter (1 samples, 0.09%)</title><rect x="7.1363%" y="405" width="0.0915%" height="15" fill="rgb(227,165,31)" fg:x="78" fg:w="1"/><text x="7.3863%" y="415.50"></text></g><g><title>ext4_block_write_begin (1 samples, 0.09%)</title><rect x="7.2278%" y="325" width="0.0915%" height="15" fill="rgb(228,167,24)" fg:x="79" fg:w="1"/><text x="7.4778%" y="335.50"></text></g><g><title>ext4_da_write_begin (2 samples, 0.18%)</title><rect x="7.2278%" y="341" width="0.1830%" height="15" fill="rgb(228,143,12)" fg:x="79" fg:w="2"/><text x="7.4778%" y="351.50"></text></g><g><title>grab_cache_page_write_begin (1 samples, 0.09%)</title><rect x="7.3193%" y="325" width="0.0915%" height="15" fill="rgb(249,149,8)" fg:x="80" fg:w="1"/><text x="7.5693%" y="335.50"></text></g><g><title>pagecache_get_page (1 samples, 0.09%)</title><rect x="7.3193%" y="309" width="0.0915%" height="15" fill="rgb(243,35,44)" fg:x="80" fg:w="1"/><text x="7.5693%" y="319.50"></text></g><g><title>__ext4_journal_stop (1 samples, 0.09%)</title><rect x="7.4108%" y="277" width="0.0915%" height="15" fill="rgb(246,89,9)" fg:x="81" fg:w="1"/><text x="7.6608%" y="287.50"></text></g><g><title>jbd2_journal_stop (1 samples, 0.09%)</title><rect x="7.4108%" y="261" width="0.0915%" height="15" fill="rgb(233,213,13)" fg:x="81" fg:w="1"/><text x="7.6608%" y="271.50"></text></g><g><title>__brelse (1 samples, 0.09%)</title><rect x="7.5023%" y="245" width="0.0915%" height="15" fill="rgb(233,141,41)" fg:x="82" fg:w="1"/><text x="7.7523%" y="255.50"></text></g><g><title>crypto_shash_update (2 samples, 0.18%)</title><rect x="7.6853%" y="213" width="0.1830%" height="15" fill="rgb(239,167,4)" fg:x="84" fg:w="2"/><text x="7.9353%" y="223.50"></text></g><g><title>ext4_mark_iloc_dirty (5 samples, 0.46%)</title><rect x="7.5023%" y="261" width="0.4575%" height="15" fill="rgb(209,217,16)" fg:x="82" fg:w="5"/><text x="7.7523%" y="271.50"></text></g><g><title>ext4_do_update_inode.isra.0 (4 samples, 0.37%)</title><rect x="7.5938%" y="245" width="0.3660%" height="15" fill="rgb(219,88,35)" fg:x="83" fg:w="4"/><text x="7.8438%" y="255.50"></text></g><g><title>ext4_inode_csum_set (3 samples, 0.27%)</title><rect x="7.6853%" y="229" width="0.2745%" height="15" fill="rgb(220,193,23)" fg:x="84" fg:w="3"/><text x="7.9353%" y="239.50"></text></g><g><title>ext4_inode_csum (1 samples, 0.09%)</title><rect x="7.8683%" y="213" width="0.0915%" height="15" fill="rgb(230,90,52)" fg:x="86" fg:w="1"/><text x="8.1183%" y="223.50"></text></g><g><title>crypto_shash_update (1 samples, 0.09%)</title><rect x="7.8683%" y="197" width="0.0915%" height="15" fill="rgb(252,106,19)" fg:x="86" fg:w="1"/><text x="8.1183%" y="207.50"></text></g><g><title>crc32c_pcl_intel_update (1 samples, 0.09%)</title><rect x="7.8683%" y="181" width="0.0915%" height="15" fill="rgb(206,74,20)" fg:x="86" fg:w="1"/><text x="8.1183%" y="191.50"></text></g><g><title>__ext4_journal_get_write_access (1 samples, 0.09%)</title><rect x="7.9597%" y="245" width="0.0915%" height="15" fill="rgb(230,138,44)" fg:x="87" fg:w="1"/><text x="8.2097%" y="255.50"></text></g><g><title>jbd2_journal_get_write_access (1 samples, 0.09%)</title><rect x="7.9597%" y="229" width="0.0915%" height="15" fill="rgb(235,182,43)" fg:x="87" fg:w="1"/><text x="8.2097%" y="239.50"></text></g><g><title>jbd2_write_access_granted.part.0 (1 samples, 0.09%)</title><rect x="7.9597%" y="213" width="0.0915%" height="15" fill="rgb(242,16,51)" fg:x="87" fg:w="1"/><text x="8.2097%" y="223.50"></text></g><g><title>__getblk_gfp (1 samples, 0.09%)</title><rect x="8.1427%" y="213" width="0.0915%" height="15" fill="rgb(248,9,4)" fg:x="89" fg:w="1"/><text x="8.3927%" y="223.50"></text></g><g><title>__find_get_block (1 samples, 0.09%)</title><rect x="8.1427%" y="197" width="0.0915%" height="15" fill="rgb(210,31,22)" fg:x="89" fg:w="1"/><text x="8.3927%" y="207.50"></text></g><g><title>mark_page_accessed (1 samples, 0.09%)</title><rect x="8.1427%" y="181" width="0.0915%" height="15" fill="rgb(239,54,39)" fg:x="89" fg:w="1"/><text x="8.3927%" y="191.50"></text></g><g><title>ext4_da_write_end (10 samples, 0.91%)</title><rect x="7.4108%" y="341" width="0.9149%" height="15" fill="rgb(230,99,41)" fg:x="81" fg:w="10"/><text x="7.6608%" y="351.50"></text></g><g><title>generic_write_end (10 samples, 0.91%)</title><rect x="7.4108%" y="325" width="0.9149%" height="15" fill="rgb(253,106,12)" fg:x="81" fg:w="10"/><text x="7.6608%" y="335.50"></text></g><g><title>__mark_inode_dirty (10 samples, 0.91%)</title><rect x="7.4108%" y="309" width="0.9149%" height="15" fill="rgb(213,46,41)" fg:x="81" fg:w="10"/><text x="7.6608%" y="319.50"></text></g><g><title>ext4_dirty_inode (10 samples, 0.91%)</title><rect x="7.4108%" y="293" width="0.9149%" height="15" fill="rgb(215,133,35)" fg:x="81" fg:w="10"/><text x="7.6608%" y="303.50"></text></g><g><title>__ext4_mark_inode_dirty (9 samples, 0.82%)</title><rect x="7.5023%" y="277" width="0.8234%" height="15" fill="rgb(213,28,5)" fg:x="82" fg:w="9"/><text x="7.7523%" y="287.50"></text></g><g><title>ext4_reserve_inode_write (4 samples, 0.37%)</title><rect x="7.9597%" y="261" width="0.3660%" height="15" fill="rgb(215,77,49)" fg:x="87" fg:w="4"/><text x="8.2097%" y="271.50"></text></g><g><title>ext4_get_inode_loc (3 samples, 0.27%)</title><rect x="8.0512%" y="245" width="0.2745%" height="15" fill="rgb(248,100,22)" fg:x="88" fg:w="3"/><text x="8.3012%" y="255.50"></text></g><g><title>__ext4_get_inode_loc (3 samples, 0.27%)</title><rect x="8.0512%" y="229" width="0.2745%" height="15" fill="rgb(208,67,9)" fg:x="88" fg:w="3"/><text x="8.3012%" y="239.50"></text></g><g><title>ext4_get_group_desc (1 samples, 0.09%)</title><rect x="8.2342%" y="213" width="0.0915%" height="15" fill="rgb(219,133,21)" fg:x="90" fg:w="1"/><text x="8.4842%" y="223.50"></text></g><g><title>__x64_sys_write (32 samples, 2.93%)</title><rect x="5.4895%" y="453" width="2.9277%" height="15" fill="rgb(246,46,29)" fg:x="60" fg:w="32"/><text x="5.7395%" y="463.50">__..</text></g><g><title>ksys_write (32 samples, 2.93%)</title><rect x="5.4895%" y="437" width="2.9277%" height="15" fill="rgb(246,185,52)" fg:x="60" fg:w="32"/><text x="5.7395%" y="447.50">ks..</text></g><g><title>vfs_write (31 samples, 2.84%)</title><rect x="5.5810%" y="421" width="2.8362%" height="15" fill="rgb(252,136,11)" fg:x="61" fg:w="31"/><text x="5.8310%" y="431.50">vf..</text></g><g><title>new_sync_write (13 samples, 1.19%)</title><rect x="7.2278%" y="405" width="1.1894%" height="15" fill="rgb(219,138,53)" fg:x="79" fg:w="13"/><text x="7.4778%" y="415.50"></text></g><g><title>ext4_file_write_iter (13 samples, 1.19%)</title><rect x="7.2278%" y="389" width="1.1894%" height="15" fill="rgb(211,51,23)" fg:x="79" fg:w="13"/><text x="7.4778%" y="399.50"></text></g><g><title>ext4_buffered_write_iter (13 samples, 1.19%)</title><rect x="7.2278%" y="373" width="1.1894%" height="15" fill="rgb(247,221,28)" fg:x="79" fg:w="13"/><text x="7.4778%" y="383.50"></text></g><g><title>generic_perform_write (13 samples, 1.19%)</title><rect x="7.2278%" y="357" width="1.1894%" height="15" fill="rgb(251,222,45)" fg:x="79" fg:w="13"/><text x="7.4778%" y="367.50"></text></g><g><title>fault_in_iov_iter_readable (1 samples, 0.09%)</title><rect x="8.3257%" y="341" width="0.0915%" height="15" fill="rgb(217,162,53)" fg:x="91" fg:w="1"/><text x="8.5757%" y="351.50"></text></g><g><title>__get_user_nocheck_1 (1 samples, 0.09%)</title><rect x="8.3257%" y="325" width="0.0915%" height="15" fill="rgb(229,93,14)" fg:x="91" fg:w="1"/><text x="8.5757%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (33 samples, 3.02%)</title><rect x="5.4895%" y="485" width="3.0192%" height="15" fill="rgb(209,67,49)" fg:x="60" fg:w="33"/><text x="5.7395%" y="495.50">ent..</text></g><g><title>do_syscall_64 (33 samples, 3.02%)</title><rect x="5.4895%" y="469" width="3.0192%" height="15" fill="rgb(213,87,29)" fg:x="60" fg:w="33"/><text x="5.7395%" y="479.50">do_..</text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.09%)</title><rect x="8.4172%" y="453" width="0.0915%" height="15" fill="rgb(205,151,52)" fg:x="92" fg:w="1"/><text x="8.6672%" y="463.50"></text></g><g><title>fpregs_assert_state_consistent (1 samples, 0.09%)</title><rect x="8.4172%" y="437" width="0.0915%" height="15" fill="rgb(253,215,39)" fg:x="92" fg:w="1"/><text x="8.6672%" y="447.50"></text></g><g><title>byteorder::io::WriteBytesExt::write_u16 (35 samples, 3.20%)</title><rect x="5.4895%" y="597" width="3.2022%" height="15" fill="rgb(221,220,41)" fg:x="60" fg:w="35"/><text x="5.7395%" y="607.50">byt..</text></g><g><title>std::io::Write::write_all (35 samples, 3.20%)</title><rect x="5.4895%" y="581" width="3.2022%" height="15" fill="rgb(218,133,21)" fg:x="60" fg:w="35"/><text x="5.7395%" y="591.50">std..</text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (35 samples, 3.20%)</title><rect x="5.4895%" y="565" width="3.2022%" height="15" fill="rgb(221,193,43)" fg:x="60" fg:w="35"/><text x="5.7395%" y="575.50">std..</text></g><g><title>std::sys::unix::net::Socket::write (35 samples, 3.20%)</title><rect x="5.4895%" y="549" width="3.2022%" height="15" fill="rgb(240,128,52)" fg:x="60" fg:w="35"/><text x="5.7395%" y="559.50">std..</text></g><g><title>std::sys::unix::fd::FileDesc::write (35 samples, 3.20%)</title><rect x="5.4895%" y="533" width="3.2022%" height="15" fill="rgb(253,114,12)" fg:x="60" fg:w="35"/><text x="5.7395%" y="543.50">std..</text></g><g><title>__GI___libc_write (35 samples, 3.20%)</title><rect x="5.4895%" y="517" width="3.2022%" height="15" fill="rgb(215,223,47)" fg:x="60" fg:w="35"/><text x="5.7395%" y="527.50">__G..</text></g><g><title>__GI___libc_write (35 samples, 3.20%)</title><rect x="5.4895%" y="501" width="3.2022%" height="15" fill="rgb(248,225,23)" fg:x="60" fg:w="35"/><text x="5.7395%" y="511.50">__G..</text></g><g><title>syscall_return_via_sysret (2 samples, 0.18%)</title><rect x="8.5087%" y="485" width="0.1830%" height="15" fill="rgb(250,108,0)" fg:x="93" fg:w="2"/><text x="8.7587%" y="495.50"></text></g><g><title>get_obj_cgroup_from_current (1 samples, 0.09%)</title><rect x="8.8747%" y="309" width="0.0915%" height="15" fill="rgb(228,208,7)" fg:x="97" fg:w="1"/><text x="9.1247%" y="319.50"></text></g><g><title>obj_cgroup_charge_pages (2 samples, 0.18%)</title><rect x="8.9661%" y="293" width="0.1830%" height="15" fill="rgb(244,45,10)" fg:x="98" fg:w="2"/><text x="9.2161%" y="303.50"></text></g><g><title>try_charge_memcg (2 samples, 0.18%)</title><rect x="8.9661%" y="277" width="0.1830%" height="15" fill="rgb(207,125,25)" fg:x="98" fg:w="2"/><text x="9.2161%" y="287.50"></text></g><g><title>refill_stock (1 samples, 0.09%)</title><rect x="9.0576%" y="261" width="0.0915%" height="15" fill="rgb(210,195,18)" fg:x="99" fg:w="1"/><text x="9.3076%" y="271.50"></text></g><g><title>drain_stock (1 samples, 0.09%)</title><rect x="9.0576%" y="245" width="0.0915%" height="15" fill="rgb(249,80,12)" fg:x="99" fg:w="1"/><text x="9.3076%" y="255.50"></text></g><g><title>page_counter_uncharge (1 samples, 0.09%)</title><rect x="9.0576%" y="229" width="0.0915%" height="15" fill="rgb(221,65,9)" fg:x="99" fg:w="1"/><text x="9.3076%" y="239.50"></text></g><g><title>page_counter_cancel (1 samples, 0.09%)</title><rect x="9.0576%" y="213" width="0.0915%" height="15" fill="rgb(235,49,36)" fg:x="99" fg:w="1"/><text x="9.3076%" y="223.50"></text></g><g><title>__kmalloc (5 samples, 0.46%)</title><rect x="8.7832%" y="325" width="0.4575%" height="15" fill="rgb(225,32,20)" fg:x="96" fg:w="5"/><text x="9.0332%" y="335.50"></text></g><g><title>obj_cgroup_charge (3 samples, 0.27%)</title><rect x="8.9661%" y="309" width="0.2745%" height="15" fill="rgb(215,141,46)" fg:x="98" fg:w="3"/><text x="9.2161%" y="319.50"></text></g><g><title>refill_obj_stock (1 samples, 0.09%)</title><rect x="9.1491%" y="293" width="0.0915%" height="15" fill="rgb(250,160,47)" fg:x="100" fg:w="1"/><text x="9.3991%" y="303.50"></text></g><g><title>rcu_read_unlock_strict (1 samples, 0.09%)</title><rect x="9.1491%" y="277" width="0.0915%" height="15" fill="rgb(216,222,40)" fg:x="100" fg:w="1"/><text x="9.3991%" y="287.50"></text></g><g><title>fsnotify_add_event (2 samples, 0.18%)</title><rect x="9.2406%" y="325" width="0.1830%" height="15" fill="rgb(234,217,39)" fg:x="101" fg:w="2"/><text x="9.4906%" y="335.50"></text></g><g><title>strcmp (2 samples, 0.18%)</title><rect x="9.2406%" y="309" width="0.1830%" height="15" fill="rgb(207,178,40)" fg:x="101" fg:w="2"/><text x="9.4906%" y="319.50"></text></g><g><title>__fsnotify_parent (9 samples, 0.82%)</title><rect x="8.6917%" y="405" width="0.8234%" height="15" fill="rgb(221,136,13)" fg:x="95" fg:w="9"/><text x="8.9417%" y="415.50"></text></g><g><title>fsnotify (9 samples, 0.82%)</title><rect x="8.6917%" y="389" width="0.8234%" height="15" fill="rgb(249,199,10)" fg:x="95" fg:w="9"/><text x="8.9417%" y="399.50"></text></g><g><title>send_to_group (9 samples, 0.82%)</title><rect x="8.6917%" y="373" width="0.8234%" height="15" fill="rgb(249,222,13)" fg:x="95" fg:w="9"/><text x="8.9417%" y="383.50"></text></g><g><title>fsnotify_handle_inode_event.isra.0 (9 samples, 0.82%)</title><rect x="8.6917%" y="357" width="0.8234%" height="15" fill="rgb(244,185,38)" fg:x="95" fg:w="9"/><text x="8.9417%" y="367.50"></text></g><g><title>inotify_handle_inode_event (9 samples, 0.82%)</title><rect x="8.6917%" y="341" width="0.8234%" height="15" fill="rgb(236,202,9)" fg:x="95" fg:w="9"/><text x="8.9417%" y="351.50"></text></g><g><title>inotify_merge (1 samples, 0.09%)</title><rect x="9.4236%" y="325" width="0.0915%" height="15" fill="rgb(250,229,37)" fg:x="103" fg:w="1"/><text x="9.6736%" y="335.50"></text></g><g><title>ext4_da_write_end (1 samples, 0.09%)</title><rect x="9.5151%" y="357" width="0.0915%" height="15" fill="rgb(206,174,23)" fg:x="104" fg:w="1"/><text x="9.7651%" y="367.50"></text></g><g><title>__ext4_journal_start_sb (1 samples, 0.09%)</title><rect x="9.6981%" y="277" width="0.0915%" height="15" fill="rgb(211,33,43)" fg:x="106" fg:w="1"/><text x="9.9481%" y="287.50"></text></g><g><title>jbd2__journal_start (1 samples, 0.09%)</title><rect x="9.6981%" y="261" width="0.0915%" height="15" fill="rgb(245,58,50)" fg:x="106" fg:w="1"/><text x="9.9481%" y="271.50"></text></g><g><title>start_this_handle (1 samples, 0.09%)</title><rect x="9.6981%" y="245" width="0.0915%" height="15" fill="rgb(244,68,36)" fg:x="106" fg:w="1"/><text x="9.9481%" y="255.50"></text></g><g><title>ext4_da_write_end (2 samples, 0.18%)</title><rect x="9.6981%" y="341" width="0.1830%" height="15" fill="rgb(232,229,15)" fg:x="106" fg:w="2"/><text x="9.9481%" y="351.50"></text></g><g><title>generic_write_end (2 samples, 0.18%)</title><rect x="9.6981%" y="325" width="0.1830%" height="15" fill="rgb(254,30,23)" fg:x="106" fg:w="2"/><text x="9.9481%" y="335.50"></text></g><g><title>__mark_inode_dirty (2 samples, 0.18%)</title><rect x="9.6981%" y="309" width="0.1830%" height="15" fill="rgb(235,160,14)" fg:x="106" fg:w="2"/><text x="9.9481%" y="319.50"></text></g><g><title>ext4_dirty_inode (2 samples, 0.18%)</title><rect x="9.6981%" y="293" width="0.1830%" height="15" fill="rgb(212,155,44)" fg:x="106" fg:w="2"/><text x="9.9481%" y="303.50"></text></g><g><title>__ext4_mark_inode_dirty (1 samples, 0.09%)</title><rect x="9.7896%" y="277" width="0.0915%" height="15" fill="rgb(226,2,50)" fg:x="107" fg:w="1"/><text x="10.0396%" y="287.50"></text></g><g><title>ext4_reserve_inode_write (1 samples, 0.09%)</title><rect x="9.7896%" y="261" width="0.0915%" height="15" fill="rgb(234,177,6)" fg:x="107" fg:w="1"/><text x="10.0396%" y="271.50"></text></g><g><title>ext4_get_inode_loc (1 samples, 0.09%)</title><rect x="9.7896%" y="245" width="0.0915%" height="15" fill="rgb(217,24,9)" fg:x="107" fg:w="1"/><text x="10.0396%" y="255.50"></text></g><g><title>__ext4_get_inode_loc (1 samples, 0.09%)</title><rect x="9.7896%" y="229" width="0.0915%" height="15" fill="rgb(220,13,46)" fg:x="107" fg:w="1"/><text x="10.0396%" y="239.50"></text></g><g><title>byteorder::io::WriteBytesExt::write_u32 (14 samples, 1.28%)</title><rect x="8.6917%" y="597" width="1.2809%" height="15" fill="rgb(239,221,27)" fg:x="95" fg:w="14"/><text x="8.9417%" y="607.50"></text></g><g><title>std::io::Write::write_all (14 samples, 1.28%)</title><rect x="8.6917%" y="581" width="1.2809%" height="15" fill="rgb(222,198,25)" fg:x="95" fg:w="14"/><text x="8.9417%" y="591.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (14 samples, 1.28%)</title><rect x="8.6917%" y="565" width="1.2809%" height="15" fill="rgb(211,99,13)" fg:x="95" fg:w="14"/><text x="8.9417%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::write (14 samples, 1.28%)</title><rect x="8.6917%" y="549" width="1.2809%" height="15" fill="rgb(232,111,31)" fg:x="95" fg:w="14"/><text x="8.9417%" y="559.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (14 samples, 1.28%)</title><rect x="8.6917%" y="533" width="1.2809%" height="15" fill="rgb(245,82,37)" fg:x="95" fg:w="14"/><text x="8.9417%" y="543.50"></text></g><g><title>__GI___libc_write (14 samples, 1.28%)</title><rect x="8.6917%" y="517" width="1.2809%" height="15" fill="rgb(227,149,46)" fg:x="95" fg:w="14"/><text x="8.9417%" y="527.50"></text></g><g><title>__GI___libc_write (14 samples, 1.28%)</title><rect x="8.6917%" y="501" width="1.2809%" height="15" fill="rgb(218,36,50)" fg:x="95" fg:w="14"/><text x="8.9417%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (14 samples, 1.28%)</title><rect x="8.6917%" y="485" width="1.2809%" height="15" fill="rgb(226,80,48)" fg:x="95" fg:w="14"/><text x="8.9417%" y="495.50"></text></g><g><title>do_syscall_64 (14 samples, 1.28%)</title><rect x="8.6917%" y="469" width="1.2809%" height="15" fill="rgb(238,224,15)" fg:x="95" fg:w="14"/><text x="8.9417%" y="479.50"></text></g><g><title>__x64_sys_write (14 samples, 1.28%)</title><rect x="8.6917%" y="453" width="1.2809%" height="15" fill="rgb(241,136,10)" fg:x="95" fg:w="14"/><text x="8.9417%" y="463.50"></text></g><g><title>ksys_write (14 samples, 1.28%)</title><rect x="8.6917%" y="437" width="1.2809%" height="15" fill="rgb(208,32,45)" fg:x="95" fg:w="14"/><text x="8.9417%" y="447.50"></text></g><g><title>vfs_write (14 samples, 1.28%)</title><rect x="8.6917%" y="421" width="1.2809%" height="15" fill="rgb(207,135,9)" fg:x="95" fg:w="14"/><text x="8.9417%" y="431.50"></text></g><g><title>new_sync_write (5 samples, 0.46%)</title><rect x="9.5151%" y="405" width="0.4575%" height="15" fill="rgb(206,86,44)" fg:x="104" fg:w="5"/><text x="9.7651%" y="415.50"></text></g><g><title>ext4_file_write_iter (5 samples, 0.46%)</title><rect x="9.5151%" y="389" width="0.4575%" height="15" fill="rgb(245,177,15)" fg:x="104" fg:w="5"/><text x="9.7651%" y="399.50"></text></g><g><title>ext4_buffered_write_iter (5 samples, 0.46%)</title><rect x="9.5151%" y="373" width="0.4575%" height="15" fill="rgb(206,64,50)" fg:x="104" fg:w="5"/><text x="9.7651%" y="383.50"></text></g><g><title>generic_perform_write (4 samples, 0.37%)</title><rect x="9.6066%" y="357" width="0.3660%" height="15" fill="rgb(234,36,40)" fg:x="105" fg:w="4"/><text x="9.8566%" y="367.50"></text></g><g><title>fault_in_iov_iter_readable (1 samples, 0.09%)</title><rect x="9.8811%" y="341" width="0.0915%" height="15" fill="rgb(213,64,8)" fg:x="108" fg:w="1"/><text x="10.1311%" y="351.50"></text></g><g><title>__get_user_nocheck_1 (1 samples, 0.09%)</title><rect x="9.8811%" y="325" width="0.0915%" height="15" fill="rgb(210,75,36)" fg:x="108" fg:w="1"/><text x="10.1311%" y="335.50"></text></g><g><title>__entry_text_start (1 samples, 0.09%)</title><rect x="9.9726%" y="501" width="0.0915%" height="15" fill="rgb(229,88,21)" fg:x="109" fg:w="1"/><text x="10.2226%" y="511.50"></text></g><g><title>inotify_handle_inode_event (1 samples, 0.09%)</title><rect x="10.0640%" y="357" width="0.0915%" height="15" fill="rgb(252,204,47)" fg:x="110" fg:w="1"/><text x="10.3140%" y="367.50"></text></g><g><title>__kmalloc (1 samples, 0.09%)</title><rect x="10.0640%" y="341" width="0.0915%" height="15" fill="rgb(208,77,27)" fg:x="110" fg:w="1"/><text x="10.3140%" y="351.50"></text></g><g><title>obj_cgroup_charge (1 samples, 0.09%)</title><rect x="10.0640%" y="325" width="0.0915%" height="15" fill="rgb(221,76,26)" fg:x="110" fg:w="1"/><text x="10.3140%" y="335.50"></text></g><g><title>obj_cgroup_charge_pages (1 samples, 0.09%)</title><rect x="10.0640%" y="309" width="0.0915%" height="15" fill="rgb(225,139,18)" fg:x="110" fg:w="1"/><text x="10.3140%" y="319.50"></text></g><g><title>try_charge_memcg (1 samples, 0.09%)</title><rect x="10.0640%" y="293" width="0.0915%" height="15" fill="rgb(230,137,11)" fg:x="110" fg:w="1"/><text x="10.3140%" y="303.50"></text></g><g><title>page_counter_try_charge (1 samples, 0.09%)</title><rect x="10.0640%" y="277" width="0.0915%" height="15" fill="rgb(212,28,1)" fg:x="110" fg:w="1"/><text x="10.3140%" y="287.50"></text></g><g><title>__fsnotify_parent (3 samples, 0.27%)</title><rect x="10.0640%" y="421" width="0.2745%" height="15" fill="rgb(248,164,17)" fg:x="110" fg:w="3"/><text x="10.3140%" y="431.50"></text></g><g><title>fsnotify (3 samples, 0.27%)</title><rect x="10.0640%" y="405" width="0.2745%" height="15" fill="rgb(222,171,42)" fg:x="110" fg:w="3"/><text x="10.3140%" y="415.50"></text></g><g><title>send_to_group (3 samples, 0.27%)</title><rect x="10.0640%" y="389" width="0.2745%" height="15" fill="rgb(243,84,45)" fg:x="110" fg:w="3"/><text x="10.3140%" y="399.50"></text></g><g><title>fsnotify_handle_inode_event.isra.0 (3 samples, 0.27%)</title><rect x="10.0640%" y="373" width="0.2745%" height="15" fill="rgb(252,49,23)" fg:x="110" fg:w="3"/><text x="10.3140%" y="383.50"></text></g><g><title>strcpy (2 samples, 0.18%)</title><rect x="10.1555%" y="357" width="0.1830%" height="15" fill="rgb(215,19,7)" fg:x="111" fg:w="2"/><text x="10.4055%" y="367.50"></text></g><g><title>core::mem::drop (63 samples, 5.76%)</title><rect x="4.6661%" y="677" width="5.7640%" height="15" fill="rgb(238,81,41)" fg:x="51" fg:w="63"/><text x="4.9161%" y="687.50">core::m..</text></g><g><title>core::ptr::drop_in_place&lt;zip::write::zip_writer::ZipWriter&lt;std::fs::File&gt;&gt; (56 samples, 5.12%)</title><rect x="5.3065%" y="661" width="5.1235%" height="15" fill="rgb(210,199,37)" fg:x="58" fg:w="56"/><text x="5.5565%" y="671.50">core::..</text></g><g><title>zip::write::&lt;impl core::ops::drop::Drop for zip::write::zip_writer::ZipWriter&lt;W&gt;&gt;::drop (56 samples, 5.12%)</title><rect x="5.3065%" y="645" width="5.1235%" height="15" fill="rgb(244,192,49)" fg:x="58" fg:w="56"/><text x="5.5565%" y="655.50">zip::w..</text></g><g><title>zip::write::&lt;impl zip::write::zip_writer::ZipWriter&lt;W&gt;&gt;::finalize (56 samples, 5.12%)</title><rect x="5.3065%" y="629" width="5.1235%" height="15" fill="rgb(226,211,11)" fg:x="58" fg:w="56"/><text x="5.5565%" y="639.50">zip::w..</text></g><g><title>zip::write::write_central_directory_header (54 samples, 4.94%)</title><rect x="5.4895%" y="613" width="4.9405%" height="15" fill="rgb(236,162,54)" fg:x="60" fg:w="54"/><text x="5.7395%" y="623.50">zip::w..</text></g><g><title>std::io::Write::write_all (5 samples, 0.46%)</title><rect x="9.9726%" y="597" width="0.4575%" height="15" fill="rgb(220,229,9)" fg:x="109" fg:w="5"/><text x="10.2226%" y="607.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (5 samples, 0.46%)</title><rect x="9.9726%" y="581" width="0.4575%" height="15" fill="rgb(250,87,22)" fg:x="109" fg:w="5"/><text x="10.2226%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::write (5 samples, 0.46%)</title><rect x="9.9726%" y="565" width="0.4575%" height="15" fill="rgb(239,43,17)" fg:x="109" fg:w="5"/><text x="10.2226%" y="575.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (5 samples, 0.46%)</title><rect x="9.9726%" y="549" width="0.4575%" height="15" fill="rgb(231,177,25)" fg:x="109" fg:w="5"/><text x="10.2226%" y="559.50"></text></g><g><title>__GI___libc_write (5 samples, 0.46%)</title><rect x="9.9726%" y="533" width="0.4575%" height="15" fill="rgb(219,179,1)" fg:x="109" fg:w="5"/><text x="10.2226%" y="543.50"></text></g><g><title>__GI___libc_write (5 samples, 0.46%)</title><rect x="9.9726%" y="517" width="0.4575%" height="15" fill="rgb(238,219,53)" fg:x="109" fg:w="5"/><text x="10.2226%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.37%)</title><rect x="10.0640%" y="501" width="0.3660%" height="15" fill="rgb(232,167,36)" fg:x="110" fg:w="4"/><text x="10.3140%" y="511.50"></text></g><g><title>do_syscall_64 (4 samples, 0.37%)</title><rect x="10.0640%" y="485" width="0.3660%" height="15" fill="rgb(244,19,51)" fg:x="110" fg:w="4"/><text x="10.3140%" y="495.50"></text></g><g><title>__x64_sys_write (4 samples, 0.37%)</title><rect x="10.0640%" y="469" width="0.3660%" height="15" fill="rgb(224,6,22)" fg:x="110" fg:w="4"/><text x="10.3140%" y="479.50"></text></g><g><title>ksys_write (4 samples, 0.37%)</title><rect x="10.0640%" y="453" width="0.3660%" height="15" fill="rgb(224,145,5)" fg:x="110" fg:w="4"/><text x="10.3140%" y="463.50"></text></g><g><title>vfs_write (4 samples, 0.37%)</title><rect x="10.0640%" y="437" width="0.3660%" height="15" fill="rgb(234,130,49)" fg:x="110" fg:w="4"/><text x="10.3140%" y="447.50"></text></g><g><title>new_sync_write (1 samples, 0.09%)</title><rect x="10.3385%" y="421" width="0.0915%" height="15" fill="rgb(254,6,2)" fg:x="113" fg:w="1"/><text x="10.5885%" y="431.50"></text></g><g><title>ext4_file_write_iter (1 samples, 0.09%)</title><rect x="10.3385%" y="405" width="0.0915%" height="15" fill="rgb(208,96,46)" fg:x="113" fg:w="1"/><text x="10.5885%" y="415.50"></text></g><g><title>ext4_buffered_write_iter (1 samples, 0.09%)</title><rect x="10.3385%" y="389" width="0.0915%" height="15" fill="rgb(239,3,39)" fg:x="113" fg:w="1"/><text x="10.5885%" y="399.50"></text></g><g><title>generic_perform_write (1 samples, 0.09%)</title><rect x="10.3385%" y="373" width="0.0915%" height="15" fill="rgb(233,210,1)" fg:x="113" fg:w="1"/><text x="10.5885%" y="383.50"></text></g><g><title>ext4_da_write_end (1 samples, 0.09%)</title><rect x="10.3385%" y="357" width="0.0915%" height="15" fill="rgb(244,137,37)" fg:x="113" fg:w="1"/><text x="10.5885%" y="367.50"></text></g><g><title>generic_write_end (1 samples, 0.09%)</title><rect x="10.3385%" y="341" width="0.0915%" height="15" fill="rgb(240,136,2)" fg:x="113" fg:w="1"/><text x="10.5885%" y="351.50"></text></g><g><title>__mark_inode_dirty (1 samples, 0.09%)</title><rect x="10.3385%" y="325" width="0.0915%" height="15" fill="rgb(239,18,37)" fg:x="113" fg:w="1"/><text x="10.5885%" y="335.50"></text></g><g><title>ext4_dirty_inode (1 samples, 0.09%)</title><rect x="10.3385%" y="309" width="0.0915%" height="15" fill="rgb(218,185,22)" fg:x="113" fg:w="1"/><text x="10.5885%" y="319.50"></text></g><g><title>__ext4_mark_inode_dirty (1 samples, 0.09%)</title><rect x="10.3385%" y="293" width="0.0915%" height="15" fill="rgb(225,218,4)" fg:x="113" fg:w="1"/><text x="10.5885%" y="303.50"></text></g><g><title>ext4_mark_iloc_dirty (1 samples, 0.09%)</title><rect x="10.3385%" y="277" width="0.0915%" height="15" fill="rgb(230,182,32)" fg:x="113" fg:w="1"/><text x="10.5885%" y="287.50"></text></g><g><title>ext4_do_update_inode.isra.0 (1 samples, 0.09%)</title><rect x="10.3385%" y="261" width="0.0915%" height="15" fill="rgb(242,56,43)" fg:x="113" fg:w="1"/><text x="10.5885%" y="271.50"></text></g><g><title>ext4_inode_csum_set (1 samples, 0.09%)</title><rect x="10.3385%" y="245" width="0.0915%" height="15" fill="rgb(233,99,24)" fg:x="113" fg:w="1"/><text x="10.5885%" y="255.50"></text></g><g><title>ext4_inode_csum (1 samples, 0.09%)</title><rect x="10.3385%" y="229" width="0.0915%" height="15" fill="rgb(234,209,42)" fg:x="113" fg:w="1"/><text x="10.5885%" y="239.50"></text></g><g><title>crypto_shash_update (1 samples, 0.09%)</title><rect x="10.3385%" y="213" width="0.0915%" height="15" fill="rgb(227,7,12)" fg:x="113" fg:w="1"/><text x="10.5885%" y="223.50"></text></g><g><title>crc32c_pcl_intel_update (1 samples, 0.09%)</title><rect x="10.3385%" y="197" width="0.0915%" height="15" fill="rgb(245,203,43)" fg:x="113" fg:w="1"/><text x="10.5885%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::parser::MsgBluePrint&gt;&gt; (1 samples, 0.09%)</title><rect x="10.4300%" y="677" width="0.0915%" height="15" fill="rgb(238,205,33)" fg:x="114" fg:w="1"/><text x="10.6800%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;demoparser::parsing::parser::MsgBluePrint&gt;&gt; (1 samples, 0.09%)</title><rect x="10.4300%" y="661" width="0.0915%" height="15" fill="rgb(231,56,7)" fg:x="114" fg:w="1"/><text x="10.6800%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="10.4300%" y="645" width="0.0915%" height="15" fill="rgb(244,186,29)" fg:x="114" fg:w="1"/><text x="10.6800%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.09%)</title><rect x="10.4300%" y="629" width="0.0915%" height="15" fill="rgb(234,111,31)" fg:x="114" fg:w="1"/><text x="10.6800%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.09%)</title><rect x="10.4300%" y="613" width="0.0915%" height="15" fill="rgb(241,149,10)" fg:x="114" fg:w="1"/><text x="10.6800%" y="623.50"></text></g><g><title>__GI___libc_free (1 samples, 0.09%)</title><rect x="10.4300%" y="597" width="0.0915%" height="15" fill="rgb(249,206,44)" fg:x="114" fg:w="1"/><text x="10.6800%" y="607.50"></text></g><g><title>__GI___munmap (1 samples, 0.09%)</title><rect x="10.4300%" y="581" width="0.0915%" height="15" fill="rgb(251,153,30)" fg:x="114" fg:w="1"/><text x="10.6800%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="10.4300%" y="565" width="0.0915%" height="15" fill="rgb(239,152,38)" fg:x="114" fg:w="1"/><text x="10.6800%" y="575.50"></text></g><g><title>do_syscall_64 (1 samples, 0.09%)</title><rect x="10.4300%" y="549" width="0.0915%" height="15" fill="rgb(249,139,47)" fg:x="114" fg:w="1"/><text x="10.6800%" y="559.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.09%)</title><rect x="10.4300%" y="533" width="0.0915%" height="15" fill="rgb(244,64,35)" fg:x="114" fg:w="1"/><text x="10.6800%" y="543.50"></text></g><g><title>__vm_munmap (1 samples, 0.09%)</title><rect x="10.4300%" y="517" width="0.0915%" height="15" fill="rgb(216,46,15)" fg:x="114" fg:w="1"/><text x="10.6800%" y="527.50"></text></g><g><title>__do_munmap (1 samples, 0.09%)</title><rect x="10.4300%" y="501" width="0.0915%" height="15" fill="rgb(250,74,19)" fg:x="114" fg:w="1"/><text x="10.6800%" y="511.50"></text></g><g><title>unmap_region (1 samples, 0.09%)</title><rect x="10.4300%" y="485" width="0.0915%" height="15" fill="rgb(249,42,33)" fg:x="114" fg:w="1"/><text x="10.6800%" y="495.50"></text></g><g><title>unmap_vmas (1 samples, 0.09%)</title><rect x="10.4300%" y="469" width="0.0915%" height="15" fill="rgb(242,149,17)" fg:x="114" fg:w="1"/><text x="10.6800%" y="479.50"></text></g><g><title>unmap_single_vma (1 samples, 0.09%)</title><rect x="10.4300%" y="453" width="0.0915%" height="15" fill="rgb(244,29,21)" fg:x="114" fg:w="1"/><text x="10.6800%" y="463.50"></text></g><g><title>unmap_page_range (1 samples, 0.09%)</title><rect x="10.4300%" y="437" width="0.0915%" height="15" fill="rgb(220,130,37)" fg:x="114" fg:w="1"/><text x="10.6800%" y="447.50"></text></g><g><title>zap_pmd_range.isra.0 (1 samples, 0.09%)</title><rect x="10.4300%" y="421" width="0.0915%" height="15" fill="rgb(211,67,2)" fg:x="114" fg:w="1"/><text x="10.6800%" y="431.50"></text></g><g><title>zap_pte_range (1 samples, 0.09%)</title><rect x="10.4300%" y="405" width="0.0915%" height="15" fill="rgb(235,68,52)" fg:x="114" fg:w="1"/><text x="10.6800%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as zip::cp437::FromCp437&gt;::from_cp437 (1 samples, 0.09%)</title><rect x="10.5215%" y="613" width="0.0915%" height="15" fill="rgb(246,142,3)" fg:x="115" fg:w="1"/><text x="10.7715%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (1 samples, 0.09%)</title><rect x="10.5215%" y="597" width="0.0915%" height="15" fill="rgb(241,25,7)" fg:x="115" fg:w="1"/><text x="10.7715%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="10.5215%" y="581" width="0.0915%" height="15" fill="rgb(242,119,39)" fg:x="115" fg:w="1"/><text x="10.7715%" y="591.50"></text></g><g><title>__x64_sys_read (3 samples, 0.27%)</title><rect x="10.6130%" y="453" width="0.2745%" height="15" fill="rgb(241,98,45)" fg:x="116" fg:w="3"/><text x="10.8630%" y="463.50"></text></g><g><title>ksys_read (3 samples, 0.27%)</title><rect x="10.6130%" y="437" width="0.2745%" height="15" fill="rgb(254,28,30)" fg:x="116" fg:w="3"/><text x="10.8630%" y="447.50"></text></g><g><title>vfs_read (3 samples, 0.27%)</title><rect x="10.6130%" y="421" width="0.2745%" height="15" fill="rgb(241,142,54)" fg:x="116" fg:w="3"/><text x="10.8630%" y="431.50"></text></g><g><title>new_sync_read (3 samples, 0.27%)</title><rect x="10.6130%" y="405" width="0.2745%" height="15" fill="rgb(222,85,15)" fg:x="116" fg:w="3"/><text x="10.8630%" y="415.50"></text></g><g><title>ext4_file_read_iter (1 samples, 0.09%)</title><rect x="10.7960%" y="389" width="0.0915%" height="15" fill="rgb(210,85,47)" fg:x="118" fg:w="1"/><text x="11.0460%" y="399.50"></text></g><g><title>generic_file_read_iter (1 samples, 0.09%)</title><rect x="10.7960%" y="373" width="0.0915%" height="15" fill="rgb(224,206,25)" fg:x="118" fg:w="1"/><text x="11.0460%" y="383.50"></text></g><g><title>filemap_read (1 samples, 0.09%)</title><rect x="10.7960%" y="357" width="0.0915%" height="15" fill="rgb(243,201,19)" fg:x="118" fg:w="1"/><text x="11.0460%" y="367.50"></text></g><g><title>filemap_get_pages (1 samples, 0.09%)</title><rect x="10.7960%" y="341" width="0.0915%" height="15" fill="rgb(236,59,4)" fg:x="118" fg:w="1"/><text x="11.0460%" y="351.50"></text></g><g><title>filemap_get_read_batch (1 samples, 0.09%)</title><rect x="10.7960%" y="325" width="0.0915%" height="15" fill="rgb(254,179,45)" fg:x="118" fg:w="1"/><text x="11.0460%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.37%)</title><rect x="10.6130%" y="485" width="0.3660%" height="15" fill="rgb(226,14,10)" fg:x="116" fg:w="4"/><text x="10.8630%" y="495.50"></text></g><g><title>do_syscall_64 (4 samples, 0.37%)</title><rect x="10.6130%" y="469" width="0.3660%" height="15" fill="rgb(244,27,41)" fg:x="116" fg:w="4"/><text x="10.8630%" y="479.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.09%)</title><rect x="10.8875%" y="453" width="0.0915%" height="15" fill="rgb(235,35,32)" fg:x="119" fg:w="1"/><text x="11.1375%" y="463.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.09%)</title><rect x="10.8875%" y="437" width="0.0915%" height="15" fill="rgb(218,68,31)" fg:x="119" fg:w="1"/><text x="11.1375%" y="447.50"></text></g><g><title>byteorder::io::ReadBytesExt::read_u16 (5 samples, 0.46%)</title><rect x="10.6130%" y="613" width="0.4575%" height="15" fill="rgb(207,120,37)" fg:x="116" fg:w="5"/><text x="10.8630%" y="623.50"></text></g><g><title>std::io::Read::read_exact (5 samples, 0.46%)</title><rect x="10.6130%" y="597" width="0.4575%" height="15" fill="rgb(227,98,0)" fg:x="116" fg:w="5"/><text x="10.8630%" y="607.50"></text></g><g><title>std::io::default_read_exact (5 samples, 0.46%)</title><rect x="10.6130%" y="581" width="0.4575%" height="15" fill="rgb(207,7,3)" fg:x="116" fg:w="5"/><text x="10.8630%" y="591.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (5 samples, 0.46%)</title><rect x="10.6130%" y="565" width="0.4575%" height="15" fill="rgb(206,98,19)" fg:x="116" fg:w="5"/><text x="10.8630%" y="575.50"></text></g><g><title>std::sys::unix::fs::File::read (5 samples, 0.46%)</title><rect x="10.6130%" y="549" width="0.4575%" height="15" fill="rgb(217,5,26)" fg:x="116" fg:w="5"/><text x="10.8630%" y="559.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (5 samples, 0.46%)</title><rect x="10.6130%" y="533" width="0.4575%" height="15" fill="rgb(235,190,38)" fg:x="116" fg:w="5"/><text x="10.8630%" y="543.50"></text></g><g><title>__GI___libc_read (5 samples, 0.46%)</title><rect x="10.6130%" y="517" width="0.4575%" height="15" fill="rgb(247,86,24)" fg:x="116" fg:w="5"/><text x="10.8630%" y="527.50"></text></g><g><title>__GI___libc_read (5 samples, 0.46%)</title><rect x="10.6130%" y="501" width="0.4575%" height="15" fill="rgb(205,101,16)" fg:x="116" fg:w="5"/><text x="10.8630%" y="511.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.09%)</title><rect x="10.9790%" y="485" width="0.0915%" height="15" fill="rgb(246,168,33)" fg:x="120" fg:w="1"/><text x="11.2290%" y="495.50"></text></g><g><title>filemap_read (1 samples, 0.09%)</title><rect x="11.0704%" y="373" width="0.0915%" height="15" fill="rgb(231,114,1)" fg:x="121" fg:w="1"/><text x="11.3204%" y="383.50"></text></g><g><title>__GI___libc_read (2 samples, 0.18%)</title><rect x="11.0704%" y="517" width="0.1830%" height="15" fill="rgb(207,184,53)" fg:x="121" fg:w="2"/><text x="11.3204%" y="527.50"></text></g><g><title>__GI___libc_read (2 samples, 0.18%)</title><rect x="11.0704%" y="501" width="0.1830%" height="15" fill="rgb(224,95,51)" fg:x="121" fg:w="2"/><text x="11.3204%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.18%)</title><rect x="11.0704%" y="485" width="0.1830%" height="15" fill="rgb(212,188,45)" fg:x="121" fg:w="2"/><text x="11.3204%" y="495.50"></text></g><g><title>do_syscall_64 (2 samples, 0.18%)</title><rect x="11.0704%" y="469" width="0.1830%" height="15" fill="rgb(223,154,38)" fg:x="121" fg:w="2"/><text x="11.3204%" y="479.50"></text></g><g><title>__x64_sys_read (2 samples, 0.18%)</title><rect x="11.0704%" y="453" width="0.1830%" height="15" fill="rgb(251,22,52)" fg:x="121" fg:w="2"/><text x="11.3204%" y="463.50"></text></g><g><title>ksys_read (2 samples, 0.18%)</title><rect x="11.0704%" y="437" width="0.1830%" height="15" fill="rgb(229,209,22)" fg:x="121" fg:w="2"/><text x="11.3204%" y="447.50"></text></g><g><title>vfs_read (2 samples, 0.18%)</title><rect x="11.0704%" y="421" width="0.1830%" height="15" fill="rgb(234,138,34)" fg:x="121" fg:w="2"/><text x="11.3204%" y="431.50"></text></g><g><title>new_sync_read (2 samples, 0.18%)</title><rect x="11.0704%" y="405" width="0.1830%" height="15" fill="rgb(212,95,11)" fg:x="121" fg:w="2"/><text x="11.3204%" y="415.50"></text></g><g><title>ext4_file_read_iter (2 samples, 0.18%)</title><rect x="11.0704%" y="389" width="0.1830%" height="15" fill="rgb(240,179,47)" fg:x="121" fg:w="2"/><text x="11.3204%" y="399.50"></text></g><g><title>generic_file_read_iter (1 samples, 0.09%)</title><rect x="11.1619%" y="373" width="0.0915%" height="15" fill="rgb(240,163,11)" fg:x="122" fg:w="1"/><text x="11.4119%" y="383.50"></text></g><g><title>filemap_read (1 samples, 0.09%)</title><rect x="11.1619%" y="357" width="0.0915%" height="15" fill="rgb(236,37,12)" fg:x="122" fg:w="1"/><text x="11.4119%" y="367.50"></text></g><g><title>filemap_get_pages (1 samples, 0.09%)</title><rect x="11.1619%" y="341" width="0.0915%" height="15" fill="rgb(232,164,16)" fg:x="122" fg:w="1"/><text x="11.4119%" y="351.50"></text></g><g><title>demoparser::parsing::cache::cache_reader::ReadCache::get_cache_if_exists (9 samples, 0.82%)</title><rect x="10.5215%" y="677" width="0.8234%" height="15" fill="rgb(244,205,15)" fg:x="115" fg:w="9"/><text x="10.7715%" y="687.50"></text></g><g><title>demoparser::parsing::cache::cache_reader::ReadCache::new (9 samples, 0.82%)</title><rect x="10.5215%" y="661" width="0.8234%" height="15" fill="rgb(223,117,47)" fg:x="115" fg:w="9"/><text x="10.7715%" y="671.50"></text></g><g><title>zip::read::&lt;impl zip::read::zip_archive::ZipArchive&lt;R&gt;&gt;::new (9 samples, 0.82%)</title><rect x="10.5215%" y="645" width="0.8234%" height="15" fill="rgb(244,107,35)" fg:x="115" fg:w="9"/><text x="10.7715%" y="655.50"></text></g><g><title>zip::read::central_header_to_zip_file (9 samples, 0.82%)</title><rect x="10.5215%" y="629" width="0.8234%" height="15" fill="rgb(205,140,8)" fg:x="115" fg:w="9"/><text x="10.7715%" y="639.50"></text></g><g><title>byteorder::io::ReadBytesExt::read_u32 (3 samples, 0.27%)</title><rect x="11.0704%" y="613" width="0.2745%" height="15" fill="rgb(228,84,46)" fg:x="121" fg:w="3"/><text x="11.3204%" y="623.50"></text></g><g><title>std::io::Read::read_exact (3 samples, 0.27%)</title><rect x="11.0704%" y="597" width="0.2745%" height="15" fill="rgb(254,188,9)" fg:x="121" fg:w="3"/><text x="11.3204%" y="607.50"></text></g><g><title>std::io::default_read_exact (3 samples, 0.27%)</title><rect x="11.0704%" y="581" width="0.2745%" height="15" fill="rgb(206,112,54)" fg:x="121" fg:w="3"/><text x="11.3204%" y="591.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (3 samples, 0.27%)</title><rect x="11.0704%" y="565" width="0.2745%" height="15" fill="rgb(216,84,49)" fg:x="121" fg:w="3"/><text x="11.3204%" y="575.50"></text></g><g><title>std::sys::unix::fs::File::read (3 samples, 0.27%)</title><rect x="11.0704%" y="549" width="0.2745%" height="15" fill="rgb(214,194,35)" fg:x="121" fg:w="3"/><text x="11.3204%" y="559.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (3 samples, 0.27%)</title><rect x="11.0704%" y="533" width="0.2745%" height="15" fill="rgb(249,28,3)" fg:x="121" fg:w="3"/><text x="11.3204%" y="543.50"></text></g><g><title>std::sys::unix::cvt (1 samples, 0.09%)</title><rect x="11.2534%" y="517" width="0.0915%" height="15" fill="rgb(222,56,52)" fg:x="123" fg:w="1"/><text x="11.5034%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.09%)</title><rect x="11.3449%" y="645" width="0.0915%" height="15" fill="rgb(245,217,50)" fg:x="124" fg:w="1"/><text x="11.5949%" y="655.50"></text></g><g><title>core::ptr::write (1 samples, 0.09%)</title><rect x="11.3449%" y="629" width="0.0915%" height="15" fill="rgb(213,201,24)" fg:x="124" fg:w="1"/><text x="11.5949%" y="639.50"></text></g><g><title>demoparser::parsing::cache::cache_writer::WriteCache::new (2 samples, 0.18%)</title><rect x="11.3449%" y="677" width="0.1830%" height="15" fill="rgb(248,116,28)" fg:x="124" fg:w="2"/><text x="11.5949%" y="687.50"></text></g><g><title>demoparser::parsing::cache::cache_writer::WriteCache::filter_per_result (2 samples, 0.18%)</title><rect x="11.3449%" y="661" width="0.1830%" height="15" fill="rgb(219,72,43)" fg:x="124" fg:w="2"/><text x="11.5949%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;demoparser::parsing::parser::JobResult&gt;&gt; (1 samples, 0.09%)</title><rect x="11.4364%" y="645" width="0.0915%" height="15" fill="rgb(209,138,14)" fg:x="125" fg:w="1"/><text x="11.6864%" y="655.50"></text></g><g><title>__GI___libc_free (1 samples, 0.09%)</title><rect x="11.4364%" y="629" width="0.0915%" height="15" fill="rgb(222,18,33)" fg:x="125" fg:w="1"/><text x="11.6864%" y="639.50"></text></g><g><title>__GI___munmap (1 samples, 0.09%)</title><rect x="11.4364%" y="613" width="0.0915%" height="15" fill="rgb(213,199,7)" fg:x="125" fg:w="1"/><text x="11.6864%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="11.4364%" y="597" width="0.0915%" height="15" fill="rgb(250,110,10)" fg:x="125" fg:w="1"/><text x="11.6864%" y="607.50"></text></g><g><title>do_syscall_64 (1 samples, 0.09%)</title><rect x="11.4364%" y="581" width="0.0915%" height="15" fill="rgb(248,123,6)" fg:x="125" fg:w="1"/><text x="11.6864%" y="591.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.09%)</title><rect x="11.4364%" y="565" width="0.0915%" height="15" fill="rgb(206,91,31)" fg:x="125" fg:w="1"/><text x="11.6864%" y="575.50"></text></g><g><title>__vm_munmap (1 samples, 0.09%)</title><rect x="11.4364%" y="549" width="0.0915%" height="15" fill="rgb(211,154,13)" fg:x="125" fg:w="1"/><text x="11.6864%" y="559.50"></text></g><g><title>__do_munmap (1 samples, 0.09%)</title><rect x="11.4364%" y="533" width="0.0915%" height="15" fill="rgb(225,148,7)" fg:x="125" fg:w="1"/><text x="11.6864%" y="543.50"></text></g><g><title>unmap_region (1 samples, 0.09%)</title><rect x="11.4364%" y="517" width="0.0915%" height="15" fill="rgb(220,160,43)" fg:x="125" fg:w="1"/><text x="11.6864%" y="527.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.09%)</title><rect x="11.4364%" y="501" width="0.0915%" height="15" fill="rgb(213,52,39)" fg:x="125" fg:w="1"/><text x="11.6864%" y="511.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.09%)</title><rect x="11.4364%" y="485" width="0.0915%" height="15" fill="rgb(243,137,7)" fg:x="125" fg:w="1"/><text x="11.6864%" y="495.50"></text></g><g><title>release_pages (1 samples, 0.09%)</title><rect x="11.4364%" y="469" width="0.0915%" height="15" fill="rgb(230,79,13)" fg:x="125" fg:w="1"/><text x="11.6864%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.37%)</title><rect x="11.8939%" y="645" width="0.3660%" height="15" fill="rgb(247,105,23)" fg:x="130" fg:w="4"/><text x="12.1439%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (9 samples, 0.82%)</title><rect x="12.4428%" y="629" width="0.8234%" height="15" fill="rgb(223,179,41)" fg:x="136" fg:w="9"/><text x="12.6928%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.82%)</title><rect x="12.4428%" y="613" width="0.8234%" height="15" fill="rgb(218,9,34)" fg:x="136" fg:w="9"/><text x="12.6928%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.82%)</title><rect x="12.4428%" y="597" width="0.8234%" height="15" fill="rgb(222,106,8)" fg:x="136" fg:w="9"/><text x="12.6928%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 0.82%)</title><rect x="12.4428%" y="581" width="0.8234%" height="15" fill="rgb(211,220,0)" fg:x="136" fg:w="9"/><text x="12.6928%" y="591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 0.82%)</title><rect x="12.4428%" y="565" width="0.8234%" height="15" fill="rgb(229,52,16)" fg:x="136" fg:w="9"/><text x="12.6928%" y="575.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.82%)</title><rect x="12.4428%" y="549" width="0.8234%" height="15" fill="rgb(212,155,18)" fg:x="136" fg:w="9"/><text x="12.6928%" y="559.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.82%)</title><rect x="12.4428%" y="533" width="0.8234%" height="15" fill="rgb(242,21,14)" fg:x="136" fg:w="9"/><text x="12.6928%" y="543.50"></text></g><g><title>_int_realloc (9 samples, 0.82%)</title><rect x="12.4428%" y="517" width="0.8234%" height="15" fill="rgb(222,19,48)" fg:x="136" fg:w="9"/><text x="12.6928%" y="527.50"></text></g><g><title>[libc.so.6] (9 samples, 0.82%)</title><rect x="12.4428%" y="501" width="0.8234%" height="15" fill="rgb(232,45,27)" fg:x="136" fg:w="9"/><text x="12.6928%" y="511.50"></text></g><g><title>asm_exc_page_fault (4 samples, 0.37%)</title><rect x="12.9003%" y="485" width="0.3660%" height="15" fill="rgb(249,103,42)" fg:x="141" fg:w="4"/><text x="13.1503%" y="495.50"></text></g><g><title>exc_page_fault (1 samples, 0.09%)</title><rect x="13.1747%" y="469" width="0.0915%" height="15" fill="rgb(246,81,33)" fg:x="144" fg:w="1"/><text x="13.4247%" y="479.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.09%)</title><rect x="13.1747%" y="453" width="0.0915%" height="15" fill="rgb(252,33,42)" fg:x="144" fg:w="1"/><text x="13.4247%" y="463.50"></text></g><g><title>handle_mm_fault (1 samples, 0.09%)</title><rect x="13.1747%" y="437" width="0.0915%" height="15" fill="rgb(209,212,41)" fg:x="144" fg:w="1"/><text x="13.4247%" y="447.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="13.1747%" y="421" width="0.0915%" height="15" fill="rgb(207,154,6)" fg:x="144" fg:w="1"/><text x="13.4247%" y="431.50"></text></g><g><title>handle_pte_fault (1 samples, 0.09%)</title><rect x="13.1747%" y="405" width="0.0915%" height="15" fill="rgb(223,64,47)" fg:x="144" fg:w="1"/><text x="13.4247%" y="415.50"></text></g><g><title>do_anonymous_page (1 samples, 0.09%)</title><rect x="13.1747%" y="389" width="0.0915%" height="15" fill="rgb(211,161,38)" fg:x="144" fg:w="1"/><text x="13.4247%" y="399.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.09%)</title><rect x="13.1747%" y="373" width="0.0915%" height="15" fill="rgb(219,138,40)" fg:x="144" fg:w="1"/><text x="13.4247%" y="383.50"></text></g><g><title>__alloc_pages (1 samples, 0.09%)</title><rect x="13.1747%" y="357" width="0.0915%" height="15" fill="rgb(241,228,46)" fg:x="144" fg:w="1"/><text x="13.4247%" y="367.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.09%)</title><rect x="13.1747%" y="341" width="0.0915%" height="15" fill="rgb(223,209,38)" fg:x="144" fg:w="1"/><text x="13.4247%" y="351.50"></text></g><g><title>clear_page_erms (1 samples, 0.09%)</title><rect x="13.1747%" y="325" width="0.0915%" height="15" fill="rgb(236,164,45)" fg:x="144" fg:w="1"/><text x="13.4247%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (3 samples, 0.27%)</title><rect x="13.2662%" y="629" width="0.2745%" height="15" fill="rgb(231,15,5)" fg:x="145" fg:w="3"/><text x="13.5162%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (3 samples, 0.27%)</title><rect x="13.2662%" y="613" width="0.2745%" height="15" fill="rgb(252,35,15)" fg:x="145" fg:w="3"/><text x="13.5162%" y="623.50"></text></g><g><title>charge_memcg (1 samples, 0.09%)</title><rect x="14.0897%" y="485" width="0.0915%" height="15" fill="rgb(248,181,18)" fg:x="154" fg:w="1"/><text x="14.3397%" y="495.50"></text></g><g><title>try_charge_memcg (1 samples, 0.09%)</title><rect x="14.0897%" y="469" width="0.0915%" height="15" fill="rgb(233,39,42)" fg:x="154" fg:w="1"/><text x="14.3397%" y="479.50"></text></g><g><title>propagate_protected_usage (1 samples, 0.09%)</title><rect x="14.0897%" y="453" width="0.0915%" height="15" fill="rgb(238,110,33)" fg:x="154" fg:w="1"/><text x="14.3397%" y="463.50"></text></g><g><title>__mem_cgroup_charge (2 samples, 0.18%)</title><rect x="14.0897%" y="501" width="0.1830%" height="15" fill="rgb(233,195,10)" fg:x="154" fg:w="2"/><text x="14.3397%" y="511.50"></text></g><g><title>try_charge_memcg (1 samples, 0.09%)</title><rect x="14.1812%" y="485" width="0.0915%" height="15" fill="rgb(254,105,3)" fg:x="155" fg:w="1"/><text x="14.4312%" y="495.50"></text></g><g><title>clear_page_erms (8 samples, 0.73%)</title><rect x="14.3641%" y="453" width="0.7319%" height="15" fill="rgb(221,225,9)" fg:x="157" fg:w="8"/><text x="14.6141%" y="463.50"></text></g><g><title>alloc_pages_vma (12 samples, 1.10%)</title><rect x="14.2726%" y="501" width="1.0979%" height="15" fill="rgb(224,227,45)" fg:x="156" fg:w="12"/><text x="14.5226%" y="511.50"></text></g><g><title>__alloc_pages (12 samples, 1.10%)</title><rect x="14.2726%" y="485" width="1.0979%" height="15" fill="rgb(229,198,43)" fg:x="156" fg:w="12"/><text x="14.5226%" y="495.50"></text></g><g><title>get_page_from_freelist (12 samples, 1.10%)</title><rect x="14.2726%" y="469" width="1.0979%" height="15" fill="rgb(206,209,35)" fg:x="156" fg:w="12"/><text x="14.5226%" y="479.50"></text></g><g><title>rmqueue (3 samples, 0.27%)</title><rect x="15.0961%" y="453" width="0.2745%" height="15" fill="rgb(245,195,53)" fg:x="165" fg:w="3"/><text x="15.3461%" y="463.50"></text></g><g><title>rmqueue_bulk (2 samples, 0.18%)</title><rect x="15.1876%" y="437" width="0.1830%" height="15" fill="rgb(240,92,26)" fg:x="166" fg:w="2"/><text x="15.4376%" y="447.50"></text></g><g><title>asm_exc_page_fault (21 samples, 1.92%)</title><rect x="13.7237%" y="613" width="1.9213%" height="15" fill="rgb(207,40,23)" fg:x="150" fg:w="21"/><text x="13.9737%" y="623.50">a..</text></g><g><title>exc_page_fault (17 samples, 1.56%)</title><rect x="14.0897%" y="597" width="1.5554%" height="15" fill="rgb(223,111,35)" fg:x="154" fg:w="17"/><text x="14.3397%" y="607.50"></text></g><g><title>do_user_addr_fault (17 samples, 1.56%)</title><rect x="14.0897%" y="581" width="1.5554%" height="15" fill="rgb(229,147,28)" fg:x="154" fg:w="17"/><text x="14.3397%" y="591.50"></text></g><g><title>handle_mm_fault (17 samples, 1.56%)</title><rect x="14.0897%" y="565" width="1.5554%" height="15" fill="rgb(211,29,28)" fg:x="154" fg:w="17"/><text x="14.3397%" y="575.50"></text></g><g><title>__handle_mm_fault (17 samples, 1.56%)</title><rect x="14.0897%" y="549" width="1.5554%" height="15" fill="rgb(228,72,33)" fg:x="154" fg:w="17"/><text x="14.3397%" y="559.50"></text></g><g><title>handle_pte_fault (17 samples, 1.56%)</title><rect x="14.0897%" y="533" width="1.5554%" height="15" fill="rgb(205,214,31)" fg:x="154" fg:w="17"/><text x="14.3397%" y="543.50"></text></g><g><title>do_anonymous_page (17 samples, 1.56%)</title><rect x="14.0897%" y="517" width="1.5554%" height="15" fill="rgb(224,111,15)" fg:x="154" fg:w="17"/><text x="14.3397%" y="527.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (3 samples, 0.27%)</title><rect x="15.3705%" y="501" width="0.2745%" height="15" fill="rgb(253,21,26)" fg:x="168" fg:w="3"/><text x="15.6205%" y="511.50"></text></g><g><title>lru_cache_add (3 samples, 0.27%)</title><rect x="15.3705%" y="485" width="0.2745%" height="15" fill="rgb(245,139,43)" fg:x="168" fg:w="3"/><text x="15.6205%" y="495.50"></text></g><g><title>__pagevec_lru_add (3 samples, 0.27%)</title><rect x="15.3705%" y="469" width="0.2745%" height="15" fill="rgb(252,170,7)" fg:x="168" fg:w="3"/><text x="15.6205%" y="479.50"></text></g><g><title>__pagevec_lru_add_fn (3 samples, 0.27%)</title><rect x="15.3705%" y="453" width="0.2745%" height="15" fill="rgb(231,118,14)" fg:x="168" fg:w="3"/><text x="15.6205%" y="463.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.09%)</title><rect x="15.5535%" y="437" width="0.0915%" height="15" fill="rgb(238,83,0)" fg:x="170" fg:w="1"/><text x="15.8035%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (39 samples, 3.57%)</title><rect x="12.2598%" y="645" width="3.5682%" height="15" fill="rgb(221,39,39)" fg:x="134" fg:w="39"/><text x="12.5098%" y="655.50">allo..</text></g><g><title>core::ptr::write (25 samples, 2.29%)</title><rect x="13.5407%" y="629" width="2.2873%" height="15" fill="rgb(222,119,46)" fg:x="148" fg:w="25"/><text x="13.7907%" y="639.50">c..</text></g><g><title>sync_regs (2 samples, 0.18%)</title><rect x="15.6450%" y="613" width="0.1830%" height="15" fill="rgb(222,165,49)" fg:x="171" fg:w="2"/><text x="15.8950%" y="623.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.09%)</title><rect x="15.8280%" y="373" width="0.0915%" height="15" fill="rgb(219,113,52)" fg:x="173" fg:w="1"/><text x="16.0780%" y="383.50"></text></g><g><title>page_remove_rmap (2 samples, 0.18%)</title><rect x="15.9195%" y="357" width="0.1830%" height="15" fill="rgb(214,7,15)" fg:x="174" fg:w="2"/><text x="16.1695%" y="367.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.09%)</title><rect x="16.0110%" y="341" width="0.0915%" height="15" fill="rgb(235,32,4)" fg:x="175" fg:w="1"/><text x="16.2610%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::cache::cache_writer::CacheEntry&gt;&gt; (4 samples, 0.37%)</title><rect x="15.8280%" y="645" width="0.3660%" height="15" fill="rgb(238,90,54)" fg:x="173" fg:w="4"/><text x="16.0780%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;demoparser::parsing::cache::cache_writer::CacheEntry&gt;&gt; (4 samples, 0.37%)</title><rect x="15.8280%" y="629" width="0.3660%" height="15" fill="rgb(213,208,19)" fg:x="173" fg:w="4"/><text x="16.0780%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.37%)</title><rect x="15.8280%" y="613" width="0.3660%" height="15" fill="rgb(233,156,4)" fg:x="173" fg:w="4"/><text x="16.0780%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.37%)</title><rect x="15.8280%" y="597" width="0.3660%" height="15" fill="rgb(207,194,5)" fg:x="173" fg:w="4"/><text x="16.0780%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.37%)</title><rect x="15.8280%" y="581" width="0.3660%" height="15" fill="rgb(206,111,30)" fg:x="173" fg:w="4"/><text x="16.0780%" y="591.50"></text></g><g><title>__GI___libc_free (4 samples, 0.37%)</title><rect x="15.8280%" y="565" width="0.3660%" height="15" fill="rgb(243,70,54)" fg:x="173" fg:w="4"/><text x="16.0780%" y="575.50"></text></g><g><title>__GI___munmap (4 samples, 0.37%)</title><rect x="15.8280%" y="549" width="0.3660%" height="15" fill="rgb(242,28,8)" fg:x="173" fg:w="4"/><text x="16.0780%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.37%)</title><rect x="15.8280%" y="533" width="0.3660%" height="15" fill="rgb(219,106,18)" fg:x="173" fg:w="4"/><text x="16.0780%" y="543.50"></text></g><g><title>do_syscall_64 (4 samples, 0.37%)</title><rect x="15.8280%" y="517" width="0.3660%" height="15" fill="rgb(244,222,10)" fg:x="173" fg:w="4"/><text x="16.0780%" y="527.50"></text></g><g><title>__x64_sys_munmap (4 samples, 0.37%)</title><rect x="15.8280%" y="501" width="0.3660%" height="15" fill="rgb(236,179,52)" fg:x="173" fg:w="4"/><text x="16.0780%" y="511.50"></text></g><g><title>__vm_munmap (4 samples, 0.37%)</title><rect x="15.8280%" y="485" width="0.3660%" height="15" fill="rgb(213,23,39)" fg:x="173" fg:w="4"/><text x="16.0780%" y="495.50"></text></g><g><title>__do_munmap (4 samples, 0.37%)</title><rect x="15.8280%" y="469" width="0.3660%" height="15" fill="rgb(238,48,10)" fg:x="173" fg:w="4"/><text x="16.0780%" y="479.50"></text></g><g><title>unmap_region (4 samples, 0.37%)</title><rect x="15.8280%" y="453" width="0.3660%" height="15" fill="rgb(251,196,23)" fg:x="173" fg:w="4"/><text x="16.0780%" y="463.50"></text></g><g><title>unmap_vmas (4 samples, 0.37%)</title><rect x="15.8280%" y="437" width="0.3660%" height="15" fill="rgb(250,152,24)" fg:x="173" fg:w="4"/><text x="16.0780%" y="447.50"></text></g><g><title>unmap_single_vma (4 samples, 0.37%)</title><rect x="15.8280%" y="421" width="0.3660%" height="15" fill="rgb(209,150,17)" fg:x="173" fg:w="4"/><text x="16.0780%" y="431.50"></text></g><g><title>unmap_page_range (4 samples, 0.37%)</title><rect x="15.8280%" y="405" width="0.3660%" height="15" fill="rgb(234,202,34)" fg:x="173" fg:w="4"/><text x="16.0780%" y="415.50"></text></g><g><title>zap_pmd_range.isra.0 (4 samples, 0.37%)</title><rect x="15.8280%" y="389" width="0.3660%" height="15" fill="rgb(253,148,53)" fg:x="173" fg:w="4"/><text x="16.0780%" y="399.50"></text></g><g><title>zap_pte_range (3 samples, 0.27%)</title><rect x="15.9195%" y="373" width="0.2745%" height="15" fill="rgb(218,129,16)" fg:x="174" fg:w="3"/><text x="16.1695%" y="383.50"></text></g><g><title>tlb_flush_mmu (1 samples, 0.09%)</title><rect x="16.1025%" y="357" width="0.0915%" height="15" fill="rgb(216,85,19)" fg:x="176" fg:w="1"/><text x="16.3525%" y="367.50"></text></g><g><title>free_swap_cache (1 samples, 0.09%)</title><rect x="16.1025%" y="341" width="0.0915%" height="15" fill="rgb(235,228,7)" fg:x="176" fg:w="1"/><text x="16.3525%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (28 samples, 2.56%)</title><rect x="16.1940%" y="645" width="2.5618%" height="15" fill="rgb(245,175,0)" fg:x="177" fg:w="28"/><text x="16.4440%" y="655.50">co..</text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (28 samples, 2.56%)</title><rect x="16.1940%" y="629" width="2.5618%" height="15" fill="rgb(208,168,36)" fg:x="177" fg:w="28"/><text x="16.4440%" y="639.50">&lt;T..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (28 samples, 2.56%)</title><rect x="16.1940%" y="613" width="2.5618%" height="15" fill="rgb(246,171,24)" fg:x="177" fg:w="28"/><text x="16.4440%" y="623.50">&lt;c..</text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (4 samples, 0.37%)</title><rect x="18.3898%" y="597" width="0.3660%" height="15" fill="rgb(215,142,24)" fg:x="201" fg:w="4"/><text x="18.6398%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for i32&gt;::eq (4 samples, 0.37%)</title><rect x="18.3898%" y="581" width="0.3660%" height="15" fill="rgb(250,187,7)" fg:x="201" fg:w="4"/><text x="18.6398%" y="591.50"></text></g><g><title>demoparser::parsing::cache::cache_writer::WriteCache::to_str_name_player_prop (1 samples, 0.09%)</title><rect x="18.7557%" y="645" width="0.0915%" height="15" fill="rgb(228,66,33)" fg:x="205" fg:w="1"/><text x="19.0057%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::ops::arith::Add&lt;&amp;str&gt;&gt;::add (1 samples, 0.09%)</title><rect x="18.7557%" y="629" width="0.0915%" height="15" fill="rgb(234,215,21)" fg:x="205" fg:w="1"/><text x="19.0057%" y="639.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.09%)</title><rect x="18.7557%" y="613" width="0.0915%" height="15" fill="rgb(222,191,20)" fg:x="205" fg:w="1"/><text x="19.0057%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.09%)</title><rect x="18.7557%" y="597" width="0.0915%" height="15" fill="rgb(245,79,54)" fg:x="205" fg:w="1"/><text x="19.0057%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.09%)</title><rect x="18.7557%" y="581" width="0.0915%" height="15" fill="rgb(240,10,37)" fg:x="205" fg:w="1"/><text x="19.0057%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.09%)</title><rect x="18.7557%" y="565" width="0.0915%" height="15" fill="rgb(214,192,32)" fg:x="205" fg:w="1"/><text x="19.0057%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.09%)</title><rect x="18.7557%" y="549" width="0.0915%" height="15" fill="rgb(209,36,54)" fg:x="205" fg:w="1"/><text x="19.0057%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.09%)</title><rect x="18.7557%" y="533" width="0.0915%" height="15" fill="rgb(220,10,11)" fg:x="205" fg:w="1"/><text x="19.0057%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.09%)</title><rect x="18.7557%" y="517" width="0.0915%" height="15" fill="rgb(221,106,17)" fg:x="205" fg:w="1"/><text x="19.0057%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.09%)</title><rect x="18.7557%" y="501" width="0.0915%" height="15" fill="rgb(251,142,44)" fg:x="205" fg:w="1"/><text x="19.0057%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.09%)</title><rect x="18.7557%" y="485" width="0.0915%" height="15" fill="rgb(238,13,15)" fg:x="205" fg:w="1"/><text x="19.0057%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.09%)</title><rect x="18.7557%" y="469" width="0.0915%" height="15" fill="rgb(208,107,27)" fg:x="205" fg:w="1"/><text x="19.0057%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.09%)</title><rect x="18.7557%" y="453" width="0.0915%" height="15" fill="rgb(205,136,37)" fg:x="205" fg:w="1"/><text x="19.0057%" y="463.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.09%)</title><rect x="18.7557%" y="437" width="0.0915%" height="15" fill="rgb(250,205,27)" fg:x="205" fg:w="1"/><text x="19.0057%" y="447.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.09%)</title><rect x="18.7557%" y="421" width="0.0915%" height="15" fill="rgb(210,80,43)" fg:x="205" fg:w="1"/><text x="19.0057%" y="431.50"></text></g><g><title>_int_realloc (1 samples, 0.09%)</title><rect x="18.7557%" y="405" width="0.0915%" height="15" fill="rgb(247,160,36)" fg:x="205" fg:w="1"/><text x="19.0057%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.09%)</title><rect x="18.9387%" y="565" width="0.0915%" height="15" fill="rgb(234,13,49)" fg:x="207" fg:w="1"/><text x="19.1887%" y="575.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.09%)</title><rect x="18.9387%" y="549" width="0.0915%" height="15" fill="rgb(234,122,0)" fg:x="207" fg:w="1"/><text x="19.1887%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.18%)</title><rect x="18.9387%" y="597" width="0.1830%" height="15" fill="rgb(207,146,38)" fg:x="207" fg:w="2"/><text x="19.1887%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.18%)</title><rect x="18.9387%" y="581" width="0.1830%" height="15" fill="rgb(207,177,25)" fg:x="207" fg:w="2"/><text x="19.1887%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.09%)</title><rect x="19.0302%" y="565" width="0.0915%" height="15" fill="rgb(211,178,42)" fg:x="208" fg:w="1"/><text x="19.2802%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.09%)</title><rect x="19.0302%" y="549" width="0.0915%" height="15" fill="rgb(230,69,54)" fg:x="208" fg:w="1"/><text x="19.2802%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.09%)</title><rect x="19.0302%" y="533" width="0.0915%" height="15" fill="rgb(214,135,41)" fg:x="208" fg:w="1"/><text x="19.2802%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.09%)</title><rect x="19.0302%" y="517" width="0.0915%" height="15" fill="rgb(237,67,25)" fg:x="208" fg:w="1"/><text x="19.2802%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.09%)</title><rect x="19.0302%" y="501" width="0.0915%" height="15" fill="rgb(222,189,50)" fg:x="208" fg:w="1"/><text x="19.2802%" y="511.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.09%)</title><rect x="19.0302%" y="485" width="0.0915%" height="15" fill="rgb(245,148,34)" fg:x="208" fg:w="1"/><text x="19.2802%" y="495.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.09%)</title><rect x="19.0302%" y="469" width="0.0915%" height="15" fill="rgb(222,29,6)" fg:x="208" fg:w="1"/><text x="19.2802%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (12 samples, 1.10%)</title><rect x="21.6834%" y="469" width="1.0979%" height="15" fill="rgb(221,189,43)" fg:x="237" fg:w="12"/><text x="21.9334%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (12 samples, 1.10%)</title><rect x="21.6834%" y="453" width="1.0979%" height="15" fill="rgb(207,36,27)" fg:x="237" fg:w="12"/><text x="21.9334%" y="463.50"></text></g><g><title>core::ptr::write (12 samples, 1.10%)</title><rect x="21.6834%" y="437" width="1.0979%" height="15" fill="rgb(217,90,24)" fg:x="237" fg:w="12"/><text x="21.9334%" y="447.50"></text></g><g><title>&lt;core::const_closure::ConstFnMutClosure&lt;&amp;mut A,Function&gt; as core::ops::function::FnMut&lt;ClosureArguments&gt;&gt;::call_mut (17 samples, 1.56%)</title><rect x="21.6834%" y="533" width="1.5554%" height="15" fill="rgb(224,66,35)" fg:x="237" fg:w="17"/><text x="21.9334%" y="543.50"></text></g><g><title>core::ops::function::Fn::call (17 samples, 1.56%)</title><rect x="21.6834%" y="517" width="1.5554%" height="15" fill="rgb(221,13,50)" fg:x="237" fg:w="17"/><text x="21.9334%" y="527.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2_imp (17 samples, 1.56%)</title><rect x="21.6834%" y="501" width="1.5554%" height="15" fill="rgb(236,68,49)" fg:x="237" fg:w="17"/><text x="21.9334%" y="511.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (17 samples, 1.56%)</title><rect x="21.6834%" y="485" width="1.5554%" height="15" fill="rgb(229,146,28)" fg:x="237" fg:w="17"/><text x="21.9334%" y="495.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (5 samples, 0.46%)</title><rect x="22.7813%" y="469" width="0.4575%" height="15" fill="rgb(225,31,38)" fg:x="249" fg:w="5"/><text x="23.0313%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (5 samples, 0.46%)</title><rect x="22.7813%" y="453" width="0.4575%" height="15" fill="rgb(250,208,3)" fg:x="249" fg:w="5"/><text x="23.0313%" y="463.50"></text></g><g><title>core::ptr::read (5 samples, 0.46%)</title><rect x="22.7813%" y="437" width="0.4575%" height="15" fill="rgb(246,54,23)" fg:x="249" fg:w="5"/><text x="23.0313%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (49 samples, 4.48%)</title><rect x="18.9387%" y="629" width="4.4831%" height="15" fill="rgb(243,76,11)" fg:x="207" fg:w="49"/><text x="19.1887%" y="639.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (49 samples, 4.48%)</title><rect x="18.9387%" y="613" width="4.4831%" height="15" fill="rgb(245,21,50)" fg:x="207" fg:w="49"/><text x="19.1887%" y="623.50">&lt;allo..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (47 samples, 4.30%)</title><rect x="19.1217%" y="597" width="4.3001%" height="15" fill="rgb(228,9,43)" fg:x="209" fg:w="47"/><text x="19.3717%" y="607.50">core:..</text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 1.74%)</title><rect x="21.6834%" y="581" width="1.7383%" height="15" fill="rgb(208,100,47)" fg:x="237" fg:w="19"/><text x="21.9334%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::by_ref_sized::ByRefSized&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 1.74%)</title><rect x="21.6834%" y="565" width="1.7383%" height="15" fill="rgb(232,26,8)" fg:x="237" fg:w="19"/><text x="21.9334%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (19 samples, 1.74%)</title><rect x="21.6834%" y="549" width="1.7383%" height="15" fill="rgb(216,166,38)" fg:x="237" fg:w="19"/><text x="21.9334%" y="559.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.18%)</title><rect x="23.2388%" y="533" width="0.1830%" height="15" fill="rgb(251,202,51)" fg:x="254" fg:w="2"/><text x="23.4888%" y="543.50"></text></g><g><title>&lt;u128 as ahash::convert::Convert&lt;[u64: 2]&gt;&gt;::convert (3 samples, 0.27%)</title><rect x="30.9241%" y="485" width="0.2745%" height="15" fill="rgb(254,216,34)" fg:x="338" fg:w="3"/><text x="31.1741%" y="495.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::finish (11 samples, 1.01%)</title><rect x="30.9241%" y="501" width="1.0064%" height="15" fill="rgb(251,32,27)" fg:x="338" fg:w="11"/><text x="31.1741%" y="511.50"></text></g><g><title>ahash::operations::aesenc (8 samples, 0.73%)</title><rect x="31.1985%" y="485" width="0.7319%" height="15" fill="rgb(208,127,28)" fg:x="341" fg:w="8"/><text x="31.4485%" y="495.50"></text></g><g><title>core::core_arch::x86::aes::_mm_aesenc_si128 (8 samples, 0.73%)</title><rect x="31.1985%" y="469" width="0.7319%" height="15" fill="rgb(224,137,22)" fg:x="341" fg:w="8"/><text x="31.4485%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (97 samples, 8.87%)</title><rect x="23.4218%" y="565" width="8.8747%" height="15" fill="rgb(254,70,32)" fg:x="256" fg:w="97"/><text x="23.6718%" y="575.50">hashbrown::ma..</text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::hash_one (15 samples, 1.37%)</title><rect x="30.9241%" y="549" width="1.3724%" height="15" fill="rgb(229,75,37)" fg:x="338" fg:w="15"/><text x="31.1741%" y="559.50"></text></g><g><title>ahash::random_state::RandomState::hash_one (15 samples, 1.37%)</title><rect x="30.9241%" y="533" width="1.3724%" height="15" fill="rgb(252,64,23)" fg:x="338" fg:w="15"/><text x="31.1741%" y="543.50"></text></g><g><title>&lt;T as ahash::specialize::CallHasher&gt;::get_hash (15 samples, 1.37%)</title><rect x="30.9241%" y="517" width="1.3724%" height="15" fill="rgb(232,162,48)" fg:x="338" fg:w="15"/><text x="31.1741%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.37%)</title><rect x="31.9305%" y="501" width="0.3660%" height="15" fill="rgb(246,160,12)" fg:x="349" fg:w="4"/><text x="32.1805%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (4 samples, 0.37%)</title><rect x="31.9305%" y="485" width="0.3660%" height="15" fill="rgb(247,166,0)" fg:x="349" fg:w="4"/><text x="32.1805%" y="495.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::write_u64 (4 samples, 0.37%)</title><rect x="31.9305%" y="469" width="0.3660%" height="15" fill="rgb(249,219,21)" fg:x="349" fg:w="4"/><text x="32.1805%" y="479.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::write_u128 (4 samples, 0.37%)</title><rect x="31.9305%" y="453" width="0.3660%" height="15" fill="rgb(205,209,3)" fg:x="349" fg:w="4"/><text x="32.1805%" y="463.50"></text></g><g><title>ahash::aes_hash::AHasher::hash_in (4 samples, 0.37%)</title><rect x="31.9305%" y="437" width="0.3660%" height="15" fill="rgb(243,44,1)" fg:x="349" fg:w="4"/><text x="32.1805%" y="447.50"></text></g><g><title>ahash::operations::shuffle_and_add (4 samples, 0.37%)</title><rect x="31.9305%" y="421" width="0.3660%" height="15" fill="rgb(206,159,16)" fg:x="349" fg:w="4"/><text x="32.1805%" y="431.50"></text></g><g><title>ahash::operations::add_by_64s (4 samples, 0.37%)</title><rect x="31.9305%" y="405" width="0.3660%" height="15" fill="rgb(244,77,30)" fg:x="349" fg:w="4"/><text x="32.1805%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi64 (4 samples, 0.37%)</title><rect x="31.9305%" y="389" width="0.3660%" height="15" fill="rgb(218,69,12)" fg:x="349" fg:w="4"/><text x="32.1805%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="34.4922%" y="517" width="0.0915%" height="15" fill="rgb(212,87,7)" fg:x="377" fg:w="1"/><text x="34.7422%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (3 samples, 0.27%)</title><rect x="34.5837%" y="517" width="0.2745%" height="15" fill="rgb(245,114,25)" fg:x="378" fg:w="3"/><text x="34.8337%" y="527.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (3 samples, 0.27%)</title><rect x="34.5837%" y="501" width="0.2745%" height="15" fill="rgb(210,61,42)" fg:x="378" fg:w="3"/><text x="34.8337%" y="511.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (3 samples, 0.27%)</title><rect x="34.5837%" y="485" width="0.2745%" height="15" fill="rgb(211,52,33)" fg:x="378" fg:w="3"/><text x="34.8337%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (3 samples, 0.27%)</title><rect x="34.5837%" y="469" width="0.2745%" height="15" fill="rgb(234,58,33)" fg:x="378" fg:w="3"/><text x="34.8337%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.27%)</title><rect x="34.5837%" y="453" width="0.2745%" height="15" fill="rgb(220,115,36)" fg:x="378" fg:w="3"/><text x="34.8337%" y="463.50"></text></g><g><title>hashbrown::raw::h2 (6 samples, 0.55%)</title><rect x="34.8582%" y="517" width="0.5489%" height="15" fill="rgb(243,153,54)" fg:x="381" fg:w="6"/><text x="35.1082%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (140 samples, 12.81%)</title><rect x="23.4218%" y="629" width="12.8088%" height="15" fill="rgb(251,47,18)" fg:x="256" fg:w="140"/><text x="23.6718%" y="639.50">&lt;std::collections::..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (140 samples, 12.81%)</title><rect x="23.4218%" y="613" width="12.8088%" height="15" fill="rgb(242,102,42)" fg:x="256" fg:w="140"/><text x="23.6718%" y="623.50">std::collections::h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (140 samples, 12.81%)</title><rect x="23.4218%" y="597" width="12.8088%" height="15" fill="rgb(234,31,38)" fg:x="256" fg:w="140"/><text x="23.6718%" y="607.50">hashbrown::map::Has..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (140 samples, 12.81%)</title><rect x="23.4218%" y="581" width="12.8088%" height="15" fill="rgb(221,117,51)" fg:x="256" fg:w="140"/><text x="23.6718%" y="591.50">hashbrown::map::Has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (43 samples, 3.93%)</title><rect x="32.2964%" y="565" width="3.9341%" height="15" fill="rgb(212,20,18)" fg:x="353" fg:w="43"/><text x="32.5464%" y="575.50">hash..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (43 samples, 3.93%)</title><rect x="32.2964%" y="549" width="3.9341%" height="15" fill="rgb(245,133,36)" fg:x="353" fg:w="43"/><text x="32.5464%" y="559.50">hash..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (43 samples, 3.93%)</title><rect x="32.2964%" y="533" width="3.9341%" height="15" fill="rgb(212,6,19)" fg:x="353" fg:w="43"/><text x="32.5464%" y="543.50">hash..</text></g><g><title>hashbrown::raw::sse2::Group::match_byte (9 samples, 0.82%)</title><rect x="35.4071%" y="517" width="0.8234%" height="15" fill="rgb(218,1,36)" fg:x="387" fg:w="9"/><text x="35.6571%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (9 samples, 0.82%)</title><rect x="35.4071%" y="501" width="0.8234%" height="15" fill="rgb(246,84,54)" fg:x="387" fg:w="9"/><text x="35.6571%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (72 samples, 6.59%)</title><rect x="36.2306%" y="629" width="6.5874%" height="15" fill="rgb(242,110,6)" fg:x="396" fg:w="72"/><text x="36.4806%" y="639.50">core::ite..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (72 samples, 6.59%)</title><rect x="36.2306%" y="613" width="6.5874%" height="15" fill="rgb(214,47,5)" fg:x="396" fg:w="72"/><text x="36.4806%" y="623.50">&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (72 samples, 6.59%)</title><rect x="36.2306%" y="597" width="6.5874%" height="15" fill="rgb(218,159,25)" fg:x="396" fg:w="72"/><text x="36.4806%" y="607.50">&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (72 samples, 6.59%)</title><rect x="36.2306%" y="581" width="6.5874%" height="15" fill="rgb(215,211,28)" fg:x="396" fg:w="72"/><text x="36.4806%" y="591.50">&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (72 samples, 6.59%)</title><rect x="36.2306%" y="565" width="6.5874%" height="15" fill="rgb(238,59,32)" fg:x="396" fg:w="72"/><text x="36.4806%" y="575.50">&lt;alloc::v..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (72 samples, 6.59%)</title><rect x="36.2306%" y="549" width="6.5874%" height="15" fill="rgb(226,82,3)" fg:x="396" fg:w="72"/><text x="36.4806%" y="559.50">core::ite..</text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (72 samples, 6.59%)</title><rect x="36.2306%" y="533" width="6.5874%" height="15" fill="rgb(240,164,32)" fg:x="396" fg:w="72"/><text x="36.4806%" y="543.50">&lt;core::it..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (72 samples, 6.59%)</title><rect x="36.2306%" y="517" width="6.5874%" height="15" fill="rgb(232,46,7)" fg:x="396" fg:w="72"/><text x="36.4806%" y="527.50">&lt;core::it..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (72 samples, 6.59%)</title><rect x="36.2306%" y="501" width="6.5874%" height="15" fill="rgb(229,129,53)" fg:x="396" fg:w="72"/><text x="36.4806%" y="511.50">core::ite..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (72 samples, 6.59%)</title><rect x="36.2306%" y="485" width="6.5874%" height="15" fill="rgb(234,188,29)" fg:x="396" fg:w="72"/><text x="36.4806%" y="495.50">&lt;core::it..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (72 samples, 6.59%)</title><rect x="36.2306%" y="469" width="6.5874%" height="15" fill="rgb(246,141,4)" fg:x="396" fg:w="72"/><text x="36.4806%" y="479.50">&lt;core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (72 samples, 6.59%)</title><rect x="36.2306%" y="453" width="6.5874%" height="15" fill="rgb(229,23,39)" fg:x="396" fg:w="72"/><text x="36.4806%" y="463.50">core::ite..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (72 samples, 6.59%)</title><rect x="36.2306%" y="437" width="6.5874%" height="15" fill="rgb(206,12,3)" fg:x="396" fg:w="72"/><text x="36.4806%" y="447.50">core::ite..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold::flatten::{{closure}} (72 samples, 6.59%)</title><rect x="36.2306%" y="421" width="6.5874%" height="15" fill="rgb(252,226,20)" fg:x="396" fg:w="72"/><text x="36.4806%" y="431.50">core::ite..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (72 samples, 6.59%)</title><rect x="36.2306%" y="405" width="6.5874%" height="15" fill="rgb(216,123,35)" fg:x="396" fg:w="72"/><text x="36.4806%" y="415.50">&lt;core::it..</text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.55%)</title><rect x="42.2690%" y="389" width="0.5489%" height="15" fill="rgb(212,68,40)" fg:x="462" fg:w="6"/><text x="42.5190%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::by_ref_sized::ByRefSized&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.55%)</title><rect x="42.2690%" y="373" width="0.5489%" height="15" fill="rgb(254,125,32)" fg:x="462" fg:w="6"/><text x="42.5190%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.55%)</title><rect x="42.2690%" y="357" width="0.5489%" height="15" fill="rgb(253,97,22)" fg:x="462" fg:w="6"/><text x="42.5190%" y="367.50"></text></g><g><title>&lt;core::const_closure::ConstFnMutClosure&lt;&amp;mut A,Function&gt; as core::ops::function::FnMut&lt;ClosureArguments&gt;&gt;::call_mut (6 samples, 0.55%)</title><rect x="42.2690%" y="341" width="0.5489%" height="15" fill="rgb(241,101,14)" fg:x="462" fg:w="6"/><text x="42.5190%" y="351.50"></text></g><g><title>core::ops::function::Fn::call (6 samples, 0.55%)</title><rect x="42.2690%" y="325" width="0.5489%" height="15" fill="rgb(238,103,29)" fg:x="462" fg:w="6"/><text x="42.5190%" y="335.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2_imp (6 samples, 0.55%)</title><rect x="42.2690%" y="309" width="0.5489%" height="15" fill="rgb(233,195,47)" fg:x="462" fg:w="6"/><text x="42.5190%" y="319.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (6 samples, 0.55%)</title><rect x="42.2690%" y="293" width="0.5489%" height="15" fill="rgb(246,218,30)" fg:x="462" fg:w="6"/><text x="42.5190%" y="303.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.55%)</title><rect x="42.2690%" y="277" width="0.5489%" height="15" fill="rgb(219,145,47)" fg:x="462" fg:w="6"/><text x="42.5190%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (6 samples, 0.55%)</title><rect x="42.2690%" y="261" width="0.5489%" height="15" fill="rgb(243,12,26)" fg:x="462" fg:w="6"/><text x="42.5190%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (6 samples, 0.55%)</title><rect x="42.2690%" y="245" width="0.5489%" height="15" fill="rgb(214,87,16)" fg:x="462" fg:w="6"/><text x="42.5190%" y="255.50"></text></g><g><title>core::ptr::write (6 samples, 0.55%)</title><rect x="42.2690%" y="229" width="0.5489%" height="15" fill="rgb(208,99,42)" fg:x="462" fg:w="6"/><text x="42.5190%" y="239.50"></text></g><g><title>ZSTD_CCtx_init_compressStream2 (11 samples, 1.01%)</title><rect x="42.8179%" y="453" width="1.0064%" height="15" fill="rgb(253,99,2)" fg:x="468" fg:w="11"/><text x="43.0679%" y="463.50"></text></g><g><title>ZSTD_compressBegin_internal (11 samples, 1.01%)</title><rect x="42.8179%" y="437" width="1.0064%" height="15" fill="rgb(220,168,23)" fg:x="468" fg:w="11"/><text x="43.0679%" y="447.50"></text></g><g><title>ZSTD_resetCCtx_internal (11 samples, 1.01%)</title><rect x="42.8179%" y="421" width="1.0064%" height="15" fill="rgb(242,38,24)" fg:x="468" fg:w="11"/><text x="43.0679%" y="431.50"></text></g><g><title>ZSTD_reset_matchState (11 samples, 1.01%)</title><rect x="42.8179%" y="405" width="1.0064%" height="15" fill="rgb(225,182,9)" fg:x="468" fg:w="11"/><text x="43.0679%" y="415.50"></text></g><g><title>ZSTD_cwksp_clean_tables (11 samples, 1.01%)</title><rect x="42.8179%" y="389" width="1.0064%" height="15" fill="rgb(243,178,37)" fg:x="468" fg:w="11"/><text x="43.0679%" y="399.50"></text></g><g><title>[libc.so.6] (11 samples, 1.01%)</title><rect x="42.8179%" y="373" width="1.0064%" height="15" fill="rgb(232,139,19)" fg:x="468" fg:w="11"/><text x="43.0679%" y="383.50"></text></g><g><title>ZSTD_count (5 samples, 0.46%)</title><rect x="45.5627%" y="309" width="0.4575%" height="15" fill="rgb(225,201,24)" fg:x="498" fg:w="5"/><text x="45.8127%" y="319.50"></text></g><g><title>ZSTD_NbCommonBytes (1 samples, 0.09%)</title><rect x="45.9286%" y="293" width="0.0915%" height="15" fill="rgb(221,47,46)" fg:x="502" fg:w="1"/><text x="46.1786%" y="303.50"></text></g><g><title>ZSTD_hash5Ptr (6 samples, 0.55%)</title><rect x="46.0201%" y="293" width="0.5489%" height="15" fill="rgb(249,23,13)" fg:x="503" fg:w="6"/><text x="46.2701%" y="303.50"></text></g><g><title>ZSTD_hash5 (6 samples, 0.55%)</title><rect x="46.0201%" y="277" width="0.5489%" height="15" fill="rgb(219,9,5)" fg:x="503" fg:w="6"/><text x="46.2701%" y="287.50"></text></g><g><title>ZSTD_hashPtr (9 samples, 0.82%)</title><rect x="46.0201%" y="309" width="0.8234%" height="15" fill="rgb(254,171,16)" fg:x="503" fg:w="9"/><text x="46.2701%" y="319.50"></text></g><g><title>ZSTD_hash8Ptr (3 samples, 0.27%)</title><rect x="46.5691%" y="293" width="0.2745%" height="15" fill="rgb(230,171,20)" fg:x="509" fg:w="3"/><text x="46.8191%" y="303.50"></text></g><g><title>ZSTD_hash8 (3 samples, 0.27%)</title><rect x="46.5691%" y="277" width="0.2745%" height="15" fill="rgb(210,71,41)" fg:x="509" fg:w="3"/><text x="46.8191%" y="287.50"></text></g><g><title>ZSTD_compressBlock_doubleFast (34 samples, 3.11%)</title><rect x="43.8243%" y="357" width="3.1107%" height="15" fill="rgb(206,173,20)" fg:x="479" fg:w="34"/><text x="44.0743%" y="367.50">ZST..</text></g><g><title>ZSTD_compressBlock_doubleFast_noDict_5 (34 samples, 3.11%)</title><rect x="43.8243%" y="341" width="3.1107%" height="15" fill="rgb(233,88,34)" fg:x="479" fg:w="34"/><text x="44.0743%" y="351.50">ZST..</text></g><g><title>ZSTD_compressBlock_doubleFast_noDict_generic (34 samples, 3.11%)</title><rect x="43.8243%" y="325" width="3.1107%" height="15" fill="rgb(223,209,46)" fg:x="479" fg:w="34"/><text x="44.0743%" y="335.50">ZST..</text></g><g><title>ZSTD_storeSeq (1 samples, 0.09%)</title><rect x="46.8435%" y="309" width="0.0915%" height="15" fill="rgb(250,43,18)" fg:x="512" fg:w="1"/><text x="47.0935%" y="319.50"></text></g><g><title>ZSTD_buildSeqStore (36 samples, 3.29%)</title><rect x="43.8243%" y="373" width="3.2937%" height="15" fill="rgb(208,13,10)" fg:x="479" fg:w="36"/><text x="44.0743%" y="383.50">ZST..</text></g><g><title>ZSTD_compressBlock_doubleFast_extDict_generic (2 samples, 0.18%)</title><rect x="46.9350%" y="357" width="0.1830%" height="15" fill="rgb(212,200,36)" fg:x="513" fg:w="2"/><text x="47.1850%" y="367.50"></text></g><g><title>ZSTD_hashPtr (2 samples, 0.18%)</title><rect x="46.9350%" y="341" width="0.1830%" height="15" fill="rgb(225,90,30)" fg:x="513" fg:w="2"/><text x="47.1850%" y="351.50"></text></g><g><title>ZSTD_hash8Ptr (1 samples, 0.09%)</title><rect x="47.0265%" y="325" width="0.0915%" height="15" fill="rgb(236,182,39)" fg:x="514" fg:w="1"/><text x="47.2765%" y="335.50"></text></g><g><title>ZSTD_hash8 (1 samples, 0.09%)</title><rect x="47.0265%" y="309" width="0.0915%" height="15" fill="rgb(212,144,35)" fg:x="514" fg:w="1"/><text x="47.2765%" y="319.50"></text></g><g><title>HIST_count_parallel_wksp (2 samples, 0.18%)</title><rect x="47.1180%" y="325" width="0.1830%" height="15" fill="rgb(228,63,44)" fg:x="515" fg:w="2"/><text x="47.3680%" y="335.50"></text></g><g><title>MEM_read32 (1 samples, 0.09%)</title><rect x="47.2095%" y="309" width="0.0915%" height="15" fill="rgb(228,109,6)" fg:x="516" fg:w="1"/><text x="47.4595%" y="319.50"></text></g><g><title>ZSTD_buildCTable (1 samples, 0.09%)</title><rect x="47.3010%" y="325" width="0.0915%" height="15" fill="rgb(238,117,24)" fg:x="517" fg:w="1"/><text x="47.5510%" y="335.50"></text></g><g><title>FSE_buildCTable_wksp (1 samples, 0.09%)</title><rect x="47.3010%" y="309" width="0.0915%" height="15" fill="rgb(242,26,26)" fg:x="517" fg:w="1"/><text x="47.5510%" y="319.50"></text></g><g><title>ZSTD_buildSequencesStatistics (6 samples, 0.55%)</title><rect x="47.1180%" y="341" width="0.5489%" height="15" fill="rgb(221,92,48)" fg:x="515" fg:w="6"/><text x="47.3680%" y="351.50"></text></g><g><title>ZSTD_seqToCodes (3 samples, 0.27%)</title><rect x="47.3925%" y="325" width="0.2745%" height="15" fill="rgb(209,209,32)" fg:x="518" fg:w="3"/><text x="47.6425%" y="335.50"></text></g><g><title>ZSTD_LLcode (2 samples, 0.18%)</title><rect x="47.4840%" y="309" width="0.1830%" height="15" fill="rgb(221,70,22)" fg:x="519" fg:w="2"/><text x="47.7340%" y="319.50"></text></g><g><title>HIST_count_parallel_wksp (1 samples, 0.09%)</title><rect x="47.6670%" y="293" width="0.0915%" height="15" fill="rgb(248,145,5)" fg:x="521" fg:w="1"/><text x="47.9170%" y="303.50"></text></g><g><title>ZSTD_compressLiterals (3 samples, 0.27%)</title><rect x="47.6670%" y="341" width="0.2745%" height="15" fill="rgb(226,116,26)" fg:x="521" fg:w="3"/><text x="47.9170%" y="351.50"></text></g><g><title>HUF_compress4X_repeat (3 samples, 0.27%)</title><rect x="47.6670%" y="325" width="0.2745%" height="15" fill="rgb(244,5,17)" fg:x="521" fg:w="3"/><text x="47.9170%" y="335.50"></text></g><g><title>HUF_compress_internal (3 samples, 0.27%)</title><rect x="47.6670%" y="309" width="0.2745%" height="15" fill="rgb(252,159,33)" fg:x="521" fg:w="3"/><text x="47.9170%" y="319.50"></text></g><g><title>HUF_compressCTable_internal (2 samples, 0.18%)</title><rect x="47.7585%" y="293" width="0.1830%" height="15" fill="rgb(206,71,0)" fg:x="522" fg:w="2"/><text x="48.0085%" y="303.50"></text></g><g><title>HUF_compress4X_usingCTable_internal (2 samples, 0.18%)</title><rect x="47.7585%" y="277" width="0.1830%" height="15" fill="rgb(233,118,54)" fg:x="522" fg:w="2"/><text x="48.0085%" y="287.50"></text></g><g><title>HUF_compress1X_usingCTable_internal (2 samples, 0.18%)</title><rect x="47.7585%" y="261" width="0.1830%" height="15" fill="rgb(234,83,48)" fg:x="522" fg:w="2"/><text x="48.0085%" y="271.50"></text></g><g><title>HUF_compress1X_usingCTable_internal_bmi2 (2 samples, 0.18%)</title><rect x="47.7585%" y="245" width="0.1830%" height="15" fill="rgb(228,3,54)" fg:x="522" fg:w="2"/><text x="48.0085%" y="255.50"></text></g><g><title>HUF_compress1X_usingCTable_internal_body (2 samples, 0.18%)</title><rect x="47.7585%" y="229" width="0.1830%" height="15" fill="rgb(226,155,13)" fg:x="522" fg:w="2"/><text x="48.0085%" y="239.50"></text></g><g><title>HUF_compress1X_usingCTable_internal_body_loop (2 samples, 0.18%)</title><rect x="47.7585%" y="213" width="0.1830%" height="15" fill="rgb(241,28,37)" fg:x="522" fg:w="2"/><text x="48.0085%" y="223.50"></text></g><g><title>HUF_encodeSymbol (2 samples, 0.18%)</title><rect x="47.7585%" y="197" width="0.1830%" height="15" fill="rgb(233,93,10)" fg:x="522" fg:w="2"/><text x="48.0085%" y="207.50"></text></g><g><title>BIT_addBits (1 samples, 0.09%)</title><rect x="48.0329%" y="309" width="0.0915%" height="15" fill="rgb(225,113,19)" fg:x="525" fg:w="1"/><text x="48.2829%" y="319.50"></text></g><g><title>ZSTD_compressContinue (56 samples, 5.12%)</title><rect x="43.8243%" y="437" width="5.1235%" height="15" fill="rgb(241,2,18)" fg:x="479" fg:w="56"/><text x="44.0743%" y="447.50">ZSTD_c..</text></g><g><title>ZSTD_compressContinue_internal (56 samples, 5.12%)</title><rect x="43.8243%" y="421" width="5.1235%" height="15" fill="rgb(228,207,21)" fg:x="479" fg:w="56"/><text x="44.0743%" y="431.50">ZSTD_c..</text></g><g><title>ZSTD_compress_frameChunk (56 samples, 5.12%)</title><rect x="43.8243%" y="405" width="5.1235%" height="15" fill="rgb(213,211,35)" fg:x="479" fg:w="56"/><text x="44.0743%" y="415.50">ZSTD_c..</text></g><g><title>ZSTD_compressBlock_internal (56 samples, 5.12%)</title><rect x="43.8243%" y="389" width="5.1235%" height="15" fill="rgb(209,83,10)" fg:x="479" fg:w="56"/><text x="44.0743%" y="399.50">ZSTD_c..</text></g><g><title>ZSTD_entropyCompressSeqStore (20 samples, 1.83%)</title><rect x="47.1180%" y="373" width="1.8298%" height="15" fill="rgb(209,164,1)" fg:x="515" fg:w="20"/><text x="47.3680%" y="383.50">Z..</text></g><g><title>ZSTD_entropyCompressSeqStore_internal (20 samples, 1.83%)</title><rect x="47.1180%" y="357" width="1.8298%" height="15" fill="rgb(213,184,43)" fg:x="515" fg:w="20"/><text x="47.3680%" y="367.50">Z..</text></g><g><title>ZSTD_encodeSequences_bmi2 (11 samples, 1.01%)</title><rect x="47.9414%" y="341" width="1.0064%" height="15" fill="rgb(231,61,34)" fg:x="524" fg:w="11"/><text x="48.1914%" y="351.50"></text></g><g><title>ZSTD_encodeSequences_body (11 samples, 1.01%)</title><rect x="47.9414%" y="325" width="1.0064%" height="15" fill="rgb(235,75,3)" fg:x="524" fg:w="11"/><text x="48.1914%" y="335.50"></text></g><g><title>FSE_encodeSymbol (9 samples, 0.82%)</title><rect x="48.1244%" y="309" width="0.8234%" height="15" fill="rgb(220,106,47)" fg:x="526" fg:w="9"/><text x="48.3744%" y="319.50"></text></g><g><title>BIT_addBits (6 samples, 0.55%)</title><rect x="48.3989%" y="293" width="0.5489%" height="15" fill="rgb(210,196,33)" fg:x="529" fg:w="6"/><text x="48.6489%" y="303.50"></text></g><g><title>zstd::stream::zio::writer::Writer&lt;W,D&gt;::with_buffer (71 samples, 6.50%)</title><rect x="42.8179%" y="549" width="6.4959%" height="15" fill="rgb(229,154,42)" fg:x="468" fg:w="71"/><text x="43.0679%" y="559.50">zstd::str..</text></g><g><title>&lt;zstd::stream::zio::writer::Writer&lt;W,D&gt; as std::io::Write&gt;::write::{{closure}} (71 samples, 6.50%)</title><rect x="42.8179%" y="533" width="6.4959%" height="15" fill="rgb(228,114,26)" fg:x="468" fg:w="71"/><text x="43.0679%" y="543.50">&lt;zstd::st..</text></g><g><title>&lt;zstd::stream::raw::Encoder as zstd::stream::raw::Operation&gt;::run (71 samples, 6.50%)</title><rect x="42.8179%" y="517" width="6.4959%" height="15" fill="rgb(208,144,1)" fg:x="468" fg:w="71"/><text x="43.0679%" y="527.50">&lt;zstd::st..</text></g><g><title>zstd_safe::CCtx::compress_stream (71 samples, 6.50%)</title><rect x="42.8179%" y="501" width="6.4959%" height="15" fill="rgb(239,112,37)" fg:x="468" fg:w="71"/><text x="43.0679%" y="511.50">zstd_safe..</text></g><g><title>ZSTD_compressStream (71 samples, 6.50%)</title><rect x="42.8179%" y="485" width="6.4959%" height="15" fill="rgb(210,96,50)" fg:x="468" fg:w="71"/><text x="43.0679%" y="495.50">ZSTD_comp..</text></g><g><title>ZSTD_compressStream2 (71 samples, 6.50%)</title><rect x="42.8179%" y="469" width="6.4959%" height="15" fill="rgb(222,178,2)" fg:x="468" fg:w="71"/><text x="43.0679%" y="479.50">ZSTD_comp..</text></g><g><title>ZSTD_compressStream_generic (60 samples, 5.49%)</title><rect x="43.8243%" y="453" width="5.4895%" height="15" fill="rgb(226,74,18)" fg:x="479" fg:w="60"/><text x="44.0743%" y="463.50">ZSTD_co..</text></g><g><title>ZSTD_limitCopy (4 samples, 0.37%)</title><rect x="48.9478%" y="437" width="0.3660%" height="15" fill="rgb(225,67,54)" fg:x="535" fg:w="4"/><text x="49.1978%" y="447.50"></text></g><g><title>[libc.so.6] (4 samples, 0.37%)</title><rect x="48.9478%" y="421" width="0.3660%" height="15" fill="rgb(251,92,32)" fg:x="535" fg:w="4"/><text x="49.1978%" y="431.50"></text></g><g><title>std::io::Write::write_all (72 samples, 6.59%)</title><rect x="42.8179%" y="629" width="6.5874%" height="15" fill="rgb(228,149,22)" fg:x="468" fg:w="72"/><text x="43.0679%" y="639.50">std::io::..</text></g><g><title>zip::write::&lt;impl std::io::Write for zip::write::zip_writer::ZipWriter&lt;W&gt;&gt;::write (72 samples, 6.59%)</title><rect x="42.8179%" y="613" width="6.5874%" height="15" fill="rgb(243,54,13)" fg:x="468" fg:w="72"/><text x="43.0679%" y="623.50">zip::writ..</text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write (72 samples, 6.59%)</title><rect x="42.8179%" y="597" width="6.5874%" height="15" fill="rgb(243,180,28)" fg:x="468" fg:w="72"/><text x="43.0679%" y="607.50">std::io::..</text></g><g><title>&lt;zstd::stream::write::Encoder&lt;W&gt; as std::io::Write&gt;::write (72 samples, 6.59%)</title><rect x="42.8179%" y="581" width="6.5874%" height="15" fill="rgb(208,167,24)" fg:x="468" fg:w="72"/><text x="43.0679%" y="591.50">&lt;zstd::st..</text></g><g><title>&lt;zstd::stream::zio::writer::Writer&lt;W,D&gt; as std::io::Write&gt;::write (72 samples, 6.59%)</title><rect x="42.8179%" y="565" width="6.5874%" height="15" fill="rgb(245,73,45)" fg:x="468" fg:w="72"/><text x="43.0679%" y="575.50">&lt;zstd::st..</text></g><g><title>zstd::stream::zio::writer::Writer&lt;W,D&gt;::write_from_offset (1 samples, 0.09%)</title><rect x="49.3138%" y="549" width="0.0915%" height="15" fill="rgb(237,203,48)" fg:x="539" fg:w="1"/><text x="49.5638%" y="559.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (1 samples, 0.09%)</title><rect x="49.3138%" y="533" width="0.0915%" height="15" fill="rgb(211,197,16)" fg:x="539" fg:w="1"/><text x="49.5638%" y="543.50"></text></g><g><title>std::sys::unix::net::Socket::write (1 samples, 0.09%)</title><rect x="49.3138%" y="517" width="0.0915%" height="15" fill="rgb(243,99,51)" fg:x="539" fg:w="1"/><text x="49.5638%" y="527.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.09%)</title><rect x="49.3138%" y="501" width="0.0915%" height="15" fill="rgb(215,123,29)" fg:x="539" fg:w="1"/><text x="49.5638%" y="511.50"></text></g><g><title>__GI___libc_write (1 samples, 0.09%)</title><rect x="49.3138%" y="485" width="0.0915%" height="15" fill="rgb(239,186,37)" fg:x="539" fg:w="1"/><text x="49.5638%" y="495.50"></text></g><g><title>__GI___libc_write (1 samples, 0.09%)</title><rect x="49.3138%" y="469" width="0.0915%" height="15" fill="rgb(252,136,39)" fg:x="539" fg:w="1"/><text x="49.5638%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="49.3138%" y="453" width="0.0915%" height="15" fill="rgb(223,213,32)" fg:x="539" fg:w="1"/><text x="49.5638%" y="463.50"></text></g><g><title>do_syscall_64 (1 samples, 0.09%)</title><rect x="49.3138%" y="437" width="0.0915%" height="15" fill="rgb(233,115,5)" fg:x="539" fg:w="1"/><text x="49.5638%" y="447.50"></text></g><g><title>__x64_sys_write (1 samples, 0.09%)</title><rect x="49.3138%" y="421" width="0.0915%" height="15" fill="rgb(207,226,44)" fg:x="539" fg:w="1"/><text x="49.5638%" y="431.50"></text></g><g><title>ksys_write (1 samples, 0.09%)</title><rect x="49.3138%" y="405" width="0.0915%" height="15" fill="rgb(208,126,0)" fg:x="539" fg:w="1"/><text x="49.5638%" y="415.50"></text></g><g><title>vfs_write (1 samples, 0.09%)</title><rect x="49.3138%" y="389" width="0.0915%" height="15" fill="rgb(244,66,21)" fg:x="539" fg:w="1"/><text x="49.5638%" y="399.50"></text></g><g><title>rw_verify_area (1 samples, 0.09%)</title><rect x="49.3138%" y="373" width="0.0915%" height="15" fill="rgb(222,97,12)" fg:x="539" fg:w="1"/><text x="49.5638%" y="383.50"></text></g><g><title>security_file_permission (1 samples, 0.09%)</title><rect x="49.3138%" y="357" width="0.0915%" height="15" fill="rgb(219,213,19)" fg:x="539" fg:w="1"/><text x="49.5638%" y="367.50"></text></g><g><title>apparmor_file_permission (1 samples, 0.09%)</title><rect x="49.3138%" y="341" width="0.0915%" height="15" fill="rgb(252,169,30)" fg:x="539" fg:w="1"/><text x="49.5638%" y="351.50"></text></g><g><title>aa_file_perm (1 samples, 0.09%)</title><rect x="49.3138%" y="325" width="0.0915%" height="15" fill="rgb(206,32,51)" fg:x="539" fg:w="1"/><text x="49.5638%" y="335.50"></text></g><g><title>ZSTD_compressBlock_doubleFast (6 samples, 0.55%)</title><rect x="49.4053%" y="325" width="0.5489%" height="15" fill="rgb(250,172,42)" fg:x="540" fg:w="6"/><text x="49.6553%" y="335.50"></text></g><g><title>ZSTD_compressBlock_doubleFast_noDict_5 (6 samples, 0.55%)</title><rect x="49.4053%" y="309" width="0.5489%" height="15" fill="rgb(209,34,43)" fg:x="540" fg:w="6"/><text x="49.6553%" y="319.50"></text></g><g><title>ZSTD_compressBlock_doubleFast_noDict_generic (6 samples, 0.55%)</title><rect x="49.4053%" y="293" width="0.5489%" height="15" fill="rgb(223,11,35)" fg:x="540" fg:w="6"/><text x="49.6553%" y="303.50"></text></g><g><title>ZSTD_count (1 samples, 0.09%)</title><rect x="49.8628%" y="277" width="0.0915%" height="15" fill="rgb(251,219,26)" fg:x="545" fg:w="1"/><text x="50.1128%" y="287.50"></text></g><g><title>ZSTD_buildSeqStore (7 samples, 0.64%)</title><rect x="49.4053%" y="341" width="0.6404%" height="15" fill="rgb(231,119,3)" fg:x="540" fg:w="7"/><text x="49.6553%" y="351.50"></text></g><g><title>ZSTD_compressBlock_doubleFast_extDict_generic (1 samples, 0.09%)</title><rect x="49.9543%" y="325" width="0.0915%" height="15" fill="rgb(216,97,11)" fg:x="546" fg:w="1"/><text x="50.2043%" y="335.50"></text></g><g><title>ZSTD_count_2segments (1 samples, 0.09%)</title><rect x="49.9543%" y="309" width="0.0915%" height="15" fill="rgb(223,59,9)" fg:x="546" fg:w="1"/><text x="50.2043%" y="319.50"></text></g><g><title>ZSTD_count (1 samples, 0.09%)</title><rect x="49.9543%" y="293" width="0.0915%" height="15" fill="rgb(233,93,31)" fg:x="546" fg:w="1"/><text x="50.2043%" y="303.50"></text></g><g><title>ZSTD_NbCommonBytes (1 samples, 0.09%)</title><rect x="49.9543%" y="277" width="0.0915%" height="15" fill="rgb(239,81,33)" fg:x="546" fg:w="1"/><text x="50.2043%" y="287.50"></text></g><g><title>ZSTD_buildSequencesStatistics (1 samples, 0.09%)</title><rect x="50.0457%" y="309" width="0.0915%" height="15" fill="rgb(213,120,34)" fg:x="547" fg:w="1"/><text x="50.2957%" y="319.50"></text></g><g><title>ZSTD_seqToCodes (1 samples, 0.09%)</title><rect x="50.0457%" y="293" width="0.0915%" height="15" fill="rgb(243,49,53)" fg:x="547" fg:w="1"/><text x="50.2957%" y="303.50"></text></g><g><title>ZSTD_LLcode (1 samples, 0.09%)</title><rect x="50.0457%" y="277" width="0.0915%" height="15" fill="rgb(247,216,33)" fg:x="547" fg:w="1"/><text x="50.2957%" y="287.50"></text></g><g><title>zstd::stream::zio::writer::Writer&lt;W,D&gt;::with_buffer (9 samples, 0.82%)</title><rect x="49.4053%" y="517" width="0.8234%" height="15" fill="rgb(226,26,14)" fg:x="540" fg:w="9"/><text x="49.6553%" y="527.50"></text></g><g><title>zstd::stream::zio::writer::Writer&lt;W,D&gt;::finish::{{closure}} (9 samples, 0.82%)</title><rect x="49.4053%" y="501" width="0.8234%" height="15" fill="rgb(215,49,53)" fg:x="540" fg:w="9"/><text x="49.6553%" y="511.50"></text></g><g><title>&lt;zstd::stream::raw::Encoder as zstd::stream::raw::Operation&gt;::finish (9 samples, 0.82%)</title><rect x="49.4053%" y="485" width="0.8234%" height="15" fill="rgb(245,162,40)" fg:x="540" fg:w="9"/><text x="49.6553%" y="495.50"></text></g><g><title>zstd_safe::CCtx::end_stream (9 samples, 0.82%)</title><rect x="49.4053%" y="469" width="0.8234%" height="15" fill="rgb(229,68,17)" fg:x="540" fg:w="9"/><text x="49.6553%" y="479.50"></text></g><g><title>ZSTD_endStream (9 samples, 0.82%)</title><rect x="49.4053%" y="453" width="0.8234%" height="15" fill="rgb(213,182,10)" fg:x="540" fg:w="9"/><text x="49.6553%" y="463.50"></text></g><g><title>ZSTD_compressStream2 (9 samples, 0.82%)</title><rect x="49.4053%" y="437" width="0.8234%" height="15" fill="rgb(245,125,30)" fg:x="540" fg:w="9"/><text x="49.6553%" y="447.50"></text></g><g><title>ZSTD_compressStream_generic (9 samples, 0.82%)</title><rect x="49.4053%" y="421" width="0.8234%" height="15" fill="rgb(232,202,2)" fg:x="540" fg:w="9"/><text x="49.6553%" y="431.50"></text></g><g><title>ZSTD_compressEnd (9 samples, 0.82%)</title><rect x="49.4053%" y="405" width="0.8234%" height="15" fill="rgb(237,140,51)" fg:x="540" fg:w="9"/><text x="49.6553%" y="415.50"></text></g><g><title>ZSTD_compressContinue_internal (9 samples, 0.82%)</title><rect x="49.4053%" y="389" width="0.8234%" height="15" fill="rgb(236,157,25)" fg:x="540" fg:w="9"/><text x="49.6553%" y="399.50"></text></g><g><title>ZSTD_compress_frameChunk (9 samples, 0.82%)</title><rect x="49.4053%" y="373" width="0.8234%" height="15" fill="rgb(219,209,0)" fg:x="540" fg:w="9"/><text x="49.6553%" y="383.50"></text></g><g><title>ZSTD_compressBlock_internal (9 samples, 0.82%)</title><rect x="49.4053%" y="357" width="0.8234%" height="15" fill="rgb(240,116,54)" fg:x="540" fg:w="9"/><text x="49.6553%" y="367.50"></text></g><g><title>ZSTD_entropyCompressSeqStore (2 samples, 0.18%)</title><rect x="50.0457%" y="341" width="0.1830%" height="15" fill="rgb(216,10,36)" fg:x="547" fg:w="2"/><text x="50.2957%" y="351.50"></text></g><g><title>ZSTD_entropyCompressSeqStore_internal (2 samples, 0.18%)</title><rect x="50.0457%" y="325" width="0.1830%" height="15" fill="rgb(222,72,44)" fg:x="547" fg:w="2"/><text x="50.2957%" y="335.50"></text></g><g><title>ZSTD_compressLiterals (1 samples, 0.09%)</title><rect x="50.1372%" y="309" width="0.0915%" height="15" fill="rgb(232,159,9)" fg:x="548" fg:w="1"/><text x="50.3872%" y="319.50"></text></g><g><title>HUF_compress4X_repeat (1 samples, 0.09%)</title><rect x="50.1372%" y="293" width="0.0915%" height="15" fill="rgb(210,39,32)" fg:x="548" fg:w="1"/><text x="50.3872%" y="303.50"></text></g><g><title>HUF_compress_internal (1 samples, 0.09%)</title><rect x="50.1372%" y="277" width="0.0915%" height="15" fill="rgb(216,194,45)" fg:x="548" fg:w="1"/><text x="50.3872%" y="287.50"></text></g><g><title>HUF_compressCTable_internal (1 samples, 0.09%)</title><rect x="50.1372%" y="261" width="0.0915%" height="15" fill="rgb(218,18,35)" fg:x="548" fg:w="1"/><text x="50.3872%" y="271.50"></text></g><g><title>HUF_compress4X_usingCTable_internal (1 samples, 0.09%)</title><rect x="50.1372%" y="245" width="0.0915%" height="15" fill="rgb(207,83,51)" fg:x="548" fg:w="1"/><text x="50.3872%" y="255.50"></text></g><g><title>HUF_compress1X_usingCTable_internal (1 samples, 0.09%)</title><rect x="50.1372%" y="229" width="0.0915%" height="15" fill="rgb(225,63,43)" fg:x="548" fg:w="1"/><text x="50.3872%" y="239.50"></text></g><g><title>HUF_compress1X_usingCTable_internal_bmi2 (1 samples, 0.09%)</title><rect x="50.1372%" y="213" width="0.0915%" height="15" fill="rgb(207,57,36)" fg:x="548" fg:w="1"/><text x="50.3872%" y="223.50"></text></g><g><title>HUF_compress1X_usingCTable_internal_body (1 samples, 0.09%)</title><rect x="50.1372%" y="197" width="0.0915%" height="15" fill="rgb(216,99,33)" fg:x="548" fg:w="1"/><text x="50.3872%" y="207.50"></text></g><g><title>HUF_compress1X_usingCTable_internal_body_loop (1 samples, 0.09%)</title><rect x="50.1372%" y="181" width="0.0915%" height="15" fill="rgb(225,42,16)" fg:x="548" fg:w="1"/><text x="50.3872%" y="191.50"></text></g><g><title>HUF_encodeSymbol (1 samples, 0.09%)</title><rect x="50.1372%" y="165" width="0.0915%" height="15" fill="rgb(220,201,45)" fg:x="548" fg:w="1"/><text x="50.3872%" y="175.50"></text></g><g><title>HUF_addBits (1 samples, 0.09%)</title><rect x="50.1372%" y="149" width="0.0915%" height="15" fill="rgb(225,33,4)" fg:x="548" fg:w="1"/><text x="50.3872%" y="159.50"></text></g><g><title>HUF_getValue (1 samples, 0.09%)</title><rect x="50.1372%" y="133" width="0.0915%" height="15" fill="rgb(224,33,50)" fg:x="548" fg:w="1"/><text x="50.3872%" y="143.50"></text></g><g><title>ext4_da_write_begin (1 samples, 0.09%)</title><rect x="50.2287%" y="277" width="0.0915%" height="15" fill="rgb(246,198,51)" fg:x="549" fg:w="1"/><text x="50.4787%" y="287.50"></text></g><g><title>grab_cache_page_write_begin (1 samples, 0.09%)</title><rect x="50.2287%" y="261" width="0.0915%" height="15" fill="rgb(205,22,4)" fg:x="549" fg:w="1"/><text x="50.4787%" y="271.50"></text></g><g><title>pagecache_get_page (1 samples, 0.09%)</title><rect x="50.2287%" y="245" width="0.0915%" height="15" fill="rgb(206,3,8)" fg:x="549" fg:w="1"/><text x="50.4787%" y="255.50"></text></g><g><title>zip::write::&lt;impl zip::write::zip_writer::ZipWriter&lt;W&gt;&gt;::finish_file (11 samples, 1.01%)</title><rect x="49.4053%" y="597" width="1.0064%" height="15" fill="rgb(251,23,15)" fg:x="540" fg:w="11"/><text x="49.6553%" y="607.50"></text></g><g><title>zip::write::GenericZipWriter&lt;W&gt;::switch_to (11 samples, 1.01%)</title><rect x="49.4053%" y="581" width="1.0064%" height="15" fill="rgb(252,88,28)" fg:x="540" fg:w="11"/><text x="49.6553%" y="591.50"></text></g><g><title>zstd::stream::write::Encoder&lt;W&gt;::finish (11 samples, 1.01%)</title><rect x="49.4053%" y="565" width="1.0064%" height="15" fill="rgb(212,127,14)" fg:x="540" fg:w="11"/><text x="49.6553%" y="575.50"></text></g><g><title>zstd::stream::write::Encoder&lt;W&gt;::try_finish (11 samples, 1.01%)</title><rect x="49.4053%" y="549" width="1.0064%" height="15" fill="rgb(247,145,37)" fg:x="540" fg:w="11"/><text x="49.6553%" y="559.50"></text></g><g><title>zstd::stream::zio::writer::Writer&lt;W,D&gt;::finish (11 samples, 1.01%)</title><rect x="49.4053%" y="533" width="1.0064%" height="15" fill="rgb(209,117,53)" fg:x="540" fg:w="11"/><text x="49.6553%" y="543.50"></text></g><g><title>zstd::stream::zio::writer::Writer&lt;W,D&gt;::write_from_offset (2 samples, 0.18%)</title><rect x="50.2287%" y="517" width="0.1830%" height="15" fill="rgb(212,90,42)" fg:x="549" fg:w="2"/><text x="50.4787%" y="527.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (2 samples, 0.18%)</title><rect x="50.2287%" y="501" width="0.1830%" height="15" fill="rgb(218,164,37)" fg:x="549" fg:w="2"/><text x="50.4787%" y="511.50"></text></g><g><title>std::sys::unix::net::Socket::write (2 samples, 0.18%)</title><rect x="50.2287%" y="485" width="0.1830%" height="15" fill="rgb(246,65,34)" fg:x="549" fg:w="2"/><text x="50.4787%" y="495.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (2 samples, 0.18%)</title><rect x="50.2287%" y="469" width="0.1830%" height="15" fill="rgb(231,100,33)" fg:x="549" fg:w="2"/><text x="50.4787%" y="479.50"></text></g><g><title>__GI___libc_write (2 samples, 0.18%)</title><rect x="50.2287%" y="453" width="0.1830%" height="15" fill="rgb(228,126,14)" fg:x="549" fg:w="2"/><text x="50.4787%" y="463.50"></text></g><g><title>__GI___libc_write (2 samples, 0.18%)</title><rect x="50.2287%" y="437" width="0.1830%" height="15" fill="rgb(215,173,21)" fg:x="549" fg:w="2"/><text x="50.4787%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.18%)</title><rect x="50.2287%" y="421" width="0.1830%" height="15" fill="rgb(210,6,40)" fg:x="549" fg:w="2"/><text x="50.4787%" y="431.50"></text></g><g><title>do_syscall_64 (2 samples, 0.18%)</title><rect x="50.2287%" y="405" width="0.1830%" height="15" fill="rgb(212,48,18)" fg:x="549" fg:w="2"/><text x="50.4787%" y="415.50"></text></g><g><title>__x64_sys_write (2 samples, 0.18%)</title><rect x="50.2287%" y="389" width="0.1830%" height="15" fill="rgb(230,214,11)" fg:x="549" fg:w="2"/><text x="50.4787%" y="399.50"></text></g><g><title>ksys_write (2 samples, 0.18%)</title><rect x="50.2287%" y="373" width="0.1830%" height="15" fill="rgb(254,105,39)" fg:x="549" fg:w="2"/><text x="50.4787%" y="383.50"></text></g><g><title>vfs_write (2 samples, 0.18%)</title><rect x="50.2287%" y="357" width="0.1830%" height="15" fill="rgb(245,158,5)" fg:x="549" fg:w="2"/><text x="50.4787%" y="367.50"></text></g><g><title>new_sync_write (2 samples, 0.18%)</title><rect x="50.2287%" y="341" width="0.1830%" height="15" fill="rgb(249,208,11)" fg:x="549" fg:w="2"/><text x="50.4787%" y="351.50"></text></g><g><title>ext4_file_write_iter (2 samples, 0.18%)</title><rect x="50.2287%" y="325" width="0.1830%" height="15" fill="rgb(210,39,28)" fg:x="549" fg:w="2"/><text x="50.4787%" y="335.50"></text></g><g><title>ext4_buffered_write_iter (2 samples, 0.18%)</title><rect x="50.2287%" y="309" width="0.1830%" height="15" fill="rgb(211,56,53)" fg:x="549" fg:w="2"/><text x="50.4787%" y="319.50"></text></g><g><title>generic_perform_write (2 samples, 0.18%)</title><rect x="50.2287%" y="293" width="0.1830%" height="15" fill="rgb(226,201,30)" fg:x="549" fg:w="2"/><text x="50.4787%" y="303.50"></text></g><g><title>ext4_da_write_end (1 samples, 0.09%)</title><rect x="50.3202%" y="277" width="0.0915%" height="15" fill="rgb(239,101,34)" fg:x="550" fg:w="1"/><text x="50.5702%" y="287.50"></text></g><g><title>generic_write_end (1 samples, 0.09%)</title><rect x="50.3202%" y="261" width="0.0915%" height="15" fill="rgb(226,209,5)" fg:x="550" fg:w="1"/><text x="50.5702%" y="271.50"></text></g><g><title>__mark_inode_dirty (1 samples, 0.09%)</title><rect x="50.3202%" y="245" width="0.0915%" height="15" fill="rgb(250,105,47)" fg:x="550" fg:w="1"/><text x="50.5702%" y="255.50"></text></g><g><title>ext4_dirty_inode (1 samples, 0.09%)</title><rect x="50.3202%" y="229" width="0.0915%" height="15" fill="rgb(230,72,3)" fg:x="550" fg:w="1"/><text x="50.5702%" y="239.50"></text></g><g><title>__ext4_mark_inode_dirty (1 samples, 0.09%)</title><rect x="50.3202%" y="213" width="0.0915%" height="15" fill="rgb(232,218,39)" fg:x="550" fg:w="1"/><text x="50.5702%" y="223.50"></text></g><g><title>ext4_mark_iloc_dirty (1 samples, 0.09%)</title><rect x="50.3202%" y="197" width="0.0915%" height="15" fill="rgb(248,166,6)" fg:x="550" fg:w="1"/><text x="50.5702%" y="207.50"></text></g><g><title>ext4_do_update_inode.isra.0 (1 samples, 0.09%)</title><rect x="50.3202%" y="181" width="0.0915%" height="15" fill="rgb(247,89,20)" fg:x="550" fg:w="1"/><text x="50.5702%" y="191.50"></text></g><g><title>__entry_text_start (2 samples, 0.18%)</title><rect x="50.4117%" y="469" width="0.1830%" height="15" fill="rgb(248,130,54)" fg:x="551" fg:w="2"/><text x="50.6617%" y="479.50"></text></g><g><title>__kmalloc (1 samples, 0.09%)</title><rect x="50.5947%" y="309" width="0.0915%" height="15" fill="rgb(234,196,4)" fg:x="553" fg:w="1"/><text x="50.8447%" y="319.50"></text></g><g><title>obj_cgroup_charge (1 samples, 0.09%)</title><rect x="50.5947%" y="293" width="0.0915%" height="15" fill="rgb(250,143,31)" fg:x="553" fg:w="1"/><text x="50.8447%" y="303.50"></text></g><g><title>obj_cgroup_charge_pages (1 samples, 0.09%)</title><rect x="50.5947%" y="277" width="0.0915%" height="15" fill="rgb(211,110,34)" fg:x="553" fg:w="1"/><text x="50.8447%" y="287.50"></text></g><g><title>try_charge_memcg (1 samples, 0.09%)</title><rect x="50.5947%" y="261" width="0.0915%" height="15" fill="rgb(215,124,48)" fg:x="553" fg:w="1"/><text x="50.8447%" y="271.50"></text></g><g><title>fsnotify_add_event (1 samples, 0.09%)</title><rect x="50.6862%" y="309" width="0.0915%" height="15" fill="rgb(216,46,13)" fg:x="554" fg:w="1"/><text x="50.9362%" y="319.50"></text></g><g><title>strcmp (1 samples, 0.09%)</title><rect x="50.6862%" y="293" width="0.0915%" height="15" fill="rgb(205,184,25)" fg:x="554" fg:w="1"/><text x="50.9362%" y="303.50"></text></g><g><title>inotify_handle_inode_event (3 samples, 0.27%)</title><rect x="50.5947%" y="325" width="0.2745%" height="15" fill="rgb(228,1,10)" fg:x="553" fg:w="3"/><text x="50.8447%" y="335.50"></text></g><g><title>inotify_merge (1 samples, 0.09%)</title><rect x="50.7777%" y="309" width="0.0915%" height="15" fill="rgb(213,116,27)" fg:x="555" fg:w="1"/><text x="51.0277%" y="319.50"></text></g><g><title>__fsnotify_parent (4 samples, 0.37%)</title><rect x="50.5947%" y="389" width="0.3660%" height="15" fill="rgb(241,95,50)" fg:x="553" fg:w="4"/><text x="50.8447%" y="399.50"></text></g><g><title>fsnotify (4 samples, 0.37%)</title><rect x="50.5947%" y="373" width="0.3660%" height="15" fill="rgb(238,48,32)" fg:x="553" fg:w="4"/><text x="50.8447%" y="383.50"></text></g><g><title>send_to_group (4 samples, 0.37%)</title><rect x="50.5947%" y="357" width="0.3660%" height="15" fill="rgb(235,113,49)" fg:x="553" fg:w="4"/><text x="50.8447%" y="367.50"></text></g><g><title>fsnotify_handle_inode_event.isra.0 (4 samples, 0.37%)</title><rect x="50.5947%" y="341" width="0.3660%" height="15" fill="rgb(205,127,43)" fg:x="553" fg:w="4"/><text x="50.8447%" y="351.50"></text></g><g><title>strcpy (1 samples, 0.09%)</title><rect x="50.8692%" y="325" width="0.0915%" height="15" fill="rgb(250,162,2)" fg:x="556" fg:w="1"/><text x="51.1192%" y="335.50"></text></g><g><title>file_modified (2 samples, 0.18%)</title><rect x="50.9607%" y="341" width="0.1830%" height="15" fill="rgb(220,13,41)" fg:x="557" fg:w="2"/><text x="51.2107%" y="351.50"></text></g><g><title>file_update_time (1 samples, 0.09%)</title><rect x="51.0522%" y="325" width="0.0915%" height="15" fill="rgb(249,221,25)" fg:x="558" fg:w="1"/><text x="51.3022%" y="335.50"></text></g><g><title>current_time (1 samples, 0.09%)</title><rect x="51.0522%" y="309" width="0.0915%" height="15" fill="rgb(215,208,19)" fg:x="558" fg:w="1"/><text x="51.3022%" y="319.50"></text></g><g><title>__block_commit_write.constprop.0.isra.0 (1 samples, 0.09%)</title><rect x="51.1436%" y="293" width="0.0915%" height="15" fill="rgb(236,175,2)" fg:x="559" fg:w="1"/><text x="51.3936%" y="303.50"></text></g><g><title>__ext4_journal_start_sb (1 samples, 0.09%)</title><rect x="51.2351%" y="261" width="0.0915%" height="15" fill="rgb(241,52,2)" fg:x="560" fg:w="1"/><text x="51.4851%" y="271.50"></text></g><g><title>jbd2__journal_start (1 samples, 0.09%)</title><rect x="51.2351%" y="245" width="0.0915%" height="15" fill="rgb(248,140,14)" fg:x="560" fg:w="1"/><text x="51.4851%" y="255.50"></text></g><g><title>memset_erms (1 samples, 0.09%)</title><rect x="51.2351%" y="229" width="0.0915%" height="15" fill="rgb(253,22,42)" fg:x="560" fg:w="1"/><text x="51.4851%" y="239.50"></text></g><g><title>byteorder::io::WriteBytesExt::write_u16 (11 samples, 1.01%)</title><rect x="50.4117%" y="581" width="1.0064%" height="15" fill="rgb(234,61,47)" fg:x="551" fg:w="11"/><text x="50.6617%" y="591.50"></text></g><g><title>std::io::Write::write_all (11 samples, 1.01%)</title><rect x="50.4117%" y="565" width="1.0064%" height="15" fill="rgb(208,226,15)" fg:x="551" fg:w="11"/><text x="50.6617%" y="575.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (11 samples, 1.01%)</title><rect x="50.4117%" y="549" width="1.0064%" height="15" fill="rgb(217,221,4)" fg:x="551" fg:w="11"/><text x="50.6617%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::write (11 samples, 1.01%)</title><rect x="50.4117%" y="533" width="1.0064%" height="15" fill="rgb(212,174,34)" fg:x="551" fg:w="11"/><text x="50.6617%" y="543.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (11 samples, 1.01%)</title><rect x="50.4117%" y="517" width="1.0064%" height="15" fill="rgb(253,83,4)" fg:x="551" fg:w="11"/><text x="50.6617%" y="527.50"></text></g><g><title>__GI___libc_write (11 samples, 1.01%)</title><rect x="50.4117%" y="501" width="1.0064%" height="15" fill="rgb(250,195,49)" fg:x="551" fg:w="11"/><text x="50.6617%" y="511.50"></text></g><g><title>__GI___libc_write (11 samples, 1.01%)</title><rect x="50.4117%" y="485" width="1.0064%" height="15" fill="rgb(241,192,25)" fg:x="551" fg:w="11"/><text x="50.6617%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (9 samples, 0.82%)</title><rect x="50.5947%" y="469" width="0.8234%" height="15" fill="rgb(208,124,10)" fg:x="553" fg:w="9"/><text x="50.8447%" y="479.50"></text></g><g><title>do_syscall_64 (9 samples, 0.82%)</title><rect x="50.5947%" y="453" width="0.8234%" height="15" fill="rgb(222,33,0)" fg:x="553" fg:w="9"/><text x="50.8447%" y="463.50"></text></g><g><title>__x64_sys_write (9 samples, 0.82%)</title><rect x="50.5947%" y="437" width="0.8234%" height="15" fill="rgb(234,209,28)" fg:x="553" fg:w="9"/><text x="50.8447%" y="447.50"></text></g><g><title>ksys_write (9 samples, 0.82%)</title><rect x="50.5947%" y="421" width="0.8234%" height="15" fill="rgb(224,11,23)" fg:x="553" fg:w="9"/><text x="50.8447%" y="431.50"></text></g><g><title>vfs_write (9 samples, 0.82%)</title><rect x="50.5947%" y="405" width="0.8234%" height="15" fill="rgb(232,99,1)" fg:x="553" fg:w="9"/><text x="50.8447%" y="415.50"></text></g><g><title>new_sync_write (5 samples, 0.46%)</title><rect x="50.9607%" y="389" width="0.4575%" height="15" fill="rgb(237,95,45)" fg:x="557" fg:w="5"/><text x="51.2107%" y="399.50"></text></g><g><title>ext4_file_write_iter (5 samples, 0.46%)</title><rect x="50.9607%" y="373" width="0.4575%" height="15" fill="rgb(208,109,11)" fg:x="557" fg:w="5"/><text x="51.2107%" y="383.50"></text></g><g><title>ext4_buffered_write_iter (5 samples, 0.46%)</title><rect x="50.9607%" y="357" width="0.4575%" height="15" fill="rgb(216,190,48)" fg:x="557" fg:w="5"/><text x="51.2107%" y="367.50"></text></g><g><title>generic_perform_write (3 samples, 0.27%)</title><rect x="51.1436%" y="341" width="0.2745%" height="15" fill="rgb(251,171,36)" fg:x="559" fg:w="3"/><text x="51.3936%" y="351.50"></text></g><g><title>ext4_da_write_end (3 samples, 0.27%)</title><rect x="51.1436%" y="325" width="0.2745%" height="15" fill="rgb(230,62,22)" fg:x="559" fg:w="3"/><text x="51.3936%" y="335.50"></text></g><g><title>generic_write_end (3 samples, 0.27%)</title><rect x="51.1436%" y="309" width="0.2745%" height="15" fill="rgb(225,114,35)" fg:x="559" fg:w="3"/><text x="51.3936%" y="319.50"></text></g><g><title>__mark_inode_dirty (2 samples, 0.18%)</title><rect x="51.2351%" y="293" width="0.1830%" height="15" fill="rgb(215,118,42)" fg:x="560" fg:w="2"/><text x="51.4851%" y="303.50"></text></g><g><title>ext4_dirty_inode (2 samples, 0.18%)</title><rect x="51.2351%" y="277" width="0.1830%" height="15" fill="rgb(243,119,21)" fg:x="560" fg:w="2"/><text x="51.4851%" y="287.50"></text></g><g><title>__ext4_mark_inode_dirty (1 samples, 0.09%)</title><rect x="51.3266%" y="261" width="0.0915%" height="15" fill="rgb(252,177,53)" fg:x="561" fg:w="1"/><text x="51.5766%" y="271.50"></text></g><g><title>ext4_mark_iloc_dirty (1 samples, 0.09%)</title><rect x="51.3266%" y="245" width="0.0915%" height="15" fill="rgb(237,209,29)" fg:x="561" fg:w="1"/><text x="51.5766%" y="255.50"></text></g><g><title>ext4_do_update_inode.isra.0 (1 samples, 0.09%)</title><rect x="51.3266%" y="229" width="0.0915%" height="15" fill="rgb(212,65,23)" fg:x="561" fg:w="1"/><text x="51.5766%" y="239.50"></text></g><g><title>__ext4_handle_dirty_metadata (1 samples, 0.09%)</title><rect x="51.3266%" y="213" width="0.0915%" height="15" fill="rgb(230,222,46)" fg:x="561" fg:w="1"/><text x="51.5766%" y="223.50"></text></g><g><title>__GI___libc_write (1 samples, 0.09%)</title><rect x="51.4181%" y="501" width="0.0915%" height="15" fill="rgb(215,135,32)" fg:x="562" fg:w="1"/><text x="51.6681%" y="511.50"></text></g><g><title>__GI___libc_write (1 samples, 0.09%)</title><rect x="51.4181%" y="485" width="0.0915%" height="15" fill="rgb(246,101,22)" fg:x="562" fg:w="1"/><text x="51.6681%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="51.4181%" y="469" width="0.0915%" height="15" fill="rgb(206,107,13)" fg:x="562" fg:w="1"/><text x="51.6681%" y="479.50"></text></g><g><title>do_syscall_64 (1 samples, 0.09%)</title><rect x="51.4181%" y="453" width="0.0915%" height="15" fill="rgb(250,100,44)" fg:x="562" fg:w="1"/><text x="51.6681%" y="463.50"></text></g><g><title>__x64_sys_write (1 samples, 0.09%)</title><rect x="51.4181%" y="437" width="0.0915%" height="15" fill="rgb(231,147,38)" fg:x="562" fg:w="1"/><text x="51.6681%" y="447.50"></text></g><g><title>ksys_write (1 samples, 0.09%)</title><rect x="51.4181%" y="421" width="0.0915%" height="15" fill="rgb(229,8,40)" fg:x="562" fg:w="1"/><text x="51.6681%" y="431.50"></text></g><g><title>vfs_write (1 samples, 0.09%)</title><rect x="51.4181%" y="405" width="0.0915%" height="15" fill="rgb(221,135,30)" fg:x="562" fg:w="1"/><text x="51.6681%" y="415.50"></text></g><g><title>__fsnotify_parent (1 samples, 0.09%)</title><rect x="51.4181%" y="389" width="0.0915%" height="15" fill="rgb(249,193,18)" fg:x="562" fg:w="1"/><text x="51.6681%" y="399.50"></text></g><g><title>fsnotify (1 samples, 0.09%)</title><rect x="51.4181%" y="373" width="0.0915%" height="15" fill="rgb(209,133,39)" fg:x="562" fg:w="1"/><text x="51.6681%" y="383.50"></text></g><g><title>byteorder::io::WriteBytesExt::write_u32 (2 samples, 0.18%)</title><rect x="51.4181%" y="581" width="0.1830%" height="15" fill="rgb(232,100,14)" fg:x="562" fg:w="2"/><text x="51.6681%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.18%)</title><rect x="51.4181%" y="565" width="0.1830%" height="15" fill="rgb(224,185,1)" fg:x="562" fg:w="2"/><text x="51.6681%" y="575.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (2 samples, 0.18%)</title><rect x="51.4181%" y="549" width="0.1830%" height="15" fill="rgb(223,139,8)" fg:x="562" fg:w="2"/><text x="51.6681%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::write (2 samples, 0.18%)</title><rect x="51.4181%" y="533" width="0.1830%" height="15" fill="rgb(232,213,38)" fg:x="562" fg:w="2"/><text x="51.6681%" y="543.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (2 samples, 0.18%)</title><rect x="51.4181%" y="517" width="0.1830%" height="15" fill="rgb(207,94,22)" fg:x="562" fg:w="2"/><text x="51.6681%" y="527.50"></text></g><g><title>std::sys::unix::cvt (1 samples, 0.09%)</title><rect x="51.5096%" y="501" width="0.0915%" height="15" fill="rgb(219,183,54)" fg:x="563" fg:w="1"/><text x="51.7596%" y="511.50"></text></g><g><title>__kmalloc (2 samples, 0.18%)</title><rect x="51.6011%" y="325" width="0.1830%" height="15" fill="rgb(216,185,54)" fg:x="564" fg:w="2"/><text x="51.8511%" y="335.50"></text></g><g><title>obj_cgroup_charge (2 samples, 0.18%)</title><rect x="51.6011%" y="309" width="0.1830%" height="15" fill="rgb(254,217,39)" fg:x="564" fg:w="2"/><text x="51.8511%" y="319.50"></text></g><g><title>obj_cgroup_charge_pages (2 samples, 0.18%)</title><rect x="51.6011%" y="293" width="0.1830%" height="15" fill="rgb(240,178,23)" fg:x="564" fg:w="2"/><text x="51.8511%" y="303.50"></text></g><g><title>try_charge_memcg (2 samples, 0.18%)</title><rect x="51.6011%" y="277" width="0.1830%" height="15" fill="rgb(218,11,47)" fg:x="564" fg:w="2"/><text x="51.8511%" y="287.50"></text></g><g><title>refill_stock (1 samples, 0.09%)</title><rect x="51.6926%" y="261" width="0.0915%" height="15" fill="rgb(218,51,51)" fg:x="565" fg:w="1"/><text x="51.9426%" y="271.50"></text></g><g><title>drain_stock (1 samples, 0.09%)</title><rect x="51.6926%" y="245" width="0.0915%" height="15" fill="rgb(238,126,27)" fg:x="565" fg:w="1"/><text x="51.9426%" y="255.50"></text></g><g><title>page_counter_uncharge (1 samples, 0.09%)</title><rect x="51.6926%" y="229" width="0.0915%" height="15" fill="rgb(249,202,22)" fg:x="565" fg:w="1"/><text x="51.9426%" y="239.50"></text></g><g><title>page_counter_cancel (1 samples, 0.09%)</title><rect x="51.6926%" y="213" width="0.0915%" height="15" fill="rgb(254,195,49)" fg:x="565" fg:w="1"/><text x="51.9426%" y="223.50"></text></g><g><title>__fsnotify_parent (3 samples, 0.27%)</title><rect x="51.6011%" y="405" width="0.2745%" height="15" fill="rgb(208,123,14)" fg:x="564" fg:w="3"/><text x="51.8511%" y="415.50"></text></g><g><title>fsnotify (3 samples, 0.27%)</title><rect x="51.6011%" y="389" width="0.2745%" height="15" fill="rgb(224,200,8)" fg:x="564" fg:w="3"/><text x="51.8511%" y="399.50"></text></g><g><title>send_to_group (3 samples, 0.27%)</title><rect x="51.6011%" y="373" width="0.2745%" height="15" fill="rgb(217,61,36)" fg:x="564" fg:w="3"/><text x="51.8511%" y="383.50"></text></g><g><title>fsnotify_handle_inode_event.isra.0 (3 samples, 0.27%)</title><rect x="51.6011%" y="357" width="0.2745%" height="15" fill="rgb(206,35,45)" fg:x="564" fg:w="3"/><text x="51.8511%" y="367.50"></text></g><g><title>inotify_handle_inode_event (3 samples, 0.27%)</title><rect x="51.6011%" y="341" width="0.2745%" height="15" fill="rgb(217,65,33)" fg:x="564" fg:w="3"/><text x="51.8511%" y="351.50"></text></g><g><title>memset_erms (1 samples, 0.09%)</title><rect x="51.7841%" y="325" width="0.0915%" height="15" fill="rgb(222,158,48)" fg:x="566" fg:w="1"/><text x="52.0341%" y="335.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.37%)</title><rect x="51.6011%" y="581" width="0.3660%" height="15" fill="rgb(254,2,54)" fg:x="564" fg:w="4"/><text x="51.8511%" y="591.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (4 samples, 0.37%)</title><rect x="51.6011%" y="565" width="0.3660%" height="15" fill="rgb(250,143,38)" fg:x="564" fg:w="4"/><text x="51.8511%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::write (4 samples, 0.37%)</title><rect x="51.6011%" y="549" width="0.3660%" height="15" fill="rgb(248,25,0)" fg:x="564" fg:w="4"/><text x="51.8511%" y="559.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (4 samples, 0.37%)</title><rect x="51.6011%" y="533" width="0.3660%" height="15" fill="rgb(206,152,27)" fg:x="564" fg:w="4"/><text x="51.8511%" y="543.50"></text></g><g><title>__GI___libc_write (4 samples, 0.37%)</title><rect x="51.6011%" y="517" width="0.3660%" height="15" fill="rgb(240,77,30)" fg:x="564" fg:w="4"/><text x="51.8511%" y="527.50"></text></g><g><title>__GI___libc_write (4 samples, 0.37%)</title><rect x="51.6011%" y="501" width="0.3660%" height="15" fill="rgb(231,5,3)" fg:x="564" fg:w="4"/><text x="51.8511%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.37%)</title><rect x="51.6011%" y="485" width="0.3660%" height="15" fill="rgb(207,226,32)" fg:x="564" fg:w="4"/><text x="51.8511%" y="495.50"></text></g><g><title>do_syscall_64 (4 samples, 0.37%)</title><rect x="51.6011%" y="469" width="0.3660%" height="15" fill="rgb(222,207,47)" fg:x="564" fg:w="4"/><text x="51.8511%" y="479.50"></text></g><g><title>__x64_sys_write (4 samples, 0.37%)</title><rect x="51.6011%" y="453" width="0.3660%" height="15" fill="rgb(229,115,45)" fg:x="564" fg:w="4"/><text x="51.8511%" y="463.50"></text></g><g><title>ksys_write (4 samples, 0.37%)</title><rect x="51.6011%" y="437" width="0.3660%" height="15" fill="rgb(224,191,6)" fg:x="564" fg:w="4"/><text x="51.8511%" y="447.50"></text></g><g><title>vfs_write (4 samples, 0.37%)</title><rect x="51.6011%" y="421" width="0.3660%" height="15" fill="rgb(230,227,24)" fg:x="564" fg:w="4"/><text x="51.8511%" y="431.50"></text></g><g><title>new_sync_write (1 samples, 0.09%)</title><rect x="51.8756%" y="405" width="0.0915%" height="15" fill="rgb(228,80,19)" fg:x="567" fg:w="1"/><text x="52.1256%" y="415.50"></text></g><g><title>ext4_file_write_iter (1 samples, 0.09%)</title><rect x="51.8756%" y="389" width="0.0915%" height="15" fill="rgb(247,229,0)" fg:x="567" fg:w="1"/><text x="52.1256%" y="399.50"></text></g><g><title>ext4_buffered_write_iter (1 samples, 0.09%)</title><rect x="51.8756%" y="373" width="0.0915%" height="15" fill="rgb(237,194,15)" fg:x="567" fg:w="1"/><text x="52.1256%" y="383.50"></text></g><g><title>generic_perform_write (1 samples, 0.09%)</title><rect x="51.8756%" y="357" width="0.0915%" height="15" fill="rgb(219,203,20)" fg:x="567" fg:w="1"/><text x="52.1256%" y="367.50"></text></g><g><title>ext4_da_write_begin (1 samples, 0.09%)</title><rect x="51.8756%" y="341" width="0.0915%" height="15" fill="rgb(234,128,8)" fg:x="567" fg:w="1"/><text x="52.1256%" y="351.50"></text></g><g><title>grab_cache_page_write_begin (1 samples, 0.09%)</title><rect x="51.8756%" y="325" width="0.0915%" height="15" fill="rgb(248,202,8)" fg:x="567" fg:w="1"/><text x="52.1256%" y="335.50"></text></g><g><title>pagecache_get_page (1 samples, 0.09%)</title><rect x="51.8756%" y="309" width="0.0915%" height="15" fill="rgb(206,104,37)" fg:x="567" fg:w="1"/><text x="52.1256%" y="319.50"></text></g><g><title>xas_load (1 samples, 0.09%)</title><rect x="51.8756%" y="293" width="0.0915%" height="15" fill="rgb(223,8,27)" fg:x="567" fg:w="1"/><text x="52.1256%" y="303.50"></text></g><g><title>demoparser::parsing::cache::cache_writer::WriteCache::write_bytes_to_zip (363 samples, 33.21%)</title><rect x="18.8472%" y="645" width="33.2113%" height="15" fill="rgb(216,217,28)" fg:x="206" fg:w="363"/><text x="19.0972%" y="655.50">demoparser::parsing::cache::cache_writer::WriteCache::..</text></g><g><title>zip::write::&lt;impl zip::write::zip_writer::ZipWriter&lt;W&gt;&gt;::start_file (29 samples, 2.65%)</title><rect x="49.4053%" y="629" width="2.6532%" height="15" fill="rgb(249,199,1)" fg:x="540" fg:w="29"/><text x="49.6553%" y="639.50">zi..</text></g><g><title>zip::write::&lt;impl zip::write::zip_writer::ZipWriter&lt;W&gt;&gt;::start_entry (29 samples, 2.65%)</title><rect x="49.4053%" y="613" width="2.6532%" height="15" fill="rgb(240,85,17)" fg:x="540" fg:w="29"/><text x="49.6553%" y="623.50">zi..</text></g><g><title>zip::write::write_local_file_header (18 samples, 1.65%)</title><rect x="50.4117%" y="597" width="1.6468%" height="15" fill="rgb(206,108,45)" fg:x="551" fg:w="18"/><text x="50.6617%" y="607.50"></text></g><g><title>zip::compression::CompressionMethod::to_u16 (1 samples, 0.09%)</title><rect x="51.9671%" y="581" width="0.0915%" height="15" fill="rgb(245,210,41)" fg:x="568" fg:w="1"/><text x="52.2171%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.09%)</title><rect x="52.0586%" y="629" width="0.0915%" height="15" fill="rgb(206,13,37)" fg:x="569" fg:w="1"/><text x="52.3086%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.09%)</title><rect x="52.0586%" y="613" width="0.0915%" height="15" fill="rgb(250,61,18)" fg:x="569" fg:w="1"/><text x="52.3086%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.09%)</title><rect x="52.0586%" y="597" width="0.0915%" height="15" fill="rgb(235,172,48)" fg:x="569" fg:w="1"/><text x="52.3086%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="52.0586%" y="581" width="0.0915%" height="15" fill="rgb(249,201,17)" fg:x="569" fg:w="1"/><text x="52.3086%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.09%)</title><rect x="52.0586%" y="565" width="0.0915%" height="15" fill="rgb(219,208,6)" fg:x="569" fg:w="1"/><text x="52.3086%" y="575.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.09%)</title><rect x="52.0586%" y="549" width="0.0915%" height="15" fill="rgb(248,31,23)" fg:x="569" fg:w="1"/><text x="52.3086%" y="559.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.09%)</title><rect x="52.0586%" y="533" width="0.0915%" height="15" fill="rgb(245,15,42)" fg:x="569" fg:w="1"/><text x="52.3086%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (1 samples, 0.09%)</title><rect x="52.1500%" y="613" width="0.0915%" height="15" fill="rgb(222,217,39)" fg:x="570" fg:w="1"/><text x="52.4000%" y="623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.09%)</title><rect x="52.1500%" y="597" width="0.0915%" height="15" fill="rgb(210,219,27)" fg:x="570" fg:w="1"/><text x="52.4000%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.09%)</title><rect x="52.1500%" y="581" width="0.0915%" height="15" fill="rgb(252,166,36)" fg:x="570" fg:w="1"/><text x="52.4000%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.09%)</title><rect x="52.1500%" y="565" width="0.0915%" height="15" fill="rgb(245,132,34)" fg:x="570" fg:w="1"/><text x="52.4000%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.09%)</title><rect x="52.1500%" y="549" width="0.0915%" height="15" fill="rgb(236,54,3)" fg:x="570" fg:w="1"/><text x="52.4000%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.09%)</title><rect x="52.1500%" y="533" width="0.0915%" height="15" fill="rgb(241,173,43)" fg:x="570" fg:w="1"/><text x="52.4000%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.09%)</title><rect x="52.1500%" y="517" width="0.0915%" height="15" fill="rgb(215,190,9)" fg:x="570" fg:w="1"/><text x="52.4000%" y="527.50"></text></g><g><title>std::io::Write::write_all (17 samples, 1.56%)</title><rect x="52.2415%" y="613" width="1.5554%" height="15" fill="rgb(242,101,16)" fg:x="571" fg:w="17"/><text x="52.4915%" y="623.50"></text></g><g><title>zip::write::&lt;impl std::io::Write for zip::write::zip_writer::ZipWriter&lt;W&gt;&gt;::write (17 samples, 1.56%)</title><rect x="52.2415%" y="597" width="1.5554%" height="15" fill="rgb(223,190,21)" fg:x="571" fg:w="17"/><text x="52.4915%" y="607.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write (17 samples, 1.56%)</title><rect x="52.2415%" y="581" width="1.5554%" height="15" fill="rgb(215,228,25)" fg:x="571" fg:w="17"/><text x="52.4915%" y="591.50"></text></g><g><title>&lt;zstd::stream::write::Encoder&lt;W&gt; as std::io::Write&gt;::write (17 samples, 1.56%)</title><rect x="52.2415%" y="565" width="1.5554%" height="15" fill="rgb(225,36,22)" fg:x="571" fg:w="17"/><text x="52.4915%" y="575.50"></text></g><g><title>&lt;zstd::stream::zio::writer::Writer&lt;W,D&gt; as std::io::Write&gt;::write (17 samples, 1.56%)</title><rect x="52.2415%" y="549" width="1.5554%" height="15" fill="rgb(251,106,46)" fg:x="571" fg:w="17"/><text x="52.4915%" y="559.50"></text></g><g><title>zstd::stream::zio::writer::Writer&lt;W,D&gt;::with_buffer (17 samples, 1.56%)</title><rect x="52.2415%" y="533" width="1.5554%" height="15" fill="rgb(208,90,1)" fg:x="571" fg:w="17"/><text x="52.4915%" y="543.50"></text></g><g><title>&lt;zstd::stream::zio::writer::Writer&lt;W,D&gt; as std::io::Write&gt;::write::{{closure}} (17 samples, 1.56%)</title><rect x="52.2415%" y="517" width="1.5554%" height="15" fill="rgb(243,10,4)" fg:x="571" fg:w="17"/><text x="52.4915%" y="527.50"></text></g><g><title>&lt;zstd::stream::raw::Encoder as zstd::stream::raw::Operation&gt;::run (17 samples, 1.56%)</title><rect x="52.2415%" y="501" width="1.5554%" height="15" fill="rgb(212,137,27)" fg:x="571" fg:w="17"/><text x="52.4915%" y="511.50"></text></g><g><title>zstd_safe::CCtx::compress_stream (17 samples, 1.56%)</title><rect x="52.2415%" y="485" width="1.5554%" height="15" fill="rgb(231,220,49)" fg:x="571" fg:w="17"/><text x="52.4915%" y="495.50"></text></g><g><title>ZSTD_compressStream (17 samples, 1.56%)</title><rect x="52.2415%" y="469" width="1.5554%" height="15" fill="rgb(237,96,20)" fg:x="571" fg:w="17"/><text x="52.4915%" y="479.50"></text></g><g><title>ZSTD_compressStream2 (17 samples, 1.56%)</title><rect x="52.2415%" y="453" width="1.5554%" height="15" fill="rgb(239,229,30)" fg:x="571" fg:w="17"/><text x="52.4915%" y="463.50"></text></g><g><title>ZSTD_CCtx_init_compressStream2 (17 samples, 1.56%)</title><rect x="52.2415%" y="437" width="1.5554%" height="15" fill="rgb(219,65,33)" fg:x="571" fg:w="17"/><text x="52.4915%" y="447.50"></text></g><g><title>ZSTD_compressBegin_internal (17 samples, 1.56%)</title><rect x="52.2415%" y="421" width="1.5554%" height="15" fill="rgb(243,134,7)" fg:x="571" fg:w="17"/><text x="52.4915%" y="431.50"></text></g><g><title>ZSTD_resetCCtx_internal (17 samples, 1.56%)</title><rect x="52.2415%" y="405" width="1.5554%" height="15" fill="rgb(216,177,54)" fg:x="571" fg:w="17"/><text x="52.4915%" y="415.50"></text></g><g><title>ZSTD_reset_matchState (17 samples, 1.56%)</title><rect x="52.2415%" y="389" width="1.5554%" height="15" fill="rgb(211,160,20)" fg:x="571" fg:w="17"/><text x="52.4915%" y="399.50"></text></g><g><title>ZSTD_cwksp_clean_tables (17 samples, 1.56%)</title><rect x="52.2415%" y="373" width="1.5554%" height="15" fill="rgb(239,85,39)" fg:x="571" fg:w="17"/><text x="52.4915%" y="383.50"></text></g><g><title>[libc.so.6] (17 samples, 1.56%)</title><rect x="52.2415%" y="357" width="1.5554%" height="15" fill="rgb(232,125,22)" fg:x="571" fg:w="17"/><text x="52.4915%" y="367.50"></text></g><g><title>asm_sysvec_reschedule_ipi (6 samples, 0.55%)</title><rect x="53.2479%" y="341" width="0.5489%" height="15" fill="rgb(244,57,34)" fg:x="582" fg:w="6"/><text x="53.4979%" y="351.50"></text></g><g><title>sysvec_reschedule_ipi (6 samples, 0.55%)</title><rect x="53.2479%" y="325" width="0.5489%" height="15" fill="rgb(214,203,32)" fg:x="582" fg:w="6"/><text x="53.4979%" y="335.50"></text></g><g><title>irqentry_exit (6 samples, 0.55%)</title><rect x="53.2479%" y="309" width="0.5489%" height="15" fill="rgb(207,58,43)" fg:x="582" fg:w="6"/><text x="53.4979%" y="319.50"></text></g><g><title>irqentry_exit_to_user_mode (6 samples, 0.55%)</title><rect x="53.2479%" y="293" width="0.5489%" height="15" fill="rgb(215,193,15)" fg:x="582" fg:w="6"/><text x="53.4979%" y="303.50"></text></g><g><title>exit_to_user_mode_prepare (6 samples, 0.55%)</title><rect x="53.2479%" y="277" width="0.5489%" height="15" fill="rgb(232,15,44)" fg:x="582" fg:w="6"/><text x="53.4979%" y="287.50"></text></g><g><title>exit_to_user_mode_loop (6 samples, 0.55%)</title><rect x="53.2479%" y="261" width="0.5489%" height="15" fill="rgb(212,3,48)" fg:x="582" fg:w="6"/><text x="53.4979%" y="271.50"></text></g><g><title>__rseq_handle_notify_resume (6 samples, 0.55%)</title><rect x="53.2479%" y="245" width="0.5489%" height="15" fill="rgb(218,128,7)" fg:x="582" fg:w="6"/><text x="53.4979%" y="255.50"></text></g><g><title>rseq_ip_fixup (6 samples, 0.55%)</title><rect x="53.2479%" y="229" width="0.5489%" height="15" fill="rgb(226,216,39)" fg:x="582" fg:w="6"/><text x="53.4979%" y="239.50"></text></g><g><title>__get_user_8 (6 samples, 0.55%)</title><rect x="53.2479%" y="213" width="0.5489%" height="15" fill="rgb(243,47,51)" fg:x="582" fg:w="6"/><text x="53.4979%" y="223.50"></text></g><g><title>ZSTD_buildSequencesStatistics (2 samples, 0.18%)</title><rect x="53.7969%" y="293" width="0.1830%" height="15" fill="rgb(241,183,40)" fg:x="588" fg:w="2"/><text x="54.0469%" y="303.50"></text></g><g><title>ZSTD_buildCTable (2 samples, 0.18%)</title><rect x="53.7969%" y="277" width="0.1830%" height="15" fill="rgb(231,217,32)" fg:x="588" fg:w="2"/><text x="54.0469%" y="287.50"></text></g><g><title>FSE_buildCTable_wksp (2 samples, 0.18%)</title><rect x="53.7969%" y="261" width="0.1830%" height="15" fill="rgb(229,61,38)" fg:x="588" fg:w="2"/><text x="54.0469%" y="271.50"></text></g><g><title>HUF_compress1X_repeat (1 samples, 0.09%)</title><rect x="53.9799%" y="277" width="0.0915%" height="15" fill="rgb(225,210,5)" fg:x="590" fg:w="1"/><text x="54.2299%" y="287.50"></text></g><g><title>HUF_compress_internal (1 samples, 0.09%)</title><rect x="53.9799%" y="261" width="0.0915%" height="15" fill="rgb(231,79,45)" fg:x="590" fg:w="1"/><text x="54.2299%" y="271.50"></text></g><g><title>HUF_writeCTable_wksp (1 samples, 0.09%)</title><rect x="53.9799%" y="245" width="0.0915%" height="15" fill="rgb(224,100,7)" fg:x="590" fg:w="1"/><text x="54.2299%" y="255.50"></text></g><g><title>HUF_compressWeights (1 samples, 0.09%)</title><rect x="53.9799%" y="229" width="0.0915%" height="15" fill="rgb(241,198,18)" fg:x="590" fg:w="1"/><text x="54.2299%" y="239.50"></text></g><g><title>FSE_writeNCount (1 samples, 0.09%)</title><rect x="53.9799%" y="213" width="0.0915%" height="15" fill="rgb(252,97,53)" fg:x="590" fg:w="1"/><text x="54.2299%" y="223.50"></text></g><g><title>FSE_writeNCount_generic (1 samples, 0.09%)</title><rect x="53.9799%" y="197" width="0.0915%" height="15" fill="rgb(220,88,7)" fg:x="590" fg:w="1"/><text x="54.2299%" y="207.50"></text></g><g><title>zstd::stream::zio::writer::Writer&lt;W,D&gt;::with_buffer (4 samples, 0.37%)</title><rect x="53.7969%" y="501" width="0.3660%" height="15" fill="rgb(213,176,14)" fg:x="588" fg:w="4"/><text x="54.0469%" y="511.50"></text></g><g><title>zstd::stream::zio::writer::Writer&lt;W,D&gt;::finish::{{closure}} (4 samples, 0.37%)</title><rect x="53.7969%" y="485" width="0.3660%" height="15" fill="rgb(246,73,7)" fg:x="588" fg:w="4"/><text x="54.0469%" y="495.50"></text></g><g><title>&lt;zstd::stream::raw::Encoder as zstd::stream::raw::Operation&gt;::finish (4 samples, 0.37%)</title><rect x="53.7969%" y="469" width="0.3660%" height="15" fill="rgb(245,64,36)" fg:x="588" fg:w="4"/><text x="54.0469%" y="479.50"></text></g><g><title>zstd_safe::CCtx::end_stream (4 samples, 0.37%)</title><rect x="53.7969%" y="453" width="0.3660%" height="15" fill="rgb(245,80,10)" fg:x="588" fg:w="4"/><text x="54.0469%" y="463.50"></text></g><g><title>ZSTD_endStream (4 samples, 0.37%)</title><rect x="53.7969%" y="437" width="0.3660%" height="15" fill="rgb(232,107,50)" fg:x="588" fg:w="4"/><text x="54.0469%" y="447.50"></text></g><g><title>ZSTD_compressStream2 (4 samples, 0.37%)</title><rect x="53.7969%" y="421" width="0.3660%" height="15" fill="rgb(253,3,0)" fg:x="588" fg:w="4"/><text x="54.0469%" y="431.50"></text></g><g><title>ZSTD_compressStream_generic (4 samples, 0.37%)</title><rect x="53.7969%" y="405" width="0.3660%" height="15" fill="rgb(212,99,53)" fg:x="588" fg:w="4"/><text x="54.0469%" y="415.50"></text></g><g><title>ZSTD_compressEnd (4 samples, 0.37%)</title><rect x="53.7969%" y="389" width="0.3660%" height="15" fill="rgb(249,111,54)" fg:x="588" fg:w="4"/><text x="54.0469%" y="399.50"></text></g><g><title>ZSTD_compressContinue_internal (4 samples, 0.37%)</title><rect x="53.7969%" y="373" width="0.3660%" height="15" fill="rgb(249,55,30)" fg:x="588" fg:w="4"/><text x="54.0469%" y="383.50"></text></g><g><title>ZSTD_compress_frameChunk (4 samples, 0.37%)</title><rect x="53.7969%" y="357" width="0.3660%" height="15" fill="rgb(237,47,42)" fg:x="588" fg:w="4"/><text x="54.0469%" y="367.50"></text></g><g><title>ZSTD_compressBlock_internal (4 samples, 0.37%)</title><rect x="53.7969%" y="341" width="0.3660%" height="15" fill="rgb(211,20,18)" fg:x="588" fg:w="4"/><text x="54.0469%" y="351.50"></text></g><g><title>ZSTD_entropyCompressSeqStore (4 samples, 0.37%)</title><rect x="53.7969%" y="325" width="0.3660%" height="15" fill="rgb(231,203,46)" fg:x="588" fg:w="4"/><text x="54.0469%" y="335.50"></text></g><g><title>ZSTD_entropyCompressSeqStore_internal (4 samples, 0.37%)</title><rect x="53.7969%" y="309" width="0.3660%" height="15" fill="rgb(237,142,3)" fg:x="588" fg:w="4"/><text x="54.0469%" y="319.50"></text></g><g><title>ZSTD_compressLiterals (2 samples, 0.18%)</title><rect x="53.9799%" y="293" width="0.1830%" height="15" fill="rgb(241,107,1)" fg:x="590" fg:w="2"/><text x="54.2299%" y="303.50"></text></g><g><title>HUF_compress4X_repeat (1 samples, 0.09%)</title><rect x="54.0714%" y="277" width="0.0915%" height="15" fill="rgb(229,83,13)" fg:x="591" fg:w="1"/><text x="54.3214%" y="287.50"></text></g><g><title>HUF_compress_internal (1 samples, 0.09%)</title><rect x="54.0714%" y="261" width="0.0915%" height="15" fill="rgb(241,91,40)" fg:x="591" fg:w="1"/><text x="54.3214%" y="271.50"></text></g><g><title>HUF_buildCTable_wksp (1 samples, 0.09%)</title><rect x="54.0714%" y="245" width="0.0915%" height="15" fill="rgb(225,3,45)" fg:x="591" fg:w="1"/><text x="54.3214%" y="255.50"></text></g><g><title>HUF_sort (1 samples, 0.09%)</title><rect x="54.0714%" y="229" width="0.0915%" height="15" fill="rgb(244,223,14)" fg:x="591" fg:w="1"/><text x="54.3214%" y="239.50"></text></g><g><title>__kmalloc (1 samples, 0.09%)</title><rect x="54.1629%" y="245" width="0.0915%" height="15" fill="rgb(224,124,37)" fg:x="592" fg:w="1"/><text x="54.4129%" y="255.50"></text></g><g><title>obj_cgroup_charge (1 samples, 0.09%)</title><rect x="54.1629%" y="229" width="0.0915%" height="15" fill="rgb(251,171,30)" fg:x="592" fg:w="1"/><text x="54.4129%" y="239.50"></text></g><g><title>obj_cgroup_charge_pages (1 samples, 0.09%)</title><rect x="54.1629%" y="213" width="0.0915%" height="15" fill="rgb(236,46,54)" fg:x="592" fg:w="1"/><text x="54.4129%" y="223.50"></text></g><g><title>try_charge_memcg (1 samples, 0.09%)</title><rect x="54.1629%" y="197" width="0.0915%" height="15" fill="rgb(245,213,5)" fg:x="592" fg:w="1"/><text x="54.4129%" y="207.50"></text></g><g><title>page_counter_try_charge (1 samples, 0.09%)</title><rect x="54.1629%" y="181" width="0.0915%" height="15" fill="rgb(230,144,27)" fg:x="592" fg:w="1"/><text x="54.4129%" y="191.50"></text></g><g><title>__fsnotify_parent (2 samples, 0.18%)</title><rect x="54.1629%" y="325" width="0.1830%" height="15" fill="rgb(220,86,6)" fg:x="592" fg:w="2"/><text x="54.4129%" y="335.50"></text></g><g><title>fsnotify (2 samples, 0.18%)</title><rect x="54.1629%" y="309" width="0.1830%" height="15" fill="rgb(240,20,13)" fg:x="592" fg:w="2"/><text x="54.4129%" y="319.50"></text></g><g><title>send_to_group (2 samples, 0.18%)</title><rect x="54.1629%" y="293" width="0.1830%" height="15" fill="rgb(217,89,34)" fg:x="592" fg:w="2"/><text x="54.4129%" y="303.50"></text></g><g><title>fsnotify_handle_inode_event.isra.0 (2 samples, 0.18%)</title><rect x="54.1629%" y="277" width="0.1830%" height="15" fill="rgb(229,13,5)" fg:x="592" fg:w="2"/><text x="54.4129%" y="287.50"></text></g><g><title>inotify_handle_inode_event (2 samples, 0.18%)</title><rect x="54.1629%" y="261" width="0.1830%" height="15" fill="rgb(244,67,35)" fg:x="592" fg:w="2"/><text x="54.4129%" y="271.50"></text></g><g><title>inotify_merge (1 samples, 0.09%)</title><rect x="54.2543%" y="245" width="0.0915%" height="15" fill="rgb(221,40,2)" fg:x="593" fg:w="1"/><text x="54.5043%" y="255.50"></text></g><g><title>ext4_da_write_begin (1 samples, 0.09%)</title><rect x="54.3458%" y="261" width="0.0915%" height="15" fill="rgb(237,157,21)" fg:x="594" fg:w="1"/><text x="54.5958%" y="271.50"></text></g><g><title>grab_cache_page_write_begin (1 samples, 0.09%)</title><rect x="54.3458%" y="245" width="0.0915%" height="15" fill="rgb(222,94,11)" fg:x="594" fg:w="1"/><text x="54.5958%" y="255.50"></text></g><g><title>xas_load (1 samples, 0.09%)</title><rect x="54.3458%" y="229" width="0.0915%" height="15" fill="rgb(249,113,6)" fg:x="594" fg:w="1"/><text x="54.5958%" y="239.50"></text></g><g><title>zip::write::GenericZipWriter&lt;W&gt;::switch_to (8 samples, 0.73%)</title><rect x="53.7969%" y="565" width="0.7319%" height="15" fill="rgb(238,137,36)" fg:x="588" fg:w="8"/><text x="54.0469%" y="575.50"></text></g><g><title>zstd::stream::write::Encoder&lt;W&gt;::finish (8 samples, 0.73%)</title><rect x="53.7969%" y="549" width="0.7319%" height="15" fill="rgb(210,102,26)" fg:x="588" fg:w="8"/><text x="54.0469%" y="559.50"></text></g><g><title>zstd::stream::write::Encoder&lt;W&gt;::try_finish (8 samples, 0.73%)</title><rect x="53.7969%" y="533" width="0.7319%" height="15" fill="rgb(218,30,30)" fg:x="588" fg:w="8"/><text x="54.0469%" y="543.50"></text></g><g><title>zstd::stream::zio::writer::Writer&lt;W,D&gt;::finish (8 samples, 0.73%)</title><rect x="53.7969%" y="517" width="0.7319%" height="15" fill="rgb(214,67,26)" fg:x="588" fg:w="8"/><text x="54.0469%" y="527.50"></text></g><g><title>zstd::stream::zio::writer::Writer&lt;W,D&gt;::write_from_offset (4 samples, 0.37%)</title><rect x="54.1629%" y="501" width="0.3660%" height="15" fill="rgb(251,9,53)" fg:x="592" fg:w="4"/><text x="54.4129%" y="511.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (4 samples, 0.37%)</title><rect x="54.1629%" y="485" width="0.3660%" height="15" fill="rgb(228,204,25)" fg:x="592" fg:w="4"/><text x="54.4129%" y="495.50"></text></g><g><title>std::sys::unix::net::Socket::write (4 samples, 0.37%)</title><rect x="54.1629%" y="469" width="0.3660%" height="15" fill="rgb(207,153,8)" fg:x="592" fg:w="4"/><text x="54.4129%" y="479.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (4 samples, 0.37%)</title><rect x="54.1629%" y="453" width="0.3660%" height="15" fill="rgb(242,9,16)" fg:x="592" fg:w="4"/><text x="54.4129%" y="463.50"></text></g><g><title>__GI___libc_write (4 samples, 0.37%)</title><rect x="54.1629%" y="437" width="0.3660%" height="15" fill="rgb(217,211,10)" fg:x="592" fg:w="4"/><text x="54.4129%" y="447.50"></text></g><g><title>__GI___libc_write (4 samples, 0.37%)</title><rect x="54.1629%" y="421" width="0.3660%" height="15" fill="rgb(219,228,52)" fg:x="592" fg:w="4"/><text x="54.4129%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.37%)</title><rect x="54.1629%" y="405" width="0.3660%" height="15" fill="rgb(231,92,29)" fg:x="592" fg:w="4"/><text x="54.4129%" y="415.50"></text></g><g><title>do_syscall_64 (4 samples, 0.37%)</title><rect x="54.1629%" y="389" width="0.3660%" height="15" fill="rgb(232,8,23)" fg:x="592" fg:w="4"/><text x="54.4129%" y="399.50"></text></g><g><title>__x64_sys_write (4 samples, 0.37%)</title><rect x="54.1629%" y="373" width="0.3660%" height="15" fill="rgb(216,211,34)" fg:x="592" fg:w="4"/><text x="54.4129%" y="383.50"></text></g><g><title>ksys_write (4 samples, 0.37%)</title><rect x="54.1629%" y="357" width="0.3660%" height="15" fill="rgb(236,151,0)" fg:x="592" fg:w="4"/><text x="54.4129%" y="367.50"></text></g><g><title>vfs_write (4 samples, 0.37%)</title><rect x="54.1629%" y="341" width="0.3660%" height="15" fill="rgb(209,168,3)" fg:x="592" fg:w="4"/><text x="54.4129%" y="351.50"></text></g><g><title>new_sync_write (2 samples, 0.18%)</title><rect x="54.3458%" y="325" width="0.1830%" height="15" fill="rgb(208,129,28)" fg:x="594" fg:w="2"/><text x="54.5958%" y="335.50"></text></g><g><title>ext4_file_write_iter (2 samples, 0.18%)</title><rect x="54.3458%" y="309" width="0.1830%" height="15" fill="rgb(229,78,22)" fg:x="594" fg:w="2"/><text x="54.5958%" y="319.50"></text></g><g><title>ext4_buffered_write_iter (2 samples, 0.18%)</title><rect x="54.3458%" y="293" width="0.1830%" height="15" fill="rgb(228,187,13)" fg:x="594" fg:w="2"/><text x="54.5958%" y="303.50"></text></g><g><title>generic_perform_write (2 samples, 0.18%)</title><rect x="54.3458%" y="277" width="0.1830%" height="15" fill="rgb(240,119,24)" fg:x="594" fg:w="2"/><text x="54.5958%" y="287.50"></text></g><g><title>ext4_da_write_end (1 samples, 0.09%)</title><rect x="54.4373%" y="261" width="0.0915%" height="15" fill="rgb(209,194,42)" fg:x="595" fg:w="1"/><text x="54.6873%" y="271.50"></text></g><g><title>generic_write_end (1 samples, 0.09%)</title><rect x="54.4373%" y="245" width="0.0915%" height="15" fill="rgb(247,200,46)" fg:x="595" fg:w="1"/><text x="54.6873%" y="255.50"></text></g><g><title>__mark_inode_dirty (1 samples, 0.09%)</title><rect x="54.4373%" y="229" width="0.0915%" height="15" fill="rgb(218,76,16)" fg:x="595" fg:w="1"/><text x="54.6873%" y="239.50"></text></g><g><title>ext4_dirty_inode (1 samples, 0.09%)</title><rect x="54.4373%" y="213" width="0.0915%" height="15" fill="rgb(225,21,48)" fg:x="595" fg:w="1"/><text x="54.6873%" y="223.50"></text></g><g><title>__ext4_journal_start_sb (1 samples, 0.09%)</title><rect x="54.4373%" y="197" width="0.0915%" height="15" fill="rgb(239,223,50)" fg:x="595" fg:w="1"/><text x="54.6873%" y="207.50"></text></g><g><title>jbd2__journal_start (1 samples, 0.09%)</title><rect x="54.4373%" y="181" width="0.0915%" height="15" fill="rgb(244,45,21)" fg:x="595" fg:w="1"/><text x="54.6873%" y="191.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.09%)</title><rect x="54.4373%" y="165" width="0.0915%" height="15" fill="rgb(232,33,43)" fg:x="595" fg:w="1"/><text x="54.6873%" y="175.50"></text></g><g><title>__GI___pthread_disable_asynccancel (1 samples, 0.09%)</title><rect x="54.5288%" y="437" width="0.0915%" height="15" fill="rgb(209,8,3)" fg:x="596" fg:w="1"/><text x="54.7788%" y="447.50"></text></g><g><title>obj_cgroup_charge_pages (1 samples, 0.09%)</title><rect x="54.6203%" y="245" width="0.0915%" height="15" fill="rgb(214,25,53)" fg:x="597" fg:w="1"/><text x="54.8703%" y="255.50"></text></g><g><title>try_charge_memcg (1 samples, 0.09%)</title><rect x="54.6203%" y="229" width="0.0915%" height="15" fill="rgb(254,186,54)" fg:x="597" fg:w="1"/><text x="54.8703%" y="239.50"></text></g><g><title>page_counter_try_charge (1 samples, 0.09%)</title><rect x="54.6203%" y="213" width="0.0915%" height="15" fill="rgb(208,174,49)" fg:x="597" fg:w="1"/><text x="54.8703%" y="223.50"></text></g><g><title>__fsnotify_parent (2 samples, 0.18%)</title><rect x="54.6203%" y="357" width="0.1830%" height="15" fill="rgb(233,191,51)" fg:x="597" fg:w="2"/><text x="54.8703%" y="367.50"></text></g><g><title>fsnotify (2 samples, 0.18%)</title><rect x="54.6203%" y="341" width="0.1830%" height="15" fill="rgb(222,134,10)" fg:x="597" fg:w="2"/><text x="54.8703%" y="351.50"></text></g><g><title>send_to_group (2 samples, 0.18%)</title><rect x="54.6203%" y="325" width="0.1830%" height="15" fill="rgb(230,226,20)" fg:x="597" fg:w="2"/><text x="54.8703%" y="335.50"></text></g><g><title>fsnotify_handle_inode_event.isra.0 (2 samples, 0.18%)</title><rect x="54.6203%" y="309" width="0.1830%" height="15" fill="rgb(251,111,25)" fg:x="597" fg:w="2"/><text x="54.8703%" y="319.50"></text></g><g><title>inotify_handle_inode_event (2 samples, 0.18%)</title><rect x="54.6203%" y="293" width="0.1830%" height="15" fill="rgb(224,40,46)" fg:x="597" fg:w="2"/><text x="54.8703%" y="303.50"></text></g><g><title>__kmalloc (2 samples, 0.18%)</title><rect x="54.6203%" y="277" width="0.1830%" height="15" fill="rgb(236,108,47)" fg:x="597" fg:w="2"/><text x="54.8703%" y="287.50"></text></g><g><title>obj_cgroup_charge (2 samples, 0.18%)</title><rect x="54.6203%" y="261" width="0.1830%" height="15" fill="rgb(234,93,0)" fg:x="597" fg:w="2"/><text x="54.8703%" y="271.50"></text></g><g><title>refill_obj_stock (1 samples, 0.09%)</title><rect x="54.7118%" y="245" width="0.0915%" height="15" fill="rgb(224,213,32)" fg:x="598" fg:w="1"/><text x="54.9618%" y="255.50"></text></g><g><title>obj_cgroup_uncharge_pages (1 samples, 0.09%)</title><rect x="54.7118%" y="229" width="0.0915%" height="15" fill="rgb(251,11,48)" fg:x="598" fg:w="1"/><text x="54.9618%" y="239.50"></text></g><g><title>refill_stock (1 samples, 0.09%)</title><rect x="54.7118%" y="213" width="0.0915%" height="15" fill="rgb(236,173,5)" fg:x="598" fg:w="1"/><text x="54.9618%" y="223.50"></text></g><g><title>file_modified (1 samples, 0.09%)</title><rect x="54.8033%" y="309" width="0.0915%" height="15" fill="rgb(230,95,12)" fg:x="599" fg:w="1"/><text x="55.0533%" y="319.50"></text></g><g><title>zip::write::&lt;impl zip::write::zip_writer::ZipWriter&lt;W&gt;&gt;::finish_file (13 samples, 1.19%)</title><rect x="53.7969%" y="581" width="1.1894%" height="15" fill="rgb(232,209,1)" fg:x="588" fg:w="13"/><text x="54.0469%" y="591.50"></text></g><g><title>zip::write::update_local_file_header (5 samples, 0.46%)</title><rect x="54.5288%" y="565" width="0.4575%" height="15" fill="rgb(232,6,1)" fg:x="596" fg:w="5"/><text x="54.7788%" y="575.50"></text></g><g><title>byteorder::io::WriteBytesExt::write_u32 (5 samples, 0.46%)</title><rect x="54.5288%" y="549" width="0.4575%" height="15" fill="rgb(210,224,50)" fg:x="596" fg:w="5"/><text x="54.7788%" y="559.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.46%)</title><rect x="54.5288%" y="533" width="0.4575%" height="15" fill="rgb(228,127,35)" fg:x="596" fg:w="5"/><text x="54.7788%" y="543.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (5 samples, 0.46%)</title><rect x="54.5288%" y="517" width="0.4575%" height="15" fill="rgb(245,102,45)" fg:x="596" fg:w="5"/><text x="54.7788%" y="527.50"></text></g><g><title>std::sys::unix::net::Socket::write (5 samples, 0.46%)</title><rect x="54.5288%" y="501" width="0.4575%" height="15" fill="rgb(214,1,49)" fg:x="596" fg:w="5"/><text x="54.7788%" y="511.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (5 samples, 0.46%)</title><rect x="54.5288%" y="485" width="0.4575%" height="15" fill="rgb(226,163,40)" fg:x="596" fg:w="5"/><text x="54.7788%" y="495.50"></text></g><g><title>__GI___libc_write (5 samples, 0.46%)</title><rect x="54.5288%" y="469" width="0.4575%" height="15" fill="rgb(239,212,28)" fg:x="596" fg:w="5"/><text x="54.7788%" y="479.50"></text></g><g><title>__GI___libc_write (5 samples, 0.46%)</title><rect x="54.5288%" y="453" width="0.4575%" height="15" fill="rgb(220,20,13)" fg:x="596" fg:w="5"/><text x="54.7788%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.37%)</title><rect x="54.6203%" y="437" width="0.3660%" height="15" fill="rgb(210,164,35)" fg:x="597" fg:w="4"/><text x="54.8703%" y="447.50"></text></g><g><title>do_syscall_64 (4 samples, 0.37%)</title><rect x="54.6203%" y="421" width="0.3660%" height="15" fill="rgb(248,109,41)" fg:x="597" fg:w="4"/><text x="54.8703%" y="431.50"></text></g><g><title>__x64_sys_write (4 samples, 0.37%)</title><rect x="54.6203%" y="405" width="0.3660%" height="15" fill="rgb(238,23,50)" fg:x="597" fg:w="4"/><text x="54.8703%" y="415.50"></text></g><g><title>ksys_write (4 samples, 0.37%)</title><rect x="54.6203%" y="389" width="0.3660%" height="15" fill="rgb(211,48,49)" fg:x="597" fg:w="4"/><text x="54.8703%" y="399.50"></text></g><g><title>vfs_write (4 samples, 0.37%)</title><rect x="54.6203%" y="373" width="0.3660%" height="15" fill="rgb(223,36,21)" fg:x="597" fg:w="4"/><text x="54.8703%" y="383.50"></text></g><g><title>new_sync_write (2 samples, 0.18%)</title><rect x="54.8033%" y="357" width="0.1830%" height="15" fill="rgb(207,123,46)" fg:x="599" fg:w="2"/><text x="55.0533%" y="367.50"></text></g><g><title>ext4_file_write_iter (2 samples, 0.18%)</title><rect x="54.8033%" y="341" width="0.1830%" height="15" fill="rgb(240,218,32)" fg:x="599" fg:w="2"/><text x="55.0533%" y="351.50"></text></g><g><title>ext4_buffered_write_iter (2 samples, 0.18%)</title><rect x="54.8033%" y="325" width="0.1830%" height="15" fill="rgb(252,5,43)" fg:x="599" fg:w="2"/><text x="55.0533%" y="335.50"></text></g><g><title>generic_perform_write (1 samples, 0.09%)</title><rect x="54.8948%" y="309" width="0.0915%" height="15" fill="rgb(252,84,19)" fg:x="600" fg:w="1"/><text x="55.1448%" y="319.50"></text></g><g><title>ext4_da_write_begin (1 samples, 0.09%)</title><rect x="54.8948%" y="293" width="0.0915%" height="15" fill="rgb(243,152,39)" fg:x="600" fg:w="1"/><text x="55.1448%" y="303.50"></text></g><g><title>ext4_nonda_switch (1 samples, 0.09%)</title><rect x="54.8948%" y="277" width="0.0915%" height="15" fill="rgb(234,160,15)" fg:x="600" fg:w="1"/><text x="55.1448%" y="287.50"></text></g><g><title>__fsnotify_parent (1 samples, 0.09%)</title><rect x="54.9863%" y="389" width="0.0915%" height="15" fill="rgb(237,34,20)" fg:x="601" fg:w="1"/><text x="55.2363%" y="399.50"></text></g><g><title>get_obj_cgroup_from_current (1 samples, 0.09%)</title><rect x="55.1693%" y="277" width="0.0915%" height="15" fill="rgb(229,97,13)" fg:x="603" fg:w="1"/><text x="55.4193%" y="287.50"></text></g><g><title>obj_cgroup_charge_pages (1 samples, 0.09%)</title><rect x="55.2608%" y="261" width="0.0915%" height="15" fill="rgb(234,71,50)" fg:x="604" fg:w="1"/><text x="55.5108%" y="271.50"></text></g><g><title>try_charge_memcg (1 samples, 0.09%)</title><rect x="55.2608%" y="245" width="0.0915%" height="15" fill="rgb(253,155,4)" fg:x="604" fg:w="1"/><text x="55.5108%" y="255.50"></text></g><g><title>__kmalloc (3 samples, 0.27%)</title><rect x="55.1693%" y="293" width="0.2745%" height="15" fill="rgb(222,185,37)" fg:x="603" fg:w="3"/><text x="55.4193%" y="303.50"></text></g><g><title>obj_cgroup_charge (2 samples, 0.18%)</title><rect x="55.2608%" y="277" width="0.1830%" height="15" fill="rgb(251,177,13)" fg:x="604" fg:w="2"/><text x="55.5108%" y="287.50"></text></g><g><title>refill_obj_stock (1 samples, 0.09%)</title><rect x="55.3522%" y="261" width="0.0915%" height="15" fill="rgb(250,179,40)" fg:x="605" fg:w="1"/><text x="55.6022%" y="271.50"></text></g><g><title>drain_obj_stock (1 samples, 0.09%)</title><rect x="55.3522%" y="245" width="0.0915%" height="15" fill="rgb(242,44,2)" fg:x="605" fg:w="1"/><text x="55.6022%" y="255.50"></text></g><g><title>fsnotify_add_event (1 samples, 0.09%)</title><rect x="55.4437%" y="293" width="0.0915%" height="15" fill="rgb(216,177,13)" fg:x="606" fg:w="1"/><text x="55.6937%" y="303.50"></text></g><g><title>strcmp (1 samples, 0.09%)</title><rect x="55.4437%" y="277" width="0.0915%" height="15" fill="rgb(216,106,43)" fg:x="606" fg:w="1"/><text x="55.6937%" y="287.50"></text></g><g><title>inotify_merge (1 samples, 0.09%)</title><rect x="55.5352%" y="293" width="0.0915%" height="15" fill="rgb(216,183,2)" fg:x="607" fg:w="1"/><text x="55.7852%" y="303.50"></text></g><g><title>__fsnotify_parent (6 samples, 0.55%)</title><rect x="55.1693%" y="373" width="0.5489%" height="15" fill="rgb(249,75,3)" fg:x="603" fg:w="6"/><text x="55.4193%" y="383.50"></text></g><g><title>fsnotify (6 samples, 0.55%)</title><rect x="55.1693%" y="357" width="0.5489%" height="15" fill="rgb(219,67,39)" fg:x="603" fg:w="6"/><text x="55.4193%" y="367.50"></text></g><g><title>send_to_group (6 samples, 0.55%)</title><rect x="55.1693%" y="341" width="0.5489%" height="15" fill="rgb(253,228,2)" fg:x="603" fg:w="6"/><text x="55.4193%" y="351.50"></text></g><g><title>fsnotify_handle_inode_event.isra.0 (6 samples, 0.55%)</title><rect x="55.1693%" y="325" width="0.5489%" height="15" fill="rgb(235,138,27)" fg:x="603" fg:w="6"/><text x="55.4193%" y="335.50"></text></g><g><title>inotify_handle_inode_event (6 samples, 0.55%)</title><rect x="55.1693%" y="309" width="0.5489%" height="15" fill="rgb(236,97,51)" fg:x="603" fg:w="6"/><text x="55.4193%" y="319.50"></text></g><g><title>should_failslab (1 samples, 0.09%)</title><rect x="55.6267%" y="293" width="0.0915%" height="15" fill="rgb(240,80,30)" fg:x="608" fg:w="1"/><text x="55.8767%" y="303.50"></text></g><g><title>__ext4_journal_start_sb (1 samples, 0.09%)</title><rect x="55.7182%" y="245" width="0.0915%" height="15" fill="rgb(230,178,19)" fg:x="609" fg:w="1"/><text x="55.9682%" y="255.50"></text></g><g><title>jbd2__journal_start (1 samples, 0.09%)</title><rect x="55.7182%" y="229" width="0.0915%" height="15" fill="rgb(210,190,27)" fg:x="609" fg:w="1"/><text x="55.9682%" y="239.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.09%)</title><rect x="55.7182%" y="213" width="0.0915%" height="15" fill="rgb(222,107,31)" fg:x="609" fg:w="1"/><text x="55.9682%" y="223.50"></text></g><g><title>__ext4_journal_stop (1 samples, 0.09%)</title><rect x="55.8097%" y="245" width="0.0915%" height="15" fill="rgb(216,127,34)" fg:x="610" fg:w="1"/><text x="56.0597%" y="255.50"></text></g><g><title>jbd2_journal_stop (1 samples, 0.09%)</title><rect x="55.8097%" y="229" width="0.0915%" height="15" fill="rgb(234,116,52)" fg:x="610" fg:w="1"/><text x="56.0597%" y="239.50"></text></g><g><title>stop_this_handle (1 samples, 0.09%)</title><rect x="55.8097%" y="213" width="0.0915%" height="15" fill="rgb(222,124,15)" fg:x="610" fg:w="1"/><text x="56.0597%" y="223.50"></text></g><g><title>__wake_up (1 samples, 0.09%)</title><rect x="55.8097%" y="197" width="0.0915%" height="15" fill="rgb(231,179,28)" fg:x="610" fg:w="1"/><text x="56.0597%" y="207.50"></text></g><g><title>__wake_up_common (1 samples, 0.09%)</title><rect x="55.8097%" y="181" width="0.0915%" height="15" fill="rgb(226,93,45)" fg:x="610" fg:w="1"/><text x="56.0597%" y="191.50"></text></g><g><title>crypto_shash_update (1 samples, 0.09%)</title><rect x="55.9012%" y="181" width="0.0915%" height="15" fill="rgb(215,8,51)" fg:x="611" fg:w="1"/><text x="56.1512%" y="191.50"></text></g><g><title>ext4_do_update_inode.isra.0 (2 samples, 0.18%)</title><rect x="55.9012%" y="213" width="0.1830%" height="15" fill="rgb(223,106,5)" fg:x="611" fg:w="2"/><text x="56.1512%" y="223.50"></text></g><g><title>ext4_inode_csum_set (2 samples, 0.18%)</title><rect x="55.9012%" y="197" width="0.1830%" height="15" fill="rgb(250,191,5)" fg:x="611" fg:w="2"/><text x="56.1512%" y="207.50"></text></g><g><title>ext4_inode_csum (1 samples, 0.09%)</title><rect x="55.9927%" y="181" width="0.0915%" height="15" fill="rgb(242,132,44)" fg:x="612" fg:w="1"/><text x="56.2427%" y="191.50"></text></g><g><title>byteorder::io::WriteBytesExt::write_u16 (13 samples, 1.19%)</title><rect x="54.9863%" y="565" width="1.1894%" height="15" fill="rgb(251,152,29)" fg:x="601" fg:w="13"/><text x="55.2363%" y="575.50"></text></g><g><title>std::io::Write::write_all (13 samples, 1.19%)</title><rect x="54.9863%" y="549" width="1.1894%" height="15" fill="rgb(218,179,5)" fg:x="601" fg:w="13"/><text x="55.2363%" y="559.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (13 samples, 1.19%)</title><rect x="54.9863%" y="533" width="1.1894%" height="15" fill="rgb(227,67,19)" fg:x="601" fg:w="13"/><text x="55.2363%" y="543.50"></text></g><g><title>std::sys::unix::net::Socket::write (13 samples, 1.19%)</title><rect x="54.9863%" y="517" width="1.1894%" height="15" fill="rgb(233,119,31)" fg:x="601" fg:w="13"/><text x="55.2363%" y="527.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (13 samples, 1.19%)</title><rect x="54.9863%" y="501" width="1.1894%" height="15" fill="rgb(241,120,22)" fg:x="601" fg:w="13"/><text x="55.2363%" y="511.50"></text></g><g><title>__GI___libc_write (13 samples, 1.19%)</title><rect x="54.9863%" y="485" width="1.1894%" height="15" fill="rgb(224,102,30)" fg:x="601" fg:w="13"/><text x="55.2363%" y="495.50"></text></g><g><title>__GI___libc_write (13 samples, 1.19%)</title><rect x="54.9863%" y="469" width="1.1894%" height="15" fill="rgb(210,164,37)" fg:x="601" fg:w="13"/><text x="55.2363%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (13 samples, 1.19%)</title><rect x="54.9863%" y="453" width="1.1894%" height="15" fill="rgb(226,191,16)" fg:x="601" fg:w="13"/><text x="55.2363%" y="463.50"></text></g><g><title>do_syscall_64 (13 samples, 1.19%)</title><rect x="54.9863%" y="437" width="1.1894%" height="15" fill="rgb(214,40,45)" fg:x="601" fg:w="13"/><text x="55.2363%" y="447.50"></text></g><g><title>__x64_sys_write (13 samples, 1.19%)</title><rect x="54.9863%" y="421" width="1.1894%" height="15" fill="rgb(244,29,26)" fg:x="601" fg:w="13"/><text x="55.2363%" y="431.50"></text></g><g><title>ksys_write (13 samples, 1.19%)</title><rect x="54.9863%" y="405" width="1.1894%" height="15" fill="rgb(216,16,5)" fg:x="601" fg:w="13"/><text x="55.2363%" y="415.50"></text></g><g><title>vfs_write (12 samples, 1.10%)</title><rect x="55.0778%" y="389" width="1.0979%" height="15" fill="rgb(249,76,35)" fg:x="602" fg:w="12"/><text x="55.3278%" y="399.50"></text></g><g><title>new_sync_write (5 samples, 0.46%)</title><rect x="55.7182%" y="373" width="0.4575%" height="15" fill="rgb(207,11,44)" fg:x="609" fg:w="5"/><text x="55.9682%" y="383.50"></text></g><g><title>ext4_file_write_iter (5 samples, 0.46%)</title><rect x="55.7182%" y="357" width="0.4575%" height="15" fill="rgb(228,190,49)" fg:x="609" fg:w="5"/><text x="55.9682%" y="367.50"></text></g><g><title>ext4_buffered_write_iter (5 samples, 0.46%)</title><rect x="55.7182%" y="341" width="0.4575%" height="15" fill="rgb(214,173,12)" fg:x="609" fg:w="5"/><text x="55.9682%" y="351.50"></text></g><g><title>generic_perform_write (5 samples, 0.46%)</title><rect x="55.7182%" y="325" width="0.4575%" height="15" fill="rgb(218,26,35)" fg:x="609" fg:w="5"/><text x="55.9682%" y="335.50"></text></g><g><title>ext4_da_write_end (5 samples, 0.46%)</title><rect x="55.7182%" y="309" width="0.4575%" height="15" fill="rgb(220,200,19)" fg:x="609" fg:w="5"/><text x="55.9682%" y="319.50"></text></g><g><title>generic_write_end (5 samples, 0.46%)</title><rect x="55.7182%" y="293" width="0.4575%" height="15" fill="rgb(239,95,49)" fg:x="609" fg:w="5"/><text x="55.9682%" y="303.50"></text></g><g><title>__mark_inode_dirty (5 samples, 0.46%)</title><rect x="55.7182%" y="277" width="0.4575%" height="15" fill="rgb(235,85,53)" fg:x="609" fg:w="5"/><text x="55.9682%" y="287.50"></text></g><g><title>ext4_dirty_inode (5 samples, 0.46%)</title><rect x="55.7182%" y="261" width="0.4575%" height="15" fill="rgb(233,133,31)" fg:x="609" fg:w="5"/><text x="55.9682%" y="271.50"></text></g><g><title>__ext4_mark_inode_dirty (3 samples, 0.27%)</title><rect x="55.9012%" y="245" width="0.2745%" height="15" fill="rgb(218,25,20)" fg:x="611" fg:w="3"/><text x="56.1512%" y="255.50"></text></g><g><title>ext4_mark_iloc_dirty (3 samples, 0.27%)</title><rect x="55.9012%" y="229" width="0.2745%" height="15" fill="rgb(252,210,38)" fg:x="611" fg:w="3"/><text x="56.1512%" y="239.50"></text></g><g><title>ext4_fc_track_inode (1 samples, 0.09%)</title><rect x="56.0842%" y="213" width="0.0915%" height="15" fill="rgb(242,134,21)" fg:x="613" fg:w="1"/><text x="56.3342%" y="223.50"></text></g><g><title>ext4_inode_journal_mode (1 samples, 0.09%)</title><rect x="56.0842%" y="197" width="0.0915%" height="15" fill="rgb(213,28,48)" fg:x="613" fg:w="1"/><text x="56.3342%" y="207.50"></text></g><g><title>memcg_slab_post_alloc_hook (1 samples, 0.09%)</title><rect x="56.1757%" y="277" width="0.0915%" height="15" fill="rgb(250,196,2)" fg:x="614" fg:w="1"/><text x="56.4257%" y="287.50"></text></g><g><title>__kmalloc (2 samples, 0.18%)</title><rect x="56.1757%" y="293" width="0.1830%" height="15" fill="rgb(227,5,17)" fg:x="614" fg:w="2"/><text x="56.4257%" y="303.50"></text></g><g><title>obj_cgroup_charge (1 samples, 0.09%)</title><rect x="56.2672%" y="277" width="0.0915%" height="15" fill="rgb(221,226,24)" fg:x="615" fg:w="1"/><text x="56.5172%" y="287.50"></text></g><g><title>obj_cgroup_charge_pages (1 samples, 0.09%)</title><rect x="56.2672%" y="261" width="0.0915%" height="15" fill="rgb(211,5,48)" fg:x="615" fg:w="1"/><text x="56.5172%" y="271.50"></text></g><g><title>try_charge_memcg (1 samples, 0.09%)</title><rect x="56.2672%" y="245" width="0.0915%" height="15" fill="rgb(219,150,6)" fg:x="615" fg:w="1"/><text x="56.5172%" y="255.50"></text></g><g><title>refill_stock (1 samples, 0.09%)</title><rect x="56.2672%" y="229" width="0.0915%" height="15" fill="rgb(251,46,16)" fg:x="615" fg:w="1"/><text x="56.5172%" y="239.50"></text></g><g><title>drain_stock (1 samples, 0.09%)</title><rect x="56.2672%" y="213" width="0.0915%" height="15" fill="rgb(220,204,40)" fg:x="615" fg:w="1"/><text x="56.5172%" y="223.50"></text></g><g><title>page_counter_uncharge (1 samples, 0.09%)</title><rect x="56.2672%" y="197" width="0.0915%" height="15" fill="rgb(211,85,2)" fg:x="615" fg:w="1"/><text x="56.5172%" y="207.50"></text></g><g><title>page_counter_cancel (1 samples, 0.09%)</title><rect x="56.2672%" y="181" width="0.0915%" height="15" fill="rgb(229,17,7)" fg:x="615" fg:w="1"/><text x="56.5172%" y="191.50"></text></g><g><title>fsnotify_add_event (1 samples, 0.09%)</title><rect x="56.3586%" y="293" width="0.0915%" height="15" fill="rgb(239,72,28)" fg:x="616" fg:w="1"/><text x="56.6086%" y="303.50"></text></g><g><title>strcmp (1 samples, 0.09%)</title><rect x="56.3586%" y="277" width="0.0915%" height="15" fill="rgb(230,47,54)" fg:x="616" fg:w="1"/><text x="56.6086%" y="287.50"></text></g><g><title>__fsnotify_parent (4 samples, 0.37%)</title><rect x="56.1757%" y="373" width="0.3660%" height="15" fill="rgb(214,50,8)" fg:x="614" fg:w="4"/><text x="56.4257%" y="383.50"></text></g><g><title>fsnotify (4 samples, 0.37%)</title><rect x="56.1757%" y="357" width="0.3660%" height="15" fill="rgb(216,198,43)" fg:x="614" fg:w="4"/><text x="56.4257%" y="367.50"></text></g><g><title>send_to_group (4 samples, 0.37%)</title><rect x="56.1757%" y="341" width="0.3660%" height="15" fill="rgb(234,20,35)" fg:x="614" fg:w="4"/><text x="56.4257%" y="351.50"></text></g><g><title>fsnotify_handle_inode_event.isra.0 (4 samples, 0.37%)</title><rect x="56.1757%" y="325" width="0.3660%" height="15" fill="rgb(254,45,19)" fg:x="614" fg:w="4"/><text x="56.4257%" y="335.50"></text></g><g><title>inotify_handle_inode_event (4 samples, 0.37%)</title><rect x="56.1757%" y="309" width="0.3660%" height="15" fill="rgb(219,14,44)" fg:x="614" fg:w="4"/><text x="56.4257%" y="319.50"></text></g><g><title>memset_erms (1 samples, 0.09%)</title><rect x="56.4501%" y="293" width="0.0915%" height="15" fill="rgb(217,220,26)" fg:x="617" fg:w="1"/><text x="56.7001%" y="303.50"></text></g><g><title>ext4_do_update_inode.isra.0 (1 samples, 0.09%)</title><rect x="56.5416%" y="213" width="0.0915%" height="15" fill="rgb(213,158,28)" fg:x="618" fg:w="1"/><text x="56.7916%" y="223.50"></text></g><g><title>ext4_inode_csum_set (1 samples, 0.09%)</title><rect x="56.5416%" y="197" width="0.0915%" height="15" fill="rgb(252,51,52)" fg:x="618" fg:w="1"/><text x="56.7916%" y="207.50"></text></g><g><title>ext4_inode_csum (1 samples, 0.09%)</title><rect x="56.5416%" y="181" width="0.0915%" height="15" fill="rgb(246,89,16)" fg:x="618" fg:w="1"/><text x="56.7916%" y="191.50"></text></g><g><title>crypto_shash_update (1 samples, 0.09%)</title><rect x="56.5416%" y="165" width="0.0915%" height="15" fill="rgb(216,158,49)" fg:x="618" fg:w="1"/><text x="56.7916%" y="175.50"></text></g><g><title>crc32c_pcl_intel_update (1 samples, 0.09%)</title><rect x="56.5416%" y="149" width="0.0915%" height="15" fill="rgb(236,107,19)" fg:x="618" fg:w="1"/><text x="56.7916%" y="159.50"></text></g><g><title>byteorder::io::WriteBytesExt::write_u32 (6 samples, 0.55%)</title><rect x="56.1757%" y="565" width="0.5489%" height="15" fill="rgb(228,185,30)" fg:x="614" fg:w="6"/><text x="56.4257%" y="575.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.55%)</title><rect x="56.1757%" y="549" width="0.5489%" height="15" fill="rgb(246,134,8)" fg:x="614" fg:w="6"/><text x="56.4257%" y="559.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (6 samples, 0.55%)</title><rect x="56.1757%" y="533" width="0.5489%" height="15" fill="rgb(214,143,50)" fg:x="614" fg:w="6"/><text x="56.4257%" y="543.50"></text></g><g><title>std::sys::unix::net::Socket::write (6 samples, 0.55%)</title><rect x="56.1757%" y="517" width="0.5489%" height="15" fill="rgb(228,75,8)" fg:x="614" fg:w="6"/><text x="56.4257%" y="527.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (6 samples, 0.55%)</title><rect x="56.1757%" y="501" width="0.5489%" height="15" fill="rgb(207,175,4)" fg:x="614" fg:w="6"/><text x="56.4257%" y="511.50"></text></g><g><title>__GI___libc_write (6 samples, 0.55%)</title><rect x="56.1757%" y="485" width="0.5489%" height="15" fill="rgb(205,108,24)" fg:x="614" fg:w="6"/><text x="56.4257%" y="495.50"></text></g><g><title>__GI___libc_write (6 samples, 0.55%)</title><rect x="56.1757%" y="469" width="0.5489%" height="15" fill="rgb(244,120,49)" fg:x="614" fg:w="6"/><text x="56.4257%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.55%)</title><rect x="56.1757%" y="453" width="0.5489%" height="15" fill="rgb(223,47,38)" fg:x="614" fg:w="6"/><text x="56.4257%" y="463.50"></text></g><g><title>do_syscall_64 (6 samples, 0.55%)</title><rect x="56.1757%" y="437" width="0.5489%" height="15" fill="rgb(229,179,11)" fg:x="614" fg:w="6"/><text x="56.4257%" y="447.50"></text></g><g><title>__x64_sys_write (6 samples, 0.55%)</title><rect x="56.1757%" y="421" width="0.5489%" height="15" fill="rgb(231,122,1)" fg:x="614" fg:w="6"/><text x="56.4257%" y="431.50"></text></g><g><title>ksys_write (6 samples, 0.55%)</title><rect x="56.1757%" y="405" width="0.5489%" height="15" fill="rgb(245,119,9)" fg:x="614" fg:w="6"/><text x="56.4257%" y="415.50"></text></g><g><title>vfs_write (6 samples, 0.55%)</title><rect x="56.1757%" y="389" width="0.5489%" height="15" fill="rgb(241,163,25)" fg:x="614" fg:w="6"/><text x="56.4257%" y="399.50"></text></g><g><title>new_sync_write (2 samples, 0.18%)</title><rect x="56.5416%" y="373" width="0.1830%" height="15" fill="rgb(217,214,3)" fg:x="618" fg:w="2"/><text x="56.7916%" y="383.50"></text></g><g><title>ext4_file_write_iter (2 samples, 0.18%)</title><rect x="56.5416%" y="357" width="0.1830%" height="15" fill="rgb(240,86,28)" fg:x="618" fg:w="2"/><text x="56.7916%" y="367.50"></text></g><g><title>ext4_buffered_write_iter (2 samples, 0.18%)</title><rect x="56.5416%" y="341" width="0.1830%" height="15" fill="rgb(215,47,9)" fg:x="618" fg:w="2"/><text x="56.7916%" y="351.50"></text></g><g><title>generic_perform_write (2 samples, 0.18%)</title><rect x="56.5416%" y="325" width="0.1830%" height="15" fill="rgb(252,25,45)" fg:x="618" fg:w="2"/><text x="56.7916%" y="335.50"></text></g><g><title>ext4_da_write_end (2 samples, 0.18%)</title><rect x="56.5416%" y="309" width="0.1830%" height="15" fill="rgb(251,164,9)" fg:x="618" fg:w="2"/><text x="56.7916%" y="319.50"></text></g><g><title>generic_write_end (2 samples, 0.18%)</title><rect x="56.5416%" y="293" width="0.1830%" height="15" fill="rgb(233,194,0)" fg:x="618" fg:w="2"/><text x="56.7916%" y="303.50"></text></g><g><title>__mark_inode_dirty (2 samples, 0.18%)</title><rect x="56.5416%" y="277" width="0.1830%" height="15" fill="rgb(249,111,24)" fg:x="618" fg:w="2"/><text x="56.7916%" y="287.50"></text></g><g><title>ext4_dirty_inode (2 samples, 0.18%)</title><rect x="56.5416%" y="261" width="0.1830%" height="15" fill="rgb(250,223,3)" fg:x="618" fg:w="2"/><text x="56.7916%" y="271.50"></text></g><g><title>__ext4_mark_inode_dirty (2 samples, 0.18%)</title><rect x="56.5416%" y="245" width="0.1830%" height="15" fill="rgb(236,178,37)" fg:x="618" fg:w="2"/><text x="56.7916%" y="255.50"></text></g><g><title>ext4_mark_iloc_dirty (2 samples, 0.18%)</title><rect x="56.5416%" y="229" width="0.1830%" height="15" fill="rgb(241,158,50)" fg:x="618" fg:w="2"/><text x="56.7916%" y="239.50"></text></g><g><title>ext4_fc_track_inode (1 samples, 0.09%)</title><rect x="56.6331%" y="213" width="0.0915%" height="15" fill="rgb(213,121,41)" fg:x="619" fg:w="1"/><text x="56.8831%" y="223.50"></text></g><g><title>ext4_fc_track_template (1 samples, 0.09%)</title><rect x="56.6331%" y="197" width="0.0915%" height="15" fill="rgb(240,92,3)" fg:x="619" fg:w="1"/><text x="56.8831%" y="207.50"></text></g><g><title>__fsnotify_parent (1 samples, 0.09%)</title><rect x="56.7246%" y="389" width="0.0915%" height="15" fill="rgb(205,123,3)" fg:x="620" fg:w="1"/><text x="56.9746%" y="399.50"></text></g><g><title>fsnotify (1 samples, 0.09%)</title><rect x="56.7246%" y="373" width="0.0915%" height="15" fill="rgb(205,97,47)" fg:x="620" fg:w="1"/><text x="56.9746%" y="383.50"></text></g><g><title>send_to_group (1 samples, 0.09%)</title><rect x="56.7246%" y="357" width="0.0915%" height="15" fill="rgb(247,152,14)" fg:x="620" fg:w="1"/><text x="56.9746%" y="367.50"></text></g><g><title>fsnotify_handle_inode_event.isra.0 (1 samples, 0.09%)</title><rect x="56.7246%" y="341" width="0.0915%" height="15" fill="rgb(248,195,53)" fg:x="620" fg:w="1"/><text x="56.9746%" y="351.50"></text></g><g><title>inotify_handle_inode_event (1 samples, 0.09%)</title><rect x="56.7246%" y="325" width="0.0915%" height="15" fill="rgb(226,201,16)" fg:x="620" fg:w="1"/><text x="56.9746%" y="335.50"></text></g><g><title>__kmalloc (1 samples, 0.09%)</title><rect x="56.7246%" y="309" width="0.0915%" height="15" fill="rgb(205,98,0)" fg:x="620" fg:w="1"/><text x="56.9746%" y="319.50"></text></g><g><title>obj_cgroup_charge (1 samples, 0.09%)</title><rect x="56.7246%" y="293" width="0.0915%" height="15" fill="rgb(214,191,48)" fg:x="620" fg:w="1"/><text x="56.9746%" y="303.50"></text></g><g><title>obj_cgroup_charge_pages (1 samples, 0.09%)</title><rect x="56.7246%" y="277" width="0.0915%" height="15" fill="rgb(237,112,39)" fg:x="620" fg:w="1"/><text x="56.9746%" y="287.50"></text></g><g><title>try_charge_memcg (1 samples, 0.09%)</title><rect x="56.7246%" y="261" width="0.0915%" height="15" fill="rgb(247,203,27)" fg:x="620" fg:w="1"/><text x="56.9746%" y="271.50"></text></g><g><title>ext4_generic_write_checks (1 samples, 0.09%)</title><rect x="56.8161%" y="341" width="0.0915%" height="15" fill="rgb(235,124,28)" fg:x="621" fg:w="1"/><text x="57.0661%" y="351.50"></text></g><g><title>generic_write_check_limits (1 samples, 0.09%)</title><rect x="56.8161%" y="325" width="0.0915%" height="15" fill="rgb(208,207,46)" fg:x="621" fg:w="1"/><text x="57.0661%" y="335.50"></text></g><g><title>ext4_fc_track_inode (1 samples, 0.09%)</title><rect x="56.9076%" y="245" width="0.0915%" height="15" fill="rgb(234,176,4)" fg:x="622" fg:w="1"/><text x="57.1576%" y="255.50"></text></g><g><title>zip::write::&lt;impl zip::write::zip_writer::ZipWriter&lt;W&gt;&gt;::start_entry (36 samples, 3.29%)</title><rect x="53.7969%" y="597" width="3.2937%" height="15" fill="rgb(230,133,28)" fg:x="588" fg:w="36"/><text x="54.0469%" y="607.50">zip..</text></g><g><title>zip::write::write_local_file_header (23 samples, 2.10%)</title><rect x="54.9863%" y="581" width="2.1043%" height="15" fill="rgb(211,137,40)" fg:x="601" fg:w="23"/><text x="55.2363%" y="591.50">z..</text></g><g><title>std::io::Write::write_all (4 samples, 0.37%)</title><rect x="56.7246%" y="565" width="0.3660%" height="15" fill="rgb(254,35,13)" fg:x="620" fg:w="4"/><text x="56.9746%" y="575.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (4 samples, 0.37%)</title><rect x="56.7246%" y="549" width="0.3660%" height="15" fill="rgb(225,49,51)" fg:x="620" fg:w="4"/><text x="56.9746%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::write (4 samples, 0.37%)</title><rect x="56.7246%" y="533" width="0.3660%" height="15" fill="rgb(251,10,15)" fg:x="620" fg:w="4"/><text x="56.9746%" y="543.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (4 samples, 0.37%)</title><rect x="56.7246%" y="517" width="0.3660%" height="15" fill="rgb(228,207,15)" fg:x="620" fg:w="4"/><text x="56.9746%" y="527.50"></text></g><g><title>__GI___libc_write (4 samples, 0.37%)</title><rect x="56.7246%" y="501" width="0.3660%" height="15" fill="rgb(241,99,19)" fg:x="620" fg:w="4"/><text x="56.9746%" y="511.50"></text></g><g><title>__GI___libc_write (4 samples, 0.37%)</title><rect x="56.7246%" y="485" width="0.3660%" height="15" fill="rgb(207,104,49)" fg:x="620" fg:w="4"/><text x="56.9746%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.37%)</title><rect x="56.7246%" y="469" width="0.3660%" height="15" fill="rgb(234,99,18)" fg:x="620" fg:w="4"/><text x="56.9746%" y="479.50"></text></g><g><title>do_syscall_64 (4 samples, 0.37%)</title><rect x="56.7246%" y="453" width="0.3660%" height="15" fill="rgb(213,191,49)" fg:x="620" fg:w="4"/><text x="56.9746%" y="463.50"></text></g><g><title>__x64_sys_write (4 samples, 0.37%)</title><rect x="56.7246%" y="437" width="0.3660%" height="15" fill="rgb(210,226,19)" fg:x="620" fg:w="4"/><text x="56.9746%" y="447.50"></text></g><g><title>ksys_write (4 samples, 0.37%)</title><rect x="56.7246%" y="421" width="0.3660%" height="15" fill="rgb(229,97,18)" fg:x="620" fg:w="4"/><text x="56.9746%" y="431.50"></text></g><g><title>vfs_write (4 samples, 0.37%)</title><rect x="56.7246%" y="405" width="0.3660%" height="15" fill="rgb(211,167,15)" fg:x="620" fg:w="4"/><text x="56.9746%" y="415.50"></text></g><g><title>new_sync_write (3 samples, 0.27%)</title><rect x="56.8161%" y="389" width="0.2745%" height="15" fill="rgb(210,169,34)" fg:x="621" fg:w="3"/><text x="57.0661%" y="399.50"></text></g><g><title>ext4_file_write_iter (3 samples, 0.27%)</title><rect x="56.8161%" y="373" width="0.2745%" height="15" fill="rgb(241,121,31)" fg:x="621" fg:w="3"/><text x="57.0661%" y="383.50"></text></g><g><title>ext4_buffered_write_iter (3 samples, 0.27%)</title><rect x="56.8161%" y="357" width="0.2745%" height="15" fill="rgb(232,40,11)" fg:x="621" fg:w="3"/><text x="57.0661%" y="367.50"></text></g><g><title>generic_perform_write (2 samples, 0.18%)</title><rect x="56.9076%" y="341" width="0.1830%" height="15" fill="rgb(205,86,26)" fg:x="622" fg:w="2"/><text x="57.1576%" y="351.50"></text></g><g><title>ext4_da_write_end (2 samples, 0.18%)</title><rect x="56.9076%" y="325" width="0.1830%" height="15" fill="rgb(231,126,28)" fg:x="622" fg:w="2"/><text x="57.1576%" y="335.50"></text></g><g><title>generic_write_end (2 samples, 0.18%)</title><rect x="56.9076%" y="309" width="0.1830%" height="15" fill="rgb(219,221,18)" fg:x="622" fg:w="2"/><text x="57.1576%" y="319.50"></text></g><g><title>__mark_inode_dirty (2 samples, 0.18%)</title><rect x="56.9076%" y="293" width="0.1830%" height="15" fill="rgb(211,40,0)" fg:x="622" fg:w="2"/><text x="57.1576%" y="303.50"></text></g><g><title>ext4_dirty_inode (2 samples, 0.18%)</title><rect x="56.9076%" y="277" width="0.1830%" height="15" fill="rgb(239,85,43)" fg:x="622" fg:w="2"/><text x="57.1576%" y="287.50"></text></g><g><title>__ext4_mark_inode_dirty (2 samples, 0.18%)</title><rect x="56.9076%" y="261" width="0.1830%" height="15" fill="rgb(231,55,21)" fg:x="622" fg:w="2"/><text x="57.1576%" y="271.50"></text></g><g><title>ext4_mark_iloc_dirty (1 samples, 0.09%)</title><rect x="56.9991%" y="245" width="0.0915%" height="15" fill="rgb(225,184,43)" fg:x="623" fg:w="1"/><text x="57.2491%" y="255.50"></text></g><g><title>ext4_do_update_inode.isra.0 (1 samples, 0.09%)</title><rect x="56.9991%" y="229" width="0.0915%" height="15" fill="rgb(251,158,41)" fg:x="623" fg:w="1"/><text x="57.2491%" y="239.50"></text></g><g><title>from_kuid (1 samples, 0.09%)</title><rect x="56.9991%" y="213" width="0.0915%" height="15" fill="rgb(234,159,37)" fg:x="623" fg:w="1"/><text x="57.2491%" y="223.50"></text></g><g><title>map_id_up (1 samples, 0.09%)</title><rect x="56.9991%" y="197" width="0.0915%" height="15" fill="rgb(216,204,22)" fg:x="623" fg:w="1"/><text x="57.2491%" y="207.50"></text></g><g><title>zstd::compression_level_range (1 samples, 0.09%)</title><rect x="57.0906%" y="581" width="0.0915%" height="15" fill="rgb(214,17,3)" fg:x="624" fg:w="1"/><text x="57.3406%" y="591.50"></text></g><g><title>demoparser::parsing::cache::cache_writer::WriteCache::write_others (57 samples, 5.22%)</title><rect x="52.0586%" y="645" width="5.2150%" height="15" fill="rgb(212,111,17)" fg:x="569" fg:w="57"/><text x="52.3086%" y="655.50">demopa..</text></g><g><title>demoparser::parsing::cache::cache_writer::WriteCache::write_bytes_to_zip (56 samples, 5.12%)</title><rect x="52.1500%" y="629" width="5.1235%" height="15" fill="rgb(221,157,24)" fg:x="570" fg:w="56"/><text x="52.4000%" y="639.50">demopa..</text></g><g><title>zip::write::&lt;impl zip::write::zip_writer::ZipWriter&lt;W&gt;&gt;::start_file (38 samples, 3.48%)</title><rect x="53.7969%" y="613" width="3.4767%" height="15" fill="rgb(252,16,13)" fg:x="588" fg:w="38"/><text x="54.0469%" y="623.50">zip..</text></g><g><title>zip::write::GenericZipWriter&lt;W&gt;::switch_to (2 samples, 0.18%)</title><rect x="57.0906%" y="597" width="0.1830%" height="15" fill="rgb(221,62,2)" fg:x="624" fg:w="2"/><text x="57.3406%" y="607.50"></text></g><g><title>zstd::stream::write::Encoder&lt;W&gt;::new (1 samples, 0.09%)</title><rect x="57.1821%" y="581" width="0.0915%" height="15" fill="rgb(247,87,22)" fg:x="625" fg:w="1"/><text x="57.4321%" y="591.50"></text></g><g><title>zstd::stream::write::Encoder&lt;W&gt;::with_dictionary (1 samples, 0.09%)</title><rect x="57.1821%" y="565" width="0.0915%" height="15" fill="rgb(215,73,9)" fg:x="625" fg:w="1"/><text x="57.4321%" y="575.50"></text></g><g><title>zstd::stream::raw::Encoder::with_dictionary (1 samples, 0.09%)</title><rect x="57.1821%" y="549" width="0.0915%" height="15" fill="rgb(207,175,33)" fg:x="625" fg:w="1"/><text x="57.4321%" y="559.50"></text></g><g><title>zstd_safe::CCtx::set_parameter (1 samples, 0.09%)</title><rect x="57.1821%" y="533" width="0.0915%" height="15" fill="rgb(243,129,54)" fg:x="625" fg:w="1"/><text x="57.4321%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.37%)</title><rect x="57.2736%" y="549" width="0.3660%" height="15" fill="rgb(227,119,45)" fg:x="626" fg:w="4"/><text x="57.5236%" y="559.50"></text></g><g><title>[libc.so.6] (15 samples, 1.37%)</title><rect x="58.6459%" y="357" width="1.3724%" height="15" fill="rgb(205,109,36)" fg:x="641" fg:w="15"/><text x="58.8959%" y="367.50"></text></g><g><title>asm_exc_page_fault (5 samples, 0.46%)</title><rect x="59.5608%" y="341" width="0.4575%" height="15" fill="rgb(205,6,39)" fg:x="651" fg:w="5"/><text x="59.8108%" y="351.50"></text></g><g><title>exc_page_fault (2 samples, 0.18%)</title><rect x="59.8353%" y="325" width="0.1830%" height="15" fill="rgb(221,32,16)" fg:x="654" fg:w="2"/><text x="60.0853%" y="335.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.18%)</title><rect x="59.8353%" y="309" width="0.1830%" height="15" fill="rgb(228,144,50)" fg:x="654" fg:w="2"/><text x="60.0853%" y="319.50"></text></g><g><title>handle_mm_fault (2 samples, 0.18%)</title><rect x="59.8353%" y="293" width="0.1830%" height="15" fill="rgb(229,201,53)" fg:x="654" fg:w="2"/><text x="60.0853%" y="303.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.18%)</title><rect x="59.8353%" y="277" width="0.1830%" height="15" fill="rgb(249,153,27)" fg:x="654" fg:w="2"/><text x="60.0853%" y="287.50"></text></g><g><title>handle_pte_fault (2 samples, 0.18%)</title><rect x="59.8353%" y="261" width="0.1830%" height="15" fill="rgb(227,106,25)" fg:x="654" fg:w="2"/><text x="60.0853%" y="271.50"></text></g><g><title>do_anonymous_page (2 samples, 0.18%)</title><rect x="59.8353%" y="245" width="0.1830%" height="15" fill="rgb(230,65,29)" fg:x="654" fg:w="2"/><text x="60.0853%" y="255.50"></text></g><g><title>alloc_pages_vma (2 samples, 0.18%)</title><rect x="59.8353%" y="229" width="0.1830%" height="15" fill="rgb(221,57,46)" fg:x="654" fg:w="2"/><text x="60.0853%" y="239.50"></text></g><g><title>__alloc_pages (2 samples, 0.18%)</title><rect x="59.8353%" y="213" width="0.1830%" height="15" fill="rgb(229,161,17)" fg:x="654" fg:w="2"/><text x="60.0853%" y="223.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.18%)</title><rect x="59.8353%" y="197" width="0.1830%" height="15" fill="rgb(222,213,11)" fg:x="654" fg:w="2"/><text x="60.0853%" y="207.50"></text></g><g><title>clear_page_erms (2 samples, 0.18%)</title><rect x="59.8353%" y="181" width="0.1830%" height="15" fill="rgb(235,35,13)" fg:x="654" fg:w="2"/><text x="60.0853%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (16 samples, 1.46%)</title><rect x="58.6459%" y="485" width="1.4639%" height="15" fill="rgb(233,158,34)" fg:x="641" fg:w="16"/><text x="58.8959%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 1.46%)</title><rect x="58.6459%" y="469" width="1.4639%" height="15" fill="rgb(215,151,48)" fg:x="641" fg:w="16"/><text x="58.8959%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (16 samples, 1.46%)</title><rect x="58.6459%" y="453" width="1.4639%" height="15" fill="rgb(229,84,14)" fg:x="641" fg:w="16"/><text x="58.8959%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (16 samples, 1.46%)</title><rect x="58.6459%" y="437" width="1.4639%" height="15" fill="rgb(229,68,14)" fg:x="641" fg:w="16"/><text x="58.8959%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (16 samples, 1.46%)</title><rect x="58.6459%" y="421" width="1.4639%" height="15" fill="rgb(243,106,26)" fg:x="641" fg:w="16"/><text x="58.8959%" y="431.50"></text></g><g><title>alloc::alloc::realloc (16 samples, 1.46%)</title><rect x="58.6459%" y="405" width="1.4639%" height="15" fill="rgb(206,45,38)" fg:x="641" fg:w="16"/><text x="58.8959%" y="415.50"></text></g><g><title>__GI___libc_realloc (16 samples, 1.46%)</title><rect x="58.6459%" y="389" width="1.4639%" height="15" fill="rgb(226,6,15)" fg:x="641" fg:w="16"/><text x="58.8959%" y="399.50"></text></g><g><title>_int_realloc (16 samples, 1.46%)</title><rect x="58.6459%" y="373" width="1.4639%" height="15" fill="rgb(232,22,54)" fg:x="641" fg:w="16"/><text x="58.8959%" y="383.50"></text></g><g><title>_int_malloc (1 samples, 0.09%)</title><rect x="60.0183%" y="357" width="0.0915%" height="15" fill="rgb(229,222,32)" fg:x="656" fg:w="1"/><text x="60.2683%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (28 samples, 2.56%)</title><rect x="57.6395%" y="501" width="2.5618%" height="15" fill="rgb(228,62,29)" fg:x="630" fg:w="28"/><text x="57.8895%" y="511.50">al..</text></g><g><title>core::ptr::write (1 samples, 0.09%)</title><rect x="60.1098%" y="485" width="0.0915%" height="15" fill="rgb(251,103,34)" fg:x="657" fg:w="1"/><text x="60.3598%" y="495.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.09%)</title><rect x="60.1098%" y="469" width="0.0915%" height="15" fill="rgb(233,12,30)" fg:x="657" fg:w="1"/><text x="60.3598%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.27%)</title><rect x="60.5672%" y="389" width="0.2745%" height="15" fill="rgb(238,52,0)" fg:x="662" fg:w="3"/><text x="60.8172%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.09%)</title><rect x="60.8417%" y="373" width="0.0915%" height="15" fill="rgb(223,98,5)" fg:x="665" fg:w="1"/><text x="61.0917%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (6 samples, 0.55%)</title><rect x="60.5672%" y="437" width="0.5489%" height="15" fill="rgb(228,75,37)" fg:x="662" fg:w="6"/><text x="60.8172%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (6 samples, 0.55%)</title><rect x="60.5672%" y="421" width="0.5489%" height="15" fill="rgb(205,115,49)" fg:x="662" fg:w="6"/><text x="60.8172%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (6 samples, 0.55%)</title><rect x="60.5672%" y="405" width="0.5489%" height="15" fill="rgb(250,154,43)" fg:x="662" fg:w="6"/><text x="60.8172%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.27%)</title><rect x="60.8417%" y="389" width="0.2745%" height="15" fill="rgb(226,43,29)" fg:x="665" fg:w="3"/><text x="61.0917%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.18%)</title><rect x="60.9332%" y="373" width="0.1830%" height="15" fill="rgb(249,228,39)" fg:x="666" fg:w="2"/><text x="61.1832%" y="383.50"></text></g><g><title>hashbrown::map::make_insert_hash (29 samples, 2.65%)</title><rect x="60.2013%" y="469" width="2.6532%" height="15" fill="rgb(216,79,43)" fg:x="658" fg:w="29"/><text x="60.4513%" y="479.50">ha..</text></g><g><title>core::hash::BuildHasher::hash_one (26 samples, 2.38%)</title><rect x="60.4758%" y="453" width="2.3788%" height="15" fill="rgb(228,95,12)" fg:x="661" fg:w="26"/><text x="60.7258%" y="463.50">co..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (19 samples, 1.74%)</title><rect x="61.1162%" y="437" width="1.7383%" height="15" fill="rgb(249,221,15)" fg:x="668" fg:w="19"/><text x="61.3662%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (17 samples, 1.56%)</title><rect x="61.2992%" y="421" width="1.5554%" height="15" fill="rgb(233,34,13)" fg:x="670" fg:w="17"/><text x="61.5492%" y="431.50"></text></g><g><title>core::hash::Hasher::write_i32 (17 samples, 1.56%)</title><rect x="61.2992%" y="405" width="1.5554%" height="15" fill="rgb(214,103,39)" fg:x="670" fg:w="17"/><text x="61.5492%" y="415.50"></text></g><g><title>core::hash::Hasher::write_u32 (17 samples, 1.56%)</title><rect x="61.2992%" y="389" width="1.5554%" height="15" fill="rgb(251,126,39)" fg:x="670" fg:w="17"/><text x="61.5492%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 1.56%)</title><rect x="61.2992%" y="373" width="1.5554%" height="15" fill="rgb(214,216,36)" fg:x="670" fg:w="17"/><text x="61.5492%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (17 samples, 1.56%)</title><rect x="61.2992%" y="357" width="1.5554%" height="15" fill="rgb(220,221,8)" fg:x="670" fg:w="17"/><text x="61.5492%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17 samples, 1.56%)</title><rect x="61.2992%" y="341" width="1.5554%" height="15" fill="rgb(240,216,3)" fg:x="670" fg:w="17"/><text x="61.5492%" y="351.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.18%)</title><rect x="62.6715%" y="325" width="0.1830%" height="15" fill="rgb(232,218,17)" fg:x="685" fg:w="2"/><text x="62.9215%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.18%)</title><rect x="63.4950%" y="437" width="0.1830%" height="15" fill="rgb(229,163,45)" fg:x="694" fg:w="2"/><text x="63.7450%" y="447.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.18%)</title><rect x="63.4950%" y="421" width="0.1830%" height="15" fill="rgb(231,110,42)" fg:x="694" fg:w="2"/><text x="63.7450%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (3 samples, 0.27%)</title><rect x="63.6780%" y="437" width="0.2745%" height="15" fill="rgb(208,170,48)" fg:x="696" fg:w="3"/><text x="63.9280%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (3 samples, 0.27%)</title><rect x="63.6780%" y="421" width="0.2745%" height="15" fill="rgb(239,116,25)" fg:x="696" fg:w="3"/><text x="63.9280%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (3 samples, 0.27%)</title><rect x="63.6780%" y="405" width="0.2745%" height="15" fill="rgb(219,200,50)" fg:x="696" fg:w="3"/><text x="63.9280%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (3 samples, 0.27%)</title><rect x="63.6780%" y="389" width="0.2745%" height="15" fill="rgb(245,200,0)" fg:x="696" fg:w="3"/><text x="63.9280%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.27%)</title><rect x="63.6780%" y="373" width="0.2745%" height="15" fill="rgb(245,119,33)" fg:x="696" fg:w="3"/><text x="63.9280%" y="383.50"></text></g><g><title>itertools::Itertools::into_group_map_by (78 samples, 7.14%)</title><rect x="57.2736%" y="645" width="7.1363%" height="15" fill="rgb(231,125,12)" fg:x="626" fg:w="78"/><text x="57.5236%" y="655.50">itertools:..</text></g><g><title>itertools::group_map::into_group_map_by (78 samples, 7.14%)</title><rect x="57.2736%" y="629" width="7.1363%" height="15" fill="rgb(216,96,41)" fg:x="626" fg:w="78"/><text x="57.5236%" y="639.50">itertools:..</text></g><g><title>itertools::group_map::into_group_map (78 samples, 7.14%)</title><rect x="57.2736%" y="613" width="7.1363%" height="15" fill="rgb(248,43,45)" fg:x="626" fg:w="78"/><text x="57.5236%" y="623.50">itertools:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (78 samples, 7.14%)</title><rect x="57.2736%" y="597" width="7.1363%" height="15" fill="rgb(217,222,7)" fg:x="626" fg:w="78"/><text x="57.5236%" y="607.50">core::iter..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (78 samples, 7.14%)</title><rect x="57.2736%" y="581" width="7.1363%" height="15" fill="rgb(233,28,6)" fg:x="626" fg:w="78"/><text x="57.5236%" y="591.50">&lt;core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (78 samples, 7.14%)</title><rect x="57.2736%" y="565" width="7.1363%" height="15" fill="rgb(231,218,15)" fg:x="626" fg:w="78"/><text x="57.5236%" y="575.50">core::iter..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (74 samples, 6.77%)</title><rect x="57.6395%" y="549" width="6.7704%" height="15" fill="rgb(226,171,48)" fg:x="630" fg:w="74"/><text x="57.8895%" y="559.50">core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (74 samples, 6.77%)</title><rect x="57.6395%" y="533" width="6.7704%" height="15" fill="rgb(235,201,9)" fg:x="630" fg:w="74"/><text x="57.8895%" y="543.50">core::ite..</text></g><g><title>itertools::group_map::into_group_map::{{closure}} (74 samples, 6.77%)</title><rect x="57.6395%" y="517" width="6.7704%" height="15" fill="rgb(217,80,15)" fg:x="630" fg:w="74"/><text x="57.8895%" y="527.50">itertools..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (46 samples, 4.21%)</title><rect x="60.2013%" y="501" width="4.2086%" height="15" fill="rgb(219,152,8)" fg:x="658" fg:w="46"/><text x="60.4513%" y="511.50">std::..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (46 samples, 4.21%)</title><rect x="60.2013%" y="485" width="4.2086%" height="15" fill="rgb(243,107,38)" fg:x="658" fg:w="46"/><text x="60.4513%" y="495.50">hashb..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (17 samples, 1.56%)</title><rect x="62.8545%" y="469" width="1.5554%" height="15" fill="rgb(231,17,5)" fg:x="687" fg:w="17"/><text x="63.1045%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (17 samples, 1.56%)</title><rect x="62.8545%" y="453" width="1.5554%" height="15" fill="rgb(209,25,54)" fg:x="687" fg:w="17"/><text x="63.1045%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.46%)</title><rect x="63.9524%" y="437" width="0.4575%" height="15" fill="rgb(219,0,2)" fg:x="699" fg:w="5"/><text x="64.2024%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.46%)</title><rect x="63.9524%" y="421" width="0.4575%" height="15" fill="rgb(246,9,5)" fg:x="699" fg:w="5"/><text x="64.2024%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.18%)</title><rect x="64.5929%" y="597" width="0.1830%" height="15" fill="rgb(226,159,4)" fg:x="706" fg:w="2"/><text x="64.8429%" y="607.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::hash_one (2 samples, 0.18%)</title><rect x="64.5929%" y="581" width="0.1830%" height="15" fill="rgb(219,175,34)" fg:x="706" fg:w="2"/><text x="64.8429%" y="591.50"></text></g><g><title>ahash::random_state::RandomState::hash_one (2 samples, 0.18%)</title><rect x="64.5929%" y="565" width="0.1830%" height="15" fill="rgb(236,10,46)" fg:x="706" fg:w="2"/><text x="64.8429%" y="575.50"></text></g><g><title>&lt;T as ahash::specialize::CallHasher&gt;::get_hash (2 samples, 0.18%)</title><rect x="64.5929%" y="549" width="0.1830%" height="15" fill="rgb(240,211,16)" fg:x="706" fg:w="2"/><text x="64.8429%" y="559.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::finish (2 samples, 0.18%)</title><rect x="64.5929%" y="533" width="0.1830%" height="15" fill="rgb(205,3,43)" fg:x="706" fg:w="2"/><text x="64.8429%" y="543.50"></text></g><g><title>ahash::operations::aesdec (2 samples, 0.18%)</title><rect x="64.5929%" y="517" width="0.1830%" height="15" fill="rgb(245,7,22)" fg:x="706" fg:w="2"/><text x="64.8429%" y="527.50"></text></g><g><title>core::core_arch::x86::aes::_mm_aesdec_si128 (2 samples, 0.18%)</title><rect x="64.5929%" y="501" width="0.1830%" height="15" fill="rgb(239,132,32)" fg:x="706" fg:w="2"/><text x="64.8429%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="65.3248%" y="549" width="0.0915%" height="15" fill="rgb(228,202,34)" fg:x="714" fg:w="1"/><text x="65.5748%" y="559.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.09%)</title><rect x="65.3248%" y="533" width="0.0915%" height="15" fill="rgb(254,200,22)" fg:x="714" fg:w="1"/><text x="65.5748%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.18%)</title><rect x="65.4163%" y="549" width="0.1830%" height="15" fill="rgb(219,10,39)" fg:x="715" fg:w="2"/><text x="65.6663%" y="559.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (2 samples, 0.18%)</title><rect x="65.4163%" y="533" width="0.1830%" height="15" fill="rgb(226,210,39)" fg:x="715" fg:w="2"/><text x="65.6663%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (2 samples, 0.18%)</title><rect x="65.4163%" y="517" width="0.1830%" height="15" fill="rgb(208,219,16)" fg:x="715" fg:w="2"/><text x="65.6663%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.18%)</title><rect x="65.4163%" y="501" width="0.1830%" height="15" fill="rgb(216,158,51)" fg:x="715" fg:w="2"/><text x="65.6663%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.18%)</title><rect x="65.4163%" y="485" width="0.1830%" height="15" fill="rgb(233,14,44)" fg:x="715" fg:w="2"/><text x="65.6663%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (17 samples, 1.56%)</title><rect x="64.4099%" y="645" width="1.5554%" height="15" fill="rgb(237,97,39)" fg:x="704" fg:w="17"/><text x="64.6599%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (17 samples, 1.56%)</title><rect x="64.4099%" y="629" width="1.5554%" height="15" fill="rgb(218,198,43)" fg:x="704" fg:w="17"/><text x="64.6599%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (17 samples, 1.56%)</title><rect x="64.4099%" y="613" width="1.5554%" height="15" fill="rgb(231,104,20)" fg:x="704" fg:w="17"/><text x="64.6599%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (13 samples, 1.19%)</title><rect x="64.7758%" y="597" width="1.1894%" height="15" fill="rgb(254,36,13)" fg:x="708" fg:w="13"/><text x="65.0258%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 1.19%)</title><rect x="64.7758%" y="581" width="1.1894%" height="15" fill="rgb(248,14,50)" fg:x="708" fg:w="13"/><text x="65.0258%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (13 samples, 1.19%)</title><rect x="64.7758%" y="565" width="1.1894%" height="15" fill="rgb(217,107,29)" fg:x="708" fg:w="13"/><text x="65.0258%" y="575.50"></text></g><g><title>hashbrown::raw::h2 (4 samples, 0.37%)</title><rect x="65.5993%" y="549" width="0.3660%" height="15" fill="rgb(251,169,33)" fg:x="717" fg:w="4"/><text x="65.8493%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.09%)</title><rect x="65.9652%" y="533" width="0.0915%" height="15" fill="rgb(217,108,32)" fg:x="721" fg:w="1"/><text x="66.2152%" y="543.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.09%)</title><rect x="65.9652%" y="517" width="0.0915%" height="15" fill="rgb(219,66,42)" fg:x="721" fg:w="1"/><text x="66.2152%" y="527.50"></text></g><g><title>exc_page_fault (1 samples, 0.09%)</title><rect x="65.9652%" y="501" width="0.0915%" height="15" fill="rgb(206,180,7)" fg:x="721" fg:w="1"/><text x="66.2152%" y="511.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.09%)</title><rect x="65.9652%" y="485" width="0.0915%" height="15" fill="rgb(208,226,31)" fg:x="721" fg:w="1"/><text x="66.2152%" y="495.50"></text></g><g><title>handle_mm_fault (1 samples, 0.09%)</title><rect x="65.9652%" y="469" width="0.0915%" height="15" fill="rgb(218,26,49)" fg:x="721" fg:w="1"/><text x="66.2152%" y="479.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="65.9652%" y="453" width="0.0915%" height="15" fill="rgb(233,197,48)" fg:x="721" fg:w="1"/><text x="66.2152%" y="463.50"></text></g><g><title>handle_pte_fault (1 samples, 0.09%)</title><rect x="65.9652%" y="437" width="0.0915%" height="15" fill="rgb(252,181,51)" fg:x="721" fg:w="1"/><text x="66.2152%" y="447.50"></text></g><g><title>do_anonymous_page (1 samples, 0.09%)</title><rect x="65.9652%" y="421" width="0.0915%" height="15" fill="rgb(253,90,19)" fg:x="721" fg:w="1"/><text x="66.2152%" y="431.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.09%)</title><rect x="65.9652%" y="405" width="0.0915%" height="15" fill="rgb(215,171,30)" fg:x="721" fg:w="1"/><text x="66.2152%" y="415.50"></text></g><g><title>__alloc_pages (1 samples, 0.09%)</title><rect x="65.9652%" y="389" width="0.0915%" height="15" fill="rgb(214,222,9)" fg:x="721" fg:w="1"/><text x="66.2152%" y="399.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.09%)</title><rect x="65.9652%" y="373" width="0.0915%" height="15" fill="rgb(223,3,22)" fg:x="721" fg:w="1"/><text x="66.2152%" y="383.50"></text></g><g><title>rmqueue (1 samples, 0.09%)</title><rect x="65.9652%" y="357" width="0.0915%" height="15" fill="rgb(225,196,46)" fg:x="721" fg:w="1"/><text x="66.2152%" y="367.50"></text></g><g><title>rmqueue_bulk (1 samples, 0.09%)</title><rect x="65.9652%" y="341" width="0.0915%" height="15" fill="rgb(209,110,37)" fg:x="721" fg:w="1"/><text x="66.2152%" y="351.50"></text></g><g><title>demoparser::parsing::cache::cache_writer::WriteCache::write_all_caches (598 samples, 54.71%)</title><rect x="11.5279%" y="677" width="54.7118%" height="15" fill="rgb(249,89,12)" fg:x="126" fg:w="598"/><text x="11.7779%" y="687.50">demoparser::parsing::cache::cache_writer::WriteCache::write_all_caches</text></g><g><title>demoparser::parsing::cache::cache_writer::WriteCache::write_packet_ents (598 samples, 54.71%)</title><rect x="11.5279%" y="661" width="54.7118%" height="15" fill="rgb(226,27,33)" fg:x="126" fg:w="598"/><text x="11.7779%" y="671.50">demoparser::parsing::cache::cache_writer::WriteCache::write_packet_ents</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (3 samples, 0.27%)</title><rect x="65.9652%" y="645" width="0.2745%" height="15" fill="rgb(213,82,22)" fg:x="721" fg:w="3"/><text x="66.2152%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.27%)</title><rect x="65.9652%" y="629" width="0.2745%" height="15" fill="rgb(248,140,0)" fg:x="721" fg:w="3"/><text x="66.2152%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.27%)</title><rect x="65.9652%" y="613" width="0.2745%" height="15" fill="rgb(228,106,3)" fg:x="721" fg:w="3"/><text x="66.2152%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.27%)</title><rect x="65.9652%" y="597" width="0.2745%" height="15" fill="rgb(209,23,37)" fg:x="721" fg:w="3"/><text x="66.2152%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.27%)</title><rect x="65.9652%" y="581" width="0.2745%" height="15" fill="rgb(241,93,50)" fg:x="721" fg:w="3"/><text x="66.2152%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (3 samples, 0.27%)</title><rect x="65.9652%" y="565" width="0.2745%" height="15" fill="rgb(253,46,43)" fg:x="721" fg:w="3"/><text x="66.2152%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (3 samples, 0.27%)</title><rect x="65.9652%" y="549" width="0.2745%" height="15" fill="rgb(226,206,43)" fg:x="721" fg:w="3"/><text x="66.2152%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (2 samples, 0.18%)</title><rect x="66.0567%" y="533" width="0.1830%" height="15" fill="rgb(217,54,7)" fg:x="722" fg:w="2"/><text x="66.3067%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (2 samples, 0.18%)</title><rect x="66.0567%" y="517" width="0.1830%" height="15" fill="rgb(223,5,52)" fg:x="722" fg:w="2"/><text x="66.3067%" y="527.50"></text></g><g><title>alloc_pages_vma (4 samples, 0.37%)</title><rect x="66.3312%" y="341" width="0.3660%" height="15" fill="rgb(206,52,46)" fg:x="725" fg:w="4"/><text x="66.5812%" y="351.50"></text></g><g><title>__alloc_pages (4 samples, 0.37%)</title><rect x="66.3312%" y="325" width="0.3660%" height="15" fill="rgb(253,136,11)" fg:x="725" fg:w="4"/><text x="66.5812%" y="335.50"></text></g><g><title>get_page_from_freelist (4 samples, 0.37%)</title><rect x="66.3312%" y="309" width="0.3660%" height="15" fill="rgb(208,106,33)" fg:x="725" fg:w="4"/><text x="66.5812%" y="319.50"></text></g><g><title>clear_page_erms (4 samples, 0.37%)</title><rect x="66.3312%" y="293" width="0.3660%" height="15" fill="rgb(206,54,4)" fg:x="725" fg:w="4"/><text x="66.5812%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (6 samples, 0.55%)</title><rect x="66.2397%" y="501" width="0.5489%" height="15" fill="rgb(213,3,15)" fg:x="724" fg:w="6"/><text x="66.4897%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (6 samples, 0.55%)</title><rect x="66.2397%" y="485" width="0.5489%" height="15" fill="rgb(252,211,39)" fg:x="724" fg:w="6"/><text x="66.4897%" y="495.50"></text></g><g><title>core::ptr::write (6 samples, 0.55%)</title><rect x="66.2397%" y="469" width="0.5489%" height="15" fill="rgb(223,6,36)" fg:x="724" fg:w="6"/><text x="66.4897%" y="479.50"></text></g><g><title>asm_exc_page_fault (5 samples, 0.46%)</title><rect x="66.3312%" y="453" width="0.4575%" height="15" fill="rgb(252,169,45)" fg:x="725" fg:w="5"/><text x="66.5812%" y="463.50"></text></g><g><title>exc_page_fault (5 samples, 0.46%)</title><rect x="66.3312%" y="437" width="0.4575%" height="15" fill="rgb(212,48,26)" fg:x="725" fg:w="5"/><text x="66.5812%" y="447.50"></text></g><g><title>do_user_addr_fault (5 samples, 0.46%)</title><rect x="66.3312%" y="421" width="0.4575%" height="15" fill="rgb(251,102,48)" fg:x="725" fg:w="5"/><text x="66.5812%" y="431.50"></text></g><g><title>handle_mm_fault (5 samples, 0.46%)</title><rect x="66.3312%" y="405" width="0.4575%" height="15" fill="rgb(243,208,16)" fg:x="725" fg:w="5"/><text x="66.5812%" y="415.50"></text></g><g><title>__handle_mm_fault (5 samples, 0.46%)</title><rect x="66.3312%" y="389" width="0.4575%" height="15" fill="rgb(219,96,24)" fg:x="725" fg:w="5"/><text x="66.5812%" y="399.50"></text></g><g><title>handle_pte_fault (5 samples, 0.46%)</title><rect x="66.3312%" y="373" width="0.4575%" height="15" fill="rgb(219,33,29)" fg:x="725" fg:w="5"/><text x="66.5812%" y="383.50"></text></g><g><title>do_anonymous_page (5 samples, 0.46%)</title><rect x="66.3312%" y="357" width="0.4575%" height="15" fill="rgb(223,176,5)" fg:x="725" fg:w="5"/><text x="66.5812%" y="367.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1 samples, 0.09%)</title><rect x="66.6972%" y="341" width="0.0915%" height="15" fill="rgb(228,140,14)" fg:x="729" fg:w="1"/><text x="66.9472%" y="351.50"></text></g><g><title>lru_cache_add (1 samples, 0.09%)</title><rect x="66.6972%" y="325" width="0.0915%" height="15" fill="rgb(217,179,31)" fg:x="729" fg:w="1"/><text x="66.9472%" y="335.50"></text></g><g><title>__pagevec_lru_add (1 samples, 0.09%)</title><rect x="66.6972%" y="309" width="0.0915%" height="15" fill="rgb(230,9,30)" fg:x="729" fg:w="1"/><text x="66.9472%" y="319.50"></text></g><g><title>__pagevec_lru_add_fn (1 samples, 0.09%)</title><rect x="66.6972%" y="293" width="0.0915%" height="15" fill="rgb(230,136,20)" fg:x="729" fg:w="1"/><text x="66.9472%" y="303.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.09%)</title><rect x="66.8801%" y="437" width="0.0915%" height="15" fill="rgb(215,210,22)" fg:x="731" fg:w="1"/><text x="67.1301%" y="447.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.09%)</title><rect x="66.9716%" y="437" width="0.0915%" height="15" fill="rgb(218,43,5)" fg:x="732" fg:w="1"/><text x="67.2216%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.09%)</title><rect x="66.9716%" y="421" width="0.0915%" height="15" fill="rgb(216,11,5)" fg:x="732" fg:w="1"/><text x="67.2216%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.09%)</title><rect x="68.5270%" y="421" width="0.0915%" height="15" fill="rgb(209,82,29)" fg:x="749" fg:w="1"/><text x="68.7770%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.09%)</title><rect x="68.5270%" y="405" width="0.0915%" height="15" fill="rgb(244,115,12)" fg:x="749" fg:w="1"/><text x="68.7770%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.09%)</title><rect x="68.5270%" y="389" width="0.0915%" height="15" fill="rgb(222,82,18)" fg:x="749" fg:w="1"/><text x="68.7770%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.09%)</title><rect x="68.5270%" y="373" width="0.0915%" height="15" fill="rgb(249,227,8)" fg:x="749" fg:w="1"/><text x="68.7770%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.09%)</title><rect x="68.5270%" y="357" width="0.0915%" height="15" fill="rgb(253,141,45)" fg:x="749" fg:w="1"/><text x="68.7770%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.09%)</title><rect x="68.5270%" y="341" width="0.0915%" height="15" fill="rgb(234,184,4)" fg:x="749" fg:w="1"/><text x="68.7770%" y="351.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.09%)</title><rect x="68.5270%" y="325" width="0.0915%" height="15" fill="rgb(218,194,23)" fg:x="749" fg:w="1"/><text x="68.7770%" y="335.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.09%)</title><rect x="68.5270%" y="309" width="0.0915%" height="15" fill="rgb(235,66,41)" fg:x="749" fg:w="1"/><text x="68.7770%" y="319.50"></text></g><g><title>_int_realloc (1 samples, 0.09%)</title><rect x="68.5270%" y="293" width="0.0915%" height="15" fill="rgb(245,217,1)" fg:x="749" fg:w="1"/><text x="68.7770%" y="303.50"></text></g><g><title>_int_malloc (1 samples, 0.09%)</title><rect x="68.5270%" y="277" width="0.0915%" height="15" fill="rgb(229,91,1)" fg:x="749" fg:w="1"/><text x="68.7770%" y="287.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.09%)</title><rect x="68.5270%" y="261" width="0.0915%" height="15" fill="rgb(207,101,30)" fg:x="749" fg:w="1"/><text x="68.7770%" y="271.50"></text></g><g><title>exc_page_fault (1 samples, 0.09%)</title><rect x="68.5270%" y="245" width="0.0915%" height="15" fill="rgb(223,82,49)" fg:x="749" fg:w="1"/><text x="68.7770%" y="255.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.09%)</title><rect x="68.5270%" y="229" width="0.0915%" height="15" fill="rgb(218,167,17)" fg:x="749" fg:w="1"/><text x="68.7770%" y="239.50"></text></g><g><title>handle_mm_fault (1 samples, 0.09%)</title><rect x="68.5270%" y="213" width="0.0915%" height="15" fill="rgb(208,103,14)" fg:x="749" fg:w="1"/><text x="68.7770%" y="223.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="68.5270%" y="197" width="0.0915%" height="15" fill="rgb(238,20,8)" fg:x="749" fg:w="1"/><text x="68.7770%" y="207.50"></text></g><g><title>handle_pte_fault (1 samples, 0.09%)</title><rect x="68.5270%" y="181" width="0.0915%" height="15" fill="rgb(218,80,54)" fg:x="749" fg:w="1"/><text x="68.7770%" y="191.50"></text></g><g><title>do_anonymous_page (1 samples, 0.09%)</title><rect x="68.5270%" y="165" width="0.0915%" height="15" fill="rgb(240,144,17)" fg:x="749" fg:w="1"/><text x="68.7770%" y="175.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.09%)</title><rect x="68.5270%" y="149" width="0.0915%" height="15" fill="rgb(245,27,50)" fg:x="749" fg:w="1"/><text x="68.7770%" y="159.50"></text></g><g><title>__alloc_pages (1 samples, 0.09%)</title><rect x="68.5270%" y="133" width="0.0915%" height="15" fill="rgb(251,51,7)" fg:x="749" fg:w="1"/><text x="68.7770%" y="143.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.09%)</title><rect x="68.5270%" y="117" width="0.0915%" height="15" fill="rgb(245,217,29)" fg:x="749" fg:w="1"/><text x="68.7770%" y="127.50"></text></g><g><title>clear_page_erms (1 samples, 0.09%)</title><rect x="68.5270%" y="101" width="0.0915%" height="15" fill="rgb(221,176,29)" fg:x="749" fg:w="1"/><text x="68.7770%" y="111.50"></text></g><g><title>down_read_trylock (1 samples, 0.09%)</title><rect x="69.0759%" y="229" width="0.0915%" height="15" fill="rgb(212,180,24)" fg:x="755" fg:w="1"/><text x="69.3259%" y="239.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.09%)</title><rect x="69.2589%" y="165" width="0.0915%" height="15" fill="rgb(254,24,2)" fg:x="757" fg:w="1"/><text x="69.5089%" y="175.50"></text></g><g><title>charge_memcg (1 samples, 0.09%)</title><rect x="69.2589%" y="149" width="0.0915%" height="15" fill="rgb(230,100,2)" fg:x="757" fg:w="1"/><text x="69.5089%" y="159.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (1 samples, 0.09%)</title><rect x="69.2589%" y="133" width="0.0915%" height="15" fill="rgb(219,142,25)" fg:x="757" fg:w="1"/><text x="69.5089%" y="143.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.09%)</title><rect x="69.2589%" y="117" width="0.0915%" height="15" fill="rgb(240,73,43)" fg:x="757" fg:w="1"/><text x="69.5089%" y="127.50"></text></g><g><title>clear_page_erms (8 samples, 0.73%)</title><rect x="69.5334%" y="117" width="0.7319%" height="15" fill="rgb(214,114,15)" fg:x="760" fg:w="8"/><text x="69.7834%" y="127.50"></text></g><g><title>alloc_pages_vma (11 samples, 1.01%)</title><rect x="69.3504%" y="165" width="1.0064%" height="15" fill="rgb(207,130,4)" fg:x="758" fg:w="11"/><text x="69.6004%" y="175.50"></text></g><g><title>__alloc_pages (10 samples, 0.91%)</title><rect x="69.4419%" y="149" width="0.9149%" height="15" fill="rgb(221,25,40)" fg:x="759" fg:w="10"/><text x="69.6919%" y="159.50"></text></g><g><title>get_page_from_freelist (9 samples, 0.82%)</title><rect x="69.5334%" y="133" width="0.8234%" height="15" fill="rgb(241,184,7)" fg:x="760" fg:w="9"/><text x="69.7834%" y="143.50"></text></g><g><title>rmqueue (1 samples, 0.09%)</title><rect x="70.2653%" y="117" width="0.0915%" height="15" fill="rgb(235,159,4)" fg:x="768" fg:w="1"/><text x="70.5153%" y="127.50"></text></g><g><title>rmqueue_bulk (1 samples, 0.09%)</title><rect x="70.2653%" y="101" width="0.0915%" height="15" fill="rgb(214,87,48)" fg:x="768" fg:w="1"/><text x="70.5153%" y="111.50"></text></g><g><title>asm_exc_page_fault (20 samples, 1.83%)</title><rect x="68.7100%" y="277" width="1.8298%" height="15" fill="rgb(246,198,24)" fg:x="751" fg:w="20"/><text x="68.9600%" y="287.50">a..</text></g><g><title>exc_page_fault (16 samples, 1.46%)</title><rect x="69.0759%" y="261" width="1.4639%" height="15" fill="rgb(209,66,40)" fg:x="755" fg:w="16"/><text x="69.3259%" y="271.50"></text></g><g><title>do_user_addr_fault (16 samples, 1.46%)</title><rect x="69.0759%" y="245" width="1.4639%" height="15" fill="rgb(233,147,39)" fg:x="755" fg:w="16"/><text x="69.3259%" y="255.50"></text></g><g><title>handle_mm_fault (15 samples, 1.37%)</title><rect x="69.1674%" y="229" width="1.3724%" height="15" fill="rgb(231,145,52)" fg:x="756" fg:w="15"/><text x="69.4174%" y="239.50"></text></g><g><title>__handle_mm_fault (14 samples, 1.28%)</title><rect x="69.2589%" y="213" width="1.2809%" height="15" fill="rgb(206,20,26)" fg:x="757" fg:w="14"/><text x="69.5089%" y="223.50"></text></g><g><title>handle_pte_fault (14 samples, 1.28%)</title><rect x="69.2589%" y="197" width="1.2809%" height="15" fill="rgb(238,220,4)" fg:x="757" fg:w="14"/><text x="69.5089%" y="207.50"></text></g><g><title>do_anonymous_page (14 samples, 1.28%)</title><rect x="69.2589%" y="181" width="1.2809%" height="15" fill="rgb(252,195,42)" fg:x="757" fg:w="14"/><text x="69.5089%" y="191.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (2 samples, 0.18%)</title><rect x="70.3568%" y="165" width="0.1830%" height="15" fill="rgb(209,10,6)" fg:x="769" fg:w="2"/><text x="70.6068%" y="175.50"></text></g><g><title>lru_cache_add (2 samples, 0.18%)</title><rect x="70.3568%" y="149" width="0.1830%" height="15" fill="rgb(229,3,52)" fg:x="769" fg:w="2"/><text x="70.6068%" y="159.50"></text></g><g><title>__pagevec_lru_add (2 samples, 0.18%)</title><rect x="70.3568%" y="133" width="0.1830%" height="15" fill="rgb(253,49,37)" fg:x="769" fg:w="2"/><text x="70.6068%" y="143.50"></text></g><g><title>__pagevec_lru_add_fn (2 samples, 0.18%)</title><rect x="70.3568%" y="117" width="0.1830%" height="15" fill="rgb(240,103,49)" fg:x="769" fg:w="2"/><text x="70.6068%" y="127.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.09%)</title><rect x="70.4483%" y="101" width="0.0915%" height="15" fill="rgb(250,182,30)" fg:x="770" fg:w="1"/><text x="70.6983%" y="111.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.09%)</title><rect x="70.4483%" y="85" width="0.0915%" height="15" fill="rgb(248,8,30)" fg:x="770" fg:w="1"/><text x="70.6983%" y="95.50"></text></g><g><title>get_unmapped_area (1 samples, 0.09%)</title><rect x="70.5398%" y="117" width="0.0915%" height="15" fill="rgb(237,120,30)" fg:x="771" fg:w="1"/><text x="70.7898%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (24 samples, 2.20%)</title><rect x="68.6185%" y="421" width="2.1958%" height="15" fill="rgb(221,146,34)" fg:x="750" fg:w="24"/><text x="68.8685%" y="431.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (24 samples, 2.20%)</title><rect x="68.6185%" y="405" width="2.1958%" height="15" fill="rgb(242,55,13)" fg:x="750" fg:w="24"/><text x="68.8685%" y="415.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (24 samples, 2.20%)</title><rect x="68.6185%" y="389" width="2.1958%" height="15" fill="rgb(242,112,31)" fg:x="750" fg:w="24"/><text x="68.8685%" y="399.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (24 samples, 2.20%)</title><rect x="68.6185%" y="373" width="2.1958%" height="15" fill="rgb(249,192,27)" fg:x="750" fg:w="24"/><text x="68.8685%" y="383.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 2.20%)</title><rect x="68.6185%" y="357" width="2.1958%" height="15" fill="rgb(208,204,44)" fg:x="750" fg:w="24"/><text x="68.8685%" y="367.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 2.20%)</title><rect x="68.6185%" y="341" width="2.1958%" height="15" fill="rgb(208,93,54)" fg:x="750" fg:w="24"/><text x="68.8685%" y="351.50">a..</text></g><g><title>alloc::alloc::alloc (24 samples, 2.20%)</title><rect x="68.6185%" y="325" width="2.1958%" height="15" fill="rgb(242,1,31)" fg:x="750" fg:w="24"/><text x="68.8685%" y="335.50">a..</text></g><g><title>__GI___libc_malloc (24 samples, 2.20%)</title><rect x="68.6185%" y="309" width="2.1958%" height="15" fill="rgb(241,83,25)" fg:x="750" fg:w="24"/><text x="68.8685%" y="319.50">_..</text></g><g><title>_int_malloc (24 samples, 2.20%)</title><rect x="68.6185%" y="293" width="2.1958%" height="15" fill="rgb(205,169,50)" fg:x="750" fg:w="24"/><text x="68.8685%" y="303.50">_..</text></g><g><title>sysmalloc (3 samples, 0.27%)</title><rect x="70.5398%" y="277" width="0.2745%" height="15" fill="rgb(239,186,37)" fg:x="771" fg:w="3"/><text x="70.7898%" y="287.50"></text></g><g><title>__glibc_morecore (3 samples, 0.27%)</title><rect x="70.5398%" y="261" width="0.2745%" height="15" fill="rgb(205,221,10)" fg:x="771" fg:w="3"/><text x="70.7898%" y="271.50"></text></g><g><title>__GI___sbrk (3 samples, 0.27%)</title><rect x="70.5398%" y="245" width="0.2745%" height="15" fill="rgb(218,196,15)" fg:x="771" fg:w="3"/><text x="70.7898%" y="255.50"></text></g><g><title>__GI___sbrk (3 samples, 0.27%)</title><rect x="70.5398%" y="229" width="0.2745%" height="15" fill="rgb(218,196,35)" fg:x="771" fg:w="3"/><text x="70.7898%" y="239.50"></text></g><g><title>__brk (3 samples, 0.27%)</title><rect x="70.5398%" y="213" width="0.2745%" height="15" fill="rgb(233,63,24)" fg:x="771" fg:w="3"/><text x="70.7898%" y="223.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.27%)</title><rect x="70.5398%" y="197" width="0.2745%" height="15" fill="rgb(225,8,4)" fg:x="771" fg:w="3"/><text x="70.7898%" y="207.50"></text></g><g><title>do_syscall_64 (3 samples, 0.27%)</title><rect x="70.5398%" y="181" width="0.2745%" height="15" fill="rgb(234,105,35)" fg:x="771" fg:w="3"/><text x="70.7898%" y="191.50"></text></g><g><title>__x64_sys_brk (3 samples, 0.27%)</title><rect x="70.5398%" y="165" width="0.2745%" height="15" fill="rgb(236,21,32)" fg:x="771" fg:w="3"/><text x="70.7898%" y="175.50"></text></g><g><title>__do_sys_brk (3 samples, 0.27%)</title><rect x="70.5398%" y="149" width="0.2745%" height="15" fill="rgb(228,109,6)" fg:x="771" fg:w="3"/><text x="70.7898%" y="159.50"></text></g><g><title>do_brk_flags (3 samples, 0.27%)</title><rect x="70.5398%" y="133" width="0.2745%" height="15" fill="rgb(229,215,31)" fg:x="771" fg:w="3"/><text x="70.7898%" y="143.50"></text></g><g><title>perf_event_mmap (2 samples, 0.18%)</title><rect x="70.6313%" y="117" width="0.1830%" height="15" fill="rgb(221,52,54)" fg:x="772" fg:w="2"/><text x="70.8813%" y="127.50"></text></g><g><title>perf_event_mmap_event (2 samples, 0.18%)</title><rect x="70.6313%" y="101" width="0.1830%" height="15" fill="rgb(252,129,43)" fg:x="772" fg:w="2"/><text x="70.8813%" y="111.50"></text></g><g><title>perf_iterate_sb (2 samples, 0.18%)</title><rect x="70.6313%" y="85" width="0.1830%" height="15" fill="rgb(248,183,27)" fg:x="772" fg:w="2"/><text x="70.8813%" y="95.50"></text></g><g><title>perf_iterate_ctx (2 samples, 0.18%)</title><rect x="70.6313%" y="69" width="0.1830%" height="15" fill="rgb(250,0,22)" fg:x="772" fg:w="2"/><text x="70.8813%" y="79.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.09%)</title><rect x="70.7228%" y="53" width="0.0915%" height="15" fill="rgb(213,166,10)" fg:x="773" fg:w="1"/><text x="70.9728%" y="63.50"></text></g><g><title>perf_output_copy (1 samples, 0.09%)</title><rect x="70.7228%" y="37" width="0.0915%" height="15" fill="rgb(207,163,36)" fg:x="773" fg:w="1"/><text x="70.9728%" y="47.50"></text></g><g><title>csgoproto::netmessages::CCLCMsg_Move::data (1 samples, 0.09%)</title><rect x="70.8143%" y="421" width="0.0915%" height="15" fill="rgb(208,122,22)" fg:x="774" fg:w="1"/><text x="71.0643%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.09%)</title><rect x="70.8143%" y="405" width="0.0915%" height="15" fill="rgb(207,104,49)" fg:x="774" fg:w="1"/><text x="71.0643%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;demoparser::parsing::variants::PropData&gt;&gt; (1 samples, 0.09%)</title><rect x="72.0952%" y="405" width="0.0915%" height="15" fill="rgb(248,211,50)" fg:x="788" fg:w="1"/><text x="72.3452%" y="415.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.27%)</title><rect x="72.6441%" y="389" width="0.2745%" height="15" fill="rgb(217,13,45)" fg:x="794" fg:w="3"/><text x="72.8941%" y="399.50"></text></g><g><title>bitter::LittleEndianReader::has_data_for_unaligned_loads (1 samples, 0.09%)</title><rect x="76.2123%" y="325" width="0.0915%" height="15" fill="rgb(211,216,49)" fg:x="833" fg:w="1"/><text x="76.4623%" y="335.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_boolie (9 samples, 0.82%)</title><rect x="75.5718%" y="373" width="0.8234%" height="15" fill="rgb(221,58,53)" fg:x="826" fg:w="9"/><text x="75.8218%" y="383.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bit (9 samples, 0.82%)</title><rect x="75.5718%" y="357" width="0.8234%" height="15" fill="rgb(220,112,41)" fg:x="826" fg:w="9"/><text x="75.8218%" y="367.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (9 samples, 0.82%)</title><rect x="75.5718%" y="341" width="0.8234%" height="15" fill="rgb(236,38,28)" fg:x="826" fg:w="9"/><text x="75.8218%" y="351.50"></text></g><g><title>bitter::LittleEndianReader::refill (1 samples, 0.09%)</title><rect x="76.3038%" y="325" width="0.0915%" height="15" fill="rgb(227,195,22)" fg:x="834" fg:w="1"/><text x="76.5538%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.09%)</title><rect x="76.3038%" y="309" width="0.0915%" height="15" fill="rgb(214,55,33)" fg:x="834" fg:w="1"/><text x="76.5538%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.09%)</title><rect x="76.3038%" y="293" width="0.0915%" height="15" fill="rgb(248,80,13)" fg:x="834" fg:w="1"/><text x="76.5538%" y="303.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::peek (1 samples, 0.09%)</title><rect x="77.9506%" y="341" width="0.0915%" height="15" fill="rgb(238,52,6)" fg:x="852" fg:w="1"/><text x="78.2006%" y="351.50"></text></g><g><title>bitter::LittleEndianReader::peek_ (1 samples, 0.09%)</title><rect x="77.9506%" y="325" width="0.0915%" height="15" fill="rgb(224,198,47)" fg:x="852" fg:w="1"/><text x="78.2006%" y="335.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_inx (59 samples, 5.40%)</title><rect x="72.9186%" y="389" width="5.3980%" height="15" fill="rgb(233,171,20)" fg:x="797" fg:w="59"/><text x="73.1686%" y="399.50">demopar..</text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (21 samples, 1.92%)</title><rect x="76.3952%" y="373" width="1.9213%" height="15" fill="rgb(241,30,25)" fg:x="835" fg:w="21"/><text x="76.6452%" y="383.50">d..</text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (8 samples, 0.73%)</title><rect x="77.5846%" y="357" width="0.7319%" height="15" fill="rgb(207,171,38)" fg:x="848" fg:w="8"/><text x="77.8346%" y="367.50"></text></g><g><title>bitter::LittleEndianReader::refill (3 samples, 0.27%)</title><rect x="78.0421%" y="341" width="0.2745%" height="15" fill="rgb(234,70,1)" fg:x="853" fg:w="3"/><text x="78.2921%" y="351.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities_cache_only::parse_indicies (71 samples, 6.50%)</title><rect x="72.1866%" y="405" width="6.4959%" height="15" fill="rgb(232,178,18)" fg:x="789" fg:w="71"/><text x="72.4366%" y="415.50">demoparse..</text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (4 samples, 0.37%)</title><rect x="78.3166%" y="389" width="0.3660%" height="15" fill="rgb(241,78,40)" fg:x="856" fg:w="4"/><text x="78.5666%" y="399.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (2 samples, 0.18%)</title><rect x="78.4995%" y="373" width="0.1830%" height="15" fill="rgb(222,35,25)" fg:x="858" fg:w="2"/><text x="78.7495%" y="383.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.09%)</title><rect x="82.3422%" y="389" width="0.0915%" height="15" fill="rgb(207,92,16)" fg:x="900" fg:w="1"/><text x="82.5922%" y="399.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_special_float (8 samples, 0.73%)</title><rect x="83.7145%" y="373" width="0.7319%" height="15" fill="rgb(216,59,51)" fg:x="915" fg:w="8"/><text x="83.9645%" y="383.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_f32 (4 samples, 0.37%)</title><rect x="84.0805%" y="357" width="0.3660%" height="15" fill="rgb(213,80,28)" fg:x="919" fg:w="4"/><text x="84.3305%" y="367.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_u32 (4 samples, 0.37%)</title><rect x="84.0805%" y="341" width="0.3660%" height="15" fill="rgb(220,93,7)" fg:x="919" fg:w="4"/><text x="84.3305%" y="351.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (4 samples, 0.37%)</title><rect x="84.0805%" y="325" width="0.3660%" height="15" fill="rgb(225,24,44)" fg:x="919" fg:w="4"/><text x="84.3305%" y="335.50"></text></g><g><title>bitter::LittleEndianReader::refill (3 samples, 0.27%)</title><rect x="84.1720%" y="309" width="0.2745%" height="15" fill="rgb(243,74,40)" fg:x="920" fg:w="3"/><text x="84.4220%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub (1 samples, 0.09%)</title><rect x="84.3550%" y="293" width="0.0915%" height="15" fill="rgb(228,39,7)" fg:x="922" fg:w="1"/><text x="84.6050%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.09%)</title><rect x="84.3550%" y="277" width="0.0915%" height="15" fill="rgb(227,79,8)" fg:x="922" fg:w="1"/><text x="84.6050%" y="287.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_float (27 samples, 2.47%)</title><rect x="82.4337%" y="389" width="2.4703%" height="15" fill="rgb(236,58,11)" fg:x="901" fg:w="27"/><text x="82.6837%" y="399.50">de..</text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (5 samples, 0.46%)</title><rect x="84.4465%" y="373" width="0.4575%" height="15" fill="rgb(249,63,35)" fg:x="923" fg:w="5"/><text x="84.6965%" y="383.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (2 samples, 0.18%)</title><rect x="84.7210%" y="357" width="0.1830%" height="15" fill="rgb(252,114,16)" fg:x="926" fg:w="2"/><text x="84.9710%" y="367.50"></text></g><g><title>bitter::LittleEndianReader::has_data_for_unaligned_loads (1 samples, 0.09%)</title><rect x="84.8124%" y="341" width="0.0915%" height="15" fill="rgb(254,151,24)" fg:x="927" fg:w="1"/><text x="85.0624%" y="351.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (4 samples, 0.37%)</title><rect x="84.9039%" y="373" width="0.3660%" height="15" fill="rgb(253,54,39)" fg:x="928" fg:w="4"/><text x="85.1539%" y="383.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.09%)</title><rect x="85.1784%" y="357" width="0.0915%" height="15" fill="rgb(243,25,45)" fg:x="931" fg:w="1"/><text x="85.4284%" y="367.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_int (6 samples, 0.55%)</title><rect x="84.9039%" y="389" width="0.5489%" height="15" fill="rgb(234,134,9)" fg:x="928" fg:w="6"/><text x="85.1539%" y="399.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_sbit_long (2 samples, 0.18%)</title><rect x="85.2699%" y="373" width="0.1830%" height="15" fill="rgb(227,166,31)" fg:x="932" fg:w="2"/><text x="85.5199%" y="383.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (2 samples, 0.18%)</title><rect x="85.2699%" y="357" width="0.1830%" height="15" fill="rgb(245,143,41)" fg:x="932" fg:w="2"/><text x="85.5199%" y="367.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.09%)</title><rect x="85.3614%" y="341" width="0.0915%" height="15" fill="rgb(238,181,32)" fg:x="933" fg:w="1"/><text x="85.6114%" y="351.50"></text></g><g><title>bitter::LittleEndianReader::has_data_for_unaligned_loads (1 samples, 0.09%)</title><rect x="85.3614%" y="325" width="0.0915%" height="15" fill="rgb(224,113,18)" fg:x="933" fg:w="1"/><text x="85.6114%" y="335.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_string (1 samples, 0.09%)</title><rect x="85.4529%" y="389" width="0.0915%" height="15" fill="rgb(240,229,28)" fg:x="934" fg:w="1"/><text x="85.7029%" y="399.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_string (1 samples, 0.09%)</title><rect x="85.4529%" y="373" width="0.0915%" height="15" fill="rgb(250,185,3)" fg:x="934" fg:w="1"/><text x="85.7029%" y="383.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.09%)</title><rect x="85.4529%" y="357" width="0.0915%" height="15" fill="rgb(212,59,25)" fg:x="934" fg:w="1"/><text x="85.7029%" y="367.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_vec (5 samples, 0.46%)</title><rect x="85.5444%" y="389" width="0.4575%" height="15" fill="rgb(221,87,20)" fg:x="935" fg:w="5"/><text x="85.7944%" y="399.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_float (5 samples, 0.46%)</title><rect x="85.5444%" y="373" width="0.4575%" height="15" fill="rgb(213,74,28)" fg:x="935" fg:w="5"/><text x="85.7944%" y="383.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_special_float (1 samples, 0.09%)</title><rect x="85.9103%" y="357" width="0.0915%" height="15" fill="rgb(224,132,34)" fg:x="939" fg:w="1"/><text x="86.1603%" y="367.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_bit_coord (1 samples, 0.09%)</title><rect x="85.9103%" y="341" width="0.0915%" height="15" fill="rgb(222,101,24)" fg:x="939" fg:w="1"/><text x="86.1603%" y="351.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode (87 samples, 7.96%)</title><rect x="78.6825%" y="405" width="7.9597%" height="15" fill="rgb(254,142,4)" fg:x="860" fg:w="87"/><text x="78.9325%" y="415.50">demoparser:..</text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_vec_xy (7 samples, 0.64%)</title><rect x="86.0018%" y="389" width="0.6404%" height="15" fill="rgb(230,229,49)" fg:x="940" fg:w="7"/><text x="86.2518%" y="399.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_float (5 samples, 0.46%)</title><rect x="86.1848%" y="373" width="0.4575%" height="15" fill="rgb(238,70,47)" fg:x="942" fg:w="5"/><text x="86.4348%" y="383.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_special_float (1 samples, 0.09%)</title><rect x="86.5508%" y="357" width="0.0915%" height="15" fill="rgb(231,160,17)" fg:x="946" fg:w="1"/><text x="86.8008%" y="367.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_f32 (1 samples, 0.09%)</title><rect x="86.5508%" y="341" width="0.0915%" height="15" fill="rgb(218,68,53)" fg:x="946" fg:w="1"/><text x="86.8008%" y="351.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_u32 (1 samples, 0.09%)</title><rect x="86.5508%" y="325" width="0.0915%" height="15" fill="rgb(236,111,10)" fg:x="946" fg:w="1"/><text x="86.8008%" y="335.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.09%)</title><rect x="86.5508%" y="309" width="0.0915%" height="15" fill="rgb(224,34,41)" fg:x="946" fg:w="1"/><text x="86.8008%" y="319.50"></text></g><g><title>bitter::LittleEndianReader::refill (1 samples, 0.09%)</title><rect x="86.5508%" y="293" width="0.0915%" height="15" fill="rgb(241,118,19)" fg:x="946" fg:w="1"/><text x="86.8008%" y="303.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::finish (2 samples, 0.18%)</title><rect x="86.6423%" y="293" width="0.1830%" height="15" fill="rgb(238,129,25)" fg:x="947" fg:w="2"/><text x="86.8923%" y="303.50"></text></g><g><title>ahash::operations::aesenc (2 samples, 0.18%)</title><rect x="86.6423%" y="277" width="0.1830%" height="15" fill="rgb(238,22,31)" fg:x="947" fg:w="2"/><text x="86.8923%" y="287.50"></text></g><g><title>core::core_arch::x86::aes::_mm_aesenc_si128 (2 samples, 0.18%)</title><rect x="86.6423%" y="261" width="0.1830%" height="15" fill="rgb(222,174,48)" fg:x="947" fg:w="2"/><text x="86.8923%" y="271.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.27%)</title><rect x="86.6423%" y="357" width="0.2745%" height="15" fill="rgb(206,152,40)" fg:x="947" fg:w="3"/><text x="86.8923%" y="367.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::hash_one (3 samples, 0.27%)</title><rect x="86.6423%" y="341" width="0.2745%" height="15" fill="rgb(218,99,54)" fg:x="947" fg:w="3"/><text x="86.8923%" y="351.50"></text></g><g><title>ahash::random_state::RandomState::hash_one (3 samples, 0.27%)</title><rect x="86.6423%" y="325" width="0.2745%" height="15" fill="rgb(220,174,26)" fg:x="947" fg:w="3"/><text x="86.8923%" y="335.50"></text></g><g><title>&lt;T as ahash::specialize::CallHasher&gt;::get_hash (3 samples, 0.27%)</title><rect x="86.6423%" y="309" width="0.2745%" height="15" fill="rgb(245,116,9)" fg:x="947" fg:w="3"/><text x="86.8923%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.09%)</title><rect x="86.8253%" y="293" width="0.0915%" height="15" fill="rgb(209,72,35)" fg:x="949" fg:w="1"/><text x="87.0753%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (1 samples, 0.09%)</title><rect x="86.8253%" y="277" width="0.0915%" height="15" fill="rgb(226,126,21)" fg:x="949" fg:w="1"/><text x="87.0753%" y="287.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::write_u16 (1 samples, 0.09%)</title><rect x="86.8253%" y="261" width="0.0915%" height="15" fill="rgb(227,192,1)" fg:x="949" fg:w="1"/><text x="87.0753%" y="271.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.09%)</title><rect x="86.8253%" y="245" width="0.0915%" height="15" fill="rgb(237,180,29)" fg:x="949" fg:w="1"/><text x="87.0753%" y="255.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::write_u128 (1 samples, 0.09%)</title><rect x="86.8253%" y="229" width="0.0915%" height="15" fill="rgb(230,197,35)" fg:x="949" fg:w="1"/><text x="87.0753%" y="239.50"></text></g><g><title>ahash::aes_hash::AHasher::hash_in (1 samples, 0.09%)</title><rect x="86.8253%" y="213" width="0.0915%" height="15" fill="rgb(246,193,31)" fg:x="949" fg:w="1"/><text x="87.0753%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.09%)</title><rect x="87.0082%" y="309" width="0.0915%" height="15" fill="rgb(241,36,4)" fg:x="951" fg:w="1"/><text x="87.2582%" y="319.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.09%)</title><rect x="87.0082%" y="293" width="0.0915%" height="15" fill="rgb(241,130,17)" fg:x="951" fg:w="1"/><text x="87.2582%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u16&gt;::eq (1 samples, 0.09%)</title><rect x="87.0082%" y="277" width="0.0915%" height="15" fill="rgb(206,137,32)" fg:x="951" fg:w="1"/><text x="87.2582%" y="287.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities_cache_only::parse_ent_props_indicies (178 samples, 16.29%)</title><rect x="70.9058%" y="421" width="16.2855%" height="15" fill="rgb(237,228,51)" fg:x="775" fg:w="178"/><text x="71.1558%" y="431.50">demoparser::parsing::demo..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.55%)</title><rect x="86.6423%" y="405" width="0.5489%" height="15" fill="rgb(243,6,42)" fg:x="947" fg:w="6"/><text x="86.8923%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.55%)</title><rect x="86.6423%" y="389" width="0.5489%" height="15" fill="rgb(251,74,28)" fg:x="947" fg:w="6"/><text x="86.8923%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.55%)</title><rect x="86.6423%" y="373" width="0.5489%" height="15" fill="rgb(218,20,49)" fg:x="947" fg:w="6"/><text x="86.8923%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.27%)</title><rect x="86.9167%" y="357" width="0.2745%" height="15" fill="rgb(238,28,14)" fg:x="950" fg:w="3"/><text x="87.1667%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.27%)</title><rect x="86.9167%" y="341" width="0.2745%" height="15" fill="rgb(229,40,46)" fg:x="950" fg:w="3"/><text x="87.1667%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.27%)</title><rect x="86.9167%" y="325" width="0.2745%" height="15" fill="rgb(244,195,20)" fg:x="950" fg:w="3"/><text x="87.1667%" y="335.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.09%)</title><rect x="87.0997%" y="309" width="0.0915%" height="15" fill="rgb(253,56,35)" fg:x="952" fg:w="1"/><text x="87.3497%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.09%)</title><rect x="87.0997%" y="293" width="0.0915%" height="15" fill="rgb(210,149,44)" fg:x="952" fg:w="1"/><text x="87.3497%" y="303.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities_cache_only::&lt;impl demoparser::parsing::parser::Parser&gt;::_parse_packet_entities_indicies (223 samples, 20.40%)</title><rect x="67.0631%" y="437" width="20.4026%" height="15" fill="rgb(240,135,12)" fg:x="733" fg:w="223"/><text x="67.3131%" y="447.50">demoparser::parsing::demo_parsin..</text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_u_bit_var (3 samples, 0.27%)</title><rect x="87.1912%" y="421" width="0.2745%" height="15" fill="rgb(251,24,50)" fg:x="953" fg:w="3"/><text x="87.4412%" y="431.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (2 samples, 0.18%)</title><rect x="87.2827%" y="405" width="0.1830%" height="15" fill="rgb(243,200,47)" fg:x="954" fg:w="2"/><text x="87.5327%" y="415.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::check_eof (1 samples, 0.09%)</title><rect x="87.4657%" y="421" width="0.0915%" height="15" fill="rgb(224,166,26)" fg:x="956" fg:w="1"/><text x="87.7157%" y="431.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::eof (1 samples, 0.09%)</title><rect x="87.4657%" y="405" width="0.0915%" height="15" fill="rgb(233,0,47)" fg:x="956" fg:w="1"/><text x="87.7157%" y="415.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::eof (1 samples, 0.09%)</title><rect x="87.4657%" y="389" width="0.0915%" height="15" fill="rgb(253,80,5)" fg:x="956" fg:w="1"/><text x="87.7157%" y="399.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::remaining_in_buf_len (1 samples, 0.09%)</title><rect x="87.4657%" y="373" width="0.0915%" height="15" fill="rgb(214,133,25)" fg:x="956" fg:w="1"/><text x="87.7157%" y="383.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::remaining_in_buf (1 samples, 0.09%)</title><rect x="87.4657%" y="357" width="0.0915%" height="15" fill="rgb(209,27,14)" fg:x="956" fg:w="1"/><text x="87.7157%" y="367.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::remaining_in_buf (1 samples, 0.09%)</title><rect x="87.4657%" y="341" width="0.0915%" height="15" fill="rgb(219,102,51)" fg:x="956" fg:w="1"/><text x="87.7157%" y="351.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.09%)</title><rect x="87.6487%" y="389" width="0.0915%" height="15" fill="rgb(237,18,16)" fg:x="958" fg:w="1"/><text x="87.8987%" y="399.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes (11 samples, 1.01%)</title><rect x="87.7402%" y="389" width="1.0064%" height="15" fill="rgb(241,85,17)" fg:x="959" fg:w="11"/><text x="87.9902%" y="399.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (11 samples, 1.01%)</title><rect x="87.7402%" y="373" width="1.0064%" height="15" fill="rgb(236,90,42)" fg:x="959" fg:w="11"/><text x="87.9902%" y="383.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (11 samples, 1.01%)</title><rect x="87.7402%" y="357" width="1.0064%" height="15" fill="rgb(249,57,21)" fg:x="959" fg:w="11"/><text x="87.9902%" y="367.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (11 samples, 1.01%)</title><rect x="87.7402%" y="341" width="1.0064%" height="15" fill="rgb(243,12,36)" fg:x="959" fg:w="11"/><text x="87.9902%" y="351.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact (11 samples, 1.01%)</title><rect x="87.7402%" y="325" width="1.0064%" height="15" fill="rgb(253,128,47)" fg:x="959" fg:w="11"/><text x="87.9902%" y="335.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::read_bytes (11 samples, 1.01%)</title><rect x="87.7402%" y="309" width="1.0064%" height="15" fill="rgb(207,33,20)" fg:x="959" fg:w="11"/><text x="87.9902%" y="319.50"></text></g><g><title>protobuf::misc::maybe_uninit_write_slice (11 samples, 1.01%)</title><rect x="87.7402%" y="293" width="1.0064%" height="15" fill="rgb(233,215,35)" fg:x="959" fg:w="11"/><text x="87.9902%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (11 samples, 1.01%)</title><rect x="87.7402%" y="277" width="1.0064%" height="15" fill="rgb(249,188,52)" fg:x="959" fg:w="11"/><text x="87.9902%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 1.01%)</title><rect x="87.7402%" y="261" width="1.0064%" height="15" fill="rgb(225,12,32)" fg:x="959" fg:w="11"/><text x="87.9902%" y="271.50"></text></g><g><title>[libc.so.6] (11 samples, 1.01%)</title><rect x="87.7402%" y="245" width="1.0064%" height="15" fill="rgb(247,98,14)" fg:x="959" fg:w="11"/><text x="87.9902%" y="255.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::remaining_in_buf (1 samples, 0.09%)</title><rect x="88.7466%" y="341" width="0.0915%" height="15" fill="rgb(247,219,48)" fg:x="970" fg:w="1"/><text x="88.9966%" y="351.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::remaining_in_buf (1 samples, 0.09%)</title><rect x="88.7466%" y="325" width="0.0915%" height="15" fill="rgb(253,60,48)" fg:x="970" fg:w="1"/><text x="88.9966%" y="335.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int32 (2 samples, 0.18%)</title><rect x="88.7466%" y="389" width="0.1830%" height="15" fill="rgb(245,15,52)" fg:x="970" fg:w="2"/><text x="88.9966%" y="399.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int64 (2 samples, 0.18%)</title><rect x="88.7466%" y="373" width="0.1830%" height="15" fill="rgb(220,133,28)" fg:x="970" fg:w="2"/><text x="88.9966%" y="383.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (2 samples, 0.18%)</title><rect x="88.7466%" y="357" width="0.1830%" height="15" fill="rgb(217,180,4)" fg:x="970" fg:w="2"/><text x="88.9966%" y="367.50"></text></g><g><title>protobuf::varint::decode::decode_varint64 (1 samples, 0.09%)</title><rect x="88.8381%" y="341" width="0.0915%" height="15" fill="rgb(251,24,1)" fg:x="971" fg:w="1"/><text x="89.0881%" y="351.50"></text></g><g><title>protobuf::varint::decode::decode_varint_impl (1 samples, 0.09%)</title><rect x="88.8381%" y="325" width="0.0915%" height="15" fill="rgb(212,185,49)" fg:x="971" fg:w="1"/><text x="89.0881%" y="335.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_packet_entities (242 samples, 22.14%)</title><rect x="66.8801%" y="469" width="22.1409%" height="15" fill="rgb(215,175,22)" fg:x="731" fg:w="242"/><text x="67.1301%" y="479.50">demoparser::parsing::demo_parsing::..</text></g><g><title>demoparser::parsing::demo_parsing::entities_cache_only::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_packet_entities_indicies (242 samples, 22.14%)</title><rect x="66.8801%" y="453" width="22.1409%" height="15" fill="rgb(250,205,14)" fg:x="731" fg:w="242"/><text x="67.1301%" y="463.50">demoparser::parsing::demo_parsing::..</text></g><g><title>protobuf::message::Message::parse_from_bytes (17 samples, 1.56%)</title><rect x="87.4657%" y="437" width="1.5554%" height="15" fill="rgb(225,211,22)" fg:x="956" fg:w="17"/><text x="87.7157%" y="447.50"></text></g><g><title>protobuf::message::Message::parse_from (16 samples, 1.46%)</title><rect x="87.5572%" y="421" width="1.4639%" height="15" fill="rgb(251,179,42)" fg:x="957" fg:w="16"/><text x="87.8072%" y="431.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_PacketEntities as protobuf::message::Message&gt;::merge_from (16 samples, 1.46%)</title><rect x="87.5572%" y="405" width="1.4639%" height="15" fill="rgb(208,216,51)" fg:x="957" fg:w="16"/><text x="87.8072%" y="415.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (1 samples, 0.09%)</title><rect x="88.9296%" y="389" width="0.0915%" height="15" fill="rgb(235,36,11)" fg:x="972" fg:w="1"/><text x="89.1796%" y="399.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (1 samples, 0.09%)</title><rect x="88.9296%" y="373" width="0.0915%" height="15" fill="rgb(213,189,28)" fg:x="972" fg:w="1"/><text x="89.1796%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;csgoproto::netmessages::CSVCMsg_GameEvent&gt; (1 samples, 0.09%)</title><rect x="89.0210%" y="453" width="0.0915%" height="15" fill="rgb(227,203,42)" fg:x="973" fg:w="1"/><text x="89.2710%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;csgoproto::netmessages::csvcmsg_game_event::Key_t&gt;&gt; (1 samples, 0.09%)</title><rect x="89.0210%" y="437" width="0.0915%" height="15" fill="rgb(244,72,36)" fg:x="973" fg:w="1"/><text x="89.2710%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="89.0210%" y="421" width="0.0915%" height="15" fill="rgb(213,53,17)" fg:x="973" fg:w="1"/><text x="89.2710%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[csgoproto::netmessages::csvcmsg_game_event::Key_t]&gt; (1 samples, 0.09%)</title><rect x="89.0210%" y="405" width="0.0915%" height="15" fill="rgb(207,167,3)" fg:x="973" fg:w="1"/><text x="89.2710%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;csgoproto::netmessages::csvcmsg_game_event::Key_t&gt; (1 samples, 0.09%)</title><rect x="89.0210%" y="389" width="0.0915%" height="15" fill="rgb(216,98,30)" fg:x="973" fg:w="1"/><text x="89.2710%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1 samples, 0.09%)</title><rect x="89.0210%" y="373" width="0.0915%" height="15" fill="rgb(236,123,15)" fg:x="973" fg:w="1"/><text x="89.2710%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.09%)</title><rect x="89.0210%" y="357" width="0.0915%" height="15" fill="rgb(248,81,50)" fg:x="973" fg:w="1"/><text x="89.2710%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.09%)</title><rect x="89.0210%" y="341" width="0.0915%" height="15" fill="rgb(214,120,4)" fg:x="973" fg:w="1"/><text x="89.2710%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.09%)</title><rect x="89.0210%" y="325" width="0.0915%" height="15" fill="rgb(208,179,34)" fg:x="973" fg:w="1"/><text x="89.2710%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="89.0210%" y="309" width="0.0915%" height="15" fill="rgb(227,140,7)" fg:x="973" fg:w="1"/><text x="89.2710%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.09%)</title><rect x="89.0210%" y="293" width="0.0915%" height="15" fill="rgb(214,22,6)" fg:x="973" fg:w="1"/><text x="89.2710%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.09%)</title><rect x="89.0210%" y="277" width="0.0915%" height="15" fill="rgb(207,137,27)" fg:x="973" fg:w="1"/><text x="89.2710%" y="287.50"></text></g><g><title>__GI___libc_free (1 samples, 0.09%)</title><rect x="89.0210%" y="261" width="0.0915%" height="15" fill="rgb(210,8,46)" fg:x="973" fg:w="1"/><text x="89.2710%" y="271.50"></text></g><g><title>demoparser::parsing::demo_parsing::game_events::gen_name_val_pairs (1 samples, 0.09%)</title><rect x="89.1125%" y="453" width="0.0915%" height="15" fill="rgb(240,16,54)" fg:x="974" fg:w="1"/><text x="89.3625%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.09%)</title><rect x="89.1125%" y="437" width="0.0915%" height="15" fill="rgb(211,209,29)" fg:x="974" fg:w="1"/><text x="89.3625%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.09%)</title><rect x="89.1125%" y="421" width="0.0915%" height="15" fill="rgb(226,228,24)" fg:x="974" fg:w="1"/><text x="89.3625%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.09%)</title><rect x="89.1125%" y="405" width="0.0915%" height="15" fill="rgb(222,84,9)" fg:x="974" fg:w="1"/><text x="89.3625%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.09%)</title><rect x="89.1125%" y="389" width="0.0915%" height="15" fill="rgb(234,203,30)" fg:x="974" fg:w="1"/><text x="89.3625%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.09%)</title><rect x="89.1125%" y="373" width="0.0915%" height="15" fill="rgb(238,109,14)" fg:x="974" fg:w="1"/><text x="89.3625%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.09%)</title><rect x="89.1125%" y="357" width="0.0915%" height="15" fill="rgb(233,206,34)" fg:x="974" fg:w="1"/><text x="89.3625%" y="367.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.09%)</title><rect x="89.1125%" y="341" width="0.0915%" height="15" fill="rgb(220,167,47)" fg:x="974" fg:w="1"/><text x="89.3625%" y="351.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.09%)</title><rect x="89.1125%" y="325" width="0.0915%" height="15" fill="rgb(238,105,10)" fg:x="974" fg:w="1"/><text x="89.3625%" y="335.50"></text></g><g><title>_int_realloc (1 samples, 0.09%)</title><rect x="89.1125%" y="309" width="0.0915%" height="15" fill="rgb(213,227,17)" fg:x="974" fg:w="1"/><text x="89.3625%" y="319.50"></text></g><g><title>_int_malloc (1 samples, 0.09%)</title><rect x="89.1125%" y="293" width="0.0915%" height="15" fill="rgb(217,132,38)" fg:x="974" fg:w="1"/><text x="89.3625%" y="303.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.09%)</title><rect x="89.2040%" y="437" width="0.0915%" height="15" fill="rgb(242,146,4)" fg:x="975" fg:w="1"/><text x="89.4540%" y="447.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.09%)</title><rect x="89.2955%" y="405" width="0.0915%" height="15" fill="rgb(212,61,9)" fg:x="976" fg:w="1"/><text x="89.5455%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.09%)</title><rect x="89.3870%" y="357" width="0.0915%" height="15" fill="rgb(247,126,22)" fg:x="977" fg:w="1"/><text x="89.6370%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.18%)</title><rect x="89.3870%" y="389" width="0.1830%" height="15" fill="rgb(220,196,2)" fg:x="977" fg:w="2"/><text x="89.6370%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.18%)</title><rect x="89.3870%" y="373" width="0.1830%" height="15" fill="rgb(208,46,4)" fg:x="977" fg:w="2"/><text x="89.6370%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.09%)</title><rect x="89.4785%" y="357" width="0.0915%" height="15" fill="rgb(252,104,46)" fg:x="978" fg:w="1"/><text x="89.7285%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.09%)</title><rect x="89.4785%" y="341" width="0.0915%" height="15" fill="rgb(237,152,48)" fg:x="978" fg:w="1"/><text x="89.7285%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.09%)</title><rect x="89.4785%" y="325" width="0.0915%" height="15" fill="rgb(221,59,37)" fg:x="978" fg:w="1"/><text x="89.7285%" y="335.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.09%)</title><rect x="89.4785%" y="309" width="0.0915%" height="15" fill="rgb(209,202,51)" fg:x="978" fg:w="1"/><text x="89.7285%" y="319.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.09%)</title><rect x="89.4785%" y="293" width="0.0915%" height="15" fill="rgb(228,81,30)" fg:x="978" fg:w="1"/><text x="89.7285%" y="303.50"></text></g><g><title>_int_realloc (1 samples, 0.09%)</title><rect x="89.4785%" y="277" width="0.0915%" height="15" fill="rgb(227,42,39)" fg:x="978" fg:w="1"/><text x="89.7285%" y="287.50"></text></g><g><title>_int_malloc (1 samples, 0.09%)</title><rect x="89.4785%" y="261" width="0.0915%" height="15" fill="rgb(221,26,2)" fg:x="978" fg:w="1"/><text x="89.7285%" y="271.50"></text></g><g><title>unlink_chunk (1 samples, 0.09%)</title><rect x="89.4785%" y="245" width="0.0915%" height="15" fill="rgb(254,61,31)" fg:x="978" fg:w="1"/><text x="89.7285%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.37%)</title><rect x="89.3870%" y="405" width="0.3660%" height="15" fill="rgb(222,173,38)" fg:x="977" fg:w="4"/><text x="89.6370%" y="415.50"></text></g><g><title>core::ptr::write (2 samples, 0.18%)</title><rect x="89.5700%" y="389" width="0.1830%" height="15" fill="rgb(218,50,12)" fg:x="979" fg:w="2"/><text x="89.8200%" y="399.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int32 (1 samples, 0.09%)</title><rect x="90.1189%" y="357" width="0.0915%" height="15" fill="rgb(223,88,40)" fg:x="985" fg:w="1"/><text x="90.3689%" y="367.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_int64 (1 samples, 0.09%)</title><rect x="90.1189%" y="341" width="0.0915%" height="15" fill="rgb(237,54,19)" fg:x="985" fg:w="1"/><text x="90.3689%" y="351.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (1 samples, 0.09%)</title><rect x="90.1189%" y="325" width="0.0915%" height="15" fill="rgb(251,129,25)" fg:x="985" fg:w="1"/><text x="90.3689%" y="335.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::remaining_in_buf (1 samples, 0.09%)</title><rect x="90.1189%" y="309" width="0.0915%" height="15" fill="rgb(238,97,19)" fg:x="985" fg:w="1"/><text x="90.3689%" y="319.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::remaining_in_buf (1 samples, 0.09%)</title><rect x="90.1189%" y="293" width="0.0915%" height="15" fill="rgb(240,169,18)" fg:x="985" fg:w="1"/><text x="90.3689%" y="303.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (1 samples, 0.09%)</title><rect x="90.2104%" y="357" width="0.0915%" height="15" fill="rgb(230,187,49)" fg:x="986" fg:w="1"/><text x="90.4604%" y="367.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (1 samples, 0.09%)</title><rect x="90.2104%" y="341" width="0.0915%" height="15" fill="rgb(209,44,26)" fg:x="986" fg:w="1"/><text x="90.4604%" y="351.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::remaining_in_buf (1 samples, 0.09%)</title><rect x="90.2104%" y="325" width="0.0915%" height="15" fill="rgb(244,0,6)" fg:x="986" fg:w="1"/><text x="90.4604%" y="335.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::remaining_in_buf (1 samples, 0.09%)</title><rect x="90.2104%" y="309" width="0.0915%" height="15" fill="rgb(248,18,21)" fg:x="986" fg:w="1"/><text x="90.4604%" y="319.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_game_event::Key_t as protobuf::message::Message&gt;::merge_from (5 samples, 0.46%)</title><rect x="89.9360%" y="373" width="0.4575%" height="15" fill="rgb(245,180,19)" fg:x="983" fg:w="5"/><text x="90.1860%" y="383.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string (1 samples, 0.09%)</title><rect x="90.3019%" y="357" width="0.0915%" height="15" fill="rgb(252,118,36)" fg:x="987" fg:w="1"/><text x="90.5519%" y="367.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string_into (1 samples, 0.09%)</title><rect x="90.3019%" y="341" width="0.0915%" height="15" fill="rgb(210,224,19)" fg:x="987" fg:w="1"/><text x="90.5519%" y="351.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (1 samples, 0.09%)</title><rect x="90.3019%" y="325" width="0.0915%" height="15" fill="rgb(218,30,24)" fg:x="987" fg:w="1"/><text x="90.5519%" y="335.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (1 samples, 0.09%)</title><rect x="90.3019%" y="309" width="0.0915%" height="15" fill="rgb(219,75,50)" fg:x="987" fg:w="1"/><text x="90.5519%" y="319.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (1 samples, 0.09%)</title><rect x="90.3019%" y="293" width="0.0915%" height="15" fill="rgb(234,72,50)" fg:x="987" fg:w="1"/><text x="90.5519%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (1 samples, 0.09%)</title><rect x="90.3019%" y="277" width="0.0915%" height="15" fill="rgb(219,100,48)" fg:x="987" fg:w="1"/><text x="90.5519%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (1 samples, 0.09%)</title><rect x="90.3019%" y="261" width="0.0915%" height="15" fill="rgb(253,5,41)" fg:x="987" fg:w="1"/><text x="90.5519%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (1 samples, 0.09%)</title><rect x="90.3019%" y="245" width="0.0915%" height="15" fill="rgb(247,181,11)" fg:x="987" fg:w="1"/><text x="90.5519%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (1 samples, 0.09%)</title><rect x="90.3019%" y="229" width="0.0915%" height="15" fill="rgb(222,223,25)" fg:x="987" fg:w="1"/><text x="90.5519%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.09%)</title><rect x="90.3019%" y="213" width="0.0915%" height="15" fill="rgb(214,198,28)" fg:x="987" fg:w="1"/><text x="90.5519%" y="223.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.09%)</title><rect x="90.3019%" y="197" width="0.0915%" height="15" fill="rgb(230,46,43)" fg:x="987" fg:w="1"/><text x="90.5519%" y="207.50"></text></g><g><title>tcache_get (1 samples, 0.09%)</title><rect x="90.3019%" y="181" width="0.0915%" height="15" fill="rgb(233,65,53)" fg:x="987" fg:w="1"/><text x="90.5519%" y="191.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_message (8 samples, 0.73%)</title><rect x="89.7530%" y="405" width="0.7319%" height="15" fill="rgb(221,121,27)" fg:x="981" fg:w="8"/><text x="90.0030%" y="415.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::merge_message (6 samples, 0.55%)</title><rect x="89.9360%" y="389" width="0.5489%" height="15" fill="rgb(247,70,47)" fg:x="983" fg:w="6"/><text x="90.1860%" y="399.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::pop_limit (1 samples, 0.09%)</title><rect x="90.3934%" y="373" width="0.0915%" height="15" fill="rgb(228,85,35)" fg:x="988" fg:w="1"/><text x="90.6434%" y="383.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::pop_limit (1 samples, 0.09%)</title><rect x="90.3934%" y="357" width="0.0915%" height="15" fill="rgb(209,50,18)" fg:x="988" fg:w="1"/><text x="90.6434%" y="367.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::update_limit_within_buf (1 samples, 0.09%)</title><rect x="90.3934%" y="341" width="0.0915%" height="15" fill="rgb(250,19,35)" fg:x="988" fg:w="1"/><text x="90.6434%" y="351.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::update_limit (1 samples, 0.09%)</title><rect x="90.3934%" y="325" width="0.0915%" height="15" fill="rgb(253,107,29)" fg:x="988" fg:w="1"/><text x="90.6434%" y="335.50"></text></g><g><title>core::cmp::min (1 samples, 0.09%)</title><rect x="90.3934%" y="309" width="0.0915%" height="15" fill="rgb(252,179,29)" fg:x="988" fg:w="1"/><text x="90.6434%" y="319.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.09%)</title><rect x="90.3934%" y="293" width="0.0915%" height="15" fill="rgb(238,194,6)" fg:x="988" fg:w="1"/><text x="90.6434%" y="303.50"></text></g><g><title>demoparser::parsing::demo_parsing::game_events::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_game_events (17 samples, 1.56%)</title><rect x="89.0210%" y="469" width="1.5554%" height="15" fill="rgb(238,164,29)" fg:x="973" fg:w="17"/><text x="89.2710%" y="479.50"></text></g><g><title>protobuf::message::Message::parse_from_bytes (15 samples, 1.37%)</title><rect x="89.2040%" y="453" width="1.3724%" height="15" fill="rgb(224,25,9)" fg:x="975" fg:w="15"/><text x="89.4540%" y="463.50"></text></g><g><title>protobuf::message::Message::parse_from (14 samples, 1.28%)</title><rect x="89.2955%" y="437" width="1.2809%" height="15" fill="rgb(244,153,23)" fg:x="976" fg:w="14"/><text x="89.5455%" y="447.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_GameEvent as protobuf::message::Message&gt;::merge_from (14 samples, 1.28%)</title><rect x="89.2955%" y="421" width="1.2809%" height="15" fill="rgb(212,203,14)" fg:x="976" fg:w="14"/><text x="89.5455%" y="431.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (1 samples, 0.09%)</title><rect x="90.4849%" y="405" width="0.0915%" height="15" fill="rgb(220,164,20)" fg:x="989" fg:w="1"/><text x="90.7349%" y="415.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (1 samples, 0.09%)</title><rect x="90.4849%" y="389" width="0.0915%" height="15" fill="rgb(222,203,48)" fg:x="989" fg:w="1"/><text x="90.7349%" y="399.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.09%)</title><rect x="90.5764%" y="453" width="0.0915%" height="15" fill="rgb(215,159,22)" fg:x="990" fg:w="1"/><text x="90.8264%" y="463.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::check_eof (2 samples, 0.18%)</title><rect x="90.6679%" y="437" width="0.1830%" height="15" fill="rgb(216,183,47)" fg:x="991" fg:w="2"/><text x="90.9179%" y="447.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::eof (2 samples, 0.18%)</title><rect x="90.6679%" y="421" width="0.1830%" height="15" fill="rgb(229,195,25)" fg:x="991" fg:w="2"/><text x="90.9179%" y="431.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::eof (2 samples, 0.18%)</title><rect x="90.6679%" y="405" width="0.1830%" height="15" fill="rgb(224,132,51)" fg:x="991" fg:w="2"/><text x="90.9179%" y="415.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::fill_buf (2 samples, 0.18%)</title><rect x="90.6679%" y="389" width="0.1830%" height="15" fill="rgb(240,63,7)" fg:x="991" fg:w="2"/><text x="90.9179%" y="399.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::fill_buf_slow (1 samples, 0.09%)</title><rect x="90.7594%" y="373" width="0.0915%" height="15" fill="rgb(249,182,41)" fg:x="992" fg:w="1"/><text x="91.0094%" y="383.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::from_bytes (4 samples, 0.37%)</title><rect x="90.8509%" y="437" width="0.3660%" height="15" fill="rgb(243,47,26)" fg:x="993" fg:w="4"/><text x="91.1009%" y="447.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::from_buf_read_iter (4 samples, 0.37%)</title><rect x="90.8509%" y="421" width="0.3660%" height="15" fill="rgb(233,48,2)" fg:x="993" fg:w="4"/><text x="91.1009%" y="431.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.09%)</title><rect x="91.2168%" y="405" width="0.0915%" height="15" fill="rgb(244,165,34)" fg:x="997" fg:w="1"/><text x="91.4668%" y="415.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.09%)</title><rect x="91.4913%" y="261" width="0.0915%" height="15" fill="rgb(207,89,7)" fg:x="1000" fg:w="1"/><text x="91.7413%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (2 samples, 0.18%)</title><rect x="91.4913%" y="341" width="0.1830%" height="15" fill="rgb(244,117,36)" fg:x="1000" fg:w="2"/><text x="91.7413%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (2 samples, 0.18%)</title><rect x="91.4913%" y="325" width="0.1830%" height="15" fill="rgb(226,144,34)" fg:x="1000" fg:w="2"/><text x="91.7413%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (2 samples, 0.18%)</title><rect x="91.4913%" y="309" width="0.1830%" height="15" fill="rgb(213,23,19)" fg:x="1000" fg:w="2"/><text x="91.7413%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (2 samples, 0.18%)</title><rect x="91.4913%" y="293" width="0.1830%" height="15" fill="rgb(217,75,12)" fg:x="1000" fg:w="2"/><text x="91.7413%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.18%)</title><rect x="91.4913%" y="277" width="0.1830%" height="15" fill="rgb(224,159,17)" fg:x="1000" fg:w="2"/><text x="91.7413%" y="287.50"></text></g><g><title>__rdl_alloc (1 samples, 0.09%)</title><rect x="91.5828%" y="261" width="0.0915%" height="15" fill="rgb(217,118,1)" fg:x="1001" fg:w="1"/><text x="91.8328%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.09%)</title><rect x="91.5828%" y="245" width="0.0915%" height="15" fill="rgb(232,180,48)" fg:x="1001" fg:w="1"/><text x="91.8328%" y="255.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (3 samples, 0.27%)</title><rect x="91.4913%" y="373" width="0.2745%" height="15" fill="rgb(230,27,33)" fg:x="1000" fg:w="3"/><text x="91.7413%" y="383.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (3 samples, 0.27%)</title><rect x="91.4913%" y="357" width="0.2745%" height="15" fill="rgb(205,31,21)" fg:x="1000" fg:w="3"/><text x="91.7413%" y="367.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact (1 samples, 0.09%)</title><rect x="91.6743%" y="341" width="0.0915%" height="15" fill="rgb(253,59,4)" fg:x="1002" fg:w="1"/><text x="91.9243%" y="351.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::remaining_in_buf_len (1 samples, 0.09%)</title><rect x="91.6743%" y="325" width="0.0915%" height="15" fill="rgb(224,201,9)" fg:x="1002" fg:w="1"/><text x="91.9243%" y="335.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::remaining_in_buf (1 samples, 0.09%)</title><rect x="91.6743%" y="309" width="0.0915%" height="15" fill="rgb(229,206,30)" fg:x="1002" fg:w="1"/><text x="91.9243%" y="319.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::remaining_in_buf (1 samples, 0.09%)</title><rect x="91.6743%" y="293" width="0.0915%" height="15" fill="rgb(212,67,47)" fg:x="1002" fg:w="1"/><text x="91.9243%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.09%)</title><rect x="91.6743%" y="277" width="0.0915%" height="15" fill="rgb(211,96,50)" fg:x="1002" fg:w="1"/><text x="91.9243%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.09%)</title><rect x="91.6743%" y="261" width="0.0915%" height="15" fill="rgb(252,114,18)" fg:x="1002" fg:w="1"/><text x="91.9243%" y="271.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes (6 samples, 0.55%)</title><rect x="91.3083%" y="405" width="0.5489%" height="15" fill="rgb(223,58,37)" fg:x="998" fg:w="6"/><text x="91.5583%" y="415.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (4 samples, 0.37%)</title><rect x="91.4913%" y="389" width="0.3660%" height="15" fill="rgb(237,70,4)" fg:x="1000" fg:w="4"/><text x="91.7413%" y="399.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32 (1 samples, 0.09%)</title><rect x="91.7658%" y="373" width="0.0915%" height="15" fill="rgb(244,85,46)" fg:x="1003" fg:w="1"/><text x="92.0158%" y="383.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::consume (1 samples, 0.09%)</title><rect x="91.7658%" y="357" width="0.0915%" height="15" fill="rgb(223,39,52)" fg:x="1003" fg:w="1"/><text x="92.0158%" y="367.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::consume (1 samples, 0.09%)</title><rect x="91.7658%" y="341" width="0.0915%" height="15" fill="rgb(218,200,14)" fg:x="1003" fg:w="1"/><text x="92.0158%" y="351.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_EntityMsg as protobuf::message::Message&gt;::merge_from (8 samples, 0.73%)</title><rect x="91.2168%" y="421" width="0.7319%" height="15" fill="rgb(208,171,16)" fg:x="997" fg:w="8"/><text x="91.4668%" y="431.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (1 samples, 0.09%)</title><rect x="91.8573%" y="405" width="0.0915%" height="15" fill="rgb(234,200,18)" fg:x="1004" fg:w="1"/><text x="92.1073%" y="415.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (1 samples, 0.09%)</title><rect x="91.8573%" y="389" width="0.0915%" height="15" fill="rgb(228,45,11)" fg:x="1004" fg:w="1"/><text x="92.1073%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (282 samples, 25.80%)</title><rect x="66.2397%" y="581" width="25.8005%" height="15" fill="rgb(237,182,11)" fg:x="724" fg:w="282"/><text x="66.4897%" y="591.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (282 samples, 25.80%)</title><rect x="66.2397%" y="565" width="25.8005%" height="15" fill="rgb(241,175,49)" fg:x="724" fg:w="282"/><text x="66.4897%" y="575.50">core::iter::traits::iterator::Iterator::f..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (282 samples, 25.80%)</title><rect x="66.2397%" y="549" width="25.8005%" height="15" fill="rgb(247,38,35)" fg:x="724" fg:w="282"/><text x="66.4897%" y="559.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (282 samples, 25.80%)</title><rect x="66.2397%" y="533" width="25.8005%" height="15" fill="rgb(228,39,49)" fg:x="724" fg:w="282"/><text x="66.4897%" y="543.50">core::iter::traits::iterator::Iterator::f..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (282 samples, 25.80%)</title><rect x="66.2397%" y="517" width="25.8005%" height="15" fill="rgb(226,101,26)" fg:x="724" fg:w="282"/><text x="66.4897%" y="527.50">core::iter::adapters::map::map_fold::{{cl..</text></g><g><title>demoparser::parsing::parser::Parser::parse_blueprints::{{closure}} (276 samples, 25.25%)</title><rect x="66.7887%" y="501" width="25.2516%" height="15" fill="rgb(206,141,19)" fg:x="730" fg:w="276"/><text x="67.0387%" y="511.50">demoparser::parsing::parser::Parser::par..</text></g><g><title>demoparser::parsing::parser::Parser::msg_handler (276 samples, 25.25%)</title><rect x="66.7887%" y="485" width="25.2516%" height="15" fill="rgb(211,200,13)" fg:x="730" fg:w="276"/><text x="67.0387%" y="495.50">demoparser::parsing::parser::Parser::msg..</text></g><g><title>demoparser::parsing::demo_parsing::stringtables::&lt;impl demoparser::parsing::parser::Parser&gt;::update_string_table_msg (16 samples, 1.46%)</title><rect x="90.5764%" y="469" width="1.4639%" height="15" fill="rgb(241,121,6)" fg:x="990" fg:w="16"/><text x="90.8264%" y="479.50"></text></g><g><title>protobuf::message::Message::parse_from_bytes (15 samples, 1.37%)</title><rect x="90.6679%" y="453" width="1.3724%" height="15" fill="rgb(234,221,29)" fg:x="991" fg:w="15"/><text x="90.9179%" y="463.50"></text></g><g><title>protobuf::message::Message::parse_from (9 samples, 0.82%)</title><rect x="91.2168%" y="437" width="0.8234%" height="15" fill="rgb(229,136,5)" fg:x="997" fg:w="9"/><text x="91.4668%" y="447.50"></text></g><g><title>protobuf::message::Message::check_initialized (1 samples, 0.09%)</title><rect x="91.9488%" y="421" width="0.0915%" height="15" fill="rgb(238,36,11)" fg:x="1005" fg:w="1"/><text x="92.1988%" y="431.50"></text></g><g><title>&lt;M as protobuf::message_dyn::MessageDyn&gt;::is_initialized_dyn (1 samples, 0.09%)</title><rect x="91.9488%" y="405" width="0.0915%" height="15" fill="rgb(251,55,41)" fg:x="1005" fg:w="1"/><text x="92.1988%" y="415.50"></text></g><g><title>demoparser::parsing::create_output::create_output::&lt;impl demoparser::parsing::parser::Parser&gt;::compute_jobs_no_cache (283 samples, 25.89%)</title><rect x="66.2397%" y="677" width="25.8920%" height="15" fill="rgb(242,34,40)" fg:x="724" fg:w="283"/><text x="66.4897%" y="687.50">demoparser::parsing::create_output::creat..</text></g><g><title>demoparser::parsing::parser::Parser::parse_blueprints (283 samples, 25.89%)</title><rect x="66.2397%" y="661" width="25.8920%" height="15" fill="rgb(215,42,17)" fg:x="724" fg:w="283"/><text x="66.4897%" y="671.50">demoparser::parsing::parser::Parser::pars..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (283 samples, 25.89%)</title><rect x="66.2397%" y="645" width="25.8920%" height="15" fill="rgb(207,44,46)" fg:x="724" fg:w="283"/><text x="66.4897%" y="655.50">core::iter::traits::iterator::Iterator::c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (283 samples, 25.89%)</title><rect x="66.2397%" y="629" width="25.8920%" height="15" fill="rgb(211,206,28)" fg:x="724" fg:w="283"/><text x="66.4897%" y="639.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (283 samples, 25.89%)</title><rect x="66.2397%" y="613" width="25.8920%" height="15" fill="rgb(237,167,16)" fg:x="724" fg:w="283"/><text x="66.4897%" y="623.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_f..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (283 samples, 25.89%)</title><rect x="66.2397%" y="597" width="25.8920%" height="15" fill="rgb(233,66,6)" fg:x="724" fg:w="283"/><text x="66.4897%" y="607.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_f..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.09%)</title><rect x="92.0403%" y="581" width="0.0915%" height="15" fill="rgb(246,123,29)" fg:x="1006" fg:w="1"/><text x="92.2903%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="92.0403%" y="565" width="0.0915%" height="15" fill="rgb(209,62,40)" fg:x="1006" fg:w="1"/><text x="92.2903%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="92.0403%" y="549" width="0.0915%" height="15" fill="rgb(218,4,25)" fg:x="1006" fg:w="1"/><text x="92.2903%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.09%)</title><rect x="92.0403%" y="533" width="0.0915%" height="15" fill="rgb(253,91,49)" fg:x="1006" fg:w="1"/><text x="92.2903%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.09%)</title><rect x="92.0403%" y="517" width="0.0915%" height="15" fill="rgb(228,155,29)" fg:x="1006" fg:w="1"/><text x="92.2903%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.09%)</title><rect x="92.0403%" y="501" width="0.0915%" height="15" fill="rgb(243,57,37)" fg:x="1006" fg:w="1"/><text x="92.2903%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.09%)</title><rect x="92.0403%" y="485" width="0.0915%" height="15" fill="rgb(244,167,17)" fg:x="1006" fg:w="1"/><text x="92.2903%" y="495.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.09%)</title><rect x="92.0403%" y="469" width="0.0915%" height="15" fill="rgb(207,181,38)" fg:x="1006" fg:w="1"/><text x="92.2903%" y="479.50"></text></g><g><title>&lt;demoparser::parsing::demo_parsing::game_events::GameEvent as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="92.1317%" y="645" width="0.0915%" height="15" fill="rgb(211,8,23)" fg:x="1007" fg:w="1"/><text x="92.3817%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="92.1317%" y="629" width="0.0915%" height="15" fill="rgb(235,11,44)" fg:x="1007" fg:w="1"/><text x="92.3817%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.09%)</title><rect x="92.1317%" y="613" width="0.0915%" height="15" fill="rgb(248,18,52)" fg:x="1007" fg:w="1"/><text x="92.3817%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.09%)</title><rect x="92.1317%" y="597" width="0.0915%" height="15" fill="rgb(208,4,7)" fg:x="1007" fg:w="1"/><text x="92.3817%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.09%)</title><rect x="92.1317%" y="581" width="0.0915%" height="15" fill="rgb(240,17,39)" fg:x="1007" fg:w="1"/><text x="92.3817%" y="591.50"></text></g><g><title>&lt;demoparser::parsing::demo_parsing::game_events::NameDataPair as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="92.1317%" y="565" width="0.0915%" height="15" fill="rgb(207,170,3)" fg:x="1007" fg:w="1"/><text x="92.3817%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="92.1317%" y="549" width="0.0915%" height="15" fill="rgb(236,100,52)" fg:x="1007" fg:w="1"/><text x="92.3817%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="92.1317%" y="533" width="0.0915%" height="15" fill="rgb(246,78,51)" fg:x="1007" fg:w="1"/><text x="92.3817%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.09%)</title><rect x="92.1317%" y="517" width="0.0915%" height="15" fill="rgb(211,17,15)" fg:x="1007" fg:w="1"/><text x="92.3817%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.09%)</title><rect x="92.1317%" y="501" width="0.0915%" height="15" fill="rgb(209,59,46)" fg:x="1007" fg:w="1"/><text x="92.3817%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.09%)</title><rect x="92.1317%" y="485" width="0.0915%" height="15" fill="rgb(210,92,25)" fg:x="1007" fg:w="1"/><text x="92.3817%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="92.1317%" y="469" width="0.0915%" height="15" fill="rgb(238,174,52)" fg:x="1007" fg:w="1"/><text x="92.3817%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="92.1317%" y="453" width="0.0915%" height="15" fill="rgb(230,73,7)" fg:x="1007" fg:w="1"/><text x="92.3817%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.09%)</title><rect x="92.1317%" y="437" width="0.0915%" height="15" fill="rgb(243,124,40)" fg:x="1007" fg:w="1"/><text x="92.3817%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.09%)</title><rect x="92.1317%" y="421" width="0.0915%" height="15" fill="rgb(244,170,11)" fg:x="1007" fg:w="1"/><text x="92.3817%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.09%)</title><rect x="92.1317%" y="405" width="0.0915%" height="15" fill="rgb(207,114,54)" fg:x="1007" fg:w="1"/><text x="92.3817%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.09%)</title><rect x="92.1317%" y="389" width="0.0915%" height="15" fill="rgb(205,42,20)" fg:x="1007" fg:w="1"/><text x="92.3817%" y="399.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.09%)</title><rect x="92.1317%" y="373" width="0.0915%" height="15" fill="rgb(230,30,28)" fg:x="1007" fg:w="1"/><text x="92.3817%" y="383.50"></text></g><g><title>_int_malloc (1 samples, 0.09%)</title><rect x="92.1317%" y="357" width="0.0915%" height="15" fill="rgb(205,73,54)" fg:x="1007" fg:w="1"/><text x="92.3817%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::parser::JobResult&gt;&gt; (1 samples, 0.09%)</title><rect x="92.2232%" y="645" width="0.0915%" height="15" fill="rgb(254,227,23)" fg:x="1008" fg:w="1"/><text x="92.4732%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="92.2232%" y="629" width="0.0915%" height="15" fill="rgb(228,202,34)" fg:x="1008" fg:w="1"/><text x="92.4732%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::parser::JobResult]&gt; (1 samples, 0.09%)</title><rect x="92.2232%" y="613" width="0.0915%" height="15" fill="rgb(222,225,37)" fg:x="1008" fg:w="1"/><text x="92.4732%" y="623.50"></text></g><g><title>__GI___libc_free (1 samples, 0.09%)</title><rect x="92.2232%" y="597" width="0.0915%" height="15" fill="rgb(221,14,54)" fg:x="1008" fg:w="1"/><text x="92.4732%" y="607.50"></text></g><g><title>_int_free (1 samples, 0.09%)</title><rect x="92.2232%" y="581" width="0.0915%" height="15" fill="rgb(254,102,2)" fg:x="1008" fg:w="1"/><text x="92.4732%" y="591.50"></text></g><g><title>malloc_consolidate (1 samples, 0.09%)</title><rect x="92.2232%" y="565" width="0.0915%" height="15" fill="rgb(232,104,17)" fg:x="1008" fg:w="1"/><text x="92.4732%" y="575.50"></text></g><g><title>unlink_chunk (1 samples, 0.09%)</title><rect x="92.2232%" y="549" width="0.0915%" height="15" fill="rgb(250,220,14)" fg:x="1008" fg:w="1"/><text x="92.4732%" y="559.50"></text></g><g><title>demoparser::parsing::create_output::game_events::&lt;impl demoparser::parsing::parser::Parser&gt;::series_from_events (1 samples, 0.09%)</title><rect x="92.3147%" y="645" width="0.0915%" height="15" fill="rgb(241,158,9)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.09%)</title><rect x="92.3147%" y="629" width="0.0915%" height="15" fill="rgb(246,9,43)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="92.3147%" y="613" width="0.0915%" height="15" fill="rgb(206,73,33)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="92.3147%" y="597" width="0.0915%" height="15" fill="rgb(222,79,8)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="92.3147%" y="581" width="0.0915%" height="15" fill="rgb(234,8,54)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.09%)</title><rect x="92.3147%" y="565" width="0.0915%" height="15" fill="rgb(209,134,38)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.09%)</title><rect x="92.3147%" y="549" width="0.0915%" height="15" fill="rgb(230,127,29)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="92.3147%" y="533" width="0.0915%" height="15" fill="rgb(242,44,41)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="92.3147%" y="517" width="0.0915%" height="15" fill="rgb(222,56,43)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="92.3147%" y="501" width="0.0915%" height="15" fill="rgb(238,39,47)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.09%)</title><rect x="92.3147%" y="485" width="0.0915%" height="15" fill="rgb(226,79,43)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="92.3147%" y="469" width="0.0915%" height="15" fill="rgb(242,105,53)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.09%)</title><rect x="92.3147%" y="453" width="0.0915%" height="15" fill="rgb(251,132,46)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.09%)</title><rect x="92.3147%" y="437" width="0.0915%" height="15" fill="rgb(231,77,14)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="447.50"></text></g><g><title>demoparser::parsing::create_output::game_events::&lt;impl demoparser::parsing::parser::Parser&gt;::series_from_events::{{closure}} (1 samples, 0.09%)</title><rect x="92.3147%" y="421" width="0.0915%" height="15" fill="rgb(240,135,9)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="92.3147%" y="405" width="0.0915%" height="15" fill="rgb(248,109,14)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.09%)</title><rect x="92.3147%" y="389" width="0.0915%" height="15" fill="rgb(227,146,52)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.09%)</title><rect x="92.3147%" y="373" width="0.0915%" height="15" fill="rgb(232,54,3)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.09%)</title><rect x="92.3147%" y="357" width="0.0915%" height="15" fill="rgb(229,201,43)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="367.50"></text></g><g><title>&lt;demoparser::parsing::demo_parsing::game_events::NameDataPair as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="92.3147%" y="341" width="0.0915%" height="15" fill="rgb(252,161,33)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="92.3147%" y="325" width="0.0915%" height="15" fill="rgb(226,146,40)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="92.3147%" y="309" width="0.0915%" height="15" fill="rgb(219,47,25)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.09%)</title><rect x="92.3147%" y="293" width="0.0915%" height="15" fill="rgb(250,135,13)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.09%)</title><rect x="92.3147%" y="277" width="0.0915%" height="15" fill="rgb(219,229,18)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.09%)</title><rect x="92.3147%" y="261" width="0.0915%" height="15" fill="rgb(217,152,27)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="92.3147%" y="245" width="0.0915%" height="15" fill="rgb(225,71,47)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="92.3147%" y="229" width="0.0915%" height="15" fill="rgb(220,139,14)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.09%)</title><rect x="92.3147%" y="213" width="0.0915%" height="15" fill="rgb(247,54,32)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.09%)</title><rect x="92.3147%" y="197" width="0.0915%" height="15" fill="rgb(252,131,39)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.09%)</title><rect x="92.3147%" y="181" width="0.0915%" height="15" fill="rgb(210,108,39)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.09%)</title><rect x="92.3147%" y="165" width="0.0915%" height="15" fill="rgb(205,23,29)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="175.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.09%)</title><rect x="92.3147%" y="149" width="0.0915%" height="15" fill="rgb(246,139,46)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="159.50"></text></g><g><title>_int_malloc (1 samples, 0.09%)</title><rect x="92.3147%" y="133" width="0.0915%" height="15" fill="rgb(250,81,26)" fg:x="1009" fg:w="1"/><text x="92.5647%" y="143.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_blueprints (3 samples, 0.27%)</title><rect x="92.4062%" y="645" width="0.2745%" height="15" fill="rgb(214,104,7)" fg:x="1010" fg:w="3"/><text x="92.6562%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.27%)</title><rect x="92.4062%" y="629" width="0.2745%" height="15" fill="rgb(233,189,8)" fg:x="1010" fg:w="3"/><text x="92.6562%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.27%)</title><rect x="92.4062%" y="613" width="0.2745%" height="15" fill="rgb(228,141,17)" fg:x="1010" fg:w="3"/><text x="92.6562%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.27%)</title><rect x="92.4062%" y="597" width="0.2745%" height="15" fill="rgb(247,157,1)" fg:x="1010" fg:w="3"/><text x="92.6562%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.27%)</title><rect x="92.4062%" y="581" width="0.2745%" height="15" fill="rgb(249,225,5)" fg:x="1010" fg:w="3"/><text x="92.6562%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.27%)</title><rect x="92.4062%" y="565" width="0.2745%" height="15" fill="rgb(242,55,13)" fg:x="1010" fg:w="3"/><text x="92.6562%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.27%)</title><rect x="92.4062%" y="549" width="0.2745%" height="15" fill="rgb(230,49,50)" fg:x="1010" fg:w="3"/><text x="92.6562%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.27%)</title><rect x="92.4062%" y="533" width="0.2745%" height="15" fill="rgb(241,111,38)" fg:x="1010" fg:w="3"/><text x="92.6562%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.27%)</title><rect x="92.4062%" y="517" width="0.2745%" height="15" fill="rgb(252,155,4)" fg:x="1010" fg:w="3"/><text x="92.6562%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.27%)</title><rect x="92.4062%" y="501" width="0.2745%" height="15" fill="rgb(212,69,32)" fg:x="1010" fg:w="3"/><text x="92.6562%" y="511.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_blueprints::{{closure}} (3 samples, 0.27%)</title><rect x="92.4062%" y="485" width="0.2745%" height="15" fill="rgb(243,107,47)" fg:x="1010" fg:w="3"/><text x="92.6562%" y="495.50"></text></g><g><title>demoparser::parsing::parser::Parser::msg_handler (3 samples, 0.27%)</title><rect x="92.4062%" y="469" width="0.2745%" height="15" fill="rgb(247,130,12)" fg:x="1010" fg:w="3"/><text x="92.6562%" y="479.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_packet_entities (3 samples, 0.27%)</title><rect x="92.4062%" y="453" width="0.2745%" height="15" fill="rgb(233,74,16)" fg:x="1010" fg:w="3"/><text x="92.6562%" y="463.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::_parse_packet_entities (3 samples, 0.27%)</title><rect x="92.4062%" y="437" width="0.2745%" height="15" fill="rgb(208,58,18)" fg:x="1010" fg:w="3"/><text x="92.6562%" y="447.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::parse_ent_props (3 samples, 0.27%)</title><rect x="92.4062%" y="421" width="0.2745%" height="15" fill="rgb(242,225,1)" fg:x="1010" fg:w="3"/><text x="92.6562%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.09%)</title><rect x="92.5892%" y="405" width="0.0915%" height="15" fill="rgb(249,39,40)" fg:x="1012" fg:w="1"/><text x="92.8392%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.09%)</title><rect x="92.5892%" y="389" width="0.0915%" height="15" fill="rgb(207,72,44)" fg:x="1012" fg:w="1"/><text x="92.8392%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.09%)</title><rect x="92.5892%" y="373" width="0.0915%" height="15" fill="rgb(215,193,12)" fg:x="1012" fg:w="1"/><text x="92.8392%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.09%)</title><rect x="92.5892%" y="357" width="0.0915%" height="15" fill="rgb(248,41,39)" fg:x="1012" fg:w="1"/><text x="92.8392%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.09%)</title><rect x="92.5892%" y="341" width="0.0915%" height="15" fill="rgb(253,85,4)" fg:x="1012" fg:w="1"/><text x="92.8392%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.09%)</title><rect x="92.5892%" y="325" width="0.0915%" height="15" fill="rgb(243,70,31)" fg:x="1012" fg:w="1"/><text x="92.8392%" y="335.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.09%)</title><rect x="92.5892%" y="309" width="0.0915%" height="15" fill="rgb(253,195,26)" fg:x="1012" fg:w="1"/><text x="92.8392%" y="319.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.09%)</title><rect x="92.5892%" y="293" width="0.0915%" height="15" fill="rgb(243,42,11)" fg:x="1012" fg:w="1"/><text x="92.8392%" y="303.50"></text></g><g><title>_int_realloc (1 samples, 0.09%)</title><rect x="92.5892%" y="277" width="0.0915%" height="15" fill="rgb(239,66,17)" fg:x="1012" fg:w="1"/><text x="92.8392%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="92.5892%" y="261" width="0.0915%" height="15" fill="rgb(217,132,21)" fg:x="1012" fg:w="1"/><text x="92.8392%" y="271.50"></text></g><g><title>demoparser::parsing::create_output::game_events::&lt;impl demoparser::parsing::parser::Parser&gt;::get_game_events (7 samples, 0.64%)</title><rect x="92.1317%" y="661" width="0.6404%" height="15" fill="rgb(252,202,21)" fg:x="1007" fg:w="7"/><text x="92.3817%" y="671.50"></text></g><g><title>std::io::stdio::_print (1 samples, 0.09%)</title><rect x="92.6807%" y="645" width="0.0915%" height="15" fill="rgb(233,98,36)" fg:x="1013" fg:w="1"/><text x="92.9307%" y="655.50"></text></g><g><title>std::io::stdio::print_to (1 samples, 0.09%)</title><rect x="92.6807%" y="629" width="0.0915%" height="15" fill="rgb(216,153,54)" fg:x="1013" fg:w="1"/><text x="92.9307%" y="639.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.09%)</title><rect x="92.6807%" y="613" width="0.0915%" height="15" fill="rgb(250,99,7)" fg:x="1013" fg:w="1"/><text x="92.9307%" y="623.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.09%)</title><rect x="92.6807%" y="597" width="0.0915%" height="15" fill="rgb(207,56,50)" fg:x="1013" fg:w="1"/><text x="92.9307%" y="607.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.09%)</title><rect x="92.6807%" y="581" width="0.0915%" height="15" fill="rgb(244,61,34)" fg:x="1013" fg:w="1"/><text x="92.9307%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.09%)</title><rect x="92.6807%" y="565" width="0.0915%" height="15" fill="rgb(241,50,38)" fg:x="1013" fg:w="1"/><text x="92.9307%" y="575.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.09%)</title><rect x="92.6807%" y="549" width="0.0915%" height="15" fill="rgb(212,166,30)" fg:x="1013" fg:w="1"/><text x="92.9307%" y="559.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.09%)</title><rect x="92.6807%" y="533" width="0.0915%" height="15" fill="rgb(249,127,32)" fg:x="1013" fg:w="1"/><text x="92.9307%" y="543.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.09%)</title><rect x="92.6807%" y="517" width="0.0915%" height="15" fill="rgb(209,103,0)" fg:x="1013" fg:w="1"/><text x="92.9307%" y="527.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.09%)</title><rect x="92.6807%" y="501" width="0.0915%" height="15" fill="rgb(238,209,51)" fg:x="1013" fg:w="1"/><text x="92.9307%" y="511.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.09%)</title><rect x="92.6807%" y="485" width="0.0915%" height="15" fill="rgb(237,56,23)" fg:x="1013" fg:w="1"/><text x="92.9307%" y="495.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (1 samples, 0.09%)</title><rect x="92.6807%" y="469" width="0.0915%" height="15" fill="rgb(215,153,46)" fg:x="1013" fg:w="1"/><text x="92.9307%" y="479.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.09%)</title><rect x="92.6807%" y="453" width="0.0915%" height="15" fill="rgb(224,49,31)" fg:x="1013" fg:w="1"/><text x="92.9307%" y="463.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.09%)</title><rect x="92.6807%" y="437" width="0.0915%" height="15" fill="rgb(250,18,42)" fg:x="1013" fg:w="1"/><text x="92.9307%" y="447.50"></text></g><g><title>__GI___libc_write (1 samples, 0.09%)</title><rect x="92.6807%" y="421" width="0.0915%" height="15" fill="rgb(215,176,39)" fg:x="1013" fg:w="1"/><text x="92.9307%" y="431.50"></text></g><g><title>__GI___libc_write (1 samples, 0.09%)</title><rect x="92.6807%" y="405" width="0.0915%" height="15" fill="rgb(223,77,29)" fg:x="1013" fg:w="1"/><text x="92.9307%" y="415.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="92.6807%" y="389" width="0.0915%" height="15" fill="rgb(234,94,52)" fg:x="1013" fg:w="1"/><text x="92.9307%" y="399.50"></text></g><g><title>do_syscall_64 (1 samples, 0.09%)</title><rect x="92.6807%" y="373" width="0.0915%" height="15" fill="rgb(220,154,50)" fg:x="1013" fg:w="1"/><text x="92.9307%" y="383.50"></text></g><g><title>__x64_sys_write (1 samples, 0.09%)</title><rect x="92.6807%" y="357" width="0.0915%" height="15" fill="rgb(212,11,10)" fg:x="1013" fg:w="1"/><text x="92.9307%" y="367.50"></text></g><g><title>ksys_write (1 samples, 0.09%)</title><rect x="92.6807%" y="341" width="0.0915%" height="15" fill="rgb(205,166,19)" fg:x="1013" fg:w="1"/><text x="92.9307%" y="351.50"></text></g><g><title>vfs_write (1 samples, 0.09%)</title><rect x="92.6807%" y="325" width="0.0915%" height="15" fill="rgb(244,198,16)" fg:x="1013" fg:w="1"/><text x="92.9307%" y="335.50"></text></g><g><title>new_sync_write (1 samples, 0.09%)</title><rect x="92.6807%" y="309" width="0.0915%" height="15" fill="rgb(219,69,12)" fg:x="1013" fg:w="1"/><text x="92.9307%" y="319.50"></text></g><g><title>tty_write (1 samples, 0.09%)</title><rect x="92.6807%" y="293" width="0.0915%" height="15" fill="rgb(245,30,7)" fg:x="1013" fg:w="1"/><text x="92.9307%" y="303.50"></text></g><g><title>file_tty_write.constprop.0 (1 samples, 0.09%)</title><rect x="92.6807%" y="277" width="0.0915%" height="15" fill="rgb(218,221,48)" fg:x="1013" fg:w="1"/><text x="92.9307%" y="287.50"></text></g><g><title>do_tty_write (1 samples, 0.09%)</title><rect x="92.6807%" y="261" width="0.0915%" height="15" fill="rgb(216,66,15)" fg:x="1013" fg:w="1"/><text x="92.9307%" y="271.50"></text></g><g><title>n_tty_write (1 samples, 0.09%)</title><rect x="92.6807%" y="245" width="0.0915%" height="15" fill="rgb(226,122,50)" fg:x="1013" fg:w="1"/><text x="92.9307%" y="255.50"></text></g><g><title>mutex_lock (1 samples, 0.09%)</title><rect x="92.6807%" y="229" width="0.0915%" height="15" fill="rgb(239,156,16)" fg:x="1013" fg:w="1"/><text x="92.9307%" y="239.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_blueprints (4 samples, 0.37%)</title><rect x="92.7722%" y="661" width="0.3660%" height="15" fill="rgb(224,27,38)" fg:x="1014" fg:w="4"/><text x="93.0222%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.37%)</title><rect x="92.7722%" y="645" width="0.3660%" height="15" fill="rgb(224,39,27)" fg:x="1014" fg:w="4"/><text x="93.0222%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.37%)</title><rect x="92.7722%" y="629" width="0.3660%" height="15" fill="rgb(215,92,29)" fg:x="1014" fg:w="4"/><text x="93.0222%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.37%)</title><rect x="92.7722%" y="613" width="0.3660%" height="15" fill="rgb(207,159,16)" fg:x="1014" fg:w="4"/><text x="93.0222%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.37%)</title><rect x="92.7722%" y="597" width="0.3660%" height="15" fill="rgb(238,163,47)" fg:x="1014" fg:w="4"/><text x="93.0222%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.37%)</title><rect x="92.7722%" y="581" width="0.3660%" height="15" fill="rgb(219,91,49)" fg:x="1014" fg:w="4"/><text x="93.0222%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.37%)</title><rect x="92.7722%" y="565" width="0.3660%" height="15" fill="rgb(227,167,31)" fg:x="1014" fg:w="4"/><text x="93.0222%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.37%)</title><rect x="92.7722%" y="549" width="0.3660%" height="15" fill="rgb(234,80,54)" fg:x="1014" fg:w="4"/><text x="93.0222%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.37%)</title><rect x="92.7722%" y="533" width="0.3660%" height="15" fill="rgb(212,114,2)" fg:x="1014" fg:w="4"/><text x="93.0222%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.37%)</title><rect x="92.7722%" y="517" width="0.3660%" height="15" fill="rgb(234,50,24)" fg:x="1014" fg:w="4"/><text x="93.0222%" y="527.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_blueprints::{{closure}} (4 samples, 0.37%)</title><rect x="92.7722%" y="501" width="0.3660%" height="15" fill="rgb(221,68,8)" fg:x="1014" fg:w="4"/><text x="93.0222%" y="511.50"></text></g><g><title>demoparser::parsing::parser::Parser::msg_handler (4 samples, 0.37%)</title><rect x="92.7722%" y="485" width="0.3660%" height="15" fill="rgb(254,180,31)" fg:x="1014" fg:w="4"/><text x="93.0222%" y="495.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_packet_entities (4 samples, 0.37%)</title><rect x="92.7722%" y="469" width="0.3660%" height="15" fill="rgb(247,130,50)" fg:x="1014" fg:w="4"/><text x="93.0222%" y="479.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::_parse_packet_entities (4 samples, 0.37%)</title><rect x="92.7722%" y="453" width="0.3660%" height="15" fill="rgb(211,109,4)" fg:x="1014" fg:w="4"/><text x="93.0222%" y="463.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::parse_ent_props (4 samples, 0.37%)</title><rect x="92.7722%" y="437" width="0.3660%" height="15" fill="rgb(238,50,21)" fg:x="1014" fg:w="4"/><text x="93.0222%" y="447.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode (1 samples, 0.09%)</title><rect x="93.0467%" y="421" width="0.0915%" height="15" fill="rgb(225,57,45)" fg:x="1017" fg:w="1"/><text x="93.2967%" y="431.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_array (1 samples, 0.09%)</title><rect x="93.0467%" y="405" width="0.0915%" height="15" fill="rgb(209,196,50)" fg:x="1017" fg:w="1"/><text x="93.2967%" y="415.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1 samples, 0.09%)</title><rect x="93.0467%" y="389" width="0.0915%" height="15" fill="rgb(242,140,13)" fg:x="1017" fg:w="1"/><text x="93.2967%" y="399.50"></text></g><g><title>protobuf::text_format::print::fmt (1 samples, 0.09%)</title><rect x="93.0467%" y="373" width="0.0915%" height="15" fill="rgb(217,111,7)" fg:x="1017" fg:w="1"/><text x="93.2967%" y="383.50"></text></g><g><title>protobuf::text_format::print::print_to_string_internal (1 samples, 0.09%)</title><rect x="93.0467%" y="357" width="0.0915%" height="15" fill="rgb(253,193,51)" fg:x="1017" fg:w="1"/><text x="93.2967%" y="367.50"></text></g><g><title>protobuf::text_format::print::print_to_internal (1 samples, 0.09%)</title><rect x="93.0467%" y="341" width="0.0915%" height="15" fill="rgb(252,70,29)" fg:x="1017" fg:w="1"/><text x="93.2967%" y="351.50"></text></g><g><title>protobuf::text_format::print::print_field (1 samples, 0.09%)</title><rect x="93.0467%" y="325" width="0.0915%" height="15" fill="rgb(232,127,12)" fg:x="1017" fg:w="1"/><text x="93.2967%" y="335.50"></text></g><g><title>demoparser::parsing::create_output::create_output::&lt;impl demoparser::parsing::parser::Parser&gt;::compute_jobs_with_cache (12 samples, 1.10%)</title><rect x="92.1317%" y="677" width="1.0979%" height="15" fill="rgb(211,180,21)" fg:x="1007" fg:w="12"/><text x="92.3817%" y="687.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (1 samples, 0.09%)</title><rect x="93.1382%" y="661" width="0.0915%" height="15" fill="rgb(229,72,13)" fg:x="1018" fg:w="1"/><text x="93.3882%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.09%)</title><rect x="93.1382%" y="645" width="0.0915%" height="15" fill="rgb(240,211,49)" fg:x="1018" fg:w="1"/><text x="93.3882%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="93.1382%" y="629" width="0.0915%" height="15" fill="rgb(219,149,40)" fg:x="1018" fg:w="1"/><text x="93.3882%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="93.1382%" y="613" width="0.0915%" height="15" fill="rgb(210,127,46)" fg:x="1018" fg:w="1"/><text x="93.3882%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="93.1382%" y="597" width="0.0915%" height="15" fill="rgb(220,106,7)" fg:x="1018" fg:w="1"/><text x="93.3882%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.09%)</title><rect x="93.1382%" y="581" width="0.0915%" height="15" fill="rgb(249,31,22)" fg:x="1018" fg:w="1"/><text x="93.3882%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.09%)</title><rect x="93.1382%" y="565" width="0.0915%" height="15" fill="rgb(253,1,49)" fg:x="1018" fg:w="1"/><text x="93.3882%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.09%)</title><rect x="93.1382%" y="549" width="0.0915%" height="15" fill="rgb(227,144,33)" fg:x="1018" fg:w="1"/><text x="93.3882%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.09%)</title><rect x="93.1382%" y="533" width="0.0915%" height="15" fill="rgb(249,163,44)" fg:x="1018" fg:w="1"/><text x="93.3882%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.09%)</title><rect x="93.1382%" y="517" width="0.0915%" height="15" fill="rgb(234,15,39)" fg:x="1018" fg:w="1"/><text x="93.3882%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.09%)</title><rect x="93.1382%" y="501" width="0.0915%" height="15" fill="rgb(207,66,16)" fg:x="1018" fg:w="1"/><text x="93.3882%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.09%)</title><rect x="93.1382%" y="485" width="0.0915%" height="15" fill="rgb(233,112,24)" fg:x="1018" fg:w="1"/><text x="93.3882%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.09%)</title><rect x="93.1382%" y="469" width="0.0915%" height="15" fill="rgb(230,90,22)" fg:x="1018" fg:w="1"/><text x="93.3882%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.09%)</title><rect x="93.1382%" y="453" width="0.0915%" height="15" fill="rgb(229,61,13)" fg:x="1018" fg:w="1"/><text x="93.3882%" y="463.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.09%)</title><rect x="93.1382%" y="437" width="0.0915%" height="15" fill="rgb(225,57,24)" fg:x="1018" fg:w="1"/><text x="93.3882%" y="447.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.09%)</title><rect x="93.1382%" y="421" width="0.0915%" height="15" fill="rgb(208,169,48)" fg:x="1018" fg:w="1"/><text x="93.3882%" y="431.50"></text></g><g><title>_int_realloc (1 samples, 0.09%)</title><rect x="93.1382%" y="405" width="0.0915%" height="15" fill="rgb(244,218,51)" fg:x="1018" fg:w="1"/><text x="93.3882%" y="415.50"></text></g><g><title>_int_free (1 samples, 0.09%)</title><rect x="93.1382%" y="389" width="0.0915%" height="15" fill="rgb(214,148,10)" fg:x="1018" fg:w="1"/><text x="93.3882%" y="399.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bytes::ByteReader::read_frame (2 samples, 0.18%)</title><rect x="93.2296%" y="661" width="0.1830%" height="15" fill="rgb(225,174,27)" fg:x="1019" fg:w="2"/><text x="93.4796%" y="671.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bytes::ByteReader::read_byte (2 samples, 0.18%)</title><rect x="93.2296%" y="645" width="0.1830%" height="15" fill="rgb(230,96,26)" fg:x="1019" fg:w="2"/><text x="93.4796%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;csgoproto::netmessages::CSVCMsg_SendTable&gt;&gt; (1 samples, 0.09%)</title><rect x="93.4126%" y="629" width="0.0915%" height="15" fill="rgb(232,10,30)" fg:x="1021" fg:w="1"/><text x="93.6626%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;csgoproto::netmessages::CSVCMsg_SendTable&gt; (1 samples, 0.09%)</title><rect x="93.4126%" y="613" width="0.0915%" height="15" fill="rgb(222,8,50)" fg:x="1021" fg:w="1"/><text x="93.6626%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;csgoproto::netmessages::csvcmsg_send_table::Sendprop_t&gt;&gt; (1 samples, 0.09%)</title><rect x="93.4126%" y="597" width="0.0915%" height="15" fill="rgb(213,81,27)" fg:x="1021" fg:w="1"/><text x="93.6626%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="93.4126%" y="581" width="0.0915%" height="15" fill="rgb(245,50,10)" fg:x="1021" fg:w="1"/><text x="93.6626%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;[csgoproto::netmessages::csvcmsg_send_table::Sendprop_t]&gt; (1 samples, 0.09%)</title><rect x="93.4126%" y="565" width="0.0915%" height="15" fill="rgb(216,100,18)" fg:x="1021" fg:w="1"/><text x="93.6626%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;csgoproto::netmessages::csvcmsg_send_table::Sendprop_t&gt; (1 samples, 0.09%)</title><rect x="93.4126%" y="549" width="0.0915%" height="15" fill="rgb(236,147,54)" fg:x="1021" fg:w="1"/><text x="93.6626%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1 samples, 0.09%)</title><rect x="93.4126%" y="533" width="0.0915%" height="15" fill="rgb(205,143,26)" fg:x="1021" fg:w="1"/><text x="93.6626%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.09%)</title><rect x="93.4126%" y="517" width="0.0915%" height="15" fill="rgb(236,26,9)" fg:x="1021" fg:w="1"/><text x="93.6626%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.09%)</title><rect x="93.4126%" y="501" width="0.0915%" height="15" fill="rgb(221,165,53)" fg:x="1021" fg:w="1"/><text x="93.6626%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.09%)</title><rect x="93.4126%" y="485" width="0.0915%" height="15" fill="rgb(214,110,17)" fg:x="1021" fg:w="1"/><text x="93.6626%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="93.4126%" y="469" width="0.0915%" height="15" fill="rgb(237,197,12)" fg:x="1021" fg:w="1"/><text x="93.6626%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.09%)</title><rect x="93.4126%" y="453" width="0.0915%" height="15" fill="rgb(205,84,17)" fg:x="1021" fg:w="1"/><text x="93.6626%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.09%)</title><rect x="93.4126%" y="437" width="0.0915%" height="15" fill="rgb(237,18,45)" fg:x="1021" fg:w="1"/><text x="93.6626%" y="447.50"></text></g><g><title>__GI___libc_free (1 samples, 0.09%)</title><rect x="93.4126%" y="421" width="0.0915%" height="15" fill="rgb(221,87,14)" fg:x="1021" fg:w="1"/><text x="93.6626%" y="431.50"></text></g><g><title>_int_free (1 samples, 0.09%)</title><rect x="93.4126%" y="405" width="0.0915%" height="15" fill="rgb(238,186,15)" fg:x="1021" fg:w="1"/><text x="93.6626%" y="415.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_SendTable as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="93.5041%" y="597" width="0.0915%" height="15" fill="rgb(208,115,11)" fg:x="1022" fg:w="1"/><text x="93.7541%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="93.5041%" y="581" width="0.0915%" height="15" fill="rgb(254,175,0)" fg:x="1022" fg:w="1"/><text x="93.7541%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.09%)</title><rect x="93.5041%" y="565" width="0.0915%" height="15" fill="rgb(227,24,42)" fg:x="1022" fg:w="1"/><text x="93.7541%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.09%)</title><rect x="93.5041%" y="549" width="0.0915%" height="15" fill="rgb(223,211,37)" fg:x="1022" fg:w="1"/><text x="93.7541%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.09%)</title><rect x="93.5041%" y="533" width="0.0915%" height="15" fill="rgb(235,49,27)" fg:x="1022" fg:w="1"/><text x="93.7541%" y="543.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_send_table::Sendprop_t as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="93.5041%" y="517" width="0.0915%" height="15" fill="rgb(254,97,51)" fg:x="1022" fg:w="1"/><text x="93.7541%" y="527.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_excl_props (2 samples, 0.18%)</title><rect x="93.5041%" y="613" width="0.1830%" height="15" fill="rgb(249,51,40)" fg:x="1022" fg:w="2"/><text x="93.7541%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;csgoproto::netmessages::CSVCMsg_SendTable&gt; (1 samples, 0.09%)</title><rect x="93.5956%" y="597" width="0.0915%" height="15" fill="rgb(210,128,45)" fg:x="1023" fg:w="1"/><text x="93.8456%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;csgoproto::netmessages::csvcmsg_send_table::Sendprop_t&gt;&gt; (1 samples, 0.09%)</title><rect x="93.5956%" y="581" width="0.0915%" height="15" fill="rgb(224,137,50)" fg:x="1023" fg:w="1"/><text x="93.8456%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="93.5956%" y="565" width="0.0915%" height="15" fill="rgb(242,15,9)" fg:x="1023" fg:w="1"/><text x="93.8456%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[csgoproto::netmessages::csvcmsg_send_table::Sendprop_t]&gt; (1 samples, 0.09%)</title><rect x="93.5956%" y="549" width="0.0915%" height="15" fill="rgb(233,187,41)" fg:x="1023" fg:w="1"/><text x="93.8456%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;csgoproto::netmessages::csvcmsg_send_table::Sendprop_t&gt; (1 samples, 0.09%)</title><rect x="93.5956%" y="533" width="0.0915%" height="15" fill="rgb(227,2,29)" fg:x="1023" fg:w="1"/><text x="93.8456%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1 samples, 0.09%)</title><rect x="93.5956%" y="517" width="0.0915%" height="15" fill="rgb(222,70,3)" fg:x="1023" fg:w="1"/><text x="93.8456%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.09%)</title><rect x="93.5956%" y="501" width="0.0915%" height="15" fill="rgb(213,11,42)" fg:x="1023" fg:w="1"/><text x="93.8456%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.09%)</title><rect x="93.5956%" y="485" width="0.0915%" height="15" fill="rgb(225,150,9)" fg:x="1023" fg:w="1"/><text x="93.8456%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.09%)</title><rect x="93.5956%" y="469" width="0.0915%" height="15" fill="rgb(230,162,45)" fg:x="1023" fg:w="1"/><text x="93.8456%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="93.5956%" y="453" width="0.0915%" height="15" fill="rgb(222,14,52)" fg:x="1023" fg:w="1"/><text x="93.8456%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.09%)</title><rect x="93.5956%" y="437" width="0.0915%" height="15" fill="rgb(254,198,14)" fg:x="1023" fg:w="1"/><text x="93.8456%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.09%)</title><rect x="93.5956%" y="421" width="0.0915%" height="15" fill="rgb(220,217,30)" fg:x="1023" fg:w="1"/><text x="93.8456%" y="431.50"></text></g><g><title>__GI___libc_free (1 samples, 0.09%)</title><rect x="93.5956%" y="405" width="0.0915%" height="15" fill="rgb(215,146,41)" fg:x="1023" fg:w="1"/><text x="93.8456%" y="415.50"></text></g><g><title>_int_free (1 samples, 0.09%)</title><rect x="93.5956%" y="389" width="0.0915%" height="15" fill="rgb(217,27,36)" fg:x="1023" fg:w="1"/><text x="93.8456%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.09%)</title><rect x="93.6871%" y="597" width="0.0915%" height="15" fill="rgb(219,218,39)" fg:x="1024" fg:w="1"/><text x="93.9371%" y="607.50"></text></g><g><title>core::ptr::write (1 samples, 0.09%)</title><rect x="93.6871%" y="581" width="0.0915%" height="15" fill="rgb(219,4,42)" fg:x="1024" fg:w="1"/><text x="93.9371%" y="591.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::flatten_dt (4 samples, 0.37%)</title><rect x="93.5041%" y="629" width="0.3660%" height="15" fill="rgb(249,119,36)" fg:x="1022" fg:w="4"/><text x="93.7541%" y="639.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (2 samples, 0.18%)</title><rect x="93.6871%" y="613" width="0.1830%" height="15" fill="rgb(209,23,33)" fg:x="1024" fg:w="2"/><text x="93.9371%" y="623.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.09%)</title><rect x="93.7786%" y="597" width="0.0915%" height="15" fill="rgb(211,10,0)" fg:x="1025" fg:w="1"/><text x="94.0286%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.09%)</title><rect x="93.7786%" y="581" width="0.0915%" height="15" fill="rgb(208,99,37)" fg:x="1025" fg:w="1"/><text x="94.0286%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.09%)</title><rect x="93.7786%" y="565" width="0.0915%" height="15" fill="rgb(213,132,31)" fg:x="1025" fg:w="1"/><text x="94.0286%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.09%)</title><rect x="93.7786%" y="549" width="0.0915%" height="15" fill="rgb(243,129,40)" fg:x="1025" fg:w="1"/><text x="94.0286%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.09%)</title><rect x="93.7786%" y="533" width="0.0915%" height="15" fill="rgb(210,66,33)" fg:x="1025" fg:w="1"/><text x="94.0286%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.09%)</title><rect x="93.7786%" y="517" width="0.0915%" height="15" fill="rgb(209,189,4)" fg:x="1025" fg:w="1"/><text x="94.0286%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.09%)</title><rect x="93.7786%" y="501" width="0.0915%" height="15" fill="rgb(214,107,37)" fg:x="1025" fg:w="1"/><text x="94.0286%" y="511.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.09%)</title><rect x="93.7786%" y="485" width="0.0915%" height="15" fill="rgb(245,88,54)" fg:x="1025" fg:w="1"/><text x="94.0286%" y="495.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.09%)</title><rect x="93.7786%" y="469" width="0.0915%" height="15" fill="rgb(205,146,20)" fg:x="1025" fg:w="1"/><text x="94.0286%" y="479.50"></text></g><g><title>_int_realloc (1 samples, 0.09%)</title><rect x="93.7786%" y="453" width="0.0915%" height="15" fill="rgb(220,161,25)" fg:x="1025" fg:w="1"/><text x="94.0286%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.09%)</title><rect x="93.7786%" y="437" width="0.0915%" height="15" fill="rgb(215,152,15)" fg:x="1025" fg:w="1"/><text x="94.0286%" y="447.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.09%)</title><rect x="93.8701%" y="581" width="0.0915%" height="15" fill="rgb(233,192,44)" fg:x="1026" fg:w="1"/><text x="94.1201%" y="591.50"></text></g><g><title>alloc::string::String::from_utf8 (1 samples, 0.09%)</title><rect x="94.0531%" y="501" width="0.0915%" height="15" fill="rgb(240,170,46)" fg:x="1028" fg:w="1"/><text x="94.3031%" y="511.50"></text></g><g><title>protobuf::message::Message::parse_from_bytes (4 samples, 0.37%)</title><rect x="93.8701%" y="629" width="0.3660%" height="15" fill="rgb(207,104,33)" fg:x="1026" fg:w="4"/><text x="94.1201%" y="639.50"></text></g><g><title>protobuf::message::Message::parse_from (4 samples, 0.37%)</title><rect x="93.8701%" y="613" width="0.3660%" height="15" fill="rgb(219,21,39)" fg:x="1026" fg:w="4"/><text x="94.1201%" y="623.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_SendTable as protobuf::message::Message&gt;::merge_from (4 samples, 0.37%)</title><rect x="93.8701%" y="597" width="0.3660%" height="15" fill="rgb(214,133,29)" fg:x="1026" fg:w="4"/><text x="94.1201%" y="607.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_message (3 samples, 0.27%)</title><rect x="93.9616%" y="581" width="0.2745%" height="15" fill="rgb(226,93,6)" fg:x="1027" fg:w="3"/><text x="94.2116%" y="591.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::merge_message (3 samples, 0.27%)</title><rect x="93.9616%" y="565" width="0.2745%" height="15" fill="rgb(252,222,34)" fg:x="1027" fg:w="3"/><text x="94.2116%" y="575.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_send_table::Sendprop_t as protobuf::message::Message&gt;::merge_from (3 samples, 0.27%)</title><rect x="93.9616%" y="549" width="0.2745%" height="15" fill="rgb(252,92,48)" fg:x="1027" fg:w="3"/><text x="94.2116%" y="559.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string (3 samples, 0.27%)</title><rect x="93.9616%" y="533" width="0.2745%" height="15" fill="rgb(245,223,24)" fg:x="1027" fg:w="3"/><text x="94.2116%" y="543.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string_into (3 samples, 0.27%)</title><rect x="93.9616%" y="517" width="0.2745%" height="15" fill="rgb(205,176,3)" fg:x="1027" fg:w="3"/><text x="94.2116%" y="527.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (1 samples, 0.09%)</title><rect x="94.1446%" y="501" width="0.0915%" height="15" fill="rgb(235,151,15)" fg:x="1029" fg:w="1"/><text x="94.3946%" y="511.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (1 samples, 0.09%)</title><rect x="94.1446%" y="485" width="0.0915%" height="15" fill="rgb(237,209,11)" fg:x="1029" fg:w="1"/><text x="94.3946%" y="495.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (1 samples, 0.09%)</title><rect x="94.1446%" y="469" width="0.0915%" height="15" fill="rgb(243,227,24)" fg:x="1029" fg:w="1"/><text x="94.3946%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (1 samples, 0.09%)</title><rect x="94.1446%" y="453" width="0.0915%" height="15" fill="rgb(239,193,16)" fg:x="1029" fg:w="1"/><text x="94.3946%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (1 samples, 0.09%)</title><rect x="94.1446%" y="437" width="0.0915%" height="15" fill="rgb(231,27,9)" fg:x="1029" fg:w="1"/><text x="94.3946%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (1 samples, 0.09%)</title><rect x="94.1446%" y="421" width="0.0915%" height="15" fill="rgb(219,169,10)" fg:x="1029" fg:w="1"/><text x="94.3946%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (1 samples, 0.09%)</title><rect x="94.1446%" y="405" width="0.0915%" height="15" fill="rgb(244,229,43)" fg:x="1029" fg:w="1"/><text x="94.3946%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.09%)</title><rect x="94.1446%" y="389" width="0.0915%" height="15" fill="rgb(254,38,20)" fg:x="1029" fg:w="1"/><text x="94.3946%" y="399.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.09%)</title><rect x="94.1446%" y="373" width="0.0915%" height="15" fill="rgb(250,47,30)" fg:x="1029" fg:w="1"/><text x="94.3946%" y="383.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_datatable (10 samples, 0.91%)</title><rect x="93.4126%" y="645" width="0.9149%" height="15" fill="rgb(224,124,36)" fg:x="1021" fg:w="10"/><text x="93.6626%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.09%)</title><rect x="94.2360%" y="629" width="0.0915%" height="15" fill="rgb(246,68,51)" fg:x="1030" fg:w="1"/><text x="94.4860%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.09%)</title><rect x="94.2360%" y="613" width="0.0915%" height="15" fill="rgb(253,43,49)" fg:x="1030" fg:w="1"/><text x="94.4860%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.09%)</title><rect x="94.2360%" y="597" width="0.0915%" height="15" fill="rgb(219,54,36)" fg:x="1030" fg:w="1"/><text x="94.4860%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.09%)</title><rect x="94.2360%" y="581" width="0.0915%" height="15" fill="rgb(227,133,34)" fg:x="1030" fg:w="1"/><text x="94.4860%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.09%)</title><rect x="94.2360%" y="565" width="0.0915%" height="15" fill="rgb(247,227,15)" fg:x="1030" fg:w="1"/><text x="94.4860%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.09%)</title><rect x="94.2360%" y="549" width="0.0915%" height="15" fill="rgb(229,96,14)" fg:x="1030" fg:w="1"/><text x="94.4860%" y="559.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.09%)</title><rect x="94.2360%" y="533" width="0.0915%" height="15" fill="rgb(220,79,17)" fg:x="1030" fg:w="1"/><text x="94.4860%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.09%)</title><rect x="94.2360%" y="517" width="0.0915%" height="15" fill="rgb(205,131,53)" fg:x="1030" fg:w="1"/><text x="94.4860%" y="527.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.09%)</title><rect x="94.2360%" y="501" width="0.0915%" height="15" fill="rgb(209,50,29)" fg:x="1030" fg:w="1"/><text x="94.4860%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.09%)</title><rect x="94.2360%" y="485" width="0.0915%" height="15" fill="rgb(245,86,46)" fg:x="1030" fg:w="1"/><text x="94.4860%" y="495.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.09%)</title><rect x="94.2360%" y="469" width="0.0915%" height="15" fill="rgb(235,66,46)" fg:x="1030" fg:w="1"/><text x="94.4860%" y="479.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.09%)</title><rect x="94.2360%" y="453" width="0.0915%" height="15" fill="rgb(232,148,31)" fg:x="1030" fg:w="1"/><text x="94.4860%" y="463.50"></text></g><g><title>_start (991 samples, 90.67%)</title><rect x="4.3001%" y="1141" width="90.6679%" height="15" fill="rgb(217,149,8)" fg:x="47" fg:w="991"/><text x="4.5501%" y="1151.50">_start</text></g><g><title>__libc_start_main_impl (991 samples, 90.67%)</title><rect x="4.3001%" y="1125" width="90.6679%" height="15" fill="rgb(209,183,11)" fg:x="47" fg:w="991"/><text x="4.5501%" y="1135.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (991 samples, 90.67%)</title><rect x="4.3001%" y="1109" width="90.6679%" height="15" fill="rgb(208,55,20)" fg:x="47" fg:w="991"/><text x="4.5501%" y="1119.50">__libc_start_call_main</text></g><g><title>main (991 samples, 90.67%)</title><rect x="4.3001%" y="1093" width="90.6679%" height="15" fill="rgb(218,39,14)" fg:x="47" fg:w="991"/><text x="4.5501%" y="1103.50">main</text></g><g><title>std::rt::lang_start_internal (991 samples, 90.67%)</title><rect x="4.3001%" y="1077" width="90.6679%" height="15" fill="rgb(216,169,33)" fg:x="47" fg:w="991"/><text x="4.5501%" y="1087.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (991 samples, 90.67%)</title><rect x="4.3001%" y="1061" width="90.6679%" height="15" fill="rgb(233,80,24)" fg:x="47" fg:w="991"/><text x="4.5501%" y="1071.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (991 samples, 90.67%)</title><rect x="4.3001%" y="1045" width="90.6679%" height="15" fill="rgb(213,179,31)" fg:x="47" fg:w="991"/><text x="4.5501%" y="1055.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (991 samples, 90.67%)</title><rect x="4.3001%" y="1029" width="90.6679%" height="15" fill="rgb(209,19,5)" fg:x="47" fg:w="991"/><text x="4.5501%" y="1039.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (991 samples, 90.67%)</title><rect x="4.3001%" y="1013" width="90.6679%" height="15" fill="rgb(219,18,35)" fg:x="47" fg:w="991"/><text x="4.5501%" y="1023.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (991 samples, 90.67%)</title><rect x="4.3001%" y="997" width="90.6679%" height="15" fill="rgb(209,169,16)" fg:x="47" fg:w="991"/><text x="4.5501%" y="1007.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (991 samples, 90.67%)</title><rect x="4.3001%" y="981" width="90.6679%" height="15" fill="rgb(245,90,51)" fg:x="47" fg:w="991"/><text x="4.5501%" y="991.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (991 samples, 90.67%)</title><rect x="4.3001%" y="965" width="90.6679%" height="15" fill="rgb(220,99,45)" fg:x="47" fg:w="991"/><text x="4.5501%" y="975.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (991 samples, 90.67%)</title><rect x="4.3001%" y="949" width="90.6679%" height="15" fill="rgb(249,89,25)" fg:x="47" fg:w="991"/><text x="4.5501%" y="959.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (991 samples, 90.67%)</title><rect x="4.3001%" y="933" width="90.6679%" height="15" fill="rgb(239,193,0)" fg:x="47" fg:w="991"/><text x="4.5501%" y="943.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (991 samples, 90.67%)</title><rect x="4.3001%" y="917" width="90.6679%" height="15" fill="rgb(231,126,1)" fg:x="47" fg:w="991"/><text x="4.5501%" y="927.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (991 samples, 90.67%)</title><rect x="4.3001%" y="901" width="90.6679%" height="15" fill="rgb(243,166,3)" fg:x="47" fg:w="991"/><text x="4.5501%" y="911.50">core::ops::function::FnOnce::call_once</text></g><g><title>demoparser::main (991 samples, 90.67%)</title><rect x="4.3001%" y="885" width="90.6679%" height="15" fill="rgb(223,22,34)" fg:x="47" fg:w="991"/><text x="4.5501%" y="895.50">demoparser::main</text></g><g><title>core::iter::traits::iterator::Iterator::collect (990 samples, 90.58%)</title><rect x="4.3916%" y="869" width="90.5764%" height="15" fill="rgb(251,52,51)" fg:x="48" fg:w="990"/><text x="4.6416%" y="879.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (990 samples, 90.58%)</title><rect x="4.3916%" y="853" width="90.5764%" height="15" fill="rgb(221,165,28)" fg:x="48" fg:w="990"/><text x="4.6416%" y="863.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (990 samples, 90.58%)</title><rect x="4.3916%" y="837" width="90.5764%" height="15" fill="rgb(218,121,47)" fg:x="48" fg:w="990"/><text x="4.6416%" y="847.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (990 samples, 90.58%)</title><rect x="4.3916%" y="821" width="90.5764%" height="15" fill="rgb(209,120,9)" fg:x="48" fg:w="990"/><text x="4.6416%" y="831.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (990 samples, 90.58%)</title><rect x="4.3916%" y="805" width="90.5764%" height="15" fill="rgb(236,68,12)" fg:x="48" fg:w="990"/><text x="4.6416%" y="815.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (990 samples, 90.58%)</title><rect x="4.3916%" y="789" width="90.5764%" height="15" fill="rgb(225,194,26)" fg:x="48" fg:w="990"/><text x="4.6416%" y="799.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (990 samples, 90.58%)</title><rect x="4.3916%" y="773" width="90.5764%" height="15" fill="rgb(231,84,39)" fg:x="48" fg:w="990"/><text x="4.6416%" y="783.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::traits::iterator::Iterator::fold (990 samples, 90.58%)</title><rect x="4.3916%" y="757" width="90.5764%" height="15" fill="rgb(210,11,45)" fg:x="48" fg:w="990"/><text x="4.6416%" y="767.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (990 samples, 90.58%)</title><rect x="4.3916%" y="741" width="90.5764%" height="15" fill="rgb(224,54,52)" fg:x="48" fg:w="990"/><text x="4.6416%" y="751.50">core::iter::adapters::map::map_fold::{{closure}}</text></g><g><title>demoparser::main::{{closure}} (990 samples, 90.58%)</title><rect x="4.3916%" y="725" width="90.5764%" height="15" fill="rgb(238,102,14)" fg:x="48" fg:w="990"/><text x="4.6416%" y="735.50">demoparser::main::{{closure}}</text></g><g><title>demoparser::parse_demo (990 samples, 90.58%)</title><rect x="4.3916%" y="709" width="90.5764%" height="15" fill="rgb(243,160,52)" fg:x="48" fg:w="990"/><text x="4.6416%" y="719.50">demoparser::parse_demo</text></g><g><title>demoparser::parsing::parser::Parser::start_parsing (987 samples, 90.30%)</title><rect x="4.6661%" y="693" width="90.3019%" height="15" fill="rgb(216,114,19)" fg:x="51" fg:w="987"/><text x="4.9161%" y="703.50">demoparser::parsing::parser::Parser::start_parsing</text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (19 samples, 1.74%)</title><rect x="93.2296%" y="677" width="1.7383%" height="15" fill="rgb(244,166,37)" fg:x="1019" fg:w="19"/><text x="93.4796%" y="687.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_cmd (17 samples, 1.56%)</title><rect x="93.4126%" y="661" width="1.5554%" height="15" fill="rgb(246,29,44)" fg:x="1021" fg:w="17"/><text x="93.6626%" y="671.50"></text></g><g><title>demoparser::parsing::parser::Parser::messages_from_packet (7 samples, 0.64%)</title><rect x="94.3275%" y="645" width="0.6404%" height="15" fill="rgb(215,56,53)" fg:x="1031" fg:w="7"/><text x="94.5775%" y="655.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bytes::ByteReader::read_varint (5 samples, 0.46%)</title><rect x="94.5105%" y="629" width="0.4575%" height="15" fill="rgb(217,60,2)" fg:x="1033" fg:w="5"/><text x="94.7605%" y="639.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.09%)</title><rect x="94.8765%" y="613" width="0.0915%" height="15" fill="rgb(207,26,24)" fg:x="1037" fg:w="1"/><text x="95.1265%" y="623.50"></text></g><g><title>exc_page_fault (1 samples, 0.09%)</title><rect x="94.8765%" y="597" width="0.0915%" height="15" fill="rgb(252,210,15)" fg:x="1037" fg:w="1"/><text x="95.1265%" y="607.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.09%)</title><rect x="94.8765%" y="581" width="0.0915%" height="15" fill="rgb(253,209,26)" fg:x="1037" fg:w="1"/><text x="95.1265%" y="591.50"></text></g><g><title>handle_mm_fault (1 samples, 0.09%)</title><rect x="94.8765%" y="565" width="0.0915%" height="15" fill="rgb(238,170,14)" fg:x="1037" fg:w="1"/><text x="95.1265%" y="575.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="94.8765%" y="549" width="0.0915%" height="15" fill="rgb(216,178,15)" fg:x="1037" fg:w="1"/><text x="95.1265%" y="559.50"></text></g><g><title>handle_pte_fault (1 samples, 0.09%)</title><rect x="94.8765%" y="533" width="0.0915%" height="15" fill="rgb(250,197,2)" fg:x="1037" fg:w="1"/><text x="95.1265%" y="543.50"></text></g><g><title>do_fault (1 samples, 0.09%)</title><rect x="94.8765%" y="517" width="0.0915%" height="15" fill="rgb(212,70,42)" fg:x="1037" fg:w="1"/><text x="95.1265%" y="527.50"></text></g><g><title>do_read_fault (1 samples, 0.09%)</title><rect x="94.8765%" y="501" width="0.0915%" height="15" fill="rgb(227,213,9)" fg:x="1037" fg:w="1"/><text x="95.1265%" y="511.50"></text></g><g><title>filemap_map_pages (1 samples, 0.09%)</title><rect x="94.8765%" y="485" width="0.0915%" height="15" fill="rgb(245,99,25)" fg:x="1037" fg:w="1"/><text x="95.1265%" y="495.50"></text></g><g><title>next_uptodate_page (1 samples, 0.09%)</title><rect x="94.8765%" y="469" width="0.0915%" height="15" fill="rgb(250,82,29)" fg:x="1037" fg:w="1"/><text x="95.1265%" y="479.50"></text></g><g><title>down_read_trylock (5 samples, 0.46%)</title><rect x="95.4254%" y="1093" width="0.4575%" height="15" fill="rgb(241,226,54)" fg:x="1043" fg:w="5"/><text x="95.6754%" y="1103.50"></text></g><g><title>asm_exc_page_fault (11 samples, 1.01%)</title><rect x="94.9680%" y="1141" width="1.0064%" height="15" fill="rgb(221,99,41)" fg:x="1038" fg:w="11"/><text x="95.2180%" y="1151.50"></text></g><g><title>exc_page_fault (6 samples, 0.55%)</title><rect x="95.4254%" y="1125" width="0.5489%" height="15" fill="rgb(213,90,21)" fg:x="1043" fg:w="6"/><text x="95.6754%" y="1135.50"></text></g><g><title>do_user_addr_fault (6 samples, 0.55%)</title><rect x="95.4254%" y="1109" width="0.5489%" height="15" fill="rgb(205,208,24)" fg:x="1043" fg:w="6"/><text x="95.6754%" y="1119.50"></text></g><g><title>handle_mm_fault (1 samples, 0.09%)</title><rect x="95.8829%" y="1093" width="0.0915%" height="15" fill="rgb(246,31,12)" fg:x="1048" fg:w="1"/><text x="96.1329%" y="1103.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="95.8829%" y="1077" width="0.0915%" height="15" fill="rgb(213,154,6)" fg:x="1048" fg:w="1"/><text x="96.1329%" y="1087.50"></text></g><g><title>handle_pte_fault (1 samples, 0.09%)</title><rect x="95.8829%" y="1061" width="0.0915%" height="15" fill="rgb(222,163,29)" fg:x="1048" fg:w="1"/><text x="96.1329%" y="1071.50"></text></g><g><title>do_anonymous_page (1 samples, 0.09%)</title><rect x="95.8829%" y="1045" width="0.0915%" height="15" fill="rgb(227,201,8)" fg:x="1048" fg:w="1"/><text x="96.1329%" y="1055.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.09%)</title><rect x="95.8829%" y="1029" width="0.0915%" height="15" fill="rgb(233,9,32)" fg:x="1048" fg:w="1"/><text x="96.1329%" y="1039.50"></text></g><g><title>__alloc_pages (1 samples, 0.09%)</title><rect x="95.8829%" y="1013" width="0.0915%" height="15" fill="rgb(217,54,24)" fg:x="1048" fg:w="1"/><text x="96.1329%" y="1023.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.09%)</title><rect x="95.8829%" y="997" width="0.0915%" height="15" fill="rgb(235,192,0)" fg:x="1048" fg:w="1"/><text x="96.1329%" y="1007.50"></text></g><g><title>clear_page_erms (1 samples, 0.09%)</title><rect x="95.8829%" y="981" width="0.0915%" height="15" fill="rgb(235,45,9)" fg:x="1048" fg:w="1"/><text x="96.1329%" y="991.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.09%)</title><rect x="95.9744%" y="1109" width="0.0915%" height="15" fill="rgb(246,42,40)" fg:x="1049" fg:w="1"/><text x="96.2244%" y="1119.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.09%)</title><rect x="95.9744%" y="1093" width="0.0915%" height="15" fill="rgb(248,111,24)" fg:x="1049" fg:w="1"/><text x="96.2244%" y="1103.50"></text></g><g><title>bprm_execve (1 samples, 0.09%)</title><rect x="95.9744%" y="1077" width="0.0915%" height="15" fill="rgb(249,65,22)" fg:x="1049" fg:w="1"/><text x="96.2244%" y="1087.50"></text></g><g><title>bprm_execve.part.0 (1 samples, 0.09%)</title><rect x="95.9744%" y="1061" width="0.0915%" height="15" fill="rgb(238,111,51)" fg:x="1049" fg:w="1"/><text x="96.2244%" y="1071.50"></text></g><g><title>exec_binprm (1 samples, 0.09%)</title><rect x="95.9744%" y="1045" width="0.0915%" height="15" fill="rgb(250,118,22)" fg:x="1049" fg:w="1"/><text x="96.2244%" y="1055.50"></text></g><g><title>search_binary_handler (1 samples, 0.09%)</title><rect x="95.9744%" y="1029" width="0.0915%" height="15" fill="rgb(234,84,26)" fg:x="1049" fg:w="1"/><text x="96.2244%" y="1039.50"></text></g><g><title>load_elf_binary (1 samples, 0.09%)</title><rect x="95.9744%" y="1013" width="0.0915%" height="15" fill="rgb(243,172,12)" fg:x="1049" fg:w="1"/><text x="96.2244%" y="1023.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.18%)</title><rect x="95.9744%" y="1141" width="0.1830%" height="15" fill="rgb(236,150,49)" fg:x="1049" fg:w="2"/><text x="96.2244%" y="1151.50"></text></g><g><title>do_syscall_64 (2 samples, 0.18%)</title><rect x="95.9744%" y="1125" width="0.1830%" height="15" fill="rgb(225,197,26)" fg:x="1049" fg:w="2"/><text x="96.2244%" y="1135.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.09%)</title><rect x="96.0659%" y="1109" width="0.0915%" height="15" fill="rgb(214,17,42)" fg:x="1050" fg:w="1"/><text x="96.3159%" y="1119.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.09%)</title><rect x="96.0659%" y="1093" width="0.0915%" height="15" fill="rgb(224,165,40)" fg:x="1050" fg:w="1"/><text x="96.3159%" y="1103.50"></text></g><g><title>exit_to_user_mode_loop (1 samples, 0.09%)</title><rect x="96.0659%" y="1077" width="0.0915%" height="15" fill="rgb(246,100,4)" fg:x="1050" fg:w="1"/><text x="96.3159%" y="1087.50"></text></g><g><title>arch_do_signal_or_restart (1 samples, 0.09%)</title><rect x="96.0659%" y="1061" width="0.0915%" height="15" fill="rgb(222,103,0)" fg:x="1050" fg:w="1"/><text x="96.3159%" y="1071.50"></text></g><g><title>get_signal (1 samples, 0.09%)</title><rect x="96.0659%" y="1045" width="0.0915%" height="15" fill="rgb(227,189,26)" fg:x="1050" fg:w="1"/><text x="96.3159%" y="1055.50"></text></g><g><title>do_group_exit (1 samples, 0.09%)</title><rect x="96.0659%" y="1029" width="0.0915%" height="15" fill="rgb(214,202,17)" fg:x="1050" fg:w="1"/><text x="96.3159%" y="1039.50"></text></g><g><title>do_exit (1 samples, 0.09%)</title><rect x="96.0659%" y="1013" width="0.0915%" height="15" fill="rgb(229,111,3)" fg:x="1050" fg:w="1"/><text x="96.3159%" y="1023.50"></text></g><g><title>exit_mm (1 samples, 0.09%)</title><rect x="96.0659%" y="997" width="0.0915%" height="15" fill="rgb(229,172,15)" fg:x="1050" fg:w="1"/><text x="96.3159%" y="1007.50"></text></g><g><title>mmput (1 samples, 0.09%)</title><rect x="96.0659%" y="981" width="0.0915%" height="15" fill="rgb(230,224,35)" fg:x="1050" fg:w="1"/><text x="96.3159%" y="991.50"></text></g><g><title>exit_mmap (1 samples, 0.09%)</title><rect x="96.0659%" y="965" width="0.0915%" height="15" fill="rgb(251,141,6)" fg:x="1050" fg:w="1"/><text x="96.3159%" y="975.50"></text></g><g><title>unmap_vmas (1 samples, 0.09%)</title><rect x="96.0659%" y="949" width="0.0915%" height="15" fill="rgb(225,208,6)" fg:x="1050" fg:w="1"/><text x="96.3159%" y="959.50"></text></g><g><title>unmap_single_vma (1 samples, 0.09%)</title><rect x="96.0659%" y="933" width="0.0915%" height="15" fill="rgb(246,181,16)" fg:x="1050" fg:w="1"/><text x="96.3159%" y="943.50"></text></g><g><title>unmap_page_range (1 samples, 0.09%)</title><rect x="96.0659%" y="917" width="0.0915%" height="15" fill="rgb(227,129,36)" fg:x="1050" fg:w="1"/><text x="96.3159%" y="927.50"></text></g><g><title>zap_pmd_range.isra.0 (1 samples, 0.09%)</title><rect x="96.0659%" y="901" width="0.0915%" height="15" fill="rgb(248,117,24)" fg:x="1050" fg:w="1"/><text x="96.3159%" y="911.50"></text></g><g><title>zap_pte_range (1 samples, 0.09%)</title><rect x="96.0659%" y="885" width="0.0915%" height="15" fill="rgb(214,185,35)" fg:x="1050" fg:w="1"/><text x="96.3159%" y="895.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (1 samples, 0.09%)</title><rect x="96.1574%" y="1141" width="0.0915%" height="15" fill="rgb(236,150,34)" fg:x="1051" fg:w="1"/><text x="96.4074%" y="1151.50"></text></g><g><title>error_entry (5 samples, 0.46%)</title><rect x="96.2489%" y="1141" width="0.4575%" height="15" fill="rgb(243,228,27)" fg:x="1052" fg:w="5"/><text x="96.4989%" y="1151.50"></text></g><g><title>schedule_tail (5 samples, 0.46%)</title><rect x="96.7063%" y="1125" width="0.4575%" height="15" fill="rgb(245,77,44)" fg:x="1057" fg:w="5"/><text x="96.9563%" y="1135.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.46%)</title><rect x="96.7063%" y="1109" width="0.4575%" height="15" fill="rgb(235,214,42)" fg:x="1057" fg:w="5"/><text x="96.9563%" y="1119.50"></text></g><g><title>asm_sysvec_call_function (5 samples, 0.46%)</title><rect x="96.7063%" y="1093" width="0.4575%" height="15" fill="rgb(221,74,3)" fg:x="1057" fg:w="5"/><text x="96.9563%" y="1103.50"></text></g><g><title>sysvec_call_function (5 samples, 0.46%)</title><rect x="96.7063%" y="1077" width="0.4575%" height="15" fill="rgb(206,121,29)" fg:x="1057" fg:w="5"/><text x="96.9563%" y="1087.50"></text></g><g><title>__sysvec_call_function (5 samples, 0.46%)</title><rect x="96.7063%" y="1061" width="0.4575%" height="15" fill="rgb(249,131,53)" fg:x="1057" fg:w="5"/><text x="96.9563%" y="1071.50"></text></g><g><title>generic_smp_call_function_single_interrupt (5 samples, 0.46%)</title><rect x="96.7063%" y="1045" width="0.4575%" height="15" fill="rgb(236,170,29)" fg:x="1057" fg:w="5"/><text x="96.9563%" y="1055.50"></text></g><g><title>flush_smp_call_function_queue (5 samples, 0.46%)</title><rect x="96.7063%" y="1029" width="0.4575%" height="15" fill="rgb(247,96,15)" fg:x="1057" fg:w="5"/><text x="96.9563%" y="1039.50"></text></g><g><title>flush_tlb_func (5 samples, 0.46%)</title><rect x="96.7063%" y="1013" width="0.4575%" height="15" fill="rgb(211,210,7)" fg:x="1057" fg:w="5"/><text x="96.9563%" y="1023.50"></text></g><g><title>native_flush_tlb_one_user (5 samples, 0.46%)</title><rect x="96.7063%" y="997" width="0.4575%" height="15" fill="rgb(240,88,50)" fg:x="1057" fg:w="5"/><text x="96.9563%" y="1007.50"></text></g><g><title>restore_fpregs_from_fpstate (15 samples, 1.37%)</title><rect x="97.1638%" y="1077" width="1.3724%" height="15" fill="rgb(209,229,26)" fg:x="1062" fg:w="15"/><text x="97.4138%" y="1087.50"></text></g><g><title>ret_from_fork (25 samples, 2.29%)</title><rect x="96.7063%" y="1141" width="2.2873%" height="15" fill="rgb(210,68,23)" fg:x="1057" fg:w="25"/><text x="96.9563%" y="1151.50">r..</text></g><g><title>syscall_exit_to_user_mode (20 samples, 1.83%)</title><rect x="97.1638%" y="1125" width="1.8298%" height="15" fill="rgb(229,180,13)" fg:x="1062" fg:w="20"/><text x="97.4138%" y="1135.50">s..</text></g><g><title>exit_to_user_mode_prepare (20 samples, 1.83%)</title><rect x="97.1638%" y="1109" width="1.8298%" height="15" fill="rgb(236,53,44)" fg:x="1062" fg:w="20"/><text x="97.4138%" y="1119.50">e..</text></g><g><title>switch_fpu_return (20 samples, 1.83%)</title><rect x="97.1638%" y="1093" width="1.8298%" height="15" fill="rgb(244,214,29)" fg:x="1062" fg:w="20"/><text x="97.4138%" y="1103.50">s..</text></g><g><title>xfd_validate_state (5 samples, 0.46%)</title><rect x="98.5361%" y="1077" width="0.4575%" height="15" fill="rgb(220,75,29)" fg:x="1077" fg:w="5"/><text x="98.7861%" y="1087.50"></text></g><g><title>sync_regs (5 samples, 0.46%)</title><rect x="98.9936%" y="1141" width="0.4575%" height="15" fill="rgb(214,183,37)" fg:x="1082" fg:w="5"/><text x="99.2436%" y="1151.50"></text></g><g><title>demoparser (1,088 samples, 99.54%)</title><rect x="0.0000%" y="1157" width="99.5425%" height="15" fill="rgb(239,117,29)" fg:x="0" fg:w="1088"/><text x="0.2500%" y="1167.50">demoparser</text></g><g><title>syscall_return_via_sysret (1 samples, 0.09%)</title><rect x="99.4511%" y="1141" width="0.0915%" height="15" fill="rgb(237,171,35)" fg:x="1087" fg:w="1"/><text x="99.7011%" y="1151.50"></text></g><g><title>all (1,093 samples, 100%)</title><rect x="0.0000%" y="1173" width="100.0000%" height="15" fill="rgb(229,178,53)" fg:x="0" fg:w="1093"/><text x="0.2500%" y="1183.50"></text></g><g><title>perf-exec (5 samples, 0.46%)</title><rect x="99.5425%" y="1157" width="0.4575%" height="15" fill="rgb(210,102,19)" fg:x="1088" fg:w="5"/><text x="99.7925%" y="1167.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.46%)</title><rect x="99.5425%" y="1141" width="0.4575%" height="15" fill="rgb(235,127,22)" fg:x="1088" fg:w="5"/><text x="99.7925%" y="1151.50"></text></g><g><title>do_syscall_64 (5 samples, 0.46%)</title><rect x="99.5425%" y="1125" width="0.4575%" height="15" fill="rgb(244,31,31)" fg:x="1088" fg:w="5"/><text x="99.7925%" y="1135.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.46%)</title><rect x="99.5425%" y="1109" width="0.4575%" height="15" fill="rgb(231,43,21)" fg:x="1088" fg:w="5"/><text x="99.7925%" y="1119.50"></text></g><g><title>do_execveat_common.isra.0 (5 samples, 0.46%)</title><rect x="99.5425%" y="1093" width="0.4575%" height="15" fill="rgb(217,131,35)" fg:x="1088" fg:w="5"/><text x="99.7925%" y="1103.50"></text></g><g><title>bprm_execve (5 samples, 0.46%)</title><rect x="99.5425%" y="1077" width="0.4575%" height="15" fill="rgb(221,149,4)" fg:x="1088" fg:w="5"/><text x="99.7925%" y="1087.50"></text></g><g><title>bprm_execve.part.0 (5 samples, 0.46%)</title><rect x="99.5425%" y="1061" width="0.4575%" height="15" fill="rgb(232,170,28)" fg:x="1088" fg:w="5"/><text x="99.7925%" y="1071.50"></text></g><g><title>exec_binprm (5 samples, 0.46%)</title><rect x="99.5425%" y="1045" width="0.4575%" height="15" fill="rgb(238,56,10)" fg:x="1088" fg:w="5"/><text x="99.7925%" y="1055.50"></text></g><g><title>search_binary_handler (5 samples, 0.46%)</title><rect x="99.5425%" y="1029" width="0.4575%" height="15" fill="rgb(235,196,14)" fg:x="1088" fg:w="5"/><text x="99.7925%" y="1039.50"></text></g><g><title>load_elf_binary (5 samples, 0.46%)</title><rect x="99.5425%" y="1013" width="0.4575%" height="15" fill="rgb(216,45,48)" fg:x="1088" fg:w="5"/><text x="99.7925%" y="1023.50"></text></g><g><title>strrchr (5 samples, 0.46%)</title><rect x="99.5425%" y="997" width="0.4575%" height="15" fill="rgb(238,213,17)" fg:x="1088" fg:w="5"/><text x="99.7925%" y="1007.50"></text></g></svg></svg>