<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="758" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="741.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="741.00"> </text><svg id="frames" x="10" width="1180" total_samples="569"><g><title>[unknown] (50 samples, 8.79%)</title><rect x="1.7575%" y="661" width="8.7873%" height="15" fill="rgb(227,0,7)" fg:x="10" fg:w="50"/><text x="2.0075%" y="671.50">[unknown]</text></g><g><title>[unknown] (50 samples, 8.79%)</title><rect x="1.7575%" y="645" width="8.7873%" height="15" fill="rgb(217,0,24)" fg:x="10" fg:w="50"/><text x="2.0075%" y="655.50">[unknown]</text></g><g><title>[unknown] (40 samples, 7.03%)</title><rect x="3.5149%" y="629" width="7.0299%" height="15" fill="rgb(221,193,54)" fg:x="20" fg:w="40"/><text x="3.7649%" y="639.50">[unknown]</text></g><g><title>[unknown] (29 samples, 5.10%)</title><rect x="5.4482%" y="613" width="5.0967%" height="15" fill="rgb(248,212,6)" fg:x="31" fg:w="29"/><text x="5.6982%" y="623.50">[unkno..</text></g><g><title>[unknown] (4 samples, 0.70%)</title><rect x="9.8418%" y="597" width="0.7030%" height="15" fill="rgb(208,68,35)" fg:x="56" fg:w="4"/><text x="10.0918%" y="607.50"></text></g><g><title>[unknown] (4 samples, 0.70%)</title><rect x="9.8418%" y="581" width="0.7030%" height="15" fill="rgb(232,128,0)" fg:x="56" fg:w="4"/><text x="10.0918%" y="591.50"></text></g><g><title>[unknown] (4 samples, 0.70%)</title><rect x="9.8418%" y="565" width="0.7030%" height="15" fill="rgb(207,160,47)" fg:x="56" fg:w="4"/><text x="10.0918%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="10.1933%" y="549" width="0.3515%" height="15" fill="rgb(228,23,34)" fg:x="58" fg:w="2"/><text x="10.4433%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="10.1933%" y="533" width="0.3515%" height="15" fill="rgb(218,30,26)" fg:x="58" fg:w="2"/><text x="10.4433%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="10.1933%" y="517" width="0.3515%" height="15" fill="rgb(220,122,19)" fg:x="58" fg:w="2"/><text x="10.4433%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="10.1933%" y="501" width="0.3515%" height="15" fill="rgb(250,228,42)" fg:x="58" fg:w="2"/><text x="10.4433%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="10.1933%" y="485" width="0.3515%" height="15" fill="rgb(240,193,28)" fg:x="58" fg:w="2"/><text x="10.4433%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="10.3691%" y="469" width="0.1757%" height="15" fill="rgb(216,20,37)" fg:x="59" fg:w="1"/><text x="10.6191%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="10.3691%" y="453" width="0.1757%" height="15" fill="rgb(206,188,39)" fg:x="59" fg:w="1"/><text x="10.6191%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="10.3691%" y="437" width="0.1757%" height="15" fill="rgb(217,207,13)" fg:x="59" fg:w="1"/><text x="10.6191%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="10.3691%" y="421" width="0.1757%" height="15" fill="rgb(231,73,38)" fg:x="59" fg:w="1"/><text x="10.6191%" y="431.50"></text></g><g><title>[libc.so.6] (2 samples, 0.35%)</title><rect x="10.7206%" y="437" width="0.3515%" height="15" fill="rgb(225,20,46)" fg:x="61" fg:w="2"/><text x="10.9706%" y="447.50"></text></g><g><title>demoparser::main (4 samples, 0.70%)</title><rect x="10.5448%" y="661" width="0.7030%" height="15" fill="rgb(210,31,41)" fg:x="60" fg:w="4"/><text x="10.7948%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.70%)</title><rect x="10.5448%" y="645" width="0.7030%" height="15" fill="rgb(221,200,47)" fg:x="60" fg:w="4"/><text x="10.7948%" y="655.50"></text></g><g><title>demoparser::parse_demo (4 samples, 0.70%)</title><rect x="10.5448%" y="629" width="0.7030%" height="15" fill="rgb(226,26,5)" fg:x="60" fg:w="4"/><text x="10.7948%" y="639.50"></text></g><g><title>demoparser::parsing::parser::Parser::start_parsing (4 samples, 0.70%)</title><rect x="10.5448%" y="613" width="0.7030%" height="15" fill="rgb(249,33,26)" fg:x="60" fg:w="4"/><text x="10.7948%" y="623.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_wanted_ticks (4 samples, 0.70%)</title><rect x="10.5448%" y="597" width="0.7030%" height="15" fill="rgb(235,183,28)" fg:x="60" fg:w="4"/><text x="10.7948%" y="607.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (4 samples, 0.70%)</title><rect x="10.5448%" y="581" width="0.7030%" height="15" fill="rgb(221,5,38)" fg:x="60" fg:w="4"/><text x="10.7948%" y="591.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (4 samples, 0.70%)</title><rect x="10.5448%" y="565" width="0.7030%" height="15" fill="rgb(247,18,42)" fg:x="60" fg:w="4"/><text x="10.7948%" y="575.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (4 samples, 0.70%)</title><rect x="10.5448%" y="549" width="0.7030%" height="15" fill="rgb(241,131,45)" fg:x="60" fg:w="4"/><text x="10.7948%" y="559.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (4 samples, 0.70%)</title><rect x="10.5448%" y="533" width="0.7030%" height="15" fill="rgb(249,31,29)" fg:x="60" fg:w="4"/><text x="10.7948%" y="543.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (4 samples, 0.70%)</title><rect x="10.5448%" y="517" width="0.7030%" height="15" fill="rgb(225,111,53)" fg:x="60" fg:w="4"/><text x="10.7948%" y="527.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (4 samples, 0.70%)</title><rect x="10.5448%" y="501" width="0.7030%" height="15" fill="rgb(238,160,17)" fg:x="60" fg:w="4"/><text x="10.7948%" y="511.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (4 samples, 0.70%)</title><rect x="10.5448%" y="485" width="0.7030%" height="15" fill="rgb(214,148,48)" fg:x="60" fg:w="4"/><text x="10.7948%" y="495.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (4 samples, 0.70%)</title><rect x="10.5448%" y="469" width="0.7030%" height="15" fill="rgb(232,36,49)" fg:x="60" fg:w="4"/><text x="10.7948%" y="479.50"></text></g><g><title>alloc::slice::merge_sort (4 samples, 0.70%)</title><rect x="10.5448%" y="453" width="0.7030%" height="15" fill="rgb(209,103,24)" fg:x="60" fg:w="4"/><text x="10.7948%" y="463.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.18%)</title><rect x="11.0721%" y="437" width="0.1757%" height="15" fill="rgb(229,88,8)" fg:x="63" fg:w="1"/><text x="11.3221%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.35%)</title><rect x="12.1265%" y="469" width="0.3515%" height="15" fill="rgb(213,181,19)" fg:x="69" fg:w="2"/><text x="12.3765%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.35%)</title><rect x="12.1265%" y="453" width="0.3515%" height="15" fill="rgb(254,191,54)" fg:x="69" fg:w="2"/><text x="12.3765%" y="463.50"></text></g><g><title>_mi_heap_realloc_zero (2 samples, 0.35%)</title><rect x="12.1265%" y="437" width="0.3515%" height="15" fill="rgb(241,83,37)" fg:x="69" fg:w="2"/><text x="12.3765%" y="447.50"></text></g><g><title>[libc.so.6] (2 samples, 0.35%)</title><rect x="12.1265%" y="421" width="0.3515%" height="15" fill="rgb(233,36,39)" fg:x="69" fg:w="2"/><text x="12.3765%" y="431.50"></text></g><g><title>[libc.so.6] (1 samples, 0.18%)</title><rect x="13.5325%" y="453" width="0.1757%" height="15" fill="rgb(226,3,54)" fg:x="77" fg:w="1"/><text x="13.7825%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.35%)</title><rect x="13.7083%" y="453" width="0.3515%" height="15" fill="rgb(245,192,40)" fg:x="78" fg:w="2"/><text x="13.9583%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.35%)</title><rect x="13.7083%" y="437" width="0.3515%" height="15" fill="rgb(238,167,29)" fg:x="78" fg:w="2"/><text x="13.9583%" y="447.50"></text></g><g><title>_mi_heap_realloc_zero (2 samples, 0.35%)</title><rect x="13.7083%" y="421" width="0.3515%" height="15" fill="rgb(232,182,51)" fg:x="78" fg:w="2"/><text x="13.9583%" y="431.50"></text></g><g><title>[libc.so.6] (1 samples, 0.18%)</title><rect x="13.8840%" y="405" width="0.1757%" height="15" fill="rgb(231,60,39)" fg:x="79" fg:w="1"/><text x="14.1340%" y="415.50"></text></g><g><title>csgoproto::netmessages::csvcmsg_game_event_list::Descriptor_t::eventid (1 samples, 0.18%)</title><rect x="14.0598%" y="453" width="0.1757%" height="15" fill="rgb(208,69,12)" fg:x="80" fg:w="1"/><text x="14.3098%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.18%)</title><rect x="14.7627%" y="437" width="0.1757%" height="15" fill="rgb(235,93,37)" fg:x="84" fg:w="1"/><text x="15.0127%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.18%)</title><rect x="14.7627%" y="421" width="0.1757%" height="15" fill="rgb(213,116,39)" fg:x="84" fg:w="1"/><text x="15.0127%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.18%)</title><rect x="14.7627%" y="405" width="0.1757%" height="15" fill="rgb(222,207,29)" fg:x="84" fg:w="1"/><text x="15.0127%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.18%)</title><rect x="14.7627%" y="389" width="0.1757%" height="15" fill="rgb(206,96,30)" fg:x="84" fg:w="1"/><text x="15.0127%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.18%)</title><rect x="14.7627%" y="373" width="0.1757%" height="15" fill="rgb(218,138,4)" fg:x="84" fg:w="1"/><text x="15.0127%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.18%)</title><rect x="14.7627%" y="357" width="0.1757%" height="15" fill="rgb(250,191,14)" fg:x="84" fg:w="1"/><text x="15.0127%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.18%)</title><rect x="14.7627%" y="341" width="0.1757%" height="15" fill="rgb(239,60,40)" fg:x="84" fg:w="1"/><text x="15.0127%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.18%)</title><rect x="14.7627%" y="325" width="0.1757%" height="15" fill="rgb(206,27,48)" fg:x="84" fg:w="1"/><text x="15.0127%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.18%)</title><rect x="14.7627%" y="309" width="0.1757%" height="15" fill="rgb(225,35,8)" fg:x="84" fg:w="1"/><text x="15.0127%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.18%)</title><rect x="14.7627%" y="293" width="0.1757%" height="15" fill="rgb(250,213,24)" fg:x="84" fg:w="1"/><text x="15.0127%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.18%)</title><rect x="14.7627%" y="277" width="0.1757%" height="15" fill="rgb(247,123,22)" fg:x="84" fg:w="1"/><text x="15.0127%" y="287.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.18%)</title><rect x="14.7627%" y="261" width="0.1757%" height="15" fill="rgb(231,138,38)" fg:x="84" fg:w="1"/><text x="15.0127%" y="271.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.18%)</title><rect x="14.7627%" y="245" width="0.1757%" height="15" fill="rgb(231,145,46)" fg:x="84" fg:w="1"/><text x="15.0127%" y="255.50"></text></g><g><title>mi_page_free_list_extend.constprop.0 (1 samples, 0.18%)</title><rect x="14.7627%" y="229" width="0.1757%" height="15" fill="rgb(251,118,11)" fg:x="84" fg:w="1"/><text x="15.0127%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.18%)</title><rect x="14.9385%" y="437" width="0.1757%" height="15" fill="rgb(217,147,25)" fg:x="85" fg:w="1"/><text x="15.1885%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.18%)</title><rect x="14.9385%" y="421" width="0.1757%" height="15" fill="rgb(247,81,37)" fg:x="85" fg:w="1"/><text x="15.1885%" y="431.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.18%)</title><rect x="14.9385%" y="405" width="0.1757%" height="15" fill="rgb(209,12,38)" fg:x="85" fg:w="1"/><text x="15.1885%" y="415.50"></text></g><g><title>alloc::slice::merge_sort (1 samples, 0.18%)</title><rect x="15.1142%" y="437" width="0.1757%" height="15" fill="rgb(227,1,9)" fg:x="86" fg:w="1"/><text x="15.3642%" y="447.50"></text></g><g><title>csgoproto::netmessages::csvcmsg_game_event_list::Descriptor_t::eventid (1 samples, 0.18%)</title><rect x="15.2900%" y="437" width="0.1757%" height="15" fill="rgb(248,47,43)" fg:x="87" fg:w="1"/><text x="15.5400%" y="447.50"></text></g><g><title>demoparser::parse_demo (25 samples, 4.39%)</title><rect x="11.2478%" y="661" width="4.3937%" height="15" fill="rgb(221,10,30)" fg:x="64" fg:w="25"/><text x="11.4978%" y="671.50">demop..</text></g><g><title>demoparser::parsing::parser::Parser::start_parsing (25 samples, 4.39%)</title><rect x="11.2478%" y="645" width="4.3937%" height="15" fill="rgb(210,229,1)" fg:x="64" fg:w="25"/><text x="11.4978%" y="655.50">demop..</text></g><g><title>demoparser::parsing::parser::Parser::parse_wanted_ticks (25 samples, 4.39%)</title><rect x="11.2478%" y="629" width="4.3937%" height="15" fill="rgb(222,148,37)" fg:x="64" fg:w="25"/><text x="11.4978%" y="639.50">demop..</text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (25 samples, 4.39%)</title><rect x="11.2478%" y="613" width="4.3937%" height="15" fill="rgb(234,67,33)" fg:x="64" fg:w="25"/><text x="11.4978%" y="623.50">demop..</text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (25 samples, 4.39%)</title><rect x="11.2478%" y="597" width="4.3937%" height="15" fill="rgb(247,98,35)" fg:x="64" fg:w="25"/><text x="11.4978%" y="607.50">demop..</text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (25 samples, 4.39%)</title><rect x="11.2478%" y="581" width="4.3937%" height="15" fill="rgb(247,138,52)" fg:x="64" fg:w="25"/><text x="11.4978%" y="591.50">demop..</text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (25 samples, 4.39%)</title><rect x="11.2478%" y="565" width="4.3937%" height="15" fill="rgb(213,79,30)" fg:x="64" fg:w="25"/><text x="11.4978%" y="575.50">demop..</text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (25 samples, 4.39%)</title><rect x="11.2478%" y="549" width="4.3937%" height="15" fill="rgb(246,177,23)" fg:x="64" fg:w="25"/><text x="11.4978%" y="559.50">demop..</text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (25 samples, 4.39%)</title><rect x="11.2478%" y="533" width="4.3937%" height="15" fill="rgb(230,62,27)" fg:x="64" fg:w="25"/><text x="11.4978%" y="543.50">demop..</text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (25 samples, 4.39%)</title><rect x="11.2478%" y="517" width="4.3937%" height="15" fill="rgb(216,154,8)" fg:x="64" fg:w="25"/><text x="11.4978%" y="527.50">demop..</text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (25 samples, 4.39%)</title><rect x="11.2478%" y="501" width="4.3937%" height="15" fill="rgb(244,35,45)" fg:x="64" fg:w="25"/><text x="11.4978%" y="511.50">demop..</text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (25 samples, 4.39%)</title><rect x="11.2478%" y="485" width="4.3937%" height="15" fill="rgb(251,115,12)" fg:x="64" fg:w="25"/><text x="11.4978%" y="495.50">demop..</text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (18 samples, 3.16%)</title><rect x="12.4780%" y="469" width="3.1634%" height="15" fill="rgb(240,54,50)" fg:x="71" fg:w="18"/><text x="12.7280%" y="479.50">dem..</text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (8 samples, 1.41%)</title><rect x="14.2355%" y="453" width="1.4060%" height="15" fill="rgb(233,84,52)" fg:x="81" fg:w="8"/><text x="14.4855%" y="463.50"></text></g><g><title>mi_free (1 samples, 0.18%)</title><rect x="15.4657%" y="437" width="0.1757%" height="15" fill="rgb(207,117,47)" fg:x="88" fg:w="1"/><text x="15.7157%" y="447.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (3 samples, 0.53%)</title><rect x="15.6415%" y="613" width="0.5272%" height="15" fill="rgb(249,43,39)" fg:x="89" fg:w="3"/><text x="15.8915%" y="623.50"></text></g><g><title>[libc.so.6] (3 samples, 0.53%)</title><rect x="15.6415%" y="597" width="0.5272%" height="15" fill="rgb(209,38,44)" fg:x="89" fg:w="3"/><text x="15.8915%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.18%)</title><rect x="16.8717%" y="501" width="0.1757%" height="15" fill="rgb(236,212,23)" fg:x="96" fg:w="1"/><text x="17.1217%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.18%)</title><rect x="16.8717%" y="485" width="0.1757%" height="15" fill="rgb(242,79,21)" fg:x="96" fg:w="1"/><text x="17.1217%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.18%)</title><rect x="16.8717%" y="469" width="0.1757%" height="15" fill="rgb(211,96,35)" fg:x="96" fg:w="1"/><text x="17.1217%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.18%)</title><rect x="16.8717%" y="453" width="0.1757%" height="15" fill="rgb(253,215,40)" fg:x="96" fg:w="1"/><text x="17.1217%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.18%)</title><rect x="16.8717%" y="437" width="0.1757%" height="15" fill="rgb(211,81,21)" fg:x="96" fg:w="1"/><text x="17.1217%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.18%)</title><rect x="16.8717%" y="421" width="0.1757%" height="15" fill="rgb(208,190,38)" fg:x="96" fg:w="1"/><text x="17.1217%" y="431.50"></text></g><g><title>mi_malloc (1 samples, 0.18%)</title><rect x="16.8717%" y="405" width="0.1757%" height="15" fill="rgb(235,213,38)" fg:x="96" fg:w="1"/><text x="17.1217%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 1.05%)</title><rect x="16.3445%" y="597" width="1.0545%" height="15" fill="rgb(237,122,38)" fg:x="93" fg:w="6"/><text x="16.5945%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.53%)</title><rect x="16.8717%" y="581" width="0.5272%" height="15" fill="rgb(244,218,35)" fg:x="96" fg:w="3"/><text x="17.1217%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.53%)</title><rect x="16.8717%" y="565" width="0.5272%" height="15" fill="rgb(240,68,47)" fg:x="96" fg:w="3"/><text x="17.1217%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.53%)</title><rect x="16.8717%" y="549" width="0.5272%" height="15" fill="rgb(210,16,53)" fg:x="96" fg:w="3"/><text x="17.1217%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.53%)</title><rect x="16.8717%" y="533" width="0.5272%" height="15" fill="rgb(235,124,12)" fg:x="96" fg:w="3"/><text x="17.1217%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.53%)</title><rect x="16.8717%" y="517" width="0.5272%" height="15" fill="rgb(224,169,11)" fg:x="96" fg:w="3"/><text x="17.1217%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.35%)</title><rect x="17.0475%" y="501" width="0.3515%" height="15" fill="rgb(250,166,2)" fg:x="97" fg:w="2"/><text x="17.2975%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.35%)</title><rect x="17.0475%" y="485" width="0.3515%" height="15" fill="rgb(242,216,29)" fg:x="97" fg:w="2"/><text x="17.2975%" y="495.50"></text></g><g><title>[libc.so.6] (2 samples, 0.35%)</title><rect x="17.0475%" y="469" width="0.3515%" height="15" fill="rgb(230,116,27)" fg:x="97" fg:w="2"/><text x="17.2975%" y="479.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_excl_props (11 samples, 1.93%)</title><rect x="15.6415%" y="661" width="1.9332%" height="15" fill="rgb(228,99,48)" fg:x="89" fg:w="11"/><text x="15.8915%" y="671.50">d..</text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_excl_props (11 samples, 1.93%)</title><rect x="15.6415%" y="645" width="1.9332%" height="15" fill="rgb(253,11,6)" fg:x="89" fg:w="11"/><text x="15.8915%" y="655.50">d..</text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_excl_props (11 samples, 1.93%)</title><rect x="15.6415%" y="629" width="1.9332%" height="15" fill="rgb(247,143,39)" fg:x="89" fg:w="11"/><text x="15.8915%" y="639.50">d..</text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_excl_props (8 samples, 1.41%)</title><rect x="16.1687%" y="613" width="1.4060%" height="15" fill="rgb(236,97,10)" fg:x="92" fg:w="8"/><text x="16.4187%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;csgoproto::netmessages::CSVCMsg_SendTable&gt; (1 samples, 0.18%)</title><rect x="17.3989%" y="597" width="0.1757%" height="15" fill="rgb(233,208,19)" fg:x="99" fg:w="1"/><text x="17.6489%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;csgoproto::netmessages::csvcmsg_send_table::Sendprop_t&gt; (1 samples, 0.18%)</title><rect x="17.3989%" y="581" width="0.1757%" height="15" fill="rgb(216,164,2)" fg:x="99" fg:w="1"/><text x="17.6489%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.18%)</title><rect x="18.6292%" y="277" width="0.1757%" height="15" fill="rgb(220,129,5)" fg:x="106" fg:w="1"/><text x="18.8792%" y="287.50"></text></g><g><title>[unknown] (108 samples, 18.98%)</title><rect x="0.0000%" y="677" width="18.9807%" height="15" fill="rgb(242,17,10)" fg:x="0" fg:w="108"/><text x="0.2500%" y="687.50">[unknown]</text></g><g><title>std::rt::lang_start_internal (8 samples, 1.41%)</title><rect x="17.5747%" y="661" width="1.4060%" height="15" fill="rgb(242,107,0)" fg:x="100" fg:w="8"/><text x="17.8247%" y="671.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 1.41%)</title><rect x="17.5747%" y="645" width="1.4060%" height="15" fill="rgb(251,28,31)" fg:x="100" fg:w="8"/><text x="17.8247%" y="655.50"></text></g><g><title>std::panicking::try (8 samples, 1.41%)</title><rect x="17.5747%" y="629" width="1.4060%" height="15" fill="rgb(233,223,10)" fg:x="100" fg:w="8"/><text x="17.8247%" y="639.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 1.41%)</title><rect x="17.5747%" y="613" width="1.4060%" height="15" fill="rgb(215,21,27)" fg:x="100" fg:w="8"/><text x="17.8247%" y="623.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (8 samples, 1.41%)</title><rect x="17.5747%" y="597" width="1.4060%" height="15" fill="rgb(232,23,21)" fg:x="100" fg:w="8"/><text x="17.8247%" y="607.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 1.41%)</title><rect x="17.5747%" y="581" width="1.4060%" height="15" fill="rgb(244,5,23)" fg:x="100" fg:w="8"/><text x="17.8247%" y="591.50"></text></g><g><title>std::panicking::try (8 samples, 1.41%)</title><rect x="17.5747%" y="565" width="1.4060%" height="15" fill="rgb(226,81,46)" fg:x="100" fg:w="8"/><text x="17.8247%" y="575.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 1.41%)</title><rect x="17.5747%" y="549" width="1.4060%" height="15" fill="rgb(247,70,30)" fg:x="100" fg:w="8"/><text x="17.8247%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (8 samples, 1.41%)</title><rect x="17.5747%" y="533" width="1.4060%" height="15" fill="rgb(212,68,19)" fg:x="100" fg:w="8"/><text x="17.8247%" y="543.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (8 samples, 1.41%)</title><rect x="17.5747%" y="517" width="1.4060%" height="15" fill="rgb(240,187,13)" fg:x="100" fg:w="8"/><text x="17.8247%" y="527.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (8 samples, 1.41%)</title><rect x="17.5747%" y="501" width="1.4060%" height="15" fill="rgb(223,113,26)" fg:x="100" fg:w="8"/><text x="17.8247%" y="511.50"></text></g><g><title>demoparser::main (8 samples, 1.41%)</title><rect x="17.5747%" y="485" width="1.4060%" height="15" fill="rgb(206,192,2)" fg:x="100" fg:w="8"/><text x="17.8247%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 1.41%)</title><rect x="17.5747%" y="469" width="1.4060%" height="15" fill="rgb(241,108,4)" fg:x="100" fg:w="8"/><text x="17.8247%" y="479.50"></text></g><g><title>demoparser::parse_demo (8 samples, 1.41%)</title><rect x="17.5747%" y="453" width="1.4060%" height="15" fill="rgb(247,173,49)" fg:x="100" fg:w="8"/><text x="17.8247%" y="463.50"></text></g><g><title>demoparser::parsing::parser::Parser::start_parsing (8 samples, 1.41%)</title><rect x="17.5747%" y="437" width="1.4060%" height="15" fill="rgb(224,114,35)" fg:x="100" fg:w="8"/><text x="17.8247%" y="447.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_wanted_ticks (8 samples, 1.41%)</title><rect x="17.5747%" y="421" width="1.4060%" height="15" fill="rgb(245,159,27)" fg:x="100" fg:w="8"/><text x="17.8247%" y="431.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (8 samples, 1.41%)</title><rect x="17.5747%" y="405" width="1.4060%" height="15" fill="rgb(245,172,44)" fg:x="100" fg:w="8"/><text x="17.8247%" y="415.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (8 samples, 1.41%)</title><rect x="17.5747%" y="389" width="1.4060%" height="15" fill="rgb(236,23,11)" fg:x="100" fg:w="8"/><text x="17.8247%" y="399.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (8 samples, 1.41%)</title><rect x="17.5747%" y="373" width="1.4060%" height="15" fill="rgb(205,117,38)" fg:x="100" fg:w="8"/><text x="17.8247%" y="383.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (8 samples, 1.41%)</title><rect x="17.5747%" y="357" width="1.4060%" height="15" fill="rgb(237,72,25)" fg:x="100" fg:w="8"/><text x="17.8247%" y="367.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (8 samples, 1.41%)</title><rect x="17.5747%" y="341" width="1.4060%" height="15" fill="rgb(244,70,9)" fg:x="100" fg:w="8"/><text x="17.8247%" y="351.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (8 samples, 1.41%)</title><rect x="17.5747%" y="325" width="1.4060%" height="15" fill="rgb(217,125,39)" fg:x="100" fg:w="8"/><text x="17.8247%" y="335.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (8 samples, 1.41%)</title><rect x="17.5747%" y="309" width="1.4060%" height="15" fill="rgb(235,36,10)" fg:x="100" fg:w="8"/><text x="17.8247%" y="319.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (8 samples, 1.41%)</title><rect x="17.5747%" y="293" width="1.4060%" height="15" fill="rgb(251,123,47)" fg:x="100" fg:w="8"/><text x="17.8247%" y="303.50"></text></g><g><title>csgoproto::netmessages::CSVCMsg_Print::text (1 samples, 0.18%)</title><rect x="18.8049%" y="277" width="0.1757%" height="15" fill="rgb(221,13,13)" fg:x="107" fg:w="1"/><text x="19.0549%" y="287.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="18.9807%" y="421" width="1.0545%" height="15" fill="rgb(238,131,9)" fg:x="108" fg:w="6"/><text x="19.2307%" y="431.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="18.9807%" y="405" width="1.0545%" height="15" fill="rgb(211,50,8)" fg:x="108" fg:w="6"/><text x="19.2307%" y="415.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="18.9807%" y="389" width="1.0545%" height="15" fill="rgb(245,182,24)" fg:x="108" fg:w="6"/><text x="19.2307%" y="399.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="18.9807%" y="373" width="1.0545%" height="15" fill="rgb(242,14,37)" fg:x="108" fg:w="6"/><text x="19.2307%" y="383.50"></text></g><g><title>std::sys::unix::thread::guard::current (8 samples, 1.41%)</title><rect x="18.9807%" y="581" width="1.4060%" height="15" fill="rgb(246,228,12)" fg:x="108" fg:w="8"/><text x="19.2307%" y="591.50"></text></g><g><title>__pthread_getattr_np (8 samples, 1.41%)</title><rect x="18.9807%" y="565" width="1.4060%" height="15" fill="rgb(213,55,15)" fg:x="108" fg:w="8"/><text x="19.2307%" y="575.50"></text></g><g><title>__GI___libc_malloc (8 samples, 1.41%)</title><rect x="18.9807%" y="549" width="1.4060%" height="15" fill="rgb(209,9,3)" fg:x="108" fg:w="8"/><text x="19.2307%" y="559.50"></text></g><g><title>tcache_init (8 samples, 1.41%)</title><rect x="18.9807%" y="533" width="1.4060%" height="15" fill="rgb(230,59,30)" fg:x="108" fg:w="8"/><text x="19.2307%" y="543.50"></text></g><g><title>tcache_init (8 samples, 1.41%)</title><rect x="18.9807%" y="517" width="1.4060%" height="15" fill="rgb(209,121,21)" fg:x="108" fg:w="8"/><text x="19.2307%" y="527.50"></text></g><g><title>arena_get2 (8 samples, 1.41%)</title><rect x="18.9807%" y="501" width="1.4060%" height="15" fill="rgb(220,109,13)" fg:x="108" fg:w="8"/><text x="19.2307%" y="511.50"></text></g><g><title>arena_get2 (8 samples, 1.41%)</title><rect x="18.9807%" y="485" width="1.4060%" height="15" fill="rgb(232,18,1)" fg:x="108" fg:w="8"/><text x="19.2307%" y="495.50"></text></g><g><title>_int_new_arena (8 samples, 1.41%)</title><rect x="18.9807%" y="469" width="1.4060%" height="15" fill="rgb(215,41,42)" fg:x="108" fg:w="8"/><text x="19.2307%" y="479.50"></text></g><g><title>new_heap (8 samples, 1.41%)</title><rect x="18.9807%" y="453" width="1.4060%" height="15" fill="rgb(224,123,36)" fg:x="108" fg:w="8"/><text x="19.2307%" y="463.50"></text></g><g><title>alloc_new_heap (8 samples, 1.41%)</title><rect x="18.9807%" y="437" width="1.4060%" height="15" fill="rgb(240,125,3)" fg:x="108" fg:w="8"/><text x="19.2307%" y="447.50"></text></g><g><title>__GI___mmap64 (2 samples, 0.35%)</title><rect x="20.0351%" y="421" width="0.3515%" height="15" fill="rgb(205,98,50)" fg:x="114" fg:w="2"/><text x="20.2851%" y="431.50"></text></g><g><title>__GI___mmap64 (2 samples, 0.35%)</title><rect x="20.0351%" y="405" width="0.3515%" height="15" fill="rgb(205,185,37)" fg:x="114" fg:w="2"/><text x="20.2851%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="20.0351%" y="389" width="0.3515%" height="15" fill="rgb(238,207,15)" fg:x="114" fg:w="2"/><text x="20.2851%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="20.0351%" y="373" width="0.3515%" height="15" fill="rgb(213,199,42)" fg:x="114" fg:w="2"/><text x="20.2851%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="20.0351%" y="357" width="0.3515%" height="15" fill="rgb(235,201,11)" fg:x="114" fg:w="2"/><text x="20.2851%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="20.0351%" y="341" width="0.3515%" height="15" fill="rgb(207,46,11)" fg:x="114" fg:w="2"/><text x="20.2851%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="20.0351%" y="325" width="0.3515%" height="15" fill="rgb(241,35,35)" fg:x="114" fg:w="2"/><text x="20.2851%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="20.0351%" y="309" width="0.3515%" height="15" fill="rgb(243,32,47)" fg:x="114" fg:w="2"/><text x="20.2851%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="20.0351%" y="293" width="0.3515%" height="15" fill="rgb(247,202,23)" fg:x="114" fg:w="2"/><text x="20.2851%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="20.0351%" y="277" width="0.3515%" height="15" fill="rgb(219,102,11)" fg:x="114" fg:w="2"/><text x="20.2851%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="20.2109%" y="261" width="0.1757%" height="15" fill="rgb(243,110,44)" fg:x="115" fg:w="1"/><text x="20.4609%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="20.2109%" y="245" width="0.1757%" height="15" fill="rgb(222,74,54)" fg:x="115" fg:w="1"/><text x="20.4609%" y="255.50"></text></g><g><title>[libc.so.6] (19 samples, 3.34%)</title><rect x="20.3866%" y="469" width="3.3392%" height="15" fill="rgb(216,99,12)" fg:x="116" fg:w="19"/><text x="20.6366%" y="479.50">[li..</text></g><g><title>[unknown] (19 samples, 3.34%)</title><rect x="20.3866%" y="453" width="3.3392%" height="15" fill="rgb(226,22,26)" fg:x="116" fg:w="19"/><text x="20.6366%" y="463.50">[un..</text></g><g><title>[unknown] (18 samples, 3.16%)</title><rect x="20.5624%" y="437" width="3.1634%" height="15" fill="rgb(217,163,10)" fg:x="117" fg:w="18"/><text x="20.8124%" y="447.50">[un..</text></g><g><title>[unknown] (18 samples, 3.16%)</title><rect x="20.5624%" y="421" width="3.1634%" height="15" fill="rgb(213,25,53)" fg:x="117" fg:w="18"/><text x="20.8124%" y="431.50">[un..</text></g><g><title>[unknown] (18 samples, 3.16%)</title><rect x="20.5624%" y="405" width="3.1634%" height="15" fill="rgb(252,105,26)" fg:x="117" fg:w="18"/><text x="20.8124%" y="415.50">[un..</text></g><g><title>[unknown] (13 samples, 2.28%)</title><rect x="21.4411%" y="389" width="2.2847%" height="15" fill="rgb(220,39,43)" fg:x="122" fg:w="13"/><text x="21.6911%" y="399.50">[..</text></g><g><title>[unknown] (8 samples, 1.41%)</title><rect x="22.3199%" y="373" width="1.4060%" height="15" fill="rgb(229,68,48)" fg:x="127" fg:w="8"/><text x="22.5699%" y="383.50"></text></g><g><title>[unknown] (8 samples, 1.41%)</title><rect x="22.3199%" y="357" width="1.4060%" height="15" fill="rgb(252,8,32)" fg:x="127" fg:w="8"/><text x="22.5699%" y="367.50"></text></g><g><title>[unknown] (7 samples, 1.23%)</title><rect x="22.4956%" y="341" width="1.2302%" height="15" fill="rgb(223,20,43)" fg:x="128" fg:w="7"/><text x="22.7456%" y="351.50"></text></g><g><title>[unknown] (7 samples, 1.23%)</title><rect x="22.4956%" y="325" width="1.2302%" height="15" fill="rgb(229,81,49)" fg:x="128" fg:w="7"/><text x="22.7456%" y="335.50"></text></g><g><title>[unknown] (7 samples, 1.23%)</title><rect x="22.4956%" y="309" width="1.2302%" height="15" fill="rgb(236,28,36)" fg:x="128" fg:w="7"/><text x="22.7456%" y="319.50"></text></g><g><title>[unknown] (7 samples, 1.23%)</title><rect x="22.4956%" y="293" width="1.2302%" height="15" fill="rgb(249,185,26)" fg:x="128" fg:w="7"/><text x="22.7456%" y="303.50"></text></g><g><title>[unknown] (7 samples, 1.23%)</title><rect x="22.4956%" y="277" width="1.2302%" height="15" fill="rgb(249,174,33)" fg:x="128" fg:w="7"/><text x="22.7456%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="23.3743%" y="261" width="0.3515%" height="15" fill="rgb(233,201,37)" fg:x="133" fg:w="2"/><text x="23.6243%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="23.5501%" y="245" width="0.1757%" height="15" fill="rgb(221,78,26)" fg:x="134" fg:w="1"/><text x="23.8001%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="23.5501%" y="229" width="0.1757%" height="15" fill="rgb(250,127,30)" fg:x="134" fg:w="1"/><text x="23.8001%" y="239.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="23.7258%" y="469" width="1.0545%" height="15" fill="rgb(230,49,44)" fg:x="135" fg:w="6"/><text x="23.9758%" y="479.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="23.7258%" y="453" width="1.0545%" height="15" fill="rgb(229,67,23)" fg:x="135" fg:w="6"/><text x="23.9758%" y="463.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="23.7258%" y="437" width="1.0545%" height="15" fill="rgb(249,83,47)" fg:x="135" fg:w="6"/><text x="23.9758%" y="447.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="23.7258%" y="421" width="1.0545%" height="15" fill="rgb(215,43,3)" fg:x="135" fg:w="6"/><text x="23.9758%" y="431.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="23.7258%" y="405" width="1.0545%" height="15" fill="rgb(238,154,13)" fg:x="135" fg:w="6"/><text x="23.9758%" y="415.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="23.7258%" y="389" width="1.0545%" height="15" fill="rgb(219,56,2)" fg:x="135" fg:w="6"/><text x="23.9758%" y="399.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="23.7258%" y="373" width="1.0545%" height="15" fill="rgb(233,0,4)" fg:x="135" fg:w="6"/><text x="23.9758%" y="383.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="23.7258%" y="357" width="1.0545%" height="15" fill="rgb(235,30,7)" fg:x="135" fg:w="6"/><text x="23.9758%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.88%)</title><rect x="23.9016%" y="341" width="0.8787%" height="15" fill="rgb(250,79,13)" fg:x="136" fg:w="5"/><text x="24.1516%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.88%)</title><rect x="23.9016%" y="325" width="0.8787%" height="15" fill="rgb(211,146,34)" fg:x="136" fg:w="5"/><text x="24.1516%" y="335.50"></text></g><g><title>mi_page_queue_find_free_ex (31 samples, 5.45%)</title><rect x="20.3866%" y="533" width="5.4482%" height="15" fill="rgb(228,22,38)" fg:x="116" fg:w="31"/><text x="20.6366%" y="543.50">mi_page..</text></g><g><title>mi_page_fresh_alloc (31 samples, 5.45%)</title><rect x="20.3866%" y="517" width="5.4482%" height="15" fill="rgb(235,168,5)" fg:x="116" fg:w="31"/><text x="20.6366%" y="527.50">mi_page..</text></g><g><title>mi_segments_page_alloc.constprop.1 (31 samples, 5.45%)</title><rect x="20.3866%" y="501" width="5.4482%" height="15" fill="rgb(221,155,16)" fg:x="116" fg:w="31"/><text x="20.6366%" y="511.50">mi_segm..</text></g><g><title>mi_segment_init.constprop.0 (31 samples, 5.45%)</title><rect x="20.3866%" y="485" width="5.4482%" height="15" fill="rgb(215,215,53)" fg:x="116" fg:w="31"/><text x="20.6366%" y="495.50">mi_segm..</text></g><g><title>_mi_os_commit (6 samples, 1.05%)</title><rect x="24.7803%" y="469" width="1.0545%" height="15" fill="rgb(223,4,10)" fg:x="141" fg:w="6"/><text x="25.0303%" y="479.50"></text></g><g><title>__GI___mprotect (6 samples, 1.05%)</title><rect x="24.7803%" y="453" width="1.0545%" height="15" fill="rgb(234,103,6)" fg:x="141" fg:w="6"/><text x="25.0303%" y="463.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="24.7803%" y="437" width="1.0545%" height="15" fill="rgb(227,97,0)" fg:x="141" fg:w="6"/><text x="25.0303%" y="447.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="24.7803%" y="421" width="1.0545%" height="15" fill="rgb(234,150,53)" fg:x="141" fg:w="6"/><text x="25.0303%" y="431.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="24.7803%" y="405" width="1.0545%" height="15" fill="rgb(228,201,54)" fg:x="141" fg:w="6"/><text x="25.0303%" y="415.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="24.7803%" y="389" width="1.0545%" height="15" fill="rgb(222,22,37)" fg:x="141" fg:w="6"/><text x="25.0303%" y="399.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="24.7803%" y="373" width="1.0545%" height="15" fill="rgb(237,53,32)" fg:x="141" fg:w="6"/><text x="25.0303%" y="383.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="24.7803%" y="357" width="1.0545%" height="15" fill="rgb(233,25,53)" fg:x="141" fg:w="6"/><text x="25.0303%" y="367.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="24.7803%" y="341" width="1.0545%" height="15" fill="rgb(210,40,34)" fg:x="141" fg:w="6"/><text x="25.0303%" y="351.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="24.7803%" y="325" width="1.0545%" height="15" fill="rgb(241,220,44)" fg:x="141" fg:w="6"/><text x="25.0303%" y="335.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="24.7803%" y="309" width="1.0545%" height="15" fill="rgb(235,28,35)" fg:x="141" fg:w="6"/><text x="25.0303%" y="319.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="24.7803%" y="293" width="1.0545%" height="15" fill="rgb(210,56,17)" fg:x="141" fg:w="6"/><text x="25.0303%" y="303.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="24.7803%" y="277" width="1.0545%" height="15" fill="rgb(224,130,29)" fg:x="141" fg:w="6"/><text x="25.0303%" y="287.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="24.7803%" y="261" width="1.0545%" height="15" fill="rgb(235,212,8)" fg:x="141" fg:w="6"/><text x="25.0303%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="25.6591%" y="245" width="0.1757%" height="15" fill="rgb(223,33,50)" fg:x="146" fg:w="1"/><text x="25.9091%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="25.6591%" y="229" width="0.1757%" height="15" fill="rgb(219,149,13)" fg:x="146" fg:w="1"/><text x="25.9091%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="25.6591%" y="213" width="0.1757%" height="15" fill="rgb(250,156,29)" fg:x="146" fg:w="1"/><text x="25.9091%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="25.6591%" y="197" width="0.1757%" height="15" fill="rgb(216,193,19)" fg:x="146" fg:w="1"/><text x="25.9091%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="25.6591%" y="181" width="0.1757%" height="15" fill="rgb(216,135,14)" fg:x="146" fg:w="1"/><text x="25.9091%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="25.6591%" y="165" width="0.1757%" height="15" fill="rgb(241,47,5)" fg:x="146" fg:w="1"/><text x="25.9091%" y="175.50"></text></g><g><title>_mi_malloc_generic (36 samples, 6.33%)</title><rect x="20.3866%" y="549" width="6.3269%" height="15" fill="rgb(233,42,35)" fg:x="116" fg:w="36"/><text x="20.6366%" y="559.50">_mi_mall..</text></g><g><title>mi_thread_init (5 samples, 0.88%)</title><rect x="25.8348%" y="533" width="0.8787%" height="15" fill="rgb(231,13,6)" fg:x="147" fg:w="5"/><text x="26.0848%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.88%)</title><rect x="25.8348%" y="517" width="0.8787%" height="15" fill="rgb(207,181,40)" fg:x="147" fg:w="5"/><text x="26.0848%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.88%)</title><rect x="25.8348%" y="501" width="0.8787%" height="15" fill="rgb(254,173,49)" fg:x="147" fg:w="5"/><text x="26.0848%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.88%)</title><rect x="25.8348%" y="485" width="0.8787%" height="15" fill="rgb(221,1,38)" fg:x="147" fg:w="5"/><text x="26.0848%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.88%)</title><rect x="25.8348%" y="469" width="0.8787%" height="15" fill="rgb(206,124,46)" fg:x="147" fg:w="5"/><text x="26.0848%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.88%)</title><rect x="25.8348%" y="453" width="0.8787%" height="15" fill="rgb(249,21,11)" fg:x="147" fg:w="5"/><text x="26.0848%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.88%)</title><rect x="25.8348%" y="437" width="0.8787%" height="15" fill="rgb(222,201,40)" fg:x="147" fg:w="5"/><text x="26.0848%" y="447.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1 samples, 0.18%)</title><rect x="26.7135%" y="533" width="0.1757%" height="15" fill="rgb(235,61,29)" fg:x="152" fg:w="1"/><text x="26.9635%" y="543.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (1 samples, 0.18%)</title><rect x="26.7135%" y="517" width="0.1757%" height="15" fill="rgb(219,207,3)" fg:x="152" fg:w="1"/><text x="26.9635%" y="527.50"></text></g><g><title>crossbeam_epoch::default::collector (1 samples, 0.18%)</title><rect x="26.7135%" y="501" width="0.1757%" height="15" fill="rgb(222,56,46)" fg:x="152" fg:w="1"/><text x="26.9635%" y="511.50"></text></g><g><title>crossbeam_epoch::sync::once_lock::OnceLock&lt;T&gt;::initialize (1 samples, 0.18%)</title><rect x="26.7135%" y="485" width="0.1757%" height="15" fill="rgb(239,76,54)" fg:x="152" fg:w="1"/><text x="26.9635%" y="495.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.18%)</title><rect x="26.7135%" y="469" width="0.1757%" height="15" fill="rgb(231,124,27)" fg:x="152" fg:w="1"/><text x="26.9635%" y="479.50"></text></g><g><title>&lt;crossbeam_epoch::collector::Collector as core::default::Default&gt;::default (1 samples, 0.18%)</title><rect x="26.7135%" y="453" width="0.1757%" height="15" fill="rgb(249,195,6)" fg:x="152" fg:w="1"/><text x="26.9635%" y="463.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.18%)</title><rect x="26.7135%" y="437" width="0.1757%" height="15" fill="rgb(237,174,47)" fg:x="152" fg:w="1"/><text x="26.9635%" y="447.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.18%)</title><rect x="26.7135%" y="421" width="0.1757%" height="15" fill="rgb(206,201,31)" fg:x="152" fg:w="1"/><text x="26.9635%" y="431.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.18%)</title><rect x="26.7135%" y="405" width="0.1757%" height="15" fill="rgb(231,57,52)" fg:x="152" fg:w="1"/><text x="26.9635%" y="415.50"></text></g><g><title>mi_page_free_list_extend.constprop.0 (1 samples, 0.18%)</title><rect x="26.7135%" y="389" width="0.1757%" height="15" fill="rgb(248,177,22)" fg:x="152" fg:w="1"/><text x="26.9635%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="26.7135%" y="373" width="0.1757%" height="15" fill="rgb(215,211,37)" fg:x="152" fg:w="1"/><text x="26.9635%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="26.7135%" y="357" width="0.1757%" height="15" fill="rgb(241,128,51)" fg:x="152" fg:w="1"/><text x="26.9635%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="26.7135%" y="341" width="0.1757%" height="15" fill="rgb(227,165,31)" fg:x="152" fg:w="1"/><text x="26.9635%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="26.7135%" y="325" width="0.1757%" height="15" fill="rgb(228,167,24)" fg:x="152" fg:w="1"/><text x="26.9635%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="26.7135%" y="309" width="0.1757%" height="15" fill="rgb(228,143,12)" fg:x="152" fg:w="1"/><text x="26.9635%" y="319.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (51 samples, 8.96%)</title><rect x="18.9807%" y="629" width="8.9631%" height="15" fill="rgb(249,149,8)" fg:x="108" fg:w="51"/><text x="19.2307%" y="639.50">&lt;alloc::boxed..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (51 samples, 8.96%)</title><rect x="18.9807%" y="613" width="8.9631%" height="15" fill="rgb(243,35,44)" fg:x="108" fg:w="51"/><text x="19.2307%" y="623.50">&lt;alloc::boxed..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (51 samples, 8.96%)</title><rect x="18.9807%" y="597" width="8.9631%" height="15" fill="rgb(246,89,9)" fg:x="108" fg:w="51"/><text x="19.2307%" y="607.50">core::ops::fu..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (43 samples, 7.56%)</title><rect x="20.3866%" y="581" width="7.5571%" height="15" fill="rgb(233,213,13)" fg:x="116" fg:w="43"/><text x="20.6366%" y="591.50">std::sys_c..</text></g><g><title>rayon_core::registry::ThreadBuilder::run (43 samples, 7.56%)</title><rect x="20.3866%" y="565" width="7.5571%" height="15" fill="rgb(233,141,41)" fg:x="116" fg:w="43"/><text x="20.6366%" y="575.50">rayon_core..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (7 samples, 1.23%)</title><rect x="26.7135%" y="549" width="1.2302%" height="15" fill="rgb(239,167,4)" fg:x="152" fg:w="7"/><text x="26.9635%" y="559.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (6 samples, 1.05%)</title><rect x="26.8893%" y="533" width="1.0545%" height="15" fill="rgb(209,217,16)" fg:x="153" fg:w="6"/><text x="27.1393%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (6 samples, 1.05%)</title><rect x="26.8893%" y="517" width="1.0545%" height="15" fill="rgb(219,88,35)" fg:x="153" fg:w="6"/><text x="27.1393%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (6 samples, 1.05%)</title><rect x="26.8893%" y="501" width="1.0545%" height="15" fill="rgb(220,193,23)" fg:x="153" fg:w="6"/><text x="27.1393%" y="511.50"></text></g><g><title>std::sys::unix::futex::futex_wait (6 samples, 1.05%)</title><rect x="26.8893%" y="485" width="1.0545%" height="15" fill="rgb(230,90,52)" fg:x="153" fg:w="6"/><text x="27.1393%" y="495.50"></text></g><g><title>syscall (6 samples, 1.05%)</title><rect x="26.8893%" y="469" width="1.0545%" height="15" fill="rgb(252,106,19)" fg:x="153" fg:w="6"/><text x="27.1393%" y="479.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="26.8893%" y="453" width="1.0545%" height="15" fill="rgb(206,74,20)" fg:x="153" fg:w="6"/><text x="27.1393%" y="463.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="26.8893%" y="437" width="1.0545%" height="15" fill="rgb(230,138,44)" fg:x="153" fg:w="6"/><text x="27.1393%" y="447.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="26.8893%" y="421" width="1.0545%" height="15" fill="rgb(235,182,43)" fg:x="153" fg:w="6"/><text x="27.1393%" y="431.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="26.8893%" y="405" width="1.0545%" height="15" fill="rgb(242,16,51)" fg:x="153" fg:w="6"/><text x="27.1393%" y="415.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="26.8893%" y="389" width="1.0545%" height="15" fill="rgb(248,9,4)" fg:x="153" fg:w="6"/><text x="27.1393%" y="399.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="26.8893%" y="373" width="1.0545%" height="15" fill="rgb(210,31,22)" fg:x="153" fg:w="6"/><text x="27.1393%" y="383.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="26.8893%" y="357" width="1.0545%" height="15" fill="rgb(239,54,39)" fg:x="153" fg:w="6"/><text x="27.1393%" y="367.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="26.8893%" y="341" width="1.0545%" height="15" fill="rgb(230,99,41)" fg:x="153" fg:w="6"/><text x="27.1393%" y="351.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="26.8893%" y="325" width="1.0545%" height="15" fill="rgb(253,106,12)" fg:x="153" fg:w="6"/><text x="27.1393%" y="335.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="26.8893%" y="309" width="1.0545%" height="15" fill="rgb(213,46,41)" fg:x="153" fg:w="6"/><text x="27.1393%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="27.7680%" y="293" width="0.1757%" height="15" fill="rgb(215,133,35)" fg:x="158" fg:w="1"/><text x="28.0180%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="27.7680%" y="277" width="0.1757%" height="15" fill="rgb(213,28,5)" fg:x="158" fg:w="1"/><text x="28.0180%" y="287.50"></text></g><g><title>__clone3 (63 samples, 11.07%)</title><rect x="18.9807%" y="677" width="11.0721%" height="15" fill="rgb(215,77,49)" fg:x="108" fg:w="63"/><text x="19.2307%" y="687.50">__clone3</text></g><g><title>start_thread (63 samples, 11.07%)</title><rect x="18.9807%" y="661" width="11.0721%" height="15" fill="rgb(248,100,22)" fg:x="108" fg:w="63"/><text x="19.2307%" y="671.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (63 samples, 11.07%)</title><rect x="18.9807%" y="645" width="11.0721%" height="15" fill="rgb(208,67,9)" fg:x="108" fg:w="63"/><text x="19.2307%" y="655.50">std::sys::unix::..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (12 samples, 2.11%)</title><rect x="27.9438%" y="629" width="2.1090%" height="15" fill="rgb(219,133,21)" fg:x="159" fg:w="12"/><text x="28.1938%" y="639.50">s..</text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (12 samples, 2.11%)</title><rect x="27.9438%" y="613" width="2.1090%" height="15" fill="rgb(246,46,29)" fg:x="159" fg:w="12"/><text x="28.1938%" y="623.50">s..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (12 samples, 2.11%)</title><rect x="27.9438%" y="597" width="2.1090%" height="15" fill="rgb(246,185,52)" fg:x="159" fg:w="12"/><text x="28.1938%" y="607.50">s..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (12 samples, 2.11%)</title><rect x="27.9438%" y="581" width="2.1090%" height="15" fill="rgb(252,136,11)" fg:x="159" fg:w="12"/><text x="28.1938%" y="591.50">s..</text></g><g><title>__GI___mmap64 (12 samples, 2.11%)</title><rect x="27.9438%" y="565" width="2.1090%" height="15" fill="rgb(219,138,53)" fg:x="159" fg:w="12"/><text x="28.1938%" y="575.50">_..</text></g><g><title>__GI___mmap64 (12 samples, 2.11%)</title><rect x="27.9438%" y="549" width="2.1090%" height="15" fill="rgb(211,51,23)" fg:x="159" fg:w="12"/><text x="28.1938%" y="559.50">_..</text></g><g><title>[unknown] (12 samples, 2.11%)</title><rect x="27.9438%" y="533" width="2.1090%" height="15" fill="rgb(247,221,28)" fg:x="159" fg:w="12"/><text x="28.1938%" y="543.50">[..</text></g><g><title>[unknown] (12 samples, 2.11%)</title><rect x="27.9438%" y="517" width="2.1090%" height="15" fill="rgb(251,222,45)" fg:x="159" fg:w="12"/><text x="28.1938%" y="527.50">[..</text></g><g><title>[unknown] (12 samples, 2.11%)</title><rect x="27.9438%" y="501" width="2.1090%" height="15" fill="rgb(217,162,53)" fg:x="159" fg:w="12"/><text x="28.1938%" y="511.50">[..</text></g><g><title>[unknown] (12 samples, 2.11%)</title><rect x="27.9438%" y="485" width="2.1090%" height="15" fill="rgb(229,93,14)" fg:x="159" fg:w="12"/><text x="28.1938%" y="495.50">[..</text></g><g><title>[unknown] (12 samples, 2.11%)</title><rect x="27.9438%" y="469" width="2.1090%" height="15" fill="rgb(209,67,49)" fg:x="159" fg:w="12"/><text x="28.1938%" y="479.50">[..</text></g><g><title>[unknown] (12 samples, 2.11%)</title><rect x="27.9438%" y="453" width="2.1090%" height="15" fill="rgb(213,87,29)" fg:x="159" fg:w="12"/><text x="28.1938%" y="463.50">[..</text></g><g><title>[unknown] (12 samples, 2.11%)</title><rect x="27.9438%" y="437" width="2.1090%" height="15" fill="rgb(205,151,52)" fg:x="159" fg:w="12"/><text x="28.1938%" y="447.50">[..</text></g><g><title>[unknown] (11 samples, 1.93%)</title><rect x="28.1195%" y="421" width="1.9332%" height="15" fill="rgb(253,215,39)" fg:x="160" fg:w="11"/><text x="28.3695%" y="431.50">[..</text></g><g><title>[unknown] (9 samples, 1.58%)</title><rect x="28.4710%" y="405" width="1.5817%" height="15" fill="rgb(221,220,41)" fg:x="162" fg:w="9"/><text x="28.7210%" y="415.50"></text></g><g><title>[unknown] (8 samples, 1.41%)</title><rect x="28.6467%" y="389" width="1.4060%" height="15" fill="rgb(218,133,21)" fg:x="163" fg:w="8"/><text x="28.8967%" y="399.50"></text></g><g><title>[unknown] (6 samples, 1.05%)</title><rect x="28.9982%" y="373" width="1.0545%" height="15" fill="rgb(221,193,43)" fg:x="165" fg:w="6"/><text x="29.2482%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.88%)</title><rect x="29.1740%" y="357" width="0.8787%" height="15" fill="rgb(240,128,52)" fg:x="166" fg:w="5"/><text x="29.4240%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.88%)</title><rect x="29.1740%" y="341" width="0.8787%" height="15" fill="rgb(253,114,12)" fg:x="166" fg:w="5"/><text x="29.4240%" y="351.50"></text></g><g><title>__GI_exit (3 samples, 0.53%)</title><rect x="30.0527%" y="629" width="0.5272%" height="15" fill="rgb(215,223,47)" fg:x="171" fg:w="3"/><text x="30.3027%" y="639.50"></text></g><g><title>__run_exit_handlers (3 samples, 0.53%)</title><rect x="30.0527%" y="613" width="0.5272%" height="15" fill="rgb(248,225,23)" fg:x="171" fg:w="3"/><text x="30.3027%" y="623.50"></text></g><g><title>mi_process_done (3 samples, 0.53%)</title><rect x="30.0527%" y="597" width="0.5272%" height="15" fill="rgb(250,108,0)" fg:x="171" fg:w="3"/><text x="30.3027%" y="607.50"></text></g><g><title>mi_heap_collect_ex (3 samples, 0.53%)</title><rect x="30.0527%" y="581" width="0.5272%" height="15" fill="rgb(228,208,7)" fg:x="171" fg:w="3"/><text x="30.3027%" y="591.50"></text></g><g><title>mi_segment_cache_purge (3 samples, 0.53%)</title><rect x="30.0527%" y="565" width="0.5272%" height="15" fill="rgb(244,45,10)" fg:x="171" fg:w="3"/><text x="30.3027%" y="575.50"></text></g><g><title>mi_commit_mask_decommit.constprop.0 (3 samples, 0.53%)</title><rect x="30.0527%" y="549" width="0.5272%" height="15" fill="rgb(207,125,25)" fg:x="171" fg:w="3"/><text x="30.3027%" y="559.50"></text></g><g><title>_mi_os_decommit (3 samples, 0.53%)</title><rect x="30.0527%" y="533" width="0.5272%" height="15" fill="rgb(210,195,18)" fg:x="171" fg:w="3"/><text x="30.3027%" y="543.50"></text></g><g><title>__GI_madvise (3 samples, 0.53%)</title><rect x="30.0527%" y="517" width="0.5272%" height="15" fill="rgb(249,80,12)" fg:x="171" fg:w="3"/><text x="30.3027%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.53%)</title><rect x="30.0527%" y="501" width="0.5272%" height="15" fill="rgb(221,65,9)" fg:x="171" fg:w="3"/><text x="30.3027%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.53%)</title><rect x="30.0527%" y="485" width="0.5272%" height="15" fill="rgb(235,49,36)" fg:x="171" fg:w="3"/><text x="30.3027%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.53%)</title><rect x="30.0527%" y="469" width="0.5272%" height="15" fill="rgb(225,32,20)" fg:x="171" fg:w="3"/><text x="30.3027%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.53%)</title><rect x="30.0527%" y="453" width="0.5272%" height="15" fill="rgb(215,141,46)" fg:x="171" fg:w="3"/><text x="30.3027%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.53%)</title><rect x="30.0527%" y="437" width="0.5272%" height="15" fill="rgb(250,160,47)" fg:x="171" fg:w="3"/><text x="30.3027%" y="447.50"></text></g><g><title>[unknown] (3 samples, 0.53%)</title><rect x="30.0527%" y="421" width="0.5272%" height="15" fill="rgb(216,222,40)" fg:x="171" fg:w="3"/><text x="30.3027%" y="431.50"></text></g><g><title>[unknown] (3 samples, 0.53%)</title><rect x="30.0527%" y="405" width="0.5272%" height="15" fill="rgb(234,217,39)" fg:x="171" fg:w="3"/><text x="30.3027%" y="415.50"></text></g><g><title>[unknown] (3 samples, 0.53%)</title><rect x="30.0527%" y="389" width="0.5272%" height="15" fill="rgb(207,178,40)" fg:x="171" fg:w="3"/><text x="30.3027%" y="399.50"></text></g><g><title>[unknown] (3 samples, 0.53%)</title><rect x="30.0527%" y="373" width="0.5272%" height="15" fill="rgb(221,136,13)" fg:x="171" fg:w="3"/><text x="30.3027%" y="383.50"></text></g><g><title>[unknown] (3 samples, 0.53%)</title><rect x="30.0527%" y="357" width="0.5272%" height="15" fill="rgb(249,199,10)" fg:x="171" fg:w="3"/><text x="30.3027%" y="367.50"></text></g><g><title>[unknown] (3 samples, 0.53%)</title><rect x="30.0527%" y="341" width="0.5272%" height="15" fill="rgb(249,222,13)" fg:x="171" fg:w="3"/><text x="30.3027%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="30.2285%" y="325" width="0.3515%" height="15" fill="rgb(244,185,38)" fg:x="172" fg:w="2"/><text x="30.4785%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="30.2285%" y="309" width="0.3515%" height="15" fill="rgb(236,202,9)" fg:x="172" fg:w="2"/><text x="30.4785%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="30.2285%" y="293" width="0.3515%" height="15" fill="rgb(250,229,37)" fg:x="172" fg:w="2"/><text x="30.4785%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="30.2285%" y="277" width="0.3515%" height="15" fill="rgb(206,174,23)" fg:x="172" fg:w="2"/><text x="30.4785%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="30.4042%" y="261" width="0.1757%" height="15" fill="rgb(211,33,43)" fg:x="173" fg:w="1"/><text x="30.6542%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="30.4042%" y="245" width="0.1757%" height="15" fill="rgb(245,58,50)" fg:x="173" fg:w="1"/><text x="30.6542%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="30.4042%" y="229" width="0.1757%" height="15" fill="rgb(244,68,36)" fg:x="173" fg:w="1"/><text x="30.6542%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="30.4042%" y="213" width="0.1757%" height="15" fill="rgb(232,229,15)" fg:x="173" fg:w="1"/><text x="30.6542%" y="223.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.35%)</title><rect x="30.5800%" y="373" width="0.3515%" height="15" fill="rgb(254,30,23)" fg:x="174" fg:w="2"/><text x="30.8300%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;csgoproto::netmessages::CSVCMsg_SendTable&gt; (2 samples, 0.35%)</title><rect x="30.5800%" y="357" width="0.3515%" height="15" fill="rgb(235,160,14)" fg:x="174" fg:w="2"/><text x="30.8300%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;csgoproto::netmessages::csvcmsg_send_table::Sendprop_t&gt; (2 samples, 0.35%)</title><rect x="30.5800%" y="341" width="0.3515%" height="15" fill="rgb(212,155,44)" fg:x="174" fg:w="2"/><text x="30.8300%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u16,demoparser::parsing::demo_parsing::data_table::ServerClass)&gt; (10 samples, 1.76%)</title><rect x="30.9315%" y="373" width="1.7575%" height="15" fill="rgb(226,2,50)" fg:x="176" fg:w="10"/><text x="31.1815%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::entities::Prop&gt; (10 samples, 1.76%)</title><rect x="30.9315%" y="357" width="1.7575%" height="15" fill="rgb(234,177,6)" fg:x="176" fg:w="10"/><text x="31.1815%" y="367.50"></text></g><g><title>mi_free (3 samples, 0.53%)</title><rect x="32.1617%" y="341" width="0.5272%" height="15" fill="rgb(217,24,9)" fg:x="183" fg:w="3"/><text x="32.4117%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 1.76%)</title><rect x="32.6889%" y="357" width="1.7575%" height="15" fill="rgb(220,13,46)" fg:x="186" fg:w="10"/><text x="32.9389%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="34.2707%" y="341" width="0.1757%" height="15" fill="rgb(239,221,27)" fg:x="195" fg:w="1"/><text x="34.5207%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser::Parser&gt; (28 samples, 4.92%)</title><rect x="30.5800%" y="389" width="4.9209%" height="15" fill="rgb(222,198,25)" fg:x="174" fg:w="28"/><text x="30.8300%" y="399.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser_settings::ParserState&gt; (16 samples, 2.81%)</title><rect x="32.6889%" y="373" width="2.8120%" height="15" fill="rgb(211,99,13)" fg:x="186" fg:w="16"/><text x="32.9389%" y="383.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;(i32,demoparser::parsing::demo_parsing::entities::Entity)&gt; (6 samples, 1.05%)</title><rect x="34.4464%" y="357" width="1.0545%" height="15" fill="rgb(232,111,31)" fg:x="196" fg:w="6"/><text x="34.6964%" y="367.50"></text></g><g><title>_mi_segment_page_free (1 samples, 0.18%)</title><rect x="35.3251%" y="341" width="0.1757%" height="15" fill="rgb(245,82,37)" fg:x="201" fg:w="1"/><text x="35.5751%" y="351.50"></text></g><g><title>mi_segment_span_free_coalesce (1 samples, 0.18%)</title><rect x="35.3251%" y="325" width="0.1757%" height="15" fill="rgb(227,149,46)" fg:x="201" fg:w="1"/><text x="35.5751%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.18%)</title><rect x="36.0281%" y="277" width="0.1757%" height="15" fill="rgb(218,36,50)" fg:x="205" fg:w="1"/><text x="36.2781%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.18%)</title><rect x="36.0281%" y="261" width="0.1757%" height="15" fill="rgb(226,80,48)" fg:x="205" fg:w="1"/><text x="36.2781%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.18%)</title><rect x="36.0281%" y="245" width="0.1757%" height="15" fill="rgb(238,224,15)" fg:x="205" fg:w="1"/><text x="36.2781%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.18%)</title><rect x="36.0281%" y="229" width="0.1757%" height="15" fill="rgb(241,136,10)" fg:x="205" fg:w="1"/><text x="36.2781%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.18%)</title><rect x="36.0281%" y="213" width="0.1757%" height="15" fill="rgb(208,32,45)" fg:x="205" fg:w="1"/><text x="36.2781%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.18%)</title><rect x="36.0281%" y="197" width="0.1757%" height="15" fill="rgb(207,135,9)" fg:x="205" fg:w="1"/><text x="36.2781%" y="207.50"></text></g><g><title>__rust_alloc (1 samples, 0.18%)</title><rect x="36.0281%" y="181" width="0.1757%" height="15" fill="rgb(206,86,44)" fg:x="205" fg:w="1"/><text x="36.2781%" y="191.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.35%)</title><rect x="36.0281%" y="357" width="0.3515%" height="15" fill="rgb(245,177,15)" fg:x="205" fg:w="2"/><text x="36.2781%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.35%)</title><rect x="36.0281%" y="341" width="0.3515%" height="15" fill="rgb(206,64,50)" fg:x="205" fg:w="2"/><text x="36.2781%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.35%)</title><rect x="36.0281%" y="325" width="0.3515%" height="15" fill="rgb(234,36,40)" fg:x="205" fg:w="2"/><text x="36.2781%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.35%)</title><rect x="36.0281%" y="309" width="0.3515%" height="15" fill="rgb(213,64,8)" fg:x="205" fg:w="2"/><text x="36.2781%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.35%)</title><rect x="36.0281%" y="293" width="0.3515%" height="15" fill="rgb(210,75,36)" fg:x="205" fg:w="2"/><text x="36.2781%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.18%)</title><rect x="36.2039%" y="277" width="0.1757%" height="15" fill="rgb(229,88,21)" fg:x="206" fg:w="1"/><text x="36.4539%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.18%)</title><rect x="36.2039%" y="261" width="0.1757%" height="15" fill="rgb(252,204,47)" fg:x="206" fg:w="1"/><text x="36.4539%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.18%)</title><rect x="36.2039%" y="245" width="0.1757%" height="15" fill="rgb(208,77,27)" fg:x="206" fg:w="1"/><text x="36.4539%" y="255.50"></text></g><g><title>alloc::slice::merge_sort (1 samples, 0.18%)</title><rect x="36.3796%" y="357" width="0.1757%" height="15" fill="rgb(221,76,26)" fg:x="207" fg:w="1"/><text x="36.6296%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.18%)</title><rect x="36.7311%" y="341" width="0.1757%" height="15" fill="rgb(225,139,18)" fg:x="209" fg:w="1"/><text x="36.9811%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.18%)</title><rect x="36.7311%" y="325" width="0.1757%" height="15" fill="rgb(230,137,11)" fg:x="209" fg:w="1"/><text x="36.9811%" y="335.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.18%)</title><rect x="36.7311%" y="309" width="0.1757%" height="15" fill="rgb(212,28,1)" fg:x="209" fg:w="1"/><text x="36.9811%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.18%)</title><rect x="36.7311%" y="293" width="0.1757%" height="15" fill="rgb(248,164,17)" fg:x="209" fg:w="1"/><text x="36.9811%" y="303.50"></text></g><g><title>demoparser::parsing::cache::cache_reader::ReadCache::get_eid_cls_map (4 samples, 0.70%)</title><rect x="36.5554%" y="357" width="0.7030%" height="15" fill="rgb(222,171,42)" fg:x="208" fg:w="4"/><text x="36.8054%" y="367.50"></text></g><g><title>demoparser::parsing::cache::cache_reader::ReadCache::read_bytes_from_index (2 samples, 0.35%)</title><rect x="36.9069%" y="341" width="0.3515%" height="15" fill="rgb(243,84,45)" fg:x="210" fg:w="2"/><text x="37.1569%" y="351.50"></text></g><g><title>std::io::default_read_to_end (2 samples, 0.35%)</title><rect x="36.9069%" y="325" width="0.3515%" height="15" fill="rgb(252,49,23)" fg:x="210" fg:w="2"/><text x="37.1569%" y="335.50"></text></g><g><title>flate2::zio::read (2 samples, 0.35%)</title><rect x="36.9069%" y="309" width="0.3515%" height="15" fill="rgb(215,19,7)" fg:x="210" fg:w="2"/><text x="37.1569%" y="319.50"></text></g><g><title>&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (2 samples, 0.35%)</title><rect x="36.9069%" y="293" width="0.3515%" height="15" fill="rgb(238,81,41)" fg:x="210" fg:w="2"/><text x="37.1569%" y="303.50"></text></g><g><title>miniz_oxide::inflate::stream::inflate (2 samples, 0.35%)</title><rect x="36.9069%" y="277" width="0.3515%" height="15" fill="rgb(210,199,37)" fg:x="210" fg:w="2"/><text x="37.1569%" y="287.50"></text></g><g><title>miniz_oxide::inflate::core::decompress (2 samples, 0.35%)</title><rect x="36.9069%" y="261" width="0.3515%" height="15" fill="rgb(244,192,49)" fg:x="210" fg:w="2"/><text x="37.1569%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (31 samples, 5.45%)</title><rect x="39.3673%" y="341" width="5.4482%" height="15" fill="rgb(226,211,11)" fg:x="224" fg:w="31"/><text x="39.6173%" y="351.50">&lt;alloc:..</text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="44.8155%" y="341" width="0.1757%" height="15" fill="rgb(236,162,54)" fg:x="255" fg:w="1"/><text x="45.0655%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="44.8155%" y="325" width="0.1757%" height="15" fill="rgb(220,229,9)" fg:x="255" fg:w="1"/><text x="45.0655%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="44.8155%" y="309" width="0.1757%" height="15" fill="rgb(250,87,22)" fg:x="255" fg:w="1"/><text x="45.0655%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="44.8155%" y="293" width="0.1757%" height="15" fill="rgb(239,43,17)" fg:x="255" fg:w="1"/><text x="45.0655%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 1.05%)</title><rect x="44.9912%" y="341" width="1.0545%" height="15" fill="rgb(231,177,25)" fg:x="256" fg:w="6"/><text x="45.2412%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 1.05%)</title><rect x="44.9912%" y="325" width="1.0545%" height="15" fill="rgb(219,179,1)" fg:x="256" fg:w="6"/><text x="45.2412%" y="335.50"></text></g><g><title>_mi_heap_realloc_zero (6 samples, 1.05%)</title><rect x="44.9912%" y="309" width="1.0545%" height="15" fill="rgb(238,219,53)" fg:x="256" fg:w="6"/><text x="45.2412%" y="319.50"></text></g><g><title>[libc.so.6] (6 samples, 1.05%)</title><rect x="44.9912%" y="293" width="1.0545%" height="15" fill="rgb(232,167,36)" fg:x="256" fg:w="6"/><text x="45.2412%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="45.8699%" y="277" width="0.1757%" height="15" fill="rgb(244,19,51)" fg:x="261" fg:w="1"/><text x="46.1199%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="45.8699%" y="261" width="0.1757%" height="15" fill="rgb(224,6,22)" fg:x="261" fg:w="1"/><text x="46.1199%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="45.8699%" y="245" width="0.1757%" height="15" fill="rgb(224,145,5)" fg:x="261" fg:w="1"/><text x="46.1199%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="45.8699%" y="229" width="0.1757%" height="15" fill="rgb(234,130,49)" fg:x="261" fg:w="1"/><text x="46.1199%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="45.8699%" y="213" width="0.1757%" height="15" fill="rgb(254,6,2)" fg:x="261" fg:w="1"/><text x="46.1199%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="45.8699%" y="197" width="0.1757%" height="15" fill="rgb(208,96,46)" fg:x="261" fg:w="1"/><text x="46.1199%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="45.8699%" y="181" width="0.1757%" height="15" fill="rgb(239,3,39)" fg:x="261" fg:w="1"/><text x="46.1199%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="45.8699%" y="165" width="0.1757%" height="15" fill="rgb(233,210,1)" fg:x="261" fg:w="1"/><text x="46.1199%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="45.8699%" y="149" width="0.1757%" height="15" fill="rgb(244,137,37)" fg:x="261" fg:w="1"/><text x="46.1199%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="45.8699%" y="133" width="0.1757%" height="15" fill="rgb(240,136,2)" fg:x="261" fg:w="1"/><text x="46.1199%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="45.8699%" y="117" width="0.1757%" height="15" fill="rgb(239,18,37)" fg:x="261" fg:w="1"/><text x="46.1199%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="45.8699%" y="101" width="0.1757%" height="15" fill="rgb(218,185,22)" fg:x="261" fg:w="1"/><text x="46.1199%" y="111.50"></text></g><g><title>[libc.so.6] (4 samples, 0.70%)</title><rect x="46.0457%" y="309" width="0.7030%" height="15" fill="rgb(225,218,4)" fg:x="262" fg:w="4"/><text x="46.2957%" y="319.50"></text></g><g><title>[unknown] (3 samples, 0.53%)</title><rect x="46.2214%" y="293" width="0.5272%" height="15" fill="rgb(230,182,32)" fg:x="263" fg:w="3"/><text x="46.4714%" y="303.50"></text></g><g><title>[unknown] (3 samples, 0.53%)</title><rect x="46.2214%" y="277" width="0.5272%" height="15" fill="rgb(242,56,43)" fg:x="263" fg:w="3"/><text x="46.4714%" y="287.50"></text></g><g><title>[unknown] (3 samples, 0.53%)</title><rect x="46.2214%" y="261" width="0.5272%" height="15" fill="rgb(233,99,24)" fg:x="263" fg:w="3"/><text x="46.4714%" y="271.50"></text></g><g><title>[unknown] (3 samples, 0.53%)</title><rect x="46.2214%" y="245" width="0.5272%" height="15" fill="rgb(234,209,42)" fg:x="263" fg:w="3"/><text x="46.4714%" y="255.50"></text></g><g><title>[unknown] (3 samples, 0.53%)</title><rect x="46.2214%" y="229" width="0.5272%" height="15" fill="rgb(227,7,12)" fg:x="263" fg:w="3"/><text x="46.4714%" y="239.50"></text></g><g><title>[unknown] (3 samples, 0.53%)</title><rect x="46.2214%" y="213" width="0.5272%" height="15" fill="rgb(245,203,43)" fg:x="263" fg:w="3"/><text x="46.4714%" y="223.50"></text></g><g><title>[unknown] (3 samples, 0.53%)</title><rect x="46.2214%" y="197" width="0.5272%" height="15" fill="rgb(238,205,33)" fg:x="263" fg:w="3"/><text x="46.4714%" y="207.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="46.3972%" y="181" width="0.3515%" height="15" fill="rgb(231,56,7)" fg:x="264" fg:w="2"/><text x="46.6472%" y="191.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="46.3972%" y="165" width="0.3515%" height="15" fill="rgb(244,186,29)" fg:x="264" fg:w="2"/><text x="46.6472%" y="175.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="46.3972%" y="149" width="0.3515%" height="15" fill="rgb(234,111,31)" fg:x="264" fg:w="2"/><text x="46.6472%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="46.5729%" y="133" width="0.1757%" height="15" fill="rgb(241,149,10)" fg:x="265" fg:w="1"/><text x="46.8229%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="46.5729%" y="117" width="0.1757%" height="15" fill="rgb(249,206,44)" fg:x="265" fg:w="1"/><text x="46.8229%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="46.5729%" y="101" width="0.1757%" height="15" fill="rgb(251,153,30)" fg:x="265" fg:w="1"/><text x="46.8229%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="46.5729%" y="85" width="0.1757%" height="15" fill="rgb(239,152,38)" fg:x="265" fg:w="1"/><text x="46.8229%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.70%)</title><rect x="46.7487%" y="309" width="0.7030%" height="15" fill="rgb(249,139,47)" fg:x="266" fg:w="4"/><text x="46.9987%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.70%)</title><rect x="46.7487%" y="293" width="0.7030%" height="15" fill="rgb(244,64,35)" fg:x="266" fg:w="4"/><text x="46.9987%" y="303.50"></text></g><g><title>_mi_heap_realloc_zero (4 samples, 0.70%)</title><rect x="46.7487%" y="277" width="0.7030%" height="15" fill="rgb(216,46,15)" fg:x="266" fg:w="4"/><text x="46.9987%" y="287.50"></text></g><g><title>[libc.so.6] (4 samples, 0.70%)</title><rect x="46.7487%" y="261" width="0.7030%" height="15" fill="rgb(250,74,19)" fg:x="266" fg:w="4"/><text x="46.9987%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="47.2759%" y="245" width="0.1757%" height="15" fill="rgb(249,42,33)" fg:x="269" fg:w="1"/><text x="47.5259%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="47.2759%" y="229" width="0.1757%" height="15" fill="rgb(242,149,17)" fg:x="269" fg:w="1"/><text x="47.5259%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="47.2759%" y="213" width="0.1757%" height="15" fill="rgb(244,29,21)" fg:x="269" fg:w="1"/><text x="47.5259%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="47.2759%" y="197" width="0.1757%" height="15" fill="rgb(220,130,37)" fg:x="269" fg:w="1"/><text x="47.5259%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="47.2759%" y="181" width="0.1757%" height="15" fill="rgb(211,67,2)" fg:x="269" fg:w="1"/><text x="47.5259%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="47.2759%" y="165" width="0.1757%" height="15" fill="rgb(235,68,52)" fg:x="269" fg:w="1"/><text x="47.5259%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="47.2759%" y="149" width="0.1757%" height="15" fill="rgb(246,142,3)" fg:x="269" fg:w="1"/><text x="47.5259%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="47.2759%" y="133" width="0.1757%" height="15" fill="rgb(241,25,7)" fg:x="269" fg:w="1"/><text x="47.5259%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="47.2759%" y="117" width="0.1757%" height="15" fill="rgb(242,119,39)" fg:x="269" fg:w="1"/><text x="47.5259%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="47.2759%" y="101" width="0.1757%" height="15" fill="rgb(241,98,45)" fg:x="269" fg:w="1"/><text x="47.5259%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="47.2759%" y="85" width="0.1757%" height="15" fill="rgb(254,28,30)" fg:x="269" fg:w="1"/><text x="47.5259%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="47.2759%" y="69" width="0.1757%" height="15" fill="rgb(241,142,54)" fg:x="269" fg:w="1"/><text x="47.5259%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="47.2759%" y="53" width="0.1757%" height="15" fill="rgb(222,85,15)" fg:x="269" fg:w="1"/><text x="47.5259%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="47.2759%" y="37" width="0.1757%" height="15" fill="rgb(210,85,47)" fg:x="269" fg:w="1"/><text x="47.5259%" y="47.50"></text></g><g><title>[libc.so.6] (3 samples, 0.53%)</title><rect x="47.4517%" y="261" width="0.5272%" height="15" fill="rgb(224,206,25)" fg:x="270" fg:w="3"/><text x="47.7017%" y="271.50"></text></g><g><title>adler::Adler32::write_slice (3 samples, 0.53%)</title><rect x="50.6151%" y="245" width="0.5272%" height="15" fill="rgb(243,201,19)" fg:x="288" fg:w="3"/><text x="50.8651%" y="255.50"></text></g><g><title>miniz_oxide::inflate::core::apply_match (5 samples, 0.88%)</title><rect x="51.1424%" y="245" width="0.8787%" height="15" fill="rgb(236,59,4)" fg:x="291" fg:w="5"/><text x="51.3924%" y="255.50"></text></g><g><title>demoparser::parsing::cache::cache_reader::ReadCache::read_by_id_players (99 samples, 17.40%)</title><rect x="37.2583%" y="357" width="17.3989%" height="15" fill="rgb(254,179,45)" fg:x="212" fg:w="99"/><text x="37.5083%" y="367.50">demoparser::parsing::cache:..</text></g><g><title>demoparser::parsing::cache::cache_reader::ReadCache::read_bytes_from_index (49 samples, 8.61%)</title><rect x="46.0457%" y="341" width="8.6116%" height="15" fill="rgb(226,14,10)" fg:x="262" fg:w="49"/><text x="46.2957%" y="351.50">demoparser::..</text></g><g><title>std::io::default_read_to_end (49 samples, 8.61%)</title><rect x="46.0457%" y="325" width="8.6116%" height="15" fill="rgb(244,27,41)" fg:x="262" fg:w="49"/><text x="46.2957%" y="335.50">std::io::def..</text></g><g><title>flate2::zio::read (41 samples, 7.21%)</title><rect x="47.4517%" y="309" width="7.2056%" height="15" fill="rgb(235,35,32)" fg:x="270" fg:w="41"/><text x="47.7017%" y="319.50">flate2::zi..</text></g><g><title>&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (41 samples, 7.21%)</title><rect x="47.4517%" y="293" width="7.2056%" height="15" fill="rgb(218,68,31)" fg:x="270" fg:w="41"/><text x="47.7017%" y="303.50">&lt;flate2::f..</text></g><g><title>miniz_oxide::inflate::stream::inflate (41 samples, 7.21%)</title><rect x="47.4517%" y="277" width="7.2056%" height="15" fill="rgb(207,120,37)" fg:x="270" fg:w="41"/><text x="47.7017%" y="287.50">miniz_oxid..</text></g><g><title>miniz_oxide::inflate::core::decompress (38 samples, 6.68%)</title><rect x="47.9789%" y="261" width="6.6784%" height="15" fill="rgb(227,98,0)" fg:x="273" fg:w="38"/><text x="48.2289%" y="271.50">miniz_oxi..</text></g><g><title>miniz_oxide::inflate::core::transfer (15 samples, 2.64%)</title><rect x="52.0211%" y="245" width="2.6362%" height="15" fill="rgb(207,7,3)" fg:x="296" fg:w="15"/><text x="52.2711%" y="255.50">mi..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.18%)</title><rect x="55.3603%" y="341" width="0.1757%" height="15" fill="rgb(206,98,19)" fg:x="315" fg:w="1"/><text x="55.6103%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.53%)</title><rect x="55.5360%" y="341" width="0.5272%" height="15" fill="rgb(217,5,26)" fg:x="316" fg:w="3"/><text x="55.7860%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.18%)</title><rect x="55.8875%" y="325" width="0.1757%" height="15" fill="rgb(235,190,38)" fg:x="318" fg:w="1"/><text x="56.1375%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.18%)</title><rect x="55.8875%" y="309" width="0.1757%" height="15" fill="rgb(247,86,24)" fg:x="318" fg:w="1"/><text x="56.1375%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.18%)</title><rect x="55.8875%" y="293" width="0.1757%" height="15" fill="rgb(205,101,16)" fg:x="318" fg:w="1"/><text x="56.1375%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.18%)</title><rect x="55.8875%" y="277" width="0.1757%" height="15" fill="rgb(246,168,33)" fg:x="318" fg:w="1"/><text x="56.1375%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.18%)</title><rect x="55.8875%" y="261" width="0.1757%" height="15" fill="rgb(231,114,1)" fg:x="318" fg:w="1"/><text x="56.1375%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.18%)</title><rect x="55.8875%" y="245" width="0.1757%" height="15" fill="rgb(207,184,53)" fg:x="318" fg:w="1"/><text x="56.1375%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.18%)</title><rect x="55.8875%" y="229" width="0.1757%" height="15" fill="rgb(224,95,51)" fg:x="318" fg:w="1"/><text x="56.1375%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.18%)</title><rect x="56.0633%" y="309" width="0.1757%" height="15" fill="rgb(212,188,45)" fg:x="319" fg:w="1"/><text x="56.3133%" y="319.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.35%)</title><rect x="56.0633%" y="341" width="0.3515%" height="15" fill="rgb(223,154,38)" fg:x="319" fg:w="2"/><text x="56.3133%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.35%)</title><rect x="56.0633%" y="325" width="0.3515%" height="15" fill="rgb(251,22,52)" fg:x="319" fg:w="2"/><text x="56.3133%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.18%)</title><rect x="56.2390%" y="309" width="0.1757%" height="15" fill="rgb(229,209,22)" fg:x="320" fg:w="1"/><text x="56.4890%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="56.4148%" y="341" width="0.1757%" height="15" fill="rgb(234,138,34)" fg:x="321" fg:w="1"/><text x="56.6648%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="56.4148%" y="325" width="0.1757%" height="15" fill="rgb(212,95,11)" fg:x="321" fg:w="1"/><text x="56.6648%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="56.4148%" y="309" width="0.1757%" height="15" fill="rgb(240,179,47)" fg:x="321" fg:w="1"/><text x="56.6648%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="56.4148%" y="293" width="0.1757%" height="15" fill="rgb(240,163,11)" fg:x="321" fg:w="1"/><text x="56.6648%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="56.4148%" y="277" width="0.1757%" height="15" fill="rgb(236,37,12)" fg:x="321" fg:w="1"/><text x="56.6648%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="56.4148%" y="261" width="0.1757%" height="15" fill="rgb(232,164,16)" fg:x="321" fg:w="1"/><text x="56.6648%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="56.4148%" y="245" width="0.1757%" height="15" fill="rgb(244,205,15)" fg:x="321" fg:w="1"/><text x="56.6648%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="56.4148%" y="229" width="0.1757%" height="15" fill="rgb(223,117,47)" fg:x="321" fg:w="1"/><text x="56.6648%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="56.4148%" y="213" width="0.1757%" height="15" fill="rgb(244,107,35)" fg:x="321" fg:w="1"/><text x="56.6648%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="56.4148%" y="197" width="0.1757%" height="15" fill="rgb(205,140,8)" fg:x="321" fg:w="1"/><text x="56.6648%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="56.4148%" y="181" width="0.1757%" height="15" fill="rgb(228,84,46)" fg:x="321" fg:w="1"/><text x="56.6648%" y="191.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_excl_props (2 samples, 0.35%)</title><rect x="56.5905%" y="341" width="0.3515%" height="15" fill="rgb(254,188,9)" fg:x="322" fg:w="2"/><text x="56.8405%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.18%)</title><rect x="56.7663%" y="325" width="0.1757%" height="15" fill="rgb(206,112,54)" fg:x="323" fg:w="1"/><text x="57.0163%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.88%)</title><rect x="58.8752%" y="325" width="0.8787%" height="15" fill="rgb(216,84,49)" fg:x="335" fg:w="5"/><text x="59.1252%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.88%)</title><rect x="58.8752%" y="309" width="0.8787%" height="15" fill="rgb(214,194,35)" fg:x="335" fg:w="5"/><text x="59.1252%" y="319.50"></text></g><g><title>_mi_heap_realloc_zero (4 samples, 0.70%)</title><rect x="59.0510%" y="293" width="0.7030%" height="15" fill="rgb(249,28,3)" fg:x="336" fg:w="4"/><text x="59.3010%" y="303.50"></text></g><g><title>[libc.so.6] (4 samples, 0.70%)</title><rect x="59.0510%" y="277" width="0.7030%" height="15" fill="rgb(222,56,52)" fg:x="336" fg:w="4"/><text x="59.3010%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.18%)</title><rect x="62.3902%" y="309" width="0.1757%" height="15" fill="rgb(245,217,50)" fg:x="355" fg:w="1"/><text x="62.6402%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.18%)</title><rect x="62.3902%" y="293" width="0.1757%" height="15" fill="rgb(213,201,24)" fg:x="355" fg:w="1"/><text x="62.6402%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.18%)</title><rect x="62.3902%" y="277" width="0.1757%" height="15" fill="rgb(248,116,28)" fg:x="355" fg:w="1"/><text x="62.6402%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.18%)</title><rect x="62.3902%" y="261" width="0.1757%" height="15" fill="rgb(219,72,43)" fg:x="355" fg:w="1"/><text x="62.6402%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.18%)</title><rect x="62.3902%" y="245" width="0.1757%" height="15" fill="rgb(209,138,14)" fg:x="355" fg:w="1"/><text x="62.6402%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.18%)</title><rect x="62.3902%" y="229" width="0.1757%" height="15" fill="rgb(222,18,33)" fg:x="355" fg:w="1"/><text x="62.6402%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.18%)</title><rect x="62.3902%" y="213" width="0.1757%" height="15" fill="rgb(213,199,7)" fg:x="355" fg:w="1"/><text x="62.6402%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.18%)</title><rect x="62.3902%" y="197" width="0.1757%" height="15" fill="rgb(250,110,10)" fg:x="355" fg:w="1"/><text x="62.6402%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.18%)</title><rect x="62.3902%" y="181" width="0.1757%" height="15" fill="rgb(248,123,6)" fg:x="355" fg:w="1"/><text x="62.6402%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.18%)</title><rect x="62.3902%" y="165" width="0.1757%" height="15" fill="rgb(206,91,31)" fg:x="355" fg:w="1"/><text x="62.6402%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.18%)</title><rect x="62.3902%" y="149" width="0.1757%" height="15" fill="rgb(211,154,13)" fg:x="355" fg:w="1"/><text x="62.6402%" y="159.50"></text></g><g><title>mi_malloc (1 samples, 0.18%)</title><rect x="62.3902%" y="133" width="0.1757%" height="15" fill="rgb(225,148,7)" fg:x="355" fg:w="1"/><text x="62.6402%" y="143.50"></text></g><g><title>[libc.so.6] (4 samples, 0.70%)</title><rect x="62.5659%" y="261" width="0.7030%" height="15" fill="rgb(220,160,43)" fg:x="356" fg:w="4"/><text x="62.8159%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.88%)</title><rect x="62.5659%" y="309" width="0.8787%" height="15" fill="rgb(213,52,39)" fg:x="356" fg:w="5"/><text x="62.8159%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.88%)</title><rect x="62.5659%" y="293" width="0.8787%" height="15" fill="rgb(243,137,7)" fg:x="356" fg:w="5"/><text x="62.8159%" y="303.50"></text></g><g><title>_mi_heap_realloc_zero (5 samples, 0.88%)</title><rect x="62.5659%" y="277" width="0.8787%" height="15" fill="rgb(230,79,13)" fg:x="356" fg:w="5"/><text x="62.8159%" y="287.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.18%)</title><rect x="63.2689%" y="261" width="0.1757%" height="15" fill="rgb(247,105,23)" fg:x="360" fg:w="1"/><text x="63.5189%" y="271.50"></text></g><g><title>alloc::slice::merge_sort (2 samples, 0.35%)</title><rect x="63.4446%" y="309" width="0.3515%" height="15" fill="rgb(223,179,41)" fg:x="361" fg:w="2"/><text x="63.6946%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.18%)</title><rect x="66.0808%" y="293" width="0.1757%" height="15" fill="rgb(218,9,34)" fg:x="376" fg:w="1"/><text x="66.3308%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.18%)</title><rect x="66.0808%" y="277" width="0.1757%" height="15" fill="rgb(222,106,8)" fg:x="376" fg:w="1"/><text x="66.3308%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.18%)</title><rect x="66.0808%" y="261" width="0.1757%" height="15" fill="rgb(211,220,0)" fg:x="376" fg:w="1"/><text x="66.3308%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.18%)</title><rect x="66.0808%" y="245" width="0.1757%" height="15" fill="rgb(229,52,16)" fg:x="376" fg:w="1"/><text x="66.3308%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.18%)</title><rect x="66.0808%" y="229" width="0.1757%" height="15" fill="rgb(212,155,18)" fg:x="376" fg:w="1"/><text x="66.3308%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.18%)</title><rect x="66.0808%" y="213" width="0.1757%" height="15" fill="rgb(242,21,14)" fg:x="376" fg:w="1"/><text x="66.3308%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.18%)</title><rect x="66.0808%" y="197" width="0.1757%" height="15" fill="rgb(222,19,48)" fg:x="376" fg:w="1"/><text x="66.3308%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.18%)</title><rect x="66.0808%" y="181" width="0.1757%" height="15" fill="rgb(232,45,27)" fg:x="376" fg:w="1"/><text x="66.3308%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.18%)</title><rect x="66.0808%" y="165" width="0.1757%" height="15" fill="rgb(249,103,42)" fg:x="376" fg:w="1"/><text x="66.3308%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.18%)</title><rect x="66.0808%" y="149" width="0.1757%" height="15" fill="rgb(246,81,33)" fg:x="376" fg:w="1"/><text x="66.3308%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.18%)</title><rect x="66.0808%" y="133" width="0.1757%" height="15" fill="rgb(252,33,42)" fg:x="376" fg:w="1"/><text x="66.3308%" y="143.50"></text></g><g><title>mi_malloc (1 samples, 0.18%)</title><rect x="66.0808%" y="117" width="0.1757%" height="15" fill="rgb(209,212,41)" fg:x="376" fg:w="1"/><text x="66.3308%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.53%)</title><rect x="66.2566%" y="293" width="0.5272%" height="15" fill="rgb(207,154,6)" fg:x="377" fg:w="3"/><text x="66.5066%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.53%)</title><rect x="66.2566%" y="277" width="0.5272%" height="15" fill="rgb(223,64,47)" fg:x="377" fg:w="3"/><text x="66.5066%" y="287.50"></text></g><g><title>_mi_heap_realloc_zero (3 samples, 0.53%)</title><rect x="66.2566%" y="261" width="0.5272%" height="15" fill="rgb(211,161,38)" fg:x="377" fg:w="3"/><text x="66.5066%" y="271.50"></text></g><g><title>[libc.so.6] (3 samples, 0.53%)</title><rect x="66.2566%" y="245" width="0.5272%" height="15" fill="rgb(219,138,40)" fg:x="377" fg:w="3"/><text x="66.5066%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.18%)</title><rect x="67.6626%" y="229" width="0.1757%" height="15" fill="rgb(241,228,46)" fg:x="385" fg:w="1"/><text x="67.9126%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.35%)</title><rect x="67.6626%" y="277" width="0.3515%" height="15" fill="rgb(223,209,38)" fg:x="385" fg:w="2"/><text x="67.9126%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.35%)</title><rect x="67.6626%" y="261" width="0.3515%" height="15" fill="rgb(236,164,45)" fg:x="385" fg:w="2"/><text x="67.9126%" y="271.50"></text></g><g><title>_mi_heap_realloc_zero (2 samples, 0.35%)</title><rect x="67.6626%" y="245" width="0.3515%" height="15" fill="rgb(231,15,5)" fg:x="385" fg:w="2"/><text x="67.9126%" y="255.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.18%)</title><rect x="67.8383%" y="229" width="0.1757%" height="15" fill="rgb(252,35,15)" fg:x="386" fg:w="1"/><text x="68.0883%" y="239.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.18%)</title><rect x="67.8383%" y="213" width="0.1757%" height="15" fill="rgb(248,181,18)" fg:x="386" fg:w="1"/><text x="68.0883%" y="223.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.18%)</title><rect x="67.8383%" y="197" width="0.1757%" height="15" fill="rgb(233,39,42)" fg:x="386" fg:w="1"/><text x="68.0883%" y="207.50"></text></g><g><title>mi_segments_page_alloc.constprop.1 (1 samples, 0.18%)</title><rect x="67.8383%" y="181" width="0.1757%" height="15" fill="rgb(238,110,33)" fg:x="386" fg:w="1"/><text x="68.0883%" y="191.50"></text></g><g><title>mi_segments_page_find_and_allocate (1 samples, 0.18%)</title><rect x="67.8383%" y="165" width="0.1757%" height="15" fill="rgb(233,195,10)" fg:x="386" fg:w="1"/><text x="68.0883%" y="175.50"></text></g><g><title>mi_segment_span_free (1 samples, 0.18%)</title><rect x="67.8383%" y="149" width="0.1757%" height="15" fill="rgb(254,105,3)" fg:x="386" fg:w="1"/><text x="68.0883%" y="159.50"></text></g><g><title>mi_segment_perhaps_decommit (1 samples, 0.18%)</title><rect x="67.8383%" y="133" width="0.1757%" height="15" fill="rgb(221,225,9)" fg:x="386" fg:w="1"/><text x="68.0883%" y="143.50"></text></g><g><title>_mi_clock_now (1 samples, 0.18%)</title><rect x="67.8383%" y="117" width="0.1757%" height="15" fill="rgb(224,227,45)" fg:x="386" fg:w="1"/><text x="68.0883%" y="127.50"></text></g><g><title>__GI___clock_gettime (1 samples, 0.18%)</title><rect x="67.8383%" y="101" width="0.1757%" height="15" fill="rgb(229,198,43)" fg:x="386" fg:w="1"/><text x="68.0883%" y="111.50"></text></g><g><title>[[vdso]] (1 samples, 0.18%)</title><rect x="67.8383%" y="85" width="0.1757%" height="15" fill="rgb(206,209,35)" fg:x="386" fg:w="1"/><text x="68.0883%" y="95.50"></text></g><g><title>[[vdso]] (1 samples, 0.18%)</title><rect x="67.8383%" y="69" width="0.1757%" height="15" fill="rgb(245,195,53)" fg:x="386" fg:w="1"/><text x="68.0883%" y="79.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.18%)</title><rect x="70.1230%" y="261" width="0.1757%" height="15" fill="rgb(240,92,26)" fg:x="399" fg:w="1"/><text x="70.3730%" y="271.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.18%)</title><rect x="70.1230%" y="245" width="0.1757%" height="15" fill="rgb(207,40,23)" fg:x="399" fg:w="1"/><text x="70.3730%" y="255.50"></text></g><g><title>mi_page_free_list_extend.constprop.0 (1 samples, 0.18%)</title><rect x="70.1230%" y="229" width="0.1757%" height="15" fill="rgb(223,111,35)" fg:x="399" fg:w="1"/><text x="70.3730%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="70.1230%" y="213" width="0.1757%" height="15" fill="rgb(229,147,28)" fg:x="399" fg:w="1"/><text x="70.3730%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="70.1230%" y="197" width="0.1757%" height="15" fill="rgb(211,29,28)" fg:x="399" fg:w="1"/><text x="70.3730%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="70.1230%" y="181" width="0.1757%" height="15" fill="rgb(228,72,33)" fg:x="399" fg:w="1"/><text x="70.3730%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="70.1230%" y="165" width="0.1757%" height="15" fill="rgb(205,214,31)" fg:x="399" fg:w="1"/><text x="70.3730%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="70.1230%" y="149" width="0.1757%" height="15" fill="rgb(224,111,15)" fg:x="399" fg:w="1"/><text x="70.3730%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.70%)</title><rect x="70.2988%" y="261" width="0.7030%" height="15" fill="rgb(253,21,26)" fg:x="400" fg:w="4"/><text x="70.5488%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.70%)</title><rect x="70.2988%" y="245" width="0.7030%" height="15" fill="rgb(245,139,43)" fg:x="400" fg:w="4"/><text x="70.5488%" y="255.50"></text></g><g><title>_mi_heap_realloc_zero (4 samples, 0.70%)</title><rect x="70.2988%" y="229" width="0.7030%" height="15" fill="rgb(252,170,7)" fg:x="400" fg:w="4"/><text x="70.5488%" y="239.50"></text></g><g><title>[libc.so.6] (4 samples, 0.70%)</title><rect x="70.2988%" y="213" width="0.7030%" height="15" fill="rgb(231,118,14)" fg:x="400" fg:w="4"/><text x="70.5488%" y="223.50"></text></g><g><title>alloc::slice::merge_sort (3 samples, 0.53%)</title><rect x="71.0018%" y="261" width="0.5272%" height="15" fill="rgb(238,83,0)" fg:x="404" fg:w="3"/><text x="71.2518%" y="271.50"></text></g><g><title>[libc.so.6] (2 samples, 0.35%)</title><rect x="71.1775%" y="245" width="0.3515%" height="15" fill="rgb(221,39,39)" fg:x="405" fg:w="2"/><text x="71.4275%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.18%)</title><rect x="73.1107%" y="245" width="0.1757%" height="15" fill="rgb(222,119,46)" fg:x="416" fg:w="1"/><text x="73.3607%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.18%)</title><rect x="73.1107%" y="229" width="0.1757%" height="15" fill="rgb(222,165,49)" fg:x="416" fg:w="1"/><text x="73.3607%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.18%)</title><rect x="73.1107%" y="213" width="0.1757%" height="15" fill="rgb(219,113,52)" fg:x="416" fg:w="1"/><text x="73.3607%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.18%)</title><rect x="73.1107%" y="197" width="0.1757%" height="15" fill="rgb(214,7,15)" fg:x="416" fg:w="1"/><text x="73.3607%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.18%)</title><rect x="73.1107%" y="181" width="0.1757%" height="15" fill="rgb(235,32,4)" fg:x="416" fg:w="1"/><text x="73.3607%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.18%)</title><rect x="73.1107%" y="165" width="0.1757%" height="15" fill="rgb(238,90,54)" fg:x="416" fg:w="1"/><text x="73.3607%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.18%)</title><rect x="73.1107%" y="149" width="0.1757%" height="15" fill="rgb(213,208,19)" fg:x="416" fg:w="1"/><text x="73.3607%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.18%)</title><rect x="73.1107%" y="133" width="0.1757%" height="15" fill="rgb(233,156,4)" fg:x="416" fg:w="1"/><text x="73.3607%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.18%)</title><rect x="73.1107%" y="117" width="0.1757%" height="15" fill="rgb(207,194,5)" fg:x="416" fg:w="1"/><text x="73.3607%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.18%)</title><rect x="73.1107%" y="101" width="0.1757%" height="15" fill="rgb(206,111,30)" fg:x="416" fg:w="1"/><text x="73.3607%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.18%)</title><rect x="73.1107%" y="85" width="0.1757%" height="15" fill="rgb(243,70,54)" fg:x="416" fg:w="1"/><text x="73.3607%" y="95.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.18%)</title><rect x="73.1107%" y="69" width="0.1757%" height="15" fill="rgb(242,28,8)" fg:x="416" fg:w="1"/><text x="73.3607%" y="79.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.18%)</title><rect x="73.1107%" y="53" width="0.1757%" height="15" fill="rgb(219,106,18)" fg:x="416" fg:w="1"/><text x="73.3607%" y="63.50"></text></g><g><title>mi_page_free_list_extend.constprop.0 (1 samples, 0.18%)</title><rect x="73.1107%" y="37" width="0.1757%" height="15" fill="rgb(244,222,10)" fg:x="416" fg:w="1"/><text x="73.3607%" y="47.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (11 samples, 1.93%)</title><rect x="71.5290%" y="261" width="1.9332%" height="15" fill="rgb(236,179,52)" fg:x="407" fg:w="11"/><text x="71.7790%" y="271.50">d..</text></g><g><title>alloc::slice::merge_sort (1 samples, 0.18%)</title><rect x="73.2865%" y="245" width="0.1757%" height="15" fill="rgb(213,23,39)" fg:x="417" fg:w="1"/><text x="73.5365%" y="255.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (39 samples, 6.85%)</title><rect x="66.7838%" y="293" width="6.8541%" height="15" fill="rgb(238,48,10)" fg:x="380" fg:w="39"/><text x="67.0338%" y="303.50">demoparse..</text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (32 samples, 5.62%)</title><rect x="68.0141%" y="277" width="5.6239%" height="15" fill="rgb(251,196,23)" fg:x="387" fg:w="32"/><text x="68.2641%" y="287.50">demopar..</text></g><g><title>hashbrown::map::make_hash (1 samples, 0.18%)</title><rect x="73.4622%" y="261" width="0.1757%" height="15" fill="rgb(250,152,24)" fg:x="418" fg:w="1"/><text x="73.7122%" y="271.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (57 samples, 10.02%)</title><rect x="63.7961%" y="309" width="10.0176%" height="15" fill="rgb(209,150,17)" fg:x="363" fg:w="57"/><text x="64.0461%" y="319.50">demoparser::pa..</text></g><g><title>hashbrown::map::make_hash (1 samples, 0.18%)</title><rect x="73.6380%" y="293" width="0.1757%" height="15" fill="rgb(234,202,34)" fg:x="419" fg:w="1"/><text x="73.8880%" y="303.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (97 samples, 17.05%)</title><rect x="56.9420%" y="341" width="17.0475%" height="15" fill="rgb(253,148,53)" fg:x="324" fg:w="97"/><text x="57.1920%" y="351.50">demoparser::parsing::demo_..</text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (81 samples, 14.24%)</title><rect x="59.7540%" y="325" width="14.2355%" height="15" fill="rgb(218,129,16)" fg:x="340" fg:w="81"/><text x="60.0040%" y="335.50">demoparser::parsing::d..</text></g><g><title>mi_malloc (1 samples, 0.18%)</title><rect x="73.8137%" y="309" width="0.1757%" height="15" fill="rgb(216,85,19)" fg:x="420" fg:w="1"/><text x="74.0637%" y="319.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bytes::ByteReader::read_string (2 samples, 0.35%)</title><rect x="73.9895%" y="341" width="0.3515%" height="15" fill="rgb(235,228,7)" fg:x="421" fg:w="2"/><text x="74.2395%" y="351.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.18%)</title><rect x="74.1652%" y="325" width="0.1757%" height="15" fill="rgb(245,175,0)" fg:x="422" fg:w="1"/><text x="74.4152%" y="335.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.18%)</title><rect x="74.1652%" y="309" width="0.1757%" height="15" fill="rgb(208,168,36)" fg:x="422" fg:w="1"/><text x="74.4152%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (1 samples, 0.18%)</title><rect x="74.1652%" y="293" width="0.1757%" height="15" fill="rgb(246,171,24)" fg:x="422" fg:w="1"/><text x="74.4152%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.18%)</title><rect x="76.8014%" y="325" width="0.1757%" height="15" fill="rgb(215,142,24)" fg:x="437" fg:w="1"/><text x="77.0514%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="76.9772%" y="325" width="0.3515%" height="15" fill="rgb(250,187,7)" fg:x="438" fg:w="2"/><text x="77.2272%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="76.9772%" y="309" width="0.3515%" height="15" fill="rgb(228,66,33)" fg:x="438" fg:w="2"/><text x="77.2272%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="76.9772%" y="293" width="0.3515%" height="15" fill="rgb(234,215,21)" fg:x="438" fg:w="2"/><text x="77.2272%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="76.9772%" y="277" width="0.3515%" height="15" fill="rgb(222,191,20)" fg:x="438" fg:w="2"/><text x="77.2272%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="76.9772%" y="261" width="0.3515%" height="15" fill="rgb(245,79,54)" fg:x="438" fg:w="2"/><text x="77.2272%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="76.9772%" y="245" width="0.3515%" height="15" fill="rgb(240,10,37)" fg:x="438" fg:w="2"/><text x="77.2272%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="76.9772%" y="229" width="0.3515%" height="15" fill="rgb(214,192,32)" fg:x="438" fg:w="2"/><text x="77.2272%" y="239.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="76.9772%" y="213" width="0.3515%" height="15" fill="rgb(209,36,54)" fg:x="438" fg:w="2"/><text x="77.2272%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="76.9772%" y="197" width="0.3515%" height="15" fill="rgb(220,10,11)" fg:x="438" fg:w="2"/><text x="77.2272%" y="207.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="76.9772%" y="181" width="0.3515%" height="15" fill="rgb(221,106,17)" fg:x="438" fg:w="2"/><text x="77.2272%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="77.1529%" y="165" width="0.1757%" height="15" fill="rgb(251,142,44)" fg:x="439" fg:w="1"/><text x="77.4029%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="77.1529%" y="149" width="0.1757%" height="15" fill="rgb(238,13,15)" fg:x="439" fg:w="1"/><text x="77.4029%" y="159.50"></text></g><g><title>[libc.so.6] (10 samples, 1.76%)</title><rect x="77.3286%" y="277" width="1.7575%" height="15" fill="rgb(208,107,27)" fg:x="440" fg:w="10"/><text x="77.5786%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="78.7346%" y="261" width="0.3515%" height="15" fill="rgb(205,136,37)" fg:x="448" fg:w="2"/><text x="78.9846%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="78.9104%" y="245" width="0.1757%" height="15" fill="rgb(250,205,27)" fg:x="449" fg:w="1"/><text x="79.1604%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="78.9104%" y="229" width="0.1757%" height="15" fill="rgb(210,80,43)" fg:x="449" fg:w="1"/><text x="79.1604%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="78.9104%" y="213" width="0.1757%" height="15" fill="rgb(247,160,36)" fg:x="449" fg:w="1"/><text x="79.1604%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="78.9104%" y="197" width="0.1757%" height="15" fill="rgb(234,13,49)" fg:x="449" fg:w="1"/><text x="79.1604%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="78.9104%" y="181" width="0.1757%" height="15" fill="rgb(234,122,0)" fg:x="449" fg:w="1"/><text x="79.1604%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="78.9104%" y="165" width="0.1757%" height="15" fill="rgb(207,146,38)" fg:x="449" fg:w="1"/><text x="79.1604%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="78.9104%" y="149" width="0.1757%" height="15" fill="rgb(207,177,25)" fg:x="449" fg:w="1"/><text x="79.1604%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="78.9104%" y="133" width="0.1757%" height="15" fill="rgb(211,178,42)" fg:x="449" fg:w="1"/><text x="79.1604%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (11 samples, 1.93%)</title><rect x="77.3286%" y="325" width="1.9332%" height="15" fill="rgb(230,69,54)" fg:x="440" fg:w="11"/><text x="77.5786%" y="335.50">a..</text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 1.93%)</title><rect x="77.3286%" y="309" width="1.9332%" height="15" fill="rgb(214,135,41)" fg:x="440" fg:w="11"/><text x="77.5786%" y="319.50">a..</text></g><g><title>_mi_heap_realloc_zero (11 samples, 1.93%)</title><rect x="77.3286%" y="293" width="1.9332%" height="15" fill="rgb(237,67,25)" fg:x="440" fg:w="11"/><text x="77.5786%" y="303.50">_..</text></g><g><title>_mi_malloc_generic (1 samples, 0.18%)</title><rect x="79.0861%" y="277" width="0.1757%" height="15" fill="rgb(222,189,50)" fg:x="450" fg:w="1"/><text x="79.3361%" y="287.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.18%)</title><rect x="79.0861%" y="261" width="0.1757%" height="15" fill="rgb(245,148,34)" fg:x="450" fg:w="1"/><text x="79.3361%" y="271.50"></text></g><g><title>mi_segments_page_alloc.constprop.1 (1 samples, 0.18%)</title><rect x="79.0861%" y="245" width="0.1757%" height="15" fill="rgb(222,29,6)" fg:x="450" fg:w="1"/><text x="79.3361%" y="255.50"></text></g><g><title>mi_segments_page_find_and_allocate (1 samples, 0.18%)</title><rect x="79.0861%" y="229" width="0.1757%" height="15" fill="rgb(221,189,43)" fg:x="450" fg:w="1"/><text x="79.3361%" y="239.50"></text></g><g><title>mi_segment_span_free (1 samples, 0.18%)</title><rect x="79.0861%" y="213" width="0.1757%" height="15" fill="rgb(207,36,27)" fg:x="450" fg:w="1"/><text x="79.3361%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (6 samples, 1.05%)</title><rect x="79.2619%" y="325" width="1.0545%" height="15" fill="rgb(217,90,24)" fg:x="451" fg:w="6"/><text x="79.5119%" y="335.50"></text></g><g><title>[unknown] (4 samples, 0.70%)</title><rect x="79.6134%" y="309" width="0.7030%" height="15" fill="rgb(224,66,35)" fg:x="453" fg:w="4"/><text x="79.8634%" y="319.50"></text></g><g><title>[unknown] (4 samples, 0.70%)</title><rect x="79.6134%" y="293" width="0.7030%" height="15" fill="rgb(221,13,50)" fg:x="453" fg:w="4"/><text x="79.8634%" y="303.50"></text></g><g><title>[unknown] (3 samples, 0.53%)</title><rect x="79.7891%" y="277" width="0.5272%" height="15" fill="rgb(236,68,49)" fg:x="454" fg:w="3"/><text x="80.0391%" y="287.50"></text></g><g><title>[unknown] (3 samples, 0.53%)</title><rect x="79.7891%" y="261" width="0.5272%" height="15" fill="rgb(229,146,28)" fg:x="454" fg:w="3"/><text x="80.0391%" y="271.50"></text></g><g><title>[unknown] (3 samples, 0.53%)</title><rect x="79.7891%" y="245" width="0.5272%" height="15" fill="rgb(225,31,38)" fg:x="454" fg:w="3"/><text x="80.0391%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="79.9649%" y="229" width="0.3515%" height="15" fill="rgb(250,208,3)" fg:x="455" fg:w="2"/><text x="80.2149%" y="239.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="79.9649%" y="213" width="0.3515%" height="15" fill="rgb(246,54,23)" fg:x="455" fg:w="2"/><text x="80.2149%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="79.9649%" y="197" width="0.3515%" height="15" fill="rgb(243,76,11)" fg:x="455" fg:w="2"/><text x="80.2149%" y="207.50"></text></g><g><title>[unknown] (2 samples, 0.35%)</title><rect x="79.9649%" y="181" width="0.3515%" height="15" fill="rgb(245,21,50)" fg:x="455" fg:w="2"/><text x="80.2149%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="80.1406%" y="165" width="0.1757%" height="15" fill="rgb(228,9,43)" fg:x="456" fg:w="1"/><text x="80.3906%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="80.1406%" y="149" width="0.1757%" height="15" fill="rgb(208,100,47)" fg:x="456" fg:w="1"/><text x="80.3906%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="80.1406%" y="133" width="0.1757%" height="15" fill="rgb(232,26,8)" fg:x="456" fg:w="1"/><text x="80.3906%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::entities::Entity&gt; (1 samples, 0.18%)</title><rect x="80.3163%" y="325" width="0.1757%" height="15" fill="rgb(216,166,38)" fg:x="457" fg:w="1"/><text x="80.5663%" y="335.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::create_ent_if_not_exist (7 samples, 1.23%)</title><rect x="80.4921%" y="325" width="1.2302%" height="15" fill="rgb(251,202,51)" fg:x="458" fg:w="7"/><text x="80.7421%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (4 samples, 0.70%)</title><rect x="81.0193%" y="309" width="0.7030%" height="15" fill="rgb(254,216,34)" fg:x="461" fg:w="4"/><text x="81.2693%" y="319.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::find_cls_id (1 samples, 0.18%)</title><rect x="81.7223%" y="325" width="0.1757%" height="15" fill="rgb(251,32,27)" fg:x="465" fg:w="1"/><text x="81.9723%" y="335.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode (2 samples, 0.35%)</title><rect x="81.8981%" y="325" width="0.3515%" height="15" fill="rgb(208,127,28)" fg:x="466" fg:w="2"/><text x="82.1481%" y="335.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_bit_coord (1 samples, 0.18%)</title><rect x="82.0738%" y="309" width="0.1757%" height="15" fill="rgb(224,137,22)" fg:x="467" fg:w="1"/><text x="82.3238%" y="319.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (1 samples, 0.18%)</title><rect x="82.0738%" y="293" width="0.1757%" height="15" fill="rgb(254,70,32)" fg:x="467" fg:w="1"/><text x="82.3238%" y="303.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_inx (7 samples, 1.23%)</title><rect x="82.2496%" y="325" width="1.2302%" height="15" fill="rgb(229,75,37)" fg:x="468" fg:w="7"/><text x="82.4996%" y="335.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (3 samples, 0.53%)</title><rect x="82.9525%" y="309" width="0.5272%" height="15" fill="rgb(252,64,23)" fg:x="472" fg:w="3"/><text x="83.2025%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.18%)</title><rect x="83.4798%" y="309" width="0.1757%" height="15" fill="rgb(232,162,48)" fg:x="475" fg:w="1"/><text x="83.7298%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.18%)</title><rect x="83.4798%" y="293" width="0.1757%" height="15" fill="rgb(246,160,12)" fg:x="475" fg:w="1"/><text x="83.7298%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.18%)</title><rect x="83.4798%" y="277" width="0.1757%" height="15" fill="rgb(247,166,0)" fg:x="475" fg:w="1"/><text x="83.7298%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.18%)</title><rect x="83.4798%" y="261" width="0.1757%" height="15" fill="rgb(249,219,21)" fg:x="475" fg:w="1"/><text x="83.7298%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.18%)</title><rect x="83.4798%" y="245" width="0.1757%" height="15" fill="rgb(205,209,3)" fg:x="475" fg:w="1"/><text x="83.7298%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.18%)</title><rect x="83.4798%" y="229" width="0.1757%" height="15" fill="rgb(243,44,1)" fg:x="475" fg:w="1"/><text x="83.7298%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.18%)</title><rect x="83.4798%" y="213" width="0.1757%" height="15" fill="rgb(206,159,16)" fg:x="475" fg:w="1"/><text x="83.7298%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.18%)</title><rect x="83.4798%" y="197" width="0.1757%" height="15" fill="rgb(244,77,30)" fg:x="475" fg:w="1"/><text x="83.7298%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.18%)</title><rect x="83.4798%" y="181" width="0.1757%" height="15" fill="rgb(218,69,12)" fg:x="475" fg:w="1"/><text x="83.7298%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.18%)</title><rect x="83.4798%" y="165" width="0.1757%" height="15" fill="rgb(212,87,7)" fg:x="475" fg:w="1"/><text x="83.7298%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.18%)</title><rect x="83.4798%" y="149" width="0.1757%" height="15" fill="rgb(245,114,25)" fg:x="475" fg:w="1"/><text x="83.7298%" y="159.50"></text></g><g><title>__rust_alloc (1 samples, 0.18%)</title><rect x="83.4798%" y="133" width="0.1757%" height="15" fill="rgb(210,61,42)" fg:x="475" fg:w="1"/><text x="83.7298%" y="143.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u32&gt;::from_str (1 samples, 0.18%)</title><rect x="83.6555%" y="309" width="0.1757%" height="15" fill="rgb(211,52,33)" fg:x="476" fg:w="1"/><text x="83.9055%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.18%)</title><rect x="86.1160%" y="293" width="0.1757%" height="15" fill="rgb(234,58,33)" fg:x="490" fg:w="1"/><text x="86.3660%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.18%)</title><rect x="86.2917%" y="293" width="0.1757%" height="15" fill="rgb(220,115,36)" fg:x="491" fg:w="1"/><text x="86.5417%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.18%)</title><rect x="86.2917%" y="277" width="0.1757%" height="15" fill="rgb(243,153,54)" fg:x="491" fg:w="1"/><text x="86.5417%" y="287.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.18%)</title><rect x="86.2917%" y="261" width="0.1757%" height="15" fill="rgb(251,47,18)" fg:x="491" fg:w="1"/><text x="86.5417%" y="271.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_f32 (1 samples, 0.18%)</title><rect x="86.9947%" y="277" width="0.1757%" height="15" fill="rgb(242,102,42)" fg:x="495" fg:w="1"/><text x="87.2447%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.18%)</title><rect x="86.9947%" y="261" width="0.1757%" height="15" fill="rgb(234,31,38)" fg:x="495" fg:w="1"/><text x="87.2447%" y="271.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode (7 samples, 1.23%)</title><rect x="86.4675%" y="293" width="1.2302%" height="15" fill="rgb(221,117,51)" fg:x="492" fg:w="7"/><text x="86.7175%" y="303.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (3 samples, 0.53%)</title><rect x="87.1705%" y="277" width="0.5272%" height="15" fill="rgb(212,20,18)" fg:x="496" fg:w="3"/><text x="87.4205%" y="287.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_inx (8 samples, 1.41%)</title><rect x="87.6977%" y="293" width="1.4060%" height="15" fill="rgb(245,133,36)" fg:x="499" fg:w="8"/><text x="87.9477%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (17 samples, 2.99%)</title><rect x="89.1037%" y="293" width="2.9877%" height="15" fill="rgb(212,6,19)" fg:x="507" fg:w="17"/><text x="89.3537%" y="303.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 1.76%)</title><rect x="90.3339%" y="277" width="1.7575%" height="15" fill="rgb(218,1,36)" fg:x="514" fg:w="10"/><text x="90.5839%" y="287.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.18%)</title><rect x="91.9156%" y="261" width="0.1757%" height="15" fill="rgb(246,84,54)" fg:x="523" fg:w="1"/><text x="92.1656%" y="271.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::parse_baselines (48 samples, 8.44%)</title><rect x="83.8313%" y="309" width="8.4359%" height="15" fill="rgb(242,110,6)" fg:x="477" fg:w="48"/><text x="84.0813%" y="319.50">demoparser::..</text></g><g><title>once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_init (1 samples, 0.18%)</title><rect x="92.0914%" y="293" width="0.1757%" height="15" fill="rgb(214,47,5)" fg:x="524" fg:w="1"/><text x="92.3414%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.35%)</title><rect x="93.6731%" y="293" width="0.3515%" height="15" fill="rgb(218,159,25)" fg:x="533" fg:w="2"/><text x="93.9231%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.35%)</title><rect x="93.6731%" y="277" width="0.3515%" height="15" fill="rgb(215,211,28)" fg:x="533" fg:w="2"/><text x="93.9231%" y="287.50"></text></g><g><title>_mi_heap_realloc_zero (2 samples, 0.35%)</title><rect x="93.6731%" y="261" width="0.3515%" height="15" fill="rgb(238,59,32)" fg:x="533" fg:w="2"/><text x="93.9231%" y="271.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.18%)</title><rect x="93.8489%" y="245" width="0.1757%" height="15" fill="rgb(226,82,3)" fg:x="534" fg:w="1"/><text x="94.0989%" y="255.50"></text></g><g><title>_mi_page_free_collect (1 samples, 0.18%)</title><rect x="93.8489%" y="229" width="0.1757%" height="15" fill="rgb(240,164,32)" fg:x="534" fg:w="1"/><text x="94.0989%" y="239.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_bits_st (17 samples, 2.99%)</title><rect x="92.2671%" y="309" width="2.9877%" height="15" fill="rgb(232,46,7)" fg:x="525" fg:w="17"/><text x="92.5171%" y="319.50">dem..</text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (7 samples, 1.23%)</title><rect x="94.0246%" y="293" width="1.2302%" height="15" fill="rgb(229,129,53)" fg:x="535" fg:w="7"/><text x="94.2746%" y="303.50"></text></g><g><title>demoparser::parsing::demo_parsing::stringtables::&lt;impl demoparser::parsing::parser::Parser&gt;::update_string_table (70 samples, 12.30%)</title><rect x="83.4798%" y="325" width="12.3023%" height="15" fill="rgb(234,188,29)" fg:x="475" fg:w="70"/><text x="83.7298%" y="335.50">demoparser::parsin..</text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_string (3 samples, 0.53%)</title><rect x="95.2548%" y="309" width="0.5272%" height="15" fill="rgb(246,141,4)" fg:x="542" fg:w="3"/><text x="95.5048%" y="319.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (2 samples, 0.35%)</title><rect x="95.4306%" y="293" width="0.3515%" height="15" fill="rgb(229,23,39)" fg:x="543" fg:w="2"/><text x="95.6806%" y="303.50"></text></g><g><title>core::str::lossy::Utf8Chunk::valid (1 samples, 0.18%)</title><rect x="95.6063%" y="277" width="0.1757%" height="15" fill="rgb(206,12,3)" fg:x="544" fg:w="1"/><text x="95.8563%" y="287.50"></text></g><g><title>&lt;M as protobuf::message_dyn::MessageDyn&gt;::is_initialized_dyn (1 samples, 0.18%)</title><rect x="95.7821%" y="309" width="0.1757%" height="15" fill="rgb(252,226,20)" fg:x="545" fg:w="1"/><text x="96.0321%" y="319.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_GameEventList as protobuf::message::Message&gt;::merge_from (1 samples, 0.18%)</title><rect x="95.9578%" y="309" width="0.1757%" height="15" fill="rgb(216,123,35)" fg:x="546" fg:w="1"/><text x="96.2078%" y="319.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_message (1 samples, 0.18%)</title><rect x="95.9578%" y="293" width="0.1757%" height="15" fill="rgb(212,68,40)" fg:x="546" fg:w="1"/><text x="96.2078%" y="303.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_game_event_list::Descriptor_t as protobuf::message::Message&gt;::merge_from (1 samples, 0.18%)</title><rect x="95.9578%" y="277" width="0.1757%" height="15" fill="rgb(254,125,32)" fg:x="546" fg:w="1"/><text x="96.2078%" y="287.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_message (1 samples, 0.18%)</title><rect x="95.9578%" y="261" width="0.1757%" height="15" fill="rgb(253,97,22)" fg:x="546" fg:w="1"/><text x="96.2078%" y="271.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::pop_limit (1 samples, 0.18%)</title><rect x="95.9578%" y="245" width="0.1757%" height="15" fill="rgb(241,101,14)" fg:x="546" fg:w="1"/><text x="96.2078%" y="255.50"></text></g><g><title>demoparser::parsing::parser::Parser::msg_handler (125 samples, 21.97%)</title><rect x="74.3409%" y="341" width="21.9684%" height="15" fill="rgb(238,103,29)" fg:x="423" fg:w="125"/><text x="74.5909%" y="351.50">demoparser::parsing::parser::Parser..</text></g><g><title>protobuf::message::Message::parse_from_bytes (3 samples, 0.53%)</title><rect x="95.7821%" y="325" width="0.5272%" height="15" fill="rgb(233,195,47)" fg:x="545" fg:w="3"/><text x="96.0321%" y="335.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::check_eof (1 samples, 0.18%)</title><rect x="96.1336%" y="309" width="0.1757%" height="15" fill="rgb(246,218,30)" fg:x="547" fg:w="1"/><text x="96.3836%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.18%)</title><rect x="96.4851%" y="309" width="0.1757%" height="15" fill="rgb(219,145,47)" fg:x="549" fg:w="1"/><text x="96.7351%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.18%)</title><rect x="96.4851%" y="293" width="0.1757%" height="15" fill="rgb(243,12,26)" fg:x="549" fg:w="1"/><text x="96.7351%" y="303.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.18%)</title><rect x="96.4851%" y="277" width="0.1757%" height="15" fill="rgb(214,87,16)" fg:x="549" fg:w="1"/><text x="96.7351%" y="287.50"></text></g><g><title>mi_free (1 samples, 0.18%)</title><rect x="96.4851%" y="261" width="0.1757%" height="15" fill="rgb(208,99,42)" fg:x="549" fg:w="1"/><text x="96.7351%" y="271.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_send_table::Sendprop_t as protobuf::message::Message&gt;::merge_from (6 samples, 1.05%)</title><rect x="96.6608%" y="293" width="1.0545%" height="15" fill="rgb(253,99,2)" fg:x="550" fg:w="6"/><text x="96.9108%" y="303.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string (2 samples, 0.35%)</title><rect x="97.3638%" y="277" width="0.3515%" height="15" fill="rgb(220,168,23)" fg:x="554" fg:w="2"/><text x="97.6138%" y="287.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_string_into (2 samples, 0.35%)</title><rect x="97.3638%" y="261" width="0.3515%" height="15" fill="rgb(242,38,24)" fg:x="554" fg:w="2"/><text x="97.6138%" y="271.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (1 samples, 0.18%)</title><rect x="97.5395%" y="245" width="0.1757%" height="15" fill="rgb(225,182,9)" fg:x="555" fg:w="1"/><text x="97.7895%" y="255.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (246 samples, 43.23%)</title><rect x="54.6573%" y="357" width="43.2337%" height="15" fill="rgb(243,178,37)" fg:x="311" fg:w="246"/><text x="54.9073%" y="367.50">demoparser::parsing::parser::Parser::parse_bytes</text></g><g><title>protobuf::message::Message::parse_from_bytes (9 samples, 1.58%)</title><rect x="96.3093%" y="341" width="1.5817%" height="15" fill="rgb(232,139,19)" fg:x="548" fg:w="9"/><text x="96.5593%" y="351.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_SendTable as protobuf::message::Message&gt;::merge_from (9 samples, 1.58%)</title><rect x="96.3093%" y="325" width="1.5817%" height="15" fill="rgb(225,201,24)" fg:x="548" fg:w="9"/><text x="96.5593%" y="335.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_message (7 samples, 1.23%)</title><rect x="96.6608%" y="309" width="1.2302%" height="15" fill="rgb(221,47,46)" fg:x="550" fg:w="7"/><text x="96.9108%" y="319.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint64 (1 samples, 0.18%)</title><rect x="97.7153%" y="293" width="0.1757%" height="15" fill="rgb(249,23,13)" fg:x="556" fg:w="1"/><text x="97.9653%" y="303.50"></text></g><g><title>demoparser::parsing::parser::Parser::start_parsing (360 samples, 63.27%)</title><rect x="35.5009%" y="389" width="63.2689%" height="15" fill="rgb(219,9,5)" fg:x="202" fg:w="360"/><text x="35.7509%" y="399.50">demoparser::parsing::parser::Parser::start_parsing</text></g><g><title>demoparser::parsing::parser::Parser::parse_wanted_ticks (360 samples, 63.27%)</title><rect x="35.5009%" y="373" width="63.2689%" height="15" fill="rgb(254,171,16)" fg:x="202" fg:w="360"/><text x="35.7509%" y="383.50">demoparser::parsing::parser::Parser::parse_wanted_ticks</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.88%)</title><rect x="97.8910%" y="357" width="0.8787%" height="15" fill="rgb(230,171,20)" fg:x="557" fg:w="5"/><text x="98.1410%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.18%)</title><rect x="98.5940%" y="341" width="0.1757%" height="15" fill="rgb(210,71,41)" fg:x="561" fg:w="1"/><text x="98.8440%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.18%)</title><rect x="98.5940%" y="325" width="0.1757%" height="15" fill="rgb(206,173,20)" fg:x="561" fg:w="1"/><text x="98.8440%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.18%)</title><rect x="98.5940%" y="309" width="0.1757%" height="15" fill="rgb(233,88,34)" fg:x="561" fg:w="1"/><text x="98.8440%" y="319.50"></text></g><g><title>__libc_start_main_impl (392 samples, 68.89%)</title><rect x="30.0527%" y="661" width="68.8928%" height="15" fill="rgb(223,209,46)" fg:x="171" fg:w="392"/><text x="30.3027%" y="671.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (392 samples, 68.89%)</title><rect x="30.0527%" y="645" width="68.8928%" height="15" fill="rgb(250,43,18)" fg:x="171" fg:w="392"/><text x="30.3027%" y="655.50">__libc_start_call_main</text></g><g><title>main (389 samples, 68.37%)</title><rect x="30.5800%" y="629" width="68.3656%" height="15" fill="rgb(208,13,10)" fg:x="174" fg:w="389"/><text x="30.8300%" y="639.50">main</text></g><g><title>std::rt::lang_start_internal (389 samples, 68.37%)</title><rect x="30.5800%" y="613" width="68.3656%" height="15" fill="rgb(212,200,36)" fg:x="174" fg:w="389"/><text x="30.8300%" y="623.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (389 samples, 68.37%)</title><rect x="30.5800%" y="597" width="68.3656%" height="15" fill="rgb(225,90,30)" fg:x="174" fg:w="389"/><text x="30.8300%" y="607.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (389 samples, 68.37%)</title><rect x="30.5800%" y="581" width="68.3656%" height="15" fill="rgb(236,182,39)" fg:x="174" fg:w="389"/><text x="30.8300%" y="591.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (389 samples, 68.37%)</title><rect x="30.5800%" y="565" width="68.3656%" height="15" fill="rgb(212,144,35)" fg:x="174" fg:w="389"/><text x="30.8300%" y="575.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (389 samples, 68.37%)</title><rect x="30.5800%" y="549" width="68.3656%" height="15" fill="rgb(228,63,44)" fg:x="174" fg:w="389"/><text x="30.8300%" y="559.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (389 samples, 68.37%)</title><rect x="30.5800%" y="533" width="68.3656%" height="15" fill="rgb(228,109,6)" fg:x="174" fg:w="389"/><text x="30.8300%" y="543.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (389 samples, 68.37%)</title><rect x="30.5800%" y="517" width="68.3656%" height="15" fill="rgb(238,117,24)" fg:x="174" fg:w="389"/><text x="30.8300%" y="527.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (389 samples, 68.37%)</title><rect x="30.5800%" y="501" width="68.3656%" height="15" fill="rgb(242,26,26)" fg:x="174" fg:w="389"/><text x="30.8300%" y="511.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (389 samples, 68.37%)</title><rect x="30.5800%" y="485" width="68.3656%" height="15" fill="rgb(221,92,48)" fg:x="174" fg:w="389"/><text x="30.8300%" y="495.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (389 samples, 68.37%)</title><rect x="30.5800%" y="469" width="68.3656%" height="15" fill="rgb(209,209,32)" fg:x="174" fg:w="389"/><text x="30.8300%" y="479.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (389 samples, 68.37%)</title><rect x="30.5800%" y="453" width="68.3656%" height="15" fill="rgb(221,70,22)" fg:x="174" fg:w="389"/><text x="30.8300%" y="463.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>demoparser::main (389 samples, 68.37%)</title><rect x="30.5800%" y="437" width="68.3656%" height="15" fill="rgb(248,145,5)" fg:x="174" fg:w="389"/><text x="30.8300%" y="447.50">demoparser::main</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (389 samples, 68.37%)</title><rect x="30.5800%" y="421" width="68.3656%" height="15" fill="rgb(226,116,26)" fg:x="174" fg:w="389"/><text x="30.8300%" y="431.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>demoparser::parse_demo (389 samples, 68.37%)</title><rect x="30.5800%" y="405" width="68.3656%" height="15" fill="rgb(244,5,17)" fg:x="174" fg:w="389"/><text x="30.8300%" y="415.50">demoparser::parse_demo</text></g><g><title>demoparser::parsing::parser_settings::&lt;impl demoparser::parsing::parser::Parser&gt;::new (1 samples, 0.18%)</title><rect x="98.7698%" y="389" width="0.1757%" height="15" fill="rgb(252,159,33)" fg:x="562" fg:w="1"/><text x="99.0198%" y="399.50"></text></g><g><title>demoparser::parsing::utils::read_file (1 samples, 0.18%)</title><rect x="98.7698%" y="373" width="0.1757%" height="15" fill="rgb(206,71,0)" fg:x="562" fg:w="1"/><text x="99.0198%" y="383.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_str (1 samples, 0.18%)</title><rect x="98.7698%" y="357" width="0.1757%" height="15" fill="rgb(233,118,54)" fg:x="562" fg:w="1"/><text x="99.0198%" y="367.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.18%)</title><rect x="98.7698%" y="341" width="0.1757%" height="15" fill="rgb(234,83,48)" fg:x="562" fg:w="1"/><text x="99.0198%" y="351.50"></text></g><g><title>demoparser (564 samples, 99.12%)</title><rect x="0.0000%" y="693" width="99.1213%" height="15" fill="rgb(228,3,54)" fg:x="0" fg:w="564"/><text x="0.2500%" y="703.50">demoparser</text></g><g><title>_start (393 samples, 69.07%)</title><rect x="30.0527%" y="677" width="69.0685%" height="15" fill="rgb(226,155,13)" fg:x="171" fg:w="393"/><text x="30.3027%" y="687.50">_start</text></g><g><title>_dl_start (1 samples, 0.18%)</title><rect x="98.9455%" y="661" width="0.1757%" height="15" fill="rgb(241,28,37)" fg:x="563" fg:w="1"/><text x="99.1955%" y="671.50"></text></g><g><title>_dl_start_final (1 samples, 0.18%)</title><rect x="98.9455%" y="645" width="0.1757%" height="15" fill="rgb(233,93,10)" fg:x="563" fg:w="1"/><text x="99.1955%" y="655.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.18%)</title><rect x="98.9455%" y="629" width="0.1757%" height="15" fill="rgb(225,113,19)" fg:x="563" fg:w="1"/><text x="99.1955%" y="639.50"></text></g><g><title>dl_main (1 samples, 0.18%)</title><rect x="98.9455%" y="613" width="0.1757%" height="15" fill="rgb(241,2,18)" fg:x="563" fg:w="1"/><text x="99.1955%" y="623.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.18%)</title><rect x="98.9455%" y="597" width="0.1757%" height="15" fill="rgb(228,207,21)" fg:x="563" fg:w="1"/><text x="99.1955%" y="607.50"></text></g><g><title>_dl_protect_relro (1 samples, 0.18%)</title><rect x="98.9455%" y="581" width="0.1757%" height="15" fill="rgb(213,211,35)" fg:x="563" fg:w="1"/><text x="99.1955%" y="591.50"></text></g><g><title>__mprotect (1 samples, 0.18%)</title><rect x="98.9455%" y="565" width="0.1757%" height="15" fill="rgb(209,83,10)" fg:x="563" fg:w="1"/><text x="99.1955%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.18%)</title><rect x="98.9455%" y="549" width="0.1757%" height="15" fill="rgb(209,164,1)" fg:x="563" fg:w="1"/><text x="99.1955%" y="559.50"></text></g><g><title>all (569 samples, 100%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(213,184,43)" fg:x="0" fg:w="569"/><text x="0.2500%" y="719.50"></text></g><g><title>perf-exec (5 samples, 0.88%)</title><rect x="99.1213%" y="693" width="0.8787%" height="15" fill="rgb(231,61,34)" fg:x="564" fg:w="5"/><text x="99.3713%" y="703.50"></text></g><g><title>[unknown] (5 samples, 0.88%)</title><rect x="99.1213%" y="677" width="0.8787%" height="15" fill="rgb(235,75,3)" fg:x="564" fg:w="5"/><text x="99.3713%" y="687.50"></text></g><g><title>[unknown] (5 samples, 0.88%)</title><rect x="99.1213%" y="661" width="0.8787%" height="15" fill="rgb(220,106,47)" fg:x="564" fg:w="5"/><text x="99.3713%" y="671.50"></text></g><g><title>[unknown] (5 samples, 0.88%)</title><rect x="99.1213%" y="645" width="0.8787%" height="15" fill="rgb(210,196,33)" fg:x="564" fg:w="5"/><text x="99.3713%" y="655.50"></text></g><g><title>[unknown] (5 samples, 0.88%)</title><rect x="99.1213%" y="629" width="0.8787%" height="15" fill="rgb(229,154,42)" fg:x="564" fg:w="5"/><text x="99.3713%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.88%)</title><rect x="99.1213%" y="613" width="0.8787%" height="15" fill="rgb(228,114,26)" fg:x="564" fg:w="5"/><text x="99.3713%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.88%)</title><rect x="99.1213%" y="597" width="0.8787%" height="15" fill="rgb(208,144,1)" fg:x="564" fg:w="5"/><text x="99.3713%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.88%)</title><rect x="99.1213%" y="581" width="0.8787%" height="15" fill="rgb(239,112,37)" fg:x="564" fg:w="5"/><text x="99.3713%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.88%)</title><rect x="99.1213%" y="565" width="0.8787%" height="15" fill="rgb(210,96,50)" fg:x="564" fg:w="5"/><text x="99.3713%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.88%)</title><rect x="99.1213%" y="549" width="0.8787%" height="15" fill="rgb(222,178,2)" fg:x="564" fg:w="5"/><text x="99.3713%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.88%)</title><rect x="99.1213%" y="533" width="0.8787%" height="15" fill="rgb(226,74,18)" fg:x="564" fg:w="5"/><text x="99.3713%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.88%)</title><rect x="99.1213%" y="517" width="0.8787%" height="15" fill="rgb(225,67,54)" fg:x="564" fg:w="5"/><text x="99.3713%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.88%)</title><rect x="99.1213%" y="501" width="0.8787%" height="15" fill="rgb(251,92,32)" fg:x="564" fg:w="5"/><text x="99.3713%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.88%)</title><rect x="99.1213%" y="485" width="0.8787%" height="15" fill="rgb(228,149,22)" fg:x="564" fg:w="5"/><text x="99.3713%" y="495.50"></text></g></svg></svg>