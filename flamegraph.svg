<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1510" onload="init(evt)" viewBox="0 0 1200 1510" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1510" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1493.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1493.00"> </text><svg id="frames" x="10" width="1180" total_samples="245"><g><title>[unknown] (60 samples, 24.49%)</title><rect x="4.4898%" y="1413" width="24.4898%" height="15" fill="rgb(227,0,7)" fg:x="11" fg:w="60"/><text x="4.7398%" y="1423.50">[unknown]</text></g><g><title>[unknown] (60 samples, 24.49%)</title><rect x="4.4898%" y="1397" width="24.4898%" height="15" fill="rgb(217,0,24)" fg:x="11" fg:w="60"/><text x="4.7398%" y="1407.50">[unknown]</text></g><g><title>[unknown] (57 samples, 23.27%)</title><rect x="5.7143%" y="1381" width="23.2653%" height="15" fill="rgb(221,193,54)" fg:x="14" fg:w="57"/><text x="5.9643%" y="1391.50">[unknown]</text></g><g><title>[unknown] (48 samples, 19.59%)</title><rect x="9.3878%" y="1365" width="19.5918%" height="15" fill="rgb(248,212,6)" fg:x="23" fg:w="48"/><text x="9.6378%" y="1375.50">[unknown]</text></g><g><title>[unknown] (25 samples, 10.20%)</title><rect x="18.7755%" y="1349" width="10.2041%" height="15" fill="rgb(208,68,35)" fg:x="46" fg:w="25"/><text x="19.0255%" y="1359.50">[unknown]</text></g><g><title>[unknown] (24 samples, 9.80%)</title><rect x="19.1837%" y="1333" width="9.7959%" height="15" fill="rgb(232,128,0)" fg:x="47" fg:w="24"/><text x="19.4337%" y="1343.50">[unknown]</text></g><g><title>[unknown] (21 samples, 8.57%)</title><rect x="20.4082%" y="1317" width="8.5714%" height="15" fill="rgb(207,160,47)" fg:x="50" fg:w="21"/><text x="20.6582%" y="1327.50">[unknown]</text></g><g><title>[unknown] (20 samples, 8.16%)</title><rect x="20.8163%" y="1301" width="8.1633%" height="15" fill="rgb(228,23,34)" fg:x="51" fg:w="20"/><text x="21.0663%" y="1311.50">[unknown]</text></g><g><title>[unknown] (17 samples, 6.94%)</title><rect x="22.0408%" y="1285" width="6.9388%" height="15" fill="rgb(218,30,26)" fg:x="54" fg:w="17"/><text x="22.2908%" y="1295.50">[unknown]</text></g><g><title>[unknown] (16 samples, 6.53%)</title><rect x="22.4490%" y="1269" width="6.5306%" height="15" fill="rgb(220,122,19)" fg:x="55" fg:w="16"/><text x="22.6990%" y="1279.50">[unknown]</text></g><g><title>[unknown] (10 samples, 4.08%)</title><rect x="24.8980%" y="1253" width="4.0816%" height="15" fill="rgb(250,228,42)" fg:x="61" fg:w="10"/><text x="25.1480%" y="1263.50">[unk..</text></g><g><title>[unknown] (7 samples, 2.86%)</title><rect x="26.1224%" y="1237" width="2.8571%" height="15" fill="rgb(240,193,28)" fg:x="64" fg:w="7"/><text x="26.3724%" y="1247.50">[u..</text></g><g><title>[unknown] (4 samples, 1.63%)</title><rect x="27.3469%" y="1221" width="1.6327%" height="15" fill="rgb(216,20,37)" fg:x="67" fg:w="4"/><text x="27.5969%" y="1231.50"></text></g><g><title>[unknown] (3 samples, 1.22%)</title><rect x="27.7551%" y="1205" width="1.2245%" height="15" fill="rgb(206,188,39)" fg:x="68" fg:w="3"/><text x="28.0051%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="28.5714%" y="1189" width="0.4082%" height="15" fill="rgb(217,207,13)" fg:x="70" fg:w="1"/><text x="28.8214%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="28.5714%" y="1173" width="0.4082%" height="15" fill="rgb(231,73,38)" fg:x="70" fg:w="1"/><text x="28.8214%" y="1183.50"></text></g><g><title>__libc_start_call_main (3 samples, 1.22%)</title><rect x="28.9796%" y="1413" width="1.2245%" height="15" fill="rgb(225,20,46)" fg:x="71" fg:w="3"/><text x="29.2296%" y="1423.50"></text></g><g><title>main (3 samples, 1.22%)</title><rect x="28.9796%" y="1397" width="1.2245%" height="15" fill="rgb(210,31,41)" fg:x="71" fg:w="3"/><text x="29.2296%" y="1407.50"></text></g><g><title>std::rt::lang_start_internal (3 samples, 1.22%)</title><rect x="28.9796%" y="1381" width="1.2245%" height="15" fill="rgb(221,200,47)" fg:x="71" fg:w="3"/><text x="29.2296%" y="1391.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 1.22%)</title><rect x="28.9796%" y="1365" width="1.2245%" height="15" fill="rgb(226,26,5)" fg:x="71" fg:w="3"/><text x="29.2296%" y="1375.50"></text></g><g><title>std::panicking::try (3 samples, 1.22%)</title><rect x="28.9796%" y="1349" width="1.2245%" height="15" fill="rgb(249,33,26)" fg:x="71" fg:w="3"/><text x="29.2296%" y="1359.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 1.22%)</title><rect x="28.9796%" y="1333" width="1.2245%" height="15" fill="rgb(235,183,28)" fg:x="71" fg:w="3"/><text x="29.2296%" y="1343.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (3 samples, 1.22%)</title><rect x="28.9796%" y="1317" width="1.2245%" height="15" fill="rgb(221,5,38)" fg:x="71" fg:w="3"/><text x="29.2296%" y="1327.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 1.22%)</title><rect x="28.9796%" y="1301" width="1.2245%" height="15" fill="rgb(247,18,42)" fg:x="71" fg:w="3"/><text x="29.2296%" y="1311.50"></text></g><g><title>std::panicking::try (3 samples, 1.22%)</title><rect x="28.9796%" y="1285" width="1.2245%" height="15" fill="rgb(241,131,45)" fg:x="71" fg:w="3"/><text x="29.2296%" y="1295.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 1.22%)</title><rect x="28.9796%" y="1269" width="1.2245%" height="15" fill="rgb(249,31,29)" fg:x="71" fg:w="3"/><text x="29.2296%" y="1279.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (3 samples, 1.22%)</title><rect x="28.9796%" y="1253" width="1.2245%" height="15" fill="rgb(225,111,53)" fg:x="71" fg:w="3"/><text x="29.2296%" y="1263.50"></text></g><g><title>std::rt::lang_start::{{closure}} (3 samples, 1.22%)</title><rect x="28.9796%" y="1237" width="1.2245%" height="15" fill="rgb(238,160,17)" fg:x="71" fg:w="3"/><text x="29.2296%" y="1247.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 1.22%)</title><rect x="28.9796%" y="1221" width="1.2245%" height="15" fill="rgb(214,148,48)" fg:x="71" fg:w="3"/><text x="29.2296%" y="1231.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3 samples, 1.22%)</title><rect x="28.9796%" y="1205" width="1.2245%" height="15" fill="rgb(232,36,49)" fg:x="71" fg:w="3"/><text x="29.2296%" y="1215.50"></text></g><g><title>demoparser::main (3 samples, 1.22%)</title><rect x="28.9796%" y="1189" width="1.2245%" height="15" fill="rgb(209,103,24)" fg:x="71" fg:w="3"/><text x="29.2296%" y="1199.50"></text></g><g><title>rayon::iter::ParallelIterator::collect (3 samples, 1.22%)</title><rect x="28.9796%" y="1173" width="1.2245%" height="15" fill="rgb(229,88,8)" fg:x="71" fg:w="3"/><text x="29.2296%" y="1183.50"></text></g><g><title>rayon::iter::from_par_iter::&lt;impl rayon::iter::FromParallelIterator&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_par_iter (3 samples, 1.22%)</title><rect x="28.9796%" y="1157" width="1.2245%" height="15" fill="rgb(213,181,19)" fg:x="71" fg:w="3"/><text x="29.2296%" y="1167.50"></text></g><g><title>rayon::iter::from_par_iter::collect_extended (3 samples, 1.22%)</title><rect x="28.9796%" y="1141" width="1.2245%" height="15" fill="rgb(254,191,54)" fg:x="71" fg:w="3"/><text x="29.2296%" y="1151.50"></text></g><g><title>rayon::iter::extend::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend (3 samples, 1.22%)</title><rect x="28.9796%" y="1125" width="1.2245%" height="15" fill="rgb(241,83,37)" fg:x="71" fg:w="3"/><text x="29.2296%" y="1135.50"></text></g><g><title>rayon::iter::collect::special_extend (3 samples, 1.22%)</title><rect x="28.9796%" y="1109" width="1.2245%" height="15" fill="rgb(233,36,39)" fg:x="71" fg:w="3"/><text x="29.2296%" y="1119.50"></text></g><g><title>rayon::iter::collect::collect_with_consumer (3 samples, 1.22%)</title><rect x="28.9796%" y="1093" width="1.2245%" height="15" fill="rgb(226,3,54)" fg:x="71" fg:w="3"/><text x="29.2296%" y="1103.50"></text></g><g><title>rayon::iter::collect::special_extend::{{closure}} (3 samples, 1.22%)</title><rect x="28.9796%" y="1077" width="1.2245%" height="15" fill="rgb(245,192,40)" fg:x="71" fg:w="3"/><text x="29.2296%" y="1087.50"></text></g><g><title>&lt;rayon::iter::map::Map&lt;I,F&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (3 samples, 1.22%)</title><rect x="28.9796%" y="1061" width="1.2245%" height="15" fill="rgb(238,167,29)" fg:x="71" fg:w="3"/><text x="29.2296%" y="1071.50"></text></g><g><title>&lt;rayon::slice::Iter&lt;T&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (3 samples, 1.22%)</title><rect x="28.9796%" y="1045" width="1.2245%" height="15" fill="rgb(232,182,51)" fg:x="71" fg:w="3"/><text x="29.2296%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge (3 samples, 1.22%)</title><rect x="28.9796%" y="1029" width="1.2245%" height="15" fill="rgb(231,60,39)" fg:x="71" fg:w="3"/><text x="29.2296%" y="1039.50"></text></g><g><title>&lt;rayon::slice::Iter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (3 samples, 1.22%)</title><rect x="28.9796%" y="1013" width="1.2245%" height="15" fill="rgb(208,69,12)" fg:x="71" fg:w="3"/><text x="29.2296%" y="1023.50"></text></g><g><title>&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (3 samples, 1.22%)</title><rect x="28.9796%" y="997" width="1.2245%" height="15" fill="rgb(235,93,37)" fg:x="71" fg:w="3"/><text x="29.2296%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (3 samples, 1.22%)</title><rect x="28.9796%" y="981" width="1.2245%" height="15" fill="rgb(213,116,39)" fg:x="71" fg:w="3"/><text x="29.2296%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3 samples, 1.22%)</title><rect x="28.9796%" y="965" width="1.2245%" height="15" fill="rgb(222,207,29)" fg:x="71" fg:w="3"/><text x="29.2296%" y="975.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (3 samples, 1.22%)</title><rect x="28.9796%" y="949" width="1.2245%" height="15" fill="rgb(206,96,30)" fg:x="71" fg:w="3"/><text x="29.2296%" y="959.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (3 samples, 1.22%)</title><rect x="28.9796%" y="933" width="1.2245%" height="15" fill="rgb(218,138,4)" fg:x="71" fg:w="3"/><text x="29.2296%" y="943.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (3 samples, 1.22%)</title><rect x="28.9796%" y="917" width="1.2245%" height="15" fill="rgb(250,191,14)" fg:x="71" fg:w="3"/><text x="29.2296%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 1.22%)</title><rect x="28.9796%" y="901" width="1.2245%" height="15" fill="rgb(239,60,40)" fg:x="71" fg:w="3"/><text x="29.2296%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 1.22%)</title><rect x="28.9796%" y="885" width="1.2245%" height="15" fill="rgb(206,27,48)" fg:x="71" fg:w="3"/><text x="29.2296%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 1.22%)</title><rect x="28.9796%" y="869" width="1.2245%" height="15" fill="rgb(225,35,8)" fg:x="71" fg:w="3"/><text x="29.2296%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (3 samples, 1.22%)</title><rect x="28.9796%" y="853" width="1.2245%" height="15" fill="rgb(250,213,24)" fg:x="71" fg:w="3"/><text x="29.2296%" y="863.50"></text></g><g><title>demoparser::main::{{closure}} (3 samples, 1.22%)</title><rect x="28.9796%" y="837" width="1.2245%" height="15" fill="rgb(247,123,22)" fg:x="71" fg:w="3"/><text x="29.2296%" y="847.50"></text></g><g><title>demoparser::parse_demo (3 samples, 1.22%)</title><rect x="28.9796%" y="821" width="1.2245%" height="15" fill="rgb(231,138,38)" fg:x="71" fg:w="3"/><text x="29.2296%" y="831.50"></text></g><g><title>demoparser::parsing::parser::Parser::start_parsing (3 samples, 1.22%)</title><rect x="28.9796%" y="805" width="1.2245%" height="15" fill="rgb(231,145,46)" fg:x="71" fg:w="3"/><text x="29.2296%" y="815.50"></text></g><g><title>demoparser::parsing::parser::Parser::speed (3 samples, 1.22%)</title><rect x="28.9796%" y="789" width="1.2245%" height="15" fill="rgb(251,118,11)" fg:x="71" fg:w="3"/><text x="29.2296%" y="799.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_mandatory_ticks (3 samples, 1.22%)</title><rect x="28.9796%" y="773" width="1.2245%" height="15" fill="rgb(217,147,25)" fg:x="71" fg:w="3"/><text x="29.2296%" y="783.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (3 samples, 1.22%)</title><rect x="28.9796%" y="757" width="1.2245%" height="15" fill="rgb(247,81,37)" fg:x="71" fg:w="3"/><text x="29.2296%" y="767.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_cmd (3 samples, 1.22%)</title><rect x="28.9796%" y="741" width="1.2245%" height="15" fill="rgb(209,12,38)" fg:x="71" fg:w="3"/><text x="29.2296%" y="751.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_datatable (3 samples, 1.22%)</title><rect x="28.9796%" y="725" width="1.2245%" height="15" fill="rgb(227,1,9)" fg:x="71" fg:w="3"/><text x="29.2296%" y="735.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::flatten_dt (3 samples, 1.22%)</title><rect x="28.9796%" y="709" width="1.2245%" height="15" fill="rgb(248,47,43)" fg:x="71" fg:w="3"/><text x="29.2296%" y="719.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (3 samples, 1.22%)</title><rect x="28.9796%" y="693" width="1.2245%" height="15" fill="rgb(221,10,30)" fg:x="71" fg:w="3"/><text x="29.2296%" y="703.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (3 samples, 1.22%)</title><rect x="28.9796%" y="677" width="1.2245%" height="15" fill="rgb(210,229,1)" fg:x="71" fg:w="3"/><text x="29.2296%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 1.22%)</title><rect x="28.9796%" y="661" width="1.2245%" height="15" fill="rgb(222,148,37)" fg:x="71" fg:w="3"/><text x="29.2296%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 1.22%)</title><rect x="28.9796%" y="645" width="1.2245%" height="15" fill="rgb(234,67,33)" fg:x="71" fg:w="3"/><text x="29.2296%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 1.22%)</title><rect x="28.9796%" y="629" width="1.2245%" height="15" fill="rgb(247,98,35)" fg:x="71" fg:w="3"/><text x="29.2296%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 1.22%)</title><rect x="28.9796%" y="613" width="1.2245%" height="15" fill="rgb(247,138,52)" fg:x="71" fg:w="3"/><text x="29.2296%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 1.22%)</title><rect x="28.9796%" y="597" width="1.2245%" height="15" fill="rgb(213,79,30)" fg:x="71" fg:w="3"/><text x="29.2296%" y="607.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 1.22%)</title><rect x="28.9796%" y="581" width="1.2245%" height="15" fill="rgb(246,177,23)" fg:x="71" fg:w="3"/><text x="29.2296%" y="591.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 1.22%)</title><rect x="28.9796%" y="565" width="1.2245%" height="15" fill="rgb(230,62,27)" fg:x="71" fg:w="3"/><text x="29.2296%" y="575.50"></text></g><g><title>_mi_heap_realloc_zero (3 samples, 1.22%)</title><rect x="28.9796%" y="549" width="1.2245%" height="15" fill="rgb(216,154,8)" fg:x="71" fg:w="3"/><text x="29.2296%" y="559.50"></text></g><g><title>_mi_memcpy_aligned (3 samples, 1.22%)</title><rect x="28.9796%" y="533" width="1.2245%" height="15" fill="rgb(244,35,45)" fg:x="71" fg:w="3"/><text x="29.2296%" y="543.50"></text></g><g><title>_mi_memcpy (3 samples, 1.22%)</title><rect x="28.9796%" y="517" width="1.2245%" height="15" fill="rgb(251,115,12)" fg:x="71" fg:w="3"/><text x="29.2296%" y="527.50"></text></g><g><title>memcpy (3 samples, 1.22%)</title><rect x="28.9796%" y="501" width="1.2245%" height="15" fill="rgb(240,54,50)" fg:x="71" fg:w="3"/><text x="29.2296%" y="511.50"></text></g><g><title>[libc.so.6] (3 samples, 1.22%)</title><rect x="28.9796%" y="485" width="1.2245%" height="15" fill="rgb(233,84,52)" fg:x="71" fg:w="3"/><text x="29.2296%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="29.3878%" y="469" width="0.8163%" height="15" fill="rgb(207,117,47)" fg:x="72" fg:w="2"/><text x="29.6378%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="29.3878%" y="453" width="0.8163%" height="15" fill="rgb(249,43,39)" fg:x="72" fg:w="2"/><text x="29.6378%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="29.3878%" y="437" width="0.8163%" height="15" fill="rgb(209,38,44)" fg:x="72" fg:w="2"/><text x="29.6378%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="29.3878%" y="421" width="0.8163%" height="15" fill="rgb(236,212,23)" fg:x="72" fg:w="2"/><text x="29.6378%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="29.3878%" y="405" width="0.8163%" height="15" fill="rgb(242,79,21)" fg:x="72" fg:w="2"/><text x="29.6378%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="29.3878%" y="389" width="0.8163%" height="15" fill="rgb(211,96,35)" fg:x="72" fg:w="2"/><text x="29.6378%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="29.3878%" y="373" width="0.8163%" height="15" fill="rgb(253,215,40)" fg:x="72" fg:w="2"/><text x="29.6378%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="29.3878%" y="357" width="0.8163%" height="15" fill="rgb(211,81,21)" fg:x="72" fg:w="2"/><text x="29.6378%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="29.3878%" y="341" width="0.8163%" height="15" fill="rgb(208,190,38)" fg:x="72" fg:w="2"/><text x="29.6378%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="29.3878%" y="325" width="0.8163%" height="15" fill="rgb(235,213,38)" fg:x="72" fg:w="2"/><text x="29.6378%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="29.3878%" y="309" width="0.8163%" height="15" fill="rgb(237,122,38)" fg:x="72" fg:w="2"/><text x="29.6378%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="29.7959%" y="293" width="0.4082%" height="15" fill="rgb(244,218,35)" fg:x="73" fg:w="1"/><text x="30.0459%" y="303.50"></text></g><g><title>__libc_start_main_impl (1 samples, 0.41%)</title><rect x="30.2041%" y="1413" width="0.4082%" height="15" fill="rgb(240,68,47)" fg:x="74" fg:w="1"/><text x="30.4541%" y="1423.50"></text></g><g><title>__libc_start_call_main (1 samples, 0.41%)</title><rect x="30.2041%" y="1397" width="0.4082%" height="15" fill="rgb(210,16,53)" fg:x="74" fg:w="1"/><text x="30.4541%" y="1407.50"></text></g><g><title>main (1 samples, 0.41%)</title><rect x="30.2041%" y="1381" width="0.4082%" height="15" fill="rgb(235,124,12)" fg:x="74" fg:w="1"/><text x="30.4541%" y="1391.50"></text></g><g><title>std::rt::lang_start_internal (1 samples, 0.41%)</title><rect x="30.2041%" y="1365" width="0.4082%" height="15" fill="rgb(224,169,11)" fg:x="74" fg:w="1"/><text x="30.4541%" y="1375.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.41%)</title><rect x="30.2041%" y="1349" width="0.4082%" height="15" fill="rgb(250,166,2)" fg:x="74" fg:w="1"/><text x="30.4541%" y="1359.50"></text></g><g><title>std::panicking::try (1 samples, 0.41%)</title><rect x="30.2041%" y="1333" width="0.4082%" height="15" fill="rgb(242,216,29)" fg:x="74" fg:w="1"/><text x="30.4541%" y="1343.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.41%)</title><rect x="30.2041%" y="1317" width="0.4082%" height="15" fill="rgb(230,116,27)" fg:x="74" fg:w="1"/><text x="30.4541%" y="1327.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (1 samples, 0.41%)</title><rect x="30.2041%" y="1301" width="0.4082%" height="15" fill="rgb(228,99,48)" fg:x="74" fg:w="1"/><text x="30.4541%" y="1311.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.41%)</title><rect x="30.2041%" y="1285" width="0.4082%" height="15" fill="rgb(253,11,6)" fg:x="74" fg:w="1"/><text x="30.4541%" y="1295.50"></text></g><g><title>std::panicking::try (1 samples, 0.41%)</title><rect x="30.2041%" y="1269" width="0.4082%" height="15" fill="rgb(247,143,39)" fg:x="74" fg:w="1"/><text x="30.4541%" y="1279.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.41%)</title><rect x="30.2041%" y="1253" width="0.4082%" height="15" fill="rgb(236,97,10)" fg:x="74" fg:w="1"/><text x="30.4541%" y="1263.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 0.41%)</title><rect x="30.2041%" y="1237" width="0.4082%" height="15" fill="rgb(233,208,19)" fg:x="74" fg:w="1"/><text x="30.4541%" y="1247.50"></text></g><g><title>std::rt::lang_start::{{closure}} (1 samples, 0.41%)</title><rect x="30.2041%" y="1221" width="0.4082%" height="15" fill="rgb(216,164,2)" fg:x="74" fg:w="1"/><text x="30.4541%" y="1231.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.41%)</title><rect x="30.2041%" y="1205" width="0.4082%" height="15" fill="rgb(220,129,5)" fg:x="74" fg:w="1"/><text x="30.4541%" y="1215.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.41%)</title><rect x="30.2041%" y="1189" width="0.4082%" height="15" fill="rgb(242,17,10)" fg:x="74" fg:w="1"/><text x="30.4541%" y="1199.50"></text></g><g><title>demoparser::main (1 samples, 0.41%)</title><rect x="30.2041%" y="1173" width="0.4082%" height="15" fill="rgb(242,107,0)" fg:x="74" fg:w="1"/><text x="30.4541%" y="1183.50"></text></g><g><title>rayon::iter::ParallelIterator::collect (1 samples, 0.41%)</title><rect x="30.2041%" y="1157" width="0.4082%" height="15" fill="rgb(251,28,31)" fg:x="74" fg:w="1"/><text x="30.4541%" y="1167.50"></text></g><g><title>rayon::iter::from_par_iter::&lt;impl rayon::iter::FromParallelIterator&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_par_iter (1 samples, 0.41%)</title><rect x="30.2041%" y="1141" width="0.4082%" height="15" fill="rgb(233,223,10)" fg:x="74" fg:w="1"/><text x="30.4541%" y="1151.50"></text></g><g><title>rayon::iter::from_par_iter::collect_extended (1 samples, 0.41%)</title><rect x="30.2041%" y="1125" width="0.4082%" height="15" fill="rgb(215,21,27)" fg:x="74" fg:w="1"/><text x="30.4541%" y="1135.50"></text></g><g><title>rayon::iter::extend::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend (1 samples, 0.41%)</title><rect x="30.2041%" y="1109" width="0.4082%" height="15" fill="rgb(232,23,21)" fg:x="74" fg:w="1"/><text x="30.4541%" y="1119.50"></text></g><g><title>rayon::iter::collect::special_extend (1 samples, 0.41%)</title><rect x="30.2041%" y="1093" width="0.4082%" height="15" fill="rgb(244,5,23)" fg:x="74" fg:w="1"/><text x="30.4541%" y="1103.50"></text></g><g><title>rayon::iter::collect::collect_with_consumer (1 samples, 0.41%)</title><rect x="30.2041%" y="1077" width="0.4082%" height="15" fill="rgb(226,81,46)" fg:x="74" fg:w="1"/><text x="30.4541%" y="1087.50"></text></g><g><title>rayon::iter::collect::special_extend::{{closure}} (1 samples, 0.41%)</title><rect x="30.2041%" y="1061" width="0.4082%" height="15" fill="rgb(247,70,30)" fg:x="74" fg:w="1"/><text x="30.4541%" y="1071.50"></text></g><g><title>&lt;rayon::iter::map::Map&lt;I,F&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (1 samples, 0.41%)</title><rect x="30.2041%" y="1045" width="0.4082%" height="15" fill="rgb(212,68,19)" fg:x="74" fg:w="1"/><text x="30.4541%" y="1055.50"></text></g><g><title>&lt;rayon::slice::Iter&lt;T&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (1 samples, 0.41%)</title><rect x="30.2041%" y="1029" width="0.4082%" height="15" fill="rgb(240,187,13)" fg:x="74" fg:w="1"/><text x="30.4541%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge (1 samples, 0.41%)</title><rect x="30.2041%" y="1013" width="0.4082%" height="15" fill="rgb(223,113,26)" fg:x="74" fg:w="1"/><text x="30.4541%" y="1023.50"></text></g><g><title>&lt;rayon::slice::Iter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (1 samples, 0.41%)</title><rect x="30.2041%" y="997" width="0.4082%" height="15" fill="rgb(206,192,2)" fg:x="74" fg:w="1"/><text x="30.4541%" y="1007.50"></text></g><g><title>&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (1 samples, 0.41%)</title><rect x="30.2041%" y="981" width="0.4082%" height="15" fill="rgb(241,108,4)" fg:x="74" fg:w="1"/><text x="30.4541%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (1 samples, 0.41%)</title><rect x="30.2041%" y="965" width="0.4082%" height="15" fill="rgb(247,173,49)" fg:x="74" fg:w="1"/><text x="30.4541%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.41%)</title><rect x="30.2041%" y="949" width="0.4082%" height="15" fill="rgb(224,114,35)" fg:x="74" fg:w="1"/><text x="30.4541%" y="959.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.41%)</title><rect x="30.2041%" y="933" width="0.4082%" height="15" fill="rgb(245,159,27)" fg:x="74" fg:w="1"/><text x="30.4541%" y="943.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.41%)</title><rect x="30.2041%" y="917" width="0.4082%" height="15" fill="rgb(245,172,44)" fg:x="74" fg:w="1"/><text x="30.4541%" y="927.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.41%)</title><rect x="30.2041%" y="901" width="0.4082%" height="15" fill="rgb(236,23,11)" fg:x="74" fg:w="1"/><text x="30.4541%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.41%)</title><rect x="30.2041%" y="885" width="0.4082%" height="15" fill="rgb(205,117,38)" fg:x="74" fg:w="1"/><text x="30.4541%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.41%)</title><rect x="30.2041%" y="869" width="0.4082%" height="15" fill="rgb(237,72,25)" fg:x="74" fg:w="1"/><text x="30.4541%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.41%)</title><rect x="30.2041%" y="853" width="0.4082%" height="15" fill="rgb(244,70,9)" fg:x="74" fg:w="1"/><text x="30.4541%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.41%)</title><rect x="30.2041%" y="837" width="0.4082%" height="15" fill="rgb(217,125,39)" fg:x="74" fg:w="1"/><text x="30.4541%" y="847.50"></text></g><g><title>demoparser::main::{{closure}} (1 samples, 0.41%)</title><rect x="30.2041%" y="821" width="0.4082%" height="15" fill="rgb(235,36,10)" fg:x="74" fg:w="1"/><text x="30.4541%" y="831.50"></text></g><g><title>demoparser::parse_demo (1 samples, 0.41%)</title><rect x="30.2041%" y="805" width="0.4082%" height="15" fill="rgb(251,123,47)" fg:x="74" fg:w="1"/><text x="30.4541%" y="815.50"></text></g><g><title>demoparser::parsing::parser::Parser::start_parsing (1 samples, 0.41%)</title><rect x="30.2041%" y="789" width="0.4082%" height="15" fill="rgb(221,13,13)" fg:x="74" fg:w="1"/><text x="30.4541%" y="799.50"></text></g><g><title>demoparser::parsing::parser::Parser::speed (1 samples, 0.41%)</title><rect x="30.2041%" y="773" width="0.4082%" height="15" fill="rgb(238,131,9)" fg:x="74" fg:w="1"/><text x="30.4541%" y="783.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (1 samples, 0.41%)</title><rect x="30.2041%" y="757" width="0.4082%" height="15" fill="rgb(211,50,8)" fg:x="74" fg:w="1"/><text x="30.4541%" y="767.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (1 samples, 0.41%)</title><rect x="30.2041%" y="741" width="0.4082%" height="15" fill="rgb(245,182,24)" fg:x="74" fg:w="1"/><text x="30.4541%" y="751.50"></text></g><g><title>demoparser::parsing::parser::Parser::messages_from_packet (1 samples, 0.41%)</title><rect x="30.2041%" y="725" width="0.4082%" height="15" fill="rgb(242,14,37)" fg:x="74" fg:w="1"/><text x="30.4541%" y="735.50"></text></g><g><title>demoparser::parsing::parser::Parser::msg_handler (1 samples, 0.41%)</title><rect x="30.2041%" y="709" width="0.4082%" height="15" fill="rgb(246,228,12)" fg:x="74" fg:w="1"/><text x="30.4541%" y="719.50"></text></g><g><title>demoparser::parsing::demo_parsing::game_events::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_game_event (1 samples, 0.41%)</title><rect x="30.2041%" y="693" width="0.4082%" height="15" fill="rgb(213,55,15)" fg:x="74" fg:w="1"/><text x="30.4541%" y="703.50"></text></g><g><title>protobuf::message::Message::parse_from_bytes (1 samples, 0.41%)</title><rect x="30.2041%" y="677" width="0.4082%" height="15" fill="rgb(209,9,3)" fg:x="74" fg:w="1"/><text x="30.4541%" y="687.50"></text></g><g><title>protobuf::message::Message::parse_from (1 samples, 0.41%)</title><rect x="30.2041%" y="661" width="0.4082%" height="15" fill="rgb(230,59,30)" fg:x="74" fg:w="1"/><text x="30.4541%" y="671.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_GameEvent as protobuf::message::Message&gt;::merge_from (1 samples, 0.41%)</title><rect x="30.2041%" y="645" width="0.4082%" height="15" fill="rgb(209,121,21)" fg:x="74" fg:w="1"/><text x="30.4541%" y="655.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_message (1 samples, 0.41%)</title><rect x="30.2041%" y="629" width="0.4082%" height="15" fill="rgb(220,109,13)" fg:x="74" fg:w="1"/><text x="30.4541%" y="639.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::merge_message (1 samples, 0.41%)</title><rect x="30.2041%" y="613" width="0.4082%" height="15" fill="rgb(232,18,1)" fg:x="74" fg:w="1"/><text x="30.4541%" y="623.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_game_event::Key_t as protobuf::message::Message&gt;::merge_from (1 samples, 0.41%)</title><rect x="30.2041%" y="597" width="0.4082%" height="15" fill="rgb(215,41,42)" fg:x="74" fg:w="1"/><text x="30.4541%" y="607.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (1 samples, 0.41%)</title><rect x="30.2041%" y="581" width="0.4082%" height="15" fill="rgb(224,123,36)" fg:x="74" fg:w="1"/><text x="30.4541%" y="591.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (1 samples, 0.41%)</title><rect x="30.2041%" y="565" width="0.4082%" height="15" fill="rgb(240,125,3)" fg:x="74" fg:w="1"/><text x="30.4541%" y="575.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::consume (1 samples, 0.41%)</title><rect x="30.2041%" y="549" width="0.4082%" height="15" fill="rgb(205,98,50)" fg:x="74" fg:w="1"/><text x="30.4541%" y="559.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::consume (1 samples, 0.41%)</title><rect x="30.2041%" y="533" width="0.4082%" height="15" fill="rgb(205,185,37)" fg:x="74" fg:w="1"/><text x="30.4541%" y="543.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (1 samples, 0.41%)</title><rect x="30.6122%" y="1301" width="0.4082%" height="15" fill="rgb(238,207,15)" fg:x="75" fg:w="1"/><text x="30.8622%" y="1311.50"></text></g><g><title>demoparser::parsing::parser::Parser::messages_from_packet (1 samples, 0.41%)</title><rect x="30.6122%" y="1285" width="0.4082%" height="15" fill="rgb(213,199,42)" fg:x="75" fg:w="1"/><text x="30.8622%" y="1295.50"></text></g><g><title>demoparser::parsing::parser::Parser::msg_handler (1 samples, 0.41%)</title><rect x="30.6122%" y="1269" width="0.4082%" height="15" fill="rgb(235,201,11)" fg:x="75" fg:w="1"/><text x="30.8622%" y="1279.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_packet_entities (1 samples, 0.41%)</title><rect x="30.6122%" y="1253" width="0.4082%" height="15" fill="rgb(207,46,11)" fg:x="75" fg:w="1"/><text x="30.8622%" y="1263.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::update_entity (1 samples, 0.41%)</title><rect x="30.6122%" y="1237" width="0.4082%" height="15" fill="rgb(241,35,35)" fg:x="75" fg:w="1"/><text x="30.8622%" y="1247.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode (1 samples, 0.41%)</title><rect x="30.6122%" y="1221" width="0.4082%" height="15" fill="rgb(243,32,47)" fg:x="75" fg:w="1"/><text x="30.8622%" y="1231.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_array (1 samples, 0.41%)</title><rect x="30.6122%" y="1205" width="0.4082%" height="15" fill="rgb(247,202,23)" fg:x="75" fg:w="1"/><text x="30.8622%" y="1215.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1 samples, 0.41%)</title><rect x="30.6122%" y="1189" width="0.4082%" height="15" fill="rgb(219,102,11)" fg:x="75" fg:w="1"/><text x="30.8622%" y="1199.50"></text></g><g><title>protobuf::text_format::print::fmt (1 samples, 0.41%)</title><rect x="30.6122%" y="1173" width="0.4082%" height="15" fill="rgb(243,110,44)" fg:x="75" fg:w="1"/><text x="30.8622%" y="1183.50"></text></g><g><title>protobuf::text_format::print::print_to_string_internal (1 samples, 0.41%)</title><rect x="30.6122%" y="1157" width="0.4082%" height="15" fill="rgb(222,74,54)" fg:x="75" fg:w="1"/><text x="30.8622%" y="1167.50"></text></g><g><title>protobuf::text_format::print::print_to_internal (1 samples, 0.41%)</title><rect x="30.6122%" y="1141" width="0.4082%" height="15" fill="rgb(216,99,12)" fg:x="75" fg:w="1"/><text x="30.8622%" y="1151.50"></text></g><g><title>&lt;M as protobuf::message_dyn::MessageDyn&gt;::descriptor_dyn (1 samples, 0.41%)</title><rect x="30.6122%" y="1125" width="0.4082%" height="15" fill="rgb(226,22,26)" fg:x="75" fg:w="1"/><text x="30.8622%" y="1135.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_send_table::Sendprop_t as protobuf::message_full::MessageFull&gt;::descriptor (1 samples, 0.41%)</title><rect x="30.6122%" y="1109" width="0.4082%" height="15" fill="rgb(217,163,10)" fg:x="75" fg:w="1"/><text x="30.8622%" y="1119.50"></text></g><g><title>protobuf::lazy::Lazy&lt;T&gt;::get (1 samples, 0.41%)</title><rect x="30.6122%" y="1093" width="0.4082%" height="15" fill="rgb(213,25,53)" fg:x="75" fg:w="1"/><text x="30.8622%" y="1103.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.41%)</title><rect x="30.6122%" y="1077" width="0.4082%" height="15" fill="rgb(252,105,26)" fg:x="75" fg:w="1"/><text x="30.8622%" y="1087.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.41%)</title><rect x="30.6122%" y="1061" width="0.4082%" height="15" fill="rgb(220,39,43)" fg:x="75" fg:w="1"/><text x="30.8622%" y="1071.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.41%)</title><rect x="30.6122%" y="1045" width="0.4082%" height="15" fill="rgb(229,68,48)" fg:x="75" fg:w="1"/><text x="30.8622%" y="1055.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.41%)</title><rect x="30.6122%" y="1029" width="0.4082%" height="15" fill="rgb(252,8,32)" fg:x="75" fg:w="1"/><text x="30.8622%" y="1039.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.41%)</title><rect x="30.6122%" y="1013" width="0.4082%" height="15" fill="rgb(223,20,43)" fg:x="75" fg:w="1"/><text x="30.8622%" y="1023.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.41%)</title><rect x="30.6122%" y="997" width="0.4082%" height="15" fill="rgb(229,81,49)" fg:x="75" fg:w="1"/><text x="30.8622%" y="1007.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (1 samples, 0.41%)</title><rect x="30.6122%" y="981" width="0.4082%" height="15" fill="rgb(236,28,36)" fg:x="75" fg:w="1"/><text x="30.8622%" y="991.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_send_table::Sendprop_t as protobuf::message_full::MessageFull&gt;::descriptor::{{closure}} (1 samples, 0.41%)</title><rect x="30.6122%" y="965" width="0.4082%" height="15" fill="rgb(249,185,26)" fg:x="75" fg:w="1"/><text x="30.8622%" y="975.50"></text></g><g><title>csgoproto::netmessages::file_descriptor (1 samples, 0.41%)</title><rect x="30.6122%" y="949" width="0.4082%" height="15" fill="rgb(249,174,33)" fg:x="75" fg:w="1"/><text x="30.8622%" y="959.50"></text></g><g><title>protobuf::lazy::Lazy&lt;T&gt;::get (1 samples, 0.41%)</title><rect x="30.6122%" y="933" width="0.4082%" height="15" fill="rgb(233,201,37)" fg:x="75" fg:w="1"/><text x="30.8622%" y="943.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.41%)</title><rect x="30.6122%" y="917" width="0.4082%" height="15" fill="rgb(221,78,26)" fg:x="75" fg:w="1"/><text x="30.8622%" y="927.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.41%)</title><rect x="30.6122%" y="901" width="0.4082%" height="15" fill="rgb(250,127,30)" fg:x="75" fg:w="1"/><text x="30.8622%" y="911.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.41%)</title><rect x="30.6122%" y="885" width="0.4082%" height="15" fill="rgb(230,49,44)" fg:x="75" fg:w="1"/><text x="30.8622%" y="895.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.41%)</title><rect x="30.6122%" y="869" width="0.4082%" height="15" fill="rgb(229,67,23)" fg:x="75" fg:w="1"/><text x="30.8622%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.41%)</title><rect x="30.6122%" y="853" width="0.4082%" height="15" fill="rgb(249,83,47)" fg:x="75" fg:w="1"/><text x="30.8622%" y="863.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.41%)</title><rect x="30.6122%" y="837" width="0.4082%" height="15" fill="rgb(215,43,3)" fg:x="75" fg:w="1"/><text x="30.8622%" y="847.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (1 samples, 0.41%)</title><rect x="30.6122%" y="821" width="0.4082%" height="15" fill="rgb(238,154,13)" fg:x="75" fg:w="1"/><text x="30.8622%" y="831.50"></text></g><g><title>csgoproto::netmessages::file_descriptor::{{closure}} (1 samples, 0.41%)</title><rect x="30.6122%" y="805" width="0.4082%" height="15" fill="rgb(219,56,2)" fg:x="75" fg:w="1"/><text x="30.8622%" y="815.50"></text></g><g><title>protobuf::lazy::Lazy&lt;T&gt;::get (1 samples, 0.41%)</title><rect x="30.6122%" y="789" width="0.4082%" height="15" fill="rgb(233,0,4)" fg:x="75" fg:w="1"/><text x="30.8622%" y="799.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.41%)</title><rect x="30.6122%" y="773" width="0.4082%" height="15" fill="rgb(235,30,7)" fg:x="75" fg:w="1"/><text x="30.8622%" y="783.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.41%)</title><rect x="30.6122%" y="757" width="0.4082%" height="15" fill="rgb(250,79,13)" fg:x="75" fg:w="1"/><text x="30.8622%" y="767.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.41%)</title><rect x="30.6122%" y="741" width="0.4082%" height="15" fill="rgb(211,146,34)" fg:x="75" fg:w="1"/><text x="30.8622%" y="751.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.41%)</title><rect x="30.6122%" y="725" width="0.4082%" height="15" fill="rgb(228,22,38)" fg:x="75" fg:w="1"/><text x="30.8622%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.41%)</title><rect x="30.6122%" y="709" width="0.4082%" height="15" fill="rgb(235,168,5)" fg:x="75" fg:w="1"/><text x="30.8622%" y="719.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.41%)</title><rect x="30.6122%" y="693" width="0.4082%" height="15" fill="rgb(221,155,16)" fg:x="75" fg:w="1"/><text x="30.8622%" y="703.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (1 samples, 0.41%)</title><rect x="30.6122%" y="677" width="0.4082%" height="15" fill="rgb(215,215,53)" fg:x="75" fg:w="1"/><text x="30.8622%" y="687.50"></text></g><g><title>csgoproto::netmessages::file_descriptor::{{closure}}::{{closure}} (1 samples, 0.41%)</title><rect x="30.6122%" y="661" width="0.4082%" height="15" fill="rgb(223,4,10)" fg:x="75" fg:w="1"/><text x="30.8622%" y="671.50"></text></g><g><title>protobuf::reflect::file::generated::GeneratedFileDescriptor::new_generated (1 samples, 0.41%)</title><rect x="30.6122%" y="645" width="0.4082%" height="15" fill="rgb(234,103,6)" fg:x="75" fg:w="1"/><text x="30.8622%" y="655.50"></text></g><g><title>protobuf::reflect::file::index::FileDescriptorCommon::new (1 samples, 0.41%)</title><rect x="30.6122%" y="629" width="0.4082%" height="15" fill="rgb(227,97,0)" fg:x="75" fg:w="1"/><text x="30.8622%" y="639.50"></text></g><g><title>protobuf::reflect::file::index::FileDescriptorCommon::build_message_index (1 samples, 0.41%)</title><rect x="30.6122%" y="613" width="0.4082%" height="15" fill="rgb(234,150,53)" fg:x="75" fg:w="1"/><text x="30.8622%" y="623.50"></text></g><g><title>protobuf::reflect::file::index::FileDescriptorCommon::index_message (1 samples, 0.41%)</title><rect x="30.6122%" y="597" width="0.4082%" height="15" fill="rgb(228,201,54)" fg:x="75" fg:w="1"/><text x="30.8622%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.41%)</title><rect x="30.6122%" y="581" width="0.4082%" height="15" fill="rgb(222,22,37)" fg:x="75" fg:w="1"/><text x="30.8622%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.41%)</title><rect x="30.6122%" y="565" width="0.4082%" height="15" fill="rgb(237,53,32)" fg:x="75" fg:w="1"/><text x="30.8622%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.41%)</title><rect x="30.6122%" y="549" width="0.4082%" height="15" fill="rgb(233,25,53)" fg:x="75" fg:w="1"/><text x="30.8622%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.41%)</title><rect x="30.6122%" y="533" width="0.4082%" height="15" fill="rgb(210,40,34)" fg:x="75" fg:w="1"/><text x="30.8622%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.41%)</title><rect x="30.6122%" y="517" width="0.4082%" height="15" fill="rgb(241,220,44)" fg:x="75" fg:w="1"/><text x="30.8622%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.41%)</title><rect x="30.6122%" y="501" width="0.4082%" height="15" fill="rgb(235,28,35)" fg:x="75" fg:w="1"/><text x="30.8622%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1 samples, 0.41%)</title><rect x="30.6122%" y="485" width="0.4082%" height="15" fill="rgb(210,56,17)" fg:x="75" fg:w="1"/><text x="30.8622%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.41%)</title><rect x="30.6122%" y="469" width="0.4082%" height="15" fill="rgb(224,130,29)" fg:x="75" fg:w="1"/><text x="30.8622%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.41%)</title><rect x="30.6122%" y="453" width="0.4082%" height="15" fill="rgb(235,212,8)" fg:x="75" fg:w="1"/><text x="30.8622%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.41%)</title><rect x="30.6122%" y="437" width="0.4082%" height="15" fill="rgb(223,33,50)" fg:x="75" fg:w="1"/><text x="30.8622%" y="447.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.41%)</title><rect x="30.6122%" y="421" width="0.4082%" height="15" fill="rgb(219,149,13)" fg:x="75" fg:w="1"/><text x="30.8622%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.41%)</title><rect x="30.6122%" y="405" width="0.4082%" height="15" fill="rgb(250,156,29)" fg:x="75" fg:w="1"/><text x="30.8622%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.41%)</title><rect x="30.6122%" y="389" width="0.4082%" height="15" fill="rgb(216,193,19)" fg:x="75" fg:w="1"/><text x="30.8622%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.41%)</title><rect x="30.6122%" y="373" width="0.4082%" height="15" fill="rgb(216,135,14)" fg:x="75" fg:w="1"/><text x="30.8622%" y="383.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.41%)</title><rect x="30.6122%" y="357" width="0.4082%" height="15" fill="rgb(241,47,5)" fg:x="75" fg:w="1"/><text x="30.8622%" y="367.50"></text></g><g><title>mi_find_page (1 samples, 0.41%)</title><rect x="30.6122%" y="341" width="0.4082%" height="15" fill="rgb(233,42,35)" fg:x="75" fg:w="1"/><text x="30.8622%" y="351.50"></text></g><g><title>mi_find_free_page (1 samples, 0.41%)</title><rect x="30.6122%" y="325" width="0.4082%" height="15" fill="rgb(231,13,6)" fg:x="75" fg:w="1"/><text x="30.8622%" y="335.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.41%)</title><rect x="30.6122%" y="309" width="0.4082%" height="15" fill="rgb(207,181,40)" fg:x="75" fg:w="1"/><text x="30.8622%" y="319.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.41%)</title><rect x="30.6122%" y="293" width="0.4082%" height="15" fill="rgb(254,173,49)" fg:x="75" fg:w="1"/><text x="30.8622%" y="303.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.41%)</title><rect x="30.6122%" y="277" width="0.4082%" height="15" fill="rgb(221,1,38)" fg:x="75" fg:w="1"/><text x="30.8622%" y="287.50"></text></g><g><title>mi_page_free_list_extend (1 samples, 0.41%)</title><rect x="30.6122%" y="261" width="0.4082%" height="15" fill="rgb(206,124,46)" fg:x="75" fg:w="1"/><text x="30.8622%" y="271.50"></text></g><g><title>mi_block_set_next (1 samples, 0.41%)</title><rect x="30.6122%" y="245" width="0.4082%" height="15" fill="rgb(249,21,11)" fg:x="75" fg:w="1"/><text x="30.8622%" y="255.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.41%)</title><rect x="30.6122%" y="229" width="0.4082%" height="15" fill="rgb(222,201,40)" fg:x="75" fg:w="1"/><text x="30.8622%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="30.6122%" y="213" width="0.4082%" height="15" fill="rgb(235,61,29)" fg:x="75" fg:w="1"/><text x="30.8622%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="30.6122%" y="197" width="0.4082%" height="15" fill="rgb(219,207,3)" fg:x="75" fg:w="1"/><text x="30.8622%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="30.6122%" y="181" width="0.4082%" height="15" fill="rgb(222,56,46)" fg:x="75" fg:w="1"/><text x="30.8622%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="30.6122%" y="165" width="0.4082%" height="15" fill="rgb(239,76,54)" fg:x="75" fg:w="1"/><text x="30.8622%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="30.6122%" y="149" width="0.4082%" height="15" fill="rgb(231,124,27)" fg:x="75" fg:w="1"/><text x="30.8622%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="30.6122%" y="133" width="0.4082%" height="15" fill="rgb(249,195,6)" fg:x="75" fg:w="1"/><text x="30.8622%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="30.6122%" y="117" width="0.4082%" height="15" fill="rgb(237,174,47)" fg:x="75" fg:w="1"/><text x="30.8622%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="30.6122%" y="101" width="0.4082%" height="15" fill="rgb(206,201,31)" fg:x="75" fg:w="1"/><text x="30.8622%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="30.6122%" y="85" width="0.4082%" height="15" fill="rgb(231,57,52)" fg:x="75" fg:w="1"/><text x="30.8622%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="30.6122%" y="69" width="0.4082%" height="15" fill="rgb(248,177,22)" fg:x="75" fg:w="1"/><text x="30.8622%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="30.6122%" y="53" width="0.4082%" height="15" fill="rgb(215,211,37)" fg:x="75" fg:w="1"/><text x="30.8622%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="30.6122%" y="37" width="0.4082%" height="15" fill="rgb(241,128,51)" fg:x="75" fg:w="1"/><text x="30.8622%" y="47.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.41%)</title><rect x="31.0204%" y="1173" width="0.4082%" height="15" fill="rgb(227,165,31)" fg:x="76" fg:w="1"/><text x="31.2704%" y="1183.50"></text></g><g><title>alloc::slice::merge_sort (1 samples, 0.41%)</title><rect x="31.0204%" y="1157" width="0.4082%" height="15" fill="rgb(228,167,24)" fg:x="76" fg:w="1"/><text x="31.2704%" y="1167.50"></text></g><g><title>alloc::slice::merge (1 samples, 0.41%)</title><rect x="31.0204%" y="1141" width="0.4082%" height="15" fill="rgb(228,143,12)" fg:x="76" fg:w="1"/><text x="31.2704%" y="1151.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.41%)</title><rect x="31.0204%" y="1125" width="0.4082%" height="15" fill="rgb(249,149,8)" fg:x="76" fg:w="1"/><text x="31.2704%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.41%)</title><rect x="31.4286%" y="1141" width="0.4082%" height="15" fill="rgb(243,35,44)" fg:x="77" fg:w="1"/><text x="31.6786%" y="1151.50"></text></g><g><title>core::ptr::write (1 samples, 0.41%)</title><rect x="31.4286%" y="1125" width="0.4082%" height="15" fill="rgb(246,89,9)" fg:x="77" fg:w="1"/><text x="31.6786%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.41%)</title><rect x="32.2449%" y="1109" width="0.4082%" height="15" fill="rgb(233,213,13)" fg:x="79" fg:w="1"/><text x="32.4949%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.41%)</title><rect x="32.2449%" y="1093" width="0.4082%" height="15" fill="rgb(233,141,41)" fg:x="79" fg:w="1"/><text x="32.4949%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.41%)</title><rect x="32.2449%" y="1077" width="0.4082%" height="15" fill="rgb(239,167,4)" fg:x="79" fg:w="1"/><text x="32.4949%" y="1087.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.41%)</title><rect x="32.2449%" y="1061" width="0.4082%" height="15" fill="rgb(209,217,16)" fg:x="79" fg:w="1"/><text x="32.4949%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.41%)</title><rect x="32.2449%" y="1045" width="0.4082%" height="15" fill="rgb(219,88,35)" fg:x="79" fg:w="1"/><text x="32.4949%" y="1055.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.41%)</title><rect x="32.2449%" y="1029" width="0.4082%" height="15" fill="rgb(220,193,23)" fg:x="79" fg:w="1"/><text x="32.4949%" y="1039.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.41%)</title><rect x="32.2449%" y="1013" width="0.4082%" height="15" fill="rgb(230,90,52)" fg:x="79" fg:w="1"/><text x="32.4949%" y="1023.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.41%)</title><rect x="32.2449%" y="997" width="0.4082%" height="15" fill="rgb(252,106,19)" fg:x="79" fg:w="1"/><text x="32.4949%" y="1007.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.41%)</title><rect x="32.2449%" y="981" width="0.4082%" height="15" fill="rgb(206,74,20)" fg:x="79" fg:w="1"/><text x="32.4949%" y="991.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.41%)</title><rect x="32.2449%" y="965" width="0.4082%" height="15" fill="rgb(230,138,44)" fg:x="79" fg:w="1"/><text x="32.4949%" y="975.50"></text></g><g><title>mi_find_page (1 samples, 0.41%)</title><rect x="32.2449%" y="949" width="0.4082%" height="15" fill="rgb(235,182,43)" fg:x="79" fg:w="1"/><text x="32.4949%" y="959.50"></text></g><g><title>mi_find_free_page (1 samples, 0.41%)</title><rect x="32.2449%" y="933" width="0.4082%" height="15" fill="rgb(242,16,51)" fg:x="79" fg:w="1"/><text x="32.4949%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (6 samples, 2.45%)</title><rect x="30.6122%" y="1413" width="2.4490%" height="15" fill="rgb(248,9,4)" fg:x="75" fg:w="6"/><text x="30.8622%" y="1423.50">co..</text></g><g><title>demoparser::main::{{closure}} (6 samples, 2.45%)</title><rect x="30.6122%" y="1397" width="2.4490%" height="15" fill="rgb(210,31,22)" fg:x="75" fg:w="6"/><text x="30.8622%" y="1407.50">de..</text></g><g><title>demoparser::parse_demo (6 samples, 2.45%)</title><rect x="30.6122%" y="1381" width="2.4490%" height="15" fill="rgb(239,54,39)" fg:x="75" fg:w="6"/><text x="30.8622%" y="1391.50">de..</text></g><g><title>demoparser::parsing::parser::Parser::start_parsing (6 samples, 2.45%)</title><rect x="30.6122%" y="1365" width="2.4490%" height="15" fill="rgb(230,99,41)" fg:x="75" fg:w="6"/><text x="30.8622%" y="1375.50">de..</text></g><g><title>demoparser::parsing::parser::Parser::speed (6 samples, 2.45%)</title><rect x="30.6122%" y="1349" width="2.4490%" height="15" fill="rgb(253,106,12)" fg:x="75" fg:w="6"/><text x="30.8622%" y="1359.50">de..</text></g><g><title>demoparser::parsing::parser::Parser::parse_mandatory_ticks (6 samples, 2.45%)</title><rect x="30.6122%" y="1333" width="2.4490%" height="15" fill="rgb(213,46,41)" fg:x="75" fg:w="6"/><text x="30.8622%" y="1343.50">de..</text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (6 samples, 2.45%)</title><rect x="30.6122%" y="1317" width="2.4490%" height="15" fill="rgb(215,133,35)" fg:x="75" fg:w="6"/><text x="30.8622%" y="1327.50">de..</text></g><g><title>demoparser::parsing::parser::Parser::parse_cmd (5 samples, 2.04%)</title><rect x="31.0204%" y="1301" width="2.0408%" height="15" fill="rgb(213,28,5)" fg:x="76" fg:w="5"/><text x="31.2704%" y="1311.50">d..</text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_datatable (5 samples, 2.04%)</title><rect x="31.0204%" y="1285" width="2.0408%" height="15" fill="rgb(215,77,49)" fg:x="76" fg:w="5"/><text x="31.2704%" y="1295.50">d..</text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::flatten_dt (5 samples, 2.04%)</title><rect x="31.0204%" y="1269" width="2.0408%" height="15" fill="rgb(248,100,22)" fg:x="76" fg:w="5"/><text x="31.2704%" y="1279.50">d..</text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (5 samples, 2.04%)</title><rect x="31.0204%" y="1253" width="2.0408%" height="15" fill="rgb(208,67,9)" fg:x="76" fg:w="5"/><text x="31.2704%" y="1263.50">d..</text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (5 samples, 2.04%)</title><rect x="31.0204%" y="1237" width="2.0408%" height="15" fill="rgb(219,133,21)" fg:x="76" fg:w="5"/><text x="31.2704%" y="1247.50">d..</text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (5 samples, 2.04%)</title><rect x="31.0204%" y="1221" width="2.0408%" height="15" fill="rgb(246,46,29)" fg:x="76" fg:w="5"/><text x="31.2704%" y="1231.50">d..</text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (5 samples, 2.04%)</title><rect x="31.0204%" y="1205" width="2.0408%" height="15" fill="rgb(246,185,52)" fg:x="76" fg:w="5"/><text x="31.2704%" y="1215.50">d..</text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (5 samples, 2.04%)</title><rect x="31.0204%" y="1189" width="2.0408%" height="15" fill="rgb(252,136,11)" fg:x="76" fg:w="5"/><text x="31.2704%" y="1199.50">d..</text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (4 samples, 1.63%)</title><rect x="31.4286%" y="1173" width="1.6327%" height="15" fill="rgb(219,138,53)" fg:x="77" fg:w="4"/><text x="31.6786%" y="1183.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (4 samples, 1.63%)</title><rect x="31.4286%" y="1157" width="1.6327%" height="15" fill="rgb(211,51,23)" fg:x="77" fg:w="4"/><text x="31.6786%" y="1167.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (3 samples, 1.22%)</title><rect x="31.8367%" y="1141" width="1.2245%" height="15" fill="rgb(247,221,28)" fg:x="78" fg:w="3"/><text x="32.0867%" y="1151.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (2 samples, 0.82%)</title><rect x="32.2449%" y="1125" width="0.8163%" height="15" fill="rgb(251,222,45)" fg:x="79" fg:w="2"/><text x="32.4949%" y="1135.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.41%)</title><rect x="32.6531%" y="1109" width="0.4082%" height="15" fill="rgb(217,162,53)" fg:x="80" fg:w="1"/><text x="32.9031%" y="1119.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (1 samples, 0.41%)</title><rect x="32.6531%" y="1093" width="0.4082%" height="15" fill="rgb(229,93,14)" fg:x="80" fg:w="1"/><text x="32.9031%" y="1103.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.41%)</title><rect x="32.6531%" y="1077" width="0.4082%" height="15" fill="rgb(209,67,49)" fg:x="80" fg:w="1"/><text x="32.9031%" y="1087.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.41%)</title><rect x="32.6531%" y="1061" width="0.4082%" height="15" fill="rgb(213,87,29)" fg:x="80" fg:w="1"/><text x="32.9031%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.41%)</title><rect x="32.6531%" y="1045" width="0.4082%" height="15" fill="rgb(205,151,52)" fg:x="80" fg:w="1"/><text x="32.9031%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.41%)</title><rect x="32.6531%" y="1029" width="0.4082%" height="15" fill="rgb(253,215,39)" fg:x="80" fg:w="1"/><text x="32.9031%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.41%)</title><rect x="32.6531%" y="1013" width="0.4082%" height="15" fill="rgb(221,220,41)" fg:x="80" fg:w="1"/><text x="32.9031%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.41%)</title><rect x="32.6531%" y="997" width="0.4082%" height="15" fill="rgb(218,133,21)" fg:x="80" fg:w="1"/><text x="32.9031%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.41%)</title><rect x="32.6531%" y="981" width="0.4082%" height="15" fill="rgb(221,193,43)" fg:x="80" fg:w="1"/><text x="32.9031%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.41%)</title><rect x="32.6531%" y="965" width="0.4082%" height="15" fill="rgb(240,128,52)" fg:x="80" fg:w="1"/><text x="32.9031%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.41%)</title><rect x="32.6531%" y="949" width="0.4082%" height="15" fill="rgb(253,114,12)" fg:x="80" fg:w="1"/><text x="32.9031%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.41%)</title><rect x="32.6531%" y="933" width="0.4082%" height="15" fill="rgb(215,223,47)" fg:x="80" fg:w="1"/><text x="32.9031%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.41%)</title><rect x="32.6531%" y="917" width="0.4082%" height="15" fill="rgb(248,225,23)" fg:x="80" fg:w="1"/><text x="32.9031%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.41%)</title><rect x="32.6531%" y="901" width="0.4082%" height="15" fill="rgb(250,108,0)" fg:x="80" fg:w="1"/><text x="32.9031%" y="911.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.41%)</title><rect x="32.6531%" y="885" width="0.4082%" height="15" fill="rgb(228,208,7)" fg:x="80" fg:w="1"/><text x="32.9031%" y="895.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.41%)</title><rect x="32.6531%" y="869" width="0.4082%" height="15" fill="rgb(244,45,10)" fg:x="80" fg:w="1"/><text x="32.9031%" y="879.50"></text></g><g><title>mi_find_page (1 samples, 0.41%)</title><rect x="32.6531%" y="853" width="0.4082%" height="15" fill="rgb(207,125,25)" fg:x="80" fg:w="1"/><text x="32.9031%" y="863.50"></text></g><g><title>mi_find_free_page (1 samples, 0.41%)</title><rect x="32.6531%" y="837" width="0.4082%" height="15" fill="rgb(210,195,18)" fg:x="80" fg:w="1"/><text x="32.9031%" y="847.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.41%)</title><rect x="32.6531%" y="821" width="0.4082%" height="15" fill="rgb(249,80,12)" fg:x="80" fg:w="1"/><text x="32.9031%" y="831.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.41%)</title><rect x="32.6531%" y="805" width="0.4082%" height="15" fill="rgb(221,65,9)" fg:x="80" fg:w="1"/><text x="32.9031%" y="815.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.41%)</title><rect x="32.6531%" y="789" width="0.4082%" height="15" fill="rgb(235,49,36)" fg:x="80" fg:w="1"/><text x="32.9031%" y="799.50"></text></g><g><title>mi_page_free_list_extend (1 samples, 0.41%)</title><rect x="32.6531%" y="773" width="0.4082%" height="15" fill="rgb(225,32,20)" fg:x="80" fg:w="1"/><text x="32.9031%" y="783.50"></text></g><g><title>mi_block_set_next (1 samples, 0.41%)</title><rect x="32.6531%" y="757" width="0.4082%" height="15" fill="rgb(215,141,46)" fg:x="80" fg:w="1"/><text x="32.9031%" y="767.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.41%)</title><rect x="32.6531%" y="741" width="0.4082%" height="15" fill="rgb(250,160,47)" fg:x="80" fg:w="1"/><text x="32.9031%" y="751.50"></text></g><g><title>demoparser::main (1 samples, 0.41%)</title><rect x="33.0612%" y="1413" width="0.4082%" height="15" fill="rgb(216,222,40)" fg:x="81" fg:w="1"/><text x="33.3112%" y="1423.50"></text></g><g><title>rayon::iter::ParallelIterator::collect (1 samples, 0.41%)</title><rect x="33.0612%" y="1397" width="0.4082%" height="15" fill="rgb(234,217,39)" fg:x="81" fg:w="1"/><text x="33.3112%" y="1407.50"></text></g><g><title>rayon::iter::from_par_iter::&lt;impl rayon::iter::FromParallelIterator&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_par_iter (1 samples, 0.41%)</title><rect x="33.0612%" y="1381" width="0.4082%" height="15" fill="rgb(207,178,40)" fg:x="81" fg:w="1"/><text x="33.3112%" y="1391.50"></text></g><g><title>rayon::iter::from_par_iter::collect_extended (1 samples, 0.41%)</title><rect x="33.0612%" y="1365" width="0.4082%" height="15" fill="rgb(221,136,13)" fg:x="81" fg:w="1"/><text x="33.3112%" y="1375.50"></text></g><g><title>rayon::iter::extend::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend (1 samples, 0.41%)</title><rect x="33.0612%" y="1349" width="0.4082%" height="15" fill="rgb(249,199,10)" fg:x="81" fg:w="1"/><text x="33.3112%" y="1359.50"></text></g><g><title>rayon::iter::collect::special_extend (1 samples, 0.41%)</title><rect x="33.0612%" y="1333" width="0.4082%" height="15" fill="rgb(249,222,13)" fg:x="81" fg:w="1"/><text x="33.3112%" y="1343.50"></text></g><g><title>rayon::iter::collect::collect_with_consumer (1 samples, 0.41%)</title><rect x="33.0612%" y="1317" width="0.4082%" height="15" fill="rgb(244,185,38)" fg:x="81" fg:w="1"/><text x="33.3112%" y="1327.50"></text></g><g><title>rayon::iter::collect::special_extend::{{closure}} (1 samples, 0.41%)</title><rect x="33.0612%" y="1301" width="0.4082%" height="15" fill="rgb(236,202,9)" fg:x="81" fg:w="1"/><text x="33.3112%" y="1311.50"></text></g><g><title>&lt;rayon::iter::map::Map&lt;I,F&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (1 samples, 0.41%)</title><rect x="33.0612%" y="1285" width="0.4082%" height="15" fill="rgb(250,229,37)" fg:x="81" fg:w="1"/><text x="33.3112%" y="1295.50"></text></g><g><title>&lt;rayon::slice::Iter&lt;T&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (1 samples, 0.41%)</title><rect x="33.0612%" y="1269" width="0.4082%" height="15" fill="rgb(206,174,23)" fg:x="81" fg:w="1"/><text x="33.3112%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::bridge (1 samples, 0.41%)</title><rect x="33.0612%" y="1253" width="0.4082%" height="15" fill="rgb(211,33,43)" fg:x="81" fg:w="1"/><text x="33.3112%" y="1263.50"></text></g><g><title>&lt;rayon::slice::Iter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (1 samples, 0.41%)</title><rect x="33.0612%" y="1237" width="0.4082%" height="15" fill="rgb(245,58,50)" fg:x="81" fg:w="1"/><text x="33.3112%" y="1247.50"></text></g><g><title>&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (1 samples, 0.41%)</title><rect x="33.0612%" y="1221" width="0.4082%" height="15" fill="rgb(244,68,36)" fg:x="81" fg:w="1"/><text x="33.3112%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (1 samples, 0.41%)</title><rect x="33.0612%" y="1205" width="0.4082%" height="15" fill="rgb(232,229,15)" fg:x="81" fg:w="1"/><text x="33.3112%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.41%)</title><rect x="33.0612%" y="1189" width="0.4082%" height="15" fill="rgb(254,30,23)" fg:x="81" fg:w="1"/><text x="33.3112%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.41%)</title><rect x="33.0612%" y="1173" width="0.4082%" height="15" fill="rgb(235,160,14)" fg:x="81" fg:w="1"/><text x="33.3112%" y="1183.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.41%)</title><rect x="33.0612%" y="1157" width="0.4082%" height="15" fill="rgb(212,155,44)" fg:x="81" fg:w="1"/><text x="33.3112%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.41%)</title><rect x="33.0612%" y="1141" width="0.4082%" height="15" fill="rgb(226,2,50)" fg:x="81" fg:w="1"/><text x="33.3112%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.41%)</title><rect x="33.0612%" y="1125" width="0.4082%" height="15" fill="rgb(234,177,6)" fg:x="81" fg:w="1"/><text x="33.3112%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.41%)</title><rect x="33.0612%" y="1109" width="0.4082%" height="15" fill="rgb(217,24,9)" fg:x="81" fg:w="1"/><text x="33.3112%" y="1119.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.41%)</title><rect x="33.0612%" y="1093" width="0.4082%" height="15" fill="rgb(220,13,46)" fg:x="81" fg:w="1"/><text x="33.3112%" y="1103.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.41%)</title><rect x="33.0612%" y="1077" width="0.4082%" height="15" fill="rgb(239,221,27)" fg:x="81" fg:w="1"/><text x="33.3112%" y="1087.50"></text></g><g><title>demoparser::main::{{closure}} (1 samples, 0.41%)</title><rect x="33.0612%" y="1061" width="0.4082%" height="15" fill="rgb(222,198,25)" fg:x="81" fg:w="1"/><text x="33.3112%" y="1071.50"></text></g><g><title>demoparser::parse_demo (1 samples, 0.41%)</title><rect x="33.0612%" y="1045" width="0.4082%" height="15" fill="rgb(211,99,13)" fg:x="81" fg:w="1"/><text x="33.3112%" y="1055.50"></text></g><g><title>demoparser::parsing::parser::Parser::start_parsing (1 samples, 0.41%)</title><rect x="33.0612%" y="1029" width="0.4082%" height="15" fill="rgb(232,111,31)" fg:x="81" fg:w="1"/><text x="33.3112%" y="1039.50"></text></g><g><title>demoparser::parsing::parser::Parser::speed (1 samples, 0.41%)</title><rect x="33.0612%" y="1013" width="0.4082%" height="15" fill="rgb(245,82,37)" fg:x="81" fg:w="1"/><text x="33.3112%" y="1023.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_mandatory_ticks (1 samples, 0.41%)</title><rect x="33.0612%" y="997" width="0.4082%" height="15" fill="rgb(227,149,46)" fg:x="81" fg:w="1"/><text x="33.3112%" y="1007.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (1 samples, 0.41%)</title><rect x="33.0612%" y="981" width="0.4082%" height="15" fill="rgb(218,36,50)" fg:x="81" fg:w="1"/><text x="33.3112%" y="991.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_cmd (1 samples, 0.41%)</title><rect x="33.0612%" y="965" width="0.4082%" height="15" fill="rgb(226,80,48)" fg:x="81" fg:w="1"/><text x="33.3112%" y="975.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_datatable (1 samples, 0.41%)</title><rect x="33.0612%" y="949" width="0.4082%" height="15" fill="rgb(238,224,15)" fg:x="81" fg:w="1"/><text x="33.3112%" y="959.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::flatten_dt (1 samples, 0.41%)</title><rect x="33.0612%" y="933" width="0.4082%" height="15" fill="rgb(241,136,10)" fg:x="81" fg:w="1"/><text x="33.3112%" y="943.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.41%)</title><rect x="33.0612%" y="917" width="0.4082%" height="15" fill="rgb(208,32,45)" fg:x="81" fg:w="1"/><text x="33.3112%" y="927.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.41%)</title><rect x="33.0612%" y="901" width="0.4082%" height="15" fill="rgb(207,135,9)" fg:x="81" fg:w="1"/><text x="33.3112%" y="911.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.41%)</title><rect x="33.0612%" y="885" width="0.4082%" height="15" fill="rgb(206,86,44)" fg:x="81" fg:w="1"/><text x="33.3112%" y="895.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_excl_props (1 samples, 0.41%)</title><rect x="33.4694%" y="1413" width="0.4082%" height="15" fill="rgb(245,177,15)" fg:x="82" fg:w="1"/><text x="33.7194%" y="1423.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_excl_props (1 samples, 0.41%)</title><rect x="33.4694%" y="1397" width="0.4082%" height="15" fill="rgb(206,64,50)" fg:x="82" fg:w="1"/><text x="33.7194%" y="1407.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_excl_props (1 samples, 0.41%)</title><rect x="33.4694%" y="1381" width="0.4082%" height="15" fill="rgb(234,36,40)" fg:x="82" fg:w="1"/><text x="33.7194%" y="1391.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_excl_props (1 samples, 0.41%)</title><rect x="33.4694%" y="1365" width="0.4082%" height="15" fill="rgb(213,64,8)" fg:x="82" fg:w="1"/><text x="33.7194%" y="1375.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_SendTable as core::clone::Clone&gt;::clone (1 samples, 0.41%)</title><rect x="33.4694%" y="1349" width="0.4082%" height="15" fill="rgb(210,75,36)" fg:x="82" fg:w="1"/><text x="33.7194%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.41%)</title><rect x="33.4694%" y="1333" width="0.4082%" height="15" fill="rgb(229,88,21)" fg:x="82" fg:w="1"/><text x="33.7194%" y="1343.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.41%)</title><rect x="33.4694%" y="1317" width="0.4082%" height="15" fill="rgb(252,204,47)" fg:x="82" fg:w="1"/><text x="33.7194%" y="1327.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.41%)</title><rect x="33.4694%" y="1301" width="0.4082%" height="15" fill="rgb(208,77,27)" fg:x="82" fg:w="1"/><text x="33.7194%" y="1311.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.41%)</title><rect x="33.4694%" y="1285" width="0.4082%" height="15" fill="rgb(221,76,26)" fg:x="82" fg:w="1"/><text x="33.7194%" y="1295.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_send_table::Sendprop_t as core::clone::Clone&gt;::clone (1 samples, 0.41%)</title><rect x="33.4694%" y="1269" width="0.4082%" height="15" fill="rgb(225,139,18)" fg:x="82" fg:w="1"/><text x="33.7194%" y="1279.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.41%)</title><rect x="33.4694%" y="1253" width="0.4082%" height="15" fill="rgb(230,137,11)" fg:x="82" fg:w="1"/><text x="33.7194%" y="1263.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for i32&gt;::clone (1 samples, 0.41%)</title><rect x="33.4694%" y="1237" width="0.4082%" height="15" fill="rgb(212,28,1)" fg:x="82" fg:w="1"/><text x="33.7194%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.41%)</title><rect x="33.8776%" y="1413" width="0.4082%" height="15" fill="rgb(248,164,17)" fg:x="83" fg:w="1"/><text x="34.1276%" y="1423.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.41%)</title><rect x="33.8776%" y="1397" width="0.4082%" height="15" fill="rgb(222,171,42)" fg:x="83" fg:w="1"/><text x="34.1276%" y="1407.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.41%)</title><rect x="33.8776%" y="1381" width="0.4082%" height="15" fill="rgb(243,84,45)" fg:x="83" fg:w="1"/><text x="34.1276%" y="1391.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.41%)</title><rect x="33.8776%" y="1365" width="0.4082%" height="15" fill="rgb(252,49,23)" fg:x="83" fg:w="1"/><text x="34.1276%" y="1375.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.41%)</title><rect x="33.8776%" y="1349" width="0.4082%" height="15" fill="rgb(215,19,7)" fg:x="83" fg:w="1"/><text x="34.1276%" y="1359.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.41%)</title><rect x="33.8776%" y="1333" width="0.4082%" height="15" fill="rgb(238,81,41)" fg:x="83" fg:w="1"/><text x="34.1276%" y="1343.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.41%)</title><rect x="33.8776%" y="1317" width="0.4082%" height="15" fill="rgb(210,199,37)" fg:x="83" fg:w="1"/><text x="34.1276%" y="1327.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.41%)</title><rect x="33.8776%" y="1301" width="0.4082%" height="15" fill="rgb(244,192,49)" fg:x="83" fg:w="1"/><text x="34.1276%" y="1311.50"></text></g><g><title>demoparser::main::{{closure}} (1 samples, 0.41%)</title><rect x="33.8776%" y="1285" width="0.4082%" height="15" fill="rgb(226,211,11)" fg:x="83" fg:w="1"/><text x="34.1276%" y="1295.50"></text></g><g><title>demoparser::parse_demo (1 samples, 0.41%)</title><rect x="33.8776%" y="1269" width="0.4082%" height="15" fill="rgb(236,162,54)" fg:x="83" fg:w="1"/><text x="34.1276%" y="1279.50"></text></g><g><title>demoparser::parsing::parser::Parser::start_parsing (1 samples, 0.41%)</title><rect x="33.8776%" y="1253" width="0.4082%" height="15" fill="rgb(220,229,9)" fg:x="83" fg:w="1"/><text x="34.1276%" y="1263.50"></text></g><g><title>demoparser::parsing::parser::Parser::speed (1 samples, 0.41%)</title><rect x="33.8776%" y="1237" width="0.4082%" height="15" fill="rgb(250,87,22)" fg:x="83" fg:w="1"/><text x="34.1276%" y="1247.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_mandatory_ticks (1 samples, 0.41%)</title><rect x="33.8776%" y="1221" width="0.4082%" height="15" fill="rgb(239,43,17)" fg:x="83" fg:w="1"/><text x="34.1276%" y="1231.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (1 samples, 0.41%)</title><rect x="33.8776%" y="1205" width="0.4082%" height="15" fill="rgb(231,177,25)" fg:x="83" fg:w="1"/><text x="34.1276%" y="1215.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_cmd (1 samples, 0.41%)</title><rect x="33.8776%" y="1189" width="0.4082%" height="15" fill="rgb(219,179,1)" fg:x="83" fg:w="1"/><text x="34.1276%" y="1199.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_datatable (1 samples, 0.41%)</title><rect x="33.8776%" y="1173" width="0.4082%" height="15" fill="rgb(238,219,53)" fg:x="83" fg:w="1"/><text x="34.1276%" y="1183.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::flatten_dt (1 samples, 0.41%)</title><rect x="33.8776%" y="1157" width="0.4082%" height="15" fill="rgb(232,167,36)" fg:x="83" fg:w="1"/><text x="34.1276%" y="1167.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.41%)</title><rect x="33.8776%" y="1141" width="0.4082%" height="15" fill="rgb(244,19,51)" fg:x="83" fg:w="1"/><text x="34.1276%" y="1151.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.41%)</title><rect x="33.8776%" y="1125" width="0.4082%" height="15" fill="rgb(224,6,22)" fg:x="83" fg:w="1"/><text x="34.1276%" y="1135.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.41%)</title><rect x="33.8776%" y="1109" width="0.4082%" height="15" fill="rgb(224,145,5)" fg:x="83" fg:w="1"/><text x="34.1276%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.41%)</title><rect x="33.8776%" y="1093" width="0.4082%" height="15" fill="rgb(234,130,49)" fg:x="83" fg:w="1"/><text x="34.1276%" y="1103.50"></text></g><g><title>alloc::slice::merge_sort (1 samples, 0.41%)</title><rect x="33.8776%" y="1077" width="0.4082%" height="15" fill="rgb(254,6,2)" fg:x="83" fg:w="1"/><text x="34.1276%" y="1087.50"></text></g><g><title>alloc::slice::merge (1 samples, 0.41%)</title><rect x="33.8776%" y="1061" width="0.4082%" height="15" fill="rgb(208,96,46)" fg:x="83" fg:w="1"/><text x="34.1276%" y="1071.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.41%)</title><rect x="33.8776%" y="1045" width="0.4082%" height="15" fill="rgb(239,3,39)" fg:x="83" fg:w="1"/><text x="34.1276%" y="1055.50"></text></g><g><title>[unknown] (85 samples, 34.69%)</title><rect x="0.0000%" y="1429" width="34.6939%" height="15" fill="rgb(233,210,1)" fg:x="0" fg:w="85"/><text x="0.2500%" y="1439.50">[unknown]</text></g><g><title>std::rt::lang_start_internal (1 samples, 0.41%)</title><rect x="34.2857%" y="1413" width="0.4082%" height="15" fill="rgb(244,137,37)" fg:x="84" fg:w="1"/><text x="34.5357%" y="1423.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.41%)</title><rect x="34.2857%" y="1397" width="0.4082%" height="15" fill="rgb(240,136,2)" fg:x="84" fg:w="1"/><text x="34.5357%" y="1407.50"></text></g><g><title>std::panicking::try (1 samples, 0.41%)</title><rect x="34.2857%" y="1381" width="0.4082%" height="15" fill="rgb(239,18,37)" fg:x="84" fg:w="1"/><text x="34.5357%" y="1391.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.41%)</title><rect x="34.2857%" y="1365" width="0.4082%" height="15" fill="rgb(218,185,22)" fg:x="84" fg:w="1"/><text x="34.5357%" y="1375.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (1 samples, 0.41%)</title><rect x="34.2857%" y="1349" width="0.4082%" height="15" fill="rgb(225,218,4)" fg:x="84" fg:w="1"/><text x="34.5357%" y="1359.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.41%)</title><rect x="34.2857%" y="1333" width="0.4082%" height="15" fill="rgb(230,182,32)" fg:x="84" fg:w="1"/><text x="34.5357%" y="1343.50"></text></g><g><title>std::panicking::try (1 samples, 0.41%)</title><rect x="34.2857%" y="1317" width="0.4082%" height="15" fill="rgb(242,56,43)" fg:x="84" fg:w="1"/><text x="34.5357%" y="1327.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.41%)</title><rect x="34.2857%" y="1301" width="0.4082%" height="15" fill="rgb(233,99,24)" fg:x="84" fg:w="1"/><text x="34.5357%" y="1311.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 0.41%)</title><rect x="34.2857%" y="1285" width="0.4082%" height="15" fill="rgb(234,209,42)" fg:x="84" fg:w="1"/><text x="34.5357%" y="1295.50"></text></g><g><title>std::rt::lang_start::{{closure}} (1 samples, 0.41%)</title><rect x="34.2857%" y="1269" width="0.4082%" height="15" fill="rgb(227,7,12)" fg:x="84" fg:w="1"/><text x="34.5357%" y="1279.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.41%)</title><rect x="34.2857%" y="1253" width="0.4082%" height="15" fill="rgb(245,203,43)" fg:x="84" fg:w="1"/><text x="34.5357%" y="1263.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.41%)</title><rect x="34.2857%" y="1237" width="0.4082%" height="15" fill="rgb(238,205,33)" fg:x="84" fg:w="1"/><text x="34.5357%" y="1247.50"></text></g><g><title>demoparser::main (1 samples, 0.41%)</title><rect x="34.2857%" y="1221" width="0.4082%" height="15" fill="rgb(231,56,7)" fg:x="84" fg:w="1"/><text x="34.5357%" y="1231.50"></text></g><g><title>rayon::iter::ParallelIterator::collect (1 samples, 0.41%)</title><rect x="34.2857%" y="1205" width="0.4082%" height="15" fill="rgb(244,186,29)" fg:x="84" fg:w="1"/><text x="34.5357%" y="1215.50"></text></g><g><title>rayon::iter::from_par_iter::&lt;impl rayon::iter::FromParallelIterator&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_par_iter (1 samples, 0.41%)</title><rect x="34.2857%" y="1189" width="0.4082%" height="15" fill="rgb(234,111,31)" fg:x="84" fg:w="1"/><text x="34.5357%" y="1199.50"></text></g><g><title>rayon::iter::from_par_iter::collect_extended (1 samples, 0.41%)</title><rect x="34.2857%" y="1173" width="0.4082%" height="15" fill="rgb(241,149,10)" fg:x="84" fg:w="1"/><text x="34.5357%" y="1183.50"></text></g><g><title>rayon::iter::extend::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend (1 samples, 0.41%)</title><rect x="34.2857%" y="1157" width="0.4082%" height="15" fill="rgb(249,206,44)" fg:x="84" fg:w="1"/><text x="34.5357%" y="1167.50"></text></g><g><title>rayon::iter::collect::special_extend (1 samples, 0.41%)</title><rect x="34.2857%" y="1141" width="0.4082%" height="15" fill="rgb(251,153,30)" fg:x="84" fg:w="1"/><text x="34.5357%" y="1151.50"></text></g><g><title>rayon::iter::collect::collect_with_consumer (1 samples, 0.41%)</title><rect x="34.2857%" y="1125" width="0.4082%" height="15" fill="rgb(239,152,38)" fg:x="84" fg:w="1"/><text x="34.5357%" y="1135.50"></text></g><g><title>rayon::iter::collect::special_extend::{{closure}} (1 samples, 0.41%)</title><rect x="34.2857%" y="1109" width="0.4082%" height="15" fill="rgb(249,139,47)" fg:x="84" fg:w="1"/><text x="34.5357%" y="1119.50"></text></g><g><title>&lt;rayon::iter::map::Map&lt;I,F&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (1 samples, 0.41%)</title><rect x="34.2857%" y="1093" width="0.4082%" height="15" fill="rgb(244,64,35)" fg:x="84" fg:w="1"/><text x="34.5357%" y="1103.50"></text></g><g><title>&lt;rayon::slice::Iter&lt;T&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (1 samples, 0.41%)</title><rect x="34.2857%" y="1077" width="0.4082%" height="15" fill="rgb(216,46,15)" fg:x="84" fg:w="1"/><text x="34.5357%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge (1 samples, 0.41%)</title><rect x="34.2857%" y="1061" width="0.4082%" height="15" fill="rgb(250,74,19)" fg:x="84" fg:w="1"/><text x="34.5357%" y="1071.50"></text></g><g><title>&lt;rayon::slice::Iter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (1 samples, 0.41%)</title><rect x="34.2857%" y="1045" width="0.4082%" height="15" fill="rgb(249,42,33)" fg:x="84" fg:w="1"/><text x="34.5357%" y="1055.50"></text></g><g><title>&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (1 samples, 0.41%)</title><rect x="34.2857%" y="1029" width="0.4082%" height="15" fill="rgb(242,149,17)" fg:x="84" fg:w="1"/><text x="34.5357%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (1 samples, 0.41%)</title><rect x="34.2857%" y="1013" width="0.4082%" height="15" fill="rgb(244,29,21)" fg:x="84" fg:w="1"/><text x="34.5357%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.41%)</title><rect x="34.2857%" y="997" width="0.4082%" height="15" fill="rgb(220,130,37)" fg:x="84" fg:w="1"/><text x="34.5357%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.41%)</title><rect x="34.2857%" y="981" width="0.4082%" height="15" fill="rgb(211,67,2)" fg:x="84" fg:w="1"/><text x="34.5357%" y="991.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.41%)</title><rect x="34.2857%" y="965" width="0.4082%" height="15" fill="rgb(235,68,52)" fg:x="84" fg:w="1"/><text x="34.5357%" y="975.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.41%)</title><rect x="34.2857%" y="949" width="0.4082%" height="15" fill="rgb(246,142,3)" fg:x="84" fg:w="1"/><text x="34.5357%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.41%)</title><rect x="34.2857%" y="933" width="0.4082%" height="15" fill="rgb(241,25,7)" fg:x="84" fg:w="1"/><text x="34.5357%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.41%)</title><rect x="34.2857%" y="917" width="0.4082%" height="15" fill="rgb(242,119,39)" fg:x="84" fg:w="1"/><text x="34.5357%" y="927.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.41%)</title><rect x="34.2857%" y="901" width="0.4082%" height="15" fill="rgb(241,98,45)" fg:x="84" fg:w="1"/><text x="34.5357%" y="911.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.41%)</title><rect x="34.2857%" y="885" width="0.4082%" height="15" fill="rgb(254,28,30)" fg:x="84" fg:w="1"/><text x="34.5357%" y="895.50"></text></g><g><title>demoparser::main::{{closure}} (1 samples, 0.41%)</title><rect x="34.2857%" y="869" width="0.4082%" height="15" fill="rgb(241,142,54)" fg:x="84" fg:w="1"/><text x="34.5357%" y="879.50"></text></g><g><title>demoparser::parse_demo (1 samples, 0.41%)</title><rect x="34.2857%" y="853" width="0.4082%" height="15" fill="rgb(222,85,15)" fg:x="84" fg:w="1"/><text x="34.5357%" y="863.50"></text></g><g><title>demoparser::parsing::parser::Parser::start_parsing (1 samples, 0.41%)</title><rect x="34.2857%" y="837" width="0.4082%" height="15" fill="rgb(210,85,47)" fg:x="84" fg:w="1"/><text x="34.5357%" y="847.50"></text></g><g><title>demoparser::parsing::parser::Parser::speed (1 samples, 0.41%)</title><rect x="34.2857%" y="821" width="0.4082%" height="15" fill="rgb(224,206,25)" fg:x="84" fg:w="1"/><text x="34.5357%" y="831.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_mandatory_ticks (1 samples, 0.41%)</title><rect x="34.2857%" y="805" width="0.4082%" height="15" fill="rgb(243,201,19)" fg:x="84" fg:w="1"/><text x="34.5357%" y="815.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (1 samples, 0.41%)</title><rect x="34.2857%" y="789" width="0.4082%" height="15" fill="rgb(236,59,4)" fg:x="84" fg:w="1"/><text x="34.5357%" y="799.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_cmd (1 samples, 0.41%)</title><rect x="34.2857%" y="773" width="0.4082%" height="15" fill="rgb(254,179,45)" fg:x="84" fg:w="1"/><text x="34.5357%" y="783.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_datatable (1 samples, 0.41%)</title><rect x="34.2857%" y="757" width="0.4082%" height="15" fill="rgb(226,14,10)" fg:x="84" fg:w="1"/><text x="34.5357%" y="767.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::flatten_dt (1 samples, 0.41%)</title><rect x="34.2857%" y="741" width="0.4082%" height="15" fill="rgb(244,27,41)" fg:x="84" fg:w="1"/><text x="34.5357%" y="751.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.41%)</title><rect x="34.2857%" y="725" width="0.4082%" height="15" fill="rgb(235,35,32)" fg:x="84" fg:w="1"/><text x="34.5357%" y="735.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.41%)</title><rect x="34.2857%" y="709" width="0.4082%" height="15" fill="rgb(218,68,31)" fg:x="84" fg:w="1"/><text x="34.5357%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.41%)</title><rect x="34.2857%" y="693" width="0.4082%" height="15" fill="rgb(207,120,37)" fg:x="84" fg:w="1"/><text x="34.5357%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.41%)</title><rect x="34.2857%" y="677" width="0.4082%" height="15" fill="rgb(227,98,0)" fg:x="84" fg:w="1"/><text x="34.5357%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.41%)</title><rect x="34.2857%" y="661" width="0.4082%" height="15" fill="rgb(207,7,3)" fg:x="84" fg:w="1"/><text x="34.5357%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.41%)</title><rect x="34.2857%" y="645" width="0.4082%" height="15" fill="rgb(206,98,19)" fg:x="84" fg:w="1"/><text x="34.5357%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.41%)</title><rect x="34.2857%" y="629" width="0.4082%" height="15" fill="rgb(217,5,26)" fg:x="84" fg:w="1"/><text x="34.5357%" y="639.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.41%)</title><rect x="34.2857%" y="613" width="0.4082%" height="15" fill="rgb(235,190,38)" fg:x="84" fg:w="1"/><text x="34.5357%" y="623.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.41%)</title><rect x="34.2857%" y="597" width="0.4082%" height="15" fill="rgb(247,86,24)" fg:x="84" fg:w="1"/><text x="34.5357%" y="607.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.41%)</title><rect x="34.2857%" y="581" width="0.4082%" height="15" fill="rgb(205,101,16)" fg:x="84" fg:w="1"/><text x="34.5357%" y="591.50"></text></g><g><title>mi_heap_malloc (1 samples, 0.41%)</title><rect x="34.2857%" y="565" width="0.4082%" height="15" fill="rgb(246,168,33)" fg:x="84" fg:w="1"/><text x="34.5357%" y="575.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.41%)</title><rect x="34.2857%" y="549" width="0.4082%" height="15" fill="rgb(231,114,1)" fg:x="84" fg:w="1"/><text x="34.5357%" y="559.50"></text></g><g><title>mi_find_page (1 samples, 0.41%)</title><rect x="34.2857%" y="533" width="0.4082%" height="15" fill="rgb(207,184,53)" fg:x="84" fg:w="1"/><text x="34.5357%" y="543.50"></text></g><g><title>mi_large_huge_page_alloc (1 samples, 0.41%)</title><rect x="34.2857%" y="517" width="0.4082%" height="15" fill="rgb(224,95,51)" fg:x="84" fg:w="1"/><text x="34.5357%" y="527.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.41%)</title><rect x="34.2857%" y="501" width="0.4082%" height="15" fill="rgb(212,188,45)" fg:x="84" fg:w="1"/><text x="34.5357%" y="511.50"></text></g><g><title>mi_page_init (1 samples, 0.41%)</title><rect x="34.2857%" y="485" width="0.4082%" height="15" fill="rgb(223,154,38)" fg:x="84" fg:w="1"/><text x="34.5357%" y="495.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.41%)</title><rect x="34.2857%" y="469" width="0.4082%" height="15" fill="rgb(251,22,52)" fg:x="84" fg:w="1"/><text x="34.5357%" y="479.50"></text></g><g><title>mi_page_extend_free (1 samples, 0.41%)</title><rect x="34.2857%" y="453" width="0.4082%" height="15" fill="rgb(229,209,22)" fg:x="84" fg:w="1"/><text x="34.5357%" y="463.50"></text></g><g><title>mi_page_free_list_extend (1 samples, 0.41%)</title><rect x="34.2857%" y="437" width="0.4082%" height="15" fill="rgb(234,138,34)" fg:x="84" fg:w="1"/><text x="34.5357%" y="447.50"></text></g><g><title>mi_block_set_next (1 samples, 0.41%)</title><rect x="34.2857%" y="421" width="0.4082%" height="15" fill="rgb(212,95,11)" fg:x="84" fg:w="1"/><text x="34.5357%" y="431.50"></text></g><g><title>mi_block_set_nextx (1 samples, 0.41%)</title><rect x="34.2857%" y="405" width="0.4082%" height="15" fill="rgb(240,179,47)" fg:x="84" fg:w="1"/><text x="34.5357%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="34.2857%" y="389" width="0.4082%" height="15" fill="rgb(240,163,11)" fg:x="84" fg:w="1"/><text x="34.5357%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="34.2857%" y="373" width="0.4082%" height="15" fill="rgb(236,37,12)" fg:x="84" fg:w="1"/><text x="34.5357%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="34.2857%" y="357" width="0.4082%" height="15" fill="rgb(232,164,16)" fg:x="84" fg:w="1"/><text x="34.5357%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="34.2857%" y="341" width="0.4082%" height="15" fill="rgb(244,205,15)" fg:x="84" fg:w="1"/><text x="34.5357%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="34.2857%" y="325" width="0.4082%" height="15" fill="rgb(223,117,47)" fg:x="84" fg:w="1"/><text x="34.5357%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="34.2857%" y="309" width="0.4082%" height="15" fill="rgb(244,107,35)" fg:x="84" fg:w="1"/><text x="34.5357%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="34.2857%" y="293" width="0.4082%" height="15" fill="rgb(205,140,8)" fg:x="84" fg:w="1"/><text x="34.5357%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="34.2857%" y="277" width="0.4082%" height="15" fill="rgb(228,84,46)" fg:x="84" fg:w="1"/><text x="34.5357%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="34.2857%" y="261" width="0.4082%" height="15" fill="rgb(254,188,9)" fg:x="84" fg:w="1"/><text x="34.5357%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="34.2857%" y="245" width="0.4082%" height="15" fill="rgb(206,112,54)" fg:x="84" fg:w="1"/><text x="34.5357%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="34.2857%" y="229" width="0.4082%" height="15" fill="rgb(216,84,49)" fg:x="84" fg:w="1"/><text x="34.5357%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="34.2857%" y="213" width="0.4082%" height="15" fill="rgb(214,194,35)" fg:x="84" fg:w="1"/><text x="34.5357%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="34.2857%" y="197" width="0.4082%" height="15" fill="rgb(249,28,3)" fg:x="84" fg:w="1"/><text x="34.5357%" y="207.50"></text></g><g><title>mi_find_page (13 samples, 5.31%)</title><rect x="35.1020%" y="1029" width="5.3061%" height="15" fill="rgb(222,56,52)" fg:x="86" fg:w="13"/><text x="35.3520%" y="1039.50">mi_fin..</text></g><g><title>mi_find_free_page (13 samples, 5.31%)</title><rect x="35.1020%" y="1013" width="5.3061%" height="15" fill="rgb(245,217,50)" fg:x="86" fg:w="13"/><text x="35.3520%" y="1023.50">mi_fin..</text></g><g><title>mi_page_queue_find_free_ex (13 samples, 5.31%)</title><rect x="35.1020%" y="997" width="5.3061%" height="15" fill="rgb(213,201,24)" fg:x="86" fg:w="13"/><text x="35.3520%" y="1007.50">mi_pag..</text></g><g><title>mi_page_fresh (13 samples, 5.31%)</title><rect x="35.1020%" y="981" width="5.3061%" height="15" fill="rgb(248,116,28)" fg:x="86" fg:w="13"/><text x="35.3520%" y="991.50">mi_pag..</text></g><g><title>mi_page_fresh_alloc (13 samples, 5.31%)</title><rect x="35.1020%" y="965" width="5.3061%" height="15" fill="rgb(219,72,43)" fg:x="86" fg:w="13"/><text x="35.3520%" y="975.50">mi_pag..</text></g><g><title>mi_segments_page_alloc (13 samples, 5.31%)</title><rect x="35.1020%" y="949" width="5.3061%" height="15" fill="rgb(209,138,14)" fg:x="86" fg:w="13"/><text x="35.3520%" y="959.50">mi_seg..</text></g><g><title>mi_segment_reclaim_or_alloc (13 samples, 5.31%)</title><rect x="35.1020%" y="933" width="5.3061%" height="15" fill="rgb(222,18,33)" fg:x="86" fg:w="13"/><text x="35.3520%" y="943.50">mi_seg..</text></g><g><title>mi_segment_alloc (13 samples, 5.31%)</title><rect x="35.1020%" y="917" width="5.3061%" height="15" fill="rgb(213,199,7)" fg:x="86" fg:w="13"/><text x="35.3520%" y="927.50">mi_seg..</text></g><g><title>mi_segment_init (13 samples, 5.31%)</title><rect x="35.1020%" y="901" width="5.3061%" height="15" fill="rgb(250,110,10)" fg:x="86" fg:w="13"/><text x="35.3520%" y="911.50">mi_seg..</text></g><g><title>memset (13 samples, 5.31%)</title><rect x="35.1020%" y="885" width="5.3061%" height="15" fill="rgb(248,123,6)" fg:x="86" fg:w="13"/><text x="35.3520%" y="895.50">memset</text></g><g><title>[libc.so.6] (13 samples, 5.31%)</title><rect x="35.1020%" y="869" width="5.3061%" height="15" fill="rgb(206,91,31)" fg:x="86" fg:w="13"/><text x="35.3520%" y="879.50">[libc...</text></g><g><title>[unknown] (13 samples, 5.31%)</title><rect x="35.1020%" y="853" width="5.3061%" height="15" fill="rgb(211,154,13)" fg:x="86" fg:w="13"/><text x="35.3520%" y="863.50">[unkno..</text></g><g><title>[unknown] (13 samples, 5.31%)</title><rect x="35.1020%" y="837" width="5.3061%" height="15" fill="rgb(225,148,7)" fg:x="86" fg:w="13"/><text x="35.3520%" y="847.50">[unkno..</text></g><g><title>[unknown] (13 samples, 5.31%)</title><rect x="35.1020%" y="821" width="5.3061%" height="15" fill="rgb(220,160,43)" fg:x="86" fg:w="13"/><text x="35.3520%" y="831.50">[unkno..</text></g><g><title>[unknown] (12 samples, 4.90%)</title><rect x="35.5102%" y="805" width="4.8980%" height="15" fill="rgb(213,52,39)" fg:x="87" fg:w="12"/><text x="35.7602%" y="815.50">[unkno..</text></g><g><title>[unknown] (9 samples, 3.67%)</title><rect x="36.7347%" y="789" width="3.6735%" height="15" fill="rgb(243,137,7)" fg:x="90" fg:w="9"/><text x="36.9847%" y="799.50">[unk..</text></g><g><title>[unknown] (7 samples, 2.86%)</title><rect x="37.5510%" y="773" width="2.8571%" height="15" fill="rgb(230,79,13)" fg:x="92" fg:w="7"/><text x="37.8010%" y="783.50">[u..</text></g><g><title>[unknown] (5 samples, 2.04%)</title><rect x="38.3673%" y="757" width="2.0408%" height="15" fill="rgb(247,105,23)" fg:x="94" fg:w="5"/><text x="38.6173%" y="767.50">[..</text></g><g><title>[unknown] (4 samples, 1.63%)</title><rect x="38.7755%" y="741" width="1.6327%" height="15" fill="rgb(223,179,41)" fg:x="95" fg:w="4"/><text x="39.0255%" y="751.50"></text></g><g><title>[unknown] (4 samples, 1.63%)</title><rect x="38.7755%" y="725" width="1.6327%" height="15" fill="rgb(218,9,34)" fg:x="95" fg:w="4"/><text x="39.0255%" y="735.50"></text></g><g><title>[unknown] (4 samples, 1.63%)</title><rect x="38.7755%" y="709" width="1.6327%" height="15" fill="rgb(222,106,8)" fg:x="95" fg:w="4"/><text x="39.0255%" y="719.50"></text></g><g><title>[unknown] (4 samples, 1.63%)</title><rect x="38.7755%" y="693" width="1.6327%" height="15" fill="rgb(211,220,0)" fg:x="95" fg:w="4"/><text x="39.0255%" y="703.50"></text></g><g><title>[unknown] (3 samples, 1.22%)</title><rect x="39.1837%" y="677" width="1.2245%" height="15" fill="rgb(229,52,16)" fg:x="96" fg:w="3"/><text x="39.4337%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="40.0000%" y="661" width="0.4082%" height="15" fill="rgb(212,155,18)" fg:x="98" fg:w="1"/><text x="40.2500%" y="671.50"></text></g><g><title>rayon_core::job::JobFifo::new (19 samples, 7.76%)</title><rect x="35.1020%" y="1173" width="7.7551%" height="15" fill="rgb(242,21,14)" fg:x="86" fg:w="19"/><text x="35.3520%" y="1183.50">rayon_core:..</text></g><g><title>crossbeam_deque::deque::Injector&lt;T&gt;::new (19 samples, 7.76%)</title><rect x="35.1020%" y="1157" width="7.7551%" height="15" fill="rgb(222,19,48)" fg:x="86" fg:w="19"/><text x="35.3520%" y="1167.50">crossbeam_d..</text></g><g><title>&lt;crossbeam_deque::deque::Injector&lt;T&gt; as core::default::Default&gt;::default (19 samples, 7.76%)</title><rect x="35.1020%" y="1141" width="7.7551%" height="15" fill="rgb(232,45,27)" fg:x="86" fg:w="19"/><text x="35.3520%" y="1151.50">&lt;crossbeam_..</text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (19 samples, 7.76%)</title><rect x="35.1020%" y="1125" width="7.7551%" height="15" fill="rgb(249,103,42)" fg:x="86" fg:w="19"/><text x="35.3520%" y="1135.50">alloc::boxe..</text></g><g><title>alloc::alloc::exchange_malloc (19 samples, 7.76%)</title><rect x="35.1020%" y="1109" width="7.7551%" height="15" fill="rgb(246,81,33)" fg:x="86" fg:w="19"/><text x="35.3520%" y="1119.50">alloc::allo..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19 samples, 7.76%)</title><rect x="35.1020%" y="1093" width="7.7551%" height="15" fill="rgb(252,33,42)" fg:x="86" fg:w="19"/><text x="35.3520%" y="1103.50">&lt;alloc::all..</text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 7.76%)</title><rect x="35.1020%" y="1077" width="7.7551%" height="15" fill="rgb(209,212,41)" fg:x="86" fg:w="19"/><text x="35.3520%" y="1087.50">alloc::allo..</text></g><g><title>alloc::alloc::alloc (19 samples, 7.76%)</title><rect x="35.1020%" y="1061" width="7.7551%" height="15" fill="rgb(207,154,6)" fg:x="86" fg:w="19"/><text x="35.3520%" y="1071.50">alloc::allo..</text></g><g><title>_mi_malloc_generic (19 samples, 7.76%)</title><rect x="35.1020%" y="1045" width="7.7551%" height="15" fill="rgb(223,64,47)" fg:x="86" fg:w="19"/><text x="35.3520%" y="1055.50">_mi_malloc_..</text></g><g><title>mi_thread_init (6 samples, 2.45%)</title><rect x="40.4082%" y="1029" width="2.4490%" height="15" fill="rgb(211,161,38)" fg:x="99" fg:w="6"/><text x="40.6582%" y="1039.50">mi..</text></g><g><title>_mi_heap_init (6 samples, 2.45%)</title><rect x="40.4082%" y="1013" width="2.4490%" height="15" fill="rgb(219,138,40)" fg:x="99" fg:w="6"/><text x="40.6582%" y="1023.50">_m..</text></g><g><title>_mi_memcpy_aligned (6 samples, 2.45%)</title><rect x="40.4082%" y="997" width="2.4490%" height="15" fill="rgb(241,228,46)" fg:x="99" fg:w="6"/><text x="40.6582%" y="1007.50">_m..</text></g><g><title>_mi_memcpy (6 samples, 2.45%)</title><rect x="40.4082%" y="981" width="2.4490%" height="15" fill="rgb(223,209,38)" fg:x="99" fg:w="6"/><text x="40.6582%" y="991.50">_m..</text></g><g><title>memcpy (6 samples, 2.45%)</title><rect x="40.4082%" y="965" width="2.4490%" height="15" fill="rgb(236,164,45)" fg:x="99" fg:w="6"/><text x="40.6582%" y="975.50">me..</text></g><g><title>[unknown] (6 samples, 2.45%)</title><rect x="40.4082%" y="949" width="2.4490%" height="15" fill="rgb(231,15,5)" fg:x="99" fg:w="6"/><text x="40.6582%" y="959.50">[u..</text></g><g><title>[unknown] (6 samples, 2.45%)</title><rect x="40.4082%" y="933" width="2.4490%" height="15" fill="rgb(252,35,15)" fg:x="99" fg:w="6"/><text x="40.6582%" y="943.50">[u..</text></g><g><title>[unknown] (6 samples, 2.45%)</title><rect x="40.4082%" y="917" width="2.4490%" height="15" fill="rgb(248,181,18)" fg:x="99" fg:w="6"/><text x="40.6582%" y="927.50">[u..</text></g><g><title>[unknown] (6 samples, 2.45%)</title><rect x="40.4082%" y="901" width="2.4490%" height="15" fill="rgb(233,39,42)" fg:x="99" fg:w="6"/><text x="40.6582%" y="911.50">[u..</text></g><g><title>[unknown] (4 samples, 1.63%)</title><rect x="41.2245%" y="885" width="1.6327%" height="15" fill="rgb(238,110,33)" fg:x="101" fg:w="4"/><text x="41.4745%" y="895.50"></text></g><g><title>[unknown] (4 samples, 1.63%)</title><rect x="41.2245%" y="869" width="1.6327%" height="15" fill="rgb(233,195,10)" fg:x="101" fg:w="4"/><text x="41.4745%" y="879.50"></text></g><g><title>[unknown] (3 samples, 1.22%)</title><rect x="41.6327%" y="853" width="1.2245%" height="15" fill="rgb(254,105,3)" fg:x="102" fg:w="3"/><text x="41.8827%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="42.0408%" y="837" width="0.8163%" height="15" fill="rgb(221,225,9)" fg:x="103" fg:w="2"/><text x="42.2908%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="42.0408%" y="821" width="0.8163%" height="15" fill="rgb(224,227,45)" fg:x="103" fg:w="2"/><text x="42.2908%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="42.0408%" y="805" width="0.8163%" height="15" fill="rgb(229,198,43)" fg:x="103" fg:w="2"/><text x="42.2908%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="42.4490%" y="789" width="0.4082%" height="15" fill="rgb(206,209,35)" fg:x="104" fg:w="1"/><text x="42.6990%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="42.4490%" y="773" width="0.4082%" height="15" fill="rgb(245,195,53)" fg:x="104" fg:w="1"/><text x="42.6990%" y="783.50"></text></g><g><title>std::panic::catch_unwind (20 samples, 8.16%)</title><rect x="35.1020%" y="1317" width="8.1633%" height="15" fill="rgb(240,92,26)" fg:x="86" fg:w="20"/><text x="35.3520%" y="1327.50">std::panic:..</text></g><g><title>std::panicking::try (20 samples, 8.16%)</title><rect x="35.1020%" y="1301" width="8.1633%" height="15" fill="rgb(207,40,23)" fg:x="86" fg:w="20"/><text x="35.3520%" y="1311.50">std::panick..</text></g><g><title>std::panicking::try::do_call (20 samples, 8.16%)</title><rect x="35.1020%" y="1285" width="8.1633%" height="15" fill="rgb(223,111,35)" fg:x="86" fg:w="20"/><text x="35.3520%" y="1295.50">std::panick..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (20 samples, 8.16%)</title><rect x="35.1020%" y="1269" width="8.1633%" height="15" fill="rgb(229,147,28)" fg:x="86" fg:w="20"/><text x="35.3520%" y="1279.50">&lt;core::pani..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (20 samples, 8.16%)</title><rect x="35.1020%" y="1253" width="8.1633%" height="15" fill="rgb(211,29,28)" fg:x="86" fg:w="20"/><text x="35.3520%" y="1263.50">std::thread..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (20 samples, 8.16%)</title><rect x="35.1020%" y="1237" width="8.1633%" height="15" fill="rgb(228,72,33)" fg:x="86" fg:w="20"/><text x="35.3520%" y="1247.50">std::sys_co..</text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (20 samples, 8.16%)</title><rect x="35.1020%" y="1221" width="8.1633%" height="15" fill="rgb(205,214,31)" fg:x="86" fg:w="20"/><text x="35.3520%" y="1231.50">&lt;rayon_core..</text></g><g><title>rayon_core::registry::ThreadBuilder::run (20 samples, 8.16%)</title><rect x="35.1020%" y="1205" width="8.1633%" height="15" fill="rgb(224,111,15)" fg:x="86" fg:w="20"/><text x="35.3520%" y="1215.50">rayon_core:..</text></g><g><title>rayon_core::registry::main_loop (20 samples, 8.16%)</title><rect x="35.1020%" y="1189" width="8.1633%" height="15" fill="rgb(253,21,26)" fg:x="86" fg:w="20"/><text x="35.3520%" y="1199.50">rayon_core:..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.41%)</title><rect x="42.8571%" y="1173" width="0.4082%" height="15" fill="rgb(245,139,43)" fg:x="105" fg:w="1"/><text x="43.1071%" y="1183.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.41%)</title><rect x="42.8571%" y="1157" width="0.4082%" height="15" fill="rgb(252,170,7)" fg:x="105" fg:w="1"/><text x="43.1071%" y="1167.50"></text></g><g><title>rayon_core::registry::WorkerThread::take_local_job (1 samples, 0.41%)</title><rect x="42.8571%" y="1141" width="0.4082%" height="15" fill="rgb(231,118,14)" fg:x="105" fg:w="1"/><text x="43.1071%" y="1151.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1 samples, 0.41%)</title><rect x="42.8571%" y="1125" width="0.4082%" height="15" fill="rgb(238,83,0)" fg:x="105" fg:w="1"/><text x="43.1071%" y="1135.50"></text></g><g><title>crossbeam_epoch::default::pin (1 samples, 0.41%)</title><rect x="42.8571%" y="1109" width="0.4082%" height="15" fill="rgb(221,39,39)" fg:x="105" fg:w="1"/><text x="43.1071%" y="1119.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1 samples, 0.41%)</title><rect x="42.8571%" y="1093" width="0.4082%" height="15" fill="rgb(222,119,46)" fg:x="105" fg:w="1"/><text x="43.1071%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.41%)</title><rect x="42.8571%" y="1077" width="0.4082%" height="15" fill="rgb(222,165,49)" fg:x="105" fg:w="1"/><text x="43.1071%" y="1087.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (1 samples, 0.41%)</title><rect x="42.8571%" y="1061" width="0.4082%" height="15" fill="rgb(219,113,52)" fg:x="105" fg:w="1"/><text x="43.1071%" y="1071.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (1 samples, 0.41%)</title><rect x="42.8571%" y="1045" width="0.4082%" height="15" fill="rgb(214,7,15)" fg:x="105" fg:w="1"/><text x="43.1071%" y="1055.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (1 samples, 0.41%)</title><rect x="42.8571%" y="1029" width="0.4082%" height="15" fill="rgb(235,32,4)" fg:x="105" fg:w="1"/><text x="43.1071%" y="1039.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (1 samples, 0.41%)</title><rect x="42.8571%" y="1013" width="0.4082%" height="15" fill="rgb(238,90,54)" fg:x="105" fg:w="1"/><text x="43.1071%" y="1023.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::compare_exchange (1 samples, 0.41%)</title><rect x="42.8571%" y="997" width="0.4082%" height="15" fill="rgb(213,208,19)" fg:x="105" fg:w="1"/><text x="43.1071%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.41%)</title><rect x="42.8571%" y="981" width="0.4082%" height="15" fill="rgb(233,156,4)" fg:x="105" fg:w="1"/><text x="43.1071%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.41%)</title><rect x="42.8571%" y="965" width="0.4082%" height="15" fill="rgb(207,194,5)" fg:x="105" fg:w="1"/><text x="43.1071%" y="975.50"></text></g><g><title>__GI___mprotect (1 samples, 0.41%)</title><rect x="43.2653%" y="1157" width="0.4082%" height="15" fill="rgb(206,111,30)" fg:x="106" fg:w="1"/><text x="43.5153%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="43.2653%" y="1141" width="0.4082%" height="15" fill="rgb(243,70,54)" fg:x="106" fg:w="1"/><text x="43.5153%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (23 samples, 9.39%)</title><rect x="35.1020%" y="1381" width="9.3878%" height="15" fill="rgb(242,28,8)" fg:x="86" fg:w="23"/><text x="35.3520%" y="1391.50">&lt;alloc::boxed..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (23 samples, 9.39%)</title><rect x="35.1020%" y="1365" width="9.3878%" height="15" fill="rgb(219,106,18)" fg:x="86" fg:w="23"/><text x="35.3520%" y="1375.50">&lt;alloc::boxed..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (23 samples, 9.39%)</title><rect x="35.1020%" y="1349" width="9.3878%" height="15" fill="rgb(244,222,10)" fg:x="86" fg:w="23"/><text x="35.3520%" y="1359.50">core::ops::fu..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (23 samples, 9.39%)</title><rect x="35.1020%" y="1333" width="9.3878%" height="15" fill="rgb(236,179,52)" fg:x="86" fg:w="23"/><text x="35.3520%" y="1343.50">std::thread::..</text></g><g><title>std::sys::unix::thread::guard::current (3 samples, 1.22%)</title><rect x="43.2653%" y="1317" width="1.2245%" height="15" fill="rgb(213,23,39)" fg:x="106" fg:w="3"/><text x="43.5153%" y="1327.50"></text></g><g><title>__pthread_getattr_np (3 samples, 1.22%)</title><rect x="43.2653%" y="1301" width="1.2245%" height="15" fill="rgb(238,48,10)" fg:x="106" fg:w="3"/><text x="43.5153%" y="1311.50"></text></g><g><title>__GI___libc_malloc (3 samples, 1.22%)</title><rect x="43.2653%" y="1285" width="1.2245%" height="15" fill="rgb(251,196,23)" fg:x="106" fg:w="3"/><text x="43.5153%" y="1295.50"></text></g><g><title>tcache_init (3 samples, 1.22%)</title><rect x="43.2653%" y="1269" width="1.2245%" height="15" fill="rgb(250,152,24)" fg:x="106" fg:w="3"/><text x="43.5153%" y="1279.50"></text></g><g><title>tcache_init (3 samples, 1.22%)</title><rect x="43.2653%" y="1253" width="1.2245%" height="15" fill="rgb(209,150,17)" fg:x="106" fg:w="3"/><text x="43.5153%" y="1263.50"></text></g><g><title>arena_get2 (3 samples, 1.22%)</title><rect x="43.2653%" y="1237" width="1.2245%" height="15" fill="rgb(234,202,34)" fg:x="106" fg:w="3"/><text x="43.5153%" y="1247.50"></text></g><g><title>arena_get2 (3 samples, 1.22%)</title><rect x="43.2653%" y="1221" width="1.2245%" height="15" fill="rgb(253,148,53)" fg:x="106" fg:w="3"/><text x="43.5153%" y="1231.50"></text></g><g><title>_int_new_arena (3 samples, 1.22%)</title><rect x="43.2653%" y="1205" width="1.2245%" height="15" fill="rgb(218,129,16)" fg:x="106" fg:w="3"/><text x="43.5153%" y="1215.50"></text></g><g><title>new_heap (3 samples, 1.22%)</title><rect x="43.2653%" y="1189" width="1.2245%" height="15" fill="rgb(216,85,19)" fg:x="106" fg:w="3"/><text x="43.5153%" y="1199.50"></text></g><g><title>alloc_new_heap (3 samples, 1.22%)</title><rect x="43.2653%" y="1173" width="1.2245%" height="15" fill="rgb(235,228,7)" fg:x="106" fg:w="3"/><text x="43.5153%" y="1183.50"></text></g><g><title>__GI___munmap (2 samples, 0.82%)</title><rect x="43.6735%" y="1157" width="0.8163%" height="15" fill="rgb(245,175,0)" fg:x="107" fg:w="2"/><text x="43.9235%" y="1167.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="43.6735%" y="1141" width="0.8163%" height="15" fill="rgb(208,168,36)" fg:x="107" fg:w="2"/><text x="43.9235%" y="1151.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="43.6735%" y="1125" width="0.8163%" height="15" fill="rgb(246,171,24)" fg:x="107" fg:w="2"/><text x="43.9235%" y="1135.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="43.6735%" y="1109" width="0.8163%" height="15" fill="rgb(215,142,24)" fg:x="107" fg:w="2"/><text x="43.9235%" y="1119.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="43.6735%" y="1093" width="0.8163%" height="15" fill="rgb(250,187,7)" fg:x="107" fg:w="2"/><text x="43.9235%" y="1103.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="43.6735%" y="1077" width="0.8163%" height="15" fill="rgb(228,66,33)" fg:x="107" fg:w="2"/><text x="43.9235%" y="1087.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="43.6735%" y="1061" width="0.8163%" height="15" fill="rgb(234,215,21)" fg:x="107" fg:w="2"/><text x="43.9235%" y="1071.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="43.6735%" y="1045" width="0.8163%" height="15" fill="rgb(222,191,20)" fg:x="107" fg:w="2"/><text x="43.9235%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="44.0816%" y="1029" width="0.4082%" height="15" fill="rgb(245,79,54)" fg:x="108" fg:w="1"/><text x="44.3316%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="44.0816%" y="1013" width="0.4082%" height="15" fill="rgb(240,10,37)" fg:x="108" fg:w="1"/><text x="44.3316%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="44.0816%" y="997" width="0.4082%" height="15" fill="rgb(214,192,32)" fg:x="108" fg:w="1"/><text x="44.3316%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="44.0816%" y="981" width="0.4082%" height="15" fill="rgb(209,36,54)" fg:x="108" fg:w="1"/><text x="44.3316%" y="991.50"></text></g><g><title>__GI___mmap64 (2 samples, 0.82%)</title><rect x="44.4898%" y="1317" width="0.8163%" height="15" fill="rgb(220,10,11)" fg:x="109" fg:w="2"/><text x="44.7398%" y="1327.50"></text></g><g><title>__GI___mmap64 (2 samples, 0.82%)</title><rect x="44.4898%" y="1301" width="0.8163%" height="15" fill="rgb(221,106,17)" fg:x="109" fg:w="2"/><text x="44.7398%" y="1311.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="44.4898%" y="1285" width="0.8163%" height="15" fill="rgb(251,142,44)" fg:x="109" fg:w="2"/><text x="44.7398%" y="1295.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="44.4898%" y="1269" width="0.8163%" height="15" fill="rgb(238,13,15)" fg:x="109" fg:w="2"/><text x="44.7398%" y="1279.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="44.4898%" y="1253" width="0.8163%" height="15" fill="rgb(208,107,27)" fg:x="109" fg:w="2"/><text x="44.7398%" y="1263.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="44.4898%" y="1237" width="0.8163%" height="15" fill="rgb(205,136,37)" fg:x="109" fg:w="2"/><text x="44.7398%" y="1247.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="44.4898%" y="1221" width="0.8163%" height="15" fill="rgb(250,205,27)" fg:x="109" fg:w="2"/><text x="44.7398%" y="1231.50"></text></g><g><title>[unknown] (2 samples, 0.82%)</title><rect x="44.4898%" y="1205" width="0.8163%" height="15" fill="rgb(210,80,43)" fg:x="109" fg:w="2"/><text x="44.7398%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="44.8980%" y="1189" width="0.4082%" height="15" fill="rgb(247,160,36)" fg:x="110" fg:w="1"/><text x="45.1480%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="44.8980%" y="1173" width="0.4082%" height="15" fill="rgb(234,13,49)" fg:x="110" fg:w="1"/><text x="45.1480%" y="1183.50"></text></g><g><title>__GI___mprotect (1 samples, 0.41%)</title><rect x="45.3061%" y="1317" width="0.4082%" height="15" fill="rgb(234,122,0)" fg:x="111" fg:w="1"/><text x="45.5561%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="45.3061%" y="1301" width="0.4082%" height="15" fill="rgb(207,146,38)" fg:x="111" fg:w="1"/><text x="45.5561%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="45.3061%" y="1285" width="0.4082%" height="15" fill="rgb(207,177,25)" fg:x="111" fg:w="1"/><text x="45.5561%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="45.3061%" y="1269" width="0.4082%" height="15" fill="rgb(211,178,42)" fg:x="111" fg:w="1"/><text x="45.5561%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="45.3061%" y="1253" width="0.4082%" height="15" fill="rgb(230,69,54)" fg:x="111" fg:w="1"/><text x="45.5561%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="45.3061%" y="1237" width="0.4082%" height="15" fill="rgb(214,135,41)" fg:x="111" fg:w="1"/><text x="45.5561%" y="1247.50"></text></g><g><title>__clone3 (28 samples, 11.43%)</title><rect x="34.6939%" y="1429" width="11.4286%" height="15" fill="rgb(237,67,25)" fg:x="85" fg:w="28"/><text x="34.9439%" y="1439.50">__clone3</text></g><g><title>start_thread (28 samples, 11.43%)</title><rect x="34.6939%" y="1413" width="11.4286%" height="15" fill="rgb(222,189,50)" fg:x="85" fg:w="28"/><text x="34.9439%" y="1423.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (27 samples, 11.02%)</title><rect x="35.1020%" y="1397" width="11.0204%" height="15" fill="rgb(245,148,34)" fg:x="86" fg:w="27"/><text x="35.3520%" y="1407.50">std::sys::unix::..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (4 samples, 1.63%)</title><rect x="44.4898%" y="1381" width="1.6327%" height="15" fill="rgb(222,29,6)" fg:x="109" fg:w="4"/><text x="44.7398%" y="1391.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (4 samples, 1.63%)</title><rect x="44.4898%" y="1365" width="1.6327%" height="15" fill="rgb(221,189,43)" fg:x="109" fg:w="4"/><text x="44.7398%" y="1375.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (4 samples, 1.63%)</title><rect x="44.4898%" y="1349" width="1.6327%" height="15" fill="rgb(207,36,27)" fg:x="109" fg:w="4"/><text x="44.7398%" y="1359.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (4 samples, 1.63%)</title><rect x="44.4898%" y="1333" width="1.6327%" height="15" fill="rgb(217,90,24)" fg:x="109" fg:w="4"/><text x="44.7398%" y="1343.50"></text></g><g><title>std::sys::unix::os::page_size (1 samples, 0.41%)</title><rect x="45.7143%" y="1317" width="0.4082%" height="15" fill="rgb(224,66,35)" fg:x="112" fg:w="1"/><text x="45.9643%" y="1327.50"></text></g><g><title>__GI___sysconf (1 samples, 0.41%)</title><rect x="45.7143%" y="1301" width="0.4082%" height="15" fill="rgb(221,13,50)" fg:x="112" fg:w="1"/><text x="45.9643%" y="1311.50"></text></g><g><title>linux_sysconf (1 samples, 0.41%)</title><rect x="45.7143%" y="1285" width="0.4082%" height="15" fill="rgb(236,68,49)" fg:x="112" fg:w="1"/><text x="45.9643%" y="1295.50"></text></g><g><title>posix_sysconf (1 samples, 0.41%)</title><rect x="45.7143%" y="1269" width="0.4082%" height="15" fill="rgb(229,146,28)" fg:x="112" fg:w="1"/><text x="45.9643%" y="1279.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.41%)</title><rect x="46.1224%" y="789" width="0.4082%" height="15" fill="rgb(225,31,38)" fg:x="113" fg:w="1"/><text x="46.3724%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;memmap2::Mmap&gt; (1 samples, 0.41%)</title><rect x="46.1224%" y="773" width="0.4082%" height="15" fill="rgb(250,208,3)" fg:x="113" fg:w="1"/><text x="46.3724%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;memmap2::os::MmapInner&gt; (1 samples, 0.41%)</title><rect x="46.1224%" y="757" width="0.4082%" height="15" fill="rgb(246,54,23)" fg:x="113" fg:w="1"/><text x="46.3724%" y="767.50"></text></g><g><title>__GI___munmap (1 samples, 0.41%)</title><rect x="46.1224%" y="741" width="0.4082%" height="15" fill="rgb(243,76,11)" fg:x="113" fg:w="1"/><text x="46.3724%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="46.1224%" y="725" width="0.4082%" height="15" fill="rgb(245,21,50)" fg:x="113" fg:w="1"/><text x="46.3724%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="46.1224%" y="709" width="0.4082%" height="15" fill="rgb(228,9,43)" fg:x="113" fg:w="1"/><text x="46.3724%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="46.1224%" y="693" width="0.4082%" height="15" fill="rgb(208,100,47)" fg:x="113" fg:w="1"/><text x="46.3724%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="46.1224%" y="677" width="0.4082%" height="15" fill="rgb(232,26,8)" fg:x="113" fg:w="1"/><text x="46.3724%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="46.1224%" y="661" width="0.4082%" height="15" fill="rgb(216,166,38)" fg:x="113" fg:w="1"/><text x="46.3724%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="46.1224%" y="645" width="0.4082%" height="15" fill="rgb(251,202,51)" fg:x="113" fg:w="1"/><text x="46.3724%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="46.1224%" y="629" width="0.4082%" height="15" fill="rgb(254,216,34)" fg:x="113" fg:w="1"/><text x="46.3724%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="46.1224%" y="613" width="0.4082%" height="15" fill="rgb(251,32,27)" fg:x="113" fg:w="1"/><text x="46.3724%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="46.1224%" y="597" width="0.4082%" height="15" fill="rgb(208,127,28)" fg:x="113" fg:w="1"/><text x="46.3724%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="46.1224%" y="581" width="0.4082%" height="15" fill="rgb(224,137,22)" fg:x="113" fg:w="1"/><text x="46.3724%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.41%)</title><rect x="46.5306%" y="789" width="0.4082%" height="15" fill="rgb(254,70,32)" fg:x="114" fg:w="1"/><text x="46.7806%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="46.5306%" y="773" width="0.4082%" height="15" fill="rgb(229,75,37)" fg:x="114" fg:w="1"/><text x="46.7806%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="46.5306%" y="757" width="0.4082%" height="15" fill="rgb(252,64,23)" fg:x="114" fg:w="1"/><text x="46.7806%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="46.5306%" y="741" width="0.4082%" height="15" fill="rgb(232,162,48)" fg:x="114" fg:w="1"/><text x="46.7806%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.41%)</title><rect x="46.5306%" y="725" width="0.4082%" height="15" fill="rgb(246,160,12)" fg:x="114" fg:w="1"/><text x="46.7806%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.41%)</title><rect x="46.5306%" y="709" width="0.4082%" height="15" fill="rgb(247,166,0)" fg:x="114" fg:w="1"/><text x="46.7806%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.41%)</title><rect x="46.5306%" y="693" width="0.4082%" height="15" fill="rgb(249,219,21)" fg:x="114" fg:w="1"/><text x="46.7806%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.41%)</title><rect x="46.5306%" y="677" width="0.4082%" height="15" fill="rgb(205,209,3)" fg:x="114" fg:w="1"/><text x="46.7806%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (1 samples, 0.41%)</title><rect x="46.5306%" y="661" width="0.4082%" height="15" fill="rgb(243,44,1)" fg:x="114" fg:w="1"/><text x="46.7806%" y="671.50"></text></g><g><title>core::ptr::write (1 samples, 0.41%)</title><rect x="46.5306%" y="645" width="0.4082%" height="15" fill="rgb(206,159,16)" fg:x="114" fg:w="1"/><text x="46.7806%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="46.5306%" y="629" width="0.4082%" height="15" fill="rgb(244,77,30)" fg:x="114" fg:w="1"/><text x="46.7806%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="46.5306%" y="613" width="0.4082%" height="15" fill="rgb(218,69,12)" fg:x="114" fg:w="1"/><text x="46.7806%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="46.5306%" y="597" width="0.4082%" height="15" fill="rgb(212,87,7)" fg:x="114" fg:w="1"/><text x="46.7806%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="46.5306%" y="581" width="0.4082%" height="15" fill="rgb(245,114,25)" fg:x="114" fg:w="1"/><text x="46.7806%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="46.5306%" y="565" width="0.4082%" height="15" fill="rgb(210,61,42)" fg:x="114" fg:w="1"/><text x="46.7806%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser_settings::Maps&gt; (1 samples, 0.41%)</title><rect x="46.9388%" y="773" width="0.4082%" height="15" fill="rgb(211,52,33)" fg:x="115" fg:w="1"/><text x="47.1888%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u16,demoparser::parsing::demo_parsing::data_table::ServerClass,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.41%)</title><rect x="46.9388%" y="757" width="0.4082%" height="15" fill="rgb(234,58,33)" fg:x="115" fg:w="1"/><text x="47.1888%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u16,demoparser::parsing::demo_parsing::data_table::ServerClass,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.41%)</title><rect x="46.9388%" y="741" width="0.4082%" height="15" fill="rgb(220,115,36)" fg:x="115" fg:w="1"/><text x="47.1888%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u16,demoparser::parsing::demo_parsing::data_table::ServerClass)&gt;&gt; (1 samples, 0.41%)</title><rect x="46.9388%" y="725" width="0.4082%" height="15" fill="rgb(243,153,54)" fg:x="115" fg:w="1"/><text x="47.1888%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.41%)</title><rect x="46.9388%" y="709" width="0.4082%" height="15" fill="rgb(251,47,18)" fg:x="115" fg:w="1"/><text x="47.1888%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.41%)</title><rect x="46.9388%" y="693" width="0.4082%" height="15" fill="rgb(242,102,42)" fg:x="115" fg:w="1"/><text x="47.1888%" y="703.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.41%)</title><rect x="46.9388%" y="677" width="0.4082%" height="15" fill="rgb(234,31,38)" fg:x="115" fg:w="1"/><text x="47.1888%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.41%)</title><rect x="46.9388%" y="661" width="0.4082%" height="15" fill="rgb(221,117,51)" fg:x="115" fg:w="1"/><text x="47.1888%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u16,demoparser::parsing::demo_parsing::data_table::ServerClass)&gt; (1 samples, 0.41%)</title><rect x="46.9388%" y="645" width="0.4082%" height="15" fill="rgb(212,20,18)" fg:x="115" fg:w="1"/><text x="47.1888%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::data_table::ServerClass&gt; (1 samples, 0.41%)</title><rect x="46.9388%" y="629" width="0.4082%" height="15" fill="rgb(245,133,36)" fg:x="115" fg:w="1"/><text x="47.1888%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;demoparser::parsing::demo_parsing::entities::Prop&gt;&gt; (1 samples, 0.41%)</title><rect x="46.9388%" y="613" width="0.4082%" height="15" fill="rgb(212,6,19)" fg:x="115" fg:w="1"/><text x="47.1888%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.41%)</title><rect x="46.9388%" y="597" width="0.4082%" height="15" fill="rgb(218,1,36)" fg:x="115" fg:w="1"/><text x="47.1888%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[demoparser::parsing::demo_parsing::entities::Prop]&gt; (1 samples, 0.41%)</title><rect x="46.9388%" y="581" width="0.4082%" height="15" fill="rgb(246,84,54)" fg:x="115" fg:w="1"/><text x="47.1888%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::entities::Prop&gt; (1 samples, 0.41%)</title><rect x="46.9388%" y="565" width="0.4082%" height="15" fill="rgb(242,110,6)" fg:x="115" fg:w="1"/><text x="47.1888%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.41%)</title><rect x="46.9388%" y="549" width="0.4082%" height="15" fill="rgb(214,47,5)" fg:x="115" fg:w="1"/><text x="47.1888%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.41%)</title><rect x="46.9388%" y="533" width="0.4082%" height="15" fill="rgb(218,159,25)" fg:x="115" fg:w="1"/><text x="47.1888%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.41%)</title><rect x="46.9388%" y="517" width="0.4082%" height="15" fill="rgb(215,211,28)" fg:x="115" fg:w="1"/><text x="47.1888%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.41%)</title><rect x="46.9388%" y="501" width="0.4082%" height="15" fill="rgb(238,59,32)" fg:x="115" fg:w="1"/><text x="47.1888%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.41%)</title><rect x="46.9388%" y="485" width="0.4082%" height="15" fill="rgb(226,82,3)" fg:x="115" fg:w="1"/><text x="47.1888%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.41%)</title><rect x="46.9388%" y="469" width="0.4082%" height="15" fill="rgb(240,164,32)" fg:x="115" fg:w="1"/><text x="47.1888%" y="479.50"></text></g><g><title>mi_free (1 samples, 0.41%)</title><rect x="46.9388%" y="453" width="0.4082%" height="15" fill="rgb(232,46,7)" fg:x="115" fg:w="1"/><text x="47.1888%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser::Parser&gt; (2 samples, 0.82%)</title><rect x="46.9388%" y="789" width="0.8163%" height="15" fill="rgb(229,129,53)" fg:x="115" fg:w="2"/><text x="47.1888%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::parser_settings::ParserState&gt; (1 samples, 0.41%)</title><rect x="47.3469%" y="773" width="0.4082%" height="15" fill="rgb(234,188,29)" fg:x="116" fg:w="1"/><text x="47.5969%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;i32,demoparser::parsing::demo_parsing::entities::Entity,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.41%)</title><rect x="47.3469%" y="757" width="0.4082%" height="15" fill="rgb(246,141,4)" fg:x="116" fg:w="1"/><text x="47.5969%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;i32,demoparser::parsing::demo_parsing::entities::Entity,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.41%)</title><rect x="47.3469%" y="741" width="0.4082%" height="15" fill="rgb(229,23,39)" fg:x="116" fg:w="1"/><text x="47.5969%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(i32,demoparser::parsing::demo_parsing::entities::Entity)&gt;&gt; (1 samples, 0.41%)</title><rect x="47.3469%" y="725" width="0.4082%" height="15" fill="rgb(206,12,3)" fg:x="116" fg:w="1"/><text x="47.5969%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.41%)</title><rect x="47.3469%" y="709" width="0.4082%" height="15" fill="rgb(252,226,20)" fg:x="116" fg:w="1"/><text x="47.5969%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.41%)</title><rect x="47.3469%" y="693" width="0.4082%" height="15" fill="rgb(216,123,35)" fg:x="116" fg:w="1"/><text x="47.5969%" y="703.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.41%)</title><rect x="47.3469%" y="677" width="0.4082%" height="15" fill="rgb(212,68,40)" fg:x="116" fg:w="1"/><text x="47.5969%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.41%)</title><rect x="47.3469%" y="661" width="0.4082%" height="15" fill="rgb(254,125,32)" fg:x="116" fg:w="1"/><text x="47.5969%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;(i32,demoparser::parsing::demo_parsing::entities::Entity)&gt; (1 samples, 0.41%)</title><rect x="47.3469%" y="645" width="0.4082%" height="15" fill="rgb(253,97,22)" fg:x="116" fg:w="1"/><text x="47.5969%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;demoparser::parsing::demo_parsing::entities::Entity&gt; (1 samples, 0.41%)</title><rect x="47.3469%" y="629" width="0.4082%" height="15" fill="rgb(241,101,14)" fg:x="116" fg:w="1"/><text x="47.5969%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;demoparser::parsing::variants::PropData&gt;&gt;&gt; (1 samples, 0.41%)</title><rect x="47.3469%" y="613" width="0.4082%" height="15" fill="rgb(238,103,29)" fg:x="116" fg:w="1"/><text x="47.5969%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.41%)</title><rect x="47.3469%" y="597" width="0.4082%" height="15" fill="rgb(233,195,47)" fg:x="116" fg:w="1"/><text x="47.5969%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;demoparser::parsing::variants::PropData&gt;]&gt; (1 samples, 0.41%)</title><rect x="47.3469%" y="581" width="0.4082%" height="15" fill="rgb(246,218,30)" fg:x="116" fg:w="1"/><text x="47.5969%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;demoparser::parsing::variants::PropData&gt;&gt; (1 samples, 0.41%)</title><rect x="47.3469%" y="565" width="0.4082%" height="15" fill="rgb(219,145,47)" fg:x="116" fg:w="1"/><text x="47.5969%" y="575.50"></text></g><g><title>demoparser::parsing::cache::cache_reader::ReadCache::filter_game_events (1 samples, 0.41%)</title><rect x="47.7551%" y="757" width="0.4082%" height="15" fill="rgb(243,12,26)" fg:x="117" fg:w="1"/><text x="48.0051%" y="767.50"></text></g><g><title>demoparser::parsing::cache::cache_reader::ReadCache::read_game_events (1 samples, 0.41%)</title><rect x="47.7551%" y="741" width="0.4082%" height="15" fill="rgb(214,87,16)" fg:x="117" fg:w="1"/><text x="48.0051%" y="751.50"></text></g><g><title>demoparser::parsing::cache::cache_reader::ReadCache::read_bytes_from_index (1 samples, 0.41%)</title><rect x="47.7551%" y="725" width="0.4082%" height="15" fill="rgb(208,99,42)" fg:x="117" fg:w="1"/><text x="48.0051%" y="735.50"></text></g><g><title>demoparser::parsing::cache::cache_reader::ReadCache::decompress_bytes (1 samples, 0.41%)</title><rect x="47.7551%" y="709" width="0.4082%" height="15" fill="rgb(253,99,2)" fg:x="117" fg:w="1"/><text x="48.0051%" y="719.50"></text></g><g><title>std::io::Read::read_to_end (1 samples, 0.41%)</title><rect x="47.7551%" y="693" width="0.4082%" height="15" fill="rgb(220,168,23)" fg:x="117" fg:w="1"/><text x="48.0051%" y="703.50"></text></g><g><title>std::io::default_read_to_end (1 samples, 0.41%)</title><rect x="47.7551%" y="677" width="0.4082%" height="15" fill="rgb(242,38,24)" fg:x="117" fg:w="1"/><text x="48.0051%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.41%)</title><rect x="47.7551%" y="661" width="0.4082%" height="15" fill="rgb(225,182,9)" fg:x="117" fg:w="1"/><text x="48.0051%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.41%)</title><rect x="47.7551%" y="645" width="0.4082%" height="15" fill="rgb(243,178,37)" fg:x="117" fg:w="1"/><text x="48.0051%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.41%)</title><rect x="47.7551%" y="629" width="0.4082%" height="15" fill="rgb(232,139,19)" fg:x="117" fg:w="1"/><text x="48.0051%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.41%)</title><rect x="47.7551%" y="613" width="0.4082%" height="15" fill="rgb(225,201,24)" fg:x="117" fg:w="1"/><text x="48.0051%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.41%)</title><rect x="47.7551%" y="597" width="0.4082%" height="15" fill="rgb(221,47,46)" fg:x="117" fg:w="1"/><text x="48.0051%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.41%)</title><rect x="47.7551%" y="581" width="0.4082%" height="15" fill="rgb(249,23,13)" fg:x="117" fg:w="1"/><text x="48.0051%" y="591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.41%)</title><rect x="47.7551%" y="565" width="0.4082%" height="15" fill="rgb(219,9,5)" fg:x="117" fg:w="1"/><text x="48.0051%" y="575.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.41%)</title><rect x="47.7551%" y="549" width="0.4082%" height="15" fill="rgb(254,171,16)" fg:x="117" fg:w="1"/><text x="48.0051%" y="559.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.41%)</title><rect x="47.7551%" y="533" width="0.4082%" height="15" fill="rgb(230,171,20)" fg:x="117" fg:w="1"/><text x="48.0051%" y="543.50"></text></g><g><title>_mi_memcpy_aligned (1 samples, 0.41%)</title><rect x="47.7551%" y="517" width="0.4082%" height="15" fill="rgb(210,71,41)" fg:x="117" fg:w="1"/><text x="48.0051%" y="527.50"></text></g><g><title>_mi_memcpy (1 samples, 0.41%)</title><rect x="47.7551%" y="501" width="0.4082%" height="15" fill="rgb(206,173,20)" fg:x="117" fg:w="1"/><text x="48.0051%" y="511.50"></text></g><g><title>memcpy (1 samples, 0.41%)</title><rect x="47.7551%" y="485" width="0.4082%" height="15" fill="rgb(233,88,34)" fg:x="117" fg:w="1"/><text x="48.0051%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.41%)</title><rect x="47.7551%" y="469" width="0.4082%" height="15" fill="rgb(223,209,46)" fg:x="117" fg:w="1"/><text x="48.0051%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.41%)</title><rect x="48.1633%" y="725" width="0.4082%" height="15" fill="rgb(250,43,18)" fg:x="118" fg:w="1"/><text x="48.4133%" y="735.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.41%)</title><rect x="48.1633%" y="709" width="0.4082%" height="15" fill="rgb(208,13,10)" fg:x="118" fg:w="1"/><text x="48.4133%" y="719.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.41%)</title><rect x="48.1633%" y="693" width="0.4082%" height="15" fill="rgb(212,200,36)" fg:x="118" fg:w="1"/><text x="48.4133%" y="703.50"></text></g><g><title>demoparser::parsing::cache::cache_reader::ReadCache::filter_delta_ticks_wanted (6 samples, 2.45%)</title><rect x="48.1633%" y="741" width="2.4490%" height="15" fill="rgb(225,90,30)" fg:x="118" fg:w="6"/><text x="48.4133%" y="751.50">de..</text></g><g><title>core::slice::&lt;impl [T]&gt;::partition_point (5 samples, 2.04%)</title><rect x="48.5714%" y="725" width="2.0408%" height="15" fill="rgb(236,182,39)" fg:x="119" fg:w="5"/><text x="48.8214%" y="735.50">c..</text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (5 samples, 2.04%)</title><rect x="48.5714%" y="709" width="2.0408%" height="15" fill="rgb(212,144,35)" fg:x="119" fg:w="5"/><text x="48.8214%" y="719.50">c..</text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.41%)</title><rect x="50.6122%" y="693" width="0.4082%" height="15" fill="rgb(228,63,44)" fg:x="124" fg:w="1"/><text x="50.8622%" y="703.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::hash_one (1 samples, 0.41%)</title><rect x="50.6122%" y="677" width="0.4082%" height="15" fill="rgb(228,109,6)" fg:x="124" fg:w="1"/><text x="50.8622%" y="687.50"></text></g><g><title>ahash::random_state::RandomState::hash_one (1 samples, 0.41%)</title><rect x="50.6122%" y="661" width="0.4082%" height="15" fill="rgb(238,117,24)" fg:x="124" fg:w="1"/><text x="50.8622%" y="671.50"></text></g><g><title>&lt;T as ahash::specialize::CallHasher&gt;::get_hash (1 samples, 0.41%)</title><rect x="50.6122%" y="645" width="0.4082%" height="15" fill="rgb(242,26,26)" fg:x="124" fg:w="1"/><text x="50.8622%" y="655.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.41%)</title><rect x="50.6122%" y="629" width="0.4082%" height="15" fill="rgb(221,92,48)" fg:x="124" fg:w="1"/><text x="50.8622%" y="639.50"></text></g><g><title>ahash::operations::aesenc (1 samples, 0.41%)</title><rect x="50.6122%" y="613" width="0.4082%" height="15" fill="rgb(209,209,32)" fg:x="124" fg:w="1"/><text x="50.8622%" y="623.50"></text></g><g><title>core::core_arch::x86::aes::_mm_aesenc_si128 (1 samples, 0.41%)</title><rect x="50.6122%" y="597" width="0.4082%" height="15" fill="rgb(221,70,22)" fg:x="124" fg:w="1"/><text x="50.8622%" y="607.50"></text></g><g><title>demoparser::parsing::cache::cache_reader::ReadCache::read_by_id (11 samples, 4.49%)</title><rect x="48.1633%" y="757" width="4.4898%" height="15" fill="rgb(248,145,5)" fg:x="118" fg:w="11"/><text x="48.4133%" y="767.50">demop..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (5 samples, 2.04%)</title><rect x="50.6122%" y="741" width="2.0408%" height="15" fill="rgb(226,116,26)" fg:x="124" fg:w="5"/><text x="50.8622%" y="751.50">s..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (5 samples, 2.04%)</title><rect x="50.6122%" y="725" width="2.0408%" height="15" fill="rgb(244,5,17)" fg:x="124" fg:w="5"/><text x="50.8622%" y="735.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 2.04%)</title><rect x="50.6122%" y="709" width="2.0408%" height="15" fill="rgb(252,159,33)" fg:x="124" fg:w="5"/><text x="50.8622%" y="719.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (4 samples, 1.63%)</title><rect x="51.0204%" y="693" width="1.6327%" height="15" fill="rgb(206,71,0)" fg:x="125" fg:w="4"/><text x="51.2704%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 1.63%)</title><rect x="51.0204%" y="677" width="1.6327%" height="15" fill="rgb(233,118,54)" fg:x="125" fg:w="4"/><text x="51.2704%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (4 samples, 1.63%)</title><rect x="51.0204%" y="661" width="1.6327%" height="15" fill="rgb(234,83,48)" fg:x="125" fg:w="4"/><text x="51.2704%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.41%)</title><rect x="52.2449%" y="645" width="0.4082%" height="15" fill="rgb(228,3,54)" fg:x="128" fg:w="1"/><text x="52.4949%" y="655.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.41%)</title><rect x="52.2449%" y="629" width="0.4082%" height="15" fill="rgb(226,155,13)" fg:x="128" fg:w="1"/><text x="52.4949%" y="639.50"></text></g><g><title>demoparser::parsing::variants::VarVec::push_i32 (1 samples, 0.41%)</title><rect x="52.6531%" y="725" width="0.4082%" height="15" fill="rgb(241,28,37)" fg:x="129" fg:w="1"/><text x="52.9031%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.41%)</title><rect x="52.6531%" y="709" width="0.4082%" height="15" fill="rgb(233,93,10)" fg:x="129" fg:w="1"/><text x="52.9031%" y="719.50"></text></g><g><title>core::ptr::write (1 samples, 0.41%)</title><rect x="52.6531%" y="693" width="0.4082%" height="15" fill="rgb(225,113,19)" fg:x="129" fg:w="1"/><text x="52.9031%" y="703.50"></text></g><g><title>demoparser::parsing::variants::VarVec::push_u64 (1 samples, 0.41%)</title><rect x="53.0612%" y="725" width="0.4082%" height="15" fill="rgb(241,2,18)" fg:x="130" fg:w="1"/><text x="53.3112%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.41%)</title><rect x="53.0612%" y="709" width="0.4082%" height="15" fill="rgb(228,207,21)" fg:x="130" fg:w="1"/><text x="53.3112%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.41%)</title><rect x="53.0612%" y="693" width="0.4082%" height="15" fill="rgb(213,211,35)" fg:x="130" fg:w="1"/><text x="53.3112%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.41%)</title><rect x="53.0612%" y="677" width="0.4082%" height="15" fill="rgb(209,83,10)" fg:x="130" fg:w="1"/><text x="53.3112%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.41%)</title><rect x="53.0612%" y="661" width="0.4082%" height="15" fill="rgb(209,164,1)" fg:x="130" fg:w="1"/><text x="53.3112%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.41%)</title><rect x="53.0612%" y="645" width="0.4082%" height="15" fill="rgb(213,184,43)" fg:x="130" fg:w="1"/><text x="53.3112%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.41%)</title><rect x="53.0612%" y="629" width="0.4082%" height="15" fill="rgb(231,61,34)" fg:x="130" fg:w="1"/><text x="53.3112%" y="639.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.41%)</title><rect x="53.0612%" y="613" width="0.4082%" height="15" fill="rgb(235,75,3)" fg:x="130" fg:w="1"/><text x="53.3112%" y="623.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.41%)</title><rect x="53.0612%" y="597" width="0.4082%" height="15" fill="rgb(220,106,47)" fg:x="130" fg:w="1"/><text x="53.3112%" y="607.50"></text></g><g><title>_mi_memcpy_aligned (1 samples, 0.41%)</title><rect x="53.0612%" y="581" width="0.4082%" height="15" fill="rgb(210,196,33)" fg:x="130" fg:w="1"/><text x="53.3112%" y="591.50"></text></g><g><title>_mi_memcpy (1 samples, 0.41%)</title><rect x="53.0612%" y="565" width="0.4082%" height="15" fill="rgb(229,154,42)" fg:x="130" fg:w="1"/><text x="53.3112%" y="575.50"></text></g><g><title>memcpy (1 samples, 0.41%)</title><rect x="53.0612%" y="549" width="0.4082%" height="15" fill="rgb(228,114,26)" fg:x="130" fg:w="1"/><text x="53.3112%" y="559.50"></text></g><g><title>[libc.so.6] (1 samples, 0.41%)</title><rect x="53.0612%" y="533" width="0.4082%" height="15" fill="rgb(208,144,1)" fg:x="130" fg:w="1"/><text x="53.3112%" y="543.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.41%)</title><rect x="53.4694%" y="693" width="0.4082%" height="15" fill="rgb(239,112,37)" fg:x="131" fg:w="1"/><text x="53.7194%" y="703.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::hash_one (1 samples, 0.41%)</title><rect x="53.4694%" y="677" width="0.4082%" height="15" fill="rgb(210,96,50)" fg:x="131" fg:w="1"/><text x="53.7194%" y="687.50"></text></g><g><title>ahash::random_state::RandomState::hash_one (1 samples, 0.41%)</title><rect x="53.4694%" y="661" width="0.4082%" height="15" fill="rgb(222,178,2)" fg:x="131" fg:w="1"/><text x="53.7194%" y="671.50"></text></g><g><title>&lt;T as ahash::specialize::CallHasher&gt;::get_hash (1 samples, 0.41%)</title><rect x="53.4694%" y="645" width="0.4082%" height="15" fill="rgb(226,74,18)" fg:x="131" fg:w="1"/><text x="53.7194%" y="655.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.41%)</title><rect x="53.4694%" y="629" width="0.4082%" height="15" fill="rgb(225,67,54)" fg:x="131" fg:w="1"/><text x="53.7194%" y="639.50"></text></g><g><title>ahash::aes_hash::AHasher::from_random_state (1 samples, 0.41%)</title><rect x="53.4694%" y="613" width="0.4082%" height="15" fill="rgb(251,92,32)" fg:x="131" fg:w="1"/><text x="53.7194%" y="623.50"></text></g><g><title>demoparser::parsing::demo_parsing::collect_data::&lt;impl demoparser::parsing::parser::Parser&gt;::collect_data (4 samples, 1.63%)</title><rect x="52.6531%" y="741" width="1.6327%" height="15" fill="rgb(228,149,22)" fg:x="129" fg:w="4"/><text x="52.9031%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.82%)</title><rect x="53.4694%" y="725" width="0.8163%" height="15" fill="rgb(243,54,13)" fg:x="131" fg:w="2"/><text x="53.7194%" y="735.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.82%)</title><rect x="53.4694%" y="709" width="0.8163%" height="15" fill="rgb(243,180,28)" fg:x="131" fg:w="2"/><text x="53.7194%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.41%)</title><rect x="53.8776%" y="693" width="0.4082%" height="15" fill="rgb(208,167,24)" fg:x="132" fg:w="1"/><text x="54.1276%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.41%)</title><rect x="53.8776%" y="677" width="0.4082%" height="15" fill="rgb(245,73,45)" fg:x="132" fg:w="1"/><text x="54.1276%" y="687.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bytes::ByteReader::read_frame (1 samples, 0.41%)</title><rect x="54.2857%" y="741" width="0.4082%" height="15" fill="rgb(237,203,48)" fg:x="133" fg:w="1"/><text x="54.5357%" y="751.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bytes::ByteReader::read_byte (1 samples, 0.41%)</title><rect x="54.2857%" y="725" width="0.4082%" height="15" fill="rgb(211,197,16)" fg:x="133" fg:w="1"/><text x="54.5357%" y="735.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 0.41%)</title><rect x="54.6939%" y="677" width="0.4082%" height="15" fill="rgb(243,99,51)" fg:x="134" fg:w="1"/><text x="54.9439%" y="687.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.41%)</title><rect x="54.6939%" y="661" width="0.4082%" height="15" fill="rgb(215,123,29)" fg:x="134" fg:w="1"/><text x="54.9439%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.41%)</title><rect x="54.6939%" y="645" width="0.4082%" height="15" fill="rgb(239,186,37)" fg:x="134" fg:w="1"/><text x="54.9439%" y="655.50"></text></g><g><title>core::ptr::write (1 samples, 0.41%)</title><rect x="54.6939%" y="629" width="0.4082%" height="15" fill="rgb(252,136,39)" fg:x="134" fg:w="1"/><text x="54.9439%" y="639.50"></text></g><g><title>&lt;ahash::random_state::DefaultRandomSource as ahash::random_state::RandomSource&gt;::gen_hasher_seed (1 samples, 0.41%)</title><rect x="56.7347%" y="613" width="0.4082%" height="15" fill="rgb(223,213,32)" fg:x="139" fg:w="1"/><text x="56.9847%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.41%)</title><rect x="56.7347%" y="597" width="0.4082%" height="15" fill="rgb(233,115,5)" fg:x="139" fg:w="1"/><text x="56.9847%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.41%)</title><rect x="56.7347%" y="581" width="0.4082%" height="15" fill="rgb(207,226,44)" fg:x="139" fg:w="1"/><text x="56.9847%" y="591.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::default::Default&gt;::default (2 samples, 0.82%)</title><rect x="56.7347%" y="645" width="0.8163%" height="15" fill="rgb(208,126,0)" fg:x="139" fg:w="2"/><text x="56.9847%" y="655.50"></text></g><g><title>ahash::random_state::RandomState::new (2 samples, 0.82%)</title><rect x="56.7347%" y="629" width="0.8163%" height="15" fill="rgb(244,66,21)" fg:x="139" fg:w="2"/><text x="56.9847%" y="639.50"></text></g><g><title>ahash::random_state::RandomState::from_keys (1 samples, 0.41%)</title><rect x="57.1429%" y="613" width="0.4082%" height="15" fill="rgb(222,97,12)" fg:x="140" fg:w="1"/><text x="57.3929%" y="623.50"></text></g><g><title>ahash::random_state::RandomState::from_keys::{{closure}} (1 samples, 0.41%)</title><rect x="57.1429%" y="597" width="0.4082%" height="15" fill="rgb(219,213,19)" fg:x="140" fg:w="1"/><text x="57.3929%" y="607.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.41%)</title><rect x="57.1429%" y="581" width="0.4082%" height="15" fill="rgb(252,169,30)" fg:x="140" fg:w="1"/><text x="57.3929%" y="591.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::write_u128 (1 samples, 0.41%)</title><rect x="57.1429%" y="565" width="0.4082%" height="15" fill="rgb(206,32,51)" fg:x="140" fg:w="1"/><text x="57.3929%" y="575.50"></text></g><g><title>ahash::aes_hash::AHasher::hash_in (1 samples, 0.41%)</title><rect x="57.1429%" y="549" width="0.4082%" height="15" fill="rgb(250,172,42)" fg:x="140" fg:w="1"/><text x="57.3929%" y="559.50"></text></g><g><title>ahash::operations::aesenc (1 samples, 0.41%)</title><rect x="57.1429%" y="533" width="0.4082%" height="15" fill="rgb(209,34,43)" fg:x="140" fg:w="1"/><text x="57.3929%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (3 samples, 1.22%)</title><rect x="56.7347%" y="661" width="1.2245%" height="15" fill="rgb(223,11,35)" fg:x="139" fg:w="3"/><text x="56.9847%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_hasher (1 samples, 0.41%)</title><rect x="57.5510%" y="645" width="0.4082%" height="15" fill="rgb(251,219,26)" fg:x="141" fg:w="1"/><text x="57.8010%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.41%)</title><rect x="57.9592%" y="645" width="0.4082%" height="15" fill="rgb(231,119,3)" fg:x="142" fg:w="1"/><text x="58.2092%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.41%)</title><rect x="57.9592%" y="629" width="0.4082%" height="15" fill="rgb(216,97,11)" fg:x="142" fg:w="1"/><text x="58.2092%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.41%)</title><rect x="57.9592%" y="613" width="0.4082%" height="15" fill="rgb(223,59,9)" fg:x="142" fg:w="1"/><text x="58.2092%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.41%)</title><rect x="57.9592%" y="597" width="0.4082%" height="15" fill="rgb(233,93,31)" fg:x="142" fg:w="1"/><text x="58.2092%" y="607.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.41%)</title><rect x="57.9592%" y="581" width="0.4082%" height="15" fill="rgb(239,81,33)" fg:x="142" fg:w="1"/><text x="58.2092%" y="591.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.41%)</title><rect x="57.9592%" y="565" width="0.4082%" height="15" fill="rgb(213,120,34)" fg:x="142" fg:w="1"/><text x="58.2092%" y="575.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.41%)</title><rect x="57.9592%" y="549" width="0.4082%" height="15" fill="rgb(243,49,53)" fg:x="142" fg:w="1"/><text x="58.2092%" y="559.50"></text></g><g><title>_mi_memcpy_aligned (1 samples, 0.41%)</title><rect x="57.9592%" y="533" width="0.4082%" height="15" fill="rgb(247,216,33)" fg:x="142" fg:w="1"/><text x="58.2092%" y="543.50"></text></g><g><title>_mi_memcpy (1 samples, 0.41%)</title><rect x="57.9592%" y="517" width="0.4082%" height="15" fill="rgb(226,26,14)" fg:x="142" fg:w="1"/><text x="58.2092%" y="527.50"></text></g><g><title>memcpy (1 samples, 0.41%)</title><rect x="57.9592%" y="501" width="0.4082%" height="15" fill="rgb(215,49,53)" fg:x="142" fg:w="1"/><text x="58.2092%" y="511.50"></text></g><g><title>[libc.so.6] (1 samples, 0.41%)</title><rect x="57.9592%" y="485" width="0.4082%" height="15" fill="rgb(245,162,40)" fg:x="142" fg:w="1"/><text x="58.2092%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="57.9592%" y="469" width="0.4082%" height="15" fill="rgb(229,68,17)" fg:x="142" fg:w="1"/><text x="58.2092%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.82%)</title><rect x="57.9592%" y="661" width="0.8163%" height="15" fill="rgb(213,182,10)" fg:x="142" fg:w="2"/><text x="58.2092%" y="671.50"></text></g><g><title>core::ptr::write (1 samples, 0.41%)</title><rect x="58.3673%" y="645" width="0.4082%" height="15" fill="rgb(245,125,30)" fg:x="143" fg:w="1"/><text x="58.6173%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.41%)</title><rect x="58.7755%" y="661" width="0.4082%" height="15" fill="rgb(232,202,2)" fg:x="144" fg:w="1"/><text x="59.0255%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (63 samples, 25.71%)</title><rect x="59.1837%" y="581" width="25.7143%" height="15" fill="rgb(237,140,51)" fg:x="145" fg:w="63"/><text x="59.4337%" y="591.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (63 samples, 25.71%)</title><rect x="59.1837%" y="565" width="25.7143%" height="15" fill="rgb(236,157,25)" fg:x="145" fg:w="63"/><text x="59.4337%" y="575.50">alloc::vec::Vec&lt;T,A&gt;::extend_desugared</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (62 samples, 25.31%)</title><rect x="59.5918%" y="549" width="25.3061%" height="15" fill="rgb(219,209,0)" fg:x="146" fg:w="62"/><text x="59.8418%" y="559.50">&lt;core::iter::adapters::filter::Filter&lt;I,..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (62 samples, 25.31%)</title><rect x="59.5918%" y="533" width="25.3061%" height="15" fill="rgb(240,116,54)" fg:x="146" fg:w="62"/><text x="59.8418%" y="543.50">&lt;core::slice::iter::Iter&lt;T&gt; as core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (64 samples, 26.12%)</title><rect x="59.1837%" y="645" width="26.1224%" height="15" fill="rgb(216,10,36)" fg:x="145" fg:w="64"/><text x="59.4337%" y="655.50">core::iter::traits::iterator::Iterator::co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (64 samples, 26.12%)</title><rect x="59.1837%" y="629" width="26.1224%" height="15" fill="rgb(222,72,44)" fg:x="145" fg:w="64"/><text x="59.4337%" y="639.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (64 samples, 26.12%)</title><rect x="59.1837%" y="613" width="26.1224%" height="15" fill="rgb(232,159,9)" fg:x="145" fg:w="64"/><text x="59.4337%" y="623.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_fr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (64 samples, 26.12%)</title><rect x="59.1837%" y="597" width="26.1224%" height="15" fill="rgb(210,39,32)" fg:x="145" fg:w="64"/><text x="59.4337%" y="607.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_fr..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.41%)</title><rect x="84.8980%" y="581" width="0.4082%" height="15" fill="rgb(216,194,45)" fg:x="208" fg:w="1"/><text x="85.1480%" y="591.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (1 samples, 0.41%)</title><rect x="84.8980%" y="565" width="0.4082%" height="15" fill="rgb(218,18,35)" fg:x="208" fg:w="1"/><text x="85.1480%" y="575.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::find_cls_id (65 samples, 26.53%)</title><rect x="59.1837%" y="661" width="26.5306%" height="15" fill="rgb(207,83,51)" fg:x="145" fg:w="65"/><text x="59.4337%" y="671.50">demoparser::parsing::demo_parsing::entitie..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;demoparser::parsing::demo_parsing::entities::EidClsHistoryEntry&gt;&gt; (1 samples, 0.41%)</title><rect x="85.3061%" y="645" width="0.4082%" height="15" fill="rgb(225,63,43)" fg:x="209" fg:w="1"/><text x="85.5561%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;demoparser::parsing::demo_parsing::entities::EidClsHistoryEntry&gt;&gt; (1 samples, 0.41%)</title><rect x="85.3061%" y="629" width="0.4082%" height="15" fill="rgb(207,57,36)" fg:x="209" fg:w="1"/><text x="85.5561%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.41%)</title><rect x="85.3061%" y="613" width="0.4082%" height="15" fill="rgb(216,99,33)" fg:x="209" fg:w="1"/><text x="85.5561%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.41%)</title><rect x="85.3061%" y="597" width="0.4082%" height="15" fill="rgb(225,42,16)" fg:x="209" fg:w="1"/><text x="85.5561%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.41%)</title><rect x="85.3061%" y="581" width="0.4082%" height="15" fill="rgb(220,201,45)" fg:x="209" fg:w="1"/><text x="85.5561%" y="591.50"></text></g><g><title>__rust_dealloc (1 samples, 0.41%)</title><rect x="85.3061%" y="565" width="0.4082%" height="15" fill="rgb(225,33,4)" fg:x="209" fg:w="1"/><text x="85.5561%" y="575.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode (4 samples, 1.63%)</title><rect x="85.7143%" y="661" width="1.6327%" height="15" fill="rgb(224,33,50)" fg:x="210" fg:w="4"/><text x="85.9643%" y="671.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::decode_int (1 samples, 0.41%)</title><rect x="86.9388%" y="645" width="0.4082%" height="15" fill="rgb(246,198,51)" fg:x="213" fg:w="1"/><text x="87.1888%" y="655.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.41%)</title><rect x="86.9388%" y="629" width="0.4082%" height="15" fill="rgb(205,22,4)" fg:x="213" fg:w="1"/><text x="87.1888%" y="639.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_inx (1 samples, 0.41%)</title><rect x="87.3469%" y="661" width="0.4082%" height="15" fill="rgb(206,3,8)" fg:x="214" fg:w="1"/><text x="87.5969%" y="671.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.41%)</title><rect x="87.7551%" y="565" width="0.4082%" height="15" fill="rgb(251,23,15)" fg:x="215" fg:w="1"/><text x="88.0051%" y="575.50"></text></g><g><title>ahash::operations::aesenc (1 samples, 0.41%)</title><rect x="87.7551%" y="549" width="0.4082%" height="15" fill="rgb(252,88,28)" fg:x="215" fg:w="1"/><text x="88.0051%" y="559.50"></text></g><g><title>core::core_arch::x86::aes::_mm_aesenc_si128 (1 samples, 0.41%)</title><rect x="87.7551%" y="533" width="0.4082%" height="15" fill="rgb(212,127,14)" fg:x="215" fg:w="1"/><text x="88.0051%" y="543.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.82%)</title><rect x="87.7551%" y="629" width="0.8163%" height="15" fill="rgb(247,145,37)" fg:x="215" fg:w="2"/><text x="88.0051%" y="639.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::hash_one (2 samples, 0.82%)</title><rect x="87.7551%" y="613" width="0.8163%" height="15" fill="rgb(209,117,53)" fg:x="215" fg:w="2"/><text x="88.0051%" y="623.50"></text></g><g><title>ahash::random_state::RandomState::hash_one (2 samples, 0.82%)</title><rect x="87.7551%" y="597" width="0.8163%" height="15" fill="rgb(212,90,42)" fg:x="215" fg:w="2"/><text x="88.0051%" y="607.50"></text></g><g><title>&lt;T as ahash::specialize::CallHasher&gt;::get_hash (2 samples, 0.82%)</title><rect x="87.7551%" y="581" width="0.8163%" height="15" fill="rgb(218,164,37)" fg:x="215" fg:w="2"/><text x="88.0051%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.41%)</title><rect x="88.1633%" y="565" width="0.4082%" height="15" fill="rgb(246,65,34)" fg:x="216" fg:w="1"/><text x="88.4133%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.41%)</title><rect x="88.1633%" y="549" width="0.4082%" height="15" fill="rgb(231,100,33)" fg:x="216" fg:w="1"/><text x="88.4133%" y="559.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::write_u32 (1 samples, 0.41%)</title><rect x="88.1633%" y="533" width="0.4082%" height="15" fill="rgb(228,126,14)" fg:x="216" fg:w="1"/><text x="88.4133%" y="543.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.41%)</title><rect x="88.1633%" y="517" width="0.4082%" height="15" fill="rgb(215,173,21)" fg:x="216" fg:w="1"/><text x="88.4133%" y="527.50"></text></g><g><title>&lt;ahash::aes_hash::AHasher as core::hash::Hasher&gt;::write_u128 (1 samples, 0.41%)</title><rect x="88.1633%" y="501" width="0.4082%" height="15" fill="rgb(210,6,40)" fg:x="216" fg:w="1"/><text x="88.4133%" y="511.50"></text></g><g><title>ahash::aes_hash::AHasher::hash_in (1 samples, 0.41%)</title><rect x="88.1633%" y="485" width="0.4082%" height="15" fill="rgb(212,48,18)" fg:x="216" fg:w="1"/><text x="88.4133%" y="495.50"></text></g><g><title>ahash::operations::shuffle_and_add (1 samples, 0.41%)</title><rect x="88.1633%" y="469" width="0.4082%" height="15" fill="rgb(230,214,11)" fg:x="216" fg:w="1"/><text x="88.4133%" y="479.50"></text></g><g><title>ahash::operations::add_by_64s (1 samples, 0.41%)</title><rect x="88.1633%" y="453" width="0.4082%" height="15" fill="rgb(254,105,39)" fg:x="216" fg:w="1"/><text x="88.4133%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi64 (1 samples, 0.41%)</title><rect x="88.1633%" y="437" width="0.4082%" height="15" fill="rgb(245,158,5)" fg:x="216" fg:w="1"/><text x="88.4133%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (6 samples, 2.45%)</title><rect x="87.7551%" y="661" width="2.4490%" height="15" fill="rgb(249,208,11)" fg:x="215" fg:w="6"/><text x="88.0051%" y="671.50">st..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (6 samples, 2.45%)</title><rect x="87.7551%" y="645" width="2.4490%" height="15" fill="rgb(210,39,28)" fg:x="215" fg:w="6"/><text x="88.0051%" y="655.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 1.63%)</title><rect x="88.5714%" y="629" width="1.6327%" height="15" fill="rgb(211,56,53)" fg:x="217" fg:w="4"/><text x="88.8214%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (4 samples, 1.63%)</title><rect x="88.5714%" y="613" width="1.6327%" height="15" fill="rgb(226,201,30)" fg:x="217" fg:w="4"/><text x="88.8214%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.41%)</title><rect x="89.7959%" y="597" width="0.4082%" height="15" fill="rgb(239,101,34)" fg:x="220" fg:w="1"/><text x="90.0459%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.41%)</title><rect x="89.7959%" y="581" width="0.4082%" height="15" fill="rgb(226,209,5)" fg:x="220" fg:w="1"/><text x="90.0459%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.41%)</title><rect x="89.7959%" y="565" width="0.4082%" height="15" fill="rgb(250,105,47)" fg:x="220" fg:w="1"/><text x="90.0459%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.41%)</title><rect x="89.7959%" y="549" width="0.4082%" height="15" fill="rgb(230,72,3)" fg:x="220" fg:w="1"/><text x="90.0459%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.41%)</title><rect x="89.7959%" y="533" width="0.4082%" height="15" fill="rgb(232,218,39)" fg:x="220" fg:w="1"/><text x="90.0459%" y="543.50"></text></g><g><title>demoparser::parsing::parser::Parser::messages_from_packet (2 samples, 0.82%)</title><rect x="90.2041%" y="581" width="0.8163%" height="15" fill="rgb(248,166,6)" fg:x="221" fg:w="2"/><text x="90.4541%" y="591.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::update_entity (89 samples, 36.33%)</title><rect x="55.1020%" y="677" width="36.3265%" height="15" fill="rgb(247,89,20)" fg:x="135" fg:w="89"/><text x="55.3520%" y="687.50">demoparser::parsing::demo_parsing::entities::&lt;impl demopars..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 1.22%)</title><rect x="90.2041%" y="661" width="1.2245%" height="15" fill="rgb(248,130,54)" fg:x="221" fg:w="3"/><text x="90.4541%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 1.22%)</title><rect x="90.2041%" y="645" width="1.2245%" height="15" fill="rgb(234,196,4)" fg:x="221" fg:w="3"/><text x="90.4541%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 1.22%)</title><rect x="90.2041%" y="629" width="1.2245%" height="15" fill="rgb(250,143,31)" fg:x="221" fg:w="3"/><text x="90.4541%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 1.22%)</title><rect x="90.2041%" y="613" width="1.2245%" height="15" fill="rgb(211,110,34)" fg:x="221" fg:w="3"/><text x="90.4541%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 1.22%)</title><rect x="90.2041%" y="597" width="1.2245%" height="15" fill="rgb(215,124,48)" fg:x="221" fg:w="3"/><text x="90.4541%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.41%)</title><rect x="91.0204%" y="581" width="0.4082%" height="15" fill="rgb(216,46,13)" fg:x="223" fg:w="1"/><text x="91.2704%" y="591.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.41%)</title><rect x="91.0204%" y="565" width="0.4082%" height="15" fill="rgb(205,184,25)" fg:x="223" fg:w="1"/><text x="91.2704%" y="575.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_u_bit_var (2 samples, 0.82%)</title><rect x="91.4286%" y="677" width="0.8163%" height="15" fill="rgb(228,1,10)" fg:x="224" fg:w="2"/><text x="91.6786%" y="687.50"></text></g><g><title>demoparser::parsing::demo_parsing::read_bits::MyBitreader::read_nbits (2 samples, 0.82%)</title><rect x="91.4286%" y="661" width="0.8163%" height="15" fill="rgb(213,116,27)" fg:x="224" fg:w="2"/><text x="91.6786%" y="671.50"></text></g><g><title>&lt;bitter::LittleEndianReader as bitter::BitReader&gt;::read_bits (1 samples, 0.41%)</title><rect x="91.8367%" y="645" width="0.4082%" height="15" fill="rgb(241,95,50)" fg:x="225" fg:w="1"/><text x="92.0867%" y="655.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_packet_entities (93 samples, 37.96%)</title><rect x="54.6939%" y="693" width="37.9592%" height="15" fill="rgb(238,48,32)" fg:x="134" fg:w="93"/><text x="54.9439%" y="703.50">demoparser::parsing::demo_parsing::entities::&lt;impl demoparser:..</text></g><g><title>protobuf::message::Message::parse_from_bytes (1 samples, 0.41%)</title><rect x="92.2449%" y="677" width="0.4082%" height="15" fill="rgb(235,113,49)" fg:x="226" fg:w="1"/><text x="92.4949%" y="687.50"></text></g><g><title>protobuf::message::Message::parse_from (1 samples, 0.41%)</title><rect x="92.2449%" y="661" width="0.4082%" height="15" fill="rgb(205,127,43)" fg:x="226" fg:w="1"/><text x="92.4949%" y="671.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_PacketEntities as protobuf::message::Message&gt;::merge_from (1 samples, 0.41%)</title><rect x="92.2449%" y="645" width="0.4082%" height="15" fill="rgb(250,162,2)" fg:x="226" fg:w="1"/><text x="92.4949%" y="655.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes (1 samples, 0.41%)</title><rect x="92.2449%" y="629" width="0.4082%" height="15" fill="rgb(220,13,41)" fg:x="226" fg:w="1"/><text x="92.4949%" y="639.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (1 samples, 0.41%)</title><rect x="92.2449%" y="613" width="0.4082%" height="15" fill="rgb(249,221,25)" fg:x="226" fg:w="1"/><text x="92.4949%" y="623.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (1 samples, 0.41%)</title><rect x="92.2449%" y="597" width="0.4082%" height="15" fill="rgb(215,208,19)" fg:x="226" fg:w="1"/><text x="92.4949%" y="607.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (1 samples, 0.41%)</title><rect x="92.2449%" y="581" width="0.4082%" height="15" fill="rgb(236,175,2)" fg:x="226" fg:w="1"/><text x="92.4949%" y="591.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact (1 samples, 0.41%)</title><rect x="92.2449%" y="565" width="0.4082%" height="15" fill="rgb(241,52,2)" fg:x="226" fg:w="1"/><text x="92.4949%" y="575.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::read_bytes (1 samples, 0.41%)</title><rect x="92.2449%" y="549" width="0.4082%" height="15" fill="rgb(248,140,14)" fg:x="226" fg:w="1"/><text x="92.4949%" y="559.50"></text></g><g><title>protobuf::misc::maybe_uninit_write_slice (1 samples, 0.41%)</title><rect x="92.2449%" y="533" width="0.4082%" height="15" fill="rgb(253,22,42)" fg:x="226" fg:w="1"/><text x="92.4949%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.41%)</title><rect x="92.2449%" y="517" width="0.4082%" height="15" fill="rgb(234,61,47)" fg:x="226" fg:w="1"/><text x="92.4949%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.41%)</title><rect x="92.2449%" y="501" width="0.4082%" height="15" fill="rgb(208,226,15)" fg:x="226" fg:w="1"/><text x="92.4949%" y="511.50"></text></g><g><title>[libc.so.6] (1 samples, 0.41%)</title><rect x="92.2449%" y="485" width="0.4082%" height="15" fill="rgb(217,221,4)" fg:x="226" fg:w="1"/><text x="92.4949%" y="495.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.41%)</title><rect x="92.6531%" y="661" width="0.4082%" height="15" fill="rgb(212,174,34)" fg:x="227" fg:w="1"/><text x="92.9031%" y="671.50"></text></g><g><title>demoparser::parsing::demo_parsing::game_events::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_game_event (3 samples, 1.22%)</title><rect x="92.6531%" y="693" width="1.2245%" height="15" fill="rgb(253,83,4)" fg:x="227" fg:w="3"/><text x="92.9031%" y="703.50"></text></g><g><title>protobuf::message::Message::parse_from_bytes (3 samples, 1.22%)</title><rect x="92.6531%" y="677" width="1.2245%" height="15" fill="rgb(250,195,49)" fg:x="227" fg:w="3"/><text x="92.9031%" y="687.50"></text></g><g><title>protobuf::message::Message::parse_from (2 samples, 0.82%)</title><rect x="93.0612%" y="661" width="0.8163%" height="15" fill="rgb(241,192,25)" fg:x="228" fg:w="2"/><text x="93.3112%" y="671.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_GameEvent as protobuf::message::Message&gt;::merge_from (2 samples, 0.82%)</title><rect x="93.0612%" y="645" width="0.8163%" height="15" fill="rgb(208,124,10)" fg:x="228" fg:w="2"/><text x="93.3112%" y="655.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_message (1 samples, 0.41%)</title><rect x="93.4694%" y="629" width="0.4082%" height="15" fill="rgb(222,33,0)" fg:x="229" fg:w="1"/><text x="93.7194%" y="639.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::merge_message (1 samples, 0.41%)</title><rect x="93.4694%" y="613" width="0.4082%" height="15" fill="rgb(234,209,28)" fg:x="229" fg:w="1"/><text x="93.7194%" y="623.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_game_event::Key_t as protobuf::message::Message&gt;::merge_from (1 samples, 0.41%)</title><rect x="93.4694%" y="597" width="0.4082%" height="15" fill="rgb(224,11,23)" fg:x="229" fg:w="1"/><text x="93.7194%" y="607.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (103 samples, 42.04%)</title><rect x="52.6531%" y="757" width="42.0408%" height="15" fill="rgb(232,99,1)" fg:x="129" fg:w="103"/><text x="52.9031%" y="767.50">demoparser::parsing::parser::Parser::parse_bytes</text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (98 samples, 40.00%)</title><rect x="54.6939%" y="741" width="40.0000%" height="15" fill="rgb(237,95,45)" fg:x="134" fg:w="98"/><text x="54.9439%" y="751.50">demoparser::parsing::parser::Parser::parse_bytes</text></g><g><title>demoparser::parsing::parser::Parser::messages_from_packet (98 samples, 40.00%)</title><rect x="54.6939%" y="725" width="40.0000%" height="15" fill="rgb(208,109,11)" fg:x="134" fg:w="98"/><text x="54.9439%" y="735.50">demoparser::parsing::parser::Parser::messages_from_packet</text></g><g><title>demoparser::parsing::parser::Parser::msg_handler (98 samples, 40.00%)</title><rect x="54.6939%" y="709" width="40.0000%" height="15" fill="rgb(216,190,48)" fg:x="134" fg:w="98"/><text x="54.9439%" y="719.50">demoparser::parsing::parser::Parser::msg_handler</text></g><g><title>demoparser::parsing::demo_parsing::stringtables::&lt;impl demoparser::parsing::parser::Parser&gt;::update_string_table_msg (2 samples, 0.82%)</title><rect x="93.8776%" y="693" width="0.8163%" height="15" fill="rgb(251,171,36)" fg:x="230" fg:w="2"/><text x="94.1276%" y="703.50"></text></g><g><title>protobuf::message::Message::parse_from_bytes (2 samples, 0.82%)</title><rect x="93.8776%" y="677" width="0.8163%" height="15" fill="rgb(230,62,22)" fg:x="230" fg:w="2"/><text x="94.1276%" y="687.50"></text></g><g><title>protobuf::message::Message::parse_from (2 samples, 0.82%)</title><rect x="93.8776%" y="661" width="0.8163%" height="15" fill="rgb(225,114,35)" fg:x="230" fg:w="2"/><text x="94.1276%" y="671.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_EntityMsg as protobuf::message::Message&gt;::merge_from (2 samples, 0.82%)</title><rect x="93.8776%" y="645" width="0.8163%" height="15" fill="rgb(215,118,42)" fg:x="230" fg:w="2"/><text x="94.1276%" y="655.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes (2 samples, 0.82%)</title><rect x="93.8776%" y="629" width="0.8163%" height="15" fill="rgb(243,119,21)" fg:x="230" fg:w="2"/><text x="94.1276%" y="639.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_bytes_into (1 samples, 0.41%)</title><rect x="94.2857%" y="613" width="0.4082%" height="15" fill="rgb(252,177,53)" fg:x="231" fg:w="1"/><text x="94.5357%" y="623.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_bytes_into (1 samples, 0.41%)</title><rect x="94.2857%" y="597" width="0.4082%" height="15" fill="rgb(237,209,29)" fg:x="231" fg:w="1"/><text x="94.5357%" y="607.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::read_exact_to_vec (1 samples, 0.41%)</title><rect x="94.2857%" y="581" width="0.4082%" height="15" fill="rgb(212,65,23)" fg:x="231" fg:w="1"/><text x="94.5357%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (1 samples, 0.41%)</title><rect x="94.2857%" y="565" width="0.4082%" height="15" fill="rgb(230,222,46)" fg:x="231" fg:w="1"/><text x="94.5357%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (1 samples, 0.41%)</title><rect x="94.2857%" y="549" width="0.4082%" height="15" fill="rgb(215,135,32)" fg:x="231" fg:w="1"/><text x="94.5357%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (1 samples, 0.41%)</title><rect x="94.2857%" y="533" width="0.4082%" height="15" fill="rgb(246,101,22)" fg:x="231" fg:w="1"/><text x="94.5357%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (1 samples, 0.41%)</title><rect x="94.2857%" y="517" width="0.4082%" height="15" fill="rgb(206,107,13)" fg:x="231" fg:w="1"/><text x="94.5357%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.41%)</title><rect x="94.2857%" y="501" width="0.4082%" height="15" fill="rgb(250,100,44)" fg:x="231" fg:w="1"/><text x="94.5357%" y="511.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.41%)</title><rect x="94.2857%" y="485" width="0.4082%" height="15" fill="rgb(231,147,38)" fg:x="231" fg:w="1"/><text x="94.5357%" y="495.50"></text></g><g><title>mi_find_page (1 samples, 0.41%)</title><rect x="94.2857%" y="469" width="0.4082%" height="15" fill="rgb(229,8,40)" fg:x="231" fg:w="1"/><text x="94.5357%" y="479.50"></text></g><g><title>mi_find_free_page (1 samples, 0.41%)</title><rect x="94.2857%" y="453" width="0.4082%" height="15" fill="rgb(221,135,30)" fg:x="231" fg:w="1"/><text x="94.5357%" y="463.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (1 samples, 0.41%)</title><rect x="94.6939%" y="725" width="0.4082%" height="15" fill="rgb(249,193,18)" fg:x="232" fg:w="1"/><text x="94.9439%" y="735.50"></text></g><g><title>demoparser::parsing::parser::Parser::messages_from_packet (1 samples, 0.41%)</title><rect x="94.6939%" y="709" width="0.4082%" height="15" fill="rgb(209,133,39)" fg:x="232" fg:w="1"/><text x="94.9439%" y="719.50"></text></g><g><title>demoparser::parsing::parser::Parser::msg_handler (1 samples, 0.41%)</title><rect x="94.6939%" y="693" width="0.4082%" height="15" fill="rgb(232,100,14)" fg:x="232" fg:w="1"/><text x="94.9439%" y="703.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_packet_entities (1 samples, 0.41%)</title><rect x="94.6939%" y="677" width="0.4082%" height="15" fill="rgb(224,185,1)" fg:x="232" fg:w="1"/><text x="94.9439%" y="687.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::update_entity (1 samples, 0.41%)</title><rect x="94.6939%" y="661" width="0.4082%" height="15" fill="rgb(223,139,8)" fg:x="232" fg:w="1"/><text x="94.9439%" y="671.50"></text></g><g><title>demoparser::parsing::demo_parsing::entities::&lt;impl demoparser::parsing::parser::Parser&gt;::create_ent_if_not_exist (1 samples, 0.41%)</title><rect x="94.6939%" y="645" width="0.4082%" height="15" fill="rgb(232,213,38)" fg:x="232" fg:w="1"/><text x="94.9439%" y="655.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 0.41%)</title><rect x="94.6939%" y="629" width="0.4082%" height="15" fill="rgb(207,94,22)" fg:x="232" fg:w="1"/><text x="94.9439%" y="639.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.41%)</title><rect x="94.6939%" y="613" width="0.4082%" height="15" fill="rgb(219,183,54)" fg:x="232" fg:w="1"/><text x="94.9439%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.41%)</title><rect x="94.6939%" y="597" width="0.4082%" height="15" fill="rgb(216,185,54)" fg:x="232" fg:w="1"/><text x="94.9439%" y="607.50"></text></g><g><title>core::ptr::write (1 samples, 0.41%)</title><rect x="94.6939%" y="581" width="0.4082%" height="15" fill="rgb(254,217,39)" fg:x="232" fg:w="1"/><text x="94.9439%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="94.6939%" y="565" width="0.4082%" height="15" fill="rgb(240,178,23)" fg:x="232" fg:w="1"/><text x="94.9439%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="94.6939%" y="549" width="0.4082%" height="15" fill="rgb(218,11,47)" fg:x="232" fg:w="1"/><text x="94.9439%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="94.6939%" y="533" width="0.4082%" height="15" fill="rgb(218,51,51)" fg:x="232" fg:w="1"/><text x="94.9439%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="94.6939%" y="517" width="0.4082%" height="15" fill="rgb(238,126,27)" fg:x="232" fg:w="1"/><text x="94.9439%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="94.6939%" y="501" width="0.4082%" height="15" fill="rgb(249,202,22)" fg:x="232" fg:w="1"/><text x="94.9439%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="94.6939%" y="485" width="0.4082%" height="15" fill="rgb(254,195,49)" fg:x="232" fg:w="1"/><text x="94.9439%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="94.6939%" y="469" width="0.4082%" height="15" fill="rgb(208,123,14)" fg:x="232" fg:w="1"/><text x="94.9439%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="94.6939%" y="453" width="0.4082%" height="15" fill="rgb(224,200,8)" fg:x="232" fg:w="1"/><text x="94.9439%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="94.6939%" y="437" width="0.4082%" height="15" fill="rgb(217,61,36)" fg:x="232" fg:w="1"/><text x="94.9439%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="94.6939%" y="421" width="0.4082%" height="15" fill="rgb(206,35,45)" fg:x="232" fg:w="1"/><text x="94.9439%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="94.6939%" y="405" width="0.4082%" height="15" fill="rgb(217,65,33)" fg:x="232" fg:w="1"/><text x="94.9439%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="94.6939%" y="389" width="0.4082%" height="15" fill="rgb(222,158,48)" fg:x="232" fg:w="1"/><text x="94.9439%" y="399.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::flatten_dt (1 samples, 0.41%)</title><rect x="95.1020%" y="693" width="0.4082%" height="15" fill="rgb(254,2,54)" fg:x="233" fg:w="1"/><text x="95.3520%" y="703.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::get_props (1 samples, 0.41%)</title><rect x="95.1020%" y="677" width="0.4082%" height="15" fill="rgb(250,143,38)" fg:x="233" fg:w="1"/><text x="95.3520%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.41%)</title><rect x="95.1020%" y="661" width="0.4082%" height="15" fill="rgb(248,25,0)" fg:x="233" fg:w="1"/><text x="95.3520%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.41%)</title><rect x="95.1020%" y="645" width="0.4082%" height="15" fill="rgb(206,152,27)" fg:x="233" fg:w="1"/><text x="95.3520%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.41%)</title><rect x="95.1020%" y="629" width="0.4082%" height="15" fill="rgb(240,77,30)" fg:x="233" fg:w="1"/><text x="95.3520%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.41%)</title><rect x="95.1020%" y="613" width="0.4082%" height="15" fill="rgb(231,5,3)" fg:x="233" fg:w="1"/><text x="95.3520%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.41%)</title><rect x="95.1020%" y="597" width="0.4082%" height="15" fill="rgb(207,226,32)" fg:x="233" fg:w="1"/><text x="95.3520%" y="607.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.41%)</title><rect x="95.1020%" y="581" width="0.4082%" height="15" fill="rgb(222,207,47)" fg:x="233" fg:w="1"/><text x="95.3520%" y="591.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.41%)</title><rect x="95.1020%" y="565" width="0.4082%" height="15" fill="rgb(229,115,45)" fg:x="233" fg:w="1"/><text x="95.3520%" y="575.50"></text></g><g><title>_mi_heap_realloc_zero (1 samples, 0.41%)</title><rect x="95.1020%" y="549" width="0.4082%" height="15" fill="rgb(224,191,6)" fg:x="233" fg:w="1"/><text x="95.3520%" y="559.50"></text></g><g><title>_mi_memcpy_aligned (1 samples, 0.41%)</title><rect x="95.1020%" y="533" width="0.4082%" height="15" fill="rgb(230,227,24)" fg:x="233" fg:w="1"/><text x="95.3520%" y="543.50"></text></g><g><title>_mi_memcpy (1 samples, 0.41%)</title><rect x="95.1020%" y="517" width="0.4082%" height="15" fill="rgb(228,80,19)" fg:x="233" fg:w="1"/><text x="95.3520%" y="527.50"></text></g><g><title>memcpy (1 samples, 0.41%)</title><rect x="95.1020%" y="501" width="0.4082%" height="15" fill="rgb(247,229,0)" fg:x="233" fg:w="1"/><text x="95.3520%" y="511.50"></text></g><g><title>[libc.so.6] (1 samples, 0.41%)</title><rect x="95.1020%" y="485" width="0.4082%" height="15" fill="rgb(237,194,15)" fg:x="233" fg:w="1"/><text x="95.3520%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="95.1020%" y="469" width="0.4082%" height="15" fill="rgb(219,203,20)" fg:x="233" fg:w="1"/><text x="95.3520%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="95.1020%" y="453" width="0.4082%" height="15" fill="rgb(234,128,8)" fg:x="233" fg:w="1"/><text x="95.3520%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="95.1020%" y="437" width="0.4082%" height="15" fill="rgb(248,202,8)" fg:x="233" fg:w="1"/><text x="95.3520%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="95.1020%" y="421" width="0.4082%" height="15" fill="rgb(206,104,37)" fg:x="233" fg:w="1"/><text x="95.3520%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="95.1020%" y="405" width="0.4082%" height="15" fill="rgb(223,8,27)" fg:x="233" fg:w="1"/><text x="95.3520%" y="415.50"></text></g><g><title>rayon::iter::ParallelIterator::collect (122 samples, 49.80%)</title><rect x="46.1224%" y="1157" width="49.7959%" height="15" fill="rgb(216,217,28)" fg:x="113" fg:w="122"/><text x="46.3724%" y="1167.50">rayon::iter::ParallelIterator::collect</text></g><g><title>rayon::iter::from_par_iter::&lt;impl rayon::iter::FromParallelIterator&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_par_iter (122 samples, 49.80%)</title><rect x="46.1224%" y="1141" width="49.7959%" height="15" fill="rgb(249,199,1)" fg:x="113" fg:w="122"/><text x="46.3724%" y="1151.50">rayon::iter::from_par_iter::&lt;impl rayon::iter::FromParallelIterator&lt;T&gt; for alloc::..</text></g><g><title>rayon::iter::from_par_iter::collect_extended (122 samples, 49.80%)</title><rect x="46.1224%" y="1125" width="49.7959%" height="15" fill="rgb(240,85,17)" fg:x="113" fg:w="122"/><text x="46.3724%" y="1135.50">rayon::iter::from_par_iter::collect_extended</text></g><g><title>rayon::iter::extend::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend (122 samples, 49.80%)</title><rect x="46.1224%" y="1109" width="49.7959%" height="15" fill="rgb(206,108,45)" fg:x="113" fg:w="122"/><text x="46.3724%" y="1119.50">rayon::iter::extend::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;:..</text></g><g><title>rayon::iter::collect::special_extend (122 samples, 49.80%)</title><rect x="46.1224%" y="1093" width="49.7959%" height="15" fill="rgb(245,210,41)" fg:x="113" fg:w="122"/><text x="46.3724%" y="1103.50">rayon::iter::collect::special_extend</text></g><g><title>rayon::iter::collect::collect_with_consumer (122 samples, 49.80%)</title><rect x="46.1224%" y="1077" width="49.7959%" height="15" fill="rgb(206,13,37)" fg:x="113" fg:w="122"/><text x="46.3724%" y="1087.50">rayon::iter::collect::collect_with_consumer</text></g><g><title>rayon::iter::collect::special_extend::{{closure}} (122 samples, 49.80%)</title><rect x="46.1224%" y="1061" width="49.7959%" height="15" fill="rgb(250,61,18)" fg:x="113" fg:w="122"/><text x="46.3724%" y="1071.50">rayon::iter::collect::special_extend::{{closure}}</text></g><g><title>&lt;rayon::iter::map::Map&lt;I,F&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (122 samples, 49.80%)</title><rect x="46.1224%" y="1045" width="49.7959%" height="15" fill="rgb(235,172,48)" fg:x="113" fg:w="122"/><text x="46.3724%" y="1055.50">&lt;rayon::iter::map::Map&lt;I,F&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed</text></g><g><title>&lt;rayon::slice::Iter&lt;T&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (122 samples, 49.80%)</title><rect x="46.1224%" y="1029" width="49.7959%" height="15" fill="rgb(249,201,17)" fg:x="113" fg:w="122"/><text x="46.3724%" y="1039.50">&lt;rayon::slice::Iter&lt;T&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed</text></g><g><title>rayon::iter::plumbing::bridge (122 samples, 49.80%)</title><rect x="46.1224%" y="1013" width="49.7959%" height="15" fill="rgb(219,208,6)" fg:x="113" fg:w="122"/><text x="46.3724%" y="1023.50">rayon::iter::plumbing::bridge</text></g><g><title>&lt;rayon::slice::Iter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (122 samples, 49.80%)</title><rect x="46.1224%" y="997" width="49.7959%" height="15" fill="rgb(248,31,23)" fg:x="113" fg:w="122"/><text x="46.3724%" y="1007.50">&lt;rayon::slice::Iter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer</text></g><g><title>&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (122 samples, 49.80%)</title><rect x="46.1224%" y="981" width="49.7959%" height="15" fill="rgb(245,15,42)" fg:x="113" fg:w="122"/><text x="46.3724%" y="991.50">&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCall..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (122 samples, 49.80%)</title><rect x="46.1224%" y="965" width="49.7959%" height="15" fill="rgb(222,217,39)" fg:x="113" fg:w="122"/><text x="46.3724%" y="975.50">rayon::iter::plumbing::bridge_producer_consumer</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (122 samples, 49.80%)</title><rect x="46.1224%" y="949" width="49.7959%" height="15" fill="rgb(210,219,27)" fg:x="113" fg:w="122"/><text x="46.3724%" y="959.50">rayon::iter::plumbing::bridge_producer_consumer::helper</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (122 samples, 49.80%)</title><rect x="46.1224%" y="933" width="49.7959%" height="15" fill="rgb(252,166,36)" fg:x="113" fg:w="122"/><text x="46.3724%" y="943.50">rayon::iter::plumbing::Producer::fold_with</text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (122 samples, 49.80%)</title><rect x="46.1224%" y="917" width="49.7959%" height="15" fill="rgb(245,132,34)" fg:x="113" fg:w="122"/><text x="46.3724%" y="927.50">&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_it..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (122 samples, 49.80%)</title><rect x="46.1224%" y="901" width="49.7959%" height="15" fill="rgb(236,54,3)" fg:x="113" fg:w="122"/><text x="46.3724%" y="911.50">rayon::iter::plumbing::Folder::consume_iter</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (122 samples, 49.80%)</title><rect x="46.1224%" y="885" width="49.7959%" height="15" fill="rgb(241,173,43)" fg:x="113" fg:w="122"/><text x="46.3724%" y="895.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::n..</text></g><g><title>core::option::Option&lt;T&gt;::map (122 samples, 49.80%)</title><rect x="46.1224%" y="869" width="49.7959%" height="15" fill="rgb(215,190,9)" fg:x="113" fg:w="122"/><text x="46.3724%" y="879.50">core::option::Option&lt;T&gt;::map</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (122 samples, 49.80%)</title><rect x="46.1224%" y="853" width="49.7959%" height="15" fill="rgb(242,101,16)" fg:x="113" fg:w="122"/><text x="46.3724%" y="863.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (122 samples, 49.80%)</title><rect x="46.1224%" y="837" width="49.7959%" height="15" fill="rgb(223,190,21)" fg:x="113" fg:w="122"/><text x="46.3724%" y="847.50">core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut</text></g><g><title>demoparser::main::{{closure}} (122 samples, 49.80%)</title><rect x="46.1224%" y="821" width="49.7959%" height="15" fill="rgb(215,228,25)" fg:x="113" fg:w="122"/><text x="46.3724%" y="831.50">demoparser::main::{{closure}}</text></g><g><title>demoparser::parse_demo (122 samples, 49.80%)</title><rect x="46.1224%" y="805" width="49.7959%" height="15" fill="rgb(225,36,22)" fg:x="113" fg:w="122"/><text x="46.3724%" y="815.50">demoparser::parse_demo</text></g><g><title>demoparser::parsing::parser::Parser::start_parsing (118 samples, 48.16%)</title><rect x="47.7551%" y="789" width="48.1633%" height="15" fill="rgb(251,106,46)" fg:x="117" fg:w="118"/><text x="48.0051%" y="799.50">demoparser::parsing::parser::Parser::start_parsing</text></g><g><title>demoparser::parsing::parser::Parser::speed (118 samples, 48.16%)</title><rect x="47.7551%" y="773" width="48.1633%" height="15" fill="rgb(208,90,1)" fg:x="117" fg:w="118"/><text x="48.0051%" y="783.50">demoparser::parsing::parser::Parser::speed</text></g><g><title>demoparser::parsing::parser::Parser::parse_mandatory_ticks (3 samples, 1.22%)</title><rect x="94.6939%" y="757" width="1.2245%" height="15" fill="rgb(243,10,4)" fg:x="232" fg:w="3"/><text x="94.9439%" y="767.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_bytes (3 samples, 1.22%)</title><rect x="94.6939%" y="741" width="1.2245%" height="15" fill="rgb(212,137,27)" fg:x="232" fg:w="3"/><text x="94.9439%" y="751.50"></text></g><g><title>demoparser::parsing::parser::Parser::parse_cmd (2 samples, 0.82%)</title><rect x="95.1020%" y="725" width="0.8163%" height="15" fill="rgb(231,220,49)" fg:x="233" fg:w="2"/><text x="95.3520%" y="735.50"></text></g><g><title>demoparser::parsing::demo_parsing::data_table::&lt;impl demoparser::parsing::parser::Parser&gt;::parse_datatable (2 samples, 0.82%)</title><rect x="95.1020%" y="709" width="0.8163%" height="15" fill="rgb(237,96,20)" fg:x="233" fg:w="2"/><text x="95.3520%" y="719.50"></text></g><g><title>protobuf::message::Message::parse_from_bytes (1 samples, 0.41%)</title><rect x="95.5102%" y="693" width="0.4082%" height="15" fill="rgb(239,229,30)" fg:x="234" fg:w="1"/><text x="95.7602%" y="703.50"></text></g><g><title>protobuf::message::Message::parse_from (1 samples, 0.41%)</title><rect x="95.5102%" y="677" width="0.4082%" height="15" fill="rgb(219,65,33)" fg:x="234" fg:w="1"/><text x="95.7602%" y="687.50"></text></g><g><title>&lt;csgoproto::netmessages::CSVCMsg_SendTable as protobuf::message::Message&gt;::merge_from (1 samples, 0.41%)</title><rect x="95.5102%" y="661" width="0.4082%" height="15" fill="rgb(243,134,7)" fg:x="234" fg:w="1"/><text x="95.7602%" y="671.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_message (1 samples, 0.41%)</title><rect x="95.5102%" y="645" width="0.4082%" height="15" fill="rgb(216,177,54)" fg:x="234" fg:w="1"/><text x="95.7602%" y="655.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::merge_message (1 samples, 0.41%)</title><rect x="95.5102%" y="629" width="0.4082%" height="15" fill="rgb(211,160,20)" fg:x="234" fg:w="1"/><text x="95.7602%" y="639.50"></text></g><g><title>&lt;csgoproto::netmessages::csvcmsg_send_table::Sendprop_t as protobuf::message::Message&gt;::merge_from (1 samples, 0.41%)</title><rect x="95.5102%" y="613" width="0.4082%" height="15" fill="rgb(239,85,39)" fg:x="234" fg:w="1"/><text x="95.7602%" y="623.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_tag_or_eof (1 samples, 0.41%)</title><rect x="95.5102%" y="597" width="0.4082%" height="15" fill="rgb(232,125,22)" fg:x="234" fg:w="1"/><text x="95.7602%" y="607.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::read_raw_varint32_or_eof (1 samples, 0.41%)</title><rect x="95.5102%" y="581" width="0.4082%" height="15" fill="rgb(244,57,34)" fg:x="234" fg:w="1"/><text x="95.7602%" y="591.50"></text></g><g><title>protobuf::coded_input_stream::CodedInputStream::eof (1 samples, 0.41%)</title><rect x="95.5102%" y="565" width="0.4082%" height="15" fill="rgb(214,203,32)" fg:x="234" fg:w="1"/><text x="95.7602%" y="575.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::eof (1 samples, 0.41%)</title><rect x="95.5102%" y="549" width="0.4082%" height="15" fill="rgb(207,58,43)" fg:x="234" fg:w="1"/><text x="95.7602%" y="559.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::fill_buf (1 samples, 0.41%)</title><rect x="95.5102%" y="533" width="0.4082%" height="15" fill="rgb(215,193,15)" fg:x="234" fg:w="1"/><text x="95.7602%" y="543.50"></text></g><g><title>protobuf::coded_input_stream::buf_read_iter::BufReadIter::pos (1 samples, 0.41%)</title><rect x="95.5102%" y="517" width="0.4082%" height="15" fill="rgb(232,15,44)" fg:x="234" fg:w="1"/><text x="95.7602%" y="527.50"></text></g><g><title>protobuf::coded_input_stream::input_buf::InputBuf::pos_within_buf (1 samples, 0.41%)</title><rect x="95.5102%" y="501" width="0.4082%" height="15" fill="rgb(212,3,48)" fg:x="234" fg:w="1"/><text x="95.7602%" y="511.50"></text></g><g><title>std::sync::condvar::Condvar::wait (5 samples, 2.04%)</title><rect x="95.9184%" y="1109" width="2.0408%" height="15" fill="rgb(218,128,7)" fg:x="235" fg:w="5"/><text x="96.1684%" y="1119.50">s..</text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (5 samples, 2.04%)</title><rect x="95.9184%" y="1093" width="2.0408%" height="15" fill="rgb(226,216,39)" fg:x="235" fg:w="5"/><text x="96.1684%" y="1103.50">s..</text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (5 samples, 2.04%)</title><rect x="95.9184%" y="1077" width="2.0408%" height="15" fill="rgb(243,47,51)" fg:x="235" fg:w="5"/><text x="96.1684%" y="1087.50">s..</text></g><g><title>std::sys::unix::futex::futex_wait (5 samples, 2.04%)</title><rect x="95.9184%" y="1061" width="2.0408%" height="15" fill="rgb(241,183,40)" fg:x="235" fg:w="5"/><text x="96.1684%" y="1071.50">s..</text></g><g><title>syscall (5 samples, 2.04%)</title><rect x="95.9184%" y="1045" width="2.0408%" height="15" fill="rgb(231,217,32)" fg:x="235" fg:w="5"/><text x="96.1684%" y="1055.50">s..</text></g><g><title>[unknown] (5 samples, 2.04%)</title><rect x="95.9184%" y="1029" width="2.0408%" height="15" fill="rgb(229,61,38)" fg:x="235" fg:w="5"/><text x="96.1684%" y="1039.50">[..</text></g><g><title>[unknown] (5 samples, 2.04%)</title><rect x="95.9184%" y="1013" width="2.0408%" height="15" fill="rgb(225,210,5)" fg:x="235" fg:w="5"/><text x="96.1684%" y="1023.50">[..</text></g><g><title>[unknown] (4 samples, 1.63%)</title><rect x="96.3265%" y="997" width="1.6327%" height="15" fill="rgb(231,79,45)" fg:x="236" fg:w="4"/><text x="96.5765%" y="1007.50"></text></g><g><title>[unknown] (4 samples, 1.63%)</title><rect x="96.3265%" y="981" width="1.6327%" height="15" fill="rgb(224,100,7)" fg:x="236" fg:w="4"/><text x="96.5765%" y="991.50"></text></g><g><title>[unknown] (4 samples, 1.63%)</title><rect x="96.3265%" y="965" width="1.6327%" height="15" fill="rgb(241,198,18)" fg:x="236" fg:w="4"/><text x="96.5765%" y="975.50"></text></g><g><title>[unknown] (3 samples, 1.22%)</title><rect x="96.7347%" y="949" width="1.2245%" height="15" fill="rgb(252,97,53)" fg:x="237" fg:w="3"/><text x="96.9847%" y="959.50"></text></g><g><title>__libc_start_main_impl (128 samples, 52.24%)</title><rect x="46.1224%" y="1413" width="52.2449%" height="15" fill="rgb(220,88,7)" fg:x="113" fg:w="128"/><text x="46.3724%" y="1423.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (128 samples, 52.24%)</title><rect x="46.1224%" y="1397" width="52.2449%" height="15" fill="rgb(213,176,14)" fg:x="113" fg:w="128"/><text x="46.3724%" y="1407.50">__libc_start_call_main</text></g><g><title>main (128 samples, 52.24%)</title><rect x="46.1224%" y="1381" width="52.2449%" height="15" fill="rgb(246,73,7)" fg:x="113" fg:w="128"/><text x="46.3724%" y="1391.50">main</text></g><g><title>std::rt::lang_start_internal (128 samples, 52.24%)</title><rect x="46.1224%" y="1365" width="52.2449%" height="15" fill="rgb(245,64,36)" fg:x="113" fg:w="128"/><text x="46.3724%" y="1375.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (128 samples, 52.24%)</title><rect x="46.1224%" y="1349" width="52.2449%" height="15" fill="rgb(245,80,10)" fg:x="113" fg:w="128"/><text x="46.3724%" y="1359.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (128 samples, 52.24%)</title><rect x="46.1224%" y="1333" width="52.2449%" height="15" fill="rgb(232,107,50)" fg:x="113" fg:w="128"/><text x="46.3724%" y="1343.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (128 samples, 52.24%)</title><rect x="46.1224%" y="1317" width="52.2449%" height="15" fill="rgb(253,3,0)" fg:x="113" fg:w="128"/><text x="46.3724%" y="1327.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (128 samples, 52.24%)</title><rect x="46.1224%" y="1301" width="52.2449%" height="15" fill="rgb(212,99,53)" fg:x="113" fg:w="128"/><text x="46.3724%" y="1311.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (128 samples, 52.24%)</title><rect x="46.1224%" y="1285" width="52.2449%" height="15" fill="rgb(249,111,54)" fg:x="113" fg:w="128"/><text x="46.3724%" y="1295.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (128 samples, 52.24%)</title><rect x="46.1224%" y="1269" width="52.2449%" height="15" fill="rgb(249,55,30)" fg:x="113" fg:w="128"/><text x="46.3724%" y="1279.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (128 samples, 52.24%)</title><rect x="46.1224%" y="1253" width="52.2449%" height="15" fill="rgb(237,47,42)" fg:x="113" fg:w="128"/><text x="46.3724%" y="1263.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (128 samples, 52.24%)</title><rect x="46.1224%" y="1237" width="52.2449%" height="15" fill="rgb(211,20,18)" fg:x="113" fg:w="128"/><text x="46.3724%" y="1247.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (128 samples, 52.24%)</title><rect x="46.1224%" y="1221" width="52.2449%" height="15" fill="rgb(231,203,46)" fg:x="113" fg:w="128"/><text x="46.3724%" y="1231.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (128 samples, 52.24%)</title><rect x="46.1224%" y="1205" width="52.2449%" height="15" fill="rgb(237,142,3)" fg:x="113" fg:w="128"/><text x="46.3724%" y="1215.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (128 samples, 52.24%)</title><rect x="46.1224%" y="1189" width="52.2449%" height="15" fill="rgb(241,107,1)" fg:x="113" fg:w="128"/><text x="46.3724%" y="1199.50">core::ops::function::FnOnce::call_once</text></g><g><title>demoparser::main (128 samples, 52.24%)</title><rect x="46.1224%" y="1173" width="52.2449%" height="15" fill="rgb(229,83,13)" fg:x="113" fg:w="128"/><text x="46.3724%" y="1183.50">demoparser::main</text></g><g><title>rayon_core::ThreadPoolBuilder&lt;S&gt;::build_global (6 samples, 2.45%)</title><rect x="95.9184%" y="1157" width="2.4490%" height="15" fill="rgb(241,91,40)" fg:x="235" fg:w="6"/><text x="96.1684%" y="1167.50">ra..</text></g><g><title>rayon_core::registry::Registry::wait_until_primed (6 samples, 2.45%)</title><rect x="95.9184%" y="1141" width="2.4490%" height="15" fill="rgb(225,3,45)" fg:x="235" fg:w="6"/><text x="96.1684%" y="1151.50">ra..</text></g><g><title>rayon_core::latch::LockLatch::wait (6 samples, 2.45%)</title><rect x="95.9184%" y="1125" width="2.4490%" height="15" fill="rgb(244,223,14)" fg:x="235" fg:w="6"/><text x="96.1684%" y="1135.50">ra..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.41%)</title><rect x="97.9592%" y="1109" width="0.4082%" height="15" fill="rgb(224,124,37)" fg:x="240" fg:w="1"/><text x="98.2092%" y="1119.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.41%)</title><rect x="97.9592%" y="1093" width="0.4082%" height="15" fill="rgb(251,171,30)" fg:x="240" fg:w="1"/><text x="98.2092%" y="1103.50"></text></g><g><title>demoparser (242 samples, 98.78%)</title><rect x="0.0000%" y="1445" width="98.7755%" height="15" fill="rgb(236,46,54)" fg:x="0" fg:w="242"/><text x="0.2500%" y="1455.50">demoparser</text></g><g><title>_start (129 samples, 52.65%)</title><rect x="46.1224%" y="1429" width="52.6531%" height="15" fill="rgb(245,213,5)" fg:x="113" fg:w="129"/><text x="46.3724%" y="1439.50">_start</text></g><g><title>_dl_start (1 samples, 0.41%)</title><rect x="98.3673%" y="1413" width="0.4082%" height="15" fill="rgb(230,144,27)" fg:x="241" fg:w="1"/><text x="98.6173%" y="1423.50"></text></g><g><title>_dl_start_final (1 samples, 0.41%)</title><rect x="98.3673%" y="1397" width="0.4082%" height="15" fill="rgb(220,86,6)" fg:x="241" fg:w="1"/><text x="98.6173%" y="1407.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.41%)</title><rect x="98.3673%" y="1381" width="0.4082%" height="15" fill="rgb(240,20,13)" fg:x="241" fg:w="1"/><text x="98.6173%" y="1391.50"></text></g><g><title>dl_main (1 samples, 0.41%)</title><rect x="98.3673%" y="1365" width="0.4082%" height="15" fill="rgb(217,89,34)" fg:x="241" fg:w="1"/><text x="98.6173%" y="1375.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.41%)</title><rect x="98.3673%" y="1349" width="0.4082%" height="15" fill="rgb(229,13,5)" fg:x="241" fg:w="1"/><text x="98.6173%" y="1359.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.41%)</title><rect x="98.3673%" y="1333" width="0.4082%" height="15" fill="rgb(244,67,35)" fg:x="241" fg:w="1"/><text x="98.6173%" y="1343.50"></text></g><g><title>openaux (1 samples, 0.41%)</title><rect x="98.3673%" y="1317" width="0.4082%" height="15" fill="rgb(221,40,2)" fg:x="241" fg:w="1"/><text x="98.6173%" y="1327.50"></text></g><g><title>_dl_map_object (1 samples, 0.41%)</title><rect x="98.3673%" y="1301" width="0.4082%" height="15" fill="rgb(237,157,21)" fg:x="241" fg:w="1"/><text x="98.6173%" y="1311.50"></text></g><g><title>all (245 samples, 100%)</title><rect x="0.0000%" y="1461" width="100.0000%" height="15" fill="rgb(222,94,11)" fg:x="0" fg:w="245"/><text x="0.2500%" y="1471.50"></text></g><g><title>perf-exec (3 samples, 1.22%)</title><rect x="98.7755%" y="1445" width="1.2245%" height="15" fill="rgb(249,113,6)" fg:x="242" fg:w="3"/><text x="99.0255%" y="1455.50"></text></g><g><title>[unknown] (3 samples, 1.22%)</title><rect x="98.7755%" y="1429" width="1.2245%" height="15" fill="rgb(238,137,36)" fg:x="242" fg:w="3"/><text x="99.0255%" y="1439.50"></text></g><g><title>[unknown] (3 samples, 1.22%)</title><rect x="98.7755%" y="1413" width="1.2245%" height="15" fill="rgb(210,102,26)" fg:x="242" fg:w="3"/><text x="99.0255%" y="1423.50"></text></g><g><title>[unknown] (3 samples, 1.22%)</title><rect x="98.7755%" y="1397" width="1.2245%" height="15" fill="rgb(218,30,30)" fg:x="242" fg:w="3"/><text x="99.0255%" y="1407.50"></text></g><g><title>[unknown] (3 samples, 1.22%)</title><rect x="98.7755%" y="1381" width="1.2245%" height="15" fill="rgb(214,67,26)" fg:x="242" fg:w="3"/><text x="99.0255%" y="1391.50"></text></g><g><title>[unknown] (3 samples, 1.22%)</title><rect x="98.7755%" y="1365" width="1.2245%" height="15" fill="rgb(251,9,53)" fg:x="242" fg:w="3"/><text x="99.0255%" y="1375.50"></text></g><g><title>[unknown] (3 samples, 1.22%)</title><rect x="98.7755%" y="1349" width="1.2245%" height="15" fill="rgb(228,204,25)" fg:x="242" fg:w="3"/><text x="99.0255%" y="1359.50"></text></g><g><title>[unknown] (3 samples, 1.22%)</title><rect x="98.7755%" y="1333" width="1.2245%" height="15" fill="rgb(207,153,8)" fg:x="242" fg:w="3"/><text x="99.0255%" y="1343.50"></text></g><g><title>[unknown] (3 samples, 1.22%)</title><rect x="98.7755%" y="1317" width="1.2245%" height="15" fill="rgb(242,9,16)" fg:x="242" fg:w="3"/><text x="99.0255%" y="1327.50"></text></g><g><title>[unknown] (3 samples, 1.22%)</title><rect x="98.7755%" y="1301" width="1.2245%" height="15" fill="rgb(217,211,10)" fg:x="242" fg:w="3"/><text x="99.0255%" y="1311.50"></text></g><g><title>[unknown] (3 samples, 1.22%)</title><rect x="98.7755%" y="1285" width="1.2245%" height="15" fill="rgb(219,228,52)" fg:x="242" fg:w="3"/><text x="99.0255%" y="1295.50"></text></g><g><title>[unknown] (3 samples, 1.22%)</title><rect x="98.7755%" y="1269" width="1.2245%" height="15" fill="rgb(231,92,29)" fg:x="242" fg:w="3"/><text x="99.0255%" y="1279.50"></text></g><g><title>[unknown] (3 samples, 1.22%)</title><rect x="98.7755%" y="1253" width="1.2245%" height="15" fill="rgb(232,8,23)" fg:x="242" fg:w="3"/><text x="99.0255%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="99.5918%" y="1237" width="0.4082%" height="15" fill="rgb(216,211,34)" fg:x="244" fg:w="1"/><text x="99.8418%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="99.5918%" y="1221" width="0.4082%" height="15" fill="rgb(236,151,0)" fg:x="244" fg:w="1"/><text x="99.8418%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="99.5918%" y="1205" width="0.4082%" height="15" fill="rgb(209,168,3)" fg:x="244" fg:w="1"/><text x="99.8418%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.41%)</title><rect x="99.5918%" y="1189" width="0.4082%" height="15" fill="rgb(208,129,28)" fg:x="244" fg:w="1"/><text x="99.8418%" y="1199.50"></text></g></svg></svg>